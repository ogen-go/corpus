{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edu-sharing/edu-sharing-community-repository"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "Backend/services/rest/api/src/main/resources/openapi.json",
			"byteSize": 795538,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"ACE\": {\n        \"properties\": {\n          \"authority\": {\n            \"$ref\": \"#/components/schemas/Authority\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"group\": {\n            \"$ref\": \"#/components/schemas/GroupProfile\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/UserProfile\"\n          }\n        },\n        \"required\": [\n          \"authority\",\n          \"permissions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ACL\": {\n        \"properties\": {\n          \"inherited\": {\n            \"type\": \"boolean\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ACE\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"inherited\",\n          \"permissions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"About\": {\n        \"properties\": {\n          \"lastCacheUpdate\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"services\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Service\"\n            },\n            \"type\": \"array\"\n          },\n          \"themesUrl\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/ServiceVersion\"\n          }\n        },\n        \"required\": [\n          \"services\",\n          \"version\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Admin\": {\n        \"properties\": {\n          \"statistics\": {\n            \"$ref\": \"#/components/schemas/Statistics\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AdminStatistics\": {\n        \"properties\": {\n          \"activeLocks\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"activeSessions\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"allocatedMemory\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"maxMemory\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"numberOfPreviews\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"previewCacheSize\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Application\": {\n        \"properties\": {\n          \"clientBaseUrl\": {\n            \"type\": \"string\"\n          },\n          \"configUrl\": {\n            \"type\": \"string\"\n          },\n          \"contentUrl\": {\n            \"type\": \"string\"\n          },\n          \"file\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"repositoryType\": {\n            \"type\": \"string\"\n          },\n          \"subtype\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"webserverUrl\": {\n            \"type\": \"string\"\n          },\n          \"xml\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Audience\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"AuthenticationToken\": {\n        \"properties\": {\n          \"ticket\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Authority\": {\n        \"properties\": {\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"authorityType\": {\n            \"enum\": [\n              \"USER\",\n              \"GROUP\",\n              \"OWNER\",\n              \"EVERYONE\",\n              \"GUEST\"\n            ],\n            \"type\": \"string\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"authorityName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AuthorityEntries\": {\n        \"properties\": {\n          \"authorities\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Authority\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"authorities\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"AvailableMds\": {\n        \"properties\": {\n          \"mds\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"repository\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Banner\": {\n        \"properties\": {\n          \"components\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"href\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheCluster\": {\n        \"properties\": {\n          \"availableProcessors\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"cacheInfos\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CacheInfo\"\n            },\n            \"type\": \"array\"\n          },\n          \"freeMemory\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"groupName\": {\n            \"type\": \"string\"\n          },\n          \"instances\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CacheMember\"\n            },\n            \"type\": \"array\"\n          },\n          \"localMember\": {\n            \"type\": \"string\"\n          },\n          \"maxMemory\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"timeStamp\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"totalMemory\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheInfo\": {\n        \"properties\": {\n          \"backupCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"backupEntryCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"backupEntryMemoryCost\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"getOwnedEntryMemoryCost\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"groupName\": {\n            \"type\": \"string\"\n          },\n          \"heapCost\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"maxSize\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"member\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"ownedEntryCount\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"size\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"sizeInMemory\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"statisticHits\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CacheMember\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Catalog\": {\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Collection\": {\n        \"properties\": {\n          \"authorFreetext\": {\n            \"type\": \"string\"\n          },\n          \"childCollectionsCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"childReferencesCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"fromUser\": {\n            \"description\": \"false\",\n            \"type\": \"boolean\"\n          },\n          \"level0\": {\n            \"description\": \"false\",\n            \"type\": \"boolean\"\n          },\n          \"orderMode\": {\n            \"type\": \"string\"\n          },\n          \"pinned\": {\n            \"type\": \"boolean\"\n          },\n          \"scope\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"viewtype\": {\n            \"type\": \"string\"\n          },\n          \"x\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"y\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"z\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"fromUser\",\n          \"level0\",\n          \"title\",\n          \"type\",\n          \"viewtype\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CollectionCounts\": {\n        \"properties\": {\n          \"collections\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Element\"\n            },\n            \"type\": \"array\"\n          },\n          \"refs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Element\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CollectionEntries\": {\n        \"properties\": {\n          \"collections\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"collections\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CollectionEntry\": {\n        \"properties\": {\n          \"collection\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          }\n        },\n        \"required\": [\n          \"collection\"\n        ],\n        \"type\": \"object\"\n      },\n      \"CollectionFeedback\": {\n        \"properties\": {\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"creator\": {\n            \"type\": \"string\"\n          },\n          \"feedback\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CollectionOptions\": {\n        \"properties\": {\n          \"privateCollections\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          },\n          \"publicCollections\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CollectionReference\": {\n        \"properties\": {\n          \"access\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"accessOriginal\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"aspects\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"collection\": {\n            \"$ref\": \"#/components/schemas/Collection\"\n          },\n          \"commentCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"downloadUrl\": {\n            \"type\": \"string\"\n          },\n          \"iconURL\": {\n            \"type\": \"string\"\n          },\n          \"isDirectory\": {\n            \"type\": \"boolean\"\n          },\n          \"license\": {\n            \"$ref\": \"#/components/schemas/License\"\n          },\n          \"mediatype\": {\n            \"type\": \"string\"\n          },\n          \"metadataset\": {\n            \"type\": \"string\"\n          },\n          \"mimetype\": {\n            \"type\": \"string\"\n          },\n          \"modifiedAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"originalId\": {\n            \"type\": \"string\"\n          },\n          \"originalRestrictedAccess\": {\n            \"type\": \"boolean\"\n          },\n          \"owner\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"parent\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"preview\": {\n            \"$ref\": \"#/components/schemas/Preview\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"rating\": {\n            \"$ref\": \"#/components/schemas/RatingDetails\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"remote\": {\n            \"$ref\": \"#/components/schemas/Remote\"\n          },\n          \"repositoryType\": {\n            \"type\": \"string\"\n          },\n          \"size\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"usedInCollections\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"access\",\n          \"collection\",\n          \"createdAt\",\n          \"createdBy\",\n          \"downloadUrl\",\n          \"name\",\n          \"owner\",\n          \"ref\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Collections\": {\n        \"properties\": {\n          \"colors\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CollectionsResult\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Comment\": {\n        \"properties\": {\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"creator\": {\n            \"$ref\": \"#/components/schemas/UserSimple\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"replyTo\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Comments\": {\n        \"properties\": {\n          \"comments\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Comment\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Condition\": {\n        \"properties\": {\n          \"negate\": {\n            \"type\": \"boolean\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"TOOLPERMISSION\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Config\": {\n        \"properties\": {\n          \"current\": {\n            \"$ref\": \"#/components/schemas/Values\"\n          },\n          \"global\": {\n            \"$ref\": \"#/components/schemas/Values\"\n          },\n          \"language\": {\n            \"$ref\": \"#/components/schemas/Language\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfigFrontpage\": {\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfigPrivacy\": {\n        \"properties\": {\n          \"cookieDisclaimer\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfigRemote\": {\n        \"properties\": {\n          \"rocketchat\": {\n            \"$ref\": \"#/components/schemas/ConfigRemoteRocketchat\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfigRemoteRocketchat\": {\n        \"type\": \"object\"\n      },\n      \"ConfigUpload\": {\n        \"properties\": {\n          \"postDialog\": {\n            \"enum\": [\n              \"SimpleEdit\",\n              \"Mds\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfigWorkflow\": {\n        \"properties\": {\n          \"commentRequired\": {\n            \"type\": \"boolean\"\n          },\n          \"defaultReceiver\": {\n            \"type\": \"string\"\n          },\n          \"defaultStatus\": {\n            \"type\": \"string\"\n          },\n          \"workflows\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ConfigWorkflowList\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConfigWorkflowList\": {\n        \"properties\": {\n          \"color\": {\n            \"type\": \"string\"\n          },\n          \"hasReceiver\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"next\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Connector\": {\n        \"properties\": {\n          \"filetypes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ConnectorFileType\"\n            },\n            \"type\": \"array\"\n          },\n          \"hasViewMode\": {\n            \"type\": \"boolean\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"onlyDesktop\": {\n            \"type\": \"boolean\"\n          },\n          \"parameters\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"showNew\": {\n            \"description\": \"false\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"showNew\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ConnectorFileType\": {\n        \"properties\": {\n          \"ccresourcesubtype\": {\n            \"type\": \"string\"\n          },\n          \"ccressourcetype\": {\n            \"type\": \"string\"\n          },\n          \"ccressourceversion\": {\n            \"type\": \"string\"\n          },\n          \"creatable\": {\n            \"type\": \"boolean\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"editorType\": {\n            \"type\": \"string\"\n          },\n          \"filetype\": {\n            \"type\": \"string\"\n          },\n          \"mimetype\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ConnectorList\": {\n        \"properties\": {\n          \"connectors\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Connector\"\n            },\n            \"type\": \"array\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Content\": {\n        \"properties\": {\n          \"hash\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ContextMenuEntry\": {\n        \"properties\": {\n          \"ajax\": {\n            \"type\": \"boolean\"\n          },\n          \"changeStrategy\": {\n            \"enum\": [\n              \"update\",\n              \"remove\"\n            ],\n            \"type\": \"string\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"isDirectory\": {\n            \"type\": \"boolean\"\n          },\n          \"isDisabled\": {\n            \"type\": \"boolean\"\n          },\n          \"isSeparate\": {\n            \"type\": \"boolean\"\n          },\n          \"isSeparateBottom\": {\n            \"type\": \"boolean\"\n          },\n          \"mode\": {\n            \"type\": \"string\"\n          },\n          \"multiple\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"onlyDesktop\": {\n            \"type\": \"boolean\"\n          },\n          \"onlyWeb\": {\n            \"type\": \"boolean\"\n          },\n          \"openInNew\": {\n            \"type\": \"boolean\"\n          },\n          \"permission\": {\n            \"type\": \"string\"\n          },\n          \"position\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"scopes\": {\n            \"items\": {\n              \"enum\": [\n                \"Render\",\n                \"Search\",\n                \"CollectionsReferences\",\n                \"CollectionsCollection\",\n                \"WorkspaceList\",\n                \"WorkspaceTree\",\n                \"Oer\",\n                \"CreateMenu\"\n              ],\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"showAsAction\": {\n            \"type\": \"boolean\"\n          },\n          \"toolpermission\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Counts\": {\n        \"properties\": {\n          \"elements\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Element\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Create\": {\n        \"properties\": {\n          \"onlyMetadata\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CreateUsage\": {\n        \"properties\": {\n          \"appId\": {\n            \"type\": \"string\"\n          },\n          \"courseId\": {\n            \"type\": \"string\"\n          },\n          \"nodeId\": {\n            \"type\": \"string\"\n          },\n          \"nodeVersion\": {\n            \"type\": \"string\"\n          },\n          \"resourceId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DeleteOption\": {\n        \"properties\": {\n          \"delete\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"DynamicConfig\": {\n        \"properties\": {\n          \"nodeId\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Element\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ErrorResponse\": {\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"logLevel\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"stacktrace\": {\n            \"type\": \"string\",\n            \"writeOnly\": true\n          },\n          \"stacktraceArray\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"error\",\n          \"message\",\n          \"stacktraceArray\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ExcelResult\": {\n        \"properties\": {\n          \"rows\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Facet\": {\n        \"properties\": {\n          \"property\": {\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Value\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"property\",\n          \"values\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Filter\": {\n        \"properties\": {\n          \"entries\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FilterEntry\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"entries\"\n        ],\n        \"type\": \"object\"\n      },\n      \"FilterEntry\": {\n        \"properties\": {\n          \"property\": {\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"property\",\n          \"values\"\n        ],\n        \"type\": \"object\"\n      },\n      \"FontIcon\": {\n        \"properties\": {\n          \"original\": {\n            \"type\": \"string\"\n          },\n          \"replace\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Frontpage\": {\n        \"properties\": {\n          \"collection\": {\n            \"type\": \"string\"\n          },\n          \"displayCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"mode\": {\n            \"enum\": [\n              \"collection\",\n              \"rating\",\n              \"views\",\n              \"downloads\"\n            ],\n            \"type\": \"string\"\n          },\n          \"queries\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Query\"\n            },\n            \"type\": \"array\"\n          },\n          \"timespan\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"timespanAll\": {\n            \"type\": \"boolean\"\n          },\n          \"totalCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"General\": {\n        \"properties\": {\n          \"referencedInInstance\": {\n            \"type\": \"string\"\n          },\n          \"referencedInName\": {\n            \"type\": \"string\"\n          },\n          \"referencedInType\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Geo\": {\n        \"properties\": {\n          \"addressCountry\": {\n            \"type\": \"string\"\n          },\n          \"latitude\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"longitude\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Group\": {\n        \"properties\": {\n          \"aspects\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"authorityType\": {\n            \"enum\": [\n              \"USER\",\n              \"GROUP\",\n              \"OWNER\",\n              \"EVERYONE\",\n              \"GUEST\"\n            ],\n            \"type\": \"string\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"groupName\": {\n            \"type\": \"string\"\n          },\n          \"organizations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Organization\"\n            },\n            \"type\": \"array\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/GroupProfile\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"signupMethod\": {\n            \"enum\": [\n              \"simple\",\n              \"password\",\n              \"list\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"authorityName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"GroupEntries\": {\n        \"properties\": {\n          \"groups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Group\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"groups\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"GroupEntry\": {\n        \"properties\": {\n          \"group\": {\n            \"$ref\": \"#/components/schemas/Group\"\n          }\n        },\n        \"required\": [\n          \"group\"\n        ],\n        \"type\": \"object\"\n      },\n      \"GroupProfile\": {\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"groupEmail\": {\n            \"type\": \"string\"\n          },\n          \"groupType\": {\n            \"type\": \"string\"\n          },\n          \"scopeType\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"GroupSignupDetails\": {\n        \"properties\": {\n          \"signupMethod\": {\n            \"enum\": [\n              \"simple\",\n              \"password\",\n              \"list\"\n            ],\n            \"type\": \"string\"\n          },\n          \"signupPassword\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Guest\": {\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"HelpMenuOptions\": {\n        \"properties\": {\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"HomeFolderOptions\": {\n        \"properties\": {\n          \"ccFiles\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          },\n          \"folders\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          },\n          \"keepFolderStructure\": {\n            \"type\": \"boolean\"\n          },\n          \"privateFiles\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Icon\": {\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Image\": {\n        \"properties\": {\n          \"replace\": {\n            \"type\": \"string\"\n          },\n          \"src\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Interface\": {\n        \"properties\": {\n          \"documentation\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"enum\": [\n              \"Json\",\n              \"XML\",\n              \"Text\"\n            ],\n            \"type\": \"string\"\n          },\n          \"metadataPrefix\": {\n            \"type\": \"string\"\n          },\n          \"set\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"Search\",\n              \"Sitemap\",\n              \"Statistics\",\n              \"OAI\",\n              \"Generic_Api\"\n            ],\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Job\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"status\"\n        ],\n        \"type\": \"object\"\n      },\n      \"JobDataMap\": {\n        \"additionalProperties\": {\n          \"type\": \"object\"\n        },\n        \"properties\": {\n          \"allowsTransientData\": {\n            \"type\": \"boolean\"\n          },\n          \"dirty\": {\n            \"type\": \"boolean\"\n          },\n          \"empty\": {\n            \"type\": \"boolean\"\n          },\n          \"keys\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"wrappedMap\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"JobDescription\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"params\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/JobFieldDescription\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"JobDetail\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"durability\": {\n            \"type\": \"boolean\",\n            \"writeOnly\": true\n          },\n          \"durable\": {\n            \"type\": \"boolean\"\n          },\n          \"fullName\": {\n            \"type\": \"string\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"jobDataMap\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"properties\": {\n              \"allowsTransientData\": {\n                \"type\": \"boolean\"\n              },\n              \"dirty\": {\n                \"type\": \"boolean\"\n              },\n              \"empty\": {\n                \"type\": \"boolean\"\n              },\n              \"keys\": {\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              },\n              \"wrappedMap\": {\n                \"additionalProperties\": {\n                  \"type\": \"object\"\n                },\n                \"type\": \"object\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"jobListenerNames\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"key\": {\n            \"$ref\": \"#/components/schemas/Key\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"requestsRecovery\": {\n            \"type\": \"boolean\",\n            \"writeOnly\": true\n          },\n          \"stateful\": {\n            \"type\": \"boolean\"\n          },\n          \"volatile\": {\n            \"type\": \"boolean\"\n          },\n          \"volatility\": {\n            \"type\": \"boolean\",\n            \"writeOnly\": true\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"JobEntry\": {\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Job\"\n          }\n        },\n        \"required\": [\n          \"data\"\n        ],\n        \"type\": \"object\"\n      },\n      \"JobFieldDescription\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"file\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"sampleValue\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"JobInfo\": {\n        \"properties\": {\n          \"finishTime\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"jobDetail\": {\n            \"$ref\": \"#/components/schemas/JobDetail\"\n          },\n          \"log\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LogEntry\"\n            },\n            \"type\": \"array\"\n          },\n          \"startTime\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"enum\": [\n              \"Running\",\n              \"Failed\",\n              \"Aborted\",\n              \"Finished\"\n            ],\n            \"type\": \"string\"\n          },\n          \"worstLevel\": {\n            \"$ref\": \"#/components/schemas/Level\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Key\": {\n        \"properties\": {\n          \"first\": {\n            \"type\": \"object\"\n          },\n          \"group\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"second\": {\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"KeyValuePair\": {\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"xml\": {\n              \"attribute\": true\n            }\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Language\": {\n        \"properties\": {\n          \"current\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"currentLanguage\": {\n            \"type\": \"string\"\n          },\n          \"global\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Level\": {\n        \"properties\": {\n          \"syslogEquivalent\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"License\": {\n        \"properties\": {\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LicenseAgreement\": {\n        \"properties\": {\n          \"nodeId\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LicenseAgreementNode\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LicenseAgreementNode\": {\n        \"properties\": {\n          \"language\": {\n            \"type\": \"string\",\n            \"xml\": {\n              \"attribute\": true\n            }\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Licenses\": {\n        \"properties\": {\n          \"repository\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"services\": {\n            \"additionalProperties\": {\n              \"additionalProperties\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Location\": {\n        \"properties\": {\n          \"geo\": {\n            \"$ref\": \"#/components/schemas/Geo\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"LogEntry\": {\n        \"properties\": {\n          \"className\": {\n            \"type\": \"string\"\n          },\n          \"date\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"level\": {\n            \"$ref\": \"#/components/schemas/Level\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Login\": {\n        \"properties\": {\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"currentScope\": {\n            \"type\": \"string\"\n          },\n          \"isAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"isGuest\": {\n            \"type\": \"boolean\"\n          },\n          \"isValidLogin\": {\n            \"type\": \"boolean\"\n          },\n          \"remoteAuthentications\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/RemoteAuthDescription\"\n            },\n            \"type\": \"object\"\n          },\n          \"sessionTimeout\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"statusCode\": {\n            \"type\": \"string\"\n          },\n          \"toolPermissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"userHome\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"currentScope\",\n          \"isAdmin\",\n          \"isGuest\",\n          \"isValidLogin\",\n          \"sessionTimeout\"\n        ],\n        \"type\": \"object\"\n      },\n      \"LoginCredentials\": {\n        \"properties\": {\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"scope\": {\n            \"type\": \"string\"\n          },\n          \"userName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"password\",\n          \"scope\",\n          \"userName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"LogoutInfo\": {\n        \"properties\": {\n          \"ajax\": {\n            \"type\": \"boolean\"\n          },\n          \"destroySession\": {\n            \"type\": \"boolean\"\n          },\n          \"next\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Mainnav\": {\n        \"properties\": {\n          \"icon\": {\n            \"$ref\": \"#/components/schemas/Icon\"\n          },\n          \"mainMenuStyle\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"McOrgConnectResult\": {\n        \"properties\": {\n          \"rows\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Mds\": {\n        \"properties\": {\n          \"create\": {\n            \"$ref\": \"#/components/schemas/Create\"\n          },\n          \"groups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsGroup\"\n            },\n            \"type\": \"array\"\n          },\n          \"lists\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsList\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"sorts\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsSort\"\n            },\n            \"type\": \"array\"\n          },\n          \"views\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsView\"\n            },\n            \"type\": \"array\"\n          },\n          \"widgets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsWidget\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"groups\",\n          \"lists\",\n          \"name\",\n          \"sorts\",\n          \"views\",\n          \"widgets\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsColumn\": {\n        \"properties\": {\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"showDefault\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MdsEntries\": {\n        \"properties\": {\n          \"metadatasets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MetadataSetInfo\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"metadatasets\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsGroup\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"rendering\": {\n            \"enum\": [\n              \"legacy\",\n              \"angular\"\n            ],\n            \"type\": \"string\"\n          },\n          \"views\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MdsList\": {\n        \"properties\": {\n          \"columns\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsColumn\"\n            },\n            \"type\": \"array\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MdsQueryCriteria\": {\n        \"properties\": {\n          \"property\": {\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"property\",\n          \"values\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsSort\": {\n        \"properties\": {\n          \"columns\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsSortColumn\"\n            },\n            \"type\": \"array\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/schemas/MdsSortDefault\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsSortColumn\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"mode\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsSortDefault\": {\n        \"properties\": {\n          \"sortAscending\": {\n            \"type\": \"boolean\"\n          },\n          \"sortBy\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"sortAscending\",\n          \"sortBy\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsSubwidget\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MdsValue\": {\n        \"properties\": {\n          \"caption\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MdsView\": {\n        \"properties\": {\n          \"caption\": {\n            \"type\": \"string\"\n          },\n          \"hideIfEmpty\": {\n            \"type\": \"boolean\"\n          },\n          \"html\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"isExtended\": {\n            \"type\": \"boolean\"\n          },\n          \"rel\": {\n            \"enum\": [\n              \"suggestions\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MdsWidget\": {\n        \"properties\": {\n          \"allowempty\": {\n            \"type\": \"boolean\"\n          },\n          \"bottomCaption\": {\n            \"type\": \"string\"\n          },\n          \"caption\": {\n            \"type\": \"string\"\n          },\n          \"condition\": {\n            \"$ref\": \"#/components/schemas/MdsWidgetCondition\"\n          },\n          \"defaultMax\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"defaultMin\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"defaultvalue\": {\n            \"type\": \"string\"\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"hasValues\": {\n            \"type\": \"boolean\"\n          },\n          \"hideIfEmpty\": {\n            \"type\": \"boolean\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"isExtended\": {\n            \"type\": \"boolean\"\n          },\n          \"isRequired\": {\n            \"enum\": [\n              \"mandatory\",\n              \"mandatoryForPublish\",\n              \"optional\",\n              \"ignore\"\n            ],\n            \"type\": \"string\"\n          },\n          \"isSearchable\": {\n            \"type\": \"boolean\"\n          },\n          \"link\": {\n            \"type\": \"string\"\n          },\n          \"max\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"maxlength\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"min\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"placeholder\": {\n            \"type\": \"string\"\n          },\n          \"required\": {\n            \"enum\": [\n              \"mandatory\",\n              \"mandatoryForPublish\",\n              \"optional\",\n              \"ignore\"\n            ],\n            \"type\": \"string\",\n            \"writeOnly\": true\n          },\n          \"step\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"subwidgets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsSubwidget\"\n            },\n            \"type\": \"array\"\n          },\n          \"template\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"unit\": {\n            \"type\": \"string\"\n          },\n          \"values\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsValue\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MdsWidgetCondition\": {\n        \"properties\": {\n          \"dynamic\": {\n            \"type\": \"boolean\"\n          },\n          \"negate\": {\n            \"type\": \"boolean\"\n          },\n          \"pattern\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"PROPERTY\",\n              \"TOOLPERMISSION\"\n            ],\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"dynamic\",\n          \"negate\",\n          \"type\",\n          \"value\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Mediacenter\": {\n        \"properties\": {\n          \"administrationAccess\": {\n            \"type\": \"boolean\"\n          },\n          \"aspects\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"authorityType\": {\n            \"enum\": [\n              \"USER\",\n              \"GROUP\",\n              \"OWNER\",\n              \"EVERYONE\",\n              \"GUEST\"\n            ],\n            \"type\": \"string\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"groupName\": {\n            \"type\": \"string\"\n          },\n          \"organizations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Organization\"\n            },\n            \"type\": \"array\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/GroupProfile\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"signupMethod\": {\n            \"enum\": [\n              \"simple\",\n              \"password\",\n              \"list\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"authorityName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"MediacenterProfileExtension\": {\n        \"properties\": {\n          \"catalogs\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Catalog\"\n            },\n            \"type\": \"array\"\n          },\n          \"contentStatus\": {\n            \"enum\": [\n              \"Activated\",\n              \"Deactivated\"\n            ],\n            \"type\": \"string\"\n          },\n          \"districtAbbreviation\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"mainUrl\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MediacentersImportResult\": {\n        \"properties\": {\n          \"rows\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MenuEntry\": {\n        \"properties\": {\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"isDisabled\": {\n            \"type\": \"boolean\"\n          },\n          \"isSeparate\": {\n            \"type\": \"boolean\"\n          },\n          \"isSeparateBottom\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"onlyDesktop\": {\n            \"type\": \"boolean\"\n          },\n          \"onlyWeb\": {\n            \"type\": \"boolean\"\n          },\n          \"openInNew\": {\n            \"type\": \"boolean\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"position\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"scope\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"MetadataSetInfo\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Node\": {\n        \"properties\": {\n          \"access\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"aspects\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"collection\": {\n            \"$ref\": \"#/components/schemas/Collection\"\n          },\n          \"commentCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/Content\"\n          },\n          \"createdAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"createdBy\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"downloadUrl\": {\n            \"type\": \"string\"\n          },\n          \"iconURL\": {\n            \"type\": \"string\"\n          },\n          \"isDirectory\": {\n            \"type\": \"boolean\"\n          },\n          \"license\": {\n            \"$ref\": \"#/components/schemas/License\"\n          },\n          \"mediatype\": {\n            \"type\": \"string\"\n          },\n          \"metadataset\": {\n            \"type\": \"string\"\n          },\n          \"mimetype\": {\n            \"type\": \"string\"\n          },\n          \"modifiedAt\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"owner\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"parent\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"preview\": {\n            \"$ref\": \"#/components/schemas/Preview\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"rating\": {\n            \"$ref\": \"#/components/schemas/RatingDetails\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"remote\": {\n            \"$ref\": \"#/components/schemas/Remote\"\n          },\n          \"repositoryType\": {\n            \"type\": \"string\"\n          },\n          \"size\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"usedInCollections\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"access\",\n          \"collection\",\n          \"createdAt\",\n          \"createdBy\",\n          \"downloadUrl\",\n          \"name\",\n          \"owner\",\n          \"ref\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeData\": {\n        \"properties\": {\n          \"counts\": {\n            \"additionalProperties\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"object\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NodeEntries\": {\n        \"properties\": {\n          \"nodes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"nodes\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeEntry\": {\n        \"properties\": {\n          \"node\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          }\n        },\n        \"required\": [\n          \"node\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeLocked\": {\n        \"properties\": {\n          \"isLocked\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"isLocked\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodePermissionEntry\": {\n        \"properties\": {\n          \"permissions\": {\n            \"$ref\": \"#/components/schemas/NodePermissions\"\n          }\n        },\n        \"required\": [\n          \"permissions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodePermissions\": {\n        \"properties\": {\n          \"inheritedPermissions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ACE\"\n            },\n            \"type\": \"array\"\n          },\n          \"localPermissions\": {\n            \"$ref\": \"#/components/schemas/ACL\"\n          }\n        },\n        \"required\": [\n          \"inheritedPermissions\",\n          \"localPermissions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeRef\": {\n        \"properties\": {\n          \"archived\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"isHomeRepo\": {\n            \"type\": \"boolean\"\n          },\n          \"repo\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"archived\",\n          \"id\",\n          \"repo\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeRemote\": {\n        \"properties\": {\n          \"node\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          },\n          \"remote\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          }\n        },\n        \"required\": [\n          \"node\",\n          \"remote\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeShare\": {\n        \"properties\": {\n          \"downloadCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"expiryDate\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"invitedAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"password\": {\n            \"type\": \"boolean\"\n          },\n          \"shareId\": {\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NodeText\": {\n        \"properties\": {\n          \"html\": {\n            \"type\": \"string\"\n          },\n          \"raw\": {\n            \"type\": \"string\"\n          },\n          \"text\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"NodeVersion\": {\n        \"properties\": {\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"contentUrl\": {\n            \"type\": \"string\"\n          },\n          \"modifiedAt\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/NodeVersionRef\"\n          }\n        },\n        \"required\": [\n          \"comment\",\n          \"modifiedAt\",\n          \"modifiedBy\",\n          \"version\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeVersionEntry\": {\n        \"properties\": {\n          \"version\": {\n            \"$ref\": \"#/components/schemas/NodeVersion\"\n          }\n        },\n        \"required\": [\n          \"version\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeVersionRef\": {\n        \"properties\": {\n          \"major\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"minor\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"node\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          }\n        },\n        \"required\": [\n          \"major\",\n          \"minor\",\n          \"node\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NodeVersionRefEntries\": {\n        \"properties\": {\n          \"versions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NodeVersionRef\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"versions\"\n        ],\n        \"type\": \"object\"\n      },\n      \"NotifyEntry\": {\n        \"properties\": {\n          \"action\": {\n            \"type\": \"string\"\n          },\n          \"date\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"permissions\": {\n            \"$ref\": \"#/components/schemas/ACL\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"required\": [\n          \"action\",\n          \"date\",\n          \"permissions\",\n          \"user\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrganisationsImportResult\": {\n        \"properties\": {\n          \"rows\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Organization\": {\n        \"properties\": {\n          \"administrationAccess\": {\n            \"type\": \"boolean\"\n          },\n          \"aspects\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"authorityType\": {\n            \"enum\": [\n              \"USER\",\n              \"GROUP\",\n              \"OWNER\",\n              \"EVERYONE\",\n              \"GUEST\"\n            ],\n            \"type\": \"string\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"groupName\": {\n            \"type\": \"string\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/GroupProfile\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"ref\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"sharedFolder\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"signupMethod\": {\n            \"enum\": [\n              \"simple\",\n              \"password\",\n              \"list\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"authorityName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"OrganizationEntries\": {\n        \"properties\": {\n          \"canCreate\": {\n            \"type\": \"boolean\"\n          },\n          \"organizations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Organization\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"organizations\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Pagination\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"from\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"total\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"count\",\n          \"from\",\n          \"total\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Parameters\": {\n        \"properties\": {\n          \"general\": {\n            \"$ref\": \"#/components/schemas/General\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"usage\"\n        }\n      },\n      \"ParentEntries\": {\n        \"properties\": {\n          \"nodes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"scope\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"nodes\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Person\": {\n        \"properties\": {\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"mailbox\": {\n            \"type\": \"string\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/UserProfile\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PersonDeleteOptions\": {\n        \"properties\": {\n          \"cleanupMetadata\": {\n            \"type\": \"boolean\"\n          },\n          \"collectionFeedback\": {\n            \"$ref\": \"#/components/schemas/DeleteOption\"\n          },\n          \"collections\": {\n            \"$ref\": \"#/components/schemas/CollectionOptions\"\n          },\n          \"comments\": {\n            \"$ref\": \"#/components/schemas/DeleteOption\"\n          },\n          \"homeFolder\": {\n            \"$ref\": \"#/components/schemas/HomeFolderOptions\"\n          },\n          \"ratings\": {\n            \"$ref\": \"#/components/schemas/DeleteOption\"\n          },\n          \"receiver\": {\n            \"type\": \"string\"\n          },\n          \"receiverGroup\": {\n            \"type\": \"string\"\n          },\n          \"sharedFolders\": {\n            \"$ref\": \"#/components/schemas/SharedFolderOptions\"\n          },\n          \"statistics\": {\n            \"$ref\": \"#/components/schemas/DeleteOption\"\n          },\n          \"stream\": {\n            \"$ref\": \"#/components/schemas/DeleteOption\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PersonDeleteResult\": {\n        \"properties\": {\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"collectionFeedback\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"collections\": {\n            \"$ref\": \"#/components/schemas/CollectionCounts\"\n          },\n          \"comments\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"deletedName\": {\n            \"type\": \"string\"\n          },\n          \"homeFolder\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Counts\"\n            },\n            \"type\": \"object\"\n          },\n          \"ratings\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"sharedFolders\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/Counts\"\n            },\n            \"type\": \"object\"\n          },\n          \"stream\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PersonReport\": {\n        \"properties\": {\n          \"options\": {\n            \"$ref\": \"#/components/schemas/PersonDeleteOptions\"\n          },\n          \"results\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PersonDeleteResult\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"PluginStatus\": {\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Preferences\": {\n        \"properties\": {\n          \"preferences\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Preview\": {\n        \"properties\": {\n          \"data\": {\n            \"items\": {\n              \"format\": \"byte\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"height\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"isGenerated\": {\n            \"type\": \"boolean\"\n          },\n          \"isIcon\": {\n            \"type\": \"boolean\"\n          },\n          \"mimetype\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"width\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"height\",\n          \"isIcon\",\n          \"url\",\n          \"width\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Profile\": {\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"groupEmail\": {\n            \"type\": \"string\"\n          },\n          \"groupType\": {\n            \"type\": \"string\"\n          },\n          \"mediacenter\": {\n            \"$ref\": \"#/components/schemas/MediacenterProfileExtension\"\n          },\n          \"scopeType\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ProfileSettings\": {\n        \"properties\": {\n          \"showEmail\": {\n            \"description\": \"false\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"showEmail\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Provider\": {\n        \"properties\": {\n          \"areaServed\": {\n            \"enum\": [\n              \"Organization\",\n              \"City\",\n              \"State\",\n              \"Country\",\n              \"Continent\",\n              \"World\"\n            ],\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"legalName\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"$ref\": \"#/components/schemas/Location\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Query\": {\n        \"properties\": {\n          \"condition\": {\n            \"$ref\": \"#/components/schemas/Condition\"\n          },\n          \"query\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RatingData\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"rating\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          },\n          \"sum\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RatingDetails\": {\n        \"properties\": {\n          \"affiliation\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/RatingData\"\n            },\n            \"type\": \"object\"\n          },\n          \"overall\": {\n            \"$ref\": \"#/components/schemas/RatingData\"\n          },\n          \"user\": {\n            \"format\": \"double\",\n            \"type\": \"number\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ReferenceEntries\": {\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"references\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CollectionReference\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"references\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Register\": {\n        \"properties\": {\n          \"local\": {\n            \"type\": \"boolean\"\n          },\n          \"loginUrl\": {\n            \"type\": \"string\"\n          },\n          \"recoverPassword\": {\n            \"type\": \"boolean\"\n          },\n          \"recoverUrl\": {\n            \"type\": \"string\"\n          },\n          \"requiredFields\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RegisterExists\": {\n        \"properties\": {\n          \"exists\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RegisterInformation\": {\n        \"properties\": {\n          \"allowNotifications\": {\n            \"type\": \"boolean\"\n          },\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"organization\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Remote\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"repository\": {\n            \"$ref\": \"#/components/schemas/Repo\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RemoteAuthDescription\": {\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Rendering\": {\n        \"properties\": {\n          \"prerender\": {\n            \"type\": \"boolean\"\n          },\n          \"showDownloadButton\": {\n            \"type\": \"boolean\"\n          },\n          \"showPreview\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RenderingDetailsEntry\": {\n        \"properties\": {\n          \"detailsSnippet\": {\n            \"type\": \"string\"\n          },\n          \"mimeType\": {\n            \"type\": \"string\"\n          },\n          \"node\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          }\n        },\n        \"required\": [\n          \"detailsSnippet\",\n          \"mimeType\",\n          \"node\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Repo\": {\n        \"properties\": {\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"isHomeRepo\": {\n            \"type\": \"boolean\"\n          },\n          \"logo\": {\n            \"type\": \"string\"\n          },\n          \"renderingSupported\": {\n            \"type\": \"boolean\"\n          },\n          \"repositoryType\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RepoEntries\": {\n        \"properties\": {\n          \"repositories\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Repo\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"repositories\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RepositoryConfig\": {\n        \"properties\": {\n          \"frontpage\": {\n            \"$ref\": \"#/components/schemas/Frontpage\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RepositoryVersionInfo\": {\n        \"properties\": {\n          \"git\": {\n            \"$ref\": \"#/components/schemas/VersionGit\"\n          },\n          \"maven\": {\n            \"$ref\": \"#/components/schemas/VersionMaven\"\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/Version\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RestoreResult\": {\n        \"properties\": {\n          \"archiveNodeId\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"nodeId\": {\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"restoreStatus\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"archiveNodeId\",\n          \"name\",\n          \"nodeId\",\n          \"parent\",\n          \"path\",\n          \"restoreStatus\"\n        ],\n        \"type\": \"object\"\n      },\n      \"RestoreResults\": {\n        \"properties\": {\n          \"results\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RestoreResult\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"results\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SearchParameters\": {\n        \"properties\": {\n          \"criteria\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsQueryCriteria\"\n            },\n            \"type\": \"array\"\n          },\n          \"excludes\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"facets\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"permissions\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"resolveCollections\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"criteria\",\n          \"facets\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SearchResult\": {\n        \"properties\": {\n          \"facets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Facet\"\n            },\n            \"type\": \"array\"\n          },\n          \"nodes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"facets\",\n          \"nodes\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SearchResultElastic\": {\n        \"properties\": {\n          \"elasticResponse\": {\n            \"type\": \"string\"\n          },\n          \"facets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Facet\"\n            },\n            \"type\": \"array\"\n          },\n          \"ignored\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"nodes\": {\n            \"items\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"facets\",\n          \"nodes\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SearchResultNode\": {\n        \"properties\": {\n          \"facets\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Facet\"\n            },\n            \"type\": \"array\"\n          },\n          \"ignored\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"nodes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"facets\",\n          \"nodes\",\n          \"pagination\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SearchVCard\": {\n        \"properties\": {\n          \"vcard\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ServerUpdateInfo\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"executedAt\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Service\": {\n        \"properties\": {\n          \"about\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"audience\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Audience\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"inLanguage\": {\n            \"type\": \"string\"\n          },\n          \"interfaces\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Interface\"\n            },\n            \"type\": \"array\"\n          },\n          \"isAccessibleForFree\": {\n            \"type\": \"boolean\"\n          },\n          \"logo\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/Provider\"\n          },\n          \"startDate\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"ServiceInstance\": {\n        \"properties\": {\n          \"endpoint\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"$ref\": \"#/components/schemas/ServiceVersion\"\n          }\n        },\n        \"required\": [\n          \"endpoint\",\n          \"version\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ServiceVersion\": {\n        \"properties\": {\n          \"major\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"minor\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"renderservice\": {\n            \"type\": \"string\"\n          },\n          \"repository\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"major\",\n          \"minor\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Services\": {\n        \"properties\": {\n          \"visualization\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SessionExpiredDialog\": {\n        \"type\": \"object\"\n      },\n      \"SharedFolderOptions\": {\n        \"properties\": {\n          \"ccFiles\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          },\n          \"folders\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          },\n          \"move\": {\n            \"type\": \"boolean\"\n          },\n          \"privateFiles\": {\n            \"enum\": [\n              \"none\",\n              \"assign\",\n              \"delete\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SharingInfo\": {\n        \"properties\": {\n          \"expired\": {\n            \"type\": \"boolean\"\n          },\n          \"invitedBy\": {\n            \"$ref\": \"#/components/schemas/Person\"\n          },\n          \"node\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          },\n          \"password\": {\n            \"type\": \"boolean\"\n          },\n          \"passwordMatches\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SimpleEdit\": {\n        \"properties\": {\n          \"globalGroups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SimpleEditGlobalGroups\"\n            },\n            \"type\": \"array\"\n          },\n          \"licenses\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"organization\": {\n            \"$ref\": \"#/components/schemas/SimpleEditOrganization\"\n          },\n          \"organizationFilter\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SimpleEditGlobalGroups\": {\n        \"properties\": {\n          \"groups\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"toolpermission\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SimpleEditOrganization\": {\n        \"properties\": {\n          \"groupTypes\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StatisticEntity\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"count\",\n          \"value\"\n        ],\n        \"type\": \"object\"\n      },\n      \"StatisticEntry\": {\n        \"properties\": {\n          \"entities\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StatisticEntity\"\n            },\n            \"type\": \"array\"\n          },\n          \"property\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"entities\",\n          \"property\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Statistics\": {\n        \"properties\": {\n          \"entries\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StatisticEntry\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"entries\"\n        ],\n        \"type\": \"object\"\n      },\n      \"StatisticsGlobal\": {\n        \"properties\": {\n          \"groups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StatisticsKeyGroup\"\n            },\n            \"type\": \"array\"\n          },\n          \"overall\": {\n            \"$ref\": \"#/components/schemas/StatisticsGroup\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/StatisticsUser\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StatisticsGroup\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"subGroups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StatisticsSubGroup\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StatisticsKeyGroup\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"subGroups\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StatisticsSubGroup\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StatisticsSubGroup\": {\n        \"properties\": {\n          \"count\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SubGroupItem\"\n            },\n            \"type\": \"array\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StatisticsUser\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StoredService\": {\n        \"properties\": {\n          \"about\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"audience\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Audience\"\n            },\n            \"type\": \"array\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"icon\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"inLanguage\": {\n            \"type\": \"string\"\n          },\n          \"interfaces\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Interface\"\n            },\n            \"type\": \"array\"\n          },\n          \"isAccessibleForFree\": {\n            \"type\": \"boolean\"\n          },\n          \"logo\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/Provider\"\n          },\n          \"startDate\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Stream\": {\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StreamEntry\": {\n        \"properties\": {\n          \"author\": {\n            \"$ref\": \"#/components/schemas/UserSimple\"\n          },\n          \"created\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"modified\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"nodes\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            },\n            \"type\": \"array\"\n          },\n          \"priority\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StreamEntryInput\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"nodes\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"priority\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"StreamList\": {\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"stream\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/StreamEntry\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"SubGroupItem\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Suggestion\": {\n        \"properties\": {\n          \"displayString\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"replacementString\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"displayString\",\n          \"replacementString\"\n        ],\n        \"type\": \"object\"\n      },\n      \"SuggestionParam\": {\n        \"properties\": {\n          \"criteria\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MdsQueryCriteria\"\n            },\n            \"type\": \"array\"\n          },\n          \"valueParameters\": {\n            \"$ref\": \"#/components/schemas/ValueParameters\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Suggestions\": {\n        \"properties\": {\n          \"values\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Suggestion\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"values\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Tracking\": {\n        \"properties\": {\n          \"authority\": {\n            \"$ref\": \"#/components/schemas/TrackingAuthority\"\n          },\n          \"counts\": {\n            \"additionalProperties\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"object\"\n          },\n          \"date\": {\n            \"type\": \"string\"\n          },\n          \"fields\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"groups\": {\n            \"additionalProperties\": {\n              \"additionalProperties\": {\n                \"additionalProperties\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"type\": \"object\"\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TrackingAuthority\": {\n        \"properties\": {\n          \"hash\": {\n            \"type\": \"string\"\n          },\n          \"mediacenter\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Group\"\n            },\n            \"type\": \"array\"\n          },\n          \"organization\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Organization\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"TrackingNode\": {\n        \"properties\": {\n          \"authority\": {\n            \"$ref\": \"#/components/schemas/TrackingAuthority\"\n          },\n          \"counts\": {\n            \"additionalProperties\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            },\n            \"type\": \"object\"\n          },\n          \"date\": {\n            \"type\": \"string\"\n          },\n          \"fields\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"groups\": {\n            \"additionalProperties\": {\n              \"additionalProperties\": {\n                \"additionalProperties\": {\n                  \"format\": \"int64\",\n                  \"type\": \"integer\"\n                },\n                \"type\": \"object\"\n              },\n              \"type\": \"object\"\n            },\n            \"type\": \"object\"\n          },\n          \"node\": {\n            \"$ref\": \"#/components/schemas/Node\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UploadResult\": {\n        \"properties\": {\n          \"file\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Usage\": {\n        \"properties\": {\n          \"appId\": {\n            \"type\": \"string\"\n          },\n          \"appSubtype\": {\n            \"type\": \"string\"\n          },\n          \"appType\": {\n            \"type\": \"string\"\n          },\n          \"appUser\": {\n            \"type\": \"string\"\n          },\n          \"appUserMail\": {\n            \"type\": \"string\"\n          },\n          \"courseId\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"distinctPersons\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"fromUsed\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"guid\": {\n            \"type\": \"string\"\n          },\n          \"modified\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"nodeId\": {\n            \"type\": \"string\"\n          },\n          \"parentNodeId\": {\n            \"type\": \"string\"\n          },\n          \"resourceId\": {\n            \"type\": \"string\"\n          },\n          \"toUsed\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"usageCounter\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"usageVersion\": {\n            \"type\": \"string\"\n          },\n          \"usageXmlParams\": {\n            \"$ref\": \"#/components/schemas/Parameters\"\n          },\n          \"usageXmlParamsRaw\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"appId\",\n          \"appUser\",\n          \"appUserMail\",\n          \"courseId\",\n          \"nodeId\",\n          \"parentNodeId\",\n          \"resourceId\",\n          \"usageVersion\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Usages\": {\n        \"properties\": {\n          \"usages\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Usage\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"User\": {\n        \"properties\": {\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"authorityType\": {\n            \"enum\": [\n              \"USER\",\n              \"GROUP\",\n              \"OWNER\",\n              \"EVERYONE\",\n              \"GUEST\"\n            ],\n            \"type\": \"string\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"homeFolder\": {\n            \"$ref\": \"#/components/schemas/NodeRef\"\n          },\n          \"organizations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Organization\"\n            },\n            \"type\": \"array\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/UserProfile\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"quota\": {\n            \"$ref\": \"#/components/schemas/UserQuota\"\n          },\n          \"sharedFolders\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NodeRef\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/UserStatus\"\n          },\n          \"userName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"authorityName\",\n          \"homeFolder\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UserCredential\": {\n        \"properties\": {\n          \"newPassword\": {\n            \"type\": \"string\"\n          },\n          \"oldPassword\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"newPassword\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UserEntries\": {\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          },\n          \"users\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/UserSimple\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"pagination\",\n          \"users\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UserEntry\": {\n        \"properties\": {\n          \"editProfile\": {\n            \"type\": \"boolean\"\n          },\n          \"person\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"required\": [\n          \"person\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UserProfile\": {\n        \"properties\": {\n          \"about\": {\n            \"type\": \"string\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"primaryAffiliation\": {\n            \"type\": \"string\"\n          },\n          \"skills\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"writeOnly\": true\n          },\n          \"types\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"vcard\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserProfileAppAuth\": {\n        \"properties\": {\n          \"about\": {\n            \"type\": \"string\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"extendedAttributes\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"primaryAffiliation\": {\n            \"type\": \"string\"\n          },\n          \"skills\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"writeOnly\": true\n          },\n          \"types\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"vcard\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserProfileEdit\": {\n        \"properties\": {\n          \"about\": {\n            \"type\": \"string\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"primaryAffiliation\": {\n            \"type\": \"string\"\n          },\n          \"sizeQuota\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"skills\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"writeOnly\": true\n          },\n          \"types\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"vcard\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserQuota\": {\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"sizeCurrent\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"sizeQuota\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserSimple\": {\n        \"properties\": {\n          \"authorityName\": {\n            \"type\": \"string\"\n          },\n          \"authorityType\": {\n            \"enum\": [\n              \"USER\",\n              \"GROUP\",\n              \"OWNER\",\n              \"EVERYONE\",\n              \"GUEST\"\n            ],\n            \"type\": \"string\"\n          },\n          \"editable\": {\n            \"type\": \"boolean\"\n          },\n          \"organizations\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Organization\"\n            },\n            \"type\": \"array\"\n          },\n          \"profile\": {\n            \"$ref\": \"#/components/schemas/UserProfile\"\n          },\n          \"properties\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"object\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/UserStatus\"\n          },\n          \"userName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"authorityName\"\n        ],\n        \"type\": \"object\"\n      },\n      \"UserStats\": {\n        \"properties\": {\n          \"collectionCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"nodeCount\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"nodeCountCC\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserStatus\": {\n        \"properties\": {\n          \"date\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"enum\": [\n              \"active\",\n              \"blocked\",\n              \"todelete\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Value\": {\n        \"properties\": {\n          \"count\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"count\",\n          \"value\"\n        ],\n        \"type\": \"object\"\n      },\n      \"ValueParameters\": {\n        \"properties\": {\n          \"pattern\": {\n            \"description\": \"prefix of the value (or \\\"-all-\\\" for all values)\",\n            \"type\": \"string\"\n          },\n          \"property\": {\n            \"type\": \"string\"\n          },\n          \"query\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"pattern\",\n          \"property\",\n          \"query\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Values\": {\n        \"properties\": {\n          \"admin\": {\n            \"$ref\": \"#/components/schemas/Admin\"\n          },\n          \"allowedLicenses\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"availableMds\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AvailableMds\"\n            },\n            \"type\": \"array\"\n          },\n          \"availableRepositories\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"banner\": {\n            \"$ref\": \"#/components/schemas/Banner\"\n          },\n          \"branding\": {\n            \"type\": \"boolean\"\n          },\n          \"collections\": {\n            \"$ref\": \"#/components/schemas/Collections\"\n          },\n          \"customCSS\": {\n            \"type\": \"string\"\n          },\n          \"customLicenses\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/License\"\n            },\n            \"type\": \"array\"\n          },\n          \"customOptions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ContextMenuEntry\"\n            },\n            \"type\": \"array\"\n          },\n          \"defaultPassword\": {\n            \"type\": \"string\"\n          },\n          \"defaultUsername\": {\n            \"type\": \"string\"\n          },\n          \"editProfile\": {\n            \"type\": \"boolean\"\n          },\n          \"editProfileUrl\": {\n            \"type\": \"string\"\n          },\n          \"extension\": {\n            \"type\": \"string\"\n          },\n          \"frontpage\": {\n            \"$ref\": \"#/components/schemas/ConfigFrontpage\"\n          },\n          \"guest\": {\n            \"$ref\": \"#/components/schemas/Guest\"\n          },\n          \"helpMenuOptions\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/HelpMenuOptions\"\n            },\n            \"type\": \"array\"\n          },\n          \"helpUrl\": {\n            \"type\": \"string\"\n          },\n          \"hideMainMenu\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"icons\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FontIcon\"\n            },\n            \"type\": \"array\"\n          },\n          \"images\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Image\"\n            },\n            \"type\": \"array\"\n          },\n          \"imprintUrl\": {\n            \"type\": \"string\"\n          },\n          \"itemsPerRequest\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"licenseAgreement\": {\n            \"$ref\": \"#/components/schemas/LicenseAgreement\"\n          },\n          \"licenseDialogOnUpload\": {\n            \"type\": \"boolean\"\n          },\n          \"loginAllowLocal\": {\n            \"type\": \"boolean\"\n          },\n          \"loginDefaultLocation\": {\n            \"type\": \"string\"\n          },\n          \"loginProviderTargetUrl\": {\n            \"type\": \"string\"\n          },\n          \"loginProvidersUrl\": {\n            \"type\": \"string\"\n          },\n          \"loginUrl\": {\n            \"type\": \"string\"\n          },\n          \"logout\": {\n            \"$ref\": \"#/components/schemas/LogoutInfo\"\n          },\n          \"mainnav\": {\n            \"$ref\": \"#/components/schemas/Mainnav\"\n          },\n          \"menuEntries\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MenuEntry\"\n            },\n            \"type\": \"array\"\n          },\n          \"nodeReport\": {\n            \"type\": \"boolean\"\n          },\n          \"privacy\": {\n            \"$ref\": \"#/components/schemas/ConfigPrivacy\"\n          },\n          \"privacyInformationUrl\": {\n            \"type\": \"string\"\n          },\n          \"publishingNotice\": {\n            \"type\": \"boolean\"\n          },\n          \"recoverPasswordUrl\": {\n            \"type\": \"string\"\n          },\n          \"register\": {\n            \"$ref\": \"#/components/schemas/Register\"\n          },\n          \"remote\": {\n            \"$ref\": \"#/components/schemas/ConfigRemote\"\n          },\n          \"rendering\": {\n            \"$ref\": \"#/components/schemas/Rendering\"\n          },\n          \"searchGroupResults\": {\n            \"type\": \"boolean\"\n          },\n          \"searchSidenavMode\": {\n            \"type\": \"string\"\n          },\n          \"searchViewType\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"services\": {\n            \"$ref\": \"#/components/schemas/Services\"\n          },\n          \"sessionExpiredDialog\": {\n            \"$ref\": \"#/components/schemas/SessionExpiredDialog\"\n          },\n          \"simpleEdit\": {\n            \"$ref\": \"#/components/schemas/SimpleEdit\"\n          },\n          \"siteTitle\": {\n            \"type\": \"string\"\n          },\n          \"stream\": {\n            \"$ref\": \"#/components/schemas/Stream\"\n          },\n          \"supportedLanguages\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"upload\": {\n            \"$ref\": \"#/components/schemas/ConfigUpload\"\n          },\n          \"userAffiliation\": {\n            \"type\": \"boolean\"\n          },\n          \"userDisplayName\": {\n            \"type\": \"string\"\n          },\n          \"userSecondaryDisplayName\": {\n            \"type\": \"string\"\n          },\n          \"whatsNewUrl\": {\n            \"type\": \"string\"\n          },\n          \"workflow\": {\n            \"$ref\": \"#/components/schemas/ConfigWorkflow\"\n          },\n          \"workspaceColumns\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"workspaceSharedToMeDefaultAll\": {\n            \"type\": \"boolean\"\n          },\n          \"workspaceViewType\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Variables\": {\n        \"properties\": {\n          \"current\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"global\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Version\": {\n        \"properties\": {\n          \"build\": {\n            \"type\": \"string\"\n          },\n          \"full\": {\n            \"type\": \"string\"\n          },\n          \"major\": {\n            \"type\": \"string\"\n          },\n          \"minor\": {\n            \"type\": \"string\"\n          },\n          \"patch\": {\n            \"type\": \"string\"\n          },\n          \"qualifier\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"VersionGit\": {\n        \"properties\": {\n          \"branch\": {\n            \"type\": \"string\"\n          },\n          \"commit\": {\n            \"$ref\": \"#/components/schemas/VersionGitCommit\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"VersionGitCommit\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"timestamp\": {\n            \"$ref\": \"#/components/schemas/VersionTimestamp\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"VersionMaven\": {\n        \"properties\": {\n          \"bom\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"object\"\n          },\n          \"project\": {\n            \"$ref\": \"#/components/schemas/VersionProject\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"VersionProject\": {\n        \"properties\": {\n          \"artifactId\": {\n            \"type\": \"string\"\n          },\n          \"groupId\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"VersionTimestamp\": {\n        \"properties\": {\n          \"datetime\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"WebsiteInformation\": {\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"keywords\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"license\": {\n            \"type\": \"string\"\n          },\n          \"page\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"WorkflowHistory\": {\n        \"properties\": {\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"editor\": {\n            \"$ref\": \"#/components/schemas/UserSimple\"\n          },\n          \"receiver\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Authority\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"description\": \"The public restful API of the edu-sharing repository.\",\n    \"title\": \"edu-sharing Repository REST API\",\n    \"version\": \"1.1\"\n  },\n  \"openapi\": \"3.0.1\",\n  \"paths\": {\n    \"/_about\": {\n      \"get\": {\n        \"description\": \"Get all services provided by this API.\",\n        \"operationId\": \"about\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/About\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Discover the API.\",\n        \"tags\": [\n          \"ABOUT\"\n        ]\n      }\n    },\n    \"/_about/licenses\": {\n      \"get\": {\n        \"description\": \"Get information about used 3rd-party licenses.\",\n        \"operationId\": \"licenses\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Licenses\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"License information.\",\n        \"tags\": [\n          \"ABOUT\"\n        ]\n      }\n    },\n    \"/_about/status/{mode}\": {\n      \"get\": {\n        \"description\": \"returns http status 200 when ok\",\n        \"operationId\": \"status\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"mode\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"SEARCH\",\n                \"SERVICE\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"timeoutSeconds\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"status of repo services\",\n        \"tags\": [\n          \"ABOUT\"\n        ]\n      }\n    },\n    \"/admin/v1/applications\": {\n      \"get\": {\n        \"description\": \"List all registered applications.\",\n        \"operationId\": \"getApplications\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"list applications\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"register the specified application.\",\n        \"operationId\": \"addApplication_1\",\n        \"parameters\": [\n          {\n            \"description\": \"Remote application metadata url\",\n            \"in\": \"query\",\n            \"name\": \"url\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"register/add an application\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/applications/xml\": {\n      \"put\": {\n        \"description\": \"register the xml file provided.\",\n        \"operationId\": \"addApplication\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"xml\": {\n                    \"description\": \"XML file for app to register\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"xml\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"register/add an application via xml file\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/applications/{id}\": {\n      \"delete\": {\n        \"description\": \"remove the specified application.\",\n        \"operationId\": \"removeApplication\",\n        \"parameters\": [\n          {\n            \"description\": \"Application id\",\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"remove an application\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/applications/{xml}\": {\n      \"get\": {\n        \"description\": \"list any xml properties (like from homeApplication.properties.xml)\",\n        \"operationId\": \"getApplicationXML\",\n        \"parameters\": [\n          {\n            \"description\": \"Properties Filename (*.xml)\",\n            \"in\": \"path\",\n            \"name\": \"xml\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"list any xml properties (like from homeApplication.properties.xml)\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"if the key exists, it will be overwritten. Otherwise, it will be created. You only need to transfer keys you want to edit\",\n        \"operationId\": \"updateApplicationXML\",\n        \"parameters\": [\n          {\n            \"description\": \"Properties Filename (*.xml)\",\n            \"in\": \"path\",\n            \"name\": \"xml\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"edit any properties xml (like homeApplication.properties.xml)\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/applyTemplate\": {\n      \"post\": {\n        \"description\": \"apply a folder template.\",\n        \"operationId\": \"applyTemplate\",\n        \"parameters\": [\n          {\n            \"description\": \"Template Filename\",\n            \"in\": \"query\",\n            \"name\": \"template\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Group name (authority name)\",\n            \"in\": \"query\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Folder name\",\n            \"in\": \"query\",\n            \"name\": \"folder\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"apply a folder template\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/authenticate/{authorityName}\": {\n      \"post\": {\n        \"operationId\": \"switchAuthority\",\n        \"parameters\": [\n          {\n            \"description\": \"the authority to use (must be a person)\",\n            \"in\": \"path\",\n            \"name\": \"authorityName\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"switch the session to a known authority name\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/cache/cacheEntries/{id}\": {\n      \"get\": {\n        \"description\": \"Get entries of a cache.\",\n        \"operationId\": \"getCacheEntries\",\n        \"parameters\": [\n          {\n            \"description\": \"Id/bean name of the cache\",\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get entries of a cache\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/cache/cacheInfo/{id}\": {\n      \"get\": {\n        \"description\": \"Get information about a cache.\",\n        \"operationId\": \"getCacheInfo\",\n        \"parameters\": [\n          {\n            \"description\": \"Id/bean name of the cache\",\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CacheInfo\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get information about a cache\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/cache/clearCache\": {\n      \"post\": {\n        \"description\": \"clear cache\",\n        \"operationId\": \"clearCache\",\n        \"parameters\": [\n          {\n            \"description\": \"bean\",\n            \"in\": \"query\",\n            \"name\": \"bean\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"clear cache\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/cache/refreshEduGroupCache\": {\n      \"post\": {\n        \"description\": \"Refresh the Edu Group Cache.\",\n        \"operationId\": \"refreshEduGroupCache\",\n        \"parameters\": [\n          {\n            \"description\": \"keep existing\",\n            \"in\": \"query\",\n            \"name\": \"keepExisting\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Refresh the Edu Group Cache\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/cache/removeCacheEntry\": {\n      \"post\": {\n        \"description\": \"remove cache entry\",\n        \"operationId\": \"removeCacheEntry\",\n        \"parameters\": [\n          {\n            \"description\": \"cacheIndex\",\n            \"in\": \"query\",\n            \"name\": \"cacheIndex\",\n            \"schema\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"bean\",\n            \"in\": \"query\",\n            \"name\": \"bean\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"remove cache entry\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/catalina\": {\n      \"get\": {\n        \"description\": \"Get catalina.out log.\",\n        \"operationId\": \"getCatalinaOut\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get last info from catalina out\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/clusterInfo\": {\n      \"get\": {\n        \"description\": \"Get information the Cluster\",\n        \"operationId\": \"getCluster\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CacheCluster\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get information about the Cluster\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/clusterInfos\": {\n      \"get\": {\n        \"description\": \"Get information the Cluster\",\n        \"operationId\": \"getClusters\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CacheCluster\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get information about the Cluster\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/config/merged\": {\n      \"get\": {\n        \"operationId\": \"getLightbendConfig\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the fully merged \u0026 parsed (lightbend) backend config\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/configFile\": {\n      \"get\": {\n        \"operationId\": \"getConfigFile\",\n        \"parameters\": [\n          {\n            \"description\": \"filename to fetch\",\n            \"in\": \"query\",\n            \"name\": \"filename\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"path prefix this file belongs to\",\n            \"in\": \"query\",\n            \"name\": \"pathPrefix\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"node\",\n                \"cluster/applications\",\n                \"cluster\",\n                \"defaults\",\n                \"defaults/metadatasets\",\n                \"defaults/mailtemplates\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get a base system config file (e.g. edu-sharing.conf)\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"updateConfigFile\",\n        \"parameters\": [\n          {\n            \"description\": \"filename to fetch\",\n            \"in\": \"query\",\n            \"name\": \"filename\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"path prefix this file belongs to\",\n            \"in\": \"query\",\n            \"name\": \"pathPrefix\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"node\",\n                \"cluster/applications\",\n                \"cluster\",\n                \"defaults\",\n                \"defaults/metadatasets\",\n                \"defaults/mailtemplates\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"update a base system config file (e.g. edu-sharing.conf)\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/deletePersons\": {\n      \"put\": {\n        \"description\": \"delete the given persons. Their status must be set to \\\"todelete\\\"\",\n        \"operationId\": \"deletePerson\",\n        \"parameters\": [\n          {\n            \"description\": \"names of the users to delete\",\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PersonDeleteOptions\"\n              }\n            }\n          },\n          \"description\": \"options object what and how to delete user contents\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PersonReport\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"delete persons\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/elastic\": {\n      \"get\": {\n        \"operationId\": \"searchByElasticDSL\",\n        \"parameters\": [\n          {\n            \"description\": \"dsl query (json encoded)\",\n            \"in\": \"query\",\n            \"name\": \"dsl\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultElastic\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search for custom elastic DSL query\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/export/lom\": {\n      \"get\": {\n        \"description\": \"Export Nodes with LOM Metadata Format.\",\n        \"operationId\": \"exportLOM\",\n        \"parameters\": [\n          {\n            \"description\": \"filterQuery\",\n            \"in\": \"query\",\n            \"name\": \"filterQuery\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"targetDir\",\n            \"in\": \"query\",\n            \"name\": \"targetDir\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"subObjectHandler\",\n            \"in\": \"query\",\n            \"name\": \"subObjectHandler\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Export Nodes with LOM Metadata Format\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/globalGroups\": {\n      \"get\": {\n        \"description\": \"Get global groups (groups across repositories).\",\n        \"operationId\": \"getGlobalGroups\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get global groups\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/import/collections\": {\n      \"post\": {\n        \"description\": \"xml file must be structured as defined by the xsd standard\",\n        \"operationId\": \"importCollections\",\n        \"parameters\": [\n          {\n            \"description\": \"Id of the root to initialize the collection structure, or '-root-' to inflate them on the first level\",\n            \"in\": \"query\",\n            \"name\": \"parent\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"xml\": {\n                    \"description\": \"XML file to parse (or zip file containing exactly 1 xml file to parse)\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"xml\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CollectionsResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"import collections via a xml file\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/import/excel\": {\n      \"post\": {\n        \"description\": \"Import excel data.\",\n        \"operationId\": \"importExcel\",\n        \"parameters\": [\n          {\n            \"description\": \"parent\",\n            \"in\": \"query\",\n            \"name\": \"parent\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"addToCollection\",\n            \"in\": \"query\",\n            \"name\": \"addToCollection\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"excel\": {\n                    \"description\": \"Excel file to import\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"excel\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExcelResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import excel data\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/import/oai\": {\n      \"delete\": {\n        \"description\": \"Remove deleted imports.\",\n        \"operationId\": \"removeOaiImports\",\n        \"parameters\": [\n          {\n            \"description\": \"base url\",\n            \"in\": \"query\",\n            \"name\": \"baseUrl\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"set/catalog id\",\n            \"in\": \"query\",\n            \"name\": \"set\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"metadata prefix\",\n            \"in\": \"query\",\n            \"name\": \"metadataPrefix\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Remove deleted imports\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Import oai data.\",\n        \"operationId\": \"importOai\",\n        \"parameters\": [\n          {\n            \"description\": \"base url\",\n            \"in\": \"query\",\n            \"name\": \"baseUrl\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"set/catalog id\",\n            \"in\": \"query\",\n            \"name\": \"set\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"metadata prefix\",\n            \"in\": \"query\",\n            \"name\": \"metadataPrefix\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"id metadataset\",\n            \"in\": \"query\",\n            \"name\": \"metadataset\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"importer job class name (call /classes to obtain a list)\",\n            \"in\": \"query\",\n            \"name\": \"className\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"org.edu_sharing.repository.server.jobs.quartz.ImporterJob\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"importer class name (call /classes to obtain a list)\",\n            \"in\": \"query\",\n            \"name\": \"importerClassName\",\n            \"schema\": {\n              \"default\": \"org.edu_sharing.repository.server.importer.OAIPMHLOMImporter\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"RecordHandler class name\",\n            \"in\": \"query\",\n            \"name\": \"recordHandlerClassName\",\n            \"schema\": {\n              \"default\": \"org.edu_sharing.repository.server.importer.RecordHandlerLOM\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"BinaryHandler class name (may be empty for none)\",\n            \"in\": \"query\",\n            \"name\": \"binaryHandlerClassName\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"PersistentHandlerClassName class name (may be empty for none)\",\n            \"in\": \"query\",\n            \"name\": \"persistentHandlerClassName\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"url to file\",\n            \"in\": \"query\",\n            \"name\": \"fileUrl\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"OAI Ids to import, can be null than the whole set will be imported\",\n            \"in\": \"query\",\n            \"name\": \"oaiIds\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"force Update of all entries\",\n            \"in\": \"query\",\n            \"name\": \"forceUpdate\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"from: datestring yyyy-MM-dd)\",\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"until: datestring yyyy-MM-dd)\",\n            \"in\": \"query\",\n            \"name\": \"until\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"periodInDays: internal sets from and until. only effective if from/until not set)\",\n            \"in\": \"query\",\n            \"name\": \"periodInDays\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import oai data\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/import/oai/classes\": {\n      \"get\": {\n        \"description\": \"Get available importer classes for OAI import.\",\n        \"operationId\": \"getOaiClasses\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get OAI class names\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/import/oai/xml\": {\n      \"post\": {\n        \"operationId\": \"importOaiXML\",\n        \"parameters\": [\n          {\n            \"description\": \"RecordHandler class name\",\n            \"in\": \"query\",\n            \"name\": \"recordHandlerClassName\",\n            \"schema\": {\n              \"default\": \"org.edu_sharing.repository.server.importer.RecordHandlerLOM\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"BinaryHandler class name (may be empty for none)\",\n            \"in\": \"query\",\n            \"name\": \"binaryHandlerClassName\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"xml\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Node\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import single xml via oai (for testing)\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/import/refreshCache/{folder}\": {\n      \"post\": {\n        \"description\": \"Refresh importer cache.\",\n        \"operationId\": \"refreshCache\",\n        \"parameters\": [\n          {\n            \"description\": \"refresh cache root folder id\",\n            \"in\": \"path\",\n            \"name\": \"folder\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-userhome-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"sticky\",\n            \"in\": \"query\",\n            \"name\": \"sticky\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Refresh cache\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/job/{jobClass}\": {\n      \"post\": {\n        \"description\": \"Start a Job.\",\n        \"operationId\": \"startJob\",\n        \"parameters\": [\n          {\n            \"description\": \"jobClass\",\n            \"in\": \"path\",\n            \"name\": \"jobClass\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"params\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Start a Job.\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/jobs\": {\n      \"get\": {\n        \"operationId\": \"getJobs\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get all running jobs\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/jobs/all\": {\n      \"get\": {\n        \"operationId\": \"getAllJobs\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get all available jobs\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/jobs/{job}\": {\n      \"delete\": {\n        \"operationId\": \"cancelJob\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"job\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"cancel a running job\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/log\": {\n      \"post\": {\n        \"description\": \"Root appenders are used. Check the appender treshold.\",\n        \"operationId\": \"changeLogging\",\n        \"parameters\": [\n          {\n            \"description\": \"name\",\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"loglevel\",\n            \"in\": \"query\",\n            \"name\": \"loglevel\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"appender\",\n            \"in\": \"query\",\n            \"name\": \"appender\",\n            \"schema\": {\n              \"default\": \"File\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change the loglevel for classes at runtime.\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/lucene\": {\n      \"get\": {\n        \"description\": \"e.g. @cm\\\\:name:\\\"*\\\"\",\n        \"operationId\": \"searchByLucene\",\n        \"parameters\": [\n          {\n            \"description\": \"query\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"default\": \"@cm\\\\:name:\\\"*\\\"\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"store, workspace or archive\",\n            \"in\": \"query\",\n            \"name\": \"store\",\n            \"schema\": {\n              \"enum\": [\n                \"Workspace\",\n                \"Archive\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authority scope to search for\",\n            \"in\": \"query\",\n            \"name\": \"authorityScope\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search for custom lucene query\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/lucene/export\": {\n      \"get\": {\n        \"description\": \"e.g. @cm\\\\:name:\\\"*\\\"\",\n        \"operationId\": \"exportByLucene\",\n        \"parameters\": [\n          {\n            \"description\": \"query\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"default\": \"@cm\\\\:name:\\\"*\\\"\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"properties to fetch, use parent::\u003cproperty\u003e to include parent property values\",\n            \"in\": \"query\",\n            \"name\": \"properties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"store, workspace or archive\",\n            \"in\": \"query\",\n            \"name\": \"store\",\n            \"schema\": {\n              \"enum\": [\n                \"Workspace\",\n                \"Archive\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authority scope to search for\",\n            \"in\": \"query\",\n            \"name\": \"authorityScope\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search for custom lucene query and choose specific properties to load\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/mail/{receiver}/{template}\": {\n      \"post\": {\n        \"description\": \"Sends the given template as a test to the given receiver.\",\n        \"operationId\": \"testMail\",\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"receiver\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"template\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Test a mail template\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/plugins\": {\n      \"get\": {\n        \"operationId\": \"getEnabledPlugins\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get enabled system plugins\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/propertyToMds\": {\n      \"get\": {\n        \"description\": \"Get a Mds Valuespace for all values of the given properties.\",\n        \"operationId\": \"getPropertyToMds\",\n        \"parameters\": [\n          {\n            \"description\": \"one or more properties\",\n            \"in\": \"query\",\n            \"name\": \"properties\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get a Mds Valuespace for all values of the given properties\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/refreshAppInfo\": {\n      \"post\": {\n        \"description\": \"Refresh the application info.\",\n        \"operationId\": \"refreshAppInfo\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"refresh app info\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/repositoryConfig\": {\n      \"get\": {\n        \"operationId\": \"getConfig\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryConfig\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get the repository config object\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"setConfig\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RepositoryConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"set/update the repository config object\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/serverUpdate/list\": {\n      \"get\": {\n        \"description\": \"list available update tasks\",\n        \"operationId\": \"serverUpdateList\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"list available update tasks\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/serverUpdate/run/{id}\": {\n      \"post\": {\n        \"description\": \"Run a specific update task (test or full update).\",\n        \"operationId\": \"serverUpdateList_1\",\n        \"parameters\": [\n          {\n            \"description\": \"Id of the update task\",\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Actually execute (if false, just runs in test mode)\",\n            \"in\": \"query\",\n            \"name\": \"execute\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Run an update tasks\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/statistics\": {\n      \"get\": {\n        \"description\": \"get statistics.\",\n        \"operationId\": \"getStatistics\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AdminStatistics\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get statistics\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/toolpermissions/add/{name}\": {\n      \"post\": {\n        \"operationId\": \"addToolpermission\",\n        \"parameters\": [\n          {\n            \"description\": \"Name/ID of toolpermission\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Node\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"add a new toolpermissions\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/toolpermissions/{authority}\": {\n      \"get\": {\n        \"description\": \"Returns explicit (rights set for this authority) + effective (resulting rights for this authority) toolpermission\",\n        \"operationId\": \"getAllToolpermissions\",\n        \"parameters\": [\n          {\n            \"description\": \"Authority to load (user or group)\",\n            \"in\": \"path\",\n            \"name\": \"authority\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get all toolpermissions for an authority\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"If a toolpermission has status UNDEFINED, it will remove explicit permissions for the authority\",\n        \"operationId\": \"setToolpermissions\",\n        \"parameters\": [\n          {\n            \"description\": \"Authority to set (user or group)\",\n            \"in\": \"path\",\n            \"name\": \"authority\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"enum\": [\n                    \"ALLOWED\",\n                    \"DENIED\",\n                    \"UNDEFINED\"\n                  ],\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"set toolpermissions for an authority\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/upload/temp/{name}\": {\n      \"put\": {\n        \"description\": \"Upload a file to tomcat temp directory, to use it on the server (e.g. an update)\",\n        \"operationId\": \"uploadTemp\",\n        \"parameters\": [\n          {\n            \"description\": \"filename\",\n            \"in\": \"path\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"description\": \"file to upload\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"file\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UploadResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Upload a file\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/admin/v1/version\": {\n      \"get\": {\n        \"description\": \"detailed information about the running system version\",\n        \"operationId\": \"getVersion\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RepositoryVersionInfo\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get detailed version information\",\n        \"tags\": [\n          \"ADMIN v1\"\n        ]\n      }\n    },\n    \"/archive/v1/purge/{repository}\": {\n      \"delete\": {\n        \"description\": \"Searches for archive nodes.\",\n        \"operationId\": \"purge\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"archived node\",\n            \"in\": \"query\",\n            \"name\": \"archivedNodeIds\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Searches for archive nodes.\",\n        \"tags\": [\n          \"ARCHIVE v1\"\n        ]\n      }\n    },\n    \"/archive/v1/restore/{repository}\": {\n      \"post\": {\n        \"description\": \"restores archived nodes. restoreStatus can have the following values: FALLBACK_PARENT_NOT_EXISTS, FALLBACK_PARENT_NO_PERMISSION, DUPLICATENAME, FINE\",\n        \"operationId\": \"restore\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"archived nodes\",\n            \"in\": \"query\",\n            \"name\": \"archivedNodeIds\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"to target\",\n            \"in\": \"query\",\n            \"name\": \"target\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RestoreResults\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"restore archived nodes.\",\n        \"tags\": [\n          \"ARCHIVE v1\"\n        ]\n      }\n    },\n    \"/archive/v1/search/{repository}/{pattern}\": {\n      \"get\": {\n        \"description\": \"Searches for archive nodes.\",\n        \"operationId\": \"searchArchive\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"search pattern\",\n            \"in\": \"path\",\n            \"name\": \"pattern\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Searches for archive nodes.\",\n        \"tags\": [\n          \"ARCHIVE v1\"\n        ]\n      }\n    },\n    \"/archive/v1/search/{repository}/{pattern}/{person}\": {\n      \"get\": {\n        \"description\": \"Searches for archive nodes.\",\n        \"operationId\": \"searchArchivePerson\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"search pattern\",\n            \"in\": \"path\",\n            \"name\": \"pattern\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"person\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Searches for archive nodes.\",\n        \"tags\": [\n          \"ARCHIVE v1\"\n        ]\n      }\n    },\n    \"/authentication/v1/appauth/{userId}\": {\n      \"post\": {\n        \"description\": \"headers must be set: X-Edu-App-Id, X-Edu-App-Sig, X-Edu-App-Signed, X-Edu-App-Ts\",\n        \"operationId\": \"authenticate\",\n        \"parameters\": [\n          {\n            \"description\": \"User Id\",\n            \"in\": \"path\",\n            \"name\": \"userId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserProfileAppAuth\"\n              }\n            }\n          },\n          \"description\": \"User Profile\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthenticationToken\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"authenticate user of an registered application.\",\n        \"tags\": [\n          \"AUTHENTICATION v1\"\n        ]\n      }\n    },\n    \"/authentication/v1/destroySession\": {\n      \"get\": {\n        \"operationId\": \"logout\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Destroys the current session and logout the user\",\n        \"tags\": [\n          \"AUTHENTICATION v1\"\n        ]\n      }\n    },\n    \"/authentication/v1/hasAccessToScope\": {\n      \"get\": {\n        \"operationId\": \"hasAccessToScope\",\n        \"parameters\": [\n          {\n            \"description\": \"scope\",\n            \"in\": \"query\",\n            \"name\": \"scope\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Returns true if the current user has access to the given scope\",\n        \"tags\": [\n          \"AUTHENTICATION v1\"\n        ]\n      }\n    },\n    \"/authentication/v1/loginToScope\": {\n      \"post\": {\n        \"description\": \"Use the Basic auth header field to transfer the credentials\",\n        \"operationId\": \"loginToScope\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LoginCredentials\"\n              }\n            }\n          },\n          \"description\": \"credentials, example: test,test\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Login\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          }\n        },\n        \"summary\": \"Validates the Basic Auth Credentials and check if the session is a logged in user\",\n        \"tags\": [\n          \"AUTHENTICATION v1\"\n        ]\n      }\n    },\n    \"/authentication/v1/validateSession\": {\n      \"get\": {\n        \"description\": \"Use the Basic auth header field to transfer the credentials\",\n        \"operationId\": \"login\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Login\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          }\n        },\n        \"summary\": \"Validates the Basic Auth Credentials and check if the session is a logged in user\",\n        \"tags\": [\n          \"AUTHENTICATION v1\"\n        ]\n      }\n    },\n    \"/bulk/v1/find\": {\n      \"post\": {\n        \"description\": \"Get a given node based on the posted, multiple criteria. Make sure that they'll provide an unique result\",\n        \"operationId\": \"find\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties that must match (with \\\"AND\\\" concatenated)\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"gets a given node\",\n        \"tags\": [\n          \"BULK v1\"\n        ]\n      }\n    },\n    \"/bulk/v1/sync/{group}\": {\n      \"put\": {\n        \"description\": \"Depending on the given \\\"match\\\" properties either a new node will be created or the existing one will be updated\",\n        \"operationId\": \"sync\",\n        \"parameters\": [\n          {\n            \"description\": \"The group to which this node belongs to. Used for internal structuring. Please use simple names only\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The properties that must match to identify if this node exists. Multiple properties will be and combined and compared\",\n            \"in\": \"query\",\n            \"name\": \"match\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"The properties on which the imported nodes should be grouped (for each value, a folder with the corresponding data is created)\",\n            \"in\": \"query\",\n            \"name\": \"groupBy\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"type of node. If the node already exists, this will not change the type afterwards\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"aspects of node\",\n            \"in\": \"query\",\n            \"name\": \"aspects\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"reset all versions (like a complete reimport), all data inside edu-sharing will be lost\",\n            \"in\": \"query\",\n            \"name\": \"resetVersion\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties, they'll not get filtered via mds, so be careful what you add here\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create or update a given node\",\n        \"tags\": [\n          \"BULK v1\"\n        ]\n      }\n    },\n    \"/clientUtils/v1/getWebsiteInformation\": {\n      \"get\": {\n        \"operationId\": \"getWebsiteInformation\",\n        \"parameters\": [\n          {\n            \"description\": \"full url with http or https\",\n            \"in\": \"query\",\n            \"name\": \"url\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/WebsiteInformation\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Read generic information about a webpage\",\n        \"tags\": [\n          \"CLIENTUTILS v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/pinning\": {\n      \"post\": {\n        \"description\": \"Remove all currently pinned collections and set them in the order send. Requires TOOLPERMISSION_COLLECTION_PINNING\",\n        \"operationId\": \"setPinnedCollections\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"default\": \"-home-\",\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"List of collections that should be pinned\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set pinned collections.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/search\": {\n      \"get\": {\n        \"description\": \"Search collections.\",\n        \"operationId\": \"searchCollections\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"query string\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 500,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CollectionEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search collections.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collectionId}\": {\n      \"get\": {\n        \"description\": \"Get a collection.\",\n        \"operationId\": \"getCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collectionId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CollectionEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}\": {\n      \"delete\": {\n        \"description\": \"Delete a collection.\",\n        \"operationId\": \"deleteCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Update a collection.\",\n        \"operationId\": \"updateCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Node\"\n              }\n            }\n          },\n          \"description\": \"collection node\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Update a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/children\": {\n      \"post\": {\n        \"description\": \"Create a new collection.\",\n        \"operationId\": \"createCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent collection (or \\\"-root-\\\" for level0 collections)\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Node\"\n              }\n            }\n          },\n          \"description\": \"collection\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CollectionEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/children/collections\": {\n      \"get\": {\n        \"operationId\": \"getCollectionsSubcollections\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent collection (or \\\"-root-\\\" for level0 collections)\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"scope (only relevant if parent == -root-)\",\n            \"in\": \"query\",\n            \"name\": \"scope\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"MY\",\n              \"enum\": [\n                \"EDU_ALL\",\n                \"EDU_GROUPS\",\n                \"TYPE_EDITORIAL\",\n                \"TYPE_MEDIA_CENTER\",\n                \"MY\",\n                \"RECENT\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"fetch counts of collections (materials and subcollections). This parameter will decrease performance so only enable if if you need this data\",\n            \"in\": \"query\",\n            \"name\": \"fetchCounts\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 500,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReferenceEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get child collections for collection (or root).\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/children/references\": {\n      \"get\": {\n        \"operationId\": \"getCollectionsReferences\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 500,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ReferenceEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get references objects for collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/feedback\": {\n      \"get\": {\n        \"description\": \"Requires permission \\\"???\\\" on the specific permission\",\n        \"operationId\": \"getFeedbackOfCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get feedback of collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Requires permission \\\"Feedback\\\" on the specific collection\",\n        \"operationId\": \"addFeedbackToCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Post feedback to collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/icon\": {\n      \"delete\": {\n        \"description\": \"Deletes Preview Image of a collection.\",\n        \"operationId\": \"removeIconOfCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Deletes Preview Image of a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Writes Preview Image of a collection.\",\n        \"operationId\": \"changeIconOfCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"MIME-Type\",\n            \"in\": \"query\",\n            \"name\": \"mimetype\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CollectionEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Writes Preview Image of a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/order\": {\n      \"post\": {\n        \"description\": \"Current order will be overriden. Requires full permissions for the parent collection\",\n        \"operationId\": \"setCollectionOrder\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"List of nodes in the order to be saved. If empty, custom order of the collection will be disabled\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set order of nodes in a collection. In order to work as expected, provide a list of all nodes in this collection\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/collection/v1/collections/{repository}/{collection}/references/{node}\": {\n      \"delete\": {\n        \"description\": \"Delete a node from a collection.\",\n        \"operationId\": \"deleteFromCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete a node from a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Add a node to a collection.\",\n        \"operationId\": \"addToCollection\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of collection\",\n            \"in\": \"path\",\n            \"name\": \"collection\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of source repository\",\n            \"in\": \"query\",\n            \"name\": \"sourceRepo\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Allow that a node that already is inside the collection can be added again\",\n            \"in\": \"query\",\n            \"name\": \"allowDuplicate\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Add a node to a collection.\",\n        \"tags\": [\n          \"COLLECTION v1\"\n        ]\n      }\n    },\n    \"/comment/v1/comments/{repository}/{comment}\": {\n      \"delete\": {\n        \"description\": \"Delete the comment with the given id\",\n        \"operationId\": \"deleteComment\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"id of the comment to delete\",\n            \"in\": \"path\",\n            \"name\": \"comment\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"delete a comment\",\n        \"tags\": [\n          \"COMMENT v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Edit the comment with the given id\",\n        \"operationId\": \"editComment\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"id of the comment to edit\",\n            \"in\": \"path\",\n            \"name\": \"comment\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"Text content of comment\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"edit a comment\",\n        \"tags\": [\n          \"COMMENT v1\"\n        ]\n      }\n    },\n    \"/comment/v1/comments/{repository}/{node}\": {\n      \"get\": {\n        \"description\": \"List all comments\",\n        \"operationId\": \"getComments\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Comments\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"list comments\",\n        \"tags\": [\n          \"COMMENT v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Adds a comment to the given node\",\n        \"operationId\": \"addComment\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"In reply to an other comment, can be null\",\n            \"in\": \"query\",\n            \"name\": \"commentReference\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"Text content of comment\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"create a new comment\",\n        \"tags\": [\n          \"COMMENT v1\"\n        ]\n      }\n    },\n    \"/config/v1/dynamic/{key}\": {\n      \"get\": {\n        \"operationId\": \"getDynamicValue\",\n        \"parameters\": [\n          {\n            \"description\": \"Key of the config value that should be fetched\",\n            \"in\": \"path\",\n            \"name\": \"key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DynamicConfig\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get a config entry (appropriate rights for the entry are required)\",\n        \"tags\": [\n          \"CONFIG v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"the body must be a json encapsulated string\",\n        \"operationId\": \"setDynamicValue\",\n        \"parameters\": [\n          {\n            \"description\": \"Key of the config value that should be fetched\",\n            \"in\": \"path\",\n            \"name\": \"key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Is everyone allowed to read the value\",\n            \"in\": \"query\",\n            \"name\": \"public\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"Must be a json-encapsulated string\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DynamicConfig\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set a config entry (admin rights required)\",\n        \"tags\": [\n          \"CONFIG v1\"\n        ]\n      }\n    },\n    \"/config/v1/language\": {\n      \"get\": {\n        \"description\": \"Language strings\",\n        \"operationId\": \"getLanguage\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Language\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get override strings for the current language\",\n        \"tags\": [\n          \"CONFIG v1\"\n        ]\n      }\n    },\n    \"/config/v1/language/defaults\": {\n      \"get\": {\n        \"operationId\": \"getLanguageDefaults\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get all inital language strings for angular\",\n        \"tags\": [\n          \"CONFIG v1\"\n        ]\n      }\n    },\n    \"/config/v1/values\": {\n      \"get\": {\n        \"description\": \"Current is the actual (context-based) active config. Global is the default global config if no context is active (may be identical to the current)\",\n        \"operationId\": \"getConfig_1\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Config\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get repository config values\",\n        \"tags\": [\n          \"CONFIG v1\"\n        ]\n      }\n    },\n    \"/config/v1/variables\": {\n      \"get\": {\n        \"description\": \"global config variables\",\n        \"operationId\": \"getVariables\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Variables\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get global config variables\",\n        \"tags\": [\n          \"CONFIG v1\"\n        ]\n      }\n    },\n    \"/connector/v1/connectors/{repository}/list\": {\n      \"get\": {\n        \"operationId\": \"listConnectors\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ConnectorList\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"List all available connectors\",\n        \"tags\": [\n          \"CONNECTOR v1\"\n        ]\n      }\n    },\n    \"/iam/v1/authorities/{repository}\": {\n      \"get\": {\n        \"description\": \"Search authorities.\",\n        \"operationId\": \"searchAuthorities\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"pattern\",\n            \"in\": \"query\",\n            \"name\": \"pattern\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"global search context, defaults to true, otherwise just searches for users within the organizations\",\n            \"in\": \"query\",\n            \"name\": \"global\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"find a specific groupType (does nothing for persons)\",\n            \"in\": \"query\",\n            \"name\": \"groupType\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"find a specific signupMethod for groups (or asterisk for all including one) (does nothing for persons)\",\n            \"in\": \"query\",\n            \"name\": \"signupMethod\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthorityEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search authorities.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/authorities/{repository}/recent\": {\n      \"get\": {\n        \"description\": \"Get the authorities the current user has recently invited.\",\n        \"operationId\": \"getRecentlyInvited\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthorityEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get recently invited authorities.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}\": {\n      \"get\": {\n        \"description\": \"Search groups. (admin rights are required.)\",\n        \"operationId\": \"searchGroups\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"pattern\",\n            \"in\": \"query\",\n            \"name\": \"pattern\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"find a specific groupType\",\n            \"in\": \"query\",\n            \"name\": \"groupType\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"find a specific signupMethod for groups (or asterisk for all including one)\",\n            \"in\": \"query\",\n            \"name\": \"signupMethod\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"global search context, defaults to true, otherwise just searches for groups within the organizations\",\n            \"in\": \"query\",\n            \"name\": \"global\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search groups.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}\": {\n      \"delete\": {\n        \"description\": \"Delete the group. (admin rights are required.)\",\n        \"operationId\": \"deleteGroup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete the group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Get the group. (To get foreign profiles, admin rights are required.)\",\n        \"operationId\": \"getGroup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new group. (admin rights are required.)\",\n        \"operationId\": \"createGroup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"parent (will be added to this parent, also for name hashing), may be null\",\n            \"in\": \"query\",\n            \"name\": \"parent\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GroupProfile\"\n              }\n            }\n          },\n          \"description\": \"properties\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Group\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/members\": {\n      \"get\": {\n        \"description\": \"Get all members of the group. (admin rights are required.)\",\n        \"operationId\": \"getMembership\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authority name (begins with GROUP_)\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"pattern\",\n            \"in\": \"query\",\n            \"name\": \"pattern\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityType either GROUP or USER, empty to show all\",\n            \"in\": \"query\",\n            \"name\": \"authorityType\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthorityEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all members of the group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/members/{member}\": {\n      \"delete\": {\n        \"description\": \"Delete member from the group. (admin rights are required.)\",\n        \"operationId\": \"deleteMembership\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of member\",\n            \"in\": \"path\",\n            \"name\": \"member\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete member from the group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Add member to the group. (admin rights are required.)\",\n        \"operationId\": \"addMembership\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of member\",\n            \"in\": \"path\",\n            \"name\": \"member\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Add member to the group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/profile\": {\n      \"put\": {\n        \"description\": \"Set profile of the group. (admin rights are required.)\",\n        \"operationId\": \"changeGroupProfile\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GroupProfile\"\n              }\n            }\n          },\n          \"description\": \"properties\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set profile of the group.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/signup\": {\n      \"post\": {\n        \"operationId\": \"signupGroup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of group\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Password for signup (only required if signupMethod == password)\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"enum\": [\n                    \"InvalidPassword\",\n                    \"AlreadyInList\",\n                    \"AlreadyMember\",\n                    \"Ok\"\n                  ],\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"let the current user signup to the given group\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/signup/config\": {\n      \"post\": {\n        \"description\": \"set group signup options\",\n        \"operationId\": \"signupGroupDetails\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of group\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GroupSignupDetails\"\n              }\n            }\n          },\n          \"description\": \"Details to edit\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \" requires admin rights\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/signup/list\": {\n      \"get\": {\n        \"description\": \"Requires admin rights or org administrator on this group\",\n        \"operationId\": \"signupGroupList\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of group\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"list pending users that want to join this group\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/signup/list/{user}\": {\n      \"delete\": {\n        \"description\": \"Requires admin rights or org administrator on this group\",\n        \"operationId\": \"rejectSignup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of group\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of user\",\n            \"in\": \"path\",\n            \"name\": \"user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"reject the pending user\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Requires admin rights or org administrator on this group\",\n        \"operationId\": \"confirmSignup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of group\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of user\",\n            \"in\": \"path\",\n            \"name\": \"user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"put the pending user into the group\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/groups/{repository}/{group}/type/{type}\": {\n      \"get\": {\n        \"description\": \"Get a subgroup by the specified type\",\n        \"operationId\": \"getSubgroupByType\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authority name of the parent/primary group (begins with GROUP_)\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"group type to filter for, e.g. ORG_ADMINISTRATORS\",\n            \"in\": \"path\",\n            \"name\": \"type\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthorityEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get a subgroup by the specified type\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}\": {\n      \"get\": {\n        \"description\": \"Search users. (admin rights are required.)\",\n        \"operationId\": \"searchUser\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"pattern\",\n            \"in\": \"query\",\n            \"name\": \"pattern\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"global search context, defaults to true, otherwise just searches for users within the organizations\",\n            \"in\": \"query\",\n            \"name\": \"global\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"the user status (e.g. active), if not set, all users are returned\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"schema\": {\n              \"enum\": [\n                \"active\",\n                \"blocked\",\n                \"todelete\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search users.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}\": {\n      \"delete\": {\n        \"description\": \"Delete the user. (admin rights are required.)\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"force the deletion (if false then only persons which are previously marked for deletion are getting deleted)\",\n            \"in\": \"query\",\n            \"name\": \"force\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete the user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Get the user. (Not all information are feteched for foreign profiles if current user is not an admin)\",\n        \"operationId\": \"getUser\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new user. (admin rights are required.)\",\n        \"operationId\": \"createUser\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Password, leave empty if you don't want to set any\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserProfileEdit\"\n              }\n            }\n          },\n          \"description\": \"profile\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/avatar\": {\n      \"delete\": {\n        \"description\": \"Remove avatar of the user. (To Remove foreign avatars, admin rights are required.)\",\n        \"operationId\": \"removeUserAvatar\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Remove avatar of the user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Set avatar of the user. (To set foreign avatars, admin rights are required.)\",\n        \"operationId\": \"changeUserAvatar\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"avatar\": {\n                    \"description\": \"avatar image\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"avatar\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set avatar of the user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/credential\": {\n      \"put\": {\n        \"description\": \"Change/Set password of the user. (To change foreign passwords or set passwords, admin rights are required.)\",\n        \"operationId\": \"changeUserPassword\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserCredential\"\n              }\n            }\n          },\n          \"description\": \"credential\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change/Set password of the user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/memberships\": {\n      \"get\": {\n        \"operationId\": \"getUserGroups\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authority name\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"pattern\",\n            \"in\": \"query\",\n            \"name\": \"pattern\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all groups the given user is member of.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/nodeList/{list}\": {\n      \"get\": {\n        \"description\": \"For guest users, the list will be temporary stored in the current session\",\n        \"operationId\": \"getNodeList\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"list name\",\n            \"in\": \"path\",\n            \"name\": \"list\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get a specific node list for a user\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/nodeList/{list}/{node}\": {\n      \"delete\": {\n        \"description\": \"For guest users, the list will be temporary stored in the current session\",\n        \"operationId\": \"removeNodeList\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"list name\",\n            \"in\": \"path\",\n            \"name\": \"list\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Deelete a node of a node list of a user\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"For guest users, the list will be temporary stored in the current session\",\n        \"operationId\": \"addNodeList\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"list name. If this list does not exist, it will be created\",\n            \"in\": \"path\",\n            \"name\": \"list\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Add a node to node a list of a user\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/preferences\": {\n      \"get\": {\n        \"description\": \"Will fail for guest\",\n        \"operationId\": \"getPreferences\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Preferences\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get preferences stored for user\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Will fail for guest\",\n        \"operationId\": \"setPreferences\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"default\": \"-me-\",\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"preferences (json string)\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set preferences for user\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/profile\": {\n      \"put\": {\n        \"description\": \"Set profile of the user. (To set foreign profiles, admin rights are required.)\",\n        \"operationId\": \"changeUserProfile\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserProfileEdit\"\n              }\n            }\n          },\n          \"description\": \"properties\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set profile of the user.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/profileSettings\": {\n      \"get\": {\n        \"description\": \"Will fail for guest\",\n        \"operationId\": \"getProfileSettings\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProfileSettings\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get profileSettings configuration\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Will fail for guest\",\n        \"operationId\": \"setProfileSettings\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProfileSettings\"\n              }\n            }\n          },\n          \"description\": \"ProfileSetting Object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set profileSettings Configuration\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/stats\": {\n      \"get\": {\n        \"description\": \"Get the user stats (e.g. publicly created material count)\",\n        \"operationId\": \"getUserStats\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username (or \\\"-me-\\\" for current user)\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-me-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserStats\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the user stats.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/iam/v1/people/{repository}/{person}/status/{status}\": {\n      \"put\": {\n        \"description\": \"update the user status. (admin rights are required.)\",\n        \"operationId\": \"updateUserStatus\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username\",\n            \"in\": \"path\",\n            \"name\": \"person\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"the new status to set\",\n            \"in\": \"path\",\n            \"name\": \"status\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"active\",\n                \"blocked\",\n                \"todelete\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"notify the user via mail\",\n            \"in\": \"query\",\n            \"name\": \"notify\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"update the user status.\",\n        \"tags\": [\n          \"IAM v1\"\n        ]\n      }\n    },\n    \"/knowledge/v1/analyze/jobs\": {\n      \"post\": {\n        \"description\": \"Run analyzing job for a node.\",\n        \"operationId\": \"runAnalyzingJob\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"query\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"query\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JobEntry\"\n                }\n              }\n            },\n            \"description\": \"Accepted.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"The current user has insufficient rights to read the node or to perform an analyzing job.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Repository or node not found.\"\n          }\n        },\n        \"summary\": \"Run analyzing job.\",\n        \"tags\": [\n          \"KNOWLEDGE v1\"\n        ]\n      }\n    },\n    \"/knowledge/v1/analyze/jobs/{job}\": {\n      \"get\": {\n        \"description\": \"Get analyzing job status.\",\n        \"operationId\": \"getAnalyzingJobStatus\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of job ticket\",\n            \"in\": \"path\",\n            \"name\": \"job\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/JobEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"The current user has insufficient rights to access the ticket.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"Job not found.\"\n          }\n        },\n        \"summary\": \"Get analyzing job status.\",\n        \"tags\": [\n          \"KNOWLEDGE v1\"\n        ]\n      }\n    },\n    \"/mds/v1/metadatasets/{repository}\": {\n      \"get\": {\n        \"description\": \"Get metadata sets V2 of repository.\",\n        \"operationId\": \"getMetadataSets\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MdsEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get metadata sets V2 of repository.\",\n        \"tags\": [\n          \"MDS v1\"\n        ]\n      }\n    },\n    \"/mds/v1/metadatasets/{repository}/{metadataset}\": {\n      \"get\": {\n        \"description\": \"Get metadata set new.\",\n        \"operationId\": \"getMetadataSet\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of metadataset (or \\\"-default-\\\" for default metadata set)\",\n            \"in\": \"path\",\n            \"name\": \"metadataset\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-default-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Mds\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get metadata set new.\",\n        \"tags\": [\n          \"MDS v1\"\n        ]\n      }\n    },\n    \"/mds/v1/metadatasets/{repository}/{metadataset}/values\": {\n      \"post\": {\n        \"description\": \"Get values.\",\n        \"operationId\": \"getValues\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of metadataset (or \\\"-default-\\\" for default metadata set)\",\n            \"in\": \"path\",\n            \"name\": \"metadataset\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-default-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SuggestionParam\"\n              }\n            }\n          },\n          \"description\": \"suggestionParam\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Suggestions\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get values.\",\n        \"tags\": [\n          \"MDS v1\"\n        ]\n      }\n    },\n    \"/mds/v1/metadatasets/{repository}/{metadataset}/values_for_keys\": {\n      \"post\": {\n        \"description\": \"Get values for keys.\",\n        \"operationId\": \"getValues4Keys\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of metadataset (or \\\"-default-\\\" for default metadata set)\",\n            \"in\": \"path\",\n            \"name\": \"metadataset\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-default-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"query\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property\",\n            \"in\": \"query\",\n            \"name\": \"property\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"keys\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Suggestions\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get values for keys.\",\n        \"tags\": [\n          \"MDS v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/import/mc_org\": {\n      \"post\": {\n        \"description\": \"Import Mediacenter Organisation Connection.\",\n        \"operationId\": \"importMcOrgConnections\",\n        \"parameters\": [\n          {\n            \"description\": \"removeSchoolsFromMC\",\n            \"in\": \"query\",\n            \"name\": \"removeSchoolsFromMC\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"mcOrgs\": {\n                    \"description\": \"Mediacenter Organisation Connection csv to import\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"mcOrgs\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/McOrgConnectResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import Mediacenter Organisation Connection\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/import/mediacenters\": {\n      \"post\": {\n        \"description\": \"Import mediacenters.\",\n        \"operationId\": \"importMediacenters\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"mediacenters\": {\n                    \"description\": \"Mediacenters csv to import\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"mediacenters\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MediacentersImportResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import mediacenters\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/import/organisations\": {\n      \"post\": {\n        \"description\": \"Import Organisations.\",\n        \"operationId\": \"importOrganisations\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"organisations\": {\n                    \"description\": \"Organisations csv to import\",\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"organisations\"\n                ],\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganisationsImportResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import Organisations\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/mediacenter/{repository}\": {\n      \"get\": {\n        \"description\": \"Only shows the one available/managing the current user (only admin can access all)\",\n        \"operationId\": \"getMediacenters\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get mediacenters in the repository.\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/mediacenter/{repository}/{mediacenter}\": {\n      \"delete\": {\n        \"description\": \"admin rights are required.\",\n        \"operationId\": \"deleteMediacenter\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the mediacenter that should manage the group\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"delete a mediacenter group and it's admin group and proxy group\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"admin rights are required.\",\n        \"operationId\": \"createMediacenter\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"mediacenter name\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Profile\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Mediacenter\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"create new mediacenter in repository.\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"editMediacenter\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"mediacenter name\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Profile\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Mediacenter\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"edit a mediacenter in repository.\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/mediacenter/{repository}/{mediacenter}/licenses\": {\n      \"post\": {\n        \"operationId\": \"getMediacenterLicensedNodes\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the mediacenter that licenses nodes\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"searchword of licensed nodes\",\n            \"in\": \"query\",\n            \"name\": \"searchword\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SearchParameters\"\n              }\n            }\n          },\n          \"description\": \"search parameters\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get nodes that are licensed by the given mediacenter\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/mediacenter/{repository}/{mediacenter}/manages\": {\n      \"get\": {\n        \"operationId\": \"getMediacenterGroups\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the mediacenter that should manage the group\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get groups that are managed by the given mediacenter\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/mediacenter/v1/mediacenter/{repository}/{mediacenter}/manages/{group}\": {\n      \"delete\": {\n        \"description\": \"admin rights are required.\",\n        \"operationId\": \"removeMediacenterGroup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the mediacenter that should manage the group\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the group that should not longer be managed by that mediacenter\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"delete a group that is managed by the given mediacenter\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"although not restricted, it is recommended that the group is an edu-sharing organization (admin rights are required)\",\n        \"operationId\": \"addMediacenterGroup\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the mediacenter that should manage the group\",\n            \"in\": \"path\",\n            \"name\": \"mediacenter\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of the group that should be managed by that mediacenter\",\n            \"in\": \"path\",\n            \"name\": \"group\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"add a group that is managed by the given mediacenter\",\n        \"tags\": [\n          \"MEDIACENTER v1\"\n        ]\n      }\n    },\n    \"/network/v1/repositories\": {\n      \"get\": {\n        \"description\": \"Get repositories.\",\n        \"operationId\": \"getRepositories\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get repositories.\",\n        \"tags\": [\n          \"NETWORK v1\"\n        ]\n      }\n    },\n    \"/network/v1/service\": {\n      \"get\": {\n        \"description\": \"Get the servic entry from the current repository.\",\n        \"operationId\": \"getService\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StoredService\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get own service.\",\n        \"tags\": [\n          \"NETWORK v1\"\n        ]\n      }\n    },\n    \"/network/v1/services\": {\n      \"get\": {\n        \"description\": \"Get registerted services.\",\n        \"operationId\": \"getServices\",\n        \"parameters\": [\n          {\n            \"description\": \"search or filter for services\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get services.\",\n        \"tags\": [\n          \"NETWORK v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Register a new service.\",\n        \"operationId\": \"addService\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Service\"\n              }\n            }\n          },\n          \"description\": \"Service data object\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StoredService\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Register service.\",\n        \"tags\": [\n          \"NETWORK v1\"\n        ]\n      }\n    },\n    \"/network/v1/services/{id}\": {\n      \"put\": {\n        \"description\": \"Update an existing service.\",\n        \"operationId\": \"updateService\",\n        \"parameters\": [\n          {\n            \"description\": \"Service id\",\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Service\"\n              }\n            }\n          },\n          \"description\": \"Service data object\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StoredService\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Update a service.\",\n        \"tags\": [\n          \"NETWORK v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}\": {\n      \"post\": {\n        \"description\": \"Searching nodes.\",\n        \"operationId\": \"getNodes\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"lucene query\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"facets\",\n            \"in\": \"query\",\n            \"name\": \"facets\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResult\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Searching nodes.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}\": {\n      \"delete\": {\n        \"description\": \"Delete node.\",\n        \"operationId\": \"delete\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"move the node to recycle\",\n            \"in\": \"query\",\n            \"name\": \"recycle\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"protocol\",\n            \"in\": \"query\",\n            \"name\": \"protocol\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"store\",\n            \"in\": \"query\",\n            \"name\": \"store\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/aspects\": {\n      \"put\": {\n        \"description\": \"Add aspect to node.\",\n        \"operationId\": \"addAspects\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"aspect name, e.g. ccm:lomreplication\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Add aspect to node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/assocs\": {\n      \"get\": {\n        \"description\": \"Get nodes related based on an assoc.\",\n        \"operationId\": \"getAssocs\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 500,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Either where the given node should be the \\\"SOURCE\\\" or the \\\"TARGET\\\"\",\n            \"in\": \"query\",\n            \"name\": \"direction\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"SOURCE\",\n                \"TARGET\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Association name (e.g. ccm:forkio).\",\n            \"in\": \"query\",\n            \"name\": \"assocName\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get related nodes.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/children\": {\n      \"get\": {\n        \"description\": \"Get children of node.\",\n        \"operationId\": \"getChildren\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node (or \\\"-userhome-\\\" for home directory of current user, \\\"-shared_files-\\\" for shared folders, \\\"-to_me_shared_files\\\" for shared files for the user,\\\"-my_shared_files-\\\" for files shared by the user, \\\"-inbox-\\\" for the inbox, \\\"-workflow_receive-\\\" for files assigned by workflow, \\\"-saved_search-\\\" for saved searches of the user)\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 500,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"filter by type files,folders\",\n            \"in\": \"query\",\n            \"name\": \"filter\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"Filter for a specific association. May be empty\",\n            \"in\": \"query\",\n            \"name\": \"assocName\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get children of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new child.\",\n        \"operationId\": \"createChild\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node use -userhome- for userhome or -inbox- for inbox node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"type of node\",\n            \"in\": \"query\",\n            \"name\": \"type\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"aspects of node\",\n            \"in\": \"query\",\n            \"name\": \"aspects\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"rename if the same node name exists\",\n            \"in\": \"query\",\n            \"name\": \"renameIfExists\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"comment, leave empty = no inital version\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Association type, can be empty\",\n            \"in\": \"query\",\n            \"name\": \"assocType\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties, example: {\\\"{http://www.alfresco.org/model/content/1.0}name\\\": [\\\"test\\\"]}\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new child.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/children/_copy\": {\n      \"post\": {\n        \"description\": \"Create a new child by copying.\",\n        \"operationId\": \"createChildByCopying\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of source node\",\n            \"in\": \"query\",\n            \"name\": \"source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"flag for children\",\n            \"in\": \"query\",\n            \"name\": \"withChildren\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new child by copying.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/children/_fork\": {\n      \"post\": {\n        \"operationId\": \"createForkOfNode\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of source node\",\n            \"in\": \"query\",\n            \"name\": \"source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"flag for children\",\n            \"in\": \"query\",\n            \"name\": \"withChildren\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a copy of a node by creating a forked version (variant).\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/children/_move\": {\n      \"post\": {\n        \"description\": \"Create a new child by moving.\",\n        \"operationId\": \"createChildByMoving\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of source node\",\n            \"in\": \"query\",\n            \"name\": \"source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new child by moving.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/content\": {\n      \"post\": {\n        \"description\": \"Change content of node.\",\n        \"operationId\": \"changeContent\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"comment, leave empty = no new version, otherwise new version is generated\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"MIME-Type\",\n            \"in\": \"query\",\n            \"name\": \"mimetype\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change content of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/import\": {\n      \"post\": {\n        \"description\": \"Import a node from a foreign repository to the local repository.\",\n        \"operationId\": \"importNode\",\n        \"parameters\": [\n          {\n            \"description\": \"The id of the foreign repository\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Parent node where to store it locally, may also use -userhome- or -inbox-\",\n            \"in\": \"query\",\n            \"name\": \"parent\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Import node\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/lock/status\": {\n      \"get\": {\n        \"description\": \"locked status of a node.\",\n        \"operationId\": \"islocked\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeLocked\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"locked status of a node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/lock/unlock\": {\n      \"get\": {\n        \"description\": \"unlock node.\",\n        \"operationId\": \"unlock\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"unlock node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/metadata\": {\n      \"get\": {\n        \"description\": \"Get metadata of node.\",\n        \"operationId\": \"getMetadata\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get metadata of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Change metadata of node (new version).\",\n        \"operationId\": \"changeMetadataWithVersioning\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"comment\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change metadata of node (new version).\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Change metadata of node.\",\n        \"operationId\": \"changeMetadata\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change metadata of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/metadata/template\": {\n      \"get\": {\n        \"description\": \"All the given metadata will be inherited to child nodes.\",\n        \"operationId\": \"getTemplateMetadata\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the metadata template + status for this folder.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"All the given metadata will be inherited to child nodes.\",\n        \"operationId\": \"changeTemplateMetadata\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Is the inherition currently enabled\",\n            \"in\": \"query\",\n            \"name\": \"enable\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set the metadata template for this folder.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/notifys\": {\n      \"get\": {\n        \"description\": \"Ordered by the time of each notify\",\n        \"operationId\": \"getNotifyList\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get notifys (sharing history) of the node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/owner\": {\n      \"post\": {\n        \"description\": \"Set owner of node.\",\n        \"operationId\": \"setOwner\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"username\",\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set owner of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/parents\": {\n      \"get\": {\n        \"description\": \"Get all parents metadata + own metadata of node. Index 0 is always the current node\",\n        \"operationId\": \"getParents\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"activate to return the full alfresco path, otherwise the path for the user home is resolved\",\n            \"in\": \"query\",\n            \"name\": \"fullPath\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ParentEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get parents of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/permissions\": {\n      \"get\": {\n        \"description\": \"Get all permission of node.\",\n        \"operationId\": \"getPermission\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodePermissionEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all permission of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Set local permissions of node.\",\n        \"operationId\": \"setPermission\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"mailtext\",\n            \"in\": \"query\",\n            \"name\": \"mailtext\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"sendMail\",\n            \"in\": \"query\",\n            \"name\": \"sendMail\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"sendCopy\",\n            \"in\": \"query\",\n            \"name\": \"sendCopy\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ACL\"\n              }\n            }\n          },\n          \"description\": \"permissions\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set local permissions of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/permissions/{user}\": {\n      \"get\": {\n        \"description\": \"Check for actual permissions (also when user is in groups) for a specific node\",\n        \"operationId\": \"hasPermission\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Authority (user/group) to check (use \\\"-me-\\\" for current user\",\n            \"in\": \"path\",\n            \"name\": \"user\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Which permissions has user/group for node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/prepareUsage\": {\n      \"post\": {\n        \"description\": \"create remote object and get properties.\",\n        \"operationId\": \"prepareUsage\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeRemote\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"create remote object and get properties.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/preview\": {\n      \"delete\": {\n        \"operationId\": \"deletePreview\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete preview of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Change preview of node.\",\n        \"operationId\": \"changePreview\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"MIME-Type\",\n            \"in\": \"query\",\n            \"name\": \"mimetype\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"create a node version\",\n            \"in\": \"query\",\n            \"name\": \"createVersion\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"properties\": {\n                  \"image\": {\n                    \"type\": \"object\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change preview of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/property\": {\n      \"post\": {\n        \"description\": \"When the property is unset (null), it will be removed\",\n        \"operationId\": \"setProperty\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property\",\n            \"in\": \"query\",\n            \"name\": \"property\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"value\",\n            \"in\": \"query\",\n            \"name\": \"value\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set single property of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/publish\": {\n      \"get\": {\n        \"description\": \"Get all published copies of the current node\",\n        \"operationId\": \"getPublishedCopies\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Publish\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a published copy of the current node \",\n        \"operationId\": \"publishCopy\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"handle mode, if a handle should be created. Skip this parameter if you don't want an handle\",\n            \"in\": \"query\",\n            \"name\": \"handleMode\",\n            \"schema\": {\n              \"enum\": [\n                \"distinct\",\n                \"update\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Publish\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/report\": {\n      \"post\": {\n        \"description\": \"Report a node to notify the admin about an issue)\",\n        \"operationId\": \"reportNode\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"the reason for the report\",\n            \"in\": \"query\",\n            \"name\": \"reason\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"mail of reporting user\",\n            \"in\": \"query\",\n            \"name\": \"userEmail\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"additional user comment\",\n            \"in\": \"query\",\n            \"name\": \"userComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Report the node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/shares\": {\n      \"get\": {\n        \"description\": \"Get list of shares (via mail/token) for a node.\",\n        \"operationId\": \"getShares\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Filter for a specific email or use LINK for link shares (Optional)\",\n            \"in\": \"query\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get shares of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Create a new share for a node\",\n        \"operationId\": \"createShare\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"expiry date for this share, leave empty or -1 for unlimited\",\n            \"in\": \"query\",\n            \"name\": \"expiryDate\",\n            \"schema\": {\n              \"default\": -1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"password for this share, use none to not use a password\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeShare\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a share for a node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/shares/{shareId}\": {\n      \"delete\": {\n        \"description\": \"Remove the specified share id\",\n        \"operationId\": \"removeShare\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"share id\",\n            \"in\": \"path\",\n            \"name\": \"shareId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Remove share of a node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"update the specified share id\",\n        \"operationId\": \"updateShare\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"share id\",\n            \"in\": \"path\",\n            \"name\": \"shareId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"expiry date for this share, leave empty or -1 for unlimited\",\n            \"in\": \"query\",\n            \"name\": \"expiryDate\",\n            \"schema\": {\n              \"default\": -1,\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"new password for share, leave empty if you don't want to change it\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeShare\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"update share of a node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/textContent\": {\n      \"get\": {\n        \"description\": \"May fails with 500 if the node can not be read.\",\n        \"operationId\": \"getTextContent\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeText\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the text content of a document.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Change content of node as text.\",\n        \"operationId\": \"changeContentAsText\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"comment, leave empty = no new version, otherwise new version is generated\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"MIME-Type\",\n            \"in\": \"query\",\n            \"name\": \"mimetype\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"The content data to write (text)\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Change content of node as text.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/versions\": {\n      \"get\": {\n        \"description\": \"Get all versions of node.\",\n        \"operationId\": \"getVersions\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeVersionRefEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all versions of node.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/versions/{major}/{minor}/_revert\": {\n      \"put\": {\n        \"description\": \"Revert to node version.\",\n        \"operationId\": \"revertVersion\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"major version\",\n            \"in\": \"path\",\n            \"name\": \"major\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"minor version\",\n            \"in\": \"path\",\n            \"name\": \"minor\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Revert to node version.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/versions/{major}/{minor}/metadata\": {\n      \"get\": {\n        \"description\": \"Get metadata of node version.\",\n        \"operationId\": \"getVersionMetadata\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"major version\",\n            \"in\": \"path\",\n            \"name\": \"major\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"minor version\",\n            \"in\": \"path\",\n            \"name\": \"minor\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeVersionEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get metadata of node version.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/workflow\": {\n      \"get\": {\n        \"description\": \"Get workflow history of node.\",\n        \"operationId\": \"getWorkflowHistory\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get workflow history.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Add workflow entry to node.\",\n        \"operationId\": \"addWorkflowHistory\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/WorkflowHistory\"\n              }\n            }\n          },\n          \"description\": \"The history entry to put (editor and time can be null and will be filled automatically)\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Add workflow.\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/node/v1/nodes/{repository}/{node}/xapi\": {\n      \"post\": {\n        \"operationId\": \"storeXApiData\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"xApi conform json data\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Store xApi-Conform data for a given node\",\n        \"tags\": [\n          \"NODE v1\"\n        ]\n      }\n    },\n    \"/organization/v1/organizations/{repository}\": {\n      \"get\": {\n        \"description\": \"Get organizations of repository the current user is member. May returns an empty list.\",\n        \"operationId\": \"getOrganizations\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"pattern\",\n            \"in\": \"query\",\n            \"name\": \"pattern\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"search only in memberships, false can only be done by admin\",\n            \"in\": \"query\",\n            \"name\": \"onlyMemberships\",\n            \"schema\": {\n              \"default\": true,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/OrganizationEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get organizations of repository.\",\n        \"tags\": [\n          \"ORGANIZATION v1\"\n        ]\n      }\n    },\n    \"/organization/v1/organizations/{repository}/{organization}\": {\n      \"delete\": {\n        \"description\": \"Delete organization of repository.\",\n        \"operationId\": \"deleteOrganizations\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete organization of repository.\",\n        \"tags\": [\n          \"ORGANIZATION v1\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Get organization by id.\",\n        \"operationId\": \"getOrganization\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of organization\",\n            \"in\": \"path\",\n            \"name\": \"organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get organization by id.\",\n        \"tags\": [\n          \"ORGANIZATION v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"create organization in repository.\",\n        \"operationId\": \"createOrganizations\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"organization name\",\n            \"in\": \"path\",\n            \"name\": \"organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"eduscope (may be null)\",\n            \"in\": \"query\",\n            \"name\": \"eduscope\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"create organization in repository.\",\n        \"tags\": [\n          \"ORGANIZATION v1\"\n        ]\n      }\n    },\n    \"/organization/v1/organizations/{repository}/{organization}/member/{member}\": {\n      \"delete\": {\n        \"description\": \"Remove member from organization.\",\n        \"operationId\": \"removeFromOrganization\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"groupname\",\n            \"in\": \"path\",\n            \"name\": \"organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authorityName of member\",\n            \"in\": \"path\",\n            \"name\": \"member\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Remove member from organization.\",\n        \"tags\": [\n          \"ORGANIZATION v1\"\n        ]\n      }\n    },\n    \"/rating/v1/ratings/{repository}/{node}\": {\n      \"delete\": {\n        \"description\": \"Delete the comment with the given id\",\n        \"operationId\": \"deleteRating\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"delete a comment\",\n        \"tags\": [\n          \"RATING v1\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"Adds the rating. If the current user already rated that element, the rating will be altered\",\n        \"operationId\": \"addOrUpdateRating\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The rating (usually in range 1-5)\",\n            \"in\": \"query\",\n            \"name\": \"rating\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"double\",\n              \"type\": \"number\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"description\": \"Text content of rating\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"create or update a rating\",\n        \"tags\": [\n          \"RATING v1\"\n        ]\n      }\n    },\n    \"/register/v1/activate/{key}\": {\n      \"post\": {\n        \"operationId\": \"activate\",\n        \"parameters\": [\n          {\n            \"description\": \"The key for the user to activate\",\n            \"in\": \"path\",\n            \"name\": \"key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Activate a new user (by using a supplied key)\",\n        \"tags\": [\n          \"REGISTER v1\"\n        ]\n      }\n    },\n    \"/register/v1/exists/{mail}\": {\n      \"get\": {\n        \"operationId\": \"mailExists\",\n        \"parameters\": [\n          {\n            \"description\": \"The mail (authority) of the user to check\",\n            \"in\": \"path\",\n            \"name\": \"mail\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegisterExists\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Check if the given mail is already successfully registered\",\n        \"tags\": [\n          \"REGISTER v1\"\n        ]\n      }\n    },\n    \"/register/v1/recover/{mail}\": {\n      \"post\": {\n        \"operationId\": \"recoverPassword\",\n        \"parameters\": [\n          {\n            \"description\": \"The mail (authority) of the user to recover\",\n            \"in\": \"path\",\n            \"name\": \"mail\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Send a mail to recover/reset password\",\n        \"tags\": [\n          \"REGISTER v1\"\n        ]\n      }\n    },\n    \"/register/v1/register\": {\n      \"post\": {\n        \"operationId\": \"register\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RegisterInformation\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Register a new user\",\n        \"tags\": [\n          \"REGISTER v1\"\n        ]\n      }\n    },\n    \"/register/v1/resend/{mail}\": {\n      \"post\": {\n        \"description\": \"The method will return false if there is no pending registration for the given mail\",\n        \"operationId\": \"resendMail\",\n        \"parameters\": [\n          {\n            \"description\": \"The mail a registration is pending for and should be resend to\",\n            \"in\": \"path\",\n            \"name\": \"mail\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Resend a registration mail for a given mail address\",\n        \"tags\": [\n          \"REGISTER v1\"\n        ]\n      }\n    },\n    \"/register/v1/reset/{key}/{password}\": {\n      \"post\": {\n        \"operationId\": \"resetPassword\",\n        \"parameters\": [\n          {\n            \"description\": \"The key for the password reset request\",\n            \"in\": \"path\",\n            \"name\": \"key\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The new password for the user\",\n            \"in\": \"path\",\n            \"name\": \"password\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Send a mail to recover/reset password\",\n        \"tags\": [\n          \"REGISTER v1\"\n        ]\n      }\n    },\n    \"/rendering/v1/details/{repository}/{node}\": {\n      \"get\": {\n        \"description\": \"Get metadata of node.\",\n        \"operationId\": \"getDetailsSnippet\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"version of node\",\n            \"in\": \"query\",\n            \"name\": \"version\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Rendering displayMode\",\n            \"in\": \"query\",\n            \"name\": \"displayMode\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RenderingDetailsEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get metadata of node.\",\n        \"tags\": [\n          \"RENDERING v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Get metadata of node.\",\n        \"operationId\": \"getDetailsSnippetWithParameters\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"version of node\",\n            \"in\": \"query\",\n            \"name\": \"version\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Rendering displayMode\",\n            \"in\": \"query\",\n            \"name\": \"displayMode\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"additional parameters to send to the rendering service\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RenderingDetailsEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get metadata of node.\",\n        \"tags\": [\n          \"RENDERING v1\"\n        ]\n      }\n    },\n    \"/search/v1/custom/{repository}\": {\n      \"get\": {\n        \"description\": \"e.g. property=cm:name, value:*Test*\",\n        \"operationId\": \"searchByProperty\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Type of element\",\n            \"in\": \"query\",\n            \"name\": \"contentType\",\n            \"schema\": {\n              \"enum\": [\n                \"FILES\",\n                \"FOLDERS\",\n                \"FILES_AND_FOLDERS\",\n                \"COLLECTIONS\",\n                \"TOOLPERMISSIONS\",\n                \"ALL\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Combine mode, AND or OR, defaults to AND\",\n            \"in\": \"query\",\n            \"name\": \"combineMode\",\n            \"schema\": {\n              \"enum\": [\n                \"AND\",\n                \"OR\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"One (or more) properties to search for, will be combined by specified combine mode\",\n            \"in\": \"query\",\n            \"name\": \"property\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"One (or more) values to search for, matching the properties defined before\",\n            \"in\": \"query\",\n            \"name\": \"value\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"(Optional) comparator, only relevant for date or numerical fields, currently allowed =, \u003c=, \u003e=\",\n            \"in\": \"query\",\n            \"name\": \"comparator\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultNode\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search for custom properties with custom values\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/search/v1/queries/load/{nodeId}\": {\n      \"get\": {\n        \"description\": \"Load a saved search query.\",\n        \"operationId\": \"loadSaveSearch\",\n        \"parameters\": [\n          {\n            \"description\": \"Node id of the search item\",\n            \"in\": \"path\",\n            \"name\": \"nodeId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Type of element\",\n            \"in\": \"query\",\n            \"name\": \"contentType\",\n            \"schema\": {\n              \"enum\": [\n                \"FILES\",\n                \"FOLDERS\",\n                \"FILES_AND_FOLDERS\",\n                \"COLLECTIONS\",\n                \"TOOLPERMISSIONS\",\n                \"ALL\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"facets\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Node\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Load a saved search query.\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/search/v1/queries/{repository}/contributor\": {\n      \"get\": {\n        \"operationId\": \"searchContributor\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"search word\",\n            \"in\": \"query\",\n            \"name\": \"searchWord\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"contributor kind\",\n            \"in\": \"query\",\n            \"name\": \"contributorKind\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"PERSON\",\n              \"enum\": [\n                \"PERSON\",\n                \"ORGANIZATION\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"define which authority fields should be searched: ['firstname', 'lastname', 'email', 'uuid', 'url']\",\n            \"in\": \"query\",\n            \"name\": \"fields\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"define which contributor props should be searched: ['ccm:lifecyclecontributer_author', 'ccm:lifecyclecontributer_publisher', ..., 'ccm:metadatacontributer_creator', 'ccm:metadatacontributer_validator']\",\n            \"in\": \"query\",\n            \"name\": \"contributorProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Search for contributors\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/search/v1/queries/{repository}/fingerprint/{nodeid}\": {\n      \"post\": {\n        \"description\": \"Perform queries based on metadata sets.\",\n        \"operationId\": \"searchFingerprint\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"nodeid\",\n            \"in\": \"path\",\n            \"name\": \"nodeid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultNode\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Perform queries based on metadata sets.\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/search/v1/queries/{repository}/{metadataset}/{query}\": {\n      \"post\": {\n        \"description\": \"Perform queries based on metadata sets.\",\n        \"operationId\": \"search\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of metadataset (or \\\"-default-\\\" for default metadata set)\",\n            \"in\": \"path\",\n            \"name\": \"metadataset\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-default-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of query\",\n            \"in\": \"path\",\n            \"name\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Type of element\",\n            \"in\": \"query\",\n            \"name\": \"contentType\",\n            \"schema\": {\n              \"enum\": [\n                \"FILES\",\n                \"FOLDERS\",\n                \"FILES_AND_FOLDERS\",\n                \"COLLECTIONS\",\n                \"TOOLPERMISSIONS\",\n                \"ALL\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SearchParameters\"\n              }\n            }\n          },\n          \"description\": \"search parameters\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultNode\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Perform queries based on metadata sets.\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/search/v1/queries/{repository}/{metadataset}/{query}/save\": {\n      \"post\": {\n        \"description\": \"Save a search query.\",\n        \"operationId\": \"saveSearch\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of metadataset (or \\\"-default-\\\" for default metadata set)\",\n            \"in\": \"path\",\n            \"name\": \"metadataset\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-default-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of query\",\n            \"in\": \"path\",\n            \"name\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Name of the new search item\",\n            \"in\": \"query\",\n            \"name\": \"name\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Replace if search with the same name exists\",\n            \"in\": \"query\",\n            \"name\": \"replace\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/MdsQueryCriteria\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"search parameters\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Save a search query.\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/search/v1/relevant/{repository}\": {\n      \"get\": {\n        \"operationId\": \"getRelevantNodes\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"property filter for result nodes (or \\\"-all-\\\" for all properties)\",\n            \"in\": \"query\",\n            \"name\": \"propertyFilter\",\n            \"schema\": {\n              \"items\": {\n                \"default\": \"-all-\",\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResultNode\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get relevant nodes for the current user\",\n        \"tags\": [\n          \"SEARCH v1\"\n        ]\n      }\n    },\n    \"/sharing/v1/sharing/{repository}/{node}/{share}\": {\n      \"get\": {\n        \"operationId\": \"getInfo\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Share token\",\n            \"in\": \"path\",\n            \"name\": \"share\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Password to validate (optional)\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SharingInfo\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get general info of a share.\",\n        \"tags\": [\n          \"SHARING v1\"\n        ]\n      }\n    },\n    \"/sharing/v1/sharing/{repository}/{node}/{share}/children\": {\n      \"get\": {\n        \"description\": \"Only valid for shared folders\",\n        \"operationId\": \"getChildren_1\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Share token\",\n            \"in\": \"path\",\n            \"name\": \"share\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Password (required if share is locked)\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 500,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntries\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all children of this share.\",\n        \"tags\": [\n          \"SHARING v1\"\n        ]\n      }\n    },\n    \"/statistic/v1/facets/{context}\": {\n      \"post\": {\n        \"description\": \"Statistics.\",\n        \"operationId\": \"get\",\n        \"parameters\": [\n          {\n            \"description\": \"context, the node where to start\",\n            \"in\": \"path\",\n            \"name\": \"context\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-root-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"properties\",\n            \"in\": \"query\",\n            \"name\": \"properties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Filter\"\n              }\n            }\n          },\n          \"description\": \"filter\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Statistics\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get statistics of repository.\",\n        \"tags\": [\n          \"STATISTIC v1\"\n        ]\n      }\n    },\n    \"/statistic/v1/public\": {\n      \"get\": {\n        \"description\": \"Get global statistics for this repository.\",\n        \"operationId\": \"getGlobalStatistics\",\n        \"parameters\": [\n          {\n            \"description\": \"primary property to build facets and count+group values\",\n            \"in\": \"query\",\n            \"name\": \"group\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"additional properties to build facets and count+sub-group values\",\n            \"in\": \"query\",\n            \"name\": \"subGroup\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StatisticsGlobal\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get stats.\",\n        \"tags\": [\n          \"STATISTIC v1\"\n        ]\n      }\n    },\n    \"/statistic/v1/statistics/nodes\": {\n      \"post\": {\n        \"description\": \"requires either toolpermission TOOLPERMISSION_GLOBAL_STATISTICS_NODES for global stats or to be admin of the requested mediacenter\",\n        \"operationId\": \"getStatisticsNode\",\n        \"parameters\": [\n          {\n            \"description\": \"Grouping type (by date)\",\n            \"in\": \"query\",\n            \"name\": \"grouping\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"None\",\n                \"Daily\",\n                \"Monthly\",\n                \"Yearly\",\n                \"Node\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"date range from\",\n            \"in\": \"query\",\n            \"name\": \"dateFrom\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"date range to\",\n            \"in\": \"query\",\n            \"name\": \"dateTo\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"the mediacenter to filter for statistics\",\n            \"in\": \"query\",\n            \"name\": \"mediacenter\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"additionals fields of the custom json object stored in each query that should be returned\",\n            \"in\": \"query\",\n            \"name\": \"additionalFields\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"grouping fields of the custom json object stored in each query (currently only meant to be combined with no grouping by date)\",\n            \"in\": \"query\",\n            \"name\": \"groupField\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"filters for the custom json object stored in each entry\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get statistics for node actions\",\n        \"tags\": [\n          \"STATISTIC v1\"\n        ]\n      }\n    },\n    \"/statistic/v1/statistics/nodes/altered\": {\n      \"get\": {\n        \"description\": \"requires admin\",\n        \"operationId\": \"getNodesAlteredInRange\",\n        \"parameters\": [\n          {\n            \"description\": \"date range from\",\n            \"in\": \"query\",\n            \"name\": \"dateFrom\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get the range of nodes which had tracked actions since a given timestamp\",\n        \"tags\": [\n          \"STATISTIC v1\"\n        ]\n      }\n    },\n    \"/statistic/v1/statistics/nodes/node/{id}\": {\n      \"get\": {\n        \"description\": \"requires admin\",\n        \"operationId\": \"getNodeData\",\n        \"parameters\": [\n          {\n            \"description\": \"node id to fetch data for\",\n            \"in\": \"path\",\n            \"name\": \"id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"date range from\",\n            \"in\": \"query\",\n            \"name\": \"dateFrom\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get the range of nodes which had tracked actions since a given timestamp\",\n        \"tags\": [\n          \"STATISTIC v1\"\n        ]\n      }\n    },\n    \"/statistic/v1/statistics/users\": {\n      \"post\": {\n        \"description\": \"requires either toolpermission TOOLPERMISSION_GLOBAL_STATISTICS_USER for global stats or to be admin of the requested mediacenter\",\n        \"operationId\": \"getStatisticsUser\",\n        \"parameters\": [\n          {\n            \"description\": \"Grouping type (by date)\",\n            \"in\": \"query\",\n            \"name\": \"grouping\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"None\",\n                \"Daily\",\n                \"Monthly\",\n                \"Yearly\",\n                \"Node\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"date range from\",\n            \"in\": \"query\",\n            \"name\": \"dateFrom\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"date range to\",\n            \"in\": \"query\",\n            \"name\": \"dateTo\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"the mediacenter to filter for statistics\",\n            \"in\": \"query\",\n            \"name\": \"mediacenter\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"additionals fields of the custom json object stored in each query that should be returned\",\n            \"in\": \"query\",\n            \"name\": \"additionalFields\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"grouping fields of the custom json object stored in each query (currently only meant to be combined with no grouping by date)\",\n            \"in\": \"query\",\n            \"name\": \"groupField\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"filters for the custom json object stored in each entry\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"get statistics for user actions (login, logout)\",\n        \"tags\": [\n          \"STATISTIC v1\"\n        ]\n      }\n    },\n    \"/stream/v1/access/{repository}/{node}\": {\n      \"get\": {\n        \"operationId\": \"canAccess\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The property to aggregate\",\n            \"in\": \"path\",\n            \"name\": \"node\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"test\",\n        \"tags\": [\n          \"STREAM v1\"\n        ]\n      }\n    },\n    \"/stream/v1/add/{repository}\": {\n      \"put\": {\n        \"description\": \"will return the object and add the id to the object if creation succeeded\",\n        \"operationId\": \"addEntry\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/StreamEntryInput\"\n              }\n            }\n          },\n          \"description\": \"Stream object to add\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StreamEntryInput\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"add a new stream object.\",\n        \"tags\": [\n          \"STREAM v1\"\n        ]\n      }\n    },\n    \"/stream/v1/delete/{repository}/{entry}\": {\n      \"delete\": {\n        \"description\": \"the current user must be author of the given stream object\",\n        \"operationId\": \"deleteEntry\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"entry id to delete\",\n            \"in\": \"path\",\n            \"name\": \"entry\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"delete a stream object\",\n        \"tags\": [\n          \"STREAM v1\"\n        ]\n      }\n    },\n    \"/stream/v1/properties/{repository}/{property}\": {\n      \"get\": {\n        \"operationId\": \"getPropertyValues\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The property to aggregate\",\n            \"in\": \"path\",\n            \"name\": \"property\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get top values for a property\",\n        \"tags\": [\n          \"STREAM v1\"\n        ]\n      }\n    },\n    \"/stream/v1/search/{repository}\": {\n      \"post\": {\n        \"operationId\": \"search_1\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Stream object status to search for\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"generic text to search for (in title or description)\",\n            \"in\": \"query\",\n            \"name\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"maximum items per page\",\n            \"in\": \"query\",\n            \"name\": \"maxItems\",\n            \"schema\": {\n              \"default\": 10,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"skip a number of items\",\n            \"in\": \"query\",\n            \"name\": \"skipCount\",\n            \"schema\": {\n              \"default\": 0,\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"sort properties, currently supported: created, priority, default: priority desc, created desc\",\n            \"in\": \"query\",\n            \"name\": \"sortProperties\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          },\n          {\n            \"description\": \"sort ascending, true if not set. Use multiple values to change the direction according to the given property at the same index\",\n            \"in\": \"query\",\n            \"name\": \"sortAscending\",\n            \"schema\": {\n              \"items\": {\n                \"type\": \"boolean\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"type\": \"string\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"map with property + value to search\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StreamList\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get the stream content for the current user with the given status.\",\n        \"tags\": [\n          \"STREAM v1\"\n        ]\n      }\n    },\n    \"/stream/v1/status/{repository}/{entry}\": {\n      \"put\": {\n        \"operationId\": \"updateEntry\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"entry id to update\",\n            \"in\": \"path\",\n            \"name\": \"entry\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"authority to set/change status\",\n            \"in\": \"query\",\n            \"name\": \"authority\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"New status for this authority\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"update status for a stream object and authority\",\n        \"tags\": [\n          \"STREAM v1\"\n        ]\n      }\n    },\n    \"/tool/v1/tools/{repository}/tooldefinitions\": {\n      \"get\": {\n        \"description\": \"Get all ToolDefinitions.\",\n        \"operationId\": \"getAllToolDefinitions\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all ToolDefinitions.\",\n        \"tags\": [\n          \"TOOL v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new tool definition object.\",\n        \"operationId\": \"createToolDefintition\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"rename if the same node name exists\",\n            \"in\": \"query\",\n            \"name\": \"renameIfExists\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"comment, leave empty = no inital version\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties, example: {\\\"{http://www.alfresco.org/model/content/1.0}name\\\": [\\\"test\\\"]}\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new tool definition object.\",\n        \"tags\": [\n          \"TOOL v1\"\n        ]\n      }\n    },\n    \"/tool/v1/tools/{repository}/{nodeid}/toolinstance\": {\n      \"get\": {\n        \"description\": \"Get Instances of a ToolDefinition.\",\n        \"operationId\": \"getInstance\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"nodeid\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get Instances of a ToolDefinition.\",\n        \"tags\": [\n          \"TOOL v1\"\n        ]\n      }\n    },\n    \"/tool/v1/tools/{repository}/{toolDefinition}/toolinstances\": {\n      \"get\": {\n        \"description\": \"Get Instances of a ToolDefinition.\",\n        \"operationId\": \"getInstances\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"toolDefinition\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get Instances of a ToolDefinition.\",\n        \"tags\": [\n          \"TOOL v1\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Create a new tool Instance object.\",\n        \"operationId\": \"createToolInstance\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node must have tool_definition aspect\",\n            \"in\": \"path\",\n            \"name\": \"toolDefinition\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"rename if the same node name exists\",\n            \"in\": \"query\",\n            \"name\": \"renameIfExists\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"comment, leave empty = no inital version\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties, example: {\\\"{http://www.alfresco.org/model/content/1.0}name\\\": [\\\"test\\\"]}\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new tool Instance object.\",\n        \"tags\": [\n          \"TOOL v1\"\n        ]\n      }\n    },\n    \"/tool/v1/tools/{repository}/{toolinstance}/toolobject\": {\n      \"post\": {\n        \"description\": \"Create a new tool object for a given tool instance.\",\n        \"operationId\": \"createToolObject\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of parent node (a tool instance object)\",\n            \"in\": \"path\",\n            \"name\": \"toolinstance\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"rename if the same node name exists\",\n            \"in\": \"query\",\n            \"name\": \"renameIfExists\",\n            \"schema\": {\n              \"default\": false,\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"comment, leave empty = no inital version\",\n            \"in\": \"query\",\n            \"name\": \"versionComment\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"type\": \"array\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"description\": \"properties, example: {\\\"{http://www.alfresco.org/model/content/1.0}name\\\": [\\\"test\\\"]}\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeEntry\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"409\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Duplicate Entity/Node conflict (Node with same name exists)\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Create a new tool object for a given tool instance.\",\n        \"tags\": [\n          \"TOOL v1\"\n        ]\n      }\n    },\n    \"/tracking/v1/tracking/{repository}/{event}\": {\n      \"put\": {\n        \"description\": \"Currently limited to video / audio play interactions\",\n        \"operationId\": \"trackEvent\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repository\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"type of event to track\",\n            \"in\": \"path\",\n            \"name\": \"event\",\n            \"required\": true,\n            \"schema\": {\n              \"enum\": [\n                \"DOWNLOAD_MATERIAL\",\n                \"VIEW_MATERIAL\",\n                \"VIEW_MATERIAL_EMBEDDED\",\n                \"VIEW_MATERIAL_PLAY_MEDIA\",\n                \"LOGIN_USER_SESSION\",\n                \"LOGIN_USER_OAUTH_PASSWORD\",\n                \"LOGIN_USER_OAUTH_REFRESH_TOKEN\",\n                \"LOGOUT_USER_TIMEOUT\",\n                \"LOGOUT_USER_REGULAR\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"node id for which the event is tracked. For some event, this can be null\",\n            \"in\": \"query\",\n            \"name\": \"node\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Track a user interaction\",\n        \"tags\": [\n          \"TRACKING v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/course/{appId}/{courseId}\": {\n      \"get\": {\n        \"description\": \"Get all usages of an course.\",\n        \"operationId\": \"getUsagesByCourse\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of application (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"appId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of course\",\n            \"in\": \"path\",\n            \"name\": \"courseId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Usages\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all usages of an course.\",\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/node/{nodeId}\": {\n      \"get\": {\n        \"description\": \"Get all usages of an node.\",\n        \"operationId\": \"getUsagesByNode\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"nodeId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Usages\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all usages of an node.\",\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/node/{nodeId}/collections\": {\n      \"get\": {\n        \"operationId\": \"getUsagesByNodeCollections\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"nodeId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all collections where this node is used.\",\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/node/{nodeId}/{usageId}\": {\n      \"delete\": {\n        \"operationId\": \"deleteUsage\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of node\",\n            \"in\": \"path\",\n            \"name\": \"nodeId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of usage\",\n            \"in\": \"path\",\n            \"name\": \"usageId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Usages\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Delete an usage of a node.\",\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/repository/{repositoryId}\": {\n      \"post\": {\n        \"description\": \"headers must be set: X-Edu-App-Id, X-Edu-App-Sig, X-Edu-App-Signed, X-Edu-App-Ts\",\n        \"operationId\": \"setUsage\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"repositoryId\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateUsage\"\n              }\n            }\n          },\n          \"description\": \" usage date\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Usage\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Set a usage for a node. app signature headers and authenticated user required.\",\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/repository/{repositoryId}/{nodeId}\": {\n      \"get\": {\n        \"operationId\": \"getUsages_1\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of repository\",\n            \"in\": \"path\",\n            \"name\": \"repositoryId\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-home-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"ID of node. Use -all- for getting usages of all nodes\",\n            \"in\": \"path\",\n            \"name\": \"nodeId\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": \"-all-\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"from date\",\n            \"in\": \"query\",\n            \"name\": \"from\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"to date\",\n            \"in\": \"query\",\n            \"name\": \"to\",\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"content\": {\n              \"application/json\": {}\n            },\n            \"description\": \"default response\"\n          }\n        },\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    },\n    \"/usage/v1/usages/{appId}\": {\n      \"get\": {\n        \"description\": \"Get all usages of an application.\",\n        \"operationId\": \"getUsages\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of application (or \\\"-home-\\\" for home repository)\",\n            \"in\": \"path\",\n            \"name\": \"appId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Usages\"\n                }\n              }\n            },\n            \"description\": \"OK.\"\n          },\n          \"400\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Preconditions are not present.\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Authorization failed.\"\n          },\n          \"403\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Session user has insufficient rights to perform this operation.\"\n          },\n          \"404\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Ressources are not found.\"\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            },\n            \"description\": \"Fatal error occured.\"\n          }\n        },\n        \"summary\": \"Get all usages of an application.\",\n        \"tags\": [\n          \"USAGE v1\"\n        ]\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/edu-sharing/rest\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/edu-sharing/edu-sharing-community-repository@2284935ccc431ca8c2e44a6c6c268c54b47b62d4/-/blob/Backend/services/rest/api/src/main/resources/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/edu-sharing/edu-sharing-community-repository/blob/2284935ccc431ca8c2e44a6c6c268c54b47b62d4/Backend/services/rest/api/src/main/resources/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at Backend/services/rest/api/src/main/resources/openapi.json:5635:5: duplicate path: \"/admin/v1/applications/{xml}\""
}