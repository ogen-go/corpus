{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ClimateMind/climatemind-backend"
		},
		"file": {
			"name": "Climate-Mind_bundled.yml",
			"size": 0,
			"path": "app/static/Climate-Mind_bundled.yml",
			"byteSize": 51379,
			"content": "openapi: 3.1.0\ninfo:\n  title: Climate Mind\n  version: '1.0'\n  summary: Climate Mind app API\n  description: Endpoints for the Climate Mind App API\n  contact:\n    name: Kameron\n    email: hello@climatemind.org\nservers:\n  - url: 'https://app-backend-test-001.azurewebsites.net'\n    description: test site\npaths:\n  /conversations:\n    get:\n      summary: All Conversations - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  conversations:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      required:\n                        - conversationId\n                        - conversationStatus\n                        - createdByUserId\n                        - createdDateTime\n                        - invitedUserName\n                      properties:\n                        conversationId:\n                          type: string\n                          minLength: 1\n                        conversationStatus:\n                          type: number\n                        createdByUserId:\n                          type: string\n                          minLength: 1\n                        createdDateTime:\n                          type: string\n                          minLength: 1\n                        invitedUserName:\n                          type: string\n                          minLength: 1\n                required:\n                  - conversations\n                x-examples:\n                  example-1:\n                    conversations:\n                      - conversationId: 5565C2B1-FC21-4A13-9854-3356EF46A7F5\n                        conversationStatus: 0\n                        createdByUserId: 39229453-E000-4801-91CA-D1F85E750508\n                        createdDateTime: 'Fri, 31 Dec 2021 09:07:48 GMT'\n                        invitedUserName: Jim 4\n                      - conversationId: 599E7CE8-DBCD-4FD3-97DA-41B6F6BABDEE\n                        conversationStatus: 0\n                        createdByUserId: 39229453-E000-4801-91CA-D1F85E750508\n                        createdDateTime: 'Tue, 04 Jan 2022 17:16:36 GMT'\n                        invitedUserName: Jim 4\n                      - conversationId: 7F910A47-9AED-4A27-8F33-3AE95230A776\n                        conversationStatus: 0\n                        createdByUserId: 39229453-E000-4801-91CA-D1F85E750508\n                        createdDateTime: 'Tue, 04 Jan 2022 17:27:39 GMT'\n                        invitedUserName: Jim 4\n                      - conversationId: 71B315C3-895F-4A7D-A752-080B123802ED\n                        conversationStatus: 0\n                        createdByUserId: 39229453-E000-4801-91CA-D1F85E750508\n                        createdDateTime: 'Wed, 05 Jan 2022 06:44:33 GMT'\n                        invitedUserName: Jim 4\n              examples:\n                Successful GET Conversations Response Body:\n                  value:\n                    conversations:\n                      - conversationId: 4EBCE8D2-D0A3-436B-8944-9914D866B83B\n                        conversationStatus: 0\n                        createdByUserId: C34EAF2F-9E88-474E-9A03-EED62B5F5A5D\n                        createdDateTime: 'Sun, 10 Oct 2021 17:45:19 GMT'\n                        invitedUserName: Kameron\n                      - conversationId: 2D253AF7-DAD9-4B5A-9479-AD1FEC08EDC8\n                        conversationStatus: 0\n                        createdByUserId: C34EAF2F-9E88-474E-9A03-EED62B5F5A5D\n                        createdDateTime: 'Sun, 10 Oct 2021 18:35:02 GMT'\n                        invitedUserName: Andrew\n                      - conversationId: 22F4E691-A896-4A56-BB2A-6E7E7E4B7214\n                        conversationStatus: 0\n                        createdByUserId: C34EAF2F-9E88-474E-9A03-EED62B5F5A5D\n                        createdDateTime: 'Tue, 12 Oct 2021 22:41:26 GMT'\n                        invitedUserName: dda\n                example-2:\n                  value:\n                    conversations:\n                      - null\n      operationId: get-conversations\n      description: 'Registered users can see a list of their conversations. Returns a list of the user''s conversations with the relevant names, UUIDs, conversation status and creation date. A JWT token is required.'\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n    parameters: []\n  '/conversation/:conversationId':\n    put:\n      summary: Single Conversation - PUT\n      tags: []\n      responses:\n        '202':\n          description: Accepted\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                  conversationId:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n                  - conversationId\n                x-examples:\n                  example-1:\n                    message: conversation status updated\n                    conversationId: '{conversation_uuid}'\n      operationId: put-conversation\n      description: Change the status of the conversation in the conversations table for User A according to the actions taken by User B.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                conversationStatus:\n                  type: number\n            examples:\n              Update conversation status to 1 - Visited.:\n                value:\n                  conversationStatusId: 1\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n        description: ''\n    parameters: []\n    get:\n      summary: Single Conversation - GET\n      operationId: 'get-conversation-:conversationId'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  conversationId:\n                    type: string\n                    minLength: 1\n                  userA:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                        minLength: 1\n                      id:\n                        type: string\n                        minLength: 1\n                      sessionId:\n                        type: string\n                        minLength: 1\n                    required:\n                      - name\n                      - id\n                      - sessionId\n                  userB:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                        minLength: 1\n                    required:\n                      - name\n                  conversationStatus:\n                    type: number\n                  consent:\n                    type: boolean\n                  conversationTimestamp:\n                    type: string\n                    minLength: 1\n                required:\n                  - conversationId\n                  - userA\n                  - userB\n                  - conversationStatus\n                  - consent\n                  - conversationTimestamp\n                x-examples:\n                  example-1:\n                    conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb\n                    userA:\n                      name: Bill\n                      id: ba5df442-7261-4fc1-bff0-5dfd84035d56\n                      sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357\n                    userB:\n                      name: Bob\n                    conversationStatus: 2\n                    consent: true\n                    conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'\n              examples:\n                Successful GET Conversation Response Body:\n                  value:\n                    conversationId: cc63e48f-d066-44e7-851c-c28af17ab3fb\n                    userA:\n                      name: Bill\n                      id: ba5df442-7261-4fc1-bff0-5dfd84035d56\n                      sessionId: 671e4949-a3e4-4844-b9d2-cd843f48f357\n                    userB:\n                      name: Bob\n                    conversationStatus: 2\n                    consent: true\n                    conversationTimestamp: 'Sun, 10 Oct 2021 18:35:02 GMT'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n              examples:\n                GET Conversation Not Found Response Body:\n                  value:\n                    error: CONVERSATION_UUID is not in the db.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session UUID\n      description: 'Get the details of a single conversation. '\n  /alignment:\n    post:\n      summary: Alignment Scores - POST\n      tags: []\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  alignmentScoresId:\n                    type: string\n                required:\n                  - alignmentScoresId\n              examples:\n                Successful POST Alignment Scores Response Body:\n                  value:\n                    alignmentScoresId: d86fcf26-7834-4bce-bfb7-f88170da9ace\n      operationId: post-alignment\n      description: To create aligned scores between user A and user B after user B has completed their quiz.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          description: Session uuid\n          name: X-Session-Id\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              x-examples:\n                example-1:\n                  conversationId: string\n              properties:\n                conversationId:\n                  type: string\n                  minLength: 1\n                quizId:\n                  type: string\n              required:\n                - conversationId\n                - quizId\n            examples:\n              POST Alignment Scores Body:\n                value:\n                  conversationId: 7f910a47-9aed-4a27-8f33-3ae95230a776\n                  quizId: d86fcf26-7834-4bce-bfb7-f88170da9ace\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n        description: Conversation ID and quiz ID are required.\n    parameters: []\n  '/alignment/:alignmentScoresId':\n    get:\n      summary: Alignment Scores - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                x-examples:\n                  example-1:\n                    overallSimilarityScore: 70\n                    topMatchPercent: 90\n                    topMatchValue: benevolence\n                    valueAlignment:\n                      - valueName: benevolence\n                        score: 90\n                        description: lots of text\n                      - valueName: power\n                        score: 80\n                        description: lots of text\n                      - valueName: achievement\n                        score: 70\n                        description: lots of text\n                      - valueName: self-direction\n                        score: 60\n                        description: lots of text\n                      - valueName: hedonism\n                        score: 50\n                        description: lots of text\n                      - valueName: tradition\n                        score: 40\n                        description: lots of text\n                      - valueName: conformity\n                        score: 30\n                        description: lots of text\n                      - valueName: universalism\n                        score: 30\n                        description: lots of text\n                      - valueName: stimulation\n                        score: 20\n                        description: lots of text\n                      - valueName: security\n                        score: 10\n                        description: lots of text\n                    userAName: Bill\n                    userBName: Bob\n                properties:\n                  overallSimilarityScore:\n                    type: number\n                  topMatchPercent:\n                    type: number\n                  topMatchValue:\n                    type: string\n                    minLength: 1\n                  valueAlignment:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      type: object\n                      properties:\n                        description:\n                          type: string\n                          minLength: 1\n                        id:\n                          type: string\n                        name:\n                          type: string\n                          minLength: 1\n                        shortDescription:\n                          type: string\n                        score:\n                          type: number\n                      required:\n                        - description\n                        - name\n                        - score\n                  userAName:\n                    type: string\n                    minLength: 1\n                  userBName:\n                    type: string\n                    minLength: 1\n                required:\n                  - overallSimilarityScore\n                  - topMatchPercent\n                  - topMatchValue\n                  - valueAlignment\n                  - userAName\n                  - userBName\n              examples:\n                Successful GET Alignment Scores Response Body:\n                  value:\n                    overallSimilarityScore: 70\n                    topMatchPercent: 90\n                    topMatchValue: Benevolence\n                    valueAlignment:\n                      - description: lots of text\n                        id: benevolence\n                        name: benevolence\n                        shortDescription: some text\n                        score: 90\n                      - description: lots of text\n                        id: power\n                        name: power\n                        shortDescription: some text\n                        score: 80\n                      - description: lots of text\n                        id: achievement\n                        name: achievement\n                        shortDescription: some text\n                        score: 70\n                      - description: lots of text\n                        id: self_direction\n                        name: self direction\n                        shortDescription: some text\n                        score: 60\n                      - description: lots of text\n                        id: hedonism\n                        name: hedonism\n                        shortDescription: some text\n                        score: 50\n                      - description: lots of text\n                        id: tradition\n                        name: tradition\n                        shortDescription: some text\n                        score: 40\n                      - description: lots of text\n                        id: conformity\n                        name: conformity\n                        shortDescription: some text\n                        score: 30\n                      - description: lots of text\n                        id: universalism\n                        name: universalism\n                        shortDescription: some text\n                        score: 30\n                      - description: lots of text\n                        id: stimulation\n                        name: stimulation\n                        shortDescription: some text\n                        score: 20\n                      - description: lots of text\n                        id: security\n                        name: security\n                        shortDescription: some text\n                        score: 10\n                    userAName: Bill\n                    userBName: Bob\n      operationId: get-alignment\n      description: For a user to get a comparison of personal values with another user.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties: {}\n    parameters: []\n  '/alignment/:alignmentScoresId/shared-impacts':\n    get:\n      summary: Shared Impacts - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  climateEffects:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      required:\n                        - effectId\n                        - sharedScore\n                        - effectShortDescription\n                        - effectTitle\n                        - imageUrl\n                      properties:\n                        effectId:\n                          type: string\n                          minLength: 1\n                        sharedScore:\n                          type: number\n                        effectShortDescription:\n                          type: string\n                          minLength: 1\n                        effectTitle:\n                          type: string\n                          minLength: 1\n                        imageUrl:\n                          type: string\n                          minLength: 1\n                        relatedPersonalValues:\n                          type: array\n                          items:\n                            required: []\n                            properties: {}\n                  userAName:\n                    type: string\n                    minLength: 1\n                  userBName:\n                    type: string\n                    minLength: 1\n                required:\n                  - climateEffects\n                  - userAName\n                  - userBName\n                x-examples:\n                  example-1:\n                    climateEffects:\n                      - effectId: RBvy0CVizhdMfXbtJIc2En\n                        sharedScore: 27.9\n                        effectShortDescription: 'The total value of goods produced and services provided each year are increasingly     being constrained. Global warming is decreasing GDP by increasing in the frequency of heat waves and shrinking the tourism industry, among other impacts.'\n                        effectTitle: decrease in GDP\n                        imageUrl: 'https://i.imgur.com/NNK9Na4.jpg'\n                        relatedPersonalValues:\n                          - achievement\n                          - benevolence\n                      - effectId: R8Fa34SNdEwdj93hXO0oMS\n                        sharedScore: 25.429\n                        effectShortDescription: 'The frequency of warm days and night are increasing every year, causing increased indoor air temperatures which negatively affects learning. People''s ability to use attention and memory to acquire and retain new information is impaired.'\n                        effectTitle: decrease in learning (without air conditioner)\n                        imageUrl: 'https://i.imgur.com/Zzh5mT8.jpg'\n                        relatedPersonalValues:\n                          - benevolence\n                          - universalism\n                          - achievement\n                      - effectId: R8epBa4UvcieLTynfK3E84u\n                        sharedScore: 23.44\n                        effectShortDescription: 'The frequency (and severity) of heatwaves are increasing, causing declines in moose populations. Moose are suited to colder climates and have thick fur and when stressed by overheating they stop grazing and lose body fat that''s essential for them to survive come winter. The number of moose alive to pursue and kill for sport are declining.'\n                        effectTitle: decrease in population of moose available to hunt\n                        imageUrl: 'https://i.imgur.com/mBvpx7w.jpg'\n                        relatedPersonalValues:\n                          - benevolence\n                          - power\n                          - stimulation\n                    userAName: Bill\n                    userBName: Bob\n              examples:\n                Successful GET Shared Impacts Response Body:\n                  value:\n                    climateEffects:\n                      - effectId: RBvy0CVizhdMfXbtJIc2En\n                        sharedScore: 27.9\n                        effectShortDescription: 'The total value of goods produced and services provided each year are increasingly     being constrained. Global warming is decreasing GDP by increasing in the frequency of heat waves and shrinking the tourism industry, among other impacts.'\n                        effectTitle: decrease in GDP\n                        imageUrl: 'https://i.imgur.com/NNK9Na4.jpg'\n                        relatedPersonalValues:\n                          - achievement\n                          - benevolence\n                      - effectId: R8Fa34SNdEwdj93hXO0oMS\n                        sharedScore: 25.429\n                        effectShortDescription: 'The frequency of warm days and night are increasing every year, causing increased indoor air temperatures which negatively affects learning. People''s ability to use attention and memory to acquire and retain new information is impaired.'\n                        effectTitle: decrease in learning (without air conditioner)\n                        imageUrl: 'https://i.imgur.com/Zzh5mT8.jpg'\n                        relatedPersonalValues:\n                          - benevolence\n                          - universalism\n                          - achievement\n                      - effectId: R8epBa4UvcieLTynfK3E84u\n                        sharedScore: 23.44\n                        effectShortDescription: 'The frequency (and severity) of heatwaves are increasing, causing declines in moose populations. Moose are suited to colder climates and have thick fur and when stressed by overheating they stop grazing and lose body fat that''s essential for them to survive come winter. The number of moose alive to pursue and kill for sport are declining.'\n                        effectTitle: decrease in population of moose available to hunt\n                        imageUrl: 'https://i.imgur.com/mBvpx7w.jpg'\n                        relatedPersonalValues:\n                          - benevolence\n                          - power\n                          - stimulation\n                    userAName: Bill\n                    userBName: Bob\n      operationId: get-shared-impacts\n      description: Show the full list of shared impacts from the shared feed calculated by comparing user a and user b's quiz scores.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n          required: true\n    parameters: []\n    post:\n      summary: Choose Shared Impacts - POST\n      operationId: shared-impacts\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n                x-examples:\n                  example-1:\n                    message: Shared impacts posted successfully\n              examples:\n                Successful Choose Shared Impact POST Response Body:\n                  value:\n                    message: Shared impact saved to the db.\n      description: Confirm user b's selection of shared impacts that they wish to discuss with user a.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                sharedImpacts:\n                  type: array\n                  uniqueItems: true\n                  minItems: 1\n                  items:\n                    required:\n                      - effectId\n                    properties:\n                      effectId:\n                        type: string\n                        minLength: 1\n              required:\n                - sharedImpacts\n              x-examples:\n                example-1:\n                  sharedImpacts:\n                    - effectId: something\n                    - effectId: something\n            examples:\n              Choose Shared Impact POST Request Body:\n                value:\n                  sharedImpacts:\n                    - effectId: R8Fa34SNdEwdj93hXO0oMS\n  '/alignment/:alignmentScoresId/shared-solutions':\n    get:\n      summary: Shared Solutions - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  climateSolutions:\n                    type: array\n                    uniqueItems: true\n                    minItems: 1\n                    items:\n                      required:\n                        - solutionId\n                        - sharedScore\n                        - solutionShortDescription\n                        - solutionTitle\n                        - imageUrl\n                      properties:\n                        solutionId:\n                          type: string\n                          minLength: 1\n                        sharedScore:\n                          type: number\n                        solutionShortDescription:\n                          type: string\n                          minLength: 1\n                        solutionTitle:\n                          type: string\n                          minLength: 1\n                        imageUrl:\n                          type: string\n                          minLength: 1\n                  userAName:\n                    type: string\n                    minLength: 1\n                  userBName:\n                    type: string\n                    minLength: 1\n                required:\n                  - climateSolutions\n                  - userAName\n                  - userBName\n                x-examples:\n                  example-1:\n                    climateSolutions:\n                      - solutionId: RDSZw453Ge76hYTvYEsaAwU\n                        sharedScore: 29.1\n                        solutionShortDescription: Testers are awesome.\n                        solutionTitle: becoming a tester\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 21.9999\n                        solutionShortDescription: Communication framing is awesome.\n                        solutionTitle: effective communication framing\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 21.33\n                        solutionShortDescription: Electric cars are awesome.\n                        solutionTitle: using electric cars\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 19.777\n                        solutionShortDescription: Generic solutions are awesome.\n                        solutionTitle: solution 4\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 14.342\n                        solutionShortDescription: Solution 5 is awesome.\n                        solutionTitle: solution 5\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 13.1\n                        solutionShortDescription: Solution 6 is awesome.\n                        solutionTitle: solution 6\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 9.888\n                        solutionShortDescription: Solution 7 is the best.\n                        solutionTitle: solution 7\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                    userAName: Bill\n                    userBName: Bob\n              examples:\n                Successful Shared Solutions GET Response Body:\n                  value:\n                    climateSolutions:\n                      - solutionId: RDSZw453Ge76hYTvYEsaAwU\n                        sharedScore: 29.1\n                        solutionShortDescription: Testers are awesome.\n                        solutionTitle: becoming a tester\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 21.9999\n                        solutionShortDescription: Communication framing is awesome.\n                        solutionTitle: effective communication framing\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 21.33\n                        solutionShortDescription: Electric cars are awesome.\n                        solutionTitle: using electric cars\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 19.777\n                        solutionShortDescription: Generic solutions are awesome.\n                        solutionTitle: solution 4\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 14.342\n                        solutionShortDescription: Solution 5 is awesome.\n                        solutionTitle: solution 5\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 13.1\n                        solutionShortDescription: Solution 6 is awesome.\n                        solutionTitle: solution 6\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                      - solutionId: string\n                        sharedScore: 9.888\n                        solutionShortDescription: Solution 7 is the best.\n                        solutionTitle: solution 7\n                        imageUrl: 'https://i.imgur.com/HSZMKzP.jpg'\n                    userAName: Bill\n                    userBName: Bob\n      operationId: get-shared-solutions\n      description: Show the full list of shared solutions from the shared feed calculated by comparing user a and user b's quiz scores.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n          required: true\n    parameters: []\n    post:\n      summary: Choose Shared Solutions - POST\n      operationId: 'post-alignment-:alignmentId-shared-solutions'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n                x-examples:\n                  example-1:\n                    message: Shared solutions posted successfully.\n              examples:\n                Successful Choose Shared Solutions POST Response Body:\n                  value:\n                    message: Shared solutions saved to the db.\n      description: Confirm user b's selection of shared solutions that they wish to discuss with user a.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                sharedSolutions:\n                  type: array\n                  uniqueItems: true\n                  minItems: 1\n                  items:\n                    required:\n                      - solutionId\n                    properties:\n                      solutionId:\n                        type: string\n                        minLength: 1\n              required:\n                - sharedSolutions\n              x-examples:\n                example-1:\n                  sharedSolutions:\n                    - solutionId: something\n                    - solutionId: something\n            examples:\n              Choose Shared Solutions POST Request Body:\n                value:\n                  sharedSolutions:\n                    - solutionId: R8WxponQcYpGf2zDnbsuVxG\n                    - solutionId: RCg7BxIR9BolygeacF635tH\n  '/user-b/:conversationId':\n    post:\n      summary: User B Event - POST\n      operationId: post-user-b\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n                x-examples:\n                  example-1:\n                    message: User B clicked the link.\n              examples:\n                Successful POST User B Event Response Body:\n                  value:\n                    message: User B event logged.\n      description: 'Log an event for user B (analytics tracking). The type of user event and its value is specified in the request body. If none is given, it is assumed that the event is clicking of the unique link.'\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                eventType:\n                  type: string\n                  minLength: 1\n                eventValue:\n                  type: string\n                  minLength: 1\n              required:\n                - eventType\n                - eventValue\n              x-examples:\n                example-1:\n                  eventType: learn more - solution\n                  eventValue: RBeBCvukdLNSe5AtnlJpQ1k\n            examples:\n              POST Shared Solution Learn More:\n                value:\n                  eventType: learn more - solution\n                  eventValue: RBeBCvukdLNSe5AtnlJpQ1k\n              POST Shared Impact Learn More:\n                value:\n                  eventType: learn more - impact\n                  eventValue: R9JAWzfiZ9haeNhHiCpTWkr\n        description: Specify the type of user event as per the examples.\n    parameters: []\n  '/conversation/:conversationId/consent':\n    post:\n      summary: User B Update Consent - POST\n      operationId: 'post-conversation-:conversationId-consent'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  message:\n                    type: string\n                    minLength: 1\n                required:\n                  - message\n                x-examples:\n                  example-1:\n                    message: Consent successfully updated.\n              examples:\n                Successful POST Consent Response Body:\n                  value:\n                    message: Consent successfully updated.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                consent:\n                  type: boolean\n              required:\n                - consent\n              x-examples:\n                example-1:\n                  consent: true\n            examples:\n              POST Consent Body:\n                value:\n                  consent: true\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n      description: Creates or updates user B's consent choice for sharing information with user A. Posts an event for analytics logging.\n  '/alignment/shared-solution/:solutionIri':\n    get:\n      summary: Shared Solution Details - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  solutionTitle:\n                    type: string\n                    minLength: 1\n                  imageUrl:\n                    type: string\n                    minLength: 1\n                  longDescription:\n                    type: string\n                    minLength: 1\n                  solutionSources:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                  solutionType:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                required:\n                  - solutionTitle\n                  - imageUrl\n                  - longDescription\n                  - solutionSources\n                  - solutionType\n                x-examples:\n                  example-1:\n                    solutionTitle: making aviation more efficient\n                    imageUrl: 'https://i.imgur.com/JJV5iw2.jpg'\n                    longDescription: 'Various technologies and operational practices can lower airplane emissions to some degree. They     include better engines, wingtips, and light weighting to improve fuel efficiency. Project Drawdown''s analysis focuses on adoption of the latest and most fuel-efficient aircraft; retrofitting existing aircraft with winglets, newer engines, and lighter interiors; and retiring older aircraft early. Over thirty years, and for a net cost of $830-850 billion, 6.3-9.2 gigatons of carbon dioxide emissions can be avoided, saving $2.5-3.6 trillion on lifetime jet-fuel and operating costs. Other efficiency measures could provide additional emissions reductions and savings as over 80 percent of aircraft are converted.'\n                    solutionSources:\n                      - 'https://drawdown.org/solutions/efficient-aviation'\n                    solutionType:\n                      - mitigation\n              examples:\n                Successful GET Shared Solution Details Response Body:\n                  value:\n                    solutionTitle: making aviation more efficient\n                    imageUrl: 'https://i.imgur.com/JJV5iw2.jpg'\n                    longDescription: 'Various technologies and operational practices can lower airplane emissions to some degree. They     include better engines, wingtips, and light weighting to improve fuel efficiency. Project Drawdown''s analysis focuses on adoption of the latest and most fuel-efficient aircraft; retrofitting existing aircraft with winglets, newer engines, and lighter interiors; and retiring older aircraft early. Over thirty years, and for a net cost of $830-850 billion, 6.3-9.2 gigatons of carbon dioxide emissions can be avoided, saving $2.5-3.6 trillion on lifetime jet-fuel and operating costs. Other efficiency measures could provide additional emissions reductions and savings as over 80 percent of aircraft are converted.'\n                    solutionSources:\n                      - 'https://drawdown.org/solutions/efficient-aviation'\n                    solutionType:\n                      - mitigation\n      operationId: 'get-alignment-shared-solution-:solutionIri'\n      description: Get the details for a shared solution when user b clicks 'Learn More'.\n  '/alignment/shared-impact/:impactIri':\n    get:\n      summary: Shared Impact Details - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  effectTitle:\n                    type: string\n                  imageUrl:\n                    type: string\n                  longDescription:\n                    type: string\n                    minLength: 1\n                  effectSources:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                  relatedPersonalValues:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                required:\n                  - effectTitle\n                  - imageUrl\n                  - longDescription\n                  - effectSources\n                  - relatedPersonalValues\n                x-examples:\n                  example-1:\n                    effectTitle: ''\n                    imageUrl: ''\n                    longDescription: |-\n                      Tourism supports the livelihoods of an estimated one in ten people worldwide andaround 80% occurs around coastal destinations. Coral reefs are popular and exciting places for sightseeing, swimming, snorkelling, diving and boating. For example, Australia's Great Barrier Reef annually attracts 1.9 million visits, generates AUD$5.4 billion from tourism and supports 54,000 jobs. Florida's Coral Reef has an annual estimated tourism value of $1.1 billion and supports 71,000 jobs.\n\n                      Warming oceans due to climate change are causing increases in heatwaves occurring in the ocean (marine heatwaves). The frequency of these marine heatwaves has doubled since 1982, increasing coral bleaching and destruction. Already over 50% of coral reefs have been lost. If yearly CO2 emissions aren't reduced, in the future these heatwaves will occur 50 times more often than they do today, causing over 97% of all coral reefs to die off along with much of the coastal marine life they support. The loss of coral reefs makes coastal destinations less attractive to tourists and negatively affects local economies.\n                    effectSources:\n                      - 'https://www.bloomberg.com/graphics/2019-coral-reefs-at-risk'\n                    relatedPersonalValues:\n                      - achievement\n                      - benevolence\n              examples:\n                Successful GET Shared Impact Details Response Body:\n                  value:\n                    effectTitle: ''\n                    imageUrl: ''\n                    longDescription: |-\n                      Tourism supports the livelihoods of an estimated one in ten people worldwide andaround 80% occurs around coastal destinations. Coral reefs are popular and exciting places for sightseeing, swimming, snorkelling, diving and boating. For example, Australia's Great Barrier Reef annually attracts 1.9 million visits, generates AUD$5.4 billion from tourism and supports 54,000 jobs. Florida's Coral Reef has an annual estimated tourism value of $1.1 billion and supports 71,000 jobs.\n\n                      Warming oceans due to climate change are causing increases in heatwaves occurring in the ocean (marine heatwaves). The frequency of these marine heatwaves has doubled since 1982, increasing coral bleaching and destruction. Already over 50% of coral reefs have been lost. If yearly CO2 emissions aren't reduced, in the future these heatwaves will occur 50 times more often than they do today, causing over 97% of all coral reefs to die off along with much of the coastal marine life they support. The loss of coral reefs makes coastal destinations less attractive to tourists and negatively affects local economies.\n                    effectSources:\n                      - 'https://www.bloomberg.com/graphics/2019-coral-reefs-at-risk'\n                    relatedPersonalValues:\n                      - achievement\n                      - benevolence\n      operationId: 'get-alignment-shared-solution-:solutionIri'\n      description: Get the details for a shared impact when user b clicks 'Learn More'.\n    parameters: []\n  /user-account:\n    parameters: []\n    put:\n      summary: Update User Account - PUT\n      operationId: put-update-user\n      responses:\n        '201':\n          description: Created\n          headers: {}\n        '':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n              examples:\n                example-1:\n                  value:\n                    message: string\n          headers: {}\n      description: 'Update basic user account data. Requires current email and password and allows for updating any subset of basic user account data (email, password, first name, last name).'\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\n        - schema:\n            type: string\n          in: header\n          name: Authorization\n          description: 'credentials in format \"Bearer {jwt_token}\"'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                oldEmail:\n                  type: string\n                oldPassword:\n                  type: string\n                newEmail:\n                  type: string\n                newPassword:\n                  type: string\n                newFirstName:\n                  type: string\n                newLastName:\n                  type: string\n              required:\n                - oldEmail\n                - oldPassword\n            examples:\n              example-1:\n                value:\n                  oldEmail: email1@cm.com\n                  newEmail: email2@cm.com\n                  oldPassword: p4ssw0rd1\n                  newPassword: p4ssw0rd2\n                  newFirstName: First2\n                  newLastName: Last2\n          application/xml:\n            schema:\n              type: object\n              properties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              properties: {}\n        description: ''\n  '/alignment/:alignmentScoresId/summary':\n    get:\n      summary: Alignment Summary - GET\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  userAName:\n                    type: string\n                    minLength: 1\n                  topMatchValue:\n                    type: string\n                    minLength: 1\n                  topMatchPercent:\n                    type: string\n                    minLength: 1\n                  sharedImpacts:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                  sharedSolutions:\n                    type: array\n                    items:\n                      required: []\n                      properties: {}\n                required:\n                  - userAName\n                  - topMatchValue\n                  - topMatchPercent\n                  - sharedImpacts\n                  - sharedSolutions\n                x-examples:\n                  example-1:\n                    userAName: Stevie\n                    topMatchValue: benevolence\n                    topMatchPercent: '90'\n                    sharedImpacts:\n                      - decrease in GDP\n                    sharedSolutions:\n                      - using electric cars\n                      - becoming a tester\n              examples:\n                Successful GET Alignment Summary Response Body:\n                  value:\n                    userAName: Stevie\n                    topMatchValue: Self Direction\n                    topMatchPercent: '90'\n                    sharedImpacts:\n                      - decrease in GDP\n                    sharedSolutions:\n                      - using electric cars\n                      - becoming a tester\n      operationId: 'get-alignment-:alignmentScoresId-summary'\n      description: For the user to see a summary of their alignment information and chosen climate impact and solution topics to share with the user that invited them to have a conversation.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: X-Session-Id\n          description: Session uuid\ncomponents:\n  schemas: {}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /alignment/shared-solution/:solutionIri: get: duplicate operationId: \"get-alignment-shared-solution-:solutionIri\""
}