{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudradar-monitoring/rport"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api-doc/openapi/openapi.yaml",
			"byteSize": 5287,
			"content": "openapi: 3.0.1\ninfo:\n  title: rportd HTTP(S) API\n  description: \u003e-\n    To run API, use `--api-addr=yourserver:3000` CLI argument or enable it in\n    config file\n  version: 1.0.0\n  license:\n    name: MIT\n    url: https://raw.githubusercontent.com/cloudradar-monitoring/rport/master/LICENSE\nservers:\n  - url: http://yourserver:3000/api/v1\n  - url: https://yourserver:3000/api/v1\nsecurity:\n  - bearer_auth: []\n  - basic_auth: []\ntags:\n  - name: Login\n    description: For more details https://oss.rport.io/docs/no02-api-auth.html\n  - name: Profile \u0026 Info\n    description: Profile and System Information\n  - name: Clients and Tunnels\n    description: For more details https://oss.rport.io/docs/no09-managing-tunnels.html\n  - name: Client Groups\n    description: For more details https://oss.rport.io/docs/no04-client-groups.html\n  - name: Client Auth Credentials\n    description: For more details https://oss.rport.io/docs/no03-client-auth.html\n  - name: Commands\n    description: For more details https://oss.rport.io/docs/no06-command-execution.html\n  - name: Users\n    description: For more details https://oss.rport.io/docs/no12-user.html\npaths:\n  /login:\n    $ref: paths/login.yaml\n  /logout:\n    $ref: paths/logout.yaml\n  /verify-2fa:\n    $ref: paths/verify-2fa.yaml\n  /me:\n    $ref: paths/me.yaml\n  /me/ip:\n    $ref: paths/me_ip.yaml\n  /me/token:\n    $ref: paths/me_token.yaml\n  /status:\n    $ref: paths/status.yaml\n  /clients:\n    $ref: paths/clients.yaml\n  /tunnels:\n    $ref: paths/tunnels.yaml\n  /clients/{client_id}:\n    $ref: paths/clients_{client_id}.yaml\n  /clients/{client_id}/tunnels:\n    $ref: paths/clients_{client_id}_tunnels.yaml\n  /clients/{client_id}/tunnels/{tunnel_id}:\n    $ref: paths/clients_{client_id}_tunnels_{tunnel_id}.yaml\n  /clients/{client_id}/acl:\n    $ref: paths/clients_{client_id}_acl.yaml\n  /clients/{client_id}/updates-status:\n    $ref: paths/clients_{client_id}_updates-status.yaml\n  /clients/{client_id}/commands:\n    $ref: paths/clients_{client_id}_commands.yaml\n  /clients/{client_id}/scripts:\n    $ref: paths/clients_{client_id}_scripts.yaml\n  /scripts:\n    $ref: paths/scripts.yaml\n  /clients/{client_id}/commands/{job_id}:\n    $ref: paths/clients_{client_id}_commands_{job_id}.yaml\n  /commands:\n    $ref: paths/commands.yaml\n  /commands/{job_id}:\n    $ref: paths/commands_{job_id}.yaml\n  /commands/{job_id}/jobs:\n    $ref: paths/commands_{job_id}_jobs.yaml\n  /ws/commands:\n    $ref: paths/ws_commands.yaml\n  /ws/scripts:\n    $ref: paths/ws_scripts.yaml\n  /ws/uploads:\n    $ref: paths/ws_uploads.yaml\n  /clients-auth:\n    $ref: paths/clients-auth.yaml\n  /clients-auth/{client_auth_id}:\n    $ref: paths/clients-auth_{client_auth_id}.yaml\n  /client-groups:\n    $ref: paths/client-groups.yaml\n  /client-groups/{group_id}:\n    $ref: paths/client-groups_{group_id}.yaml\n  /users:\n    $ref: paths/users.yaml\n  /users/{user_id}:\n    $ref: paths/users_{user_id}.yaml\n  /users/{user_id}/totp-secret:\n    $ref: paths/users_{user_id}_totp-secret.yaml\n  /user-groups:\n    $ref: paths/user-groups.yaml\n  /user-groups/{name}:\n    $ref: paths/user-groups_{name}.yaml\n  /vault-admin:\n    $ref: paths/vault-admin.yaml\n  /vault:\n    $ref: paths/vault.yaml\n  /vault/{id}:\n    $ref: paths/vault_{id}.yaml\n  /vault-admin/init:\n    $ref: paths/vault-admin_init.yaml\n  /vault-admin/sesame:\n    $ref: paths/vault-admin_sesame.yaml\n  /library/scripts:\n    $ref: paths/library_scripts.yaml\n  /library/scripts/{id}:\n    $ref: paths/library_scripts_{id}.yaml\n  /library/commands:\n    $ref: paths/library_commands.yaml\n  /library/commands/{id}:\n    $ref: paths/library_commands_{id}.yaml\n  /auditlog:\n    $ref: paths/auditlog.yaml\n  /me/totp-secret:\n    $ref: paths/me_totp-secret.yaml\n  /clients/{client_id}/graph-metrics:\n    $ref: paths/clients_{client_id}_graph-metrics.yaml\n  /clients/{client_id}/graph-metrics/{graph_name}:\n    $ref: paths/clients_{client_id}_graph-metrics_{graph_name}.yaml\n  /clients/{client_id}/metrics:\n    $ref: paths/clients_{client_id}_metrics.yaml\n  /clients/{client_id}/mountpoints:\n    $ref: paths/clients_{client_id}_mountpoints.yaml\n  /clients/{client_id}/processes:\n    $ref: paths/clients_{client_id}_processes.yaml\n  /clients/{client_id}/stored-tunnels:\n    $ref: paths/clients_{client_id}_stored-tunnels.yaml\n  /clients/{client_id}/stored-tunnels/{id}:\n    $ref: paths/clients_{client_id}_stored-tunnels_{id}.yaml\n  /schedules:\n    $ref: paths/schedules.yaml\n  /schedules/{id}:\n    $ref: paths/schedules_{id}.yaml\n  /files:\n    $ref: paths/files.yaml\ncomponents:\n  securitySchemes:\n    basic_auth:\n      type: http\n      description: \u003e-\n        HTTP-basic authentication works for all routes. You can use user's\n        password only when 2FA is not enabled. For scripting you can use\n        long-lived API token generated using /me/token endpoint instead of the\n        password.\n      scheme: basic\n    bearer_auth:\n      type: apiKey\n      description: \u003e-\n        Instead of HTTP basic authentication you can retrieve a bearer token\n        using /login endpoint. Send the retrieved token in 'Authorization:\n        Bearer \u003cTOKEN\u003e' header. If 2FA is enabled, the bearer token from /login\n        endpoint can only be used in /verify-2fa or /me/totp-secret endpoints\n        (see below).\n      name: Authorization\n      in: header\n",
			"canonicalURL": "/github.com/cloudradar-monitoring/rport@a53598072d3c9b3f447e3b1b5fe442ad511c8422/-/blob/api-doc/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudradar-monitoring/rport/blob/a53598072d3c9b3f447e3b1b5fe442ad511c8422/api-doc/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/auditlog\": at 1:1013: external \"paths/auditlog.yaml\": get: file: local file reference is not allowed"
}