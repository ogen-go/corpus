{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/usc-isi-i2/d-repr"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "www/docs/api.yml",
			"byteSize": 9937,
			"content": "openapi: 3.0.*\ninfo:\n  title: Representation API\n  version: 0.0.1\nservers:\n  - url: https://mira.isi.edu\npaths:\n  /login:\n    post:\n      tags: [authentication]\n      summary: login and return an authorization key\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n            example:\n              email: demo@isi.edu\n              password: m1nt@123\n      responses:\n        200:\n          description: login success\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum: [\"success\"]\n                  auth_token:\n                    type: string\n        401:\n          description: invalid username or password\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum: [\"fail\"]\n                  message:\n                    type: string\n  /has_authority:\n    head:\n      summary: check if an authorization key is valid\n      tags: [authentication]\n      security:\n        - ApiKeyAuth: []\n      responses:\n        401:\n          description: Unauthorized request\n        200:\n          description: Authorized request\n  /datasets:\n    get:\n      summary: get names of user's datasets\n      tags: [dataset]\n      security:\n        - ApiKeyAuth: []\n      responses:\n        200:\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  datasets:\n                    type: array\n                    items:\n                      type: string\n              example:\n                datasets: [\"draft\"]\n        401:\n          description: Unauthorized request\n    post:\n      summary: create new dataset\n      tags: [dataset]\n      security:\n        - ApiKeyAuth: []\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n            example:\n              name: draft\n      responses:\n        401:\n          description: Unauthorized request\n        200:\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum: [\"success\"]\n        409:\n          content:\n            'application/json':\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n              example:\n                status: fail\n                message: duplicated dataset name\n  /datasets/{dataset_name}:\n    head:\n      summary: check if a dataset exists\n      tags: [dataset]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n        404:\n          description: Dataset doesn't exist\n        200:\n          description: Dataset exists\n    get:\n      summary: get dataset information\n      tags: [dataset]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n        200:\n          description: dataset content\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  resources:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Resource\"\n                  preprocessing:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Preprocessing\"\n                  mappings:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Mapping\"\n                  variables:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Variable\"\n                  semantic_model:\n                    $ref: \"#/components/schemas/SemanticModel\"\n                  ontologies:\n                    type: array\n                    items:\n                      type: string\n  /datasets/{dataset_name}/resources:\n    post:\n      summary: create resource\n      tags: [resource]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      requestBody:\n        required: true\n        content:\n          \"multipart/form-data\":\n            schema:\n              type: object\n              properties:\n                resource_file:\n                  type: string\n                  format: binary\n                resource_id:\n                  type: string\n                  resource_type:\n                    $ref: \"#/components/schemas/Resource/properties/type\"\n                  extra:\n                    type: object\n      responses:\n        401:\n          description: Unauthorized request\n        200:\n          content:\n            'application/json':\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum: [\"success\"]\n                  resource:\n                    $ref: \"#/components/schemas/Resource\"\n  /datasets/{dataset_name}/resources/{resource_id}:\n    delete:\n      summary: delete a resource\n      tags: [resource]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n        - $ref: \"#/components/parameters/path/resource_id\"\n      responses:\n        401:\n          description: Unauthorized request\n    get:\n      summary: get resource information\n      tags: [resource]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n        - $ref: \"#/components/parameters/path/resource_id\"\n      responses:\n        401:\n          description: Unauthorized request\n  /datasets/{dataset_name}/variables:\n    post:\n      summary: create variable\n      tags: [variable]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n  /datasets/{dataset_name}/variables/{variable_id}:\n    delete:\n      summary: delete variable\n      tags: [variable]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n  /datasets/{dataset_name}/mappings:\n    post:\n      summary: create new mapping\n      tags: [mapping]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n  /datasets/{dataset_name}/semantic_model:\n    post:\n      summary: create new semantic model\n      tags: [semantic model]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n  /datasets/{dataset_name}/download:\n    get:\n      summary: download dataset presentation\n      tags: [dataset]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n  /datasets/{dataset_name}/data:\n    get:\n      summary: download data of a dataset\n      tags: [dataset]\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: \"#/components/parameters/path/dataset_name\"\n      responses:\n        401:\n          description: Unauthorized request\n  /ontologies:\n    get:\n      summary: retrieve all available ontologies\n      tags: [ontology]\n      security:\n        - ApiKeyAuth: []\n      responses:\n        401:\n          description: Unauthorized request\n    post:\n      summary: upload new ontology\n      tags: [ontology]\n      security:\n        - ApiKeyAuth: []\n      responses:\n        401:\n          description: Unauthorized request\n  /ontologies/search:\n    get:\n      summary: search for ontology predicates or classes\n      tags: [ontology]\n      security:\n        - ApiKeyAuth: []\n      responses:\n        401:\n          description: Unauthorized request\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n  parameters:\n    path:\n      dataset_name:\n        in: path\n        name: dataset_name\n        schema:\n          type: string\n        required: true\n        description: dataset name\n      resource_id:\n        in: path\n        name: resource_id\n        schema:\n          type: string\n        required: true\n        description: resource id\n  schemas:\n    ErrorResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum: [\"fail\"]\n        message:\n          type: string\n    Preprocessing:\n      type: object\n    Resource:\n      type: object\n      properties:\n        id:\n          type: string\n          description: id of resource\n        type:\n          type: string\n          enum: [\"csv\", \"netcdf4\", \"json\"]\n          description: type of resource\n    Mapping:\n      type: object\n    Variable:\n      type: object\n    SemanticModel:\n      type: object\n",
			"canonicalURL": "/github.com/usc-isi-i2/d-repr@925bc9bf873b476c6d36a7cacca90b892c059821/-/blob/www/docs/api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/usc-isi-i2/d-repr/blob/925bc9bf873b476c6d36a7cacca90b892c059821/www/docs/api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at www/docs/api.yml:1:10: invalid version: invalid patch version: strconv.Atoi: parsing \"*\": invalid syntax"
}