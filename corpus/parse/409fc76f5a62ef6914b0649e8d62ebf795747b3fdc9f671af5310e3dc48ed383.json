{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tatumio/tatum-blockchain-connector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "solana-connector/module/openapi.yaml",
			"byteSize": 24665,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api-eu1.tatum.io'\ninfo:\n  version: 1.0.1\n  title: Tatum Solana API\ntags:\n  - description: |\n      \u003cp\u003eSolana is a blockchain network focused on fast transactions and high throughput. It uses a unique method of ordering transactions to improve its speed. Users can pay their transaction fees and interact with smart contracts with SOL, the network's native cryptocurrency.\u003cbr/\u003e\n      \u003cb\u003eFor now, Solana is in \u003cb\u003eBETA\u003c/b\u003e and there is a rate limitation applied for all projects for Solana to 40 req/s on the platform.\u003c/b\u003e\u003cbr/\u003e\n      Tatum supports 2 chains:\n      \u003cul\u003e\u003cli\u003eMainnet BETA - a regular live chain\n      \u003cli\u003eDevnet - a chain used for testing purposes. Coins on the test chain have no value and can be obtained from\n      a faucet, e.g. \u003ca target=\"_blank\" href=\"https://solfaucet.com/\"\u003ehttps://solfaucet.com/\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/p\u003e\n    name: Blockchain / Solana\npaths:\n  /v3/solana/wallet:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGenerate Solana private key and account address.\u003c/p\u003e\n      operationId: SolanaGenerateWallet\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  address:\n                    description: Generated account address.\n                    example: FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ\n                    type: string\n                  privateKey:\n                    description: Generated private key for account.\n                    example: 3abc79a31093e4cfa4a724e94a44906cbbc3a32e2f75f985a28616676a5dbaf1de8d82a7e1d0561bb0e1b729c7a9b9b1708cf2803ad0ca928a332587ace391ad\n                    type: string\n          description: OK\n        400: \u0026API400\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error400\"\n          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.\n        401: \u0026API401\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error401NotActive\"\n                  - $ref: \"#/components/schemas/Error401Invalid\"\n          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.\n        500: \u0026API500\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error500\"\n          description: Internal server error. There was an error on the server during the processing of the request.\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Generate Solana wallet\n      tags:\n        - Blockchain / Solana\n  /v3/solana/web3/{xApiKey}:\n    post:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eUse this endpoint URL as a http-based JSON RPC driver to connect directly to the Solana node provided by Tatum.\n        To learn more about Solana JSON RPC, please visit \u003ca href=\"https://docs.solana.com/developing/clients/jsonrpc-api\" target=\"_blank\"\u003eSolana developer's guide.\u003c/a\u003e\u003c/p\u003e\n      operationId: SolanaWeb3Driver\n      parameters:\n        - description: \"Tatum X-API-Key used for authorization.\"\n          in: path\n          name: xApiKey\n          required: true\n          schema:\n            type: string\n            example: asdlkfjnqunalkwjfnq2oi303294857k\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              description: Any valid JSON RPC method content body.\n              example: { \"jsonrpc\": \"2.0\",\"method\": \"getVersion\",\"params\": [ ],\"id\": 2 }\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Any valid JSON RPC response.\n                example: { \"jsonrpc\": \"2.0\",\"result\": { \"solana-core\": \"1.8.5\" },\"id\": 1 }\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      x-code-samples:\n      summary: JSON RPC HTTP driver\n      tags:\n        - Blockchain / Solana\n  /v3/solana/block/current:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\u003cp\u003eGet Solana current block number. This is the number of the latest block in the blockchain.\u003c/p\u003e\"\n      operationId: SolanaGetCurrentBlock\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: number\n                description: Current block number\n                example: 6491272\n          description: OK\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get current block number\n      tags:\n        - Blockchain / Solana\n  /v3/solana/block/{height}:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet Solana block by block hash or block number. \u003cbr/\u003e\n        You can find full data description here - \u003ca target=\"blank\" href=\"https://docs.solana.com/developing/clients/jsonrpc-api#getblock\"\u003ehttps://docs.solana.com/developing/clients/jsonrpc-api#getblock\u003c/a\u003e\n        \u003c/p\u003e\n      operationId: SolanaGetBlock\n      parameters:\n        - description: \"Block number\"\n          in: path\n          name: height\n          required: true\n          schema:\n            type: number\n            example: 6470657\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SolanaBlock\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get Solana block by number\n      tags:\n        - Blockchain / Solana\n  /v3/solana/account/balance/{address}:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\u003cp\u003eGet Solana account balance in SOL. This method does not prints any balance of the SLP or NFT tokens on the account.\u003c/p\u003e\"\n      operationId: SolanaGetBalance\n      parameters:\n        - description: \"Account address\"\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n            example: \"FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  balance:\n                    type: string\n                    description: Balance in SOL\n                    example: \"10.52\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get Solana Account balance\n      tags:\n        - Blockchain / Solana\n  /v3/solana/transaction/{hash}:\n    get:\n      description: |\n        \u003ch4\u003e2 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\u003cp\u003eGet Solana transaction by transaction hash.\u003cbr/\u003e\n        You can find full data description here - \u003ca target=\"blank\" href=\"https://docs.solana.com/developing/clients/jsonrpc-api#gettransaction\"\u003ehttps://docs.solana.com/developing/clients/jsonrpc-api#gettransaction\u003c/a\u003e\n        \u003c/p\u003e\n      operationId: SolanaGetTransaction\n      parameters:\n        - description: \"Transaction hash\"\n          in: path\n          name: hash\n          required: true\n          schema:\n            type: string\n            example: \"5oSXZkPregqGhHrTcbWhgHQJETvBHtBYssuuCMJ3qroAgHsHndsr8fyY8kY76AgwmMaZBZW8ThHAXwjDaUSweApS\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SolanaTx\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403TxNotFound\"\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get Solana Transaction\n      tags:\n        - Blockchain / Solana\n  /v3/solana/transaction:\n    post:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eSend SOL from account to account.\u003cbr/\u003e\u003cbr/\u003e\n        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.\n        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey\n        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,\n        \u003ca href=\"https://github.com/tatumio/tatum-kms\" target=\"_blank\"\u003eTatum KMS\u003c/a\u003e should be used for the highest security standards, and signatureId should be present in the request.\n        Alternatively, using the Tatum client library for supported languages.\n        \u003c/p\u003e\n      operationId: SolanaBlockchainTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/TransferSolanaBlockchain\"\n                - $ref: \"#/components/schemas/TransferSolanaBlockchainKMS\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/TransactionHashKMS\"\n                  - $ref: \"#/components/schemas/SignatureId\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403SolanaBroadcast\"\n                  - $ref: \"#/components/schemas/Error403SolanaTxBody\"\n                  - $ref: \"#/components/schemas/Error403SolanaTxHash\"\n                  - $ref: \"#/components/schemas/Error403SolanaTxSign\"\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Send SOL from account to account\n      tags:\n        - Blockchain / Solana\ncomponents:\n  securitySchemes:\n    X-Api-Key:\n      description: |\n        To maintain the highest security level, Tatum requires X-API-Key HTTP header.\n        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.\n        Each X-API-Key is bound to the test or production blockchains.\n      in: header\n      name: x-api-key\n      type: apiKey\n  schemas:\n    SolanaBlock:\n      type: object\n      properties:\n        blockHeight:\n          type: number\n          example: 94778421\n        blockTime:\n          type: number\n          example: 1638279333\n        blockhash:\n          type: string\n          example: Ch7qVhCkSqEvhWE8xzJZbJKRcsH6wtTjfiMJdt9eKiD7\n        parentSlot:\n          type: number\n          example: 97742681\n        previousBlockhash:\n          type: string\n          example: C3vsoVwVWx7yPRhsNoKpcm2CJTrnVcvimdC4bd3jTPbj\n        rewards:\n          type: array\n          items:\n            type: object\n            properties:\n              commission:\n                type: string\n                format: nullable\n              lamports:\n                type: number\n                example: 7\n              postBalance:\n                type: number\n                example: 10149491708073344\n              pubkey:\n                type: string\n                example: ETSKPSzESbVdmtUn67LA2p9J1gPCSEgYvmJS9pNNWQqR\n              rewardType:\n                type: string\n                example: Rent\n        transactions:\n          type: array\n          items:\n            type: object\n            properties:\n              meta:\n                type: object\n                properties:\n                  err:\n                    type: string\n                    format: nullable\n                  fee:\n                    type: number\n                    example: 5000\n                  innerInstructions:\n                    type: array\n                    items:\n                      type: object\n                  logMessages:\n                    type: array\n                    items:\n                      type: string\n                      example: Program Vote111111111111111111111111111111111111111 invoke [1]\n                  postBalances:\n                    type: array\n                    items:\n                      type: number\n                      example: 1101768559544744\n                  postTokenBalances:\n                    type: array\n                    items:\n                      type: number\n                      example: 1101768559549744\n                  preBalances:\n                    type: array\n                    items:\n                      type: number\n                      example: 1101768559549744\n                  preTokenBalances:\n                    type: array\n                    items:\n                      type: number\n                      example: 1101768559549744\n              transaction:\n                type: object\n                properties:\n                  message:\n                    type: object\n                    properties:\n                      header:\n                        type: object\n                        properties:\n                          numReadonlySignedAccounts:\n                            type: number\n                            example: 0\n                          numReadonlyUnsignedAccounts:\n                            type: number\n                            example: 3\n                          numRequiredSignatures:\n                            type: number\n                            example: 1\n                      accountKeys:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            _bn:\n                              type: string\n                              example: 0974de54f77afa9ad3d474909f6ce095b9623a359a5d08cc807b8a92dd5e1f96\n                      recentBlockhash:\n                        type: string\n                        example: C3vsoVwVWx7yPRhsNoKpcm2CJTrnVcvimdC4bd3jTPbj\n                      instructions:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            accounts:\n                              type: array\n                              items:\n                                type: number\n                                example: 1\n                            data:\n                              type: string\n                              example: 2ZjTR1vUs2pHXyTM4rXnJowxekwfBcBJwsE4EameG3Sapvgfit27vrBd8k8QYCoTtMgfHEJLDqWEWBYUYVd\n                            programIdIndex:\n                              type: number\n                              example: 4\n                      indexToProgramIds:\n                        type: object\n                  signatures:\n                    type: array\n                    items:\n                      type: string\n                      example: 5FPSzkTsjZDBigU3ZagvkcwSPimt4K6voqrN9uUNVzWDBeRXWVH3uMarDPpSfrS7sFQeyKyDd5KpbdCrL3EWEP59\n    SolanaTx:\n      type: object\n      properties:\n        blockTime:\n          type: number\n          example: 1638279975\n        meta:\n          type: object\n          properties:\n            err:\n              type: string\n              format: nullable\n            fee:\n              type: number\n              example: 5000\n            innerInstructions:\n              type: array\n              items:\n                type: object\n            logMessages:\n              type: array\n              items:\n                type: string\n                example: Program 11111111111111111111111111111111 invoke [1]\n            postBalances:\n              type: array\n              items:\n                type: number\n                example: 987013800\n            postTokenBalances:\n              type: array\n              items:\n                type: number\n                example: 12345321\n            preBalances:\n              type: array\n              items:\n                type: number\n                example: 988018800\n            preTokenBalances:\n              type: array\n              items:\n                type: number\n                example: 12345321\n            rewards:\n              type: array\n              items:\n                type: object\n            status:\n              type: object\n              properties:\n                Ok:\n                  type: string\n                  format: nullable\n        slot:\n          type: number\n          example: 97744333\n        transaction:\n          type: object\n          properties:\n            message:\n              type: object\n              properties:\n                header:\n                  type: object\n                  properties:\n                    numReadonlySignedAccounts:\n                      type: number\n                      example: 0\n                    numReadonlyUnsignedAccounts:\n                      type: number\n                      example: 1\n                    numRequiredSignatures:\n                      type: number\n                      example: 1\n                accountKeys:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      _bn:\n                        type: string\n                        example: de8d82a7e1d0561bb0e1b729c7a9b9b1708cf2803ad0ca928a332587ace391ad\n                recentBlockhash:\n                  type: string\n                  example: 4pMdFUHg8bqTv19So2ZdvorGWqHwzFBmZL5wf8gDJ8Eh\n                instructions:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      accounts:\n                        type: array\n                        items:\n                          type: number\n                          example: 0\n                      data:\n                        type: string\n                        example: 3Bxs4Bc3VYuGVB19\n                      programIdIndex:\n                        type: number\n                        example: 2\n                indexToProgramIds:\n                  type: object\n            signatures:\n              type: array\n              items:\n                type: string\n                example: 2ast4sMbp796obAKq5XDZnKf2truXdxC2u75c6UnzBeK5bZ7BjjZoE5uMy9pyr3dzxoakE67NvB7Cdgn21zE3BVG\n    Error403SolanaBroadcast:\n      properties:\n        errorCode:\n          description: solana.broadcast.failed\n          example: Solana.broadcast.failed\n          type: string\n        message:\n          description: Unable to broadcast transaction due to ${error}.\n          example: Unable to broadcast transaction due to ${error}.\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403SolanaBep20NotFound:\n      properties:\n        errorCode:\n          description: erc20.token.notFound\n          example: erc20.token.notFound\n          type: string\n        message:\n          description: No such ERC20 currency ${name}.\n          example: No such ERC20 currency ${name}.\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403TxNotFound:\n      properties:\n        errorCode:\n          description: tx.missing\n          example: tx.missing\n          type: string\n        message:\n          description: No such tx.\n          example: No such tx.\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403SolanaTxHash:\n      properties:\n        errorCode:\n          description: solana.transaction.hash\n          example: solana.transaction.hash\n          type: string\n        message:\n          description: Unable to calculate transaction hash. ${error}\n          example: Unable to calculate transaction hash. ${error}\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403SolanaTxSign:\n      properties:\n        errorCode:\n          description: solana.transaction.sign\n          example: solana.transaction.sign\n          type: string\n        message:\n          description: Unable to sign transaction. ${error}\n          example: Unable to sign transaction. ${error}\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    Error403SolanaTxBody:\n      properties:\n        errorCode:\n          description: solana.transaction.body\n          example: Solana.transaction.body\n          type: string\n        message:\n          description: Either currency, or tokenAddress must be defined.\n          example: Either currency, or tokenAddress must be defined.\n          type: string\n        statusCode:\n          description: \"403\"\n          example: 403\n          type: number\n      required:\n        - errorCode\n        - message\n        - statusCode\n      type: object\n    TransferSolanaBlockchain:\n      type: object\n      properties:\n        from:\n          description: Blockchain address to send assets from\n          example: \"FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ\"\n          maxLength: 44\n          minLength: 44\n          type: string\n        to:\n          description: Blockchain address to send assets to\n          example: \"FZAS4mtPvswgVxbpc117SqfNgCDLTCtk5CoeAtt58FWU\"\n          maxLength: 44\n          minLength: 44\n          type: string\n        amount:\n          description: Amount to be sent in SOL.\n          example: \"100000\"\n          pattern: ^[+]?((\\d+(\\.\\d*)?)|(\\.\\d+))$\n          type: string\n        fromPrivateKey:\n          type: string\n          maxLength: 128\n          example: \"3abc79a31093e4cfa4a724e94a44906cbbc3a32e2f75f985a28616676a5dbaf1de8d82a7e1d0561bb0e1b729c7a9b9b1708cf2803ad0ca928a332587ace391ad\"\n          minLength: 128\n          description: Private key of sender address. Private key, or signature Id must be present.\n      required:\n        - to\n        - amount\n        - from\n        - fromPrivateKey\n    TransferSolanaBlockchainKMS:\n      type: object\n      properties:\n        from:\n          description: Blockchain address to send assets from\n          example: \"FykfMwA9WNShzPJbbb9DNXsfgDgS3XZzWiFgrVXfWoPJ\"\n          maxLength: 44\n          minLength: 44\n          type: string\n        to:\n          description: Blockchain address to send assets to\n          example: \"FZAS4mtPvswgVxbpc117SqfNgCDLTCtk5CoeAtt58FWU\"\n          maxLength: 44\n          minLength: 44\n          type: string\n        amount:\n          description: Amount to be sent in SOL.\n          example: \"100000\"\n          pattern: ^[+]?((\\d+(\\.\\d*)?)|(\\.\\d+))$\n          type: string\n        signatureId:\n          type: string\n          minLength: 36\n          maxLength: 36\n          format: uuid\n          example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83\n          description: Identifier of the private key associated in signing application. Private key, or signature Id must be present.\n      required:\n        - to\n        - amount\n        - from\n        - signatureId\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v3/solana/web3/{xApiKey}: post: operation \"SolanaWeb3Driver\": responses: 401: content: application/json: schema: parse schema: oneOf: [0]: parse schema: resolve \"#/components/schemas/Error401NotActive\": find schema: resolve \"#/components/schemas/Error401NotActive\": can't find value for \"components/schemas/Error401NotActive\""
}