{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sourcefuse/loopback4-microservice-catalog"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "services/in-mail-service/openapi.json",
			"byteSize": 54925,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"In-mail Service\",\n    \"version\": \"1.0.0\",\n    \"description\": \"In mail microservice\",\n    \"contact\": {\n      \"name\": \"Sourcefuse\"\n    }\n  },\n  \"paths\": {\n    \"/mails/bulk/restore\": {\n      \"patch\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"restore\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API provides an interface for restore message from trash.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Restore Message Successful!\"\n          },\n          \"400\": {\n            \"description\": \"Message identity does not exist.\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| RestoreMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/IdArraysPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"OriginatorController.restore\"\n      }\n    },\n    \"/mails/bulk/{storage}/{action}\": {\n      \"delete\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"trashBulk\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API for moving mails to trash and then delete\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Trash/Deletion of Mail(s) sucessful!\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          },\n          \"404\": {\n            \"description\": \"Message identity does not exist.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| TrashMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"storage\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"action\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/IdArraysPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 3\n        },\n        \"operationId\": \"OriginatorController.trashBulk\"\n      }\n    },\n    \"/mails/marking/{markType}\": {\n      \"patch\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"markMail\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API provides interface to mark read, unread and important\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Message is marked read/unread/important\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| UpdateMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"markType\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/IdArraysPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"OriginatorController.markMail\"\n      }\n    },\n    \"/mails/{messageId}/attachments/{attachmentId}\": {\n      \"delete\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"removeAttachment\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API provides an interface for removing attachment before message is sent\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Deletetion of Attachment Successful!\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          },\n          \"404\": {\n            \"description\": \"Message identity does not exist.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| DeleteAttachment   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"messageId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"attachmentId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"OriginatorController.removeAttachment\"\n      }\n    },\n    \"/mails/{messageId}/attachments\": {\n      \"post\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"addAttachment\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API provides an interface for adding attachment before message is sent.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"collect single attachment for user by message identifier\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Attachment add response schema\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Message identity does not exist.\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| AddAttachments   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"messageId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"attachments\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/AttachmentPartial\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"OriginatorController.addAttachment\"\n      }\n    },\n    \"/mails/{messageId}/send\": {\n      \"patch\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"sendDraft\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API for sending a drafted message.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Mail is Successfully sent!\"\n          },\n          \"400\": {\n            \"description\": \"Message identity does not exist.\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| ComposeMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"messageId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"OriginatorController.sendDraft\"\n      }\n    },\n    \"/mails/{messageId}\": {\n      \"put\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"updateDraft\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Update API. Update draft messages.\",\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Message identity does not exist.\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          },\n          \"application/json\": {\n            \"description\": \"collect single message for user by message identifier\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/idResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| UpdateMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"messageId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/composeMailBody\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"OriginatorController.updateDraft\"\n      },\n      \"get\": {\n        \"x-controller-name\": \"CollectorController\",\n        \"x-operation-name\": \"fetchById\",\n        \"tags\": [\n          \"CollectorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"GET Message API. Collect a single message based on message identity.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Gets mail details based on unique message id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"item\": {\n                      \"type\": \"string\",\n                      \"item\": {\n                        \"$ref\": \"#/components/schemas/MessageExcluding_deleted_WithRelations\",\n                        \"definitions\": {\n                          \"AttachmentExcluding_deleted_WithRelations\": {\n                            \"$ref\": \"#/components/schemas/AttachmentExcluding_deleted_WithRelations\"\n                          },\n                          \"ThreadExcluding_deleted_WithRelations\": {\n                            \"$ref\": \"#/components/schemas/ThreadExcluding_deleted_WithRelations\"\n                          },\n                          \"GroupExcluding_deleted_WithRelations\": {\n                            \"$ref\": \"#/components/schemas/GroupExcluding_deleted_WithRelations\"\n                          },\n                          \"MetaExcluding_deleted_WithRelations\": {\n                            \"$ref\": \"#/components/schemas/MetaExcluding_deleted_WithRelations\"\n                          },\n                          \"MessageExcluding_deleted_WithRelations\": {\n                            \"$ref\": \"#/components/schemas/MessageExcluding_deleted_WithRelations\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthrized token in header.\"\n          },\n          \"404\": {\n            \"description\": \"Message identity does not exist\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| GetInMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"messageId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"CollectorController.fetchById\"\n      }\n    },\n    \"/mails\": {\n      \"post\": {\n        \"x-controller-name\": \"OriginatorController\",\n        \"x-operation-name\": \"composeMail\",\n        \"tags\": [\n          \"OriginatorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"ComposeAPI. For drafting, reply on and create new message\",\n        \"responses\": {\n          \"201\": {\n            \"description\": \"collect single message for user by message identifier\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/idResponse\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          },\n          \"404\": {\n            \"description\": \"Message identity does not exist.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| ComposeMail   |\\n\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/composeMailBody\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"OriginatorController.composeMail\"\n      },\n      \"get\": {\n        \"x-controller-name\": \"CollectorController\",\n        \"x-operation-name\": \"fetchMailList\",\n        \"tags\": [\n          \"CollectorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Collect a list of all messages.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"fetch mails\",\n            \"content\": {\n              \"application/json\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"version\": {\n                    \"type\": \"string\"\n                  },\n                  \"items\": {\n                    \"type\": \"array\",\n                    \"schema\": {\n                      \"$ref\": \"#/components/schemas/Message\",\n                      \"definitions\": {\n                        \"Message\": {\n                          \"$ref\": \"#/components/schemas/Message\"\n                        }\n                      }\n                    }\n                  }\n                },\n                \"nullable\": true\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthrized token in header.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| GetInMails   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"messageFilter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          },\n          {\n            \"name\": \"groupFilter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"CollectorController.fetchMailList\"\n      }\n    },\n    \"/threads/{threadId}/forward\": {\n      \"patch\": {\n        \"x-controller-name\": \"ReplyAndForwardController\",\n        \"x-operation-name\": \"forward\",\n        \"tags\": [\n          \"ReplyAndForwardController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API provides interface to forward single message.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Message is forwarded to another recipient\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/idResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Message identity does not exist.\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| ComposeMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"threadId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"groups\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/GroupPartial\"\n                    }\n                  },\n                  \"subject\": {\n                    \"type\": \"string\"\n                  },\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"attachments\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/AttachmentPartial\"\n                    }\n                  },\n                  \"meta\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/MetaPartial\"\n                    }\n                  },\n                  \"status\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"groups\"\n                ]\n              }\n            }\n          }\n        },\n        \"operationId\": \"ReplyAndForwardController.forward\"\n      }\n    },\n    \"/threads/{threadId}/mails/{messageId}/replies\": {\n      \"patch\": {\n        \"x-controller-name\": \"ReplyAndForwardController\",\n        \"x-operation-name\": \"replyMail\",\n        \"tags\": [\n          \"ReplyAndForwardController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"API provides interface to reply to a single message\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Message is replied back to the sender\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| ReplyMail   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"threadId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"messageId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"replyAll\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"attachments\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/AttachmentPartial\"\n                    }\n                  },\n                  \"meta\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/MetaPartial\"\n                    }\n                  },\n                  \"body\": {\n                    \"type\": \"string\"\n                  },\n                  \"subject\": {\n                    \"type\": \"string\"\n                  },\n                  \"status\": {\n                    \"type\": \"string\"\n                  },\n                  \"extId\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"body\",\n                  \"group\",\n                  \"status\"\n                ]\n              }\n            }\n          },\n          \"x-parameter-index\": 3\n        },\n        \"operationId\": \"ReplyAndForwardController.replyMail\"\n      }\n    },\n    \"/threads/{threadId}\": {\n      \"get\": {\n        \"x-controller-name\": \"CollectorController\",\n        \"x-operation-name\": \"fetchThreadById\",\n        \"tags\": [\n          \"CollectorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"GET Thread Message API. Collect complete single message thread based on thread identity.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Fetches a thread along with message, group, attachment(s) etc based on unique thread Id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"item\": {\n                      \"$ref\": \"#/components/schemas/Thread\",\n                      \"definitions\": {\n                        \"Thread\": {\n                          \"$ref\": \"#/components/schemas/Thread\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Message identity does not exist\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden request due to unauthorized token in header.\"\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| GetThread   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"threadId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"filter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"CollectorController.fetchThreadById\"\n      }\n    },\n    \"/threads\": {\n      \"get\": {\n        \"403\": {\n          \"description\": \"Forbidden request due to unauthrized token in header.\"\n        },\n        \"x-controller-name\": \"CollectorController\",\n        \"x-operation-name\": \"fetchThreadList\",\n        \"tags\": [\n          \"CollectorController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"summary\": \"Thread List API. Collect a list of all threads.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"fetch threads\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"version\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Thread\",\n                        \"definitions\": {\n                          \"Thread\": {\n                            \"$ref\": \"#/components/schemas/Thread\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| GetThread   |\\n\",\n        \"parameters\": [\n          {\n            \"name\": \"threadFilter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          },\n          {\n            \"name\": \"groupFilter\",\n            \"in\": \"query\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": true\n                }\n              }\n            }\n          }\n        ],\n        \"operationId\": \"CollectorController.fetchThreadList\"\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"HTTPBearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"idResponse\": {\n        \"$ref\": \"#/components/schemas/IdResponse\",\n        \"definitions\": {\n          \"IdResponse\": {\n            \"title\": \"IdResponse\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        }\n      },\n      \"composeMailBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"threadId\": {\n            \"type\": \"string\"\n          },\n          \"groups\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GroupPartial\",\n              \"definitions\": {\n                \"GroupPartial\": {\n                  \"title\": \"GroupPartial\",\n                  \"type\": \"object\",\n                  \"description\": \"(tsType: Partial\u003cGroup\u003e, schemaOptions: { partial: true })\",\n                  \"properties\": {\n                    \"deleted\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"deletedOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"nullable\": true\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    },\n                    \"createdOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"modifiedOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"modifiedBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"party\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"from\",\n                        \"to\",\n                        \"cc\",\n                        \"bcc\"\n                      ]\n                    },\n                    \"isImportant\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"storage\": {\n                      \"type\": \"string\",\n                      \"default\": \"inbox\",\n                      \"enum\": [\n                        \"draft\",\n                        \"send\",\n                        \"inbox\",\n                        \"trash\"\n                      ]\n                    },\n                    \"visibility\": {\n                      \"type\": \"string\",\n                      \"default\": \"new\",\n                      \"enum\": [\n                        \"read\",\n                        \"new\",\n                        \"unread\",\n                        \"important\",\n                        \"not-important\"\n                      ]\n                    },\n                    \"extId\": {\n                      \"type\": \"string\"\n                    },\n                    \"extMetadata\": {\n                      \"type\": \"object\"\n                    },\n                    \"messageId\": {\n                      \"type\": \"string\"\n                    },\n                    \"threadId\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"additionalProperties\": false,\n                  \"x-typescript-type\": \"Partial\u003cGroup\u003e\"\n                }\n              }\n            }\n          },\n          \"attachments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AttachmentPartial\",\n              \"definitions\": {\n                \"AttachmentPartial\": {\n                  \"title\": \"AttachmentPartial\",\n                  \"type\": \"object\",\n                  \"description\": \"(tsType: Partial\u003cAttachment\u003e, schemaOptions: { partial: true })\",\n                  \"properties\": {\n                    \"deleted\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"deletedOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"nullable\": true\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    },\n                    \"createdOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"modifiedOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"modifiedBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"path\": {\n                      \"type\": \"string\"\n                    },\n                    \"thumbnail\": {\n                      \"type\": \"string\"\n                    },\n                    \"mime\": {\n                      \"type\": \"string\"\n                    },\n                    \"extId\": {\n                      \"type\": \"string\"\n                    },\n                    \"extMetadata\": {\n                      \"type\": \"object\"\n                    },\n                    \"messageId\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"additionalProperties\": false,\n                  \"x-typescript-type\": \"Partial\u003cAttachment\u003e\"\n                }\n              }\n            }\n          },\n          \"meta\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MetaPartial\",\n              \"definitions\": {\n                \"MetaPartial\": {\n                  \"title\": \"MetaPartial\",\n                  \"type\": \"object\",\n                  \"description\": \"(tsType: Partial\u003cMeta\u003e, schemaOptions: { partial: true })\",\n                  \"properties\": {\n                    \"deleted\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"deletedOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"nullable\": true\n                    },\n                    \"deletedBy\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    },\n                    \"createdOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"modifiedOn\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"createdBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"modifiedBy\": {\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"key\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"string\"\n                    },\n                    \"extId\": {\n                      \"type\": \"string\"\n                    },\n                    \"extMetadata\": {\n                      \"type\": \"object\"\n                    },\n                    \"messageId\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"additionalProperties\": false,\n                  \"x-typescript-type\": \"Partial\u003cMeta\u003e\"\n                }\n              }\n            }\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"body\",\n          \"groups\",\n          \"status\"\n        ]\n      },\n      \"Attachment\": {\n        \"title\": \"Attachment\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"thumbnail\": {\n            \"type\": \"string\"\n          },\n          \"mime\": {\n            \"type\": \"string\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"path\",\n          \"thumbnail\",\n          \"mime\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"AttachmentPartial\": {\n        \"title\": \"AttachmentPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cAttachment\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"thumbnail\": {\n            \"type\": \"string\"\n          },\n          \"mime\": {\n            \"type\": \"string\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cAttachment\u003e\"\n      },\n      \"IdArraysPartial\": {\n        \"title\": \"IdArraysPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cIdArrays\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"messageIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"threadIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cIdArrays\u003e\"\n      },\n      \"IdArrays\": {\n        \"title\": \"IdArrays\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"messageIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"threadIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MetaPartial\": {\n        \"title\": \"MetaPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cMeta\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cMeta\u003e\"\n      },\n      \"GroupPartial\": {\n        \"title\": \"GroupPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cGroup\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"party\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"from\",\n              \"to\",\n              \"cc\",\n              \"bcc\"\n            ]\n          },\n          \"isImportant\": {\n            \"type\": \"boolean\"\n          },\n          \"storage\": {\n            \"type\": \"string\",\n            \"default\": \"inbox\",\n            \"enum\": [\n              \"draft\",\n              \"send\",\n              \"inbox\",\n              \"trash\"\n            ]\n          },\n          \"visibility\": {\n            \"type\": \"string\",\n            \"default\": \"new\",\n            \"enum\": [\n              \"read\",\n              \"new\",\n              \"unread\",\n              \"important\",\n              \"not-important\"\n            ]\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          },\n          \"threadId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cGroup\u003e\"\n      },\n      \"Attachment add response schema\": {\n        \"type\": \"object\",\n        \"title\": \"Attachment add response schema\",\n        \"properties\": {\n          \"items\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Attachment\"\n            }\n          }\n        }\n      },\n      \"AttachmentExcluding_deleted_WithRelations\": {\n        \"title\": \"AttachmentExcluding_deleted_WithRelations\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cAttachmentWithRelations, 'deleted'\u003e, schemaOptions: { exclude: [ 'deleted' ], includeRelations: true })\",\n        \"properties\": {\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"thumbnail\": {\n            \"type\": \"string\"\n          },\n          \"mime\": {\n            \"type\": \"string\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"$ref\": \"#/components/schemas/MessageExcluding_deleted_WithRelations\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"path\",\n          \"thumbnail\",\n          \"mime\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cAttachmentWithRelations, 'deleted'\u003e\"\n      },\n      \"ThreadExcluding_deleted_WithRelations\": {\n        \"title\": \"ThreadExcluding_deleted_WithRelations\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cThreadWithRelations, 'deleted'\u003e, schemaOptions: { exclude: [ 'deleted' ], includeRelations: true })\",\n        \"properties\": {\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"messageCounts\": {\n            \"type\": \"number\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"message\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MessageExcluding_deleted_WithRelations\"\n            }\n          },\n          \"group\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GroupExcluding_deleted_WithRelations\"\n            }\n          }\n        },\n        \"required\": [\n          \"subject\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cThreadWithRelations, 'deleted'\u003e\"\n      },\n      \"GroupExcluding_deleted_WithRelations\": {\n        \"title\": \"GroupExcluding_deleted_WithRelations\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cGroupWithRelations, 'deleted'\u003e, schemaOptions: { exclude: [ 'deleted' ], includeRelations: true })\",\n        \"properties\": {\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"party\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"from\",\n              \"to\",\n              \"cc\",\n              \"bcc\"\n            ]\n          },\n          \"isImportant\": {\n            \"type\": \"boolean\"\n          },\n          \"storage\": {\n            \"type\": \"string\",\n            \"default\": \"inbox\",\n            \"enum\": [\n              \"draft\",\n              \"send\",\n              \"inbox\",\n              \"trash\"\n            ]\n          },\n          \"visibility\": {\n            \"type\": \"string\",\n            \"default\": \"new\",\n            \"enum\": [\n              \"read\",\n              \"new\",\n              \"unread\",\n              \"important\",\n              \"not-important\"\n            ]\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          },\n          \"threadId\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"$ref\": \"#/components/schemas/MessageExcluding_deleted_WithRelations\"\n          },\n          \"thread\": {\n            \"$ref\": \"#/components/schemas/ThreadExcluding_deleted_WithRelations\"\n          }\n        },\n        \"required\": [\n          \"party\",\n          \"type\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cGroupWithRelations, 'deleted'\u003e\"\n      },\n      \"MetaExcluding_deleted_WithRelations\": {\n        \"title\": \"MetaExcluding_deleted_WithRelations\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cMetaWithRelations, 'deleted'\u003e, schemaOptions: { exclude: [ 'deleted' ], includeRelations: true })\",\n        \"properties\": {\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"messageId\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"$ref\": \"#/components/schemas/MessageExcluding_deleted_WithRelations\"\n          }\n        },\n        \"required\": [\n          \"key\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cMetaWithRelations, 'deleted'\u003e\"\n      },\n      \"MessageExcluding_deleted_WithRelations\": {\n        \"title\": \"MessageExcluding_deleted_WithRelations\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Omit\u003cMessageWithRelations, 'deleted'\u003e, schemaOptions: { exclude: [ 'deleted' ], includeRelations: true })\",\n        \"properties\": {\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"sender\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"draft\",\n              \"send\"\n            ]\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"threadId\": {\n            \"type\": \"string\"\n          },\n          \"attachment\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AttachmentExcluding_deleted_WithRelations\"\n            }\n          },\n          \"group\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/GroupExcluding_deleted_WithRelations\"\n            }\n          },\n          \"meta\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MetaExcluding_deleted_WithRelations\"\n            }\n          },\n          \"thread\": {\n            \"$ref\": \"#/components/schemas/ThreadExcluding_deleted_WithRelations\"\n          }\n        },\n        \"required\": [\n          \"sender\",\n          \"subject\",\n          \"body\",\n          \"status\"\n        ],\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Omit\u003cMessageWithRelations, 'deleted'\u003e\"\n      },\n      \"Message\": {\n        \"title\": \"Message\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"sender\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"body\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"draft\",\n              \"send\"\n            ]\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          },\n          \"threadId\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"sender\",\n          \"subject\",\n          \"body\",\n          \"status\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Thread\": {\n        \"title\": \"Thread\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          },\n          \"messageCounts\": {\n            \"type\": \"number\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"subject\"\n        ],\n        \"additionalProperties\": false\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/sourcefuse/loopback4-microservice-catalog@163c2bc9cff7ace1fe1855515a80196a9f9a1994/-/blob/services/in-mail-service/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/sourcefuse/loopback4-microservice-catalog/blob/163c2bc9cff7ace1fe1855515a80196a9f9a1994/services/in-mail-service/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"idResponse\": parse schema: resolve \"#/components/schemas/IdResponse\": find schema: resolve \"#/components/schemas/IdResponse\": can't find value for \"components/schemas/IdResponse\""
}