{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/saps4hana.externaltaxcalculation.taxquote/openapi.yml",
			"byteSize": 54674,
			"content": "openapi: 3.0.1\ninfo:\n  title: Tax Determination and Calculation via Integration Flow\n  description: \u003e-\n    This is a generated connector for [SAP S/4HANA Integration with External Tax Calculation Engine API- Tax Determination and Calculation via Integration Flow API v1.0.0](https://api.sap.com/api/taxquote/overview) OpenAPI specification. \n\n    Your external tax engine sends tax calculation results to the SAP S/4HANA\n    Cloud system via communication scenario SAP_COM_0249.\n\n    This API is consumed by the [SAP S/4HANA Integration with External Tax\n    Calculation Engines Integration\n    Package](https://api.sap.com/package/SAPS4HANAIntegrationwithExternalTaxCalculationEngines)\n    endpoint.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Create and configure an OAuth2 client credentials by following [this guide](https://help.sap.com/viewer/b865ed651e414196b39f8922db2122c7/LATEST/en-US/7aefa21a65f94b25b7e639c3931b6f83.html).\n  x-ballerina-display:\n    label: SAPS4HANA Tax Determination and Calculation\n    iconPath: \"icon.png\"\n  version: 1.0.0\n# servers:\n#   - url: https://{host}.hana.ondemand.com/http\n#     description: SAP S/4HANA Integration with External Tax Calculation Engines\n#     variables:\n#       host:\n#         description: SAP Cloud Integration Host\n#         default: '{host}'\nsecurity:\n  - OAuth2_ClientCredentials:\n      - read\n      - write\n      - admin\ntags:\n  - name: Tax v0\n    description: Tax Service V 0 Quote\npaths:\n  /quote:\n    post:\n      tags:\n        - Tax v0\n      summary: Determines and calculates indirect taxes.\n      description: \u003e-\n        You can use this resource to determine which tax types are relevant and\n        to calculate the amount of tax due on a business transaction.\n      operationId: taxQuote_1\n      parameters:\n        - name: X-CorrelationID\n          in: header\n          description: \u003e-\n            An ID that uniquely identifies an HTTP request.\n\n\n            The SAP Cloud Integration generates a new correlation ID when you do\n            not send the X-CorrelationID parameter on the HTTP request header.\n          schema:\n            type: string\n        - name: X-Routing-Key\n          in: header\n          description: \u003e-\n            The tax engine that you want to use to calculate taxes in a certain\n            transaction (if you have configured multiple engines).\n          schema:\n            type: string\n      requestBody:\n        description: The request payload as per the model schema provided.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api.v0.schema.TaxRequest'\n            examples:\n              Domestic purchase of material for Canada:\n                description: Domestic purchase of material for Canada\n                value:\n                  id: SO_01\n                  companyId: '2910'\n                  date: '2020-01-14T15:18:27.000Z'\n                  saleorPurchase: p\n                  grossOrNet: 'n'\n                  currency: CAD\n                  Items:\n                    - id: '000010'\n                      itemCode: TG11\n                      itemType: M\n                      quantity: '1.000'\n                      unitPrice: '100.000000000000'\n                  Locations:\n                    - type: SHIP_FROM\n                      addressLine1: 4440 78 Ave SE\n                      zipCode: T2C 2T5\n                      city: Calgary\n                      state: AB\n                      country: CA\n                    - type: SHIP_TO\n                      addressLine1: 40 Scurfield Blvd\n                      zipCode: R3Y 1G4\n                      city: Winnipeg\n                      state: MB\n                      country: CA\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.v0.schema.TaxResponse'\n              examples:\n                Domestic purchase of material for Canada:\n                  description: Domestic purchase of material for Canada\n                  value:\n                    date: '2020-01-14T15:18:27.000Z'\n                    inclusive: 'false'\n                    country: CA\n                    taxLines:\n                      - id: '1'\n                        country: CA\n                        taxcode: ''\n                        taxCodeLegalPhrase: ''\n                        taxValues:\n                          - taxTypeCode: '1'\n                            rate: '5.0'\n                            taxable: '100.00'\n                            value: '5.00'\n                            nonDeductibleTaxRate: '0.0'\n                            nonDeductibleTaxAmount: '0.00'\n                            deductibleTaxAmount: '5.00'\n                            dueCategory: R\n                            isTaxDeferred: false\n                            withholdingRelevant: false\n                          - taxTypeCode: '3'\n                            rate: '7.0'\n                            taxable: '100.00'\n                            value: '7.00'\n                            nonDeductibleTaxRate: '100.0'\n                            nonDeductibleTaxAmount: '7.00'\n                            deductibleTaxAmount: '0.00'\n                            dueCategory: R\n                            isTaxDeferred: false\n                            withholdingRelevant: false\n                    partnerName: Tax Service\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.v0.schema.ErrorResponse'\n              example:\n                status: 400\n                type: invalid_input\n                message: \u003e-\n                  'Mat' is an invalid value for JSON parameter\n                  'Items[0].itemType'. Use one of the following values: m, M, s,\n                  S.\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.v0.schema.ErrorResponse'\n              example:\n                status: 500\n                type: server_exception\n                message: \u003e-\n                  An unexpected error occurred while processing your request.\n                  Open a support request.\n      security:\n        - OAuth2_ClientCredentials:\n            - read\n            - admin\n            - write\ncomponents:\n  schemas:\n    api.v0.schema.AdditionalItemInformation:\n      type: object\n      properties:\n        type:\n          type: string\n          description: \u003e-\n            Information about the operation, such as the material origin, own\n            production usage, and whether the service is sold electronically.\n        information:\n          type: string\n          description: \u003e-\n            Information about the item type. The 'isServiceElectronicallySold'\n            parameter can have the values 'Y' (yes) or 'N' (no). In the tax\n            configuration application, you must maintain the product tax\n            classification for all relevant tax countries where the product is\n            sold electronically.\n    api.v0.schema.BusinessPartnerExemptionDetail:\n      type: object\n      properties:\n        locationType:\n          type: string\n          description: The location at which the product has the specified exemption.\n          enum:\n            - SHIP_FROM\n            - SHIP_TO\n            - CONTRACT_FROM\n            - CONTRACT_TO\n            - SERVICE_LOCATION\n        exemptionreasoncode:\n          type: string\n          description: The exemption code classification for the product.\n        taxType:\n          type: string\n          description: \u003e-\n            The identification of the tax rate type on which you apply the\n            exemption.\n      description: The exemption details of a business partner.\n    api.v0.schema.CostInformation:\n      type: object\n      properties:\n        costType:\n          type: string\n          description: The type of cost, such as freight, discount, shipping, or others.\n        amount:\n          type: string\n          description: The corresponding amount for the cost type.\n    api.v0.schema.ExemptionDetail:\n      type: object\n      properties:\n        LocationType:\n          type: string\n          description: The location at which the product has the specified exemption.\n          enum:\n            - SHIP_FROM\n            - SHIP_TO\n            - CONTRACT_FROM\n            - CONTRACT_TO\n            - SERVICE_LOCATION\n        exemptionCode:\n          type: string\n          description: The Exemption Code classification for the product.\n        tariffId:\n          type: string\n          description: \u003e-\n            The classification code for a tax rate. The tax authorities of the\n            country/region in which the the tax is applicable determine these\n            rates.\n        taxType:\n          type: string\n          description: \u003e-\n            The identification of the tax rate type on which you apply the\n            exemption.\n        taxRateType:\n          type: string\n          description: The identification of the tax rate type.\n        region:\n          type: string\n          description: The code of the region in which the product exemption is valid.\n      description: The list of details on the tax exemption.\n    api.v0.schema.Item:\n      required:\n        - id\n        - quantity\n        - unitPrice\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique identifier for each item in the transaction.\n        itemCode:\n          type: string\n          description: \u003e-\n            Pass the item code, for example, SKU of a product. Else pass the\n            productid as maintained in the Tax configuration application. In the\n            second case, the service considers the relevant tax classification\n            as maintained in the application.\n        quantity:\n          type: number\n          description: \u003e-\n            The quantity of the line item. This can include fractions expressed\n            using decimal places.\n        unitPrice:\n          type: number\n          description: The unit price of the line item.\n        shippingCost:\n          type: string\n          description: \u003e-\n            To determine tax on shipping costs, specify the tax as a separate\n            item. To indicate that an item relates to shipping costs, you must\n            enter 'Y' as the value of this parameter. For the United States of\n            America, tax is calculated if shipping is taxable in the particular\n            jurisdiction. If shipping is not taxable, the API returns zero tax\n            for the item.\n        itemType:\n          type: string\n          description: \u003e-\n            The type of product - service or material. Enter 's' for service and\n            'm' for material.\n          enum:\n            - m\n            - M\n            - s\n            - S\n        exemptionDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.ExemptionDetail'\n        certificateId:\n          type: string\n          description: \u003e-\n            The ID of the exemption certificate, as maintained in the tax\n            configuration application. The API considers the exemption only when\n            the following conditions are met: 1. The certificate ID is valid on\n            the date in the request payload. 2. The exemption details are\n            maintained in the tax configuration application.\n        itemClassifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.ItemClassification'\n        additionalItemInformation:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.AdditionalItemInformation'\n        costInformation:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.CostInformation'\n        taxCategory:\n          type: string\n          description: \u003e-\n            Determines if the taxes to be calculated are product taxes or\n            withholding taxes. This parameter is valid only for direct\n            calculation scenarios.\n          enum:\n            - PRODUCT_TAXES\n            - WITHHOLDING\n        taxCodeCountry:\n          type: string\n          description: \u003e-\n            Determines the country/region for which the system calculates taxes.\n            The system uses the 2-character country/region code described on ISO\n            3166-1 alpha-2. This parameter is valid only for direct calculation\n            scenarios.\n          enum:\n            - AD\n            - AE\n            - AF\n            - AG\n            - AI\n            - AL\n            - AM\n            - AN\n            - AO\n            - AQ\n            - AR\n            - AS\n            - AT\n            - AU\n            - AW\n            - AX\n            - AZ\n            - BA\n            - BB\n            - BD\n            - BE\n            - BF\n            - BG\n            - BH\n            - BI\n            - BJ\n            - BL\n            - BM\n            - BN\n            - BO\n            - BQ\n            - BR\n            - BS\n            - BT\n            - BV\n            - BW\n            - BY\n            - BZ\n            - CA\n            - CC\n            - CD\n            - CF\n            - CG\n            - CH\n            - CI\n            - CK\n            - CL\n            - CM\n            - CN\n            - CO\n            - CR\n            - CS\n            - CU\n            - CV\n            - CW\n            - CX\n            - CY\n            - CZ\n            - DE\n            - DJ\n            - DK\n            - DM\n            - DO\n            - DZ\n            - EC\n            - EE\n            - EG\n            - EH\n            - ER\n            - ES\n            - ET\n            - FI\n            - FJ\n            - FK\n            - FM\n            - FO\n            - FR\n            - GA\n            - GB\n            - GD\n            - GE\n            - GF\n            - GG\n            - GH\n            - GI\n            - GL\n            - GM\n            - GN\n            - GP\n            - GQ\n            - GR\n            - GS\n            - GT\n            - GU\n            - GW\n            - GY\n            - HK\n            - HM\n            - HN\n            - HR\n            - HT\n            - HU\n            - ID\n            - IE\n            - IL\n            - IM\n            - IN\n            - IO\n            - IQ\n            - IR\n            - IS\n            - IT\n            - JE\n            - JM\n            - JO\n            - JP\n            - KE\n            - KG\n            - KH\n            - KI\n            - KM\n            - KN\n            - KP\n            - KR\n            - KW\n            - KY\n            - KZ\n            - LA\n            - LB\n            - LC\n            - LI\n            - LK\n            - LR\n            - LS\n            - LT\n            - LU\n            - LV\n            - LY\n            - MA\n            - MC\n            - MD\n            - ME\n            - MF\n            - MG\n            - MH\n            - MK\n            - ML\n            - MM\n            - MN\n            - MO\n            - MP\n            - MQ\n            - MR\n            - MS\n            - MT\n            - MU\n            - MV\n            - MW\n            - MX\n            - MY\n            - MZ\n            - NA\n            - NC\n            - NE\n            - NF\n            - NG\n            - NI\n            - NL\n            - 'NO'\n            - NP\n            - NR\n            - NU\n            - NZ\n            - OM\n            - PA\n            - PE\n            - PF\n            - PG\n            - PH\n            - PK\n            - PL\n            - PM\n            - PN\n            - PR\n            - PS\n            - PT\n            - PW\n            - PY\n            - QA\n            - RE\n            - RO\n            - RS\n            - RU\n            - RW\n            - SA\n            - SB\n            - SC\n            - SD\n            - SE\n            - SG\n            - SH\n            - SI\n            - SJ\n            - SK\n            - SL\n            - SM\n            - SN\n            - SO\n            - SR\n            - SS\n            - ST\n            - SV\n            - SX\n            - SY\n            - SZ\n            - TC\n            - TD\n            - TF\n            - TG\n            - TH\n            - TJ\n            - TK\n            - TL\n            - TM\n            - TN\n            - TO\n            - TR\n            - TT\n            - TV\n            - TW\n            - TZ\n            - UA\n            - UG\n            - UM\n            - US\n            - UY\n            - UZ\n            - VA\n            - VC\n            - VE\n            - VG\n            - VI\n            - VN\n            - VU\n            - WF\n            - WS\n            - YE\n            - YT\n            - ZA\n            - ZM\n            - ZW\n        taxCode:\n          type: string\n          description: \u003e-\n            Determines which rule the system uses to calculate taxes. This\n            parameter is valid only for direct calculation scenarios.\n        taxCodeRegion:\n          type: string\n          description: \u003e-\n            Determines the region for which the system calculates taxes. This\n            parameter is optional and valid only for direct calculation\n            scenarios.\n      description: \u003e-\n        If you include too many line items in the request, it can impact the\n        performance. For more information, see SAP Note 2698505 on the SAP ONE\n        Support Launchpad.\n    api.v0.schema.ItemClassification:\n      type: object\n      properties:\n        itemStandardClassificationSystemCode:\n          type: string\n          description: The identifier of the item.\n        itemStandardClassificationCode:\n          type: string\n          description: The classification code for the system code.\n    api.v0.schema.Location:\n      required:\n        - country\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: The type of address.\n          enum:\n            - SHIP_FROM\n            - SHIP_TO\n            - CONTRACT_FROM\n            - CONTRACT_TO\n            - SERVICE_LOCATION\n        addressLine1:\n          type: string\n          description: The first line of the address.\n        addressLine2:\n          type: string\n          description: The second line of the address.\n        addressLine3:\n          type: string\n          description: The third line of the address.\n        zipCode:\n          type: string\n          description: The ZIP or postal code.\n        city:\n          type: string\n          description: The name of the city.\n        state:\n          type: string\n          description: \u003e-\n            The code of the state or province; do not add the country/region as\n            a prefix or suffix.\n        county:\n          type: string\n          description: The name of the county.\n        addressId:\n          type: string\n          description: \u003e-\n            The ID of the address, as maintained in the tax configuration\n            application for the various location addresses. The 'addressID'\n            parameter is relevant only when location addresses are maintained in\n            the tax configuration application for a company, customer, or\n            supplier. For sale transactions and the location type 'SHIP_FROM',\n            the API checks for an address maintained for the company ID that is\n            specified in the request payload. For sale transactions and the\n            location type 'SHIP_TO', the API checks for an address maintained\n            for the business partner ID that is specified in the request\n            payload. For purchase transactions and the location type 'SHIP_TO',\n            the API checks for an address maintained for the company ID that is\n            specified in the request payload. For sale transactions and the\n            location type 'SHIP_FROM', the API checks for an address maintained\n            for the business partner ID that is specified in the request\n            payload. Note: if you specify an address ID in the request, you must\n            also specify a company ID and business partner ID.\n        country:\n          type: string\n          description: \u003e-\n            The name of the country/region. Enter the 2-character country/region\n            code according to the standards of ISO 3166-1 alpha-2.\n          enum:\n            - AD\n            - AE\n            - AF\n            - AG\n            - AI\n            - AL\n            - AM\n            - AN\n            - AO\n            - AQ\n            - AR\n            - AS\n            - AT\n            - AU\n            - AW\n            - AX\n            - AZ\n            - BA\n            - BB\n            - BD\n            - BE\n            - BF\n            - BG\n            - BH\n            - BI\n            - BJ\n            - BL\n            - BM\n            - BN\n            - BO\n            - BQ\n            - BR\n            - BS\n            - BT\n            - BV\n            - BW\n            - BY\n            - BZ\n            - CA\n            - CC\n            - CD\n            - CF\n            - CG\n            - CH\n            - CI\n            - CK\n            - CL\n            - CM\n            - CN\n            - CO\n            - CR\n            - CS\n            - CU\n            - CV\n            - CW\n            - CX\n            - CY\n            - CZ\n            - DE\n            - DJ\n            - DK\n            - DM\n            - DO\n            - DZ\n            - EC\n            - EE\n            - EG\n            - EH\n            - ER\n            - ES\n            - ET\n            - FI\n            - FJ\n            - FK\n            - FM\n            - FO\n            - FR\n            - GA\n            - GB\n            - GD\n            - GE\n            - GF\n            - GG\n            - GH\n            - GI\n            - GL\n            - GM\n            - GN\n            - GP\n            - GQ\n            - GR\n            - GS\n            - GT\n            - GU\n            - GW\n            - GY\n            - HK\n            - HM\n            - HN\n            - HR\n            - HT\n            - HU\n            - ID\n            - IE\n            - IL\n            - IM\n            - IN\n            - IO\n            - IQ\n            - IR\n            - IS\n            - IT\n            - JE\n            - JM\n            - JO\n            - JP\n            - KE\n            - KG\n            - KH\n            - KI\n            - KM\n            - KN\n            - KP\n            - KR\n            - KW\n            - KY\n            - KZ\n            - LA\n            - LB\n            - LC\n            - LI\n            - LK\n            - LR\n            - LS\n            - LT\n            - LU\n            - LV\n            - LY\n            - MA\n            - MC\n            - MD\n            - ME\n            - MF\n            - MG\n            - MH\n            - MK\n            - ML\n            - MM\n            - MN\n            - MO\n            - MP\n            - MQ\n            - MR\n            - MS\n            - MT\n            - MU\n            - MV\n            - MW\n            - MX\n            - MY\n            - MZ\n            - NA\n            - NC\n            - NE\n            - NF\n            - NG\n            - NI\n            - NL\n            - 'NO'\n            - NP\n            - NR\n            - NU\n            - NZ\n            - OM\n            - PA\n            - PE\n            - PF\n            - PG\n            - PH\n            - PK\n            - PL\n            - PM\n            - PN\n            - PR\n            - PS\n            - PT\n            - PW\n            - PY\n            - QA\n            - RE\n            - RO\n            - RS\n            - RU\n            - RW\n            - SA\n            - SB\n            - SC\n            - SD\n            - SE\n            - SG\n            - SH\n            - SI\n            - SJ\n            - SK\n            - SL\n            - SM\n            - SN\n            - SO\n            - SR\n            - SS\n            - ST\n            - SV\n            - SX\n            - SY\n            - SZ\n            - TC\n            - TD\n            - TF\n            - TG\n            - TH\n            - TJ\n            - TK\n            - TL\n            - TM\n            - TN\n            - TO\n            - TR\n            - TT\n            - TV\n            - TW\n            - TZ\n            - UA\n            - UG\n            - UM\n            - US\n            - UY\n            - UZ\n            - VA\n            - VC\n            - VE\n            - VG\n            - VI\n            - VN\n            - VU\n            - WF\n            - WS\n            - YE\n            - YT\n            - ZA\n            - ZM\n            - ZW\n        isCompanyTaxRegistered:\n          type: string\n          description: \u003e-\n            Shows whether the company is registered with the tax authorities at\n            this location. The application calling the API must identify whether\n            a company has a VAT establishment for tax purposes in the selling\n            country/region. If the company has a VAT establishment, the calling\n            application must specify 'Y' as the value for this parameter\n            \"isCompanyTaxRegistered\" for the selling location. If the company is\n            not established for VAT purposes, the calling application must\n            specify 'N' as the value for this parameter \"isCompanyTaxRegistered\"\n            for the selling location.\n          enum:\n            - 'y'\n            - 'n'\n            - 'Y'\n            - 'N'\n        isBusinessPartnerTaxRegistered:\n          type: string\n          description: \u003e-\n            Shows whether the business partner is registered for tax purposes.\n            The tax service does not differentiate between business-to-business\n            (B2B) and business-to-consumer (B2C) transactions. B2B transactions:\n            the calling application must specify 'Y' as the value of this\n            parameter. B2C transactions: the calling application must specify\n            'N' as the value of this parameter.\n          enum:\n            - 'y'\n            - 'n'\n            - 'Y'\n            - 'N'\n      description: List of Addresses.\n    api.v0.schema.Party:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            The identifier of each party in the business transaction. Use the\n            party master data ID that the consuming application defines. For\n            example, in SAP S/4HANA (Cloud and OP), the party ID is the business\n            partner number.\n        role:\n          type: string\n          description: The role played by the party in the transaction.\n          enum:\n            - SHIP_FROM\n            - SHIP_TO\n            - CONTRACT_FROM\n            - CONTRACT_TO\n            - SERVICE_LOCATION\n        taxRegistration:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.TaxRegistration'\n      description: Details about other parties.\n    api.v0.schema.TaxRegistration:\n      type: object\n      properties:\n        locationType:\n          type: string\n          description: The type of location.\n          enum:\n            - SHIP_FROM\n            - SHIP_TO\n            - CONTRACT_FROM\n            - CONTRACT_TO\n            - SERVICE_LOCATION\n        taxNumber:\n          type: string\n          description: The corresponding tax number for the tax number type code.\n        taxNumberTypeCode:\n          type: string\n          description: |-\n            The code for the tax number type.\n              * isNaturalPerson - Determines if this party of the business transaction is a natural person. Note: The system uses the information from this parameter to determine what data privacy and protection policies to apply on this payload data. The system does not use the information from this parameter to determine and calculate taxes. 'y' when the party is a natural person, otherwise 'n'.\n      description: The tax registration details.\n    api.v0.schema.TaxRequest:\n      required:\n        - Items\n        - currency\n        - date\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            A document ID that uniquely identifies the transaction, which is the\n            request that is sent for tax calculation.\n        companyId:\n          type: string\n          description: \u003e-\n            The company ID, as maintained in the Tax Configuration application.\n            If the company master data is maintained in the tax configuration\n            application, include a value for this key in the request for the\n            service to use the relevant tax classification available in the\n            application to determine the tax amount.\n        businessPartnerId:\n          type: string\n          description: \u003e-\n            The ID of a supplier or customer, as maintained in the Tax\n            Configuration application. Include a value for this parameter in the\n            request only if the tax configuration data for suppliers or\n            customers is maintained in the tax configuration application. In\n            this case, the service considers the relevant tax classification\n            available in the application to determine the tax amount.\n        date:\n          type: string\n          description: \u003e-\n            The date of a transaction, such as the order date, invoice date, or\n            return date. To determine the tax due, the service applies the\n            relevant tax rules that apply on this date.\n          format: date-time\n        currency:\n          type: string\n          description: \u003e-\n            Specifies the currency code according to ISO 4217 standards. All\n            amounts in the response have the number digits after the decimal\n            place in accordance with the currency in question.\n          enum:\n            - AED\n            - AFN\n            - ALL\n            - AMD\n            - ANG\n            - AOA\n            - ARS\n            - AUD\n            - AWG\n            - AZN\n            - BAM\n            - BBD\n            - BDT\n            - BGN\n            - BHD\n            - BIF\n            - BMD\n            - BND\n            - BOB\n            - BOV\n            - BRL\n            - BSD\n            - BTN\n            - BWP\n            - BYN\n            - BYR\n            - BZD\n            - CAD\n            - CDF\n            - CHE\n            - CHF\n            - CHW\n            - CLF\n            - CLP\n            - CNY\n            - COP\n            - COU\n            - CRC\n            - CSD\n            - CUC\n            - CUP\n            - CVE\n            - CYP\n            - CZK\n            - DJF\n            - DKK\n            - DOP\n            - DZD\n            - EEK\n            - EGP\n            - ERN\n            - ETB\n            - EUR\n            - FJD\n            - FKP\n            - GBP\n            - GEL\n            - GHC\n            - GHS\n            - GIP\n            - GMD\n            - GNF\n            - GTQ\n            - GWP\n            - GYD\n            - HKD\n            - HNL\n            - HRK\n            - HTG\n            - HUF\n            - IDR\n            - ILS\n            - INR\n            - IQD\n            - IRR\n            - ISK\n            - JMD\n            - JOD\n            - JPY\n            - KES\n            - KGS\n            - KHR\n            - KMF\n            - KPW\n            - KRW\n            - KWD\n            - KYD\n            - KZT\n            - LAK\n            - LBP\n            - LKR\n            - LRD\n            - LSL\n            - LTL\n            - LVL\n            - LYD\n            - MAD\n            - MDL\n            - MGA\n            - MKD\n            - MMK\n            - MNT\n            - MOP\n            - MRO\n            - MRU\n            - MTL\n            - MUR\n            - MVR\n            - MWK\n            - MXN\n            - MXV\n            - MYR\n            - MZN\n            - NAD\n            - NGN\n            - NIO\n            - NOK\n            - NPR\n            - NZD\n            - OMR\n            - PAB\n            - PEN\n            - PGK\n            - PHP\n            - PKR\n            - PLN\n            - PYG\n            - QAR\n            - ROL\n            - RON\n            - RSD\n            - RUB\n            - RWF\n            - SAR\n            - SBD\n            - SCR\n            - SDD\n            - SDG\n            - SEK\n            - SGD\n            - SHP\n            - SIT\n            - SKK\n            - SLL\n            - SOS\n            - SRD\n            - SSP\n            - STD\n            - SVC\n            - SYP\n            - SZL\n            - THB\n            - TJS\n            - TMM\n            - TMT\n            - TND\n            - TOP\n            - TRY\n            - TTD\n            - TWD\n            - TZS\n            - UAH\n            - UGX\n            - USD\n            - USN\n            - USS\n            - UYI\n            - UYU\n            - UZS\n            - VEB\n            - VEF\n            - VND\n            - VUV\n            - WST\n            - XAF\n            - XAG\n            - XAU\n            - XBA\n            - XBB\n            - XBC\n            - XBD\n            - XCD\n            - XDR\n            - XFO\n            - XFU\n            - XOF\n            - XPD\n            - XPF\n            - XPT\n            - XSU\n            - XTS\n            - XUA\n            - XXX\n            - YER\n            - ZAR\n            - ZMK\n            - ZMW\n            - ZWD\n            - ZWL\n            - ZWN\n        isTransactionWithinTaxReportingGroup:\n          type: string\n          description: \u003e-\n            Indicates if the parties involved in the transaction belong to the\n            same tax reporting group, as defined by law.\n          enum:\n            - 'y'\n            - 'n'\n            - 'Y'\n            - 'N'\n        cashDiscountPercent:\n          type: string\n          description: \u003e-\n            The percentage discount that applies to the business transaction\n            request sent. In accordance with country/region tax determination\n            guidelines, the service determines whether a cash discount affects\n            the base amount used for tax calculation.\n        isCashDiscountPlanned:\n          type: string\n          description: \u003e-\n            If the cash discount is planned for the transaction, enter 'y' or\n            'Y' as the value of this parameter. If the cash discount is already\n            considered in the transaction, enter 'n' or 'N' as the value of this\n            parameter.\n          enum:\n            - 'y'\n            - 'n'\n            - 'Y'\n            - 'N'\n        grossOrNet:\n          type: string\n          description: \u003e-\n            Shows whether the transaction is gross or net. Use g for gross and n\n            for net.\n          enum:\n            - g\n            - 'n'\n            - G\n            - 'N'\n        saleorPurchase:\n          type: string\n          description: \u003e-\n            Shows whether the transaction is a sale or purchase. Use s or S for\n            a sale and p or P for a purchase.\n          enum:\n            - s\n            - p\n            - S\n            - P\n        operationNatureCode:\n          type: string\n          description: Identifies the nature of the operation.\n        isCompanyDeferredTaxEnabled:\n          type: string\n          description: \u003e-\n            Indicates if the company can defer the tax due until the date of the\n            invoice payment. This applies only if the company has the required\n            authorizations for tax deferral. If you enter 'y' as the value in\n            this parameter, the service applies deferred tax rules and indicates\n            tax deferral in the response.\n          enum:\n            - 'y'\n            - 'n'\n            - 'Y'\n            - 'N'\n        Items:\n          type: array\n          description: \u003e-\n            If you include too many line items in the request, it can impact the\n            performance. For more information, see SAP Note 2698505 on the SAP\n            ONE Support Launchpad.\n          items:\n            $ref: '#/components/schemas/api.v0.schema.Item'\n        Locations:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.Location'\n        BusinessPartnerExemptionDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.BusinessPartnerExemptionDetail'\n        Party:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.Party'\n        isTraceRequired:\n          type: string\n          description: \u003e-\n            Shows whether tracing of the tax determination process is enabled.\n            To enable the trace, enter 'y' or 'Y' as the value of the parameter.\n            To disable the trace, enter 'n' or 'N'. When enabled, the trace\n            content is sent as part of the response payload.\n          enum:\n            - 'y'\n            - 'n'\n            - 'Y'\n            - 'N'\n      description: The request payload as per the model schema provided.\n    api.v0.schema.ErrorResponse:\n      type: object\n      properties:\n        status:\n          type: integer\n          description: The status code.\n          format: int32\n        type:\n          type: string\n          description: The message type.\n          enum:\n            - bad_request\n            - unsupported_media\n            - invalid_input\n            - invalid_content\n            - server_exception\n            - invalid_input_Location\n            - problem_in_cloud_connector\n            - request_not_valid\n            - request_data_not_valid\n            - unable_to_determine_tax_engine\n            - partner_did_not_resolve_taxes\n            - partner_invalid_response\n            - taxConfiguration_connection_exception\n            - unable_to_determine_tax_configuration_destination\n            - no_content\n            - partial_content\n        message:\n          type: string\n          description: The message content.\n      description: \u003e-\n        Invalid date in the request / Invalid country/region code in the request\n        / Invalid type in the request / Any of the mandatory parameters is\n        missing / Invalid currency in the request / Invalid GrossOrNet in the\n        request / Invalid SaleOrPurchase in the request / Max length given in\n        the schema / Location Type is missing/invalid / ExemptionCode is\n        missing/invalid / More than 1 Ship_From in the exemptionDetils / More\n        than 1 Ship_To in the exemptionDetails / More than 1 Ship_From in the\n        Locations / More than 1 Ship_To in the Locations/ Invalid Zipcode in\n        SHIP_TO Location for US / More than 1 shippingCost in items / Invalid\n        shippingCost in items \" / Invalid fromDate / Invalid toDate / Invalid\n        Date Range / Missing value for toDate / Missing value for fromDate.\n    api.v0.schema.TaxAttribute:\n      type: object\n      properties:\n        attributeType:\n          type: string\n          description: The type of the tax attribute.\n        attributeValue:\n          type: string\n          description: Corresponding value for the attributes.\n      description: Other tax attributes.\n    api.v0.schema.TaxLine:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique identifier for each item in the transaction.\n        country:\n          type: string\n          description: \u003e-\n            The taxable country/region. If the tax country/region for an item\n            differs from the other items, then the tax service sends back the\n            tax country/region for each item.\n          enum:\n            - AD\n            - AE\n            - AF\n            - AG\n            - AI\n            - AL\n            - AM\n            - AN\n            - AO\n            - AQ\n            - AR\n            - AS\n            - AT\n            - AU\n            - AW\n            - AX\n            - AZ\n            - BA\n            - BB\n            - BD\n            - BE\n            - BF\n            - BG\n            - BH\n            - BI\n            - BJ\n            - BL\n            - BM\n            - BN\n            - BO\n            - BQ\n            - BR\n            - BS\n            - BT\n            - BV\n            - BW\n            - BY\n            - BZ\n            - CA\n            - CC\n            - CD\n            - CF\n            - CG\n            - CH\n            - CI\n            - CK\n            - CL\n            - CM\n            - CN\n            - CO\n            - CR\n            - CS\n            - CU\n            - CV\n            - CW\n            - CX\n            - CY\n            - CZ\n            - DE\n            - DJ\n            - DK\n            - DM\n            - DO\n            - DZ\n            - EC\n            - EE\n            - EG\n            - EH\n            - ER\n            - ES\n            - ET\n            - FI\n            - FJ\n            - FK\n            - FM\n            - FO\n            - FR\n            - GA\n            - GB\n            - GD\n            - GE\n            - GF\n            - GG\n            - GH\n            - GI\n            - GL\n            - GM\n            - GN\n            - GP\n            - GQ\n            - GR\n            - GS\n            - GT\n            - GU\n            - GW\n            - GY\n            - HK\n            - HM\n            - HN\n            - HR\n            - HT\n            - HU\n            - ID\n            - IE\n            - IL\n            - IM\n            - IN\n            - IO\n            - IQ\n            - IR\n            - IS\n            - IT\n            - JE\n            - JM\n            - JO\n            - JP\n            - KE\n            - KG\n            - KH\n            - KI\n            - KM\n            - KN\n            - KP\n            - KR\n            - KW\n            - KY\n            - KZ\n            - LA\n            - LB\n            - LC\n            - LI\n            - LK\n            - LR\n            - LS\n            - LT\n            - LU\n            - LV\n            - LY\n            - MA\n            - MC\n            - MD\n            - ME\n            - MF\n            - MG\n            - MH\n            - MK\n            - ML\n            - MM\n            - MN\n            - MO\n            - MP\n            - MQ\n            - MR\n            - MS\n            - MT\n            - MU\n            - MV\n            - MW\n            - MX\n            - MY\n            - MZ\n            - NA\n            - NC\n            - NE\n            - NF\n            - NG\n            - NI\n            - NL\n            - 'NO'\n            - NP\n            - NR\n            - NU\n            - NZ\n            - OM\n            - PA\n            - PE\n            - PF\n            - PG\n            - PH\n            - PK\n            - PL\n            - PM\n            - PN\n            - PR\n            - PS\n            - PT\n            - PW\n            - PY\n            - QA\n            - RE\n            - RO\n            - RS\n            - RU\n            - RW\n            - SA\n            - SB\n            - SC\n            - SD\n            - SE\n            - SG\n            - SH\n            - SI\n            - SJ\n            - SK\n            - SL\n            - SM\n            - SN\n            - SO\n            - SR\n            - SS\n            - ST\n            - SV\n            - SX\n            - SY\n            - SZ\n            - TC\n            - TD\n            - TF\n            - TG\n            - TH\n            - TJ\n            - TK\n            - TL\n            - TM\n            - TN\n            - TO\n            - TR\n            - TT\n            - TV\n            - TW\n            - TZ\n            - UA\n            - UG\n            - UM\n            - US\n            - UY\n            - UZ\n            - VA\n            - VC\n            - VE\n            - VG\n            - VI\n            - VN\n            - VU\n            - WF\n            - WS\n            - YE\n            - YT\n            - ZA\n            - ZM\n            - ZW\n        totalTax:\n          type: string\n          description: The total amount of tax for an item.\n        taxcode:\n          type: string\n          description: The tax code for an item in the operation.\n        taxCodeDescription:\n          type: string\n          description: \u003e-\n            The description of the tax code that is determined for the\n            transaction.\n        taxCodeLegalPhrase:\n          type: string\n          description: \u003e-\n            The legal phrase associated with the tax code. Where applicable,\n            this item relates to the tax act or article numbers.\n        totalRate:\n          type: string\n          description: The total tax rate.\n        totalWithholdingTax:\n          type: string\n          description: The total amount of withholding tax.\n        totalWithholdingTaxRate:\n          type: string\n          description: The total withholding tax rate.\n        withholdingTaxCode:\n          type: string\n          description: The withholding tax code.\n        taxValues:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.TaxValue'\n    api.v0.schema.TaxResponse:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date-time\n        total:\n          type: string\n          description: The total amount to be paid or collected.\n        inclusive:\n          type: string\n          description: \u003e-\n            Shows whether tax was included in the gross amount: included (true)\n            or not included (false).\n        subTotal:\n          type: string\n          description: The amount on which tax is applicable.\n        totalTax:\n          type: string\n          description: The total amount of tax for an item.\n        totalWithholdingTax:\n          type: string\n          description: The total amount of withholding tax.\n        country:\n          type: string\n          description: \u003e-\n            The taxable country/region. Note: the API returns the country/region\n            only if all items have the same tax country/region.\n          enum:\n            - AD\n            - AE\n            - AF\n            - AG\n            - AI\n            - AL\n            - AM\n            - AN\n            - AO\n            - AQ\n            - AR\n            - AS\n            - AT\n            - AU\n            - AW\n            - AX\n            - AZ\n            - BA\n            - BB\n            - BD\n            - BE\n            - BF\n            - BG\n            - BH\n            - BI\n            - BJ\n            - BL\n            - BM\n            - BN\n            - BO\n            - BQ\n            - BR\n            - BS\n            - BT\n            - BV\n            - BW\n            - BY\n            - BZ\n            - CA\n            - CC\n            - CD\n            - CF\n            - CG\n            - CH\n            - CI\n            - CK\n            - CL\n            - CM\n            - CN\n            - CO\n            - CR\n            - CS\n            - CU\n            - CV\n            - CW\n            - CX\n            - CY\n            - CZ\n            - DE\n            - DJ\n            - DK\n            - DM\n            - DO\n            - DZ\n            - EC\n            - EE\n            - EG\n            - EH\n            - ER\n            - ES\n            - ET\n            - FI\n            - FJ\n            - FK\n            - FM\n            - FO\n            - FR\n            - GA\n            - GB\n            - GD\n            - GE\n            - GF\n            - GG\n            - GH\n            - GI\n            - GL\n            - GM\n            - GN\n            - GP\n            - GQ\n            - GR\n            - GS\n            - GT\n            - GU\n            - GW\n            - GY\n            - HK\n            - HM\n            - HN\n            - HR\n            - HT\n            - HU\n            - ID\n            - IE\n            - IL\n            - IM\n            - IN\n            - IO\n            - IQ\n            - IR\n            - IS\n            - IT\n            - JE\n            - JM\n            - JO\n            - JP\n            - KE\n            - KG\n            - KH\n            - KI\n            - KM\n            - KN\n            - KP\n            - KR\n            - KW\n            - KY\n            - KZ\n            - LA\n            - LB\n            - LC\n            - LI\n            - LK\n            - LR\n            - LS\n            - LT\n            - LU\n            - LV\n            - LY\n            - MA\n            - MC\n            - MD\n            - ME\n            - MF\n            - MG\n            - MH\n            - MK\n            - ML\n            - MM\n            - MN\n            - MO\n            - MP\n            - MQ\n            - MR\n            - MS\n            - MT\n            - MU\n            - MV\n            - MW\n            - MX\n            - MY\n            - MZ\n            - NA\n            - NC\n            - NE\n            - NF\n            - NG\n            - NI\n            - NL\n            - 'NO'\n            - NP\n            - NR\n            - NU\n            - NZ\n            - OM\n            - PA\n            - PE\n            - PF\n            - PG\n            - PH\n            - PK\n            - PL\n            - PM\n            - PN\n            - PR\n            - PS\n            - PT\n            - PW\n            - PY\n            - QA\n            - RE\n            - RO\n            - RS\n            - RU\n            - RW\n            - SA\n            - SB\n            - SC\n            - SD\n            - SE\n            - SG\n            - SH\n            - SI\n            - SJ\n            - SK\n            - SL\n            - SM\n            - SN\n            - SO\n            - SR\n            - SS\n            - ST\n            - SV\n            - SX\n            - SY\n            - SZ\n            - TC\n            - TD\n            - TF\n            - TG\n            - TH\n            - TJ\n            - TK\n            - TL\n            - TM\n            - TN\n            - TO\n            - TR\n            - TT\n            - TV\n            - TW\n            - TZ\n            - UA\n            - UG\n            - UM\n            - US\n            - UY\n            - UZ\n            - VA\n            - VC\n            - VE\n            - VG\n            - VI\n            - VN\n            - VU\n            - WF\n            - WS\n            - YE\n            - YT\n            - ZA\n            - ZM\n            - ZW\n        taxLines:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.TaxLine'\n        warning:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.Warning'\n        traceLog:\n          type: array\n          description: \u003e-\n            Includes the trace content for tax determination. Applies only when\n            the value of the 'isTraceRequired' parameter is 'y' in the request\n            payload.\n          items:\n            type: string\n            description: \u003e-\n              Includes the trace content for tax determination. Applies only\n              when the value of the 'isTraceRequired' parameter is 'y' in the\n              request payload.\n    api.v0.schema.TaxValue:\n      type: object\n      properties:\n        level:\n          type: string\n          description: \u003e-\n            Returns the tax level in the tax hierarchy for a tax on tax\n            scenario. The highest level is 1. In the case of sales and use tax\n            in US, level 1 indicates State tax, level 2 indicates county and so\n            on.\n        taxTypeCode:\n          type: string\n          description: Tax type code.\n        name:\n          type: string\n          description: Name of tax type.\n        rate:\n          type: string\n          description: Tax rate.\n        taxable:\n          type: string\n          description: \u003e-\n            Returns the base amount used for tax calculations. In cases where a\n            cash discount percentage is passed, country/region tax determination\n            guidelines can affect the base amount.\n        exemptedBasePercent:\n          type: string\n          description: Percentage of base amount exempted.\n        exemptedBaseAmount:\n          type: string\n          description: Exempted base amount.\n        otherBaseAmount:\n          type: string\n          description: Other base amount.\n        value:\n          type: string\n          description: Tax amount including the non-deductible amount where applicable.\n        nonDeductibleTaxRate:\n          type: string\n          description: Non-deductible tax rate.\n        nonDeductibleTaxAmount:\n          type: string\n          description: Non-deductible tax amount.\n        deductibleTaxAmount:\n          type: string\n          description: Deductible tax amount.\n        taxAttributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/api.v0.schema.TaxAttribute'\n        jurisdiction:\n          type: string\n          description: Jurisdiction name.\n        jurisdictionCode:\n          type: string\n          description: Returns the unique identifier of tax jurisdiction in the US.\n        dueCategory:\n          type: string\n          description: \u003e-\n            Returns \"P\" (payable) in cases of taxes due to the authorities, and\n            \"R\" (receivable) for input taxes that can be claimed.\n          enum:\n            - P\n            - p\n            - R\n            - r\n        isTaxDeferred:\n          type: boolean\n          description: Is tax deferred or not.\n        withholdingRelevant:\n          type: boolean\n          description: Tax value is withholding relevant or not.\n    api.v0.schema.Warning:\n      type: object\n      properties:\n        code:\n          type: string\n          description: The code of the warning.\n        description:\n          type: string\n          description: The description of the warning.\n      description: \u003e-\n        Return messages for scenarios where one or more input values are not\n        taken into consideration for tax calculation. It is also relevant in\n        cases in which the API overrides input values.\n  securitySchemes:\n    OAuth2_ClientCredentials:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: \"\"\n          scopes:\n            read: Grants read access\n            admin: Grants read and write access to administrative information\n            write: Grants write access\nx-sap-stateInfo:\n  state: Active\nx-sap-shortText: Determines and calculates indirect taxes due on business transactions.\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/saps4hana.externaltaxcalculation.taxquote/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/saps4hana.externaltaxcalculation.taxquote/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /quote: post: operation \"taxQuote_1\": security: parse security scheme \"OAuth2_ClientCredentials\": oauth2: flow \"clientCredentials\": \"tokenUrl\" MUST be in the form of a URL: parse \"\": empty url"
}