{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Abbas-gheydi/radotp"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "pkgs/web/swager/swagger.json",
			"byteSize": 5028,
			"content": "{\n    \"openapi\": \"3.0.1\",\n    \"info\": {\n      \"title\": \"OTP Server API\",\n      \"description\": \"an api to create/edit/delete/get user\",\n      \"version\": \"0.1\"\n    },\n    \"servers\": [\n      {\n        \"url\": \"/\"\n      }\n    ],\n    \"paths\": {\n      \"/api/v1/user/{UserName}\": {\n        \"get\": {\n          \"description\": \"Check \\\"UserName\\\" has otp secret already.\",\n          \"parameters\": [\n            {\n              \"name\": \"UserName\",\n              \"in\": \"path\",\n              \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n              \"required\": true,\n              \"type\": \"string\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"user has otp code\",\n              \"content\": {\n                \"application/json\": {\n                  \"examples\": {\n                    \"example\": {\n                      \"value\": {\n                        \"username\": \"UserName\",\n                        \"result\": \"user has otp code\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"servers\": [\n            {\n              \"url\": \"/\"\n            }\n          ]\n        },\n        \"put\": {\n          \"description\": \"generate otp secret for \\\"UserName\\\"\",\n          \"parameters\": [\n            {\n              \"name\": \"UserName\",\n              \"in\": \"path\",\n              \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n              \"required\": true,\n              \"type\": \"string\"\n            }\n          ],\n          \"responses\": {\n            \"201\": {\n              \"description\": \"NewUserName has been created\",\n              \"content\": {\n                \"application/json\": {\n                  \"examples\": {\n                    \"example\": {\n                      \"value\": {\n                        \"username\": \"NewUserName\",\n                        \"result\": \"ok\",\n                        \"secret\": \"L6KHZEDJTZMY32AF2K2SL646W6\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"servers\": [\n            {\n              \"url\": \"/\"\n            }\n          ]\n        },\n        \"post\": {\n          \"description\": \"force update \\\"UserName\\\" otp secret\",\n          \"parameters\": [\n            {\n              \"name\": \"UserName\",\n              \"in\": \"path\",\n              \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n              \"required\": true,\n              \"type\": \"string\"\n            }\n          ],\n          \"responses\": {\n            \"201\": {\n              \"description\": \"otp secret for UserName has been changed\",\n              \"content\": {\n                \"application/json\": {\n                  \"examples\": {\n                    \"example\": {\n                      \"value\": {\n                        \"username\": \"UserName\",\n                        \"result\": \"ok\",\n                        \"secret\": \"XCEGJSHEQPUXHIUCQXW5WRXAMY\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"servers\": [\n            {\n              \"url\": \"/\"\n            }\n          ]\n        },\n        \"delete\": {\n          \"description\": \"remove otp access for \\\"UserName\\\"\",\n          \"parameters\": [\n            {\n              \"name\": \"UserName\",\n              \"in\": \"path\",\n              \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n              \"required\": true,\n              \"type\": \"string\"\n            }\n          ],\n          \"responses\": {\n            \"200\": {\n              \"description\": \"UerName otp secret for user has been disabled\",\n              \"content\": {\n                \"application/json\": {\n                  \"examples\": {\n                    \"example\": {\n                      \"value\": {\n                        \"username\": \"UserName\",\n                        \"result\": \"Disabled OTP Code for User\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"security\": [\n            {\n              \"bearerAuth\": []\n            }\n          ],\n          \"servers\": [\n            {\n              \"url\": \"/\"\n            }\n          ]\n        },\n        \"servers\": [\n          {\n            \"url\": \"/\"\n          }\n        ]\n      }\n    },\n    \"components\": {\n      \"schemas\": {},\n      \"securitySchemes\": {\n        \"bearerAuth\": {\n          \"type\": \"http\",\n          \"description\": \"JWT Authorization header using the Bearer scheme.\",\n          \"scheme\": \"bearer\",\n          \"bearerFormat\": \"JWT\"\n        }\n      }\n    }\n  }\n  \n",
			"canonicalURL": "/github.com/Abbas-gheydi/radotp@fe940fbac9c239cd4dedcdd672d81cf1ce5881f9/-/blob/pkgs/web/swager/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/Abbas-gheydi/radotp/blob/fe940fbac9c239cd4dedcdd672d81cf1ce5881f9/pkgs/web/swager/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/user/{UserName}\": get: parameters: parse parameter \"UserName\": at 18:13: parameter MUST contain either a schema property, or a content property"
}