{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "dcsa_location_v2.0.2.yaml",
			"size": 0,
			"path": "domain/location/dcsa_location_v2.0.2.yaml",
			"byteSize": 10321,
			"content": "# OpenAPI version identifier - required for OpenAPI 3.0 domains\nopenapi: 3.0.3\n\n#######################\n# Optional info section\n#######################\ninfo:\n  title: DCSA - Location Components\n  description: |\n    Common components for Locations. Locations defined in DCSA APIs and Domains should refer to this Domain.\n    \n    There are multiple ways to define a location.\n    \n    - the \"General\" purpose location object can be used as a Polymorphic object defining a Location in multiple ways. All \"ways\" of defining a location must point to the same location. An example of this: location object containing values in the `UN Location Code` field as well as in the `Address` object would require that these two fields point to the same location\n    - it is also possible to define locations using the `interfaces`. An `interface` is a specific way of defining a location. This Domain defines 5 official ways to define a location: \n      - via **UN Location Code** (only defines a location using `UN Location Code`)\n      - via **facilityCode** (defines a location by either a `SMDG` or `BIC` code)\n      - via **facilitySMDGCode** (defines a location by a `SMDG` code)\n      - via a **geoLocation** (defines a location by a `latitude` and `longitude`)\n      - via an **Address** (defines a location by an `Address`)\n      \n      It is possible to \"combine\" interfaces. This should be done using the `anyOf` qualifier. When doing this the same rule as in the \"General\" purpose location applies: all interfaces of the same location object must point to the same location\n    \n    For a history of changes in this domain - please check [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/domain/location#v201). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Digital Container Shipping Association (DCSA)\n    url: https://dcsa.org\n    email: info@dcsa.org\n  version: 2.0.2\n\ncomponents:\n\n  ####################\n  # Common data models\n  ####################\n  schemas:\n    location:\n      type: object\n      description: |\n        General purpose object to capture location-related data, the location can be specified in **any** of the following ways: `geoLocation` (lat+long), `UN Location Code`, a `Facility` or an `Address`.\n        \n        If multiple ways are used - then they all have to point to the same location!\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            latitude:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/latitude'\n        - type: object\n          properties:\n            longitude:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/longitude'\n        - type: object\n          properties:\n            UNLocationCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/UNLocationCode'\n        - type: object\n          properties:\n            facilityCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityCode'\n        - type: object\n          properties:\n            facilityCodeListProvider:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityCodeListProvider'\n        - type: object\n          properties:\n            address:\n              description: 'Address related information'\n              allOf:\n                - $ref: '#/components/schemas/address'\n    referenceLocation:\n      type: object\n      description: |\n        An interface used to express a location using a reference (`locationReference`)\n        \n        **NB**: This interface has not been agreed\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            locationReference:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationReference'\n      required:\n        - locationReference\n    addressLocation:\n      type: object\n      description: |\n        An interface used to express a location using an `Address` object\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            address:\n              description: 'Address related information'\n              allOf:\n                - $ref: '#/components/schemas/address'\n      required:\n        - address\n    facilityLocation:\n      type: object\n      description: |\n        An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            UNLocationCode:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/UNLocationCode'\n                - description: |\n                    The UN Location code specifying where the place is located. This field is conditionally mandatory depending on the value of the `facilityCodeListProvider` field.\n        - type: object\n          properties:\n            facilityCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityCode'\n        - type: object\n          properties:\n            facilityCodeListProvider:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityCodeListProvider'\n      required:\n        - facilityCode\n        - facilityCodeListProvider\n    facilitySMDGLocation:\n      type: object\n      description: |\n        An interface used to express a location using a `Facility` by the `SMDG` code list. The `facilitySMDGCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            UNLocationCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/UNLocationCode'\n        - type: object\n          properties:\n            facilitySMDGCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/facilityCode'\n      required:\n        - facilitySMDGCode\n        - UNLocationCode\n    geoLocation:\n      type: object\n      description: |\n        An interface used to express a location using `latitude` and `longitude`\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            latitude:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/latitude'\n        - type: object\n          properties:\n            longitude:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/longitude'\n      required:\n        - latitude\n        - longitude\n    unLocationLocation:\n      type: object\n      description: |\n        An interface used to express a location using a `Un Location Code`\n      allOf:\n        - type: object\n          properties:\n            locationName:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/locationName'\n        - type: object\n          properties:\n            UNLocationCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/UNLocationCode'\n      required:\n        - UNLocationCode\n    address:\n      type: object\n      description: |\n        An object for storing address related information\n      allOf:\n        - type: object\n          properties:\n            name:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/addressName'\n        - type: object\n          properties:\n            street:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/streetName'\n        - type: object\n          properties:\n            streetNumber:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/streetNumber'\n        - type: object\n          properties:\n            floor:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/floor'\n        - type: object\n          properties:\n            postCode:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/postCode'\n        - type: object\n          properties:\n            city:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/cityName'\n        - type: object\n          properties:\n            stateRegion:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/stateRegion'\n        - type: object\n          properties:\n            country:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2#/components/schemas/country'\n",
			"canonicalURL": "/github.com/dcsaorg/DCSA-OpenAPI@1b8811d1099e42001cfe448916330eab6f260472/-/blob/domain/location/dcsa_location_v2.0.2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcsaorg/DCSA-OpenAPI/blob/1b8811d1099e42001cfe448916330eab6f260472/domain/location/dcsa_location_v2.0.2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"facilityLocation\": parse schema: parse schema: property \"locationName\": parse schema: at 1:1806: external \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2\": get: https: do: Get \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.2\": host \"api.swaggerhub.com\" is not allowed"
}