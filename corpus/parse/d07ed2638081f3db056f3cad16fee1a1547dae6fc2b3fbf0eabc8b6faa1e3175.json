{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-dynamodb-2011-12-05-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-dynamodb-2011-12-05-swagger.yaml",
			"byteSize": 57595,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2011-12-05\n  x-release: v4\n  title: Amazon DynamoDB\n  description: \u003cp\u003eAmazon DynamoDB is a fast, highly scalable, highly available,\n    cost-effective non-relational database service.\u003c/p\u003e \u003cp\u003eAmazon DynamoDB\n    removes traditional scalability limitations on data storage while\n    maintaining low latency and predictable performance.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: dynamodb\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dynamodb-2011-12-05.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: false\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/dynamodb/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=DynamoDB_20111205.BatchGetItem:\n    post:\n      operationId: BatchGetItem\n      description: \u003cp\u003eRetrieves the attributes for multiple items from multiple tables\n        using their primary keys.\u003c/p\u003e \u003cp\u003eThe maximum number of item attributes\n        that can be retrieved for a single operation is 100. Also, the number of\n        items retrieved is constrained by a 1 MB the size limit. If the response\n        size limit is exceeded or a partial result is returned due to an\n        internal processing failure, Amazon DynamoDB returns an\n        \u003ccode\u003eUnprocessedKeys\u003c/code\u003e value so you can retry the operation\n        starting with the next item to get.\u003c/p\u003e \u003cp\u003eAmazon DynamoDB automatically\n        adjusts the number of items returned per page to enforce this limit. For\n        example, even if you ask to retrieve 100 items, but each individual item\n        is 50k in size, the system returns 20 items and an appropriate\n        \u003ccode\u003eUnprocessedKeys\u003c/code\u003e value so you can get the next page of\n        results. If necessary, your application needs its own logic to assemble\n        the pages of results into one set.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetItemOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: RequestItems\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.BatchGetItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchGetItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.BatchWriteItem:\n    post:\n      operationId: BatchWriteItem\n      description: \u003cp\u003eAllows to execute a batch of Put and/or Delete Requests for many\n        tables in a single call. A total of 25 requests are allowed.\u003c/p\u003e\n        \u003cp\u003eThere are no transaction guarantees provided by this API. It does not\n        allow conditional puts nor does it support return values.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchWriteItemOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.BatchWriteItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchWriteItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.CreateTable:\n    post:\n      operationId: CreateTable\n      description: \u003cp\u003eAdds a new table to your account.\u003c/p\u003e \u003cp\u003eThe table name must be\n        unique among those associated with the AWS Account issuing the request,\n        and the AWS Region that receives the request (e.g.\n        \u003ccode\u003eus-east-1\u003c/code\u003e).\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eCreateTable\u003c/code\u003e operation\n        triggers an asynchronous workflow to begin creating the table. Amazon\n        DynamoDB immediately returns the state of the table\n        (\u003ccode\u003eCREATING\u003c/code\u003e) until the table is in the \u003ccode\u003eACTIVE\u003c/code\u003e\n        state. Once the table is in the \u003ccode\u003eACTIVE\u003c/code\u003e state, you can\n        perform data plane operations.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateTableOutput\"\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.CreateTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.DeleteItem:\n    post:\n      operationId: DeleteItem\n      description: \u003cp\u003eDeletes a single item in a table by primary key.\u003c/p\u003e \u003cp\u003eYou can\n        perform a conditional delete operation that deletes the item if it\n        exists, or if it has an expected attribute value.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteItemOutput\"\n        \"480\":\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConditionalCheckFailedException\"\n        \"481\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.DeleteItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.DeleteTable:\n    post:\n      operationId: DeleteTable\n      description: \u003cp\u003eDeletes a table and all of its items.\u003c/p\u003e \u003cp\u003eIf the table is in the\n        \u003ccode\u003eACTIVE\u003c/code\u003e state, you can delete it. If a table is in\n        \u003ccode\u003eCREATING\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e states then Amazon\n        DynamoDB returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e. If the specified\n        table does not exist, Amazon DynamoDB returns a\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteTableOutput\"\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.DeleteTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.DescribeTable:\n    post:\n      operationId: DescribeTable\n      description: \u003cp\u003eRetrieves information about the table, including the current status\n        of the table, the primary key schema and when the table was created.\u003c/p\u003e\n        \u003cp\u003eIf the table does not exist, Amazon DynamoDB returns a\n        \u003ccode\u003eResourceNotFoundException\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeTableOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.DescribeTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.GetItem:\n    post:\n      operationId: GetItem\n      description: \u003cp\u003eRetrieves a set of Attributes for an item that matches the primary\n        key.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetItem\u003c/code\u003e operation provides an\n        eventually-consistent read by default. If eventually-consistent reads\n        are not acceptable for your application, use\n        \u003ccode\u003eConsistentRead\u003c/code\u003e. Although this operation might take longer\n        than a standard read, it always returns the last updated value.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetItemOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.GetItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.ListTables:\n    post:\n      operationId: ListTables\n      description: Retrieves a paginated list of table names created by the AWS Account of\n        the caller in the AWS Region (e.g. \u003ccode\u003eus-east-1\u003c/code\u003e).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTablesOutput\"\n        \"480\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartTableName\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.ListTables\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTablesInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.PutItem:\n    post:\n      operationId: PutItem\n      description: \u003cp\u003eCreates a new item, or replaces an old item with a new item\n        (including all the attributes).\u003c/p\u003e \u003cp\u003eIf an item already exists in the\n        specified table with the same primary key, the new item completely\n        replaces the existing item. You can perform a conditional put (insert a\n        new item if one with the specified primary key doesn't exist), or\n        replace an existing item if it has certain attribute values.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutItemOutput\"\n        \"480\":\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConditionalCheckFailedException\"\n        \"481\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.PutItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.Query:\n    post:\n      operationId: Query\n      description: \u003cp\u003eGets the values of one or more items and its attributes by primary\n        key (composite primary key, only).\u003c/p\u003e \u003cp\u003eNarrow the scope of the query\n        using comparison operators on the \u003ccode\u003eRangeKeyValue\u003c/code\u003e of the\n        composite key. Use the \u003ccode\u003eScanIndexForward\u003c/code\u003e parameter to get\n        results in forward or reverse order by range key.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QueryOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartKey\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.Query\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/QueryInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.Scan:\n    post:\n      operationId: Scan\n      description: \u003cp\u003eRetrieves one or more items and its attributes by performing a full\n        scan of a table.\u003c/p\u003e \u003cp\u003eProvide a \u003ccode\u003eScanFilter\u003c/code\u003e to get more\n        specific results.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScanOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartKey\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.Scan\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScanInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.UpdateItem:\n    post:\n      operationId: UpdateItem\n      description: \u003cp\u003eEdits an existing item's attributes.\u003c/p\u003e \u003cp\u003eYou can perform a\n        conditional update (insert a new attribute name-value pair if it doesn't\n        exist, or replace an existing name-value pair if it has certain expected\n        attribute values).\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateItemOutput\"\n        \"480\":\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConditionalCheckFailedException\"\n        \"481\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.UpdateItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.UpdateTable:\n    post:\n      operationId: UpdateTable\n      description: \u003cp\u003eUpdates the provisioned throughput for the given table.\u003c/p\u003e\n        \u003cp\u003eSetting the throughput for a table helps you manage performance and\n        is part of the Provisioned Throughput feature of Amazon DynamoDB.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateTableOutput\"\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.UpdateTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://dynamodb.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The DynamoDB multi-region endpoint\n  - url: https://dynamodb.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The DynamoDB multi-region endpoint\n  - url: http://dynamodb.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The DynamoDB endpoint for China (Beijing) and China (Ningxia)\n  - url: https://dynamodb.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The DynamoDB endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchGetItemOutput:\n      type: object\n      properties:\n        Responses:\n          $ref: \"#/components/schemas/BatchGetResponseMap\"\n        UnprocessedKeys:\n          $ref: \"#/components/schemas/BatchGetRequestMap\"\n    BatchGetItemInput:\n      type: object\n      required:\n        - RequestItems\n      properties:\n        RequestItems:\n          $ref: \"#/components/schemas/BatchGetRequestMap\"\n    ProvisionedThroughputExceededException: {}\n    ResourceNotFoundException: {}\n    InternalServerError: {}\n    BatchWriteItemOutput:\n      type: object\n      properties:\n        Responses:\n          $ref: \"#/components/schemas/BatchWriteResponseMap\"\n        UnprocessedItems:\n          $ref: \"#/components/schemas/BatchWriteItemRequestMap\"\n      description: A container for \u003ccode\u003eBatchWriteItem\u003c/code\u003e response\n    BatchWriteItemInput:\n      type: object\n      required:\n        - RequestItems\n      properties:\n        RequestItems:\n          $ref: \"#/components/schemas/BatchWriteItemRequestMap\"\n    LimitExceededException: {}\n    CreateTableOutput:\n      type: object\n      properties:\n        TableDescription:\n          $ref: \"#/components/schemas/TableDescription\"\n    CreateTableInput:\n      type: object\n      required:\n        - TableName\n        - KeySchema\n        - ProvisionedThroughput\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        KeySchema:\n          $ref: \"#/components/schemas/KeySchema\"\n        ProvisionedThroughput:\n          $ref: \"#/components/schemas/ProvisionedThroughput\"\n    ResourceInUseException: {}\n    DeleteItemOutput:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    DeleteItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Key:\n          $ref: \"#/components/schemas/Key\"\n        Expected:\n          $ref: \"#/components/schemas/ExpectedAttributeMap\"\n        ReturnValues:\n          $ref: \"#/components/schemas/ReturnValue\"\n    ConditionalCheckFailedException: {}\n    DeleteTableOutput:\n      type: object\n      properties:\n        TableDescription:\n          $ref: \"#/components/schemas/TableDescription\"\n    DeleteTableInput:\n      type: object\n      required:\n        - TableName\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n    DescribeTableOutput:\n      type: object\n      properties:\n        Table:\n          $ref: \"#/components/schemas/TableDescription\"\n    DescribeTableInput:\n      type: object\n      required:\n        - TableName\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n    GetItemOutput:\n      type: object\n      properties:\n        Item:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    GetItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Key:\n          $ref: \"#/components/schemas/Key\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        ConsistentRead:\n          $ref: \"#/components/schemas/ConsistentRead\"\n    ListTablesOutput:\n      type: object\n      properties:\n        TableNames:\n          $ref: \"#/components/schemas/TableNameList\"\n        LastEvaluatedTableName:\n          $ref: \"#/components/schemas/TableName\"\n    ListTablesInput:\n      type: object\n      properties:\n        ExclusiveStartTableName:\n          $ref: \"#/components/schemas/TableName\"\n        Limit:\n          $ref: \"#/components/schemas/ListTablesInputLimit\"\n    PutItemOutput:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    PutItemInput:\n      type: object\n      required:\n        - TableName\n        - Item\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Item:\n          $ref: \"#/components/schemas/PutItemInputAttributeMap\"\n        Expected:\n          $ref: \"#/components/schemas/ExpectedAttributeMap\"\n        ReturnValues:\n          $ref: \"#/components/schemas/ReturnValue\"\n    QueryOutput:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/ItemList\"\n        Count:\n          $ref: \"#/components/schemas/Integer\"\n        LastEvaluatedKey:\n          $ref: \"#/components/schemas/Key\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    QueryInput:\n      type: object\n      required:\n        - TableName\n        - HashKeyValue\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        Limit:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        ConsistentRead:\n          $ref: \"#/components/schemas/ConsistentRead\"\n        Count:\n          $ref: \"#/components/schemas/BooleanObject\"\n        HashKeyValue:\n          $ref: \"#/components/schemas/AttributeValue\"\n        RangeKeyCondition:\n          $ref: \"#/components/schemas/Condition\"\n        ScanIndexForward:\n          $ref: \"#/components/schemas/BooleanObject\"\n        ExclusiveStartKey:\n          $ref: \"#/components/schemas/Key\"\n    ScanOutput:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/ItemList\"\n        Count:\n          $ref: \"#/components/schemas/Integer\"\n        ScannedCount:\n          $ref: \"#/components/schemas/Integer\"\n        LastEvaluatedKey:\n          $ref: \"#/components/schemas/Key\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    ScanInput:\n      type: object\n      required:\n        - TableName\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        Limit:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        Count:\n          $ref: \"#/components/schemas/BooleanObject\"\n        ScanFilter:\n          $ref: \"#/components/schemas/FilterConditionMap\"\n        ExclusiveStartKey:\n          $ref: \"#/components/schemas/Key\"\n    UpdateItemOutput:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    UpdateItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n        - AttributeUpdates\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Key:\n          $ref: \"#/components/schemas/Key\"\n        AttributeUpdates:\n          $ref: \"#/components/schemas/AttributeUpdates\"\n        Expected:\n          $ref: \"#/components/schemas/ExpectedAttributeMap\"\n        ReturnValues:\n          $ref: \"#/components/schemas/ReturnValue\"\n    UpdateTableOutput:\n      type: object\n      properties:\n        TableDescription:\n          $ref: \"#/components/schemas/TableDescription\"\n    UpdateTableInput:\n      type: object\n      required:\n        - TableName\n        - ProvisionedThroughput\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        ProvisionedThroughput:\n          $ref: \"#/components/schemas/ProvisionedThroughput\"\n    AttributeAction:\n      type: string\n      enum:\n        - ADD\n        - PUT\n        - DELETE\n      description: The type of action for an item update operation. Only use the add action\n        for numbers or sets; the specified value is added to the existing value.\n        If a set of values is specified, the values are added to the existing\n        set. Adds the specified attribute. If the attribute exists, it is\n        replaced by the new value. If no value is specified, this removes the\n        attribute and its value. If a set of values is specified, then the\n        values in the specified set are removed from the old set.\n    AttributeValue:\n      type: object\n      properties:\n        S:\n          $ref: \"#/components/schemas/StringAttributeValue\"\n        N:\n          $ref: \"#/components/schemas/NumberAttributeValue\"\n        B:\n          $ref: \"#/components/schemas/BinaryAttributeValue\"\n        SS:\n          $ref: \"#/components/schemas/StringSetAttributeValue\"\n        NS:\n          $ref: \"#/components/schemas/NumberSetAttributeValue\"\n        BS:\n          $ref: \"#/components/schemas/BinarySetAttributeValue\"\n      description: AttributeValue can be \u003ccode\u003eString\u003c/code\u003e, \u003ccode\u003eNumber\u003c/code\u003e,\n        \u003ccode\u003eBinary\u003c/code\u003e, \u003ccode\u003eStringSet\u003c/code\u003e, \u003ccode\u003eNumberSet\u003c/code\u003e,\n        \u003ccode\u003eBinarySet\u003c/code\u003e.\n    AttributeMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeValue\"\n    AttributeName:\n      type: string\n      maxLength: 65535\n    AttributeNameList:\n      type: array\n      description: List of \u003ccode\u003eAttribute\u003c/code\u003e names. If attribute names are not\n        specified then all attributes will be returned. If some attributes are\n        not found, they will not appear in the result.\n      items:\n        $ref: \"#/components/schemas/AttributeName\"\n      minItems: 1\n    AttributeValueUpdate:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/AttributeValue\"\n        Action:\n          $ref: \"#/components/schemas/AttributeAction\"\n      description: \"Specifies the attribute to update and how to perform the update.\n        Possible values: \u003ccode\u003ePUT\u003c/code\u003e (default), \u003ccode\u003eADD\u003c/code\u003e or\n        \u003ccode\u003eDELETE\u003c/code\u003e.\"\n    AttributeUpdates:\n      type: object\n      description: Map of attribute name to the new value and action for the update. The\n        attribute names specify the attributes to modify, and cannot contain any\n        primary key attributes.\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeValueUpdate\"\n    StringAttributeValue:\n      type: string\n    NumberAttributeValue:\n      type: string\n    BinaryAttributeValue:\n      type: string\n    StringSetAttributeValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StringAttributeValue\"\n    NumberSetAttributeValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/NumberAttributeValue\"\n    BinarySetAttributeValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BinaryAttributeValue\"\n    AttributeValueList:\n      type: array\n      description: A list of attribute values to be used with a comparison operator for a\n        scan or query operation. For comparisons that require more than one\n        value, such as a \u003ccode\u003eBETWEEN\u003c/code\u003e comparison, the AttributeValueList\n        contains two attribute values and the comparison operator.\n      items:\n        $ref: \"#/components/schemas/AttributeValue\"\n    BatchGetRequestMap:\n      type: object\n      description: A map of the table name and corresponding items to get by primary key.\n        While requesting items, each table name can be invoked only once per\n        operation.\n      minProperties: 1\n      maxProperties: 100\n      additionalProperties:\n        $ref: \"#/components/schemas/KeysAndAttributes\"\n    BatchGetResponseMap:\n      type: object\n      description: Table names and the respective item attributes from the tables.\n      additionalProperties:\n        $ref: \"#/components/schemas/BatchResponse\"\n    KeysAndAttributes:\n      type: object\n      required:\n        - Keys\n      properties:\n        Keys:\n          $ref: \"#/components/schemas/KeyList\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        ConsistentRead:\n          $ref: \"#/components/schemas/ConsistentRead\"\n    BatchResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/ItemList\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n      description: The item attributes from a response in a specific table, along with the\n        read resources consumed on the table during the request.\n    ItemList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AttributeMap\"\n    ConsumedCapacityUnits:\n      type: number\n      description: The number of Capacity Units of the provisioned throughput of the table\n        consumed during the operation. \u003ccode\u003eGetItem\u003c/code\u003e,\n        \u003ccode\u003eBatchGetItem\u003c/code\u003e, \u003ccode\u003eBatchWriteItem\u003c/code\u003e,\n        \u003ccode\u003eQuery\u003c/code\u003e, and \u003ccode\u003eScan\u003c/code\u003e operations consume\n        \u003ccode\u003eReadCapacityUnits\u003c/code\u003e, while \u003ccode\u003ePutItem\u003c/code\u003e,\n        \u003ccode\u003eUpdateItem\u003c/code\u003e, and \u003ccode\u003eDeleteItem\u003c/code\u003e operations consume\n        \u003ccode\u003eWriteCapacityUnits\u003c/code\u003e.\n      format: double\n    BatchWriteItemRequestMap:\n      type: object\n      description: \"\u003cp\u003eA map of table name to list-of-write-requests.\u003c/p\u003e \u003cp\u003eKey: The table\n        name corresponding to the list of requests\u003c/p\u003e \u003cp\u003eValue: Essentially a\n        list of request items. Each request item could contain either a\n        \u003ccode\u003ePutRequest\u003c/code\u003e or \u003ccode\u003eDeleteRequest\u003c/code\u003e. Never both.\u003c/p\u003e\"\n      minProperties: 1\n      maxProperties: 25\n      additionalProperties:\n        $ref: \"#/components/schemas/WriteRequests\"\n    BatchWriteResponseMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/BatchWriteResponse\"\n    WriteRequests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/WriteRequest\"\n      minItems: 1\n      maxItems: 25\n    BatchWriteResponse:\n      type: object\n      properties:\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    BooleanObject:\n      type: boolean\n    ComparisonOperator:\n      type: string\n      enum:\n        - EQ\n        - NE\n        - IN\n        - LE\n        - LT\n        - GE\n        - GT\n        - BETWEEN\n        - NOT_NULL\n        - \"NULL\"\n        - CONTAINS\n        - NOT_CONTAINS\n        - BEGINS_WITH\n      description: \"\u003cp\u003eA comparison operator is an enumeration of several operations:\u003c/p\u003e\n        \u003cul\u003e \u003cli\u003e\u003ccode\u003eEQ\u003c/code\u003e for \u003cem\u003eequal\u003c/em\u003e.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eNE\u003c/code\u003e\n        for \u003cem\u003enot equal\u003c/em\u003e.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eIN\u003c/code\u003e checks for exact\n        matches.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eLE\u003c/code\u003e for \u003cem\u003eless than or equal\n        to\u003c/em\u003e.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eLT\u003c/code\u003e for \u003cem\u003eless than\u003c/em\u003e.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eGE\u003c/code\u003e for \u003cem\u003egreater than or equal to\u003c/em\u003e.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eGT\u003c/code\u003e for \u003cem\u003egreater than\u003c/em\u003e.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eBETWEEN\u003c/code\u003e for \u003cem\u003ebetween\u003c/em\u003e.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eNOT_NULL\u003c/code\u003e for \u003cem\u003eexists\u003c/em\u003e.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eNULL\u003c/code\u003e for \u003cem\u003enot exists\u003c/em\u003e.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eCONTAINS\u003c/code\u003e for substring or value in a set.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eNOT_CONTAINS\u003c/code\u003e for absence of a substring or absence of a\n        value in a set.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eBEGINS_WITH\u003c/code\u003e for a substring\n        prefix.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eScan operations support all available comparison\n        operators.\u003c/p\u003e \u003cp\u003eQuery operations support a subset of the available\n        comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.\u003c/p\u003e\"\n    Condition:\n      type: object\n      required:\n        - ComparisonOperator\n      properties:\n        AttributeValueList:\n          $ref: \"#/components/schemas/AttributeValueList\"\n        ComparisonOperator:\n          $ref: \"#/components/schemas/ComparisonOperator\"\n    ConsistentRead:\n      type: boolean\n      description: If set to \u003ccode\u003etrue\u003c/code\u003e, then a consistent read is issued. Otherwise\n        eventually-consistent is used.\n    TableName:\n      type: string\n      pattern: \"[a-zA-Z0-9_.-]+\"\n      minLength: 3\n      maxLength: 255\n    KeySchema:\n      type: object\n      required:\n        - HashKeyElement\n      properties:\n        HashKeyElement:\n          $ref: \"#/components/schemas/KeySchemaElement\"\n        RangeKeyElement:\n          $ref: \"#/components/schemas/KeySchemaElement\"\n      description: \"The KeySchema identifies the primary key as a one attribute primary key\n        (hash) or a composite two attribute (hash-and-range) primary key. Single\n        attribute primary keys have one index value: a\n        \u003ccode\u003eHashKeyElement\u003c/code\u003e. A composite hash-and-range primary key\n        contains two attribute values: a \u003ccode\u003eHashKeyElement\u003c/code\u003e and a\n        \u003ccode\u003eRangeKeyElement\u003c/code\u003e.\"\n    ProvisionedThroughput:\n      type: object\n      required:\n        - ReadCapacityUnits\n        - WriteCapacityUnits\n      properties:\n        ReadCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n        WriteCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n      description: Provisioned throughput reserves the required read and write resources\n        for your table in terms of \u003ccode\u003eReadCapacityUnits\u003c/code\u003e and\n        \u003ccode\u003eWriteCapacityUnits\u003c/code\u003e. Values for provisioned throughput\n        depend upon your expected read/write rates, item size, and consistency.\n        Provide the expected number of read and write operations, assuming an\n        item size of 1k and strictly consistent reads. For 2k item size, double\n        the value. For 3k, triple the value, etc. Eventually-consistent reads\n        consume half the resources of strictly consistent reads.\n    TableDescription:\n      type: object\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        KeySchema:\n          $ref: \"#/components/schemas/KeySchema\"\n        TableStatus:\n          $ref: \"#/components/schemas/TableStatus\"\n        CreationDateTime:\n          $ref: \"#/components/schemas/Date\"\n        ProvisionedThroughput:\n          $ref: \"#/components/schemas/ProvisionedThroughputDescription\"\n        TableSizeBytes:\n          $ref: \"#/components/schemas/Long\"\n        ItemCount:\n          $ref: \"#/components/schemas/Long\"\n    Date:\n      type: string\n      format: date-time\n    Key:\n      type: object\n      required:\n        - HashKeyElement\n      properties:\n        HashKeyElement:\n          $ref: \"#/components/schemas/AttributeValue\"\n        RangeKeyElement:\n          $ref: \"#/components/schemas/AttributeValue\"\n      description: The primary key that uniquely identifies each item in a table. A primary\n        key can be a one attribute (hash) primary key or a two attribute\n        (hash-and-range) primary key.\n    ExpectedAttributeMap:\n      type: object\n      description: Designates an attribute for a conditional modification. The\n        \u003ccode\u003eExpected\u003c/code\u003e parameter allows you to provide an attribute name,\n        and whether or not Amazon DynamoDB should check to see if the attribute\n        has a particular value before modifying it.\n      additionalProperties:\n        $ref: \"#/components/schemas/ExpectedAttributeValue\"\n    ReturnValue:\n      type: string\n      enum:\n        - NONE\n        - ALL_OLD\n        - UPDATED_OLD\n        - ALL_NEW\n        - UPDATED_NEW\n      description: \"\u003cp\u003eUse this parameter if you want to get the attribute name-value pairs\n        before or after they are modified. For \u003ccode\u003ePUT\u003c/code\u003e operations, the\n        possible parameter values are \u003ccode\u003eNONE\u003c/code\u003e (default) or\n        \u003ccode\u003eALL_OLD\u003c/code\u003e. For update operations, the possible parameter\n        values are \u003ccode\u003eNONE\u003c/code\u003e (default) or \u003ccode\u003eALL_OLD\u003c/code\u003e,\n        \u003ccode\u003eUPDATED_OLD\u003c/code\u003e, \u003ccode\u003eALL_NEW\u003c/code\u003e or\n        \u003ccode\u003eUPDATED_NEW\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003ccode\u003eNONE\u003c/code\u003e: Nothing is\n        returned.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eALL_OLD\u003c/code\u003e: Returns the attributes of the\n        item as they were before the operation.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eUPDATED_OLD\u003c/code\u003e: Returns the values of the updated\n        attributes, only, as they were before the operation.\u003c/li\u003e\n        \u003cli\u003e\u003ccode\u003eALL_NEW\u003c/code\u003e: Returns all the attributes and their new\n        values after the operation.\u003c/li\u003e \u003cli\u003e\u003ccode\u003eUPDATED_NEW\u003c/code\u003e: Returns\n        the values of the updated attributes, only, as they are after the\n        operation.\u003c/li\u003e \u003c/ul\u003e\"\n    DeleteRequest:\n      type: object\n      required:\n        - Key\n      properties:\n        Key:\n          $ref: \"#/components/schemas/Key\"\n      description: A container for a Delete BatchWrite request\n    ExpectedAttributeValue:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/AttributeValue\"\n        Exists:\n          $ref: \"#/components/schemas/BooleanObject\"\n      description: Allows you to provide an attribute name, and whether or not Amazon\n        DynamoDB should check to see if the attribute value already exists; or\n        if the attribute value exists and has a particular value before changing\n        it.\n    FilterConditionMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/Condition\"\n    Integer:\n      type: integer\n    KeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Key\"\n      minItems: 1\n      maxItems: 100\n    KeySchemaElement:\n      type: object\n      required:\n        - AttributeName\n        - AttributeType\n      properties:\n        AttributeName:\n          $ref: \"#/components/schemas/KeySchemaAttributeName\"\n        AttributeType:\n          $ref: \"#/components/schemas/ScalarAttributeType\"\n      description: \u003ccode\u003eKeySchemaElement\u003c/code\u003e is the primary key (hash or\n        hash-and-range) structure for the table.\n    KeySchemaAttributeName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ScalarAttributeType:\n      type: string\n      enum:\n        - S\n        - N\n        - B\n    ListTablesInputLimit:\n      type: integer\n      description: A number of maximum table names to return.\n      minimum: 1\n      maximum: 100\n    TableNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TableName\"\n    Long:\n      type: integer\n    PositiveIntegerObject:\n      type: integer\n      minimum: 1\n    PositiveLongObject:\n      type: integer\n      minimum: 1\n    ProvisionedThroughputDescription:\n      type: object\n      properties:\n        LastIncreaseDateTime:\n          $ref: \"#/components/schemas/Date\"\n        LastDecreaseDateTime:\n          $ref: \"#/components/schemas/Date\"\n        NumberOfDecreasesToday:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n        ReadCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n        WriteCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n    PutItemInputAttributeMap:\n      type: object\n      description: A map of the attributes for the item, and must include the primary key\n        values that define the item. Other attribute name-value pairs can be\n        provided for the item.\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeValue\"\n    PutRequest:\n      type: object\n      required:\n        - Item\n      properties:\n        Item:\n          $ref: \"#/components/schemas/PutItemInputAttributeMap\"\n      description: A container for a Put BatchWrite request\n    String:\n      type: string\n    TableStatus:\n      type: string\n      enum:\n        - CREATING\n        - UPDATING\n        - DELETING\n        - ACTIVE\n    WriteRequest:\n      type: object\n      properties:\n        PutRequest:\n          $ref: \"#/components/schemas/PutRequest\"\n        DeleteRequest:\n          $ref: \"#/components/schemas/DeleteRequest\"\n      description: This structure is a Union of PutRequest and DeleteRequest. It can\n        contain exactly one of \u003ccode\u003ePutRequest\u003c/code\u003e or\n        \u003ccode\u003eDeleteRequest\u003c/code\u003e. Never Both. This is enforced in the code.\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CreateTableInput\": parse schema: property \"KeySchema\": parse schema: resolve \"#/components/schemas/KeySchema\": parse schema: property \"HashKeyElement\": parse schema: resolve \"#/components/schemas/KeySchemaElement\": parse schema: property \"AttributeType\": parse schema: resolve \"#/components/schemas/ScalarAttributeType\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}