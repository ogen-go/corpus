{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-dynamodb-2011-12-05-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-dynamodb-2011-12-05-swagger.yaml",
			"byteSize": 57595,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2011-12-05\n  x-release: v4\n  title: Amazon DynamoDB\n  description: <p>Amazon DynamoDB is a fast, highly scalable, highly available,\n    cost-effective non-relational database service.</p> <p>Amazon DynamoDB\n    removes traditional scalability limitations on data storage while\n    maintaining low latency and predictable performance.</p>\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: dynamodb\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dynamodb-2011-12-05.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: false\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/dynamodb/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=DynamoDB_20111205.BatchGetItem:\n    post:\n      operationId: BatchGetItem\n      description: <p>Retrieves the attributes for multiple items from multiple tables\n        using their primary keys.</p> <p>The maximum number of item attributes\n        that can be retrieved for a single operation is 100. Also, the number of\n        items retrieved is constrained by a 1 MB the size limit. If the response\n        size limit is exceeded or a partial result is returned due to an\n        internal processing failure, Amazon DynamoDB returns an\n        <code>UnprocessedKeys</code> value so you can retry the operation\n        starting with the next item to get.</p> <p>Amazon DynamoDB automatically\n        adjusts the number of items returned per page to enforce this limit. For\n        example, even if you ask to retrieve 100 items, but each individual item\n        is 50k in size, the system returns 20 items and an appropriate\n        <code>UnprocessedKeys</code> value so you can get the next page of\n        results. If necessary, your application needs its own logic to assemble\n        the pages of results into one set.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchGetItemOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: RequestItems\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.BatchGetItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchGetItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.BatchWriteItem:\n    post:\n      operationId: BatchWriteItem\n      description: <p>Allows to execute a batch of Put and/or Delete Requests for many\n        tables in a single call. A total of 25 requests are allowed.</p>\n        <p>There are no transaction guarantees provided by this API. It does not\n        allow conditional puts nor does it support return values.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchWriteItemOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.BatchWriteItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchWriteItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.CreateTable:\n    post:\n      operationId: CreateTable\n      description: <p>Adds a new table to your account.</p> <p>The table name must be\n        unique among those associated with the AWS Account issuing the request,\n        and the AWS Region that receives the request (e.g.\n        <code>us-east-1</code>).</p> <p>The <code>CreateTable</code> operation\n        triggers an asynchronous workflow to begin creating the table. Amazon\n        DynamoDB immediately returns the state of the table\n        (<code>CREATING</code>) until the table is in the <code>ACTIVE</code>\n        state. Once the table is in the <code>ACTIVE</code> state, you can\n        perform data plane operations.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateTableOutput\"\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.CreateTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.DeleteItem:\n    post:\n      operationId: DeleteItem\n      description: <p>Deletes a single item in a table by primary key.</p> <p>You can\n        perform a conditional delete operation that deletes the item if it\n        exists, or if it has an expected attribute value.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteItemOutput\"\n        \"480\":\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConditionalCheckFailedException\"\n        \"481\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.DeleteItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.DeleteTable:\n    post:\n      operationId: DeleteTable\n      description: <p>Deletes a table and all of its items.</p> <p>If the table is in the\n        <code>ACTIVE</code> state, you can delete it. If a table is in\n        <code>CREATING</code> or <code>UPDATING</code> states then Amazon\n        DynamoDB returns a <code>ResourceInUseException</code>. If the specified\n        table does not exist, Amazon DynamoDB returns a\n        <code>ResourceNotFoundException</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteTableOutput\"\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.DeleteTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.DescribeTable:\n    post:\n      operationId: DescribeTable\n      description: <p>Retrieves information about the table, including the current status\n        of the table, the primary key schema and when the table was created.</p>\n        <p>If the table does not exist, Amazon DynamoDB returns a\n        <code>ResourceNotFoundException</code>.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeTableOutput\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.DescribeTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.GetItem:\n    post:\n      operationId: GetItem\n      description: <p>Retrieves a set of Attributes for an item that matches the primary\n        key.</p> <p>The <code>GetItem</code> operation provides an\n        eventually-consistent read by default. If eventually-consistent reads\n        are not acceptable for your application, use\n        <code>ConsistentRead</code>. Although this operation might take longer\n        than a standard read, it always returns the last updated value.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetItemOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.GetItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.ListTables:\n    post:\n      operationId: ListTables\n      description: Retrieves a paginated list of table names created by the AWS Account of\n        the caller in the AWS Region (e.g. <code>us-east-1</code>).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTablesOutput\"\n        \"480\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartTableName\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.ListTables\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTablesInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.PutItem:\n    post:\n      operationId: PutItem\n      description: <p>Creates a new item, or replaces an old item with a new item\n        (including all the attributes).</p> <p>If an item already exists in the\n        specified table with the same primary key, the new item completely\n        replaces the existing item. You can perform a conditional put (insert a\n        new item if one with the specified primary key doesn't exist), or\n        replace an existing item if it has certain attribute values.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutItemOutput\"\n        \"480\":\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConditionalCheckFailedException\"\n        \"481\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.PutItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.Query:\n    post:\n      operationId: Query\n      description: <p>Gets the values of one or more items and its attributes by primary\n        key (composite primary key, only).</p> <p>Narrow the scope of the query\n        using comparison operators on the <code>RangeKeyValue</code> of the\n        composite key. Use the <code>ScanIndexForward</code> parameter to get\n        results in forward or reverse order by range key.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QueryOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartKey\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.Query\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/QueryInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.Scan:\n    post:\n      operationId: Scan\n      description: <p>Retrieves one or more items and its attributes by performing a full\n        scan of a table.</p> <p>Provide a <code>ScanFilter</code> to get more\n        specific results.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScanOutput\"\n        \"480\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: Limit\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: ExclusiveStartKey\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.Scan\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ScanInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.UpdateItem:\n    post:\n      operationId: UpdateItem\n      description: <p>Edits an existing item's attributes.</p> <p>You can perform a\n        conditional update (insert a new attribute name-value pair if it doesn't\n        exist, or replace an existing name-value pair if it has certain expected\n        attribute values).</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateItemOutput\"\n        \"480\":\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConditionalCheckFailedException\"\n        \"481\":\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProvisionedThroughputExceededException\"\n        \"482\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.UpdateItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateItemInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=DynamoDB_20111205.UpdateTable:\n    post:\n      operationId: UpdateTable\n      description: <p>Updates the provisioned throughput for the given table.</p>\n        <p>Setting the throughput for a table helps you manage performance and\n        is part of the Provisioned Throughput feature of Amazon DynamoDB.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateTableOutput\"\n        \"480\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20111205.UpdateTable\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateTableInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://dynamodb.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The DynamoDB multi-region endpoint\n  - url: https://dynamodb.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The DynamoDB multi-region endpoint\n  - url: http://dynamodb.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The DynamoDB endpoint for China (Beijing) and China (Ningxia)\n  - url: https://dynamodb.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The DynamoDB endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchGetItemOutput:\n      type: object\n      properties:\n        Responses:\n          $ref: \"#/components/schemas/BatchGetResponseMap\"\n        UnprocessedKeys:\n          $ref: \"#/components/schemas/BatchGetRequestMap\"\n    BatchGetItemInput:\n      type: object\n      required:\n        - RequestItems\n      properties:\n        RequestItems:\n          $ref: \"#/components/schemas/BatchGetRequestMap\"\n    ProvisionedThroughputExceededException: {}\n    ResourceNotFoundException: {}\n    InternalServerError: {}\n    BatchWriteItemOutput:\n      type: object\n      properties:\n        Responses:\n          $ref: \"#/components/schemas/BatchWriteResponseMap\"\n        UnprocessedItems:\n          $ref: \"#/components/schemas/BatchWriteItemRequestMap\"\n      description: A container for <code>BatchWriteItem</code> response\n    BatchWriteItemInput:\n      type: object\n      required:\n        - RequestItems\n      properties:\n        RequestItems:\n          $ref: \"#/components/schemas/BatchWriteItemRequestMap\"\n    LimitExceededException: {}\n    CreateTableOutput:\n      type: object\n      properties:\n        TableDescription:\n          $ref: \"#/components/schemas/TableDescription\"\n    CreateTableInput:\n      type: object\n      required:\n        - TableName\n        - KeySchema\n        - ProvisionedThroughput\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        KeySchema:\n          $ref: \"#/components/schemas/KeySchema\"\n        ProvisionedThroughput:\n          $ref: \"#/components/schemas/ProvisionedThroughput\"\n    ResourceInUseException: {}\n    DeleteItemOutput:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    DeleteItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Key:\n          $ref: \"#/components/schemas/Key\"\n        Expected:\n          $ref: \"#/components/schemas/ExpectedAttributeMap\"\n        ReturnValues:\n          $ref: \"#/components/schemas/ReturnValue\"\n    ConditionalCheckFailedException: {}\n    DeleteTableOutput:\n      type: object\n      properties:\n        TableDescription:\n          $ref: \"#/components/schemas/TableDescription\"\n    DeleteTableInput:\n      type: object\n      required:\n        - TableName\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n    DescribeTableOutput:\n      type: object\n      properties:\n        Table:\n          $ref: \"#/components/schemas/TableDescription\"\n    DescribeTableInput:\n      type: object\n      required:\n        - TableName\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n    GetItemOutput:\n      type: object\n      properties:\n        Item:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    GetItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Key:\n          $ref: \"#/components/schemas/Key\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        ConsistentRead:\n          $ref: \"#/components/schemas/ConsistentRead\"\n    ListTablesOutput:\n      type: object\n      properties:\n        TableNames:\n          $ref: \"#/components/schemas/TableNameList\"\n        LastEvaluatedTableName:\n          $ref: \"#/components/schemas/TableName\"\n    ListTablesInput:\n      type: object\n      properties:\n        ExclusiveStartTableName:\n          $ref: \"#/components/schemas/TableName\"\n        Limit:\n          $ref: \"#/components/schemas/ListTablesInputLimit\"\n    PutItemOutput:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    PutItemInput:\n      type: object\n      required:\n        - TableName\n        - Item\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Item:\n          $ref: \"#/components/schemas/PutItemInputAttributeMap\"\n        Expected:\n          $ref: \"#/components/schemas/ExpectedAttributeMap\"\n        ReturnValues:\n          $ref: \"#/components/schemas/ReturnValue\"\n    QueryOutput:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/ItemList\"\n        Count:\n          $ref: \"#/components/schemas/Integer\"\n        LastEvaluatedKey:\n          $ref: \"#/components/schemas/Key\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    QueryInput:\n      type: object\n      required:\n        - TableName\n        - HashKeyValue\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        Limit:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        ConsistentRead:\n          $ref: \"#/components/schemas/ConsistentRead\"\n        Count:\n          $ref: \"#/components/schemas/BooleanObject\"\n        HashKeyValue:\n          $ref: \"#/components/schemas/AttributeValue\"\n        RangeKeyCondition:\n          $ref: \"#/components/schemas/Condition\"\n        ScanIndexForward:\n          $ref: \"#/components/schemas/BooleanObject\"\n        ExclusiveStartKey:\n          $ref: \"#/components/schemas/Key\"\n    ScanOutput:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/ItemList\"\n        Count:\n          $ref: \"#/components/schemas/Integer\"\n        ScannedCount:\n          $ref: \"#/components/schemas/Integer\"\n        LastEvaluatedKey:\n          $ref: \"#/components/schemas/Key\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    ScanInput:\n      type: object\n      required:\n        - TableName\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        Limit:\n          $ref: \"#/components/schemas/PositiveIntegerObject\"\n        Count:\n          $ref: \"#/components/schemas/BooleanObject\"\n        ScanFilter:\n          $ref: \"#/components/schemas/FilterConditionMap\"\n        ExclusiveStartKey:\n          $ref: \"#/components/schemas/Key\"\n    UpdateItemOutput:\n      type: object\n      properties:\n        Attributes:\n          $ref: \"#/components/schemas/AttributeMap\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    UpdateItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n        - AttributeUpdates\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        Key:\n          $ref: \"#/components/schemas/Key\"\n        AttributeUpdates:\n          $ref: \"#/components/schemas/AttributeUpdates\"\n        Expected:\n          $ref: \"#/components/schemas/ExpectedAttributeMap\"\n        ReturnValues:\n          $ref: \"#/components/schemas/ReturnValue\"\n    UpdateTableOutput:\n      type: object\n      properties:\n        TableDescription:\n          $ref: \"#/components/schemas/TableDescription\"\n    UpdateTableInput:\n      type: object\n      required:\n        - TableName\n        - ProvisionedThroughput\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        ProvisionedThroughput:\n          $ref: \"#/components/schemas/ProvisionedThroughput\"\n    AttributeAction:\n      type: string\n      enum:\n        - ADD\n        - PUT\n        - DELETE\n      description: The type of action for an item update operation. Only use the add action\n        for numbers or sets; the specified value is added to the existing value.\n        If a set of values is specified, the values are added to the existing\n        set. Adds the specified attribute. If the attribute exists, it is\n        replaced by the new value. If no value is specified, this removes the\n        attribute and its value. If a set of values is specified, then the\n        values in the specified set are removed from the old set.\n    AttributeValue:\n      type: object\n      properties:\n        S:\n          $ref: \"#/components/schemas/StringAttributeValue\"\n        N:\n          $ref: \"#/components/schemas/NumberAttributeValue\"\n        B:\n          $ref: \"#/components/schemas/BinaryAttributeValue\"\n        SS:\n          $ref: \"#/components/schemas/StringSetAttributeValue\"\n        NS:\n          $ref: \"#/components/schemas/NumberSetAttributeValue\"\n        BS:\n          $ref: \"#/components/schemas/BinarySetAttributeValue\"\n      description: AttributeValue can be <code>String</code>, <code>Number</code>,\n        <code>Binary</code>, <code>StringSet</code>, <code>NumberSet</code>,\n        <code>BinarySet</code>.\n    AttributeMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeValue\"\n    AttributeName:\n      type: string\n      maxLength: 65535\n    AttributeNameList:\n      type: array\n      description: List of <code>Attribute</code> names. If attribute names are not\n        specified then all attributes will be returned. If some attributes are\n        not found, they will not appear in the result.\n      items:\n        $ref: \"#/components/schemas/AttributeName\"\n      minItems: 1\n    AttributeValueUpdate:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/AttributeValue\"\n        Action:\n          $ref: \"#/components/schemas/AttributeAction\"\n      description: \"Specifies the attribute to update and how to perform the update.\n        Possible values: <code>PUT</code> (default), <code>ADD</code> or\n        <code>DELETE</code>.\"\n    AttributeUpdates:\n      type: object\n      description: Map of attribute name to the new value and action for the update. The\n        attribute names specify the attributes to modify, and cannot contain any\n        primary key attributes.\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeValueUpdate\"\n    StringAttributeValue:\n      type: string\n    NumberAttributeValue:\n      type: string\n    BinaryAttributeValue:\n      type: string\n    StringSetAttributeValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/StringAttributeValue\"\n    NumberSetAttributeValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/NumberAttributeValue\"\n    BinarySetAttributeValue:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BinaryAttributeValue\"\n    AttributeValueList:\n      type: array\n      description: A list of attribute values to be used with a comparison operator for a\n        scan or query operation. For comparisons that require more than one\n        value, such as a <code>BETWEEN</code> comparison, the AttributeValueList\n        contains two attribute values and the comparison operator.\n      items:\n        $ref: \"#/components/schemas/AttributeValue\"\n    BatchGetRequestMap:\n      type: object\n      description: A map of the table name and corresponding items to get by primary key.\n        While requesting items, each table name can be invoked only once per\n        operation.\n      minProperties: 1\n      maxProperties: 100\n      additionalProperties:\n        $ref: \"#/components/schemas/KeysAndAttributes\"\n    BatchGetResponseMap:\n      type: object\n      description: Table names and the respective item attributes from the tables.\n      additionalProperties:\n        $ref: \"#/components/schemas/BatchResponse\"\n    KeysAndAttributes:\n      type: object\n      required:\n        - Keys\n      properties:\n        Keys:\n          $ref: \"#/components/schemas/KeyList\"\n        AttributesToGet:\n          $ref: \"#/components/schemas/AttributeNameList\"\n        ConsistentRead:\n          $ref: \"#/components/schemas/ConsistentRead\"\n    BatchResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/ItemList\"\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n      description: The item attributes from a response in a specific table, along with the\n        read resources consumed on the table during the request.\n    ItemList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AttributeMap\"\n    ConsumedCapacityUnits:\n      type: number\n      description: The number of Capacity Units of the provisioned throughput of the table\n        consumed during the operation. <code>GetItem</code>,\n        <code>BatchGetItem</code>, <code>BatchWriteItem</code>,\n        <code>Query</code>, and <code>Scan</code> operations consume\n        <code>ReadCapacityUnits</code>, while <code>PutItem</code>,\n        <code>UpdateItem</code>, and <code>DeleteItem</code> operations consume\n        <code>WriteCapacityUnits</code>.\n      format: double\n    BatchWriteItemRequestMap:\n      type: object\n      description: \"<p>A map of table name to list-of-write-requests.</p> <p>Key: The table\n        name corresponding to the list of requests</p> <p>Value: Essentially a\n        list of request items. Each request item could contain either a\n        <code>PutRequest</code> or <code>DeleteRequest</code>. Never both.</p>\"\n      minProperties: 1\n      maxProperties: 25\n      additionalProperties:\n        $ref: \"#/components/schemas/WriteRequests\"\n    BatchWriteResponseMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/BatchWriteResponse\"\n    WriteRequests:\n      type: array\n      items:\n        $ref: \"#/components/schemas/WriteRequest\"\n      minItems: 1\n      maxItems: 25\n    BatchWriteResponse:\n      type: object\n      properties:\n        ConsumedCapacityUnits:\n          $ref: \"#/components/schemas/ConsumedCapacityUnits\"\n    BooleanObject:\n      type: boolean\n    ComparisonOperator:\n      type: string\n      enum:\n        - EQ\n        - NE\n        - IN\n        - LE\n        - LT\n        - GE\n        - GT\n        - BETWEEN\n        - NOT_NULL\n        - \"NULL\"\n        - CONTAINS\n        - NOT_CONTAINS\n        - BEGINS_WITH\n      description: \"<p>A comparison operator is an enumeration of several operations:</p>\n        <ul> <li><code>EQ</code> for <em>equal</em>.</li> <li><code>NE</code>\n        for <em>not equal</em>.</li> <li><code>IN</code> checks for exact\n        matches.</li> <li><code>LE</code> for <em>less than or equal\n        to</em>.</li> <li><code>LT</code> for <em>less than</em>.</li>\n        <li><code>GE</code> for <em>greater than or equal to</em>.</li>\n        <li><code>GT</code> for <em>greater than</em>.</li>\n        <li><code>BETWEEN</code> for <em>between</em>.</li>\n        <li><code>NOT_NULL</code> for <em>exists</em>.</li>\n        <li><code>NULL</code> for <em>not exists</em>.</li>\n        <li><code>CONTAINS</code> for substring or value in a set.</li>\n        <li><code>NOT_CONTAINS</code> for absence of a substring or absence of a\n        value in a set.</li> <li><code>BEGINS_WITH</code> for a substring\n        prefix.</li> </ul> <p>Scan operations support all available comparison\n        operators.</p> <p>Query operations support a subset of the available\n        comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.</p>\"\n    Condition:\n      type: object\n      required:\n        - ComparisonOperator\n      properties:\n        AttributeValueList:\n          $ref: \"#/components/schemas/AttributeValueList\"\n        ComparisonOperator:\n          $ref: \"#/components/schemas/ComparisonOperator\"\n    ConsistentRead:\n      type: boolean\n      description: If set to <code>true</code>, then a consistent read is issued. Otherwise\n        eventually-consistent is used.\n    TableName:\n      type: string\n      pattern: \"[a-zA-Z0-9_.-]+\"\n      minLength: 3\n      maxLength: 255\n    KeySchema:\n      type: object\n      required:\n        - HashKeyElement\n      properties:\n        HashKeyElement:\n          $ref: \"#/components/schemas/KeySchemaElement\"\n        RangeKeyElement:\n          $ref: \"#/components/schemas/KeySchemaElement\"\n      description: \"The KeySchema identifies the primary key as a one attribute primary key\n        (hash) or a composite two attribute (hash-and-range) primary key. Single\n        attribute primary keys have one index value: a\n        <code>HashKeyElement</code>. A composite hash-and-range primary key\n        contains two attribute values: a <code>HashKeyElement</code> and a\n        <code>RangeKeyElement</code>.\"\n    ProvisionedThroughput:\n      type: object\n      required:\n        - ReadCapacityUnits\n        - WriteCapacityUnits\n      properties:\n        ReadCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n        WriteCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n      description: Provisioned throughput reserves the required read and write resources\n        for your table in terms of <code>ReadCapacityUnits</code> and\n        <code>WriteCapacityUnits</code>. Values for provisioned throughput\n        depend upon your expected read/write rates, item size, and consistency.\n        Provide the expected number of read and write operations, assuming an\n        item size of 1k and strictly consistent reads. For 2k item size, double\n        the value. For 3k, triple the value, etc. Eventually-consistent reads\n        consume half the resources of strictly consistent reads.\n    TableDescription:\n      type: object\n      properties:\n        TableName:\n          $ref: \"#/components/schemas/TableName\"\n        KeySchema:\n          $ref: \"#/components/schemas/KeySchema\"\n        TableStatus:\n          $ref: \"#/components/schemas/TableStatus\"\n        CreationDateTime:\n          $ref: \"#/components/schemas/Date\"\n        ProvisionedThroughput:\n          $ref: \"#/components/schemas/ProvisionedThroughputDescription\"\n        TableSizeBytes:\n          $ref: \"#/components/schemas/Long\"\n        ItemCount:\n          $ref: \"#/components/schemas/Long\"\n    Date:\n      type: string\n      format: date-time\n    Key:\n      type: object\n      required:\n        - HashKeyElement\n      properties:\n        HashKeyElement:\n          $ref: \"#/components/schemas/AttributeValue\"\n        RangeKeyElement:\n          $ref: \"#/components/schemas/AttributeValue\"\n      description: The primary key that uniquely identifies each item in a table. A primary\n        key can be a one attribute (hash) primary key or a two attribute\n        (hash-and-range) primary key.\n    ExpectedAttributeMap:\n      type: object\n      description: Designates an attribute for a conditional modification. The\n        <code>Expected</code> parameter allows you to provide an attribute name,\n        and whether or not Amazon DynamoDB should check to see if the attribute\n        has a particular value before modifying it.\n      additionalProperties:\n        $ref: \"#/components/schemas/ExpectedAttributeValue\"\n    ReturnValue:\n      type: string\n      enum:\n        - NONE\n        - ALL_OLD\n        - UPDATED_OLD\n        - ALL_NEW\n        - UPDATED_NEW\n      description: \"<p>Use this parameter if you want to get the attribute name-value pairs\n        before or after they are modified. For <code>PUT</code> operations, the\n        possible parameter values are <code>NONE</code> (default) or\n        <code>ALL_OLD</code>. For update operations, the possible parameter\n        values are <code>NONE</code> (default) or <code>ALL_OLD</code>,\n        <code>UPDATED_OLD</code>, <code>ALL_NEW</code> or\n        <code>UPDATED_NEW</code>.</p> <ul> <li><code>NONE</code>: Nothing is\n        returned.</li> <li><code>ALL_OLD</code>: Returns the attributes of the\n        item as they were before the operation.</li>\n        <li><code>UPDATED_OLD</code>: Returns the values of the updated\n        attributes, only, as they were before the operation.</li>\n        <li><code>ALL_NEW</code>: Returns all the attributes and their new\n        values after the operation.</li> <li><code>UPDATED_NEW</code>: Returns\n        the values of the updated attributes, only, as they are after the\n        operation.</li> </ul>\"\n    DeleteRequest:\n      type: object\n      required:\n        - Key\n      properties:\n        Key:\n          $ref: \"#/components/schemas/Key\"\n      description: A container for a Delete BatchWrite request\n    ExpectedAttributeValue:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/AttributeValue\"\n        Exists:\n          $ref: \"#/components/schemas/BooleanObject\"\n      description: Allows you to provide an attribute name, and whether or not Amazon\n        DynamoDB should check to see if the attribute value already exists; or\n        if the attribute value exists and has a particular value before changing\n        it.\n    FilterConditionMap:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/Condition\"\n    Integer:\n      type: integer\n    KeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Key\"\n      minItems: 1\n      maxItems: 100\n    KeySchemaElement:\n      type: object\n      required:\n        - AttributeName\n        - AttributeType\n      properties:\n        AttributeName:\n          $ref: \"#/components/schemas/KeySchemaAttributeName\"\n        AttributeType:\n          $ref: \"#/components/schemas/ScalarAttributeType\"\n      description: <code>KeySchemaElement</code> is the primary key (hash or\n        hash-and-range) structure for the table.\n    KeySchemaAttributeName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ScalarAttributeType:\n      type: string\n      enum:\n        - S\n        - N\n        - B\n    ListTablesInputLimit:\n      type: integer\n      description: A number of maximum table names to return.\n      minimum: 1\n      maximum: 100\n    TableNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TableName\"\n    Long:\n      type: integer\n    PositiveIntegerObject:\n      type: integer\n      minimum: 1\n    PositiveLongObject:\n      type: integer\n      minimum: 1\n    ProvisionedThroughputDescription:\n      type: object\n      properties:\n        LastIncreaseDateTime:\n          $ref: \"#/components/schemas/Date\"\n        LastDecreaseDateTime:\n          $ref: \"#/components/schemas/Date\"\n        NumberOfDecreasesToday:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n        ReadCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n        WriteCapacityUnits:\n          $ref: \"#/components/schemas/PositiveLongObject\"\n    PutItemInputAttributeMap:\n      type: object\n      description: A map of the attributes for the item, and must include the primary key\n        values that define the item. Other attribute name-value pairs can be\n        provided for the item.\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeValue\"\n    PutRequest:\n      type: object\n      required:\n        - Item\n      properties:\n        Item:\n          $ref: \"#/components/schemas/PutItemInputAttributeMap\"\n      description: A container for a Put BatchWrite request\n    String:\n      type: string\n    TableStatus:\n      type: string\n      enum:\n        - CREATING\n        - UPDATING\n        - DELETING\n        - ACTIVE\n    WriteRequest:\n      type: object\n      properties:\n        PutRequest:\n          $ref: \"#/components/schemas/PutRequest\"\n        DeleteRequest:\n          $ref: \"#/components/schemas/DeleteRequest\"\n      description: This structure is a Union of PutRequest and DeleteRequest. It can\n        contain exactly one of <code>PutRequest</code> or\n        <code>DeleteRequest</code>. Never Both. This is enforced in the code.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-dynamodb-2011-12-05-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-dynamodb-2011-12-05-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"DeleteTableOutput\": parse schema: property \"TableDescription\": at 1:10581: parse schema: resolve \"#/components/schemas/TableDescription\": parse schema: property \"KeySchema\": at 1:20864: parse schema: resolve \"#/components/schemas/KeySchema\": parse schema: property \"HashKeyElement\": at 1:13379: parse schema: resolve \"#/components/schemas/KeySchemaElement\": parse schema: property \"AttributeType\": at 1:13872: parse schema: resolve \"#/components/schemas/ScalarAttributeType\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}