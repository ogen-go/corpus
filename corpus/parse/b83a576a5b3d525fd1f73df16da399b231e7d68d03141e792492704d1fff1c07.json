{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "settings.v3.yml",
			"size": 0,
			"path": "reference/settings.v3.yml",
			"byteSize": 90590,
			"content": "openapi: 3.0.3\ninfo:\n  version: 3.0.0\n  title: Settings V3\n  termsOfService: 'http://www.bigcommerce.com/terms'\n  description: |-\n    Manage settings and configuration for BigCommerce hosted stores and headless storefronts.\n\n    ## Authentication\n\n    Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.\n\n    ```http\n    GET /stores/{{STORE_HASH}}/v3/settings/storefront/status\n    host: api.bigcommerce.com\n    Accept: application/json\n    X-Auth-Token: {{ACCESS_TOKEN}}\n    ```\n\n    ### OAuth Scopes\n    |  **UI Name** | **Permission** | **Parameter** |\n    | --- | --- | --- |\n    |  Information \u0026 Settings | modify | `store_v2_information` |\n    |  Information \u0026 Settings | read-only | `store_v2_information_read_only` |\n  contact:\n    name: BigCommerce\n    url: 'https://www.bigcommerce.com'\n    email: support@bigcommerce.com\nservers:\n  - url: 'https://api.bigcommerce.com'\n    description: Production API Gateway\n    variables:\n      store_hash:\n        default: abc123\n        description: Store hash used to identify the store.\nsecurity:\n  - X-Auth-Token: []\ntags:\n  - name: Email Statuses\n  - name: Search Filters\n  - name: Store Locale\n  - name: Storefront Category\n  - name: Storefront Robotstxt\n  - name: Storefront Search\n  - name: Storefront Security\n  - name: Storefront SEO\n  - name: Storefront Status\n  - name: Analytics\n  - name: Catalog\n  - name: Inventory\n  - name: Logo\n  - name: Logo Image\n  - name: Favicon Image\n  - name: Store Profile\n  - name: Storefront Product\npaths:\n  '/stores/{store_hash}/v3/settings/storefront/status':\n    get:\n      summary: Get Status\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontStatus'\n                  meta:\n                    type: object\n                type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      down_for_maintenance_message: Down for maintenance\n                      prelaunch_message: Prelaunch\n                      prelaunch_password: mezt1f77gd\n                    meta: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      description: Get storefront status.\n      tags:\n        - Storefront Status\n    put:\n      summary: Update Status\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontStatus'\n            examples:\n              example-1:\n                value:\n                  down_for_maintenance_message: Down for maintenance\n                  prelaunch_message: Coming soon\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontStatus'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      down_for_maintenance_message: Down for maintenance\n                      prelaunch_message: Coming soon\n                      prelaunch_password: mezt1f77gd\n                    meta: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Storefront Status\n      description: Update storefront status.\n    parameters:\n      - $ref: ./global_refs.yaml#/components/parameters/store_hash\n  '/stores/{store_hash}/v3/settings/storefront/seo':\n    get:\n      summary: Get SEO Settings\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SEOSettings'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      meta_description: Your BigCommerce Store\n                      meta_keywords: ''\n                      page_title: BigCommerce Store\n                      www_redirect: no-www\n                    meta: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      description: Get storefront SEO settings.\n      tags:\n        - Storefront SEO\n    put:\n      summary: Update SEO Settings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SEOSettings'\n            examples:\n              example-1:\n                value:\n                  meta_description: Your BigCommerce Store\n                  meta_keywords: ''\n                  page_title: New BigCommerce Store\n                  www_redirect: no-www\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SEOSettings'\n                  meta:\n                    type: object\n              examples: {}\n        '422':\n          $ref: '#/components/responses/422ErrorResp'\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Storefront SEO\n      description: Update storefront SEO settings.\n    delete:\n      summary: Delete  SEO Settings\n      tags:\n        - Storefront SEO\n      operationId: delete-settings-seo\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'\n        - $ref: '#/components/parameters/KeysToDelete'\n      description: Delete storefront SEO settings.\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/storefront/robotstxt':\n    get:\n      summary: Get Robots.txt Settings\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/RobotsTxtSettings'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      robots_txt_ssl: string\n                    meta: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      description: Get storefront robots.txt.\n      tags:\n        - Storefront Robotstxt\n    put:\n      summary: Update Robots.txt Settings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RobotsTxtSettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/RobotsTxtSettings'\n                  meta:\n                    type: object\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Storefront Robotstxt\n      description: Update storefront robots.txt.\n    delete:\n      summary: Delete Robots.txt Settings\n      tags:\n        - Storefront Robotstxt\n      operationId: delete-settings-robotstxt\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'\n        - $ref: '#/components/parameters/KeysToDelete'\n      description: Delete storefront robots.txt.\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/storefront/search':\n    get:\n      summary: Get Search Settings\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontSearchSettings'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      content_product_sort: relevance\n                      default_product_sort: bestselling\n                      product_filtering_enabled: true\n                      search_suggest: true\n                    meta: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      operationId: ''\n      description: Get storefront search settings.\n      tags:\n        - Storefront Search\n    put:\n      summary: Update Search Settings\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontSearchSettings'\n            examples:\n              example-1:\n                value:\n                  content_product_sort: relevance\n                  default_product_sort: featured\n                  product_filtering_enabled: true\n                  search_suggest: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontSearchSettings'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      content_product_sort: relevance\n                      default_product_sort: featured\n                      product_filtering_enabled: true\n                      search_suggest: true\n                    meta: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Storefront Search\n      description: Update storefront search settings.\n    delete:\n      summary: Delete Search Settings\n      tags:\n        - Storefront Search\n      operationId: delete-settings-storefrontsearch\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - $ref: '#/components/parameters/RequiredChannelIdParamForDelete'\n        - $ref: '#/components/parameters/KeysToDelete'\n      description: Delete storefront search settings.\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/search/filters':\n    get:\n      summary: Get Enabled Filters\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ConfiguredFilters'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      - collapsed_by_default: false\n                        display_name: Size\n                        display_product_count: true\n                        id: U123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: false\n                        display_name: Brand\n                        display_product_count: true\n                        id: Y123=\n                        is_enabled: true\n                        items_to_show: 12\n                        sort_by: alpha\n                        type: brand\n                      - collapsed_by_default: false\n                        display_name: Color\n                        display_product_count: true\n                        id: Q123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: true\n                        display_name: Ships for Free\n                        display_product_count: false\n                        id: Y456=\n                        is_enabled: true\n                        show_free_shipping_filter: true\n                        show_in_stock_filter: true\n                        show_is_featured_filter: true\n                        type: other\n                    meta: {}\n      operationId: getEnabled\n      description: 'Returns a list of enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters. These filters will be used if a store does not have contextual overrides.'\n      tags:\n        - Search Filters\n    put:\n      summary: Update Enabled Filters\n      operationId: updateEnabled\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ConfiguredFilters'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      - collapsed_by_default: false\n                        display_name: Size\n                        display_product_count: true\n                        id: U123==\n                        is_enabled: true\n                        items_to_show: 12\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: false\n                        display_name: Brand\n                        display_product_count: true\n                        id: Y123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: brand\n                      - collapsed_by_default: false\n                        display_name: Color\n                        display_product_count: true\n                        id: Q123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: true\n                        display_name: Ships for Free\n                        display_product_count: true\n                        id: Y456=\n                        is_enabled: true\n                        show_free_shipping_filter: true\n                        show_in_stock_filter: true\n                        show_is_featured_filter: true\n                        type: other\n                    meta: {}\n      description: 'Updates enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfiguredFilters'\n            examples:\n              example-1:\n                value:\n                  - collapsed_by_default: false\n                    display_name: Size\n                    display_product_count: true\n                    id: U123=\n                    is_enabled: true\n                    items_to_show: 12\n                    sort_by: alpha\n                    type: product\n                  - collapsed_by_default: false\n                    display_name: Brand\n                    display_product_count: true\n                    id: Y123=\n                    is_enabled: true\n                    items_to_show: 10\n                    sort_by: alpha\n                    type: brand\n                  - collapsed_by_default: false\n                    display_name: Color\n                    display_product_count: true\n                    id: Q123=\n                    is_enabled: true\n                    items_to_show: 10\n                    sort_by: alpha\n                    type: product\n                  - collapsed_by_default: true\n                    display_name: Ships for Free\n                    display_product_count: true\n                    id: Y456=\n                    is_enabled: true\n                    show_free_shipping_filter: true\n                    show_in_stock_filter: true\n                    show_is_featured_filter: true\n                    type: other\n      tags:\n        - Search Filters\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/search/filters/available':\n    get:\n      summary: Get Available Filters\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/AvailableFilter'\n                  meta:\n                    type: object\n              examples:\n                example-1:\n                  value:\n                    data:\n                      - id: Y2F0Zooo123=\n                        name: Category\n                        product_count: 7\n                        type: category\n                      - id: YnJh123=\n                        name: Brand\n                        product_count: 8\n                        type: brand\n                      - id: cmF0a123\n                        name: Rating\n                        product_count: 1\n                        type: rating\n                      - id: cHJp123=\n                        name: Price\n                        price_range_max: 300.99\n                        price_range_min: 6.75\n                        type: price\n                      - id: U2l123==\n                        name: Size\n                        product_count: 3\n                        type: product\n                      - id: Q29s123=\n                        name: Color\n                        product_count: 2\n                        type: product\n                      - id: Ym9123==\n                        name: Other\n                        type: other\n                    meta: {}\n      operationId: getAvailable\n      description: 'Returns a list of filters available to power [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings).'\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: channel_id\n          description: Narrows the list of available filters based on channel ID. Only products currently assigned to the given Channel will be considered.\n        - schema:\n            type: integer\n          in: query\n          name: category_id\n          description: 'Narrows the list of available filters based on category ID. You can display settings to show products from the provided category, subcategories only, or both the category and its child categories.'\n      tags:\n        - Search Filters\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/search/filters/contexts':\n    get:\n      summary: Get Contextual Filters\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ConfiguredFiltersOverride'\n                  meta:\n                    $ref: '#/components/schemas/MetaPaginationObject'\n      operationId: getContexts\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: channel_id\n          description: Only return contextual overrides related to a particular Channel.\n        - schema:\n            type: integer\n          in: query\n          name: category_id\n          description: Only return contextual overrides related to a particular Category.\n      description: |-\n        Returns a list of contextual filters enabled for a particular channel or category.\n\n        **Usage Notes**\n\n        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.\n\n        The order of the returned filters will match the sort order of the filters on the storefront.\n      tags:\n        - Search Filters\n    put:\n      summary: Upsert Contextual Filters\n      operationId: upsertContexts\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ConfiguredFiltersOverride'\n                  meta:\n                    type: object\n      description: |-\n        Upserts contextual filters for a particular channel or category.\n\n        **Usage Notes**\n\n        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.\n\n        You can change the order of the filters on the live site by changing the order of the filters you send.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConfiguredFiltersOverride'\n      tags:\n        - Search Filters\n      parameters: []\n    delete:\n      summary: Delete Contextual Filters\n      operationId: deleteContexts\n      responses:\n        '200':\n          description: OK\n      description: Deletes contextual filters enabled in a particular context.\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: channel_id\n          description: Delete contextual overrides related to this channel ID\n        - schema:\n            type: integer\n          in: query\n          name: category_id\n          description: Delete contextual overrides related to this category ID\n      tags:\n        - Search Filters\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/email-statuses':\n    get:\n      summary: Get Email Statuses\n      description: Get global transactional email settings or channel specific overrides by `channel_id`.\n      tags:\n        - Email Statuses\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/EnabledTransactionalEmails'\n                  meta:\n                    type: object\n              examples:\n                Example:\n                  value:\n                    data:\n                      abandoned_cart_email: true\n                      account_details_changed_email: true\n                      combined_order_status_email: true\n                      createaccount_email: true\n                      createguestaccount_email: true\n                      giftcertificate_email: true\n                      invoice_email: true\n                      ordermessage_notification: true\n                      return_confirmation_email: true\n                      return_statuschange_email: true\n                      product_review_email: false\n                    meta: {}\n      operationId: get-settings-emails-enabled\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    put:\n      summary: Update Email Statuses\n      description: Update global transactional email settings or create channel specific overrides by `channel_id`.\n      operationId: put-settings-transactional-emails-enabled\n      tags:\n        - Email Statuses\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/EnabledTransactionalEmails'\n                  meta:\n                    type: object\n              examples:\n                Example:\n                  value:\n                    data:\n                      abandoned_cart_email: true\n                      account_details_changed_email: true\n                      combined_order_status_email: true\n                      createaccount_email: true\n                      createguestaccount_email: true\n                      giftcertificate_email: true\n                      invoice_email: true\n                      ordermessage_notification: true\n                      return_confirmation_email: true\n                      return_statuschange_email: true\n                      product_review_email: false\n                    meta: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnabledTransactionalEmails'\n            examples:\n              Example:\n                value:\n                  abandoned_cart_email: true\n                  account_details_changed_email: true\n                  combined_order_status_email: true\n                  createaccount_email: true\n                  createguestaccount_email: true\n                  giftcertificate_email: true\n                  invoice_email: true\n                  ordermessage_notification: true\n                  return_confirmation_email: true\n                  return_statuschange_email: true\n                  product_review_email: false\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    delete:\n      summary: Delete Email Statuses\n      description: |-\n        Delete overrides for email settings. Provide email types that should be deleted. \n\n        If `channel_id` is supplied as a query parameter, email template overrides are deleted per given channel. If no `channel_id` is supplied, global level template are reset to default.\n      operationId: delete-settings-transactional-emails-enabled\n      tags:\n        - Email Statuses\n      responses:\n        '204':\n          description: No Content\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: channel_id\n          description: Delete contextual overrides related to this channel ID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                abandoned_cart_email:\n                  nullable: true\n                account_details_changed_email:\n                  nullable: true\n                combined_order_status_email:\n                  nullable: true\n                create_account_email:\n                  nullable: true\n                create_guest_account_email:\n                  nullable: true\n                gift_certificate_email:\n                  nullable: true\n                invoice_email:\n                  nullable: true\n                order_message_notification_email:\n                  nullable: true\n                return_confirmation_email:\n                  nullable: true\n                return_statuschange_email:\n                  nullable: true\n                product_review_email:\n                  nullable: true\n            examples:\n              Reset gift certificate template:\n                value:\n                  gift_certificate_email: null\n              Reset product review and invoice email templates:\n                value:\n                  invoice_email: null\n                  product_review_email: null\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/store/locale':\n    get:\n      summary: Get Locale Settings\n      description: Returns global locale settings.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Locale'\n                  meta:\n                    type: object\n              examples:\n                Example:\n                  value:\n                    data:\n                      default_shopper_language: en\n                      store_country: United States\n                      shopper_language_selection_method: default_shopper_language\n                    meta: {}\n      tags:\n        - Store Locale\n    put:\n      summary: Update Locale Settings\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Locale'\n                  meta:\n                    type: object\n              examples:\n                Example:\n                  value:\n                    data:\n                      default_shopper_language: en\n                      store_country: United States\n                      shopper_language_selection_method: default_shopper_language\n                    meta: {}\n        '422':\n          description: Provided settings could not be applied for some reason - detailed errors in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Locale'\n            examples:\n              Example:\n                value:\n                  default_shopper_language: en\n                  store_country: United States\n                  shopper_language_selection_method: default_shopper_language\n      tags:\n        - Store Locale\n      description: Updates global locale settings.\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/analytics':\n    get:\n      summary: Get All Web Analytics Providers\n      description: Returns a list of web analytics providers.\n      tags:\n        - Analytics\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/betaAnalyticsProviders'\n                  - $ref: ./global_refs.yaml#/components/schemas/meta_Empty\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/analytics/{id}':\n    get:\n      summary: Get a Web Analytics Provider\n      description: Returns a single web analytics provider data for a default channel.\n      parameters:\n        - name: id\n          in: path\n          description: Web Analytics Provider ID.\n          required: true\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaAnalyticsProvider'\n        '400':\n          description: Bad request. Authentication Required.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse400'\n        '404':\n          description: The requested resource was not found. Please specify valid Web Analytics Provider ID.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse404'\n      tags:\n        - Analytics\n    put:\n      summary: Update a Web Analytics Provider\n      description: Updates a single web analytics provider data for a default channel.\n      parameters:\n        - name: id\n          in: path\n          description: Web Analytics Provider ID.\n          required: true\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaAnalyticsProvider'\n        '400':\n          description: Bad request. Authentication Required.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse400'\n        '404':\n          description: The requested resource was not found. Please specify valid Web Analytics Provider ID.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse404'\n        '409':\n          description: Web Analytics Provider was in conflict with another Web Analytics Provider. This can be caused by duplicated unique values (such as ID).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse409'\n        '422':\n          description: 'Web Analytics Provider data was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse422'\n      tags:\n        - Analytics\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              x-examples:\n                example-1:\n                  id: 2\n                  channel_id: 1\n                  name: Visual Website Optimizer\n                  code: GA-1234567890\n                  enabled: false\n                  data_tag_enabled: false\n                  version: 1\n                  is_oauth_connected: null\n              properties:\n                id:\n                  type: number\n                channel_id:\n                  type: number\n                name:\n                  type: string\n                  minLength: 1\n                code:\n                  type: string\n                  minLength: 1\n                enabled:\n                  type: boolean\n                data_tag_enabled:\n                  type: boolean\n                version:\n                  type: number\n                is_oauth_connected: {}\n    parameters:\n      - schema:\n          type: integer\n        name: id\n        in: path\n        required: true\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/store/profile':\n    get:\n      summary: Get Store Profile Settings\n      description: |-\n        Returns store profile settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular \n         field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/betaStoreProfile'\n                  meta:\n                    type: object\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Store Profile\n    put:\n      summary: Update Store Profile Settings\n      description: |-\n        Updates store profile settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/betaStoreProfile'\n                  meta:\n                    type: object\n        '422':\n          description: Provided settings could not be applied for some reason - detailed errors in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/betaErrorResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/betaStoreProfile'\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Store Profile\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/storefront/category':\n    get:\n      summary: Get Storefront Category Settings\n      description: |-\n        Returns category settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      tags:\n        - Storefront Category\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontCategorySettings'\n                  meta:\n                    type: object\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    put:\n      summary: Update Storefront Category Settings\n      description: |-\n        Updates category settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontCategorySettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontCategorySettings'\n                  meta:\n                    type: object\n        '422':\n          $ref: '#/components/responses/422ErrorResp'\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Storefront Category\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/storefront/security':\n    get:\n      summary: Get Storefront Security Settings\n      description: |-\n        Returns security settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/betaStorefrontSecuritySettings'\n                  meta:\n                    type: object\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Storefront Security\n    put:\n      summary: Update Storefront Security Settings\n      description: |-\n        Updates security settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/betaStorefrontSecuritySettings'\n                  meta:\n                    type: object\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/betaStorefrontSecuritySettings'\n      tags:\n        - Storefront Security\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/logo':\n    get:\n      summary: Get Store Logo Settings\n      description: |-\n        Returns store logo settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      tags:\n        - Logo\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/betaLogoSettings'\n                  meta:\n                    type: object\n      operationId: get-settings-logo\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    put:\n      summary: Update Store Logo Settings\n      operationId: put-settings-logo\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/betaLogoSettings'\n                  meta:\n                    type: object\n      description: |-\n        Updates the logo type and logo text for a textual logo. To upload new images, use the dedicated image POST endpoints.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogoSettingsUpdate'\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Logo\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/logo/image':\n    post:\n      summary: Create Logo Image\n      operationId: post-settings-logo-image\n      responses:\n        '204':\n          description: OK\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                LogoFile:\n                  type: string\n                  format: binary\n      description: |-\n        Uploads an image file to use as the storefront logo. Supported MIME types include GIF, JPEG, and PNG. \n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Logo Image\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/favicon/image':\n    post:\n      summary: Create Favicon Image\n      operationId: post-favicon-logo-image\n      responses:\n        '204':\n          description: OK\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                FaviconFile:\n                  type: string\n                  format: binary\n      description: |-\n        Uploads an image file to use as the storefront favicon. Supported MIME types include GIF, JPEG, and PNG. \n\n          - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Favicon Image\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/catalog':\n    get:\n      summary: Get Catalog Settings\n      description: |-\n        Returns catalog settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      tags:\n        - Catalog\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CatalogSettings'\n                  meta:\n                    type: object\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    put:\n      summary: Update Catalog Settings\n      description: |-\n        Updates catalog settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogSettings'\n        description: ''\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CatalogSettings'\n                  meta:\n                    type: object\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Catalog\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/storefront/product':\n    get:\n      summary: Get Storefront Product Settings\n      tags:\n        - Storefront Product\n      responses:\n        '200':\n          $ref: '#/components/responses/200-storefront-product-settings'\n      operationId: get-settings-storefront-product\n      description: |-\n        Returns product settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    put:\n      summary: Update Storefront Product Settings\n      operationId: put-settings-storefront-product\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontProductSettings'\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      description: |-\n        Updates product settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      tags:\n        - Storefront Product\n      responses:\n        '200':\n          $ref: '#/components/responses/200-storefront-product-settings'\n        '422':\n          $ref: '#/components/responses/422ErrorResp'\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/inventory/notifications':\n    get:\n      summary: Get Inventory Notifications Settings\n      description: |-\n        Returns inventory notification settings. \n        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only.\n      tags:\n        - Inventory\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      data:\n                        $ref: '#/components/schemas/InventoryNotificationsSettings'\n                  - $ref: ./global_refs.yaml#/components/schemas/meta_Empty\n              examples: {}\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n    put:\n      summary: Update Inventory Notifications Settings\n      description: |-\n        Updates inventory notification settings. \n        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only. \n        * Supplying `null` settings values per channel will delete overrides per given channel and values will be inherited from global level. \n        * Partial updates are not supported within the given endpoint. In order to delete overrides per channel, `null` should be supplied for all the settings within the given endpoint.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InventoryNotificationsSettings'\n        description: null set for a particular field removes override on a channel level and means inheritance from a global level\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      tags:\n        - Inventory\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\ncomponents:\n  schemas:\n    AnalyticsProvider:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Web Analytics Provider ID.\n        name:\n          type: string\n          description: Web Analytics Provider title.\n        code:\n          type: string\n          description: Web Analytics Provider code.\n        enabled:\n          type: boolean\n          description: Flag indicates if Web Analytics Provider is enabled or not.\n      x-internal: false\n    AnalyticsProviders:\n      type: array\n      items:\n        $ref: '#/components/schemas/AnalyticsProvider'\n      x-internal: false\n    RobotsTxtSettings:\n      type: object\n      properties:\n        robots_txt_ssl:\n          type: string\n      x-internal: false\n    SEOSettings:\n      type: object\n      properties:\n        page_title:\n          type: string\n        meta_description:\n          type: string\n        www_redirect:\n          type: string\n          enum:\n            - www\n            - no-www\n            - none\n        meta_keywords:\n          type: string\n      x-internal: false\n    StorefrontSearchSettings:\n      type: object\n      properties:\n        default_product_sort:\n          $ref: '#/components/schemas/ProductSortEnumValues'\n        content_product_sort:\n          $ref: '#/components/schemas/ContentSortEnumValues'\n        product_filtering_enabled:\n          type: boolean\n          description: Controls whether Product Filtering feature is active on the storefront. Only supports manipulation on a global level.\n        search_suggest:\n          type: boolean\n      title: ''\n      x-internal: false\n    StoreProfile:\n      description: 'The basic profile settings for a store, used to give the shopper information about the business from which they are purchasing.'\n      type: object\n      properties:\n        store_phone:\n          type: string\n        store_name:\n          type: string\n        store_address:\n          type: string\n      x-internal: false\n    Locale:\n      description: 'The basic locale settings for a store, used to give shopper information about languages, countries, etc.'\n      type: object\n      properties:\n        default_shopper_language:\n          type: string\n          default: en\n          example: 'en, en-us'\n        store_country:\n          type: string\n          default: United States\n        shopper_language_selection_method:\n          type: string\n          enum:\n            - browser\n            - default_shopper_language\n          example: default_shopper_language\n          default: default_shopper_language\n          description: |-\n            Determines whether to display the storefront content in the shopper's browser language or the shopper's selected default language.\n\n            Available values:\n            * `browser` - language updates automatically based on the shopper browser language. Multiple languages are supported.\n            * `default_shopper_language` - content is displayed in a single language based on the set `default_shopper_language`. Only the selected language is supported.\n      required:\n        - default_shopper_language\n      x-internal: false\n    StorefrontStatus:\n      title: ''\n      type: object\n      properties:\n        down_for_maintenance_message:\n          type: string\n        prelaunch_message:\n          type: string\n        prelaunch_password:\n          type: string\n          description: A read-only value representing the auto-generated storefront password.\n      x-internal: false\n    ProductSortEnumValues:\n      type: string\n      title: ProductSortEnumValues\n      default: bestselling\n      enum:\n        - featured\n        - bestselling\n        - newest\n        - atoz\n        - ztoa\n        - highestprice\n        - lowestprice\n        - bestreviewed\n      description: The available sorts for PLP pages.\n      x-internal: false\n    StorefrontSecuritySettings:\n      title: StorefrontSecuritySettings\n      type: object\n      properties:\n        sitewide_https_enabled:\n          type: boolean\n        csp_header:\n          type: string\n        hsts:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            max_age_months:\n              $ref: '#/components/schemas/HSTSMaxAgeEnumValues'\n            includeSubDomains:\n              type: boolean\n      x-internal: false\n    HSTSMaxAgeEnumValues:\n      type: integer\n      title: HSTSMaxAgeEnumValues\n      enum:\n        - 0\n        - 3\n        - 6\n        - 12\n      minimum: 0\n      maximum: 12\n      multipleOf: 3\n      x-internal: false\n    MetaPaginationObject:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            total:\n              type: integer\n              example: 246\n              minimum: 0\n            count:\n              type: integer\n              example: 5\n              minimum: 0\n            per_page:\n              type: integer\n              example: 5\n              minimum: 0\n            current_page:\n              type: integer\n              example: 1\n              minimum: 1\n            total_pages:\n              type: integer\n              example: 50\n              minimum: 0\n            links:\n              type: object\n              properties:\n                next:\n                  type: string\n                  example: '?limit=5\u0026page=2'\n                current:\n                  type: string\n                  example: '?limit=5\u0026page=1'\n      x-internal: false\n    AvailableFilter:\n      title: AvailableFilter\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n          enum:\n            - price\n            - category\n            - brand\n            - rating\n            - other\n            - product\n        name:\n          type: string\n      x-internal: false\n    EnabledFilter:\n      title: EnabledFilter\n      oneOf:\n        - $ref: '#/components/schemas/EnabledProductFilter'\n        - $ref: '#/components/schemas/EnabledPriceFilter'\n        - $ref: '#/components/schemas/EnabledCategoryFilter'\n        - $ref: '#/components/schemas/EnabledBrandFilter'\n        - $ref: '#/components/schemas/EnabledRatingFilter'\n        - $ref: '#/components/schemas/EnabledMiscFilter'\n      x-internal: false\n    EnabledProductFilter:\n      title: EnabledProductFilter\n      type: object\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - product\n        display_product_count:\n          type: boolean\n        collapsed_by_default:\n          type: boolean\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        sort_by:\n          type: string\n          enum:\n            - alpha\n            - option_values\n            - item_count\n      description: A filter that uses product options and custom field data.\n      x-internal: false\n    EnabledPriceFilter:\n      title: EnabledPriceFilter\n      type: object\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - price\n        collapsed_by_default:\n          type: boolean\n      description: 'A filter based on the product’s price, shown as a price range on the storefront.'\n      x-internal: false\n    EnabledCategoryFilter:\n      title: EnabledCategoryFilter\n      type: object\n      description: A storefront filter for product category\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - category\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        collapsed_by_default:\n          type: boolean\n        display_product_count:\n          type: boolean\n      x-internal: false\n    EnabledRatingFilter:\n      title: EnabledRatingFilter\n      type: object\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - rating\n        collapsed_by_default:\n          type: boolean\n      description: A filter based on product review ratings.\n      x-internal: false\n    EnabledBrandFilter:\n      title: EnabledBrandFilter\n      type: object\n      description: A storefront filter for product brand\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - brand\n        sort_by:\n          type: string\n          enum:\n            - alpha\n            - item_count\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        collapsed_by_default:\n          type: boolean\n        display_product_count:\n          type: boolean\n      x-internal: false\n    EnabledFilters:\n      title: EnabledFilters\n      type: array\n      items:\n        $ref: '#/components/schemas/EnabledFilter'\n      x-internal: false\n    EnabledFiltersOverride:\n      title: EnabledFiltersOverride\n      type: object\n      properties:\n        scope:\n          $ref: '#/components/schemas/SearchFilterOverrideScopeIdentifier'\n        data:\n          $ref: '#/components/schemas/EnabledFilters'\n      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'\n      x-internal: false\n    SearchFilterOverrideScopeIdentifier:\n      title: ScopeIdentifier\n      type: object\n      properties:\n        channel_id:\n          type: integer\n        category_id:\n          type: integer\n      x-internal: false\n    EnabledTransactionalEmails:\n      title: ''\n      type: object\n      properties:\n        abandoned_cart_email:\n          type: boolean\n        account_details_changed_email:\n          type: boolean\n        combined_order_status_email:\n          type: boolean\n        createaccount_email:\n          type: boolean\n        createguestaccount_email:\n          type: boolean\n        giftcertificate_email:\n          type: boolean\n        invoice_email:\n          type: boolean\n        ordermessage_notification:\n          type: boolean\n        return_confirmation_email:\n          type: boolean\n        return_statuschange_email:\n          type: boolean\n        product_review_email:\n          type: boolean\n      x-internal: false\n    Error:\n      type: object\n      description: A standard error object.\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n      x-tags:\n        - Common\n      x-internal: false\n    ErrorResponse400:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse404:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse409:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse422:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseError'\n        - type: object\n          properties:\n            errors:\n              $ref: '#/components/schemas/DetailedErrors'\n      x-internal: false\n    BaseError:\n      type: object\n      description: |\n        Error payload for the BigCommerce API.\n      properties:\n        status:\n          description: |\n            The HTTP status code.\n          type: integer\n        title:\n          description: |\n            The error title describing the particular error.\n          type: string\n        type:\n          type: string\n        instance:\n          type: string\n      x-internal: false\n    DetailedErrors:\n      type: object\n      additionalProperties:\n        type: string\n      x-internal: false\n    EnabledMiscFilter:\n      title: EnabledMiscFilter\n      type: object\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - other\n        show_free_shipping_filter:\n          type: boolean\n        show_is_featured_filter:\n          type: boolean\n        show_in_stock_filter:\n          type: boolean\n        show_product_count:\n          type: boolean\n        collapsed_by_default:\n          type: boolean\n      description: Miscellaneous Filters which appear as a group.\n      x-internal: false\n    AvailablePriceFilter:\n      title: AvailablePriceFilter\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - price\n        name:\n          type: string\n        price_range_min:\n          type: number\n        price_range_max:\n          type: number\n      description: ''\n      x-internal: false\n    AvailableOtherFilter:\n      title: AvailableOtherFilter\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - other\n        name:\n          type: string\n      x-internal: false\n    SearchFilterOverrideContextIdentifier:\n      title: ContextIdentifier\n      type: object\n      properties:\n        channel_id:\n          type: integer\n        category_id:\n          type: integer\n      x-internal: false\n    LogoSettings:\n      type: object\n      properties:\n        logo_image_url:\n          type: string\n        logo_text:\n          type: string\n        type:\n          type: string\n          enum:\n            - image\n            - text\n        favicon_url:\n          type: string\n      x-internal: false\n    ContentSortEnumValues:\n      type: string\n      title: ContentSortEnumValues\n      default: relevance\n      enum:\n        - relevance\n        - atoz\n        - ztoa\n      x-internal: false\n    ConfiguredFilter:\n      title: ConfiguredFilter\n      oneOf:\n        - $ref: '#/components/schemas/EnabledProductFilter'\n        - $ref: '#/components/schemas/EnabledPriceFilter'\n        - $ref: '#/components/schemas/EnabledCategoryFilter'\n        - $ref: '#/components/schemas/EnabledBrandFilter'\n        - $ref: '#/components/schemas/EnabledRatingFilter'\n        - $ref: '#/components/schemas/EnabledMiscFilter'\n      x-internal: false\n    ConfiguredFilters:\n      title: ConfiguredFilters\n      type: array\n      items:\n        $ref: '#/components/schemas/ConfiguredFilter'\n      x-internal: false\n    ConfiguredFiltersOverride:\n      title: ConfiguredFiltersOverride\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ConfiguredFilters'\n        context:\n          $ref: '#/components/schemas/SearchFilterOverrideContextIdentifier'\n      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'\n      x-internal: false\n    betaAnalyticsProvider:\n      description: ''\n      type: object\n      x-examples: {}\n      properties:\n        id:\n          type: integer\n          description: Web Analytics Provider ID.\n          example: 1\n        channel_id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          minLength: 1\n          description: Web Analytics Provider title\n          example: Google Analytics\n        code:\n          type: string\n          description: Web Analytics Provider code.\n          example: GA-1234567890\n        enabled:\n          type: boolean\n          description: Flag indicates if Web Analytics Provider is enabled or not.\n        data_tag_enabled:\n          type: boolean\n        version:\n          type: number\n        is_oauth_connected: {}\n    betaAnalyticsProviders:\n      type: array\n      items:\n        $ref: '#/components/schemas/betaAnalyticsProvider'\n      x-tags:\n        - Models\n    betaRobotsTxtSettings:\n      type: object\n      properties:\n        robots_txt_ssl:\n          type: string\n      x-tags:\n        - Models\n    betaSEOSettings:\n      type: object\n      properties:\n        page_title:\n          type: string\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        www_redirect:\n          type: string\n          enum:\n            - www\n            - no-www\n            - none\n      x-tags:\n        - Models\n    StorefrontCategorySettings:\n      type: object\n      properties:\n        listing_mode:\n          $ref: '#/components/schemas/CategoryListingModeEnumValues'\n        default_product_sort:\n          $ref: '#/components/schemas/betaProductSortEnumValues'\n        category_tree_depth:\n          type: integer\n          minimum: 1\n          maximum: 8\n      x-tags:\n        - Models\n    betaStorefrontSearchSettings:\n      type: object\n      properties:\n        default_product_sort:\n          $ref: '#/components/schemas/betaProductSortEnumValues'\n        content_product_sort:\n          $ref: '#/components/schemas/betaContentSortEnumValues'\n        search_suggest:\n          type: boolean\n        product_filtering_enabled:\n          type: boolean\n          description: Controls whether or not Product Filtering feature is active on the storefront. Only supports manipulation on a global level.\n      x-tags:\n        - Models\n    betaStoreProfile:\n      description: 'The basic profile settings for a store, used to give the shopper information about the business from which they are purchasing.'\n      type: object\n      properties:\n        store_phone:\n          type: string\n        store_name:\n          type: string\n        store_address:\n          type: string\n        store_email:\n          type: string\n        store_address_type:\n          $ref: '#/components/schemas/AddressTypeEnumValues'\n        store_country:\n          type: string\n          description: Only supports manipulation on a global level.\n      x-tags:\n        - Models\n    betaStorefrontStatus:\n      title: ''\n      type: object\n      properties:\n        down_for_maintenance_message:\n          type: string\n        prelaunch_message:\n          type: string\n        prelaunch_password:\n          type: string\n      x-tags:\n        - Models\n    betaProductSortEnumValues:\n      type: string\n      title: ProductSortEnumValues\n      default: bestselling\n      enum:\n        - featured\n        - bestselling\n        - newest\n        - atoz\n        - ztoa\n        - highestprice\n        - lowestprice\n        - bestreviewed\n      description: The available sorts for PLP pages\n      x-tags:\n        - Models\n    betaStorefrontSecuritySettings:\n      title: StorefrontSecuritySettings\n      type: object\n      properties:\n        sitewide_https_enabled:\n          type: boolean\n        csp_header:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            header_value:\n              type: string\n        x_frame_options_header:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            setting:\n              type: string\n              enum:\n                - deny\n                - same_origin\n                - allow_from_url\n            allowed_url:\n              type: string\n        hsts:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            max_age:\n              $ref: '#/components/schemas/betaHSTSMaxAgeEnumValues'\n            include_subdomains:\n              type: boolean\n            include_preload:\n              type: boolean\n      x-tags:\n        - Models\n    betaHSTSMaxAgeEnumValues:\n      type: string\n      title: HSTSMaxAgeEnumValues\n      enum:\n        - zero_seconds\n        - five_minutes\n        - one_year\n      x-tags:\n        - Models\n    betaMetaPaginationObject:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            total:\n              type: integer\n              example: 246\n              minimum: 0\n            count:\n              type: integer\n              example: 5\n              minimum: 0\n            per_page:\n              type: integer\n              example: 5\n              minimum: 0\n            current_page:\n              type: integer\n              example: 1\n              minimum: 1\n            total_pages:\n              type: integer\n              example: 50\n              minimum: 0\n            links:\n              type: object\n              properties:\n                next:\n                  type: string\n                  example: '?limit=5\u0026page=2'\n                current:\n                  type: string\n                  example: '?limit=5\u0026page=1'\n      x-tags:\n        - Models\n    betaAvailableFilter:\n      title: AvailableFilter\n      oneOf:\n        - $ref: '#/components/schemas/AvailableNormalFilter'\n        - $ref: '#/components/schemas/betaAvailablePriceFilter'\n        - $ref: '#/components/schemas/betaAvailableOtherFilter'\n      x-tags:\n        - Models\n    AvailableNormalFilter:\n      title: AvailableNormalFilter\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - category\n            - brand\n            - rating\n            - product\n        name:\n          type: string\n        product_count:\n          type: integer\n      x-tags:\n        - Models\n    betaAvailablePriceFilter:\n      title: AvailablePriceFilter\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - price\n        name:\n          type: string\n        price_range_min:\n          type: number\n        price_range_max:\n          type: number\n      x-tags:\n        - Models\n    betaAvailableOtherFilter:\n      title: AvailableOtherFilter\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum:\n            - other\n        name:\n          type: string\n      x-tags:\n        - Models\n    betaConfiguredFilter:\n      title: ConfiguredFilter\n      oneOf:\n        - $ref: '#/components/schemas/betaEnabledProductFilter'\n        - $ref: '#/components/schemas/betaEnabledPriceFilter'\n        - $ref: '#/components/schemas/betaEnabledCategoryFilter'\n        - $ref: '#/components/schemas/betaEnabledBrandFilter'\n        - $ref: '#/components/schemas/betaEnabledRatingFilter'\n        - $ref: '#/components/schemas/betaEnabledMiscFilter'\n      x-tags:\n        - Models\n    betaEnabledProductFilter:\n      title: EnabledProductFilter\n      type: object\n      description: A filter that uses product options and custom field data.\n      properties:\n        id:\n          type: string\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - product\n        display_product_count:\n          type: boolean\n        collapsed_by_default:\n          type: boolean\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        sort_by:\n          type: string\n          enum:\n            - alpha\n            - option_values\n            - item_count\n        is_enabled:\n          type: boolean\n      x-tags:\n        - Models\n    betaEnabledPriceFilter:\n      title: EnabledPriceFilter\n      type: object\n      properties:\n        id:\n          type: string\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - price\n        collapsed_by_default:\n          type: boolean\n        is_enabled:\n          type: boolean\n      description: 'A filter based on the product''s price, shown as a price range on the storefront.'\n      x-tags:\n        - Models\n    betaEnabledCategoryFilter:\n      title: EnabledCategoryFilter\n      type: object\n      description: A storefront filter for product category\n      properties:\n        id:\n          type: string\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - category\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        collapsed_by_default:\n          type: boolean\n        display_product_count:\n          type: boolean\n        is_enabled:\n          type: boolean\n      x-tags:\n        - Models\n    betaEnabledRatingFilter:\n      title: EnabledRatingFilter\n      type: object\n      properties:\n        id:\n          type: string\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - rating\n        collapsed_by_default:\n          type: boolean\n        is_enabled:\n          type: boolean\n      description: A filter based on product review ratings.\n      x-tags:\n        - Models\n    betaEnabledBrandFilter:\n      title: EnabledBrandFilter\n      type: object\n      description: A storefront filter for product brand\n      properties:\n        id:\n          type: string\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - brand\n        sort_by:\n          type: string\n          enum:\n            - alpha\n            - item_count\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        collapsed_by_default:\n          type: boolean\n        display_product_count:\n          type: boolean\n        is_enabled:\n          type: boolean\n      x-tags:\n        - Models\n    betaConfiguredFilters:\n      title: ConfiguredFilters\n      type: array\n      items:\n        $ref: '#/components/schemas/betaConfiguredFilter'\n      x-tags:\n        - Models\n    betaConfiguredFiltersOverride:\n      title: ConfiguredFiltersOverride\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/betaConfiguredFilters'\n        context:\n          $ref: '#/components/schemas/betaSearchFilterOverrideContextIdentifier'\n      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'\n      x-tags:\n        - Models\n    betaEnabledTransactionalEmails:\n      title: ''\n      type: object\n      properties:\n        abandoned_cart_email:\n          type: boolean\n        account_details_changed_email:\n          type: boolean\n        combined_order_status_email:\n          type: boolean\n        create_account_email:\n          type: boolean\n        create_guest_account_email:\n          type: boolean\n        gift_certificate_email:\n          type: boolean\n        invoice_email:\n          type: boolean\n        order_message_notification_email:\n          type: boolean\n        return_confirmation_email:\n          type: boolean\n        return_statuschange_email:\n          type: boolean\n        product_review_email:\n          type: boolean\n      x-tags:\n        - Models\n    betaError:\n      type: object\n      description: A standard error object.\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n      x-tags:\n        - Models\n    betaErrorResponse400:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/betaError'\n      x-tags:\n        - Models\n    betaErrorResponse404:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/betaError'\n      x-tags:\n        - Models\n    betaErrorResponse409:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/betaError'\n      x-tags:\n        - Models\n    betaErrorResponse422:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/betaError'\n      x-tags:\n        - Models\n    betaErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/betaBaseError'\n        - type: object\n          properties:\n            errors:\n              $ref: '#/components/schemas/betaDetailedErrors'\n      x-tags:\n        - Models\n    betaBaseError:\n      type: object\n      description: |\n        Error payload for the BigCommerce API.\n      properties:\n        status:\n          description: |\n            The HTTP status code.\n          type: integer\n        title:\n          description: |\n            The error title describing the particular error.\n          type: string\n        type:\n          type: string\n        instance:\n          type: string\n      x-tags:\n        - Models\n    betaDetailedErrors:\n      description: ''\n      type: object\n      properties:\n        status:\n          type: number\n        title:\n          type: string\n          minLength: 1\n        type:\n          type: string\n          minLength: 1\n        errors:\n          type: object\n          properties:\n            '':\n              type: string\n              minLength: 1\n          required:\n            - ''\n      required:\n        - status\n        - title\n        - type\n        - errors\n      x-examples:\n        example-1:\n          status: 422\n          title: JSON data is missing or invalid\n          type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n          errors:\n            '': 'Incorrect value [], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'\n    betaEnabledMiscFilter:\n      title: EnabledMiscFilter\n      type: object\n      properties:\n        id:\n          type: integer\n        display_name:\n          type: string\n        type:\n          type: string\n          enum:\n            - other\n        show_free_shipping_filter:\n          type: boolean\n        show_is_featured_filter:\n          type: boolean\n        show_in_stock_filter:\n          type: boolean\n        display_product_count:\n          type: boolean\n        collapsed_by_default:\n          type: boolean\n        is_enabled:\n          type: boolean\n      description: Miscellaneous Filters which appear as a group.\n      x-tags:\n        - Models\n    betaSearchFilterOverrideContextIdentifier:\n      title: ContextIdentifier\n      type: object\n      properties:\n        channel_id:\n          type: integer\n        category_id:\n          type: integer\n      x-tags:\n        - Models\n    betaLogoSettings:\n      type: object\n      properties:\n        logo_image_url:\n          type: string\n        logo_text:\n          type: string\n        type:\n          type: string\n          enum:\n            - image\n            - text\n        favicon_url:\n          type: string\n      x-tags:\n        - Models\n    LogoSettingsUpdate:\n      type: object\n      properties:\n        logo_text:\n          type: string\n        type:\n          type: string\n          enum:\n            - image\n            - text\n      x-tags:\n        - Models\n    betaContentSortEnumValues:\n      type: string\n      title: ContentSortEnumValues\n      default: relevance\n      enum:\n        - relevance\n        - atoz\n        - ztoa\n      x-tags:\n        - Models\n    AddressTypeEnumValues:\n      type: string\n      title: AddressTypeEnumValues\n      default: Home Office\n      enum:\n        - Home Office\n        - Commercial Office\n        - Retail\n        - Warehouse\n      description: Only supports manipulation on a global level.\n      x-tags:\n        - Models\n    CatalogSettings:\n      type: object\n      x-tags:\n        - Models\n      properties:\n        auto_approve_reviews:\n          type: boolean\n        enable_product_comparisons:\n          type: boolean\n    InventoryNotificationsSettings:\n      type: object\n      properties:\n        low_stock_notification_addresses:\n          type: array\n          items:\n            type: string\n        out_of_stock_notification_addresses:\n          type: array\n          items:\n            type: string\n      x-tags:\n        - Models\n    StorefrontProductSettings:\n      title: StorefrontProductSettings\n      type: object\n      x-tags:\n        - Models\n      properties:\n        show_product_price:\n          type: boolean\n        show_product_sku:\n          type: boolean\n        show_product_weight:\n          type: boolean\n        show_product_brand:\n          type: boolean\n        show_product_shipping:\n          type: boolean\n        show_product_rating:\n          type: boolean\n        show_add_to_cart_link:\n          type: boolean\n        show_breadcrumbs_product_pages:\n          type: string\n          enum:\n            - show_one\n            - show_none\n        show_add_to_cart_qty_box:\n          type: boolean\n        show_add_to_wishlist:\n          type: boolean\n        default_preorder_message:\n          type: string\n          example: preorder message\n    CategoryListingModeEnumValues:\n      type: string\n      title: CategoryListingModeEnumValues\n      enum:\n        - current_category_only\n        - child_categories\n        - child_categories_if_category_empty\n      x-tags:\n        - Models\n  parameters:\n    ChannelIdParam:\n      in: query\n      name: channel_id\n      schema:\n        type: integer\n      description: 'Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only.'\n    RequiredChannelIdParamForDelete:\n      in: query\n      name: channel_id\n      schema:\n        type: integer\n      description: 'Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.'\n      required: true\n    KeysToDelete:\n      in: query\n      name: keys\n      schema:\n        type: array\n        items:\n          type: string\n      required: true\n      description: Array of strings (CSV) representing which configuration keys should be cleared (un-overridden) for the Channel.\n    store_hash:\n      name: store_hash\n      in: path\n      required: true\n      schema:\n        type: string\n        example: 29iql3rwa6\n      description: Hash of your store\n  securitySchemes:\n    X-Auth-Token:\n      name: X-Auth-Token\n      type: apiKey\n      in: header\n      description: |-\n        Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` in the request header.\n\n        ```http\n        GET /stores/{{STORE_HASH}}/v3/settings/storefront/status\n        host: api.bigcommerce.com\n        Accept: application/json\n        X-Auth-Token: {{ACCESS_TOKEN}}\n        ```\n\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Information \u0026 Settings | modify | `store_v2_information` |\n        |  Information \u0026 Settings | read-only | `store_v2_information_read_only` |\n  responses:\n    422ErrorResp:\n      description: |\n        `422 Unprocessable Entity` Provided settings could not be applied for some reason - detailed errors in the response.\n      content:\n        application/json:\n          schema:\n            description: ''\n            type: object\n            x-examples:\n              example-1:\n                status: 422\n                title: JSON data is missing or invalid\n                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n                errors:\n                  '': 'Incorrect value [], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'\n            properties:\n              status:\n                type: number\n                example: 422\n              title:\n                type: string\n                minLength: 1\n                example: JSON data is missing or invalid\n              type:\n                type: string\n                minLength: 1\n                example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n              errors:\n                type: object\n                properties:\n                  '':\n                    type: string\n                    minLength: 1\n                    example: 'Incorrect value [current__only], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [besling], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'\n          examples: {}\n    200-storefront-product-settings:\n      description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/StorefrontProductSettings'\n              meta:\n                type: object\n          examples: {}\nx-stoplight:\n  docs:\n    includeDownloadLink: true\n    showModels: false\n"
		}
	},
	"Error": "parse: parse spec: /stores/{store_hash}/v3/settings/storefront/status: parameters: parse parameter \"\": resolve \"./global_refs.yaml#/components/parameters/store_hash\" reference: invalid parameter reference: \"./global_refs.yaml#/components/parameters/store_hash\""
}