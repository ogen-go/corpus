{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PatrikTrestik/diasend-upload"
		},
		"file": {
			"name": "DiasendAPI-1.0.0.yaml",
			"size": 0,
			"path": "doc/diasend-api/DiasendAPI-1.0.0.yaml",
			"byteSize": 4147,
			"content": "openapi: 3.0.0\n# Added by API Auto Mocking Plugin\nservers:\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/PatrikTrestik/DiasendAPI/1.0.0\n  - description: Diasend API\n    url: https://api.diasend.com/1/\ninfo:\n  version: \"1.0.0\"\n  title: Diasend API documentation\n  description: \u003e-\n    This is documentation of known API endpoints, not official documentation provided by API owner.\nsecurity:\n  - password:\n      - PATIENT DIASEND_MOBILE_DEVICE_DATA_RW\npaths:\n  /patient/data#:\n    get:\n      summary: Read patient data summary\n      description: \u003e-\n        Patient data. List of devices.\n      operationId: GetPatientSummary\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PatientData'\n  /patient/data:\n    get:\n      summary: Read patient data summary\n      description: \u003e-\n        Patient data. List of devices and its data.\n        For glucose reading you have to specifi 'type' and 'date_from', 'date_to'\n      operationId: GetPatientData\n      parameters:\n        - in: query\n          name: type\n          schema:\n            type: string\n            enum: [cgm,combined,standardday,score_card,bg_pie_chart,cgm_pie_chart,insulin_pie_chart]\n        - in: query\n          name: only_cgm\n          schema:\n            type: boolean\n        - in: query\n          name: date_from\n          schema: \n            type: string\n            format: date-time\n        - in: query\n          name: date_to\n          schema: \n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataItem'\n    post:\n      summary: Upload data\n      description: \u003e-\n        Upload patient data. Data itself is encoded in 'payload'\n      operationId: PostPatientData\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema: \n               $ref: '#/components/schemas/DataUpload'\n      responses:\n        '200':\n          description: OK\ncomponents:\n  schemas: \n    DataUpload:\n      type: object\n      properties:\n        device_type:\n          type: string\n        uuid:\n          type: string\n        pcode:\n          type: string\n        password:\n          type: string\n        insulin_brand:\n          type: string\n        pen_serial:\n          type: string\n        payload:\n          type: string\n    DataItem:\n      type: object\n      properties:\n        type: \n          type: string\n          enum: [glucose]\n        created_at:\n          type: string\n          format: date-time\n        value: \n          type: number\n        unit:\n          type: string\n          enum: [mmol/l]\n        flags:\n          type: array\n          items:\n            type: object\n            properties:\n              flag:\n                type: number\n              description:\n                type: string\n    PatientData:\n      type: object\n      properties:\n        data: \n          type: array\n          items: \n            $ref: '#/components/schemas/DataItem'\n        device: \n          type: object\n          properties:\n            serial:\n              type: string\n            manufacturer: \n              type: string\n            model: \n              type: string\n            first_value_at:\n              type: string\n              format: date-time\n            last_value_at:\n              type: string\n              format: date-time\n            supports_glucose: \n              type: string\n            supports_cgm: \n              type: string\n            supports_insulin: \n              type: string\n            supports_carb: \n              type: string\n  securitySchemes:\n    password:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: 'oauth2/token'\n          scopes:\n            PATIENT DIASEND_MOBILE_DEVICE_DATA_RW: allows modifying resources",
			"canonicalURL": "/github.com/PatrikTrestik/diasend-upload@77748146e287738839fdbfcb882f28520d21646f/-/blob/doc/diasend-api/DiasendAPI-1.0.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PatrikTrestik/diasend-upload/blob/77748146e287738839fdbfcb882f28520d21646f/doc/diasend-api/DiasendAPI-1.0.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /patient/data: get: operation \"GetPatientData\": security: parse security scheme \"password\": oauth2: flow \"password\": \"tokenUrl\" MUST be in the form of a URL: parse \"oauth2/token\": invalid URI for request"
}