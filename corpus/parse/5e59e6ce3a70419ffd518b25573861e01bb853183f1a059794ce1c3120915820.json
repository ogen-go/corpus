{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "bigqueryconnection-v1beta1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/bigqueryconnection-v1beta1.yaml",
			"byteSize": 55659,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AuditConfig:\n      description: 'Specifies the audit configuration for a service. The configuration\n        determines which permission types are logged, and what identities, if any,\n        are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.\n        If there are AuditConfigs for both `allServices` and a specific service, the\n        union of the two AuditConfigs is used for that service: the log_types specified\n        in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig\n        are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\":\n        [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",\n        \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\"\n        }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\",\n        \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\",\n        \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice,\n        this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also\n        exempts jose@example.com from DATA_READ logging, and aliya@example.com from\n        DATA_WRITE logging.'\n      properties:\n        auditLogConfigs:\n          description: The configuration for logging of each type of permission.\n          items:\n            $ref: '#/components/schemas/AuditLogConfig'\n          type: array\n        service:\n          description: Specifies a service that will be enabled for audit logging.\n            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices`\n            is a special value that covers all services.\n          type: string\n      type: object\n    AuditLogConfig:\n      description: 'Provides the configuration for logging a type of permissions.\n        Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\":\n        [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables\n        ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com\n        from DATA_READ logging.'\n      properties:\n        exemptedMembers:\n          description: Specifies the identities that do not cause logging for this\n            type of permission. Follows the same format of Binding.members.\n          items:\n            type: string\n          type: array\n        logType:\n          description: The log type that this config enables.\n          enum:\n          - LOG_TYPE_UNSPECIFIED\n          - ADMIN_READ\n          - DATA_WRITE\n          - DATA_READ\n          type: string\n      type: object\n    Binding:\n      description: Associates `members`, or principals, with a `role`.\n      properties:\n        condition:\n          $ref: '#/components/schemas/Expr'\n          description: The condition that is associated with this binding. If the\n            condition evaluates to `true`, then this binding applies to the current\n            request. If the condition evaluates to `false`, then this binding does\n            not apply to the current request. However, a different role binding might\n            grant the same role to one or more of the principals in this binding.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        members:\n          description: 'Specifies the principals requesting access for a Cloud Platform\n            resource. `members` can have the following values: * `allUsers`: A special\n            identifier that represents anyone who is on the internet; with or without\n            a Google account. * `allAuthenticatedUsers`: A special identifier that\n            represents anyone who is authenticated with a Google account or a service\n            account. * `user:{emailid}`: An email address that represents a specific\n            Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`:\n            An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.\n            * `group:{emailid}`: An email address that represents a Google group.\n            For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a user that has\n            been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\n            If the user is recovered, this value reverts to `user:{emailid}` and the\n            recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a service account\n            that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n            If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\n            and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a Google group\n            that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`.\n            If the group is recovered, this value reverts to `group:{emailid}` and\n            the recovered group retains the role in the binding. * `domain:{domain}`:\n            The G Suite domain (primary) that represents all the users of that domain.\n            For example, `google.com` or `example.com`. '\n          items:\n            type: string\n          type: array\n        role:\n          description: Role that is assigned to the list of `members`, or principals.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    CloudSqlCredential:\n      description: Credential info for the Cloud SQL.\n      properties:\n        password:\n          description: The password for the credential.\n          type: string\n        username:\n          description: The username for the credential.\n          type: string\n      type: object\n    CloudSqlProperties:\n      description: Connection properties specific to the Cloud SQL.\n      properties:\n        credential:\n          $ref: '#/components/schemas/CloudSqlCredential'\n          description: Input only. Cloud SQL credential.\n        database:\n          description: Database name.\n          type: string\n        instanceId:\n          description: Cloud SQL instance ID in the form `project:location:instance`.\n          type: string\n        type:\n          description: Type of the Cloud SQL database.\n          enum:\n          - DATABASE_TYPE_UNSPECIFIED\n          - POSTGRES\n          - MYSQL\n          type: string\n      type: object\n    Connection:\n      description: Configuration parameters to establish connection with an external\n        data source, except the credential attributes.\n      properties:\n        cloudSql:\n          $ref: '#/components/schemas/CloudSqlProperties'\n          description: Cloud SQL properties.\n        creationTime:\n          description: Output only. The creation timestamp of the connection.\n          format: int64\n          readOnly: true\n          type: string\n        description:\n          description: User provided description.\n          type: string\n        friendlyName:\n          description: User provided display name for the connection.\n          type: string\n        hasCredential:\n          description: Output only. True, if credential is configured for this connection.\n          readOnly: true\n          type: boolean\n        lastModifiedTime:\n          description: Output only. The last update timestamp of the connection.\n          format: int64\n          readOnly: true\n          type: string\n        name:\n          description: 'The resource name of the connection in the form of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`'\n          type: string\n      type: object\n    ConnectionCredential:\n      description: Credential to use with a connection.\n      properties:\n        cloudSql:\n          $ref: '#/components/schemas/CloudSqlCredential'\n          description: Credential for Cloud SQL database.\n      type: object\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    Expr:\n      description: 'Represents a textual expression in the Common Expression Language\n        (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\n        of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\n        title: \"Summary size limit\" description: \"Determines if a summary is less\n        than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality):\n        title: \"Requestor is owner\" description: \"Determines if requestor is the document\n        owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic):\n        title: \"Public documents\" description: \"Determine whether the document should\n        be publicly visible\" expression: \"document.type != ''private'' && document.type\n        != ''internal''\" Example (Data Manipulation): title: \"Notification string\"\n        description: \"Create a notification string with a timestamp.\" expression:\n        \"''New message received at '' + string(document.create_time)\" The exact variables\n        and functions that may be referenced within an expression are determined by\n        the service that evaluates it. See the service documentation for additional\n        information.'\n      properties:\n        description:\n          description: Optional. Description of the expression. This is a longer text\n            which describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: Textual representation of an expression in Common Expression\n            Language syntax.\n          type: string\n        location:\n          description: Optional. String indicating the location of the expression\n            for error reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: Optional. Title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the expression.\n          type: string\n      type: object\n    GetIamPolicyRequest:\n      description: Request message for `GetIamPolicy` method.\n      properties:\n        options:\n          $ref: '#/components/schemas/GetPolicyOptions'\n          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options\n            to `GetIamPolicy`.'\n      type: object\n    GetPolicyOptions:\n      description: Encapsulates settings provided to GetIamPolicy.\n      properties:\n        requestedPolicyVersion:\n          description: Optional. The policy format version to be returned. Valid values\n            are 0, 1, and 3. Requests specifying an invalid value will be rejected.\n            Requests for policies with any conditional bindings must specify version\n            3. Policies without any conditional bindings may specify any valid value\n            or leave the field unset. To learn which resources support conditions\n            in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n          format: int32\n          type: integer\n      type: object\n    ListConnectionsResponse:\n      description: The response for ConnectionService.ListConnections.\n      properties:\n        connections:\n          description: List of connections.\n          items:\n            $ref: '#/components/schemas/Connection'\n          type: array\n        nextPageToken:\n          description: Next page token.\n          type: string\n      type: object\n    Policy:\n      description: 'An Identity and Access Management (IAM) policy, which specifies\n        access controls for Google Cloud resources. A `Policy` is a collection of\n        `bindings`. A `binding` binds one or more `members`, or principals, to a single\n        `role`. Principals can be user accounts, service accounts, Google groups,\n        and domains (such as G Suite). A `role` is a named list of permissions; each\n        `role` can be an IAM predefined role or a user-created custom role. For some\n        types of Google Cloud resources, a `binding` can also specify a `condition`,\n        which is a logical expression that allows access to a resource only if the\n        expression evaluates to `true`. A condition can add constraints based on attributes\n        of the request, the resource, or both. To learn which resources support conditions\n        in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\",\n        \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\",\n        \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\":\n        \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\"\n        ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant\n        access after Sep 2020\", \"expression\": \"request.time < timestamp(''2020-10-01T00:00:00.000Z'')\",\n        } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings:\n        - members: - user:mike@example.com - group:admins@example.com - domain:google.com\n        - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\n        - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\n        condition: title: expirable access description: Does not grant access after\n        Sep 2020 expression: request.time < timestamp(''2020-10-01T00:00:00.000Z'')\n        etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see\n        the [IAM documentation](https://cloud.google.com/iam/docs/).'\n      properties:\n        auditConfigs:\n          description: Specifies cloud audit logging configuration for this policy.\n          items:\n            $ref: '#/components/schemas/AuditConfig'\n          type: array\n        bindings:\n          description: Associates a list of `members`, or principals, with a `role`.\n            Optionally, may specify a `condition` that determines how and when the\n            `bindings` are applied. Each of the `bindings` must contain at least one\n            principal. The `bindings` in a `Policy` can refer to up to 1,500 principals;\n            up to 250 of these principals can be Google groups. Each occurrence of\n            a principal counts towards these limits. For example, if the `bindings`\n            grant 50 different roles to `user:alice@example.com`, and not to any other\n            principal, then you can add another 1,450 principals to the `bindings`\n            in the `Policy`.\n          items:\n            $ref: '#/components/schemas/Binding'\n          type: array\n        etag:\n          description: '`etag` is used for optimistic concurrency control as a way\n            to help prevent simultaneous updates of a policy from overwriting each\n            other. It is strongly suggested that systems make use of the `etag` in\n            the read-modify-write cycle to perform policy updates in order to avoid\n            race conditions: An `etag` is returned in the response to `getIamPolicy`,\n            and systems are expected to put that etag in the request to `setIamPolicy`\n            to ensure that their change will be applied to the same version of the\n            policy. **Important:** If you use IAM Conditions, you must include the\n            `etag` field whenever you call `setIamPolicy`. If you omit this field,\n            then IAM allows you to overwrite a version `3` policy with a version `1`\n            policy, and all of the conditions in the version `3` policy are lost.'\n          format: byte\n          type: string\n        version:\n          description: 'Specifies the format of the policy. Valid values are `0`,\n            `1`, and `3`. Requests that specify an invalid value are rejected. Any\n            operation that affects conditional role bindings must specify version\n            `3`. This requirement applies to the following operations: * Getting a\n            policy that includes a conditional role binding * Adding a conditional\n            role binding to a policy * Changing a conditional role binding in a policy\n            * Removing any role binding, with or without a condition, from a policy\n            that includes conditions **Important:** If you use IAM Conditions, you\n            must include the `etag` field whenever you call `setIamPolicy`. If you\n            omit this field, then IAM allows you to overwrite a version `3` policy\n            with a version `1` policy, and all of the conditions in the version `3`\n            policy are lost. If a policy does not include any conditions, operations\n            on that policy may specify any valid version or leave the field unset.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'\n          format: int32\n          type: integer\n      type: object\n    SetIamPolicyRequest:\n      description: Request message for `SetIamPolicy` method.\n      properties:\n        policy:\n          $ref: '#/components/schemas/Policy'\n          description: 'REQUIRED: The complete policy to be applied to the `resource`.\n            The size of the policy is limited to a few 10s of KB. An empty policy\n            is a valid policy but certain Cloud Platform services (such as Projects)\n            might reject them.'\n        updateMask:\n          description: 'OPTIONAL: A FieldMask specifying which fields of the policy\n            to modify. Only the fields in the mask will be modified. If no mask is\n            provided, the following default mask is used: `paths: \"bindings, etag\"`'\n          format: google-fieldmask\n          type: string\n      type: object\n    TestIamPermissionsRequest:\n      description: Request message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: The set of permissions to check for the `resource`. Permissions\n            with wildcards (such as '*' or 'storage.*') are not allowed. For more\n            information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsResponse:\n      description: Response message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: A subset of `TestPermissionsRequest.permissions` that the caller\n            is allowed.\n          items:\n            type: string\n          type: array\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/bigquery: View and manage your data in\n              Google BigQuery and see the email address for your Google Account\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/bigquery: View and manage your data in\n              Google BigQuery and see the email address for your Google Account\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources:\n    projects.locations.connections:\n      id: google.bigqueryconnection.projects.locations.connections\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        getIamPolicy:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:getIamPolicy/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        setIamPolicy:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:setIamPolicy/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        testIamPermissions:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}:testIamPermissions/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateCredential:\n          operation:\n            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1locations~1{locationsId}~1connections~1{connectionsId}~1credential/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: projects.locations.connections\n      title: projects.locations.connections\nexternalDocs:\n  url: https://cloud.google.com/bigquery/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Allows users to manage BigQuery connections to external data sources.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: BigQuery Connection API\n  version: v1beta1\n  x-apiClientRegistration:\n    url: https://console.developers.google.com\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png\n  x-origin:\n  - converter:\n      url: https://github.com/mermade/oas-kit\n      version: 7.0.4\n    format: google\n    url: https://bigqueryconnection.googleapis.com/$discovery/rest?version=v1beta1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: bigqueryconnection\nopenapi: 3.0.0\npaths:\n  /v1beta1/projects/{projectsId}/locations/{locationsId}/connections:\n    get:\n      description: Returns a list of connections in the given project.\n      operationId: bigqueryconnection.projects.locations.connections.list\n      parameters:\n      - description: Required. Maximum number of results per page.\n        in: query\n        name: maxResults\n        schema:\n          type: integer\n      - description: Page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConnectionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new connection.\n      operationId: bigqueryconnection.projects.locations.connections.create\n      parameters:\n      - description: Optional. Connection id that should be assigned to the created\n          connection.\n        in: query\n        name: connectionId\n        schema:\n          type: string\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Connection'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:\n    delete:\n      description: Deletes connection and associated credential.\n      operationId: bigqueryconnection.projects.locations.connections.delete\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: Returns specified connection.\n      operationId: bigqueryconnection.projects.locations.connections.get\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Sets the credential for the specified connection.\n      operationId: bigqueryconnection.projects.locations.connections.updateCredential\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionCredential'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/credential:\n    delete:\n      description: Deletes connection and associated credential.\n      operationId: bigqueryconnection.projects.locations.connections.delete\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: Returns specified connection.\n      operationId: bigqueryconnection.projects.locations.connections.get\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Sets the credential for the specified connection.\n      operationId: bigqueryconnection.projects.locations.connections.updateCredential\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionCredential'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Gets the access control policy for a resource. Returns an empty\n        policy if the resource exists and does not have a policy set.\n      operationId: bigqueryconnection.projects.locations.connections.getIamPolicy\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Sets the access control policy on the specified resource. Replaces\n        any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\n        errors.\n      operationId: bigqueryconnection.projects.locations.connections.setIamPolicy\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Returns permissions that a caller has on the specified resource.\n        If the resource does not exist, this will return an empty set of permissions,\n        not a `NOT_FOUND` error. Note: This operation is designed to be used for building\n        permission-aware UIs and command-line tools, not for authorization checking.\n        This operation may \"fail open\" without warning.'\n      operationId: bigqueryconnection.projects.locations.connections.testIamPermissions\n      parameters:\n      - in: path\n        name: projectsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: connectionsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestIamPermissionsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestIamPermissionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:\n    delete:\n      description: Deletes connection and associated credential.\n      operationId: bigqueryconnection.projects.locations.connections.delete\n      parameters:\n      - description: 'Required. Name of the deleted connection, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: Returns specified connection.\n      operationId: bigqueryconnection.projects.locations.connections.get\n      parameters:\n      - description: 'Required. Name of the requested connection, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Sets the credential for the specified connection.\n      operationId: bigqueryconnection.projects.locations.connections.updateCredential\n      parameters:\n      - description: 'Required. Name of the connection, for example: `projects/{project_id}/locations/{location_id}/connections/{connection_id}/credential`'\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionCredential'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/connections:\n    get:\n      description: Returns a list of connections in the given project.\n      operationId: bigqueryconnection.projects.locations.connections.list\n      parameters:\n      - description: 'Required. Parent resource name. Must be in the form: `projects/{project_id}/locations/{location_id}`'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Required. Maximum number of results per page.\n        in: query\n        name: maxResults\n        schema:\n          type: integer\n      - description: Page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConnectionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new connection.\n      operationId: bigqueryconnection.projects.locations.connections.create\n      parameters:\n      - description: Required. Parent resource name. Must be in the format `projects/{project_id}/locations/{location_id}`\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Optional. Connection id that should be assigned to the created\n          connection.\n        in: query\n        name: connectionId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Connection'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:getIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Gets the access control policy for a resource. Returns an empty\n        policy if the resource exists and does not have a policy set.\n      operationId: bigqueryconnection.projects.locations.connections.getIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being requested.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:setIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Sets the access control policy on the specified resource. Replaces\n        any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\n        errors.\n      operationId: bigqueryconnection.projects.locations.connections.setIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being specified.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:testIamPermissions:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Returns permissions that a caller has on the specified resource.\n        If the resource does not exist, this will return an empty set of permissions,\n        not a `NOT_FOUND` error. Note: This operation is designed to be used for building\n        permission-aware UIs and command-line tools, not for authorization checking.\n        This operation may \"fail open\" without warning.'\n      operationId: bigqueryconnection.projects.locations.connections.testIamPermissions\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy detail is being\n          requested. See the operation documentation for the appropriate value for\n          this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestIamPermissionsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestIamPermissionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/bigquery\n        Oauth2c:\n        - https://www.googleapis.com/auth/bigquery\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\nservers:\n- url: https://bigqueryconnection.googleapis.com/\ntags:\n- name: projects\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@ca6abad4745061e15112152cdee33275701a16c1/-/blob/providers/src/googleapis.com/v0.1.2/services/bigqueryconnection-v1beta1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/ca6abad4745061e15112152cdee33275701a16c1/providers/src/googleapis.com/v0.1.2/services/bigqueryconnection-v1beta1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v1beta1/{name}\": at 1:36987: get: duplicate operationId: \"bigqueryconnection.projects.locations.connections.get\""
}