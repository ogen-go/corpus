{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pme123/camundala"
		},
		"file": {
			"name": "postmanOpenApi.yml",
			"size": 0,
			"path": "examples/twitter/camunda8/postmanOpenApi.yml",
			"byteSize": 9911,
			"content": "openapi: 3.0.3\ninfo:\n  title: Twitter Process API\n  version: '1.0'\n  description: |2+\n\n\n    Created at 13/04/2022, 13:42\n\n    Generated Open API:\n\n    - **openApi.yml**: Documentation of the Processes (this DocumentationðŸ˜Š).\n    - **postmanOpenApi.yml**: Open Api that you can import to Postman!\n      Be aware that this needs some adjustments.\n\n    \u003eWARNING: This is an experimental way and not approved.\n\n    ****\n\n\n    The self-contained process solution contains\n\n    * The process model as BPMN (auto-deployed during startup)\n    * Glue code for the service task\n    * REST endpoint that then starts a process instance\n    * Test case\n\n    Requirements:\n\n    * Java \u003e= 8\n    * Maven\n\n    ## How to run\n\n    * Download/clone the code in this folder.\n    * You need to set your Camunda cloud client connection details in the file `application.properties`. Simply replace the existing sample values.\n    * Run the application:\n\n    ```\n    mvn package exec:java\n    ```\n\n    ```\n    curl -i -X PUT http://localhost:8323/tweet \\\n      -H 'cache-control: no-cache' \\\n      -H 'content-type: application/json' \\\n      -d '{\n      \"tweet\":\"What the f***!\",\n      \"author\":\"Sergey\",\n      \"boss\":\"Putin\"\n    }'\n    ```\n\n    * You should see something like this:\n\n\nservers:\n- url: http://localhost:8887/engine-rest\npaths:\n  /process-definition/key/TwitterDemoProcess/start:\n    post:\n      tags:\n      - TwitterDemoProcess\n      summary: 'Process: TwitterDemoProcess'\n      description: \"This runs the Twitter Approvement Process.\\n\u003cdetails\u003e\\n\u003csummary\u003e\u003cb\u003eUsed\\\n        \\ in the 0 Process(es)\u003c/b\u003e\u003c/summary\u003e\\n\u003cp\u003e\\n\\n\\n- \\n\\n\\n\u003c/p\u003e\\n\u003c/details\u003e\\n\"\n      operationId: 'Process: TwitterDemoProcess'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartProcessIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    tweet:\n                      value: Hello Tweet\n                      type: String\n                    author:\n                      value: pme123\n                      type: String\n                    boss:\n                      value: Great Master\n                      type: String\n                  businessKey: example-businesskey\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\n  /task/--REMOVE:user_task_review_tweet--:\n    post:\n      tags:\n      - TwitterDemoProcess\n      summary: 'no Api!: no API!'\n      description: ''\n      operationId: 'no Api!: no API!'\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/form-variables/--REMOVE:user_task_review_tweet--:\n    get:\n      tags:\n      - TwitterDemoProcess\n      summary: 'no API!: no API!'\n      description: |+\n        Retrieves the form variables for a task.\n        The form variables take form data specified on the task into account.\n        If form fields are defined, the variable types and default values of the form fields are taken into account.\n\n      operationId: 'no API!: no API!'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      - name: variableNames\n        in: query\n        description: |-\n          A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list.\n          It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched.\n          If the query parameter contains non-existent variable names, the variable names are ignored.\n        required: false\n        schema:\n          type: string\n          default: tweet,author,boss\n      - name: deserializeValues\n        in: query\n        required: false\n        schema:\n          type: boolean\n          default: false\n      responses:\n        '200':\n          description: ''\n  /task/{taskId}/complete/--REMOVE:user_task_review_tweet--:\n    post:\n      tags:\n      - TwitterDemoProcess\n      summary: 'no API!: no API!'\n      description: ''\n      operationId: 'no API!: no API!'\n      parameters:\n      - name: taskId\n        in: path\n        description: |\n          The taskId of the Form.\n          \u003e This is the result id of the `GetActiveTask`\n        required: true\n        schema:\n          type: string\n          default: '{{taskId}}'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompleteTaskIn'\n            examples:\n              standard:\n                value:\n                  variables:\n                    tweet:\n                      value: Hello Tweet\n                      type: String\n                    author:\n                      value: pme123\n                      type: String\n                    boss:\n                      value: Great Master\n                      type: String\n                    approved:\n                      value: false\n                      type: Boolean\n                  withVariablesInReturn: true\n              Tweet accepted:\n                value:\n                  variables:\n                    tweet:\n                      value: Hello Tweet\n                      type: String\n                    author:\n                      value: pme123\n                      type: String\n                    boss:\n                      value: Great Master\n                      type: String\n                    approved:\n                      value: false\n                      type: Boolean\n                  withVariablesInReturn: true\n              Tweet rejected:\n                value:\n                  variables:\n                    tweet:\n                      value: Hello Tweet\n                      type: String\n                    author:\n                      value: pme123\n                      type: String\n                    boss:\n                      value: Great Master\n                      type: String\n                    approved:\n                      value: false\n                      type: Boolean\n                  withVariablesInReturn: true\n        required: true\n      responses:\n        '200':\n          description: ''\ncomponents:\n  schemas:\n    CBoolean:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: boolean\n        type:\n          type: string\n    CDouble:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: number\n          format: double\n        type:\n          type: string\n    CEnum:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n    CFile:\n      required:\n      - value\n      - valueInfo\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n          description: The File's content as Base64 encoded String.\n        valueInfo:\n          $ref: '#/components/schemas/CFileValueInfo'\n        type:\n          type: string\n    CFileValueInfo:\n      required:\n      - filename\n      type: object\n      properties:\n        filename:\n          type: string\n        mimetype:\n          type: string\n    CInteger:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: integer\n        type:\n          type: string\n    CJson:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n    CLong:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: integer\n          format: int64\n        type:\n          type: string\n    CNull:\n      type: object\n    CString:\n      required:\n      - value\n      - type\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n    CamundaVariable:\n      oneOf:\n      - $ref: '#/components/schemas/CBoolean'\n      - $ref: '#/components/schemas/CDouble'\n      - $ref: '#/components/schemas/CEnum'\n      - $ref: '#/components/schemas/CFile'\n      - $ref: '#/components/schemas/CInteger'\n      - $ref: '#/components/schemas/CJson'\n      - $ref: '#/components/schemas/CLong'\n      - $ref: '#/components/schemas/CNull'\n      - $ref: '#/components/schemas/CString'\n    CompleteTaskIn:\n      required:\n      - variables\n      - withVariablesInReturn\n      type: object\n      properties:\n        variables:\n          $ref: '#/components/schemas/Map_CamundaVariable'\n        withVariablesInReturn:\n          type: boolean\n          description: Set to false will not return the Process Variables and the\n            Result Status is 204.\n      description: 'A JSON object with the following properties: (at least an empty\n        JSON object {} or an empty request body)'\n    Map_CamundaVariable:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/CamundaVariable'\n    StartProcessIn:\n      required:\n      - variables\n      - withVariablesInReturn\n      type: object\n      properties:\n        variables:\n          $ref: '#/components/schemas/Map_CamundaVariable'\n        businessKey:\n          type: string\n          description: The business key of the process instance.\n        withVariablesInReturn:\n          type: boolean\n          description: Set to false will not return the Process Variables.\n      description: 'A JSON object with the following properties: (at least an empty\n        JSON object {} or an empty request body)'\n",
			"canonicalURL": "/github.com/pme123/camundala@8f0d63a17634a36bc62292180cb852b430c71e63/-/blob/examples/twitter/camunda8/postmanOpenApi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/pme123/camundala/blob/8f0d63a17634a36bc62292180cb852b430c71e63/examples/twitter/camunda8/postmanOpenApi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /task/{taskId}/form-variables/--REMOVE:user_task_review_tweet--: get: duplicate operationId: \"no API!: no API!\""
}