{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/algaworks/curso-especialista-react"
		},
		"file": {
			"name": "alganews-api.yml",
			"path": "08.30 - Buscando dados paginados na API/alganews-api.yml",
			"content": "openapi: 3.0.0\n\ninfo:\n  title: AlgaNews\n  version: '1.0'\n  description: \u003e-\n    REST API da plataforma de notícias da AlgaNews.\n  contact:\n    email: contato@algaworks.com\n    name: AlgaWorks\n    url: 'https://www.algaworks.com'\n\nservers:\n  - description: Ambiente local de desenvolvimento\n    url: 'http://localhost:8080'\n  - description: Ambiente de produção\n    url: 'https://api.alganews.com.br'\n\npaths:\n  /users/{userId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: userId\n        in: path\n        required: true\n    get:\n      operationId: getUserById\n      summary: Busca um usuário por ID\n      description: Se a requisição for autenticada para um editor, só poderá ter acesso ao recurso do próprio usuário.\n                   \u003cbr\u003eCaso a requisição for autenticada para um gerente ou assistente, poderá ter acesso a qualquer recurso de usuário.\n      tags:\n        - Users\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDetailed'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      operationId: updateUser\n      summary: Atualiza um usuário\n      description: Apenas requisições autenticadas para gerentes ou assistentes são válidas.\n                   \u003cbr\u003eAssistentes não podem atualizar informações sensíveis de usuários com perfis de nível de acesso maior que os seus.\n      tags:\n        - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserInput'\n      responses:\n        '200':\n          description: Usuário atualizado\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/UserDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /users:\n    get:\n      operationId: getUsers\n      summary: Consulta os usuários\n      description: Apenas requisições autenticadas para gerentes ou assistentes são válidas.\n      tags:\n        - Users\n      parameters:\n        - schema:\n            type: string\n            example: João\n          in: query\n          name: term\n          description: Termo para consulta nas propriedades de nome, e-mail e CPF\n          required: false\n        - schema:\n            type: string\n            example: João\n          in: query\n          name: name\n          description: Nome do usuário\n          required: false\n        - schema:\n            type: string\n            format: email\n            example: joao.silva@alganews.com\n          in: query\n          name: email\n          description: E-mail do usuário\n          required: false\n        - $ref: '#/components/parameters/pageSort'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserSummary'\n    post:\n      operationId: createUser\n      summary: Cria um novo usuário\n      description: Apenas requisições autenticadas para gerentes ou assistentes são válidas.\n                   \u003cbr\u003eAssistentes não podem criar usuários com perfis de nível de acesso maior que os seus.\n      tags:\n        - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserInput'\n      responses:\n        '201':\n          description: Usuário criado\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/UserDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /users/{userId}/activation:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: userId\n        in: path\n        required: true\n    put:\n      operationId: activateUser\n      summary: Ativa um usuário\n      description: Apenas requisições autenticadas para gerentes ou assistentes são válidas.\n                   \u003cbr\u003eAssistentes não podem ativar usuários com perfis de nível de acesso maior que os seus.\n      tags:\n        - Users\n      responses:\n        '204':\n          description: Usuário ativado\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      operationId: deactivateUser\n      summary: Desativa um usuário\n      description: Apenas requisições autenticadas para gerentes ou assistentes são válidas.\n                   \u003cbr\u003eAssistentes não podem desativar usuários com perfis de nível de acesso maior que os seus.\n      tags:\n        - Users\n      responses:\n        '204':\n          description: Usuário desativado\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /users/editors/{editorId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: editorId\n        in: path\n        required: true\n    get:\n      operationId: getEditorById\n      summary: Busca um editor por ID\n      tags:\n        - Users\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditorDetailed'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /users/editors:\n    get:\n      operationId: getEditors\n      summary: Consulta os editores\n      tags:\n        - Users\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EditorSummary'\n      parameters:\n        - $ref: '#/components/parameters/pageSort'\n\n  /posts:\n    get:\n      operationId: getPosts\n      summary: Consulta posts (com paginação)\n      tags:\n        - Posts\n      security: []\n      parameters: \n          - schema:\n              type: integer\n              format: int64\n              example: 332\n            name: editorId\n            description: ID do editor (usuário) do post\n            in: query\n            required: false\n          - $ref: '#/components/parameters/pageNumber'\n          - $ref: '#/components/parameters/pageSize'\n          - $ref: '#/components/parameters/pageSort'\n          - schema:\n              type: boolean\n              example: true\n              default: false\n            name: showAll\n            description: Inclui todos os posts no resultado da consulta (incluindo os despublicados)\n            in: query\n            required: false\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostsPaginated'\n    post:\n      operationId: createPost\n      summary: Cria um novo post\n      tags:\n        - Posts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostInput'\n      responses:\n        '201':\n          description: Post criado\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/PostDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /posts/{postId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: postId\n        in: path\n        required: true\n    get:\n      operationId: getPostById\n      summary: Busca um post pelo ID\n      tags:\n        - Posts\n      security: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostDetailed'\n    put:\n      operationId: updatePost\n      summary: Atualiza um post\n      tags:\n        - Posts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostInput'\n      responses:\n        '200':\n          description: Post alterado\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/PostDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      operationId: deletePost\n      summary: Exclui um post\n      tags:\n        - Posts\n      responses:\n        '204':\n          description: Post excluído\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /posts/{postId}/publishing:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: postId\n        in: path\n        required: true\n    put:\n      operationId: publishPost\n      summary: Publica um post\n      tags:\n        - Posts\n      responses:\n        '204':\n          description: Post publicado\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      operationId: unpublishPost\n      summary: Despublica um post\n      tags:\n        - Posts\n      responses:\n        '204':\n          description: Post despublicado\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /payments:\n    get:\n      operationId: getPayments\n      summary: Consultar pagamentos\n      tags:\n        - Payroll\n      parameters:\n        - schema:\n            type: integer\n            format: int64\n            example: 332\n          name: payeeId\n          description: ID do beneficiário (usuário) do pagamento\n          in: query\n          required: false\n        - schema:\n            type: string\n            format: email\n            example: joao.silva@alganews.com\n          in: query\n          name: payeeEmail\n          description: E-mail do beneficiário (usuário) do pagamento\n          required: false\n        - schema:\n            type: string\n            format: yyyy-mm\n            example: '2020-11'\n          name: scheduledToYearMonth\n          description: Mês/ano do agendamento\n          in: query\n          required: false\n        - $ref: '#/components/parameters/pageNumber'\n        - $ref: '#/components/parameters/pageSize'\n        - $ref: '#/components/parameters/pageSort'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentsPaginated'\n    post:\n      operationId: createPayment\n      tags:\n        - Payroll\n      summary: 'Cria um novo pagamento'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentInput'\n      responses:\n        '201':\n          description: Pagamento criado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /payments/bulk-approvals:\n    put:\n      operationId: approveBulkPayments\n      tags:\n        - Payroll\n      summary: 'Aprova vários pagamentos'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: integer\n              example: [ 12, 23, 34 ]\n      responses:\n        '204':\n          description: Pagamentos aprovados\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /payments/previews:\n    post:\n      operationId: createPaymentPreview\n      tags:\n        - Payroll\n      summary: 'Cria uma simulação de pagamento'\n      description: Uma simulação de pagamento não é persistida no sistema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentPreviewInput'\n      responses:\n        '201':\n          description: Simulação de pagamento criada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentPreview'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /payments/{paymentId}/approval:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n          example: 332\n        name: paymentId\n        description: 'ID do pagamento'\n        in: path\n        required: true\n    put:\n      operationId: approvePayment\n      summary: 'Aprova/realiza um pagamento'\n      tags:\n        - Payroll\n      responses:\n        '204':\n          description: Pagamento aprovado\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /payments/{paymentId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n          example: 332\n        name: paymentId\n        description: ID do pagamento\n        in: path\n        required: true\n    get:\n      operationId: getPayment\n      summary: 'Busca um pagamento'\n      tags:\n        - Payroll\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentDetailed'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      operationId: deletePayment\n      summary: 'Remove um pagamento'\n      description: \u003e\n        Exclui fisicamente um pagamento.\n        Caso o pagamento já tenha sido aprovado, não será possível excluí-lo.\n      tags:\n        - Payroll\n      responses:\n        '204':\n          description: Pagamento excluído\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /payments/{paymentId}/posts:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n        name: paymentId\n        in: path\n        required: true\n      - $ref: '#/components/parameters/pageSort'\n    get:\n      operationId: getPostsByPayment\n      summary: Consulta os posts de um pagamento\n      tags:\n        - Payroll\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PostWithEarnings'\n\n  /cashflow/entries/{entryId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n          example: 332\n        name: entryId\n        description: ID do lançamento financeiro\n        in: path\n        required: true\n    get:\n      operationId: getCashFlowEntry\n      summary: 'Busca um lançamento financeiro'\n      tags:\n        - Cash Flow\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CashFlowEntryDetailed'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      operationId: updateCashFlowEntry\n      tags:\n        - Cash Flow\n      summary: 'Atualiza um lançamento financeiro'\n      description: \u003e\n        Não é permitido atualizar um lançamento financeiro gerado pelo sistema.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CashFlowEntryInput'\n      responses:\n        '200':\n          description: Lançamento financeiro atualizado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CashFlowEntryDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    delete:\n      operationId: deleteCashFlowEntry\n      summary: 'Remove um lançamento financeiro'\n      description: \u003e\n        Exclui fisicamente um lançamento financeiro.\n        Caso o lançamento informado tenha sido gerado pelo sistema, não será possível excluí-lo.\n      tags:\n        - Cash Flow\n      responses:\n        '204':\n          description: Lançamento financeiro excluído\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /cashflow/entries:\n    get:\n      operationId: getCashFlowEntries\n      summary: Consulta lançamentos financeiros\n      tags:\n        - Cash Flow\n      parameters:\n        - schema:\n            type: object\n            $ref: '#/components/schemas/CashFlowEntryType'\n            example: 'REVENUE'\n          name: type\n          description: Tipo do lançamento financeiro\n          in: query\n          required: true\n        - schema:\n            type: string\n            format: yyyy-mm\n            example: '2020-11'\n          name: yearMonth\n          description: Mês/ano dos lançamentos financeiros\n          in: query\n          required: true\n        - $ref: '#/components/parameters/pageSort'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CashFlowEntrySummary'\n    post:\n      operationId: createCashFlowEntry\n      tags:\n        - Cash Flow\n      summary: 'Cria um novo lançamento financeiro'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CashFlowEntryInput'\n      responses:\n        '201':\n          description: Lançamento financeiro criado\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CashFlowEntryDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  /cashflow/entries/bulk-removals:\n    put:\n      operationId: deleteBulkCashFlowEntries\n      tags:\n        - Cash Flow\n      summary: 'Exclui vários lançamentos financeiros'\n      requestBody:\n       content:\n         application/json:\n           schema:\n             type: array\n             items:\n               type: integer\n             example: [ 12, 23, 34 ]\n      responses:\n        '204':\n          description: Lançamentos financeiros excluídos\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /cashflow/categories/{categoryId}:\n    parameters:\n      - schema:\n          type: integer\n          format: int64\n          example: 332\n        name: categoryId\n        description: ID da categoria\n        in: path\n        required: true\n    get:\n      operationId: getCashFlowCategory\n      summary: 'Busca uma categoria'\n      tags:\n        - Cash Flow\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CashFlowCategoryDetailed'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    put:\n      operationId: updateCashFlowCategory\n      tags:\n        - Cash Flow\n      summary: 'Atualiza uma categoria'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CashFlowCategoryInput'\n      responses:\n        '200':\n          description: Categoria atualizada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CashFlowCategoryDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n    delete:\n      operationId: deleteCashFlowCategory\n      summary: 'Remove uma categoria'\n      description: \u003e\n        Exclui fisicamente uma categoria.\n        Caso a categoria possua lançamentos vinculados, não será possível excluí-la.\n      tags:\n        - Cash Flow\n      responses:\n        '204':\n          description: Categoria excluída\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /cashflow/categories:\n    get:\n      operationId: getCashFlowCategories\n      summary: Consulta categorias\n      tags:\n        - Cash Flow\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CashFlowCategorySummary'\n      parameters:\n          - $ref: '#/components/parameters/pageSort'\n    post:\n      operationId: createCashFlowCategory\n      tags:\n        - Cash Flow\n      summary: 'Cria uma nova categoria'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CashFlowCategoryInput'\n      responses:\n        '201':\n          description: Categoria criada\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CashFlowCategoryDetailed'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n  \n  /metrics/monthly-revenues-expenses:\n    get:\n      summary: Consulta métricas mensais de Receitas x Despesas\n      tags: \n        - Metrics\n      parameters:\n        - schema:\n            type: string\n            format: yyyy-mm\n            example: '2020-11'\n          name: yearMonth\n          description: Ano para filtro da consulta\n          in: query\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/MonthlyRevenuesExpenses'\n            'application/vnd.alganews.chartjs+json':\n              schema:\n                $ref: '#/components/schemas/MonthlyRevenuesExpensesChartjs'\n\n\n  /metrics/editor/monthly-earnings:\n    get:\n      summary: Consulta métricas mensais das suas receitas por mês e a média dos outros editores\n      tags: \n        - Metrics\n      parameters:\n        - schema:\n            type: string\n            format: yyyy-mm\n            example: '2020-11'\n          name: yearMonth\n          description: Ano para filtro da consulta\n          in: query\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/EditorMonthlyEarnings'\n\n  /metrics/editor/top3-tags:\n    get:\n      summary: Consulta as três tags mais utilizadas pelo usuário.\n      tags: \n        - Metrics\n      responses:\n        '200':\n          description: OK\n          content:\n            'application/json':\n              schema:\n                $ref: '#/components/schemas/EditorTagRatio'\n\n  /upload-requests:\n    post:\n      operationId: createUploadRequest\n      summary: Cria uma solicitação de upload de arquivo\n      tags:\n        - Files\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadRequestInput'\n      responses:\n        '200':\n          description: Solicitação de upload de arquivo criada\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/UploadRequest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\ncomponents:\n  securitySchemes:\n    HttpBearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    OAuth2Local:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'http://localhost:8081/oauth/authorize'\n          tokenUrl: 'http://localhost:8081/oauth/token'\n          refreshUrl: 'http://localhost:8081/oauth/token'\n        password:\n          tokenUrl: 'http://localhost:8081/oauth/token'\n    OAuth2Production:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://auth.alganews.com.br/oauth/authorize'\n          tokenUrl: 'https://auth.alganews.com.br/oauth/token'\n          refreshUrl: 'https://auth.alganews.com.br/oauth/token'\n        password:\n          tokenUrl: 'https://auth.alganews.com.br/oauth/token'\n\n  responses:\n    NotFound:\n      description: Recurso não encontrado\n      content:\n        application/json:\n          schema:\n              $ref: '#/components/schemas/Problem'\n    BadRequest:\n      description: Requisição inválida\n      content:\n        application/json:\n          schema:\n              $ref: '#/components/schemas/Problem'\n\n  parameters:\n    pageNumber:\n      schema:\n        type: number\n        format: int32\n        minimum: 0\n        default: 0\n      name: page\n      description: Número da página para a consulta\n      in: query\n    pageSize:\n      schema:\n        type: number\n        format: int32\n        minimum: 1\n        example: 10\n      name: size\n      description: Quantidade de itens por página\n      in: query\n    pageSort:\n      schema:\n        type: array\n        example:\n          - 'id,desc'\n        items:\n          type: string\n      name: sort\n      description: Nome da propriedade para ordenação\n      in: query\n\n  schemas:\n    UserMinimal:\n      description: 'Usuário muito resumido (mínimo) possui apenas id, nome e avatar.'\n      required:\n        - id\n        - name\n        - avatarUrls\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 29\n        name:\n          type: string\n          example: 'Daniel Bonifacio'\n        avatarUrls:\n          $ref: '#/components/schemas/ImageUrls'\n    UserSummary:\n      description: 'Usuário resumido possui apenas os principais dados.'\n      type: object\n      required:\n        - id\n        - name\n        - email\n        - role\n        - active\n        - createdAt\n        - canBeActivated\n        - canBeDeactivated\n        - canSensitiveDataBeUpdated\n        - avatarUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 29\n        name:\n          type: string\n          example: 'Daniel Bonifacio'\n        email:\n          type: string\n          format: email\n          example: 'daniel.bonifacio@algaworks.com'\n        avatarUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        role:\n          $ref: '#/components/schemas/Role'\n        active:\n          type: boolean\n          example: true\n        createdAt:\n          type: string\n          format: date-time\n          example: '2017-03-04T00:12:45Z'\n        canBeActivated:\n          type: boolean\n          description: Se o usuário autenticado pode ou não ativar este usuário\n          example: true\n        canBeDeactivated:\n          type: boolean\n          description: Se o usuário autenticado pode ou não desativar este usuário\n          example: true\n        canSensitiveDataBeUpdated:\n          type: boolean\n          description: Se o usuário autenticado pode ou não alterar dados sensíveis deste usuário\n          example: true\n    UserDetailed:\n      description: 'Usuário detalhado contém todos os dados.'\n      type: object\n      required:\n        - id\n        - name\n        - email\n        - bio\n        - role\n        - birthdate\n        - taxpayerId\n        - pricePerWord\n        - active\n        - createdAt\n        - bankAccount\n        - skills\n        - metrics\n        - updatedAt\n        - phone\n        - location\n        - createdBy\n        - updatedBy\n        - canBeActivated\n        - canBeDeactivated\n        - canSensitiveDataBeUpdated\n        - avatarUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 29\n        name:\n          type: string\n          example: 'Daniel Bonifacio'\n        email:\n          type: string\n          format: email\n          example: 'daniel.bonifacio@algaworks.com'\n        avatarUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        bio:\n          type: string\n          example: 'Gosta de JavaScript.'\n        role:\n          $ref: '#/components/schemas/Role'\n        birthdate:\n          type: string\n          format: date\n          example: '1999-04-01'\n        phone:\n          type: string\n          example: '5527977778888'\n        taxpayerId:\n          type: string\n          format: cpf\n          example: '03388492288'\n        pricePerWord:\n          type: number\n          example: 0.06\n          format: double\n        active:\n          type: boolean\n          example: true\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        bankAccount:\n          $ref: '#/components/schemas/BankAccount'\n        location:\n          $ref: '#/components/schemas/Location'\n        skills:\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/Skill'\n        metrics:\n          $ref: '#/components/schemas/UserMetrics'\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        updatedBy:\n          $ref: '#/components/schemas/UserMinimal'\n        createdBy:\n          $ref: '#/components/schemas/UserMinimal'\n        canBeActivated:\n          type: boolean\n          description: Se o usuário autenticado pode ou não ativar este usuário\n          example: true\n        canBeDeactivated:\n          type: boolean\n          description: Se o usuário autenticado pode ou não desativar este usuário\n          example: true\n        canSensitiveDataBeUpdated:\n          type: boolean\n          description: Se o usuário autenticado pode ou não alterar dados sensíveis deste usuário\n          example: true\n    UserInput:\n      type: object\n      required:\n        - name\n        - email\n        - bio\n        - taxpayerId\n        - birthdate\n        - metadata\n        - bankAccount\n        - role\n        - phone\n        - location\n      properties:\n        name:\n          type: string\n          example: 'Daniel Bonifacio'\n          maxLength: 255\n        email:\n          type: string\n          format: email\n          example: 'daniel.bonifacio@algaworks.com'\n          maxLength: 255\n        avatarUrl:\n          type: string\n          example: 'http://localhost:4566/6832112f-e994-4f75-8ca0-aa88734241ff.png'\n        bio:\n          type: string\n          example: 'Gosta de JavaScript.'\n          maxLength: 255\n        taxpayerId:\n          type: string\n          format: cpf\n          example: '03388492288'\n          maxLength: 14\n        phone:\n          type: string\n          example: '5527999991111'\n          maxLength: 20\n        pricePerWord:\n          type: number\n          format: double\n          example: 0.06\n          minimum: 0.0\n        role:\n          $ref: '#/components/schemas/Role'\n        birthdate:\n          type: string\n          format: date\n          example: '1999-04-01'\n        bankAccount:\n          $ref: '#/components/schemas/BankAccount'\n        location:\n          $ref: '#/components/schemas/Location'\n        skills:\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/Skill'\n    UserIdInput:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: number\n          format: int64\n          example: 28\n    UserMetrics:\n      type: object\n      required:\n        - weeklyEarnings\n        - monthlyEarnings\n        - lifetimeEarnings\n        - weeklyWords\n        - monthlyWords\n        - lifetimeWords\n      properties:\n        weeklyEarnings:\n          type: number\n          format: float\n          minimum: 0\n          example: 1547.34\n        monthlyEarnings:\n          type: number\n          format: float\n          minimum: 0\n          example: 9547.24\n        lifetimeEarnings:\n          type: number\n          format: float\n          minimum: 0\n          example: 49547.24\n        weeklyWords:\n          type: number\n          format: int32\n          minimum: 0\n          example: 3293\n        monthlyWords:\n          type: number\n          format: int32\n          minimum: 0\n          example: 14587\n        lifetimeWords:\n          type: number\n          format: int32\n          minimum: 0\n          example: 758659\n\n    EditorSummary:\n      description: 'Editor (usuário) resumido possui apenas os principais dados.'\n      type: object\n      required: \n        - id\n        - name\n        - createdAt\n        - avatarUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 29\n        name:\n          type: string\n          example: 'Daniel Bonifacio'\n        avatarUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2017-03-04T00:12:45Z'\n    EditorDetailed:\n      description: 'Editor (usuário) detalhado contém todos os dados.'\n      type: object\n      required:\n        - id\n        - name\n        - bio\n        - createdAt\n        - skills\n        - location\n        - avatarUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 29\n        name:\n          type: string\n          example: 'Daniel Bonifacio'\n        avatarUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        bio:\n          type: string\n          example: 'Gosta de JavaScript.'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        location:\n          $ref: '#/components/schemas/Location'\n        skills:\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/Skill'\n\n    PostSummary:\n      type: object\n      required: \n       - id\n       - slug\n       - title\n       - editor\n       - createdAt\n       - updatedAt\n       - published\n       - tags\n       - canBePublished\n       - canBeUnpublished\n       - canBeDeleted\n       - canBeEdited\n       - imageUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: '42'\n        slug:\n          type: string\n          example: 'como-fazer-x-coisas-com-react-js'\n        title:\n          type: string\n          example: 'Como fazer X coisas com React.js'\n        imageUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        editor:\n          $ref: '#/components/schemas/EditorSummary'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-12-04T00:12:45-03:00'\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-12-05T00:12:45-03:00'\n        published:\n          type: boolean\n          example: true\n        tags:\n          type: array\n          items:\n            type: string\n            example: 'JavaScript'\n        canBePublished:\n          type: boolean\n          description: Se o usuário autenticado pode ou não publicar o post\n          example: true\n        canBeUnpublished:\n          type: boolean\n          description: Se o usuário autenticado pode ou não despublicar o post\n          example: true\n        canBeDeleted:\n          type: boolean\n          description: Se o usuário autenticado pode ou não remover o post\n          example: true\n        canBeEdited:\n          type: boolean\n          description: Se o usuário autenticado pode ou não editar o post\n          example: true\n    PostDetailed:\n      type: object\n      required: \n       - id\n       - editor\n       - slug\n       - title\n       - body\n       - tags\n       - createdAt\n       - published\n       - updatedAt\n       - updatedBy\n       - canBePublished\n       - canBeUnpublished\n       - canBeDeleted\n       - canBeEdited\n       - imageUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 45\n        editor:\n          $ref: '#/components/schemas/EditorSummary'\n        slug:\n          type: string\n          example: 'como-fazer-x-coisas-com-react-js'\n        title:\n          type: string\n          example: 'Como fazer X coisas com React.js'\n        imageUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        body:\n          type: string\n          description: Corpo do post em formato Markdown\n          example: \u003e\n            Olá, hoje eu vou **mostrar** a como fazer X coisas com `react.js`\n        tags:\n          type: array\n          items:\n            type: string\n            example: 'JavaScript'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2017-03-04T00:12:45-03:00'\n        earnings:\n          $ref: '#/components/schemas/PostEarnings'\n        published:\n          type: boolean\n          example: true\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        updatedBy:\n          $ref: '#/components/schemas/UserMinimal'\n        canBePublished:\n          type: boolean\n          description: Se o usuário autenticado pode ou não publicar o post\n          example: true\n        canBeUnpublished:\n          type: boolean\n          description: Se o usuário autenticado pode ou não despublicar o post\n          example: true\n        canBeDeleted:\n          type: boolean\n          description: Se o usuário autenticado pode ou não remover o post\n          example: true\n        canBeEdited:\n          type: boolean\n          description: Se o usuário autenticado pode ou não editar o post\n          example: true\n    PostWithEarnings:\n      type: object\n      required:\n        - id\n        - title\n        - createdAt\n        - earnings\n        - published\n        - imageUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 45\n        title:\n          type: string\n          example: 'Como fazer X coisas com React.js'\n        imageUrls:\n          $ref: '#/components/schemas/ImageUrls'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2017-03-04T00:12:45-03:00'\n        earnings:\n          $ref: '#/components/schemas/PostEarnings'\n        published:\n          type: boolean\n          example: true\n    PostInput:\n      type: object\n      required:\n        - title\n        - body\n        - tags\n        - imageUrl\n      properties:\n        title:\n          type: string\n          example: 'Como fazer X coisas com React.js'\n          maxLength: 255\n        imageUrl:\n          type: string\n          example: 'como-fazer-x-coisas-com-react-js-cover.png'\n        body:\n          type: string\n          description: Este campo retornará uma string marcada utilizando markdown\n          example: \u003e\n            Olá, hoje eu vou **mostrar** a como fazer X coisas com `react.js`\n          minLength: 1\n        tags:\n          type: array\n          items:\n            type: string\n            example: 'JavaScript'\n    PostsPaginated:\n      allOf:\n        - $ref: '#/components/schemas/Page'\n        - type: object\n          properties:\n            content:\n              type: array\n              items:\n                $ref: '#/components/schemas/PostSummary'\n\n    PaymentInput:\n      type: object\n      required:\n        - payee\n        - accountingPeriod\n        - scheduledTo\n      properties:\n        payee:\n          type: object\n          $ref: '#/components/schemas/UserIdInput'\n        accountingPeriod:\n          $ref: '#/components/schemas/Period'\n        bonuses:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Bonus'\n        scheduledTo:\n          type: string\n          format: date\n          example: '2020-12-02'\n    PaymentPreviewInput:\n      type: object\n      required:\n        - payee\n        - accountingPeriod\n      properties:\n        payee:\n          type: object\n          $ref: '#/components/schemas/UserIdInput'\n        accountingPeriod:\n          $ref: '#/components/schemas/Period'\n        bonuses:\n          type: array\n          uniqueItems: true\n          minItems: 0\n          items:\n            $ref: '#/components/schemas/Bonus'\n    PaymentPreview:\n      type: object\n      required:\n        - accountingPeriod\n        - payee\n        - earnings\n        - grandTotalAmount\n        - bankAccount\n        - bonuses\n      properties:\n        accountingPeriod:\n          $ref: '#/components/schemas/Period'\n        payee:\n          $ref: '#/components/schemas/UserMinimal'\n        earnings:\n          $ref: '#/components/schemas/PaymentEarnings'\n        bonuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Bonus'\n        grandTotalAmount:\n          type: number\n          example: 1645.74\n        bankAccount:\n          $ref: '#/components/schemas/BankAccount'\n    PaymentDetailed:\n      type: object\n      required:\n        - id\n        - accountingPeriod\n        - payee\n        - earnings\n        - grandTotalAmount\n        - bankAccount\n        - createdBy\n        - createdAt\n        - scheduledTo\n        - updatedAt\n        - updatedBy\n        - approvedAt\n        - bonuses\n        - approvedBy\n        - canBeDeleted\n        - canBeApproved\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 332\n        accountingPeriod:\n          $ref: '#/components/schemas/Period'\n        payee:\n          $ref: '#/components/schemas/UserMinimal'\n        earnings:\n          $ref: '#/components/schemas/PaymentEarnings'\n        bonuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Bonus'\n        grandTotalAmount:\n          type: number\n          example: 1645.74\n        bankAccount:\n          $ref: '#/components/schemas/BankAccount'\n        createdBy:\n          $ref: '#/components/schemas/UserMinimal'\n        approvedBy:\n          $ref: '#/components/schemas/UserMinimal'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2017-03-04T00:12:45-03:00'\n        scheduledTo:\n          type: string\n          format: date\n          example: '2020-12-02'\n        approvedAt:\n          type: string\n          format: date-time\n          example: '2017-03-04T00:12:45-03:00'\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        updatedBy:\n          $ref: '#/components/schemas/UserMinimal'\n        canBeApproved:\n          type: boolean\n          description: Se o usuário autenticado pode ou não aprovar o pagamento\n          example: true\n        canBeDeleted:\n          type: boolean\n          description: Se o usuário autenticado pode ou não remover o pagamento\n    PaymentSummary:\n      type: object\n      required:\n        - id\n        - accountingPeriod\n        - payee\n        - grandTotalAmount\n        - scheduledTo\n        - approvedAt\n        - canBeDeleted\n        - canBeApproved\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 332\n        grandTotalAmount:\n          type: number\n          example: 1938.33\n        accountingPeriod:\n          $ref: '#/components/schemas/Period'\n        payee:\n          $ref: '#/components/schemas/UserMinimal'\n        approvedAt:\n          type: string\n          format: date-time\n          example: '2020-12-01T00:12:45-03:00'\n        scheduledTo:\n          type: string\n          format: date\n          example: '2020-12-02'\n        canBeApproved:\n          type: boolean\n          description: Se o usuário autenticado pode ou não aprovar o pagamento\n          example: true\n        canBeDeleted:\n          type: boolean\n          description: Se o usuário autenticado pode ou não remover o pagamento\n          example: true\n    PaymentsPaginated:\n      allOf:\n        - $ref: '#/components/schemas/Page'\n        - type: object\n          properties:\n            content:\n              type: array\n              items:\n                $ref: '#/components/schemas/PaymentSummary'\n\n    CashFlowCategoryDetailed:\n      type: object\n      required:\n        - id\n        - name\n        - updatedAt\n        - updatedBy\n        - type\n        - createdAt\n        - createdBy\n        - canBeDeleted\n        - totalEntries\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 2\n        name:\n          type: string\n          example: 'Anúncios'\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        updatedBy:\n          $ref: '#/components/schemas/UserMinimal'\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        createdBy:\n          $ref: '#/components/schemas/UserMinimal'\n        totalEntries:\n          type: number\n          format: int64\n          example: 200\n        canBeDeleted:\n          type:  boolean\n          example: false\n    CashFlowCategorySummary:\n      type: object\n      required:\n        - id\n        - name\n        - type\n        - canBeDeleted\n        - totalEntries\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 2\n        name:\n          type: string\n          example: 'Anúncios'\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n        totalEntries:\n          type: number\n          format: int64\n          example: 200\n        canBeDeleted:\n          type:  boolean\n          example: false\n    CashFlowCategoryMinimal:\n      type: object\n      required:\n        - id\n        - name\n        - type\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 2\n        name:\n          type: string\n          example: 'Anúncios'\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n    CashFlowCategoryInput:\n      type: object\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: string\n          example: 'Anúncios'\n          maxLength: 50\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n    CashFlowCategoryIdInput:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: number\n          format: int64\n          example: 23\n    CashFlowEntryType:\n      type: string\n      example: 'REVENUE'\n      enum:\n        - 'REVENUE'\n        - 'EXPENSE'\n    CashFlowEntrySummary:\n      type: object\n      required:\n        - id\n        - type\n        - transactedOn\n        - amount\n        - category\n        - description\n        - systemGenerated\n        - canBeDeleted\n        - canBeEdited\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 332\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n        transactedOn:\n          type: string\n          format: date\n          example: '2020-12-01'\n        amount:\n          type: number\n          example: 3700.0\n        category:\n          $ref: '#/components/schemas/CashFlowCategoryMinimal'\n        description:\n          type: string\n          example: 'Anúncio em postagem - Ipiranga'\n        systemGenerated:\n          type: boolean\n          example: false\n        canBeDeleted:\n          type:  boolean\n          example: false\n        canBeEdited:\n          type:  boolean\n          example: false\n    CashFlowEntryDetailed:\n      type: object\n      required:\n        - id\n        - type\n        - transactedOn\n        - amount\n        - category\n        - description\n        - systemGenerated\n        - createdBy\n        - createdAt\n        - updatedBy\n        - updatedAt\n        - canBeDeleted\n        - canBeEdited\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 332\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n        transactedOn:\n          type: string\n          format: date\n          example: '2020-12-01'\n        amount:\n          type: number\n          example: 3700.0\n        category:\n          $ref: '#/components/schemas/CashFlowCategoryMinimal'\n        description:\n          type: string\n          example: 'Anúncio em postagem - Ipiranga'\n        systemGenerated:\n          type: boolean\n          example: false\n        createdBy:\n          $ref: '#/components/schemas/UserMinimal'\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-12-30T00:12:45-03:00'\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-03-04T00:12:45-03:00Z'\n        updatedBy:\n          $ref: '#/components/schemas/UserMinimal'\n        canBeDeleted:\n          type:  boolean\n          example: false\n        canBeEdited:\n          type:  boolean\n          example: false\n    CashFlowEntryInput:\n      type: object\n      required:\n        - type\n        - transactedOn\n        - amount\n        - category\n        - description\n      properties:\n        type:\n          $ref: '#/components/schemas/CashFlowEntryType'\n        transactedOn:\n          type: string\n          format: date\n          example: '2020-12-01'\n        amount:\n          type: number\n          example: 3700.0\n          format: double\n          minimum: 0.01\n        category:\n          type: object\n          $ref: '#/components/schemas/CashFlowCategoryIdInput'\n        description:\n          type: string\n          example: 'Anúncio em postagem - Ipiranga'\n          maxLength: 255\n\n    MonthlyRevenuesExpensesChartjs:\n      type: object\n      required:\n       - datasets\n      properties:\n        datasets:\n          type: array\n          items:\n            type: object\n            required:\n              - label\n              - data\n            properties:\n              label:\n                type: string\n                enum: ['Receita', 'Despesa']\n                example: Receita\n              data:\n                type: array\n                items:\n                  type: number\n                  example: [254587, 325478, 451758, 325875, 521745, 452140, 354751, 658430]\n        labels:\n          type: array\n          items:\n            type: string\n            example: [Janeiro de 2021, Fevereiro de 2021, Março de 2021, Abril de 2021, Maio de 2021, Junho de 2021, Julho de 2021, Agosto de 2021]\n      example:\n        datasets:\n          - label: 'Receita'\n            data: [254587, 325478, 451758, 325875, 521745, 452140, 354751, 658430, 702741, 344553, 700343, 1125145]\n          - label: 'Despesa'\n            data: [554720, 500000, 450000, 200000, 200000, 200000, 200000, 400000, 100000, 150000, 200000, 700000]\n        labels: [Janeiro de 2021, Fevereiro de 2021, Março de 2021, Abril de 2021, Maio de 2021, Junho de 2021, Julho de 2021, Agosto de 2021]\n    MonthlyRevenuesExpenses:\n      type: array\n      items:\n          type: object\n          required:\n            - yearMonth\n            - totalRevenues\n            - totalExpenses\n          properties:\n            yearMonth:\n              type: string\n              format: yyyy-mm\n              example: 2020-01\n            totalRevenues:\n              type: number\n              example: 3243.23\n            totalExpenses:\n              type: number\n              example: 2445.94\n    EditorMonthlyEarnings:\n      type: array\n      items:\n          type: object\n          required:\n            - yearMonth\n            - totalAmount\n            - totalPlatformAverageAmount\n          properties:\n            yearMonth:\n              type: string\n              format: yyyy-mm\n              example: 2020-01\n            totalAmount:\n              type: number\n              example: 3243.23\n            totalPlatformAverageAmount:\n              type: number\n              example: 2445.94\n\n    EditorTagRatio:\n      type: array\n      items:\n          type: object\n          required:\n            - tagName\n            - percentage\n          properties:\n            tagName:\n              type: string\n              example: 'Javascript'\n            percentage:\n              type: number\n              example: 50.20\n    ImageUrls:\n      type: object\n      required:\n        - default\n        - small\n        - medium\n        - large\n      properties:\n        default:\n          type: string\n          format: uri\n          example: 'https://storage.googleapis.com/alganews-files/posts/avatar-joao.jpeg'\n        small:\n          type: string\n          format: uri\n          example: 'https://storage.googleapis.com/alganews-files/posts/avatar-joao-small.jpeg'\n        medium:\n          type: string\n          format: uri\n          example: 'https://storage.googleapis.com/alganews-files/posts/avatar-joao-medium.jpeg'\n        large:\n          type: string\n          format: uri\n          example: 'https://storage.googleapis.com/alganews-files/posts/avatar-joao-large.jpeg'\n    Bonus:\n      type: object\n      required:\n        - title\n        - amount\n      properties:\n        title:\n          type: string\n          maxLength: 50\n          example: '1kk views em 1 dia'\n        amount:\n          type: number\n          example: 1500\n          format: double\n          minimum: 0.01\n    Location:\n      type: object\n      required:\n        - country\n        - state\n        - city\n      properties:\n        country:\n          type: string\n          example: 'Brasil'\n          maxLength: 50\n        state:\n          type: string\n          example: 'Espírito Santo'\n          maxLength: 50\n        city:\n          type: string\n          example: 'Vila Velha'\n          maxLength: 255\n    Skill:\n      type: object\n      required:\n        - name\n        - percentage\n      properties:\n        name:\n          type: string\n          example: 'JavaScript'\n          maxLength: 50\n        percentage:\n          type: number\n          example: 95\n          minimum: 0\n          maximum: 100\n    BankAccount:\n      type: object\n      required:\n        - bankCode\n        - agency\n        - number\n        - digit\n        - type\n      properties:\n        bankCode:\n          type: string\n          example: '001'\n          minLength: 3\n          maxLength: 3\n        agency:\n          type: string\n          example: '0001'\n          minLength: 1\n          maxLength: 10\n        number:\n          type: string\n          example: '254856'\n          minLength: 1\n          maxLength: 20\n        digit:\n          type: string\n          example: '5'\n          minLength: 1\n          maxLength: 1\n        type:\n          type: string\n          enum:\n            - 'SAVING'\n            - 'CHECKING'\n          description: \u003e\n            Tipos de contas:\n             * `SAVING` - Conta poupança\n             * `CHECKING` - Conta corrente\n    Role:\n      type: string\n      example: 'EDITOR'\n      enum:\n        - 'EDITOR'\n        - 'ASSISTANT'\n        - 'MANAGER'\n      description: \u003e\n        Tipos de perfis:\n          * `EDITOR` - Editor de conteúdo\n          * `ASSISTANT` - Auxiliar de recursos humanos e administração\n          * `MANAGER` - Gerente da plataforma\n    PostEarnings:\n      type: object\n      required:\n        - pricePerWord\n        - words\n        - totalAmount\n      properties:\n        pricePerWord:\n          type: number\n          example: 0.06\n          format: double\n        words:\n          type: integer\n          example: 2429\n        totalAmount:\n          type: number\n          example: 145.74\n    PaymentEarnings:\n      type: object\n      required:\n       - words\n       - totalAmount\n      properties:\n        words:\n          type: integer\n          example: 2429\n        totalAmount:\n          type: number\n          example: 145.74\n    Period:\n      type: object\n      required:\n        - startsOn\n        - endsOn\n      properties:\n        startsOn:\n          type: string\n          format: date\n          example: '2020-11-01'\n        endsOn:\n          type: string\n          format: date\n          example: '2020-11-31'\n\n    UploadRequestInput:\n      type: object\n      required:\n        - fileName\n        - contentLength\n      properties:\n        fileName:\n          type: string\n          example: 6832112f-e994-4f75-8ca0-aa88734241ff.png\n        contentLength:\n          type: integer\n          example: 1000000\n    UploadRequest:\n      type: object\n      required:\n        - uploadSignedUrl\n      properties:\n        uploadSignedUrl:\n          type: string\n          format: uri\n          example: https://storage.googleapis.com/alganews-tmp/tmp/foto.png?X-Goog-Algorithm=GOOG4-RSA-SHA256\u0026X-Goog-Credential=834856092418-compute%40developer.gserviceaccount.com%2F20210301%2Fauto%2Fstorage%2Fgoog4_request\u0026X-Goog-Date=20210301T155344Z\u0026X-Goog-Expires=900\u0026X-Goog-SignedHeaders=content-length%3Bcontent-type%3Bhost\u0026X-Goog-Signature=0864c1ce28319c7b4cb830bb5d57be86d6292bb073fe7f4b2882b7754d6657f8c9b7cae69fb0bc0010e634d4e8ea65e092839a18971513495512044aefbb61437e09714626f59444acbce1e222f0f7a1a7b2d375c40036599d4ae28ee5fa881f1e72603007f560cbcf11295b8522fdb217a7564333e6623f8d23406f1446cbd0db5587fc0a9da8f00c23b18eeaa31bd24204f1d051d735a4b6f819f8d703eabffab8ce6f6676c31cd884fd6f3a530b4aef2f2cc8c7c74fde56fae049d203f6b318fbdd94fe326a11e0152fcce2a016eea9e7cef15720f8333320aed719fa8277c56a5c1ae79f7e2e483da39acf14e5775938263341c3c4e8df6148ccbd0fd474\n\n    Page:\n      type: object\n      required:\n        - page\n        - size\n        - totalPages\n        - totalElements\n        - content\n      properties:\n        page:\n          type: integer\n          format: int32\n          example: 2\n        size:\n          type: number\n          format: int32\n          example: 9\n        totalPages:\n          type: integer\n          format: int32\n          example: 15\n        totalElements:\n          type: number\n          format: int32\n          example: 442\n    ProblemObject:\n      type: object\n      required:\n        - type\n        - userMessage\n      properties:\n        name:\n          type: string\n          example: amount\n        userMessage:\n          type: string\n          example: O valor é obrigatório\n      title: ProblemObject\n    Problem:\n      title: Problem\n      type: object\n      required:\n        - status\n        - timestamp\n        - type\n        - title\n        - detail\n      description: \u003e\n        Representa um problema na comunicação com a API.\n        Este modelo de representação é baseado na RFC 7807 (Problem Details for HTTP APIs)\n      properties:\n        status:\n          type: integer\n          format: int32\n          example: 400\n        timestamp:\n          type: string\n          format: date-time\n          example: '2020-12-01T18:09:02Z'\n        type:\n          type: string\n          example: 'https://alganews.com.br/dados-invalidos'\n        title:\n          type: string\n          example: Dados inválidos\n        detail:\n          type: string\n          example: Um ou mais campos estão inválidos. Faça o preenchimento correto e tente novamente.\n        # userMessage:\n        #   type: string\n        #   example: Um ou mais campos estão inválidos. Faça o preenchimento correto e tente novamente.\n        objects:\n          type: array\n          description: Lista de objetos ou campos que geraram o erro (opcional)\n          items:\n            $ref: '#/components/schemas/ProblemObject'\n\nsecurity:\n  - HttpBearer: []\n  - OAuth2Local: []\n  - OAuth2Production: []\n\ntags:\n  - name: Users\n    description: Usuários\n  - name: Posts\n    description: Posts\n  - name: Payroll\n    description: Folha de pagamentos\n  - name: Cash Flow\n    description: Fluxo de caixa\n  - name: Metrics\n    description: Métricas\n  - name: Files\n    description: Arquivos\n"
		}
	},
	"Error": "callback: json: cannot unmarshal number 0.01 into Go struct field Schema.minimum of type int64"
}