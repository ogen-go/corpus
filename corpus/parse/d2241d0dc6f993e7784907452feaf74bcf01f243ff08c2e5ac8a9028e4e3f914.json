{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "EnvironmentalContext.yaml",
			"size": 0,
			"path": "Specification/GA4GH_BrAPI/GenotypePhenotypeService/Schemas/EnvironmentalContext.yaml",
			"byteSize": 913,
			"content": "components:\n  schemas:\n    EnvironmentalContext:\n      description: |-\n        The context in which a genotype gives rise to a phenotype.\n        This is fairly open-ended; as a stub we have a simple ontology term.\n        For example, a controlled term for a drug, or perhaps an instance of a\n        complex environment including temperature and air quality, or perhaps\n        the anatomical environment (gut vs tissue type vs whole organism).\n      properties:\n        description:\n          title: |-\n            A textual description of the environment. This is used to complement\n            the structured description in the environmentType field\n          type: string\n        environment_type:\n          $ref: '#/components/schemas/OntologyTerm'\n        id:\n          description: The Environment ID.\n          type: string\n      type: object\ninfo:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@5252d84f331840650fffbca6cb8cece10a65cea6/-/blob/Specification/GA4GH_BrAPI/GenotypePhenotypeService/Schemas/EnvironmentalContext.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/5252d84f331840650fffbca6cb8cece10a65cea6/Specification/GA4GH_BrAPI/GenotypePhenotypeService/Schemas/EnvironmentalContext.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"EnvironmentalContext\": parse schema: property \"environment_type\": parse schema: resolve \"#/components/schemas/OntologyTerm\": find schema: resolve \"#/components/schemas/OntologyTerm\": can't find value for \"components/schemas/OntologyTerm\""
}