{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/optim-corp/cios-golang-sdk"
		},
		"file": {
			"name": "pubsub.openapi.yml",
			"size": 0,
			"path": "openapi/openapis/pubsub.openapi.yml",
			"byteSize": 14200,
			"content": "openapi: \"3.0.3\"\ninfo:\n  version: 1.0.0\n  description: a\n  title: Cios Pub/Sub Openapi\n\npaths:\n  '/v2/channels':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/name_query\"\n        - $ref: \"../components/parameters.yml#/components/parameters/resource_owner_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/label\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_protocol\"\n        - $ref: \"../components/parameters.yml#/components/parameters/limit\"\n        - $ref: \"../components/parameters.yml#/components/parameters/offset\"\n        - $ref: \"../components/parameters.yml#/components/parameters/order\"\n        - $ref: \"../components/parameters.yml#/components/parameters/order_by\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_public\"\n        - $ref: \"../components/parameters.yml#/components/parameters/messaging_enabled\"\n        - $ref: \"../components/parameters.yml#/components/parameters/datastore_enabled\"\n        - $ref: \"../components/parameters.yml#/components/parameters/messaging_persisted\"\n\n      operationId: getChannels\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleChannel\"\n      security:\n        - bearerAuth: [ ]\n    post:\n      tags:\n        - PublishSubscribe\n      operationId: createChannel\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/ChannelProposal\"\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/SingleChannel\"\n      security:\n        - bearerAuth: [ ]\n  '/v2/channels/{channel_id}':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/lang\"\n        - $ref: \"../components/parameters.yml#/components/parameters/is_dev\"\n      operationId: getChannel\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/SingleChannel\"\n      security:\n        - bearerAuth: [ ]\n    patch:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/ChannelUpdateProposal\"\n      operationId: updateChannel\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleChannel\"\n      security:\n        - bearerAuth: [ ]\n    delete:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n      operationId: deleteChannel\n      responses:\n        200:\n          description: 'OK'\n      security:\n        - bearerAuth: [ ]\n  '/v2/messaging':\n    post:\n      tags:\n        - PublishSubscribe\n      operationId: publishMessage\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/packer_format\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_query_required\"\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema: { }\n          application/octet-stream:\n            schema:\n              type: string\n              format: byte\n          text/plain:\n            schema:\n              type: string\n          application/xml:\n            schema:\n              type: object\n      responses:\n        200:\n          description: 'OK'\n      security:\n        - bearerAuth: [ ]\n    get:\n      tags:\n        - PublishSubscribe\n      operationId: subscribeMessage\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/packer_format\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_query_required\"\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_protocol_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/limit\"\n        - $ref: \"../components/parameters.yml#/components/parameters/offset\"\n        - $ref: \"../components/parameters.yml#/components/parameters/order\"\n        - $ref: \"../components/parameters.yml#/components/parameters/order_by\"\n\n      operationId: getDataStoreChannels\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreChannel\"\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels/{channel_id}':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n      operationId: getDataStoreChannel\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/SingleDataStoreChannel\"\n      security:\n        - bearerAuth: [ ]\n    delete:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n      operationId: deleteDataStoreChannel\n      responses:\n        200:\n          description: 'OK'\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels/{channel_id}/objects':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/session_id_query\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_protocol_version\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_protocol_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/label\"\n        - $ref: \"../components/parameters.yml#/components/parameters/location\"\n        - $ref: \"../components/parameters.yml#/components/parameters/location_range\"\n        - $ref: \"../components/parameters.yml#/components/parameters/timestamp\"\n        - $ref: \"../components/parameters.yml#/components/parameters/timestamp_range\"\n        - $ref: \"../components/parameters.yml#/components/parameters/ascending\"\n        - $ref: \"../components/parameters.yml#/components/parameters/offset\"\n        - $ref: \"../components/parameters.yml#/components/parameters/limit\"\n      operationId: getDataStoreObjects\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreObject\"\n      security:\n        - bearerAuth: [ ]\n    post:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_protocol_id\"\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_protocol_version\"\n        - $ref: \"../components/parameters.yml#/components/parameters/session_id_query\"\n        - $ref: \"../components/parameters.yml#/components/parameters/location\"\n        - $ref: \"../components/parameters.yml#/components/parameters/timestamp\"\n      operationId: createDataStoreObject\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/SingleDataStoreObject\"\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels/{channel_id}/objects/{object_id}':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/object_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/packer_format\"\n      operationId: getDataStoreObjectData\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema: { }\n            text/plain:\n              schema:\n                type: string\n      security:\n        - bearerAuth: [ ]\n    delete:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/object_id_required\"\n      operationId: deleteDataStoreObjectData\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreObject\"\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels/{channel_id}/object_latest':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/packer_format\"\n      operationId: getDataStoreObjectDataLatest\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema: { }\n            application/xml:\n              schema: { }\n            text/plain:\n              schema:\n                type: string\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/objects_latest':\n    post:\n      tags:\n        - PublishSubscribe\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/Ids\"\n      operationId: getDataStoreMultiObjectDataLatest\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreDataLatest\"\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels/{channel_id}/sessions':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/timestamp\"\n        - $ref: \"../components/parameters.yml#/components/parameters/timestamp_range\"\n        - $ref: \"../components/parameters.yml#/components/parameters/location_range\"\n        - $ref: \"../components/parameters.yml#/components/parameters/location\"\n        - $ref: \"../components/parameters.yml#/components/parameters/ascending\"\n        - $ref: \"../components/parameters.yml#/components/parameters/offset\"\n        - $ref: \"../components/parameters.yml#/components/parameters/limit\"\n      operationId: getDataStoreSessions\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/MultipleSession\"\n      security:\n        - bearerAuth: [ ]\n  '/v2/datastore/channels/{channel_id}/sessions/{session_id}':\n    get:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/session_id_required\"\n      operationId: getDataStoreSession\n      responses:\n        200:\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: \"../components/publishsublish-component.openapi.yml#/components/schemas/SingleSession\"\n      security:\n        - bearerAuth: [ ]\n    delete:\n      tags:\n        - PublishSubscribe\n      parameters:\n        - $ref: \"../components/parameters.yml#/components/parameters/channel_id_required\"\n        - $ref: \"../components/parameters.yml#/components/parameters/session_id_required\"\n      operationId: deleteDataStoreSession\n      responses:\n        200:\n          description: 'OK'\n      security:\n        - bearerAuth: [ ]\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v2/channels: get: operation \"getChannels\": parameters: parse parameter \"\": resolve \"../components/parameters.yml#/components/parameters/name_query\" reference: invalid parameter reference"
}