{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "smartapi.yaml",
			"size": 0,
			"path": "DISEASES/smartapi.yaml",
			"byteSize": 15088,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  contact:\n    email: help@biothings.io\n    name: BioThings Team\n    x-id: https://github.com/biothings\n    x-role: responsible developers\n  description: Documentation of the DISEASES query web services.\n  termsOfService: https://biothings.io/about\n  title: DISEASES API\n  version: '1.0'\n  x-translator:\n    infores: \"infores:biothings-diseases\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/DISEASES\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/DISEASES\n  x-maturity: production\ntags:\n- name: gene\n- name: disease\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/disease/{id}\":\n    get:\n      parameters:\n      - name: id\n        in: path\n        required: true\n        example: \"DOID:2987\"\n        ## has prefix, DOID IDs\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: \"Success\"\n      #     content:\n      #       application/json:\n      #         schema:\n      #           $ref: '#/components/schemas/Disease'\n      #   '404':\n      #     description: A response indicating an unknown Disease ID\n      # summary: Retrieve Disease objects based on ID\n      tags:\n      - disease\n  \"/disease\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n            ## has prefix, DOID IDs\n              ids:\n              - \"DOID:2987\"\n              - \"DOID:4645\"\n            schema:\n              type: object\n              properties:\n                ids:\n                  description: 'multiple Disease IDs separated by comma. Note that\n                    currently we only take the input ids up to 1000 maximum, the rest\n                    will be omitted. Type: string (list). Max: 1000.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: \"Success\"\n      tags:\n      - disease\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/dev\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/search\"\n      - \"$ref\": \"#/components/parameters/prefix\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data fields available from a record\n      tags:\n      - metadata\n  \"/query\":\n    get:\n      parameters:\n      - name: q\n        description: Query string.\n        in: query\n        required: true\n        example: DISEASES.doid:\"DOID:2987\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/aggs\"\n      - \"$ref\": \"#/components/parameters/facet_size\"\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/userquery\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/explain\"\n      - \"$ref\": \"#/components/parameters/fetch_all\"\n      - \"$ref\": \"#/components/parameters/scroll_id\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make queries and return matching gene hits. Supports JSONP and CORS\n      #   as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - name: q\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: scopes\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n            default:\n            - _id\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              q:\n              - \"DOID:2987\"\n              - \"DOID:4645\"\n              scopes:\n              - \"DISEASES.doid\"\n            schema:\n              type: object\n              properties:\n                q:\n                  type: array\n                  items:\n                    type: string\n                scopes:\n                  type: array\n                  items:\n                    type: string\n                from:\n                  type: integer\n                sort:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make batch gene queries and return matching gene hits\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - \"$ref\": \"#/components/x-bte-kgs-operations/disease-gene\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/gene-disease\"\ncomponents:\n  parameters:\n    _sorted:\n      name: _sorted\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: true\n    _source:\n      name: _source\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    aggs:\n      name: aggs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    allow_null:\n      name: allow_null\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    always_list:\n      name: always_list\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    dev:\n      name: dev\n      in: query\n      required: false\n      schema:\n        type: boolean\n    dotfield:\n      name: dotfield\n      in: query\n      required: false\n      schema:\n        type: boolean\n    explain:\n      name: explain\n      in: query\n      required: false\n      schema:\n        type: boolean\n    facet_size:\n      name: facet_size\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 10\n    fetch_all:\n      name: fetch_all\n      in: query\n      required: false\n      schema:\n        type: boolean\n    format:\n      name: format\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      required: false\n      schema:\n        type: string\n        default: json\n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n    prefix:\n      name: prefix\n      in: query\n      required: false\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      required: false\n      schema:\n        type: boolean\n    rawquery:\n      name: rawquery\n      in: query\n      required: false\n      schema:\n        type: boolean\n    scroll_id:\n      name: scroll_id\n      in: query\n      required: false\n      schema:\n        type: string\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n    size:\n      name: size\n      description: \"default: 10 objects/records in response\"\n      in: query\n      required: false\n      schema:\n        type: integer\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    userquery:\n      name: userquery\n      in: query\n      required: false\n      schema:\n        type: string\n  # schemas:\n  #   Disease:\n  #     properties:\n  #       _id:\n  #         type: string\n  #     required:\n  #     - _id\n  #     type: object\n  #   ErrorResult:\n  #     properties:\n  #       message:\n  #         type: string\n  #       success:\n  #         type: boolean\n  #     type: object\n  #   QueryPOSTResult:\n  #     items:\n  #       allOf:\n  #       - \"$ref\": \"#/components/schemas/Disease\"\n  #       - properties:\n  #           _score:\n  #             format: float\n  #             type: number\n  #           query:\n  #             type: string\n  #         type: object\n  #     type: array\n  #   QueryResult:\n  #     properties:\n  #       hits:\n  #         items:\n  #           \"$ref\": \"#/components/schemas/Disease\"\n  #         type: array\n  #       max_score:\n  #         format: float\n  #         type: number\n  #       took:\n  #         type: integer\n  #       total:\n  #         type: integer\n  #     type: object\n  #   int64_or_array:\n  #     oneOf:\n  #     - items:\n  #         format: int64\n  #         type: integer\n  #       type: array\n  #     - format: int64\n  #       type: integer\n  #   string_or_array:\n  #     oneOf:\n  #     - items:\n  #         type: string\n  #       type: array\n  #     - type: string\n  x-bte-kgs-operations:\n  ## look here for more details: https://diseases.jensenlab.org/Entity?order=textmining,knowledge,experiments\u0026textmining=10\u0026knowledge=10\u0026experiments=10\u0026type1=9606\u0026type2=-26\u0026id1=ENSP00000298910\n  ## odd that no publications are in our API but perhaps one can see it in the website?  \n    disease-gene:\n    - supportBatch: true\n      useTemplating: true\n      inputs:\n      - id: DOID\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{{ queryInputs }}\"   ## HAS PREFIX\n          scopes: DISEASES.doid\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: ENSEMBL\n        semantic: Gene\n      parameters:\n      ## no prefix on output\n        fields: \u003e-\n          DISEASES.associatedWith.ensembl,\n          DISEASES.associatedWith.category,\n          DISEASES.associatedWith.confidence,\n          DISEASES.associatedWith.zscore,\n          DISEASES.associatedWith.source,\n          DISEASES.associatedWith.evidence\n        size: 1000  ## size limit; adding just in case\n      predicate: condition_associated_with_gene\n      ## can't be more specific because all data for the disease will be returned\n      ##   (can't restrict based on DISEASES.associatedWith.category == \"knowledge\" vs \"textmining\")\n      source: \"infores:diseases\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/disease-gene\"\n      # testExamples:\n      #   - qInput: \"DOID:0060041\"     ## Autism spectrum disorder\n      #     oneOutput: \"ENSEMBL:ENSP00000482335\"    ## MAP7\n      ## should be able to see results with all 3 methods/combos of edge attributes\n    gene-disease:\n    - supportBatch: true\n      useTemplating: true\n      inputs:\n      - id: ENSEMBL\n        semantic: Gene\n      requestBody:\n        body:\n          q: \"{{ queryInputs }}\"   ## no prefix\n          scopes: DISEASES.associatedWith.ensembl\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: DOID\n        semantic: Disease\n      parameters:\n        fields: DISEASES.doid   ## HAS PREFIX\n        size: 1000              ## note size limit\n      predicate: gene_associated_with_condition\n      ## can't be more specific because all data for the disease will be returned\n      ##   (can't restrict based on DISEASES.associatedWith.category == \"knowledge\" vs \"textmining\")\n      source: \"infores:diseases\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/gene-disease\"\n      # testExamples:\n      #   - qInput: \"ENSEMBL:ENSP00000298910\"    ## LRRK2\n      #     oneOutput: \"DOID:1926\"               ## Gaucher disease\n  x-bte-response-mapping:\n    disease-gene:\n      ENSEMBL: DISEASES.associatedWith.ensembl  ## no prefix\n      ## how the knowledge was generated. Values seen so far are \"textmining\", \"knowledge\", \"experiments\"\n      method: DISEASES.associatedWith.category\n      ## all 3 methods show this value, higher is better\n      DISEASES_confidence_score: DISEASES.associatedWith.confidence\n      ## I'm only seen z-score for text-mined results\"\n      DISEASES_textmining_z-score: DISEASES.associatedWith.zscore\n      ## I see source for knowledge / experiments results\n      ##   for knowledge, I've seen: GHR, UniProtKB-KW, AmyCo\n      ##   for experiments, I've seen: DistiLD\n      source: DISEASES.associatedWith.source\n      ## I see evidence for knowledge / experiments results\n      ##   for knowledge, I've only seen \"CURATED\"\n      ##   for experiments, I see things like \"p-value = 3e-06\"\n      DISEASES_evidence: DISEASES.associatedWith.evidence\n    gene-disease:\n      DOID: DISEASES.doid  ## HAS PREFIX (DOID)\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/DISEASES/smartapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/DISEASES/smartapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /query: post: parameters: parse parameter \"scopes\": schema: parse schema: item: parse default: expected type \"string\", got \"array\""
}