{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ikeike443/inso-action"
		},
		"file": {
			"name": "orders.yaml",
			"size": 0,
			"path": "specs/orders.yaml",
			"byteSize": 3284,
			"content": "openapi: 3.0.0\ninfo:\n  version: '1.1'\n  title: Pizza Order API\n  license:\n    name: Apache 2.0\n  description: 'Pizza ordering APIs for Kong Summit: 2020'\n  contact:\n    name: Kong\nservers:\n  - url: 'http://mockbin.org/request'\n    description: mockbin\npaths:    \n  '/v1/order/{id}':\n    get:\n      summary: Fetches an order\n      tags:\n        - order\n      x-kong-plugin-mocking:\n        enabled: true\n        config:\n          api_specification_filename: orders.yaml     \n      responses:\n        '200':\n          description: Order object\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n              examples:\n                response:\n                  value:\n                    {\n                      \"id\": \"1\",\n                      \"name\": \"Joe Johnson\",\n                      \"address\": \"123 W. Division St.\",\n                      \"address2\": \"Apt 20E\",\n                      \"city\": \"Chicago\",\n                      \"pizzas\":[\n                        {\n                          \"description\": \"Large, all pepperoni, mushroom. Half onion\",\n                          \"size\": \"L\",\n                          \"toppings\": [\n                            {\"side\": \"B\", \"code\": \"P\"},\n                            {\"side\": \"B\", \"code\": \"M\"},\n                            {\"side\": \"R\", \"code\": \"O\"},\n                            {\"side\": \"R\", \"code\": \"S\"}\n                        ]                        \n                        },\n                        {\n                          \"description\": \"Small, all mushroom and spinach\",\n                          \"size\": \"S\",\n                          \"toppings\":[\n                            {\"side\": \"B\", \"code\": \"M\"},\n                            {\"side\": \"B\", \"code\": \"SP\"} \n                          ]                           \n                        }\n                      ]\n                    }          \n      description: \"Fetch an order\"\n      parameters:\n        - schema:\n            type: string\n            default: \"123\"\n          name: id\n          in: path\n          required: true\n          description: This is the order id\n          example: \"123\"\ncomponents:\n  schemas:\n    Topping:\n      properties:\n        side:\n          type: string\n          enum:\n          - L\n          - R\n          - B\n        code:\n          type: string\n          enum:\n          - P\n          - S\n          - SP\n          - M\n          - O\n          - GP\n    Pizza:\n      properties:\n        description:\n          type: string\n        size:\n          type: string\n          enum:\n          - S\n          - M \n          - L\n          - XL\n        toppings:\n          type: array\n          items: \n            $ref: \"#/components/schemas/Topping\"\n    Pizzas:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pizza\"\n    Order:\n      required:\n      - id\n      - name\n      - address\n      - city\n      - pizzas\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        address:\n          type: string\n        address2:\n          type: string\n        city:\n          type: string\n        pizzas:\n          type: Pizzas\n    Orders:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Order\"",
			"canonicalURL": "/github.com/ikeike443/inso-action@73ce84c2090ee926536203ae4f821a98c1e3ddcc/-/blob/specs/orders.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ikeike443/inso-action/blob/73ce84c2090ee926536203ae4f821a98c1e3ddcc/specs/orders.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Order\": parse schema: property \"pizzas\": at 1:189: parse schema: unexpected schema type: \"Pizzas\""
}