{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FIWARE/tutorials.Understanding-At-Context"
		},
		"file": {
			"name": "supermarket.yaml",
			"size": 0,
			"path": "supermarket.yaml",
			"byteSize": 11582,
			"content": "--- \ncomponents: \n  schemas: \n    Bell: \n      description: \"An alarm device or system of alarm devices gives an audible, visual or other form of alarm signal about a problem or condition\\n\"\n      properties: \n        ring: \n          format: command\n          type: string\n        ring_info: \n          type: string\n        ring_status: \n          type: string\n      type: object\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    Building: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/building.yaml#/Building\"\n      properties: \n        address: \n          allOf: \n            - \n              $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/schema.org.yaml#/PostalAddress\"\n          description: \"The mailing address.\\n\"\n          externalDocs: \n            url: \"https://schema.org/address\"\n          type: object\n          x-ngsi: \n            attr-type: Property\n            model: \"https://schema.org/address\"\n            properties: \n              verified: \n                description: \"Whether the address of the Store has been verified\"\n                type: boolean\n                x-ngsi: \n                  model: \"https://schema.org/Boolean\"\n                  type: Property\n                  uri: \"https://fiware.github.io/tutorials.Step-by-Step/schema/verified\"\n                  uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n            uri-prefix: \"https://schema.org/\"\n        furniture: \n          description: \"A list of Shelf Units found in the store\"\n          format: URL\n          type: string\n          x-ngsi: \n            model: \"https://schema.org/URL\"\n            type: Relationship\n            uri: \"https://fiware.github.io/tutorials.Step-by-Step/schema/furniture\"\n            uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n        humidity: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/saref-terms.yaml#/humidity\"\n        temperature: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/saref-terms.yaml#/temperature\"\n        tweets: \n          description: \"Tweets made by people within the Building\"\n          items: \n            type: string\n          type: array\n          x-ngsi: \n            model: \"https://schema.org/articleBody\"\n            type: Relationship\n            uri: \"https://fiware.github.io/tutorials.Step-by-Step/schema/tweets\"\n            uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    Categories: \n      description: \"\\n\\\n          ### Commercial\\n\\n\\\n          -   `commercial` -  A building where non-specific commercial activities take place, not necessarily an office building. Consider tagging the surrounding area using landuse=commercial. Use 'retail' if the building consists primarily of shops. \\n\\\n          -   `industrial` -  A building where some industrial process takes place. Use warehouse if the purpose is known to be primarily for storage/distribution. Consider using landuse=industrial for the surrounding area and the proposed industrial=* tag to describe the industrial activity. \\n\\\n          -   `kiosk area  A small one-room retail building. \\n\\\n          -   `office` -  An office building. Use building=office with office=* to describe the type of office. Consider tagging the surrounding area using landuse=commercial. Use 'retail' if the building consists primarily of shops. \\n\\\n          -   `retail` -  A building primarily used for selling goods that are sold to the public; use shop=* to identify the sort of goods sold or an appropriate amenity=* (pub, cafe, restaurant, etc.). Consider use landuse=retail for the surrounding area. \\n\\\n          -   `supermarket area  A building constructed to house a self-service large-area store.  \\n\\\n          -   `warehouse area  A building primarily used for the storage or goods or as part of a distribution system. \\n\"\n      enum: \n        - commercial\n        - industrial\n        - kiosk\n        - office\n        - retail\n        - supermarket\n        - warehouse\n      externalDocs: \n        url: \"https://wiki.openstreetmap.org/wiki/Map_Features#Building\"\n      type: string\n      x-ngsi: \n        uri-prefix: \"https://wiki.openstreetmap.org/wiki/Tag:building%3D\"\n    ControlledProperties: \n      description: \"-   `temperature` -   `humidity` -   `location` -   `motion` - `state`\"\n      enum: \n        - temperature\n        - humidity\n        - location\n        - motion\n        - luminiscence\n        - state\n      type: string\n      x-ngsi: \n        uri-prefix: \"https://w3id.org/saref#\"\n    Door: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/device.yaml#/Device\"\n      description: \"A smart door can be locked or unlockded remotely and reports the status of the door.\\n\"\n      properties: \n        close: \n          format: command\n          type: string\n        close_info: \n          type: string\n        close_status: \n          type: string\n        lock: \n          format: command\n          type: string\n        lock_info: \n          type: string\n        lock_status: \n          type: string\n        open: \n          format: command\n          type: string\n        open_info: \n          type: string\n        open_status: \n          type: string\n        state: \n          type: string\n        unlock: \n          format: command\n          type: string\n        unlock_info: \n          type: string\n        unlock_status: \n          type: string\n      type: object\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    Lamp: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/device.yaml#/Device\"\n      description: \"Smart lighting options include Wi-Fi light bulbs that can be controlled from an app on your smartphone to turn on and off, dim and even change the color of the bulb\\n\"\n      properties: \n        false: \n          format: command\n          type: string\n        luminiscence: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/saref-terms.yaml#/luminiscence\"\n        off_info: \n          type: string\n        off_status: \n          type: string\n        on_info: \n          type: string\n        on_status: \n          type: string\n        state: \n          type: string\n        true: \n          format: command\n          type: string\n      type: object\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    Motion: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/device.yaml#/Device\"\n      description: \"A motion detector is an electrical device that utilizes a sensor to detect nearby motion.\\n\"\n      properties: \n        motion: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/saref-terms.yaml#/motion\"\n      type: object\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    Person: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/Common\"\n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/schema.org.yaml#/Person\"\n    Product: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/Common\"\n      description: \"something sold in a Store\"\n      properties: \n        currency: \n          description: \"The currency used to price the product\"\n          type: string\n          x-ngsi: \n            attr-type: Property\n        name: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/name\"\n        price: \n          description: \"The price of the Product\"\n          type: number\n          x-ngsi: \n            attr-type: Property\n        size: \n          description: \"The size of the Product in T-Shirt sizing (S,M,L,XL etc.)\"\n          type: string\n          x-ngsi: \n            attr-type: Property\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    Shelf: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/Common\"\n      description: \"a unit of Store Furniture. Products are found on a shelf\"\n      properties: \n        locatedIn: \n          description: \"The Building that the Shelf Unit is located in.\"\n          type: string\n          x-ngsi: \n            attr-type: Relationship\n            properties: \n              installedBy: \n                description: \"The Person who installed the shelf\"\n                format: uri\n                type: string\n                x-ngsi: \n                  attr-type: Relationship\n              statusOfWork: \n                description: \"The status of the shelf installation (e.g. pending, in progress, completed)\"\n                type: string\n                x-ngsi: \n                  attr-type: EnumProperty\n        location: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/location\"\n        maxCapacity: \n          description: \"The maximum number of items the shelf can hold\"\n          x-ngsi: \n            attr-type: Property\n            type: integer\n        name: \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/name\"\n        numberOfItems: \n          description: \"The number of items of the product currently found on the shelf\"\n          type: integer\n          x-ngsi: \n            attr-type: Property\n        stocks: \n          description: \"The Product currently found on the Shelf Unit\"\n          format: uri\n          type: string\n          x-ngsi: \n            attr-type: Relationship\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    ShelfStatus: \n      description: \"`pending`, `inProgress`, `completed`\\n\"\n      enum: \n        - pending\n        - inProgress\n        - completed\n      type: string\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\n    StockOrder: \n      allOf: \n        - \n          $ref: \"https://fiware.github.io/tutorials.NGSI-LD/models/ngsi-ld.yaml#/Common\"\n      description: \"an entry in a list of items sold in one or more stores\"\n      properties: \n        orderDate: \n          description: \"The date the order was placed.\"\n          format: date-time\n          type: string\n          x-ngsi: \n            attr-type: Property\n        orderedProduct: \n          description: \"The product associated to this stock item\"\n          x-ngsi: \n            attr-type: Relationship\n        requestedBy: \n          description: \"The Person who created this StockOrder\"\n          x-ngsi: \n            attr-type: Relationship\n        requestedFor: \n          description: \"The id of the store this product is sold by\"\n          x-ngsi: \n            attr-type: Relationship\n        stockCount: \n          description: \"The number of items left in stock in the warehouse\"\n          type: integer\n          x-ngsi: \n            attr-type: Property\n      x-ngsi: \n        uri-prefix: \"https://fiware.github.io/tutorials.Step-by-Step/schema/\"\ninfo: \n  description: \"Data Models used within the FIWARE Supermarket Tutorial\"\n  title: Supermarket\n  version: \"1.0.0\"\nopenapi: \"3.0.0\"\npaths: \n  /ngsi-ld/v1/entities: \n    get: \n      responses: \n        ? \"200\"\n        : \n          content: \n            application/ld+json: \n              schema: \n                type: object\n          description: OK"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Motion\": parse schema: allOf: [0]: parse schema: resolve \"https://fiware.github.io/tutorials.NGSI-LD/models/device.yaml#/Device\": find schema: external base \"https://fiware.github.io/tutorials.NGSI-LD/models/device.yaml\" is not supported"
}