{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-core"
		},
		"file": {
			"name": "petstore-3.0-referred-schemas.json",
			"size": 0,
			"path": "modules/swagger-core/src/test/resources/specFiles/petstore-3.0-referred-schemas.json",
			"byteSize": 10904,
			"content": "{\n    \"openapi\": \"3.0.1\",\n    \"tags\": [\n        {\n            \"name\": \"pet\",\n            \"description\": \"Everything about your Pets\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\": \"user\",\n            \"description\": \"Operations about user\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\": \"store\",\n            \"description\": \"Access to Petstore orders\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        }\n    ],\n    \"paths\": {\n        \"/pet\": {\n            \"put\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\": \"Update an existing pet\",\n                \"operationId\": \"updatePet\",\n                \"requestBody\": {\n                    \"description\": \"Pet object that needs to be added to the store\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/RefName\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Pet not found\"\n                    },\n                    \"405\": {\n                        \"description\": \"Validation exception\"\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\": \"Add a new pet to the store\",\n                \"operationId\": \"addPet\",\n                \"requestBody\": {\n                    \"description\": \"Pet object that needs to be added to the store\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"405\": {\n                        \"description\": \"Invalid input\"\n                    }\n                }\n            }\n        },\n        \"/pet/findByTags\": {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"summary\": \"Finds Pets by tags\",\n                \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n                \"operationId\": \"findPetsByTags\",\n                \"parameters\": [\n                    {\n                        \"name\": \"tags\",\n                        \"in\": \"query\",\n                        \"description\": \"Tags to filter by\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid tag value\"\n                    },\n                    \"default\": {\n                        \"description\": \"Pets matching criteria\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Order\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/user\": {\n            \"post\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"summary\": \"User post\",\n                \"description\": \"User post\",\n                \"operationId\": \"postUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"body\",\n                        \"in\": \"body\",\n                        \"description\": \"Created user object\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Order\"\n                        }\n                    }\n                ]\n            }\n        },\n        \"/store\": {\n            \"post\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"summary\": \"Store post\",\n                \"description\": \"Store post\",\n                \"operationId\": \"postStore\",\n                \"parameters\": [\n                    {\n                        \"name\": \"body\",\n                        \"in\": \"body\",\n                        \"description\": \"order placed for purchasing the pet\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Order\"\n                        }\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"Category\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Category\"\n                }\n            },\n            \"PetHeader\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"PetHeader\"\n                }\n            },\n            \"Tag\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Tag\"\n                }\n            },\n            \"Pet\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    },\n                    \"category\": {\n                        \"$ref\": \"#/components/schemas/Category\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"photoUrls\": {\n                        \"type\": \"array\",\n                        \"xml\": {\n                            \"wrapped\": true\n                        },\n                        \"items\": {\n                            \"type\": \"string\",\n                            \"xml\": {\n                                \"name\": \"photoUrl\"\n                            }\n                        }\n                    },\n                    \"tags\": {\n                        \"type\": \"array\",\n                        \"xml\": {\n                            \"wrapped\": true\n                        },\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Tag\",\n                            \"xml\": {\n                                \"name\": \"tag\"\n                            }\n                        }\n                    },\n                    \"status\": {\n                        \"type\": \"string\",\n                        \"description\": \"pet status in the store\",\n                        \"enum\": [\n                            \"available,pending,sold\"\n                        ]\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Pet\"\n                }\n            },\n            \"Order\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\",\n                        \"properties\" : {\n                            \"nested\" : {\n                                \"$ref\" : \"#/components/schemas/ReferredOrder\"\n                            }\n                        }\n                    },\n                    \"petId\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\"\n                    },\n                    \"complete\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"quantity\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"shipDate\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    }\n                }\n            },\n            \"ReferredOrder\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\",\n                        \"properties\" : {\n                            \"nested\" : {\n                                \"$ref\" : \"#/components/schemas/RefName\"\n                            }\n                        }\n                    }\n                }\n            },\n            \"User\": {\n                \"properties\": {\n                    \"lastName\": {\n                        \"type\": \"string\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"phone\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"userStatus\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"firstName\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /pet: put: operation \"updatePet\": requestBody: content: application/json: schema: parse schema: resolve \"#/components/schemas/RefName\": find schema: resolve \"#/components/schemas/RefName\": can't find value for \"components/schemas/RefName\""
}