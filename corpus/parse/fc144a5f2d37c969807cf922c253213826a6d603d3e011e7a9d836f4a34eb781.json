{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/belvinlabs/proost-app"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "server/openapi/openapi.yaml",
			"byteSize": 5148,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Proost API\n  version: 0.0.1\n  title: Proost API\n  contact:\n    name: Proost API Team\n    email: \"help@getproost.com\"\n    url: https://getproost.com\ntags:\n- name: \"user\"\n  description: \"Operations about user\"\n- name: \"sync\"\n  description: \"A syncing task\"\nservers:\n  - url: https://app.getproost.com/api\npaths:\n#   /users:\n#     post:\n#       tags:\n#       - \"user\"\n#       summary: \"Creates a new user and user database\"\n#       description: \"\"\n#       operationId: \"createUser\"\n#       requestBody:\n#         required: true\n#         description: User object that needs to be created\n#         content:\n#           application/json:\n#             schema:\n#               type: object\n#               required:\n#               - email\n#               properties:\n#                 email:\n#                   title: The unique email for a user\n#                   description: The email address can be changed, but need to be unique\n#                   type: string\n#       responses:\n#         200:\n#           description: \"User sucessfully created\"\n#           content:\n#             application/json:\n#               schema:\n#                 $ref: '#/components/schemas/User'\n#         409:\n#           description: \"Invalid input\"\n  /users/{user_id}:\n    get:\n      tags:\n      - \"user\"\n      summary: \"Get user by user ID\"\n      description: \"\"\n      operationId: \"getUserByID\"\n      parameters:\n      - name: \"user_id\"\n        in: \"path\"\n        description: \"The ID of the user that needs to be fetched\"\n        required: true\n        schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        200:\n          description: \"User found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        404:\n          description: \"User not found\"      \n  /users/{email}:\n    get:\n      tags:\n      - \"user\"\n      summary: \"Get user by user email\"\n      description: \"\"\n      operationId: \"getUserByEmail\"\n      parameters:\n      - name: \"email\"\n        in: \"path\"\n        description: \"The email of the user that needs to be fetched\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"User found\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        409:\n          description: \"Invalid email supplied\"\n        404:\n          description: \"User not found\"\n  /syncs:\n    post:\n      tags:\n      - \"sync\"\n      summary: \"Creates a new sync task\"\n      description: \"\"\n      operationId: \"createSync\"\n      requestBody:\n        required: true\n        description: Sync object\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - database_id\n              - sync_type\n              - synced_ids\n              properties:\n                database_id:\n                  title: Database ID\n                  description: The ID of the database where we need to store the data in\n                  type: string\n                sync_type:\n                  title: Sync type\n                  description: The datasource we are syncing data from\n                  type: string\n                synced_ids:\n                  title: IDs to sync\n                  description: IDs to sync\n                  type: array\n                  items:\n                    type: string\n      responses:\n        200:\n          description: \"User sucessfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        409:\n          description: \"Invalid input\"\n  /syncs/tasks/calendar_sync:\n    post:\n      tags:\n      - \"sync\"\n      summary: \"Runs the sync task synchronously\"\n      description: \"\"\n      operationId: \"runSync\"\n      requestBody:\n        required: true\n        description: Sync object\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - user_id\n              - calendars\n              properties:\n                user_id:\n                  title: User ID\n                  description: The User ID for which user to start a sync\n                  type: string\n                calendars:\n                  title: IDs to sync\n                  description: IDs to sync\n                  type: array\n                  items:\n                    type: string\n      responses:\n        200:\n          description: \"User sucessfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        409:\n          description: \"Invalid input\"\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        email:\n          type: string\n  securitySchemes:\n    cookieAuth:         # arbitrary name for the security scheme; will be used in the \"security\" key later\n      type: apiKey\n      in: cookie\n      name: session\nsecurity:\n  - cookieAuth: []\n    \n",
			"canonicalURL": "/github.com/belvinlabs/proost-app@d091fc9731567ee09bd30525c81741ad46ef8cb1/-/blob/server/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/belvinlabs/proost-app/blob/d091fc9731567ee09bd30525c81741ad46ef8cb1/server/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/users/{user_id}\": at 1:2394: duplicate path: \"/users/{user_id}\""
}