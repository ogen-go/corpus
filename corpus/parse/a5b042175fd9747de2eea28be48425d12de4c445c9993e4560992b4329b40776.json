{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jmpsec/osctrl"
		},
		"file": {
			"name": "osctrl-api.yaml",
			"size": 0,
			"path": "osctrl-api.yaml",
			"byteSize": 21908,
			"content": "openapi: 3.0.1\nservers:\n  - url: '{server}/api/v1'\n    variables:\n      server:\n        default: https://osctrl.net\ninfo:\n  title: osctrl-api\n  description: 'This the API for osctrl, a fast and efficient osquery management solution.'\n  version: 0.3.0\nexternalDocs:\n  description: osctrl documentation\n  url: https://osctrl.net\ntags:\n- name: nodes\n  description: Enrolled nodes in osctrl\n  externalDocs:\n    description: osctrl nodes\n    url: https://github.com/jmpsec/osctrl/tree/master/nodes\n- name: queries\n  description: On-demand queries in osctrl\n  externalDocs:\n    description: on-demand queries\n    url: https://github.com/jmpsec/osctrl/tree/master/queries\n- name: platforms\n  description: Platforms of enrolled nodes in osctrl\n  externalDocs:\n    description: osctrl platforms\n    url: https://github.com/jmpsec/osctrl/tree/master/queries\n- name: environments\n  description: Environments within osctrl\n  externalDocs:\n    description: osctrl environments\n    url: https://github.com/jmpsec/osctrl/tree/master/environments\n- name: tags\n  description: Tags for enrolled nodes in osctrl\n  externalDocs:\n    description: osctrl tags\n    url: https://github.com/jmpsec/osctrl/tree/master/tags\n- name: settings\n  description: Settings for all osctrl components\n  externalDocs:\n    description: osctrl settings\n    url: https://github.com/jmpsec/osctrl/tree/master/settings\npaths:\n  /nodes:\n    get:\n      tags:\n      - nodes\n      summary: Get a single node by UUID\n      description: Returns the osctrl node by the provided UUID\n      operationId: apiNodesHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OsqueryNode'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: no nodes\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting nodes\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /nodes/{uuid}:\n    get:\n      tags:\n      - nodes\n      summary: Get node\n      description: Returns all enrolled osctrl nodes\n      operationId: apiNodeHandler\n      parameters:\n      - name: uuid\n        in: path\n        description: UUID of the requested enrolled node\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OsqueryNode'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: node not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting node\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /queries:\n    get:\n      tags:\n      - queries\n      summary: Get on-demand queries\n      description: Returns all hidden osctrl on-demand queries\n      operationId: apiHiddenQueriesShowHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DistributedQuery'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: no queries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting queries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n    post:\n      tags:\n      - queries\n      summary: Run new query\n      description: Creates a new on-demand query to run\n      operationId: apiQueriesRunHandler\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DistributedQueryRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiQueriesResponse'\n        403:\n          description: no access\n          content: {}\n        404:\n          description: no queries\n          content: {}\n        500:\n          description: error getting queries\n          content: {}\n      security:\n      - Authorization:\n        - read\n        - write\n  /queries/{name}:\n    get:\n      tags:\n      - queries\n      summary: Get on-demand query\n      description: Returns the requested on-demand query by name\n      operationId: apiQueryShowHandler\n      parameters:\n      - name: name\n        in: path\n        description: Name of the requested on-demand query\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DistributedQuery'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: query not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting query\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /queries/results/{name}:\n    get:\n      tags:\n      - queries\n      summary: Get on-demand query results\n      description: Returns the requested on-demand query results by name\n      operationId: apiQueryResultsHandler\n      parameters:\n      - name: name\n        in: path\n        description: Name of the requested on-demand query\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIQueryData'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: query not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /all-queries:\n    get:\n      tags:\n      - queries\n      summary: Get on-demand queries\n      description: Returns all osctrl on-demand queries\n      operationId: apiAllQueriesShowHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DistributedQuery'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: no queries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting queries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /platforms:\n    get:\n      tags:\n      - platforms\n      summary: Get platforms\n      description: Returns all osctrl platforms of enrolled nodes\n      operationId: apiPlatformsHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: no queries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting queries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /environments:\n    get:\n      tags:\n      - environments\n      summary: Get environments\n      description: Returns all osctrl environments to enroll nodes\n      operationId: apiEnvironmentsHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TLSEnvironment'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        404:\n          description: no environments\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting environments\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /environments/{environment}:\n    get:\n      tags:\n      - environments\n      summary: Get environment\n      description: Returns the requested osctrl environment to enroll nodes\n      operationId: apiEnvironmentHandler\n      parameters:\n      - name: environment\n        in: path\n        description: Name of the requested osctrl environment to enroll nodes\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TLSEnvironment'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting environment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /tags:\n    get:\n      tags:\n      - tags\n      summary: Get tags\n      description: Returns all osctrl environments to enroll nodes\n      operationId: apiTagsHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminTag'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting tags\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /settings:\n    get:\n      tags:\n      - settings\n      summary: Get settings\n      description: Returns all osctrl services settings\n      operationId: apiSettingsHandler\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SettingValue'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /settings/{service}:\n    get:\n      tags:\n      - settings\n      summary: Get settings\n      description: Returns all osctrl settings per service\n      operationId: apiSettingsServiceHandler\n      parameters:\n      - name: service\n        in: path\n        description: Name of the service to retrieve settings, including JSON\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SettingValue'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\n  /settings/{service}/json:\n    get:\n      tags:\n      - settings\n      summary: Get JSON settings\n      description: Returns JSON osctrl settings per service\n      operationId: apiSettingsServiceJSONHandler\n      parameters:\n      - name: service\n        in: path\n        description: Name of the service to retrieve JSON only settings\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SettingValue'\n        403:\n          description: no access\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n        500:\n          description: error getting settings\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiErrorResponse'\n      security:\n      - Authorization:\n        - read\n        - write\ncomponents:\n  schemas:\n    OsqueryNode:\n      type: object\n      properties:\n        ID:\n          type: integer\n          format: int32\n        CreatedAt:\n          type: string\n          format: date-time\n        UpdatedAt:\n          type: string\n          format: date-time\n        DeletedAt:\n          type: string\n          format: date-time\n        NodeKey:\n          type: string\n        UUID:\n          type: string\n        Platform:\n          type: string\n        PlatformVersion:\n          type: string\n        OsqueryVersion:\n          type: string\n        Hostname:\n          type: string\n        Localname:\n          type: string\n        Username:\n          type: string\n        OsqueryUser:\n          type: string\n        Environment:\n          type: string\n        CPU:\n          type: string\n        Memory:\n          type: string\n        HardwareSerial:\n          type: string\n        DaemonHash:\n          type: string\n        ConfigHash:\n          type: string\n        RawEnrollment:\n          type: string\n        LastStatus:\n          type: string\n          format: date-time\n        LastResult:\n          type: string\n          format: date-time\n        LastConfig:\n          type: string\n          format: date-time\n        LastQueryRead:\n          type: string\n          format: date-time\n        LastQueryWrite:\n          type: string\n          format: date-time\n    DistributedQuery:\n      type: object\n      properties:\n        ID:\n          type: integer\n          format: int32\n        CreatedAt:\n          type: string\n          format: date-time\n        UpdatedAt:\n          type: string\n          format: date-time\n        DeletedAt:\n          type: string\n          format: date-time\n        Name:\n          type: string\n        Creator:\n          type: string\n        Query:\n          type: string\n        Expected:\n          type: integer\n          format: int32\n        Executions:\n          type: integer\n          format: int32\n        Errors:\n          type: integer\n          format: int32\n        Active:\n          type: boolean\n        Hidden:\n          type: boolean\n        Protected:\n          type: boolean\n        Completed:\n          type: boolean\n        Deleted:\n          type: boolean\n        Type:\n          type: string\n        Path:\n          type: string\n    DistributedQueryRequest:\n      type: object\n      properties:\n        environment_list:\n          type: array\n          items:\n            type: string\n        platform_list:\n          type: array\n          items:\n            type: string\n        uuid_list:\n          type: array\n          items:\n            type: string\n        host_list:\n          type: array\n          items:\n            type: string\n        query:\n          type: string\n    ApiQueriesResponse:\n      type: object\n      properties:\n        query_name:\n          type: string\n    ApiErrorResponse:\n      type: object\n      properties:\n        error:\n          type: string\n    APIQueryData:\n      type: object\n    TLSEnvironment:\n      type: object\n      properties:\n        ID:\n          type: integer\n          format: int32\n        CreatedAt:\n          type: string\n          format: date-time\n        UpdatedAt:\n          type: string\n          format: date-time\n        DeletedAt:\n          type: string\n          format: date-time\n        Name:\n          type: string\n        Hostname:\n          type: string\n        Secret:\n          type: string\n        EnrollSecretPath:\n          type: string\n        EnrollExpire:\n          type: string\n          format: date-time\n        RemoveSecretPath:\n          type: string\n        RemoveExpire:\n          type: string\n          format: date-time\n        Type:\n          type: string\n        DebugHTTP:\n          type: boolean\n        Icon:\n          type: string\n        Configuration:\n          type: string\n        Flags:\n          type: string\n        Certificate:\n          type: string\n        ConfigTLS:\n          type: boolean\n        ConfigInterval:\n          type: integer\n          format: int32\n        LoggingTLS:\n          type: boolean\n        LogInterval:\n          type: integer\n          format: int32\n        QueryTLS:\n          type: boolean\n        QueryInterval:\n          type: integer\n          format: int32\n        CarvesTLS:\n          type: boolean\n        EnrollPath:\n          type: string\n        LogPath:\n          type: string\n        ConfigPath:\n          type: string\n        QueryReadPath:\n          type: string\n        QueryWritePath:\n          type: string\n        CarverInitPath:\n          type: string\n        CarverBlockPath:\n          type: string\n    AdminTag:\n      type: object\n      properties:\n        ID:\n          type: integer\n          format: int32\n        CreatedAt:\n          type: string\n          format: date-time\n        UpdatedAt:\n          type: string\n          format: date-time\n        DeletedAt:\n          type: string\n          format: date-time\n        Name:\n          type: string\n        Description:\n          type: string\n        Color:\n          type: string\n        Icon:\n          type: string\n    SettingValue:\n      type: object\n      properties:\n        ID:\n          type: integer\n          format: int32\n        CreatedAt:\n          type: string\n          format: date-time\n        UpdatedAt:\n          type: string\n          format: date-time\n        DeletedAt:\n          type: string\n          format: date-time\n        Service:\n          type: string\n        JSON:\n          type: boolean\n        Type:\n          type: string\n        String:\n          type: string\n        Boolean:\n          type: boolean\n        Integer:\n          type: integer\n          format: int64\n        Info:\n          type: string\n  securitySchemes:\n    Authorization:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n",
			"canonicalURL": "/github.com/jmpsec/osctrl@f35c3401d35025d07c371a5563cf8523c7eb116f/-/blob/osctrl-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jmpsec/osctrl/blob/f35c3401d35025d07c371a5563cf8523c7eb116f/osctrl-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/all-queries\": get: operation \"apiAllQueriesShowHandler\": security: at 1:5230: list of scopes MUST be empty for \"type\" \"http\""
}