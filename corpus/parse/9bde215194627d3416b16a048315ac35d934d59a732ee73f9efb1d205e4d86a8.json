{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alphagov/di-ipv-core-back"
		},
		"file": {
			"name": "template.yaml",
			"size": 0,
			"path": "deploy/template.yaml",
			"byteSize": 91703,
			"content": "AWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nDescription: \u003e-\n  This creates the necessary serverless components for IPV Core-Back.\n\nGlobals:\n  Function:\n    Timeout: 40\n    Environment:\n      Variables:\n        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1\n    CodeSigningConfigArn: !If\n      - UseCodeSigning\n      - !Ref CodeSigningConfigArn\n      - !Ref AWS::NoValue\n    PermissionsBoundary: !If\n      - UsePermissionsBoundary\n      - !Ref PermissionsBoundary\n      - !Ref AWS::NoValue\n\nParameters:\n  Environment:\n    Type: String\n  VpcStackName:\n    Description: \u003e\n      The name of the stack that defines the VPC in which this container will\n      run.\n    Type: String\n  CodeSigningConfigArn:\n    Type: String\n    Description: \u003e\n      The ARN of the Code Signing Config to use, provided by the deployment pipeline\n    Default: \"none\"\n  PermissionsBoundary:\n    Description: \"The ARN of the permissions boundary to apply when creating IAM roles\"\n    Type: String\n    Default: \"none\"\n\nConditions:\n  AddProvisionedConcurrency: !Not\n    - !Equals\n      - !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n      -  0\n  IsDevelopment: !Not\n    - !Or\n      - !Equals [ !Ref Environment, \"build\"]\n      - !Equals [ !Ref Environment, \"staging\"]\n      - !Equals [ !Ref Environment, \"integration\"]\n      - !Equals [ !Ref Environment, \"production\"]\n  IsNotDevelopment: !Not [ !Condition IsDevelopment ]\n  UseCodeSigning:\n    Fn::Not:\n      - Fn::Equals:\n          - !Ref CodeSigningConfigArn\n          - \"none\"\n  UsePermissionsBoundary:\n    Fn::Not:\n      - Fn::Equals:\n          - !Ref PermissionsBoundary\n          - \"none\"\n\n# The AWS Account Id is used in the following mapping section because we have\n# multiple developer environments and it is undesirable to have to keep this\n# mapping up to date with each developer environment.\nMappings:\n  EnvironmentConfiguration:\n    \"130355686670\": # Development\n      provisionedConcurrency: 0\n      ciStorageAccountId: 322814139578 # di-ipv-cri-dev\n      environment: dev\n      criReturnStepFunctionLogLevel: ALL\n      pgw500ErrorLimit: 2\n      egw500ErrorLimit: 2\n    \"457601271792\": # Build\n      provisionedConcurrency: 0\n      ciStorageAccountId: 755415363251 # di-ipv-contra-indicators-build\n      environment: build\n      criReturnStepFunctionLogLevel: ALL\n      pgw500ErrorLimit: 2\n      egw500ErrorLimit: 2\n    \"335257547869\": # Staging\n      provisionedConcurrency: 1\n      ciStorageAccountId: 265689800486 # di-ipv-contra-indicators-staging\n      environment: staging\n      criReturnStepFunctionLogLevel: ALL\n      pgw500ErrorLimit: 2\n      egw500ErrorLimit: 2\n    \"991138514218\": # Integration\n      provisionedConcurrency: 1\n      ciStorageAccountId: 697519714716 # di-ipv-contra-indicators-integration\n      environment: integration\n      criReturnStepFunctionLogLevel: ERROR\n      pgw500ErrorLimit: 2\n      egw500ErrorLimit: 2\n    \"075701497069\": # Production\n      provisionedConcurrency: 1\n      ciStorageAccountId: 442136572379 # di-ipv-contra-indicators-prod\n      environment: production\n      criReturnStepFunctionLogLevel: ERROR\n      pgw500ErrorLimit: 10\n      egw500ErrorLimit: 1\n  SecurityGroups:\n    PrefixListIds:\n      dynamodb: \"pl-b3a742da\"\n      s3: \"pl-7ca54015\"\n\nResources:\n  JWKSParamRole:\n    Type: 'AWS::IAM::Role'\n    Properties:\n      AssumeRolePolicyDocument:\n        Statement:\n          - Action: 'sts:AssumeRole'\n            Effect: Allow\n            Principal:\n              Service: apigateway.amazonaws.com\n        Version: 2012-10-17\n      Policies:\n        - PolicyName: AccessJWKSjson\n          PolicyDocument:\n            Version: \"2012-10-17\"\n            Statement:\n              - Effect: Allow\n                Action:\n                  - \"ssm:GetParametersByPath\"\n                Resource:\n                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Environment}/deploy/core/outputs/*'\n      PermissionsBoundary: !If\n        - UsePermissionsBoundary\n        - !Ref PermissionsBoundary\n        - !Ref AWS::NoValue\n\n  LambdaSecurityGroup:\n    Type: \"AWS::EC2::SecurityGroup\"\n    Properties:\n      GroupDescription: \u003e-\n        Core Back Lambda Security Group outbound permissions ruleset\n      SecurityGroupEgress:\n        - DestinationPrefixListId: !FindInMap [SecurityGroups, PrefixListIds, dynamodb]\n          Description: Allow outbound traffic to dynamodb vpc endpoint\n          IpProtocol: tcp\n          FromPort: 443\n          ToPort: 443\n        - DestinationPrefixListId: !FindInMap [SecurityGroups, PrefixListIds, s3]\n          Description: Allow outbound traffic to s3 vpc endpoint\n          IpProtocol: tcp\n          FromPort: 443\n          ToPort: 443\n        - DestinationSecurityGroupId: !If\n            - IsDevelopment\n            - !ImportValue InterfaceVpcEndpointSecurityGroupId\n            - Fn::ImportValue:  !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId\n          Description: Allow outbound HTTPS traffic to AWS Services vpc endpoint security group\n          IpProtocol: tcp\n          FromPort: 443\n          ToPort: 443\n        - CidrIp: 0.0.0.0/0\n          Description: Allow outbound HTTPS traffic to Internet - Network Firewall will allow only to CRIs\n          FromPort: 443\n          IpProtocol: tcp\n          ToPort: 443\n      SecurityGroupIngress:\n        - CidrIp:\n            Fn::ImportValue: !Sub ${VpcStackName}-VpcCidr\n          Description: Allow inbound traffic from vpc cidr to port 443\n          FromPort: 443\n          IpProtocol: tcp\n          ToPort: 443\n      VpcId:\n        Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n\n  IPVCorePrivateAPI:\n    Type: AWS::Serverless::Api\n    Properties:\n      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.\n      Name: !Sub IPV Core Private API Gateway ${Environment}\n      EndpointConfiguration:\n        Type: PRIVATE\n        VPCEndpointIds: !If\n          - IsDevelopment\n          - - !ImportValue \"network-shared-development-ApiGatewayVpcEndpointId\"\n          - - Fn::ImportValue: !Sub \"${VpcStackName}-ExecuteApiGatewayEndpointId\"\n      DefinitionBody:\n        openapi: \"3.0.3\" # workaround to get `sam validate` to work\n        paths: # workaround to get `sam validate` to work\n          /foo:\n            bar: baz # workaround to get `sam validate` to work\n        Fn::Transform:\n          Name: \"AWS::Include\"\n          Parameters:\n            Location: \"../openAPI/core-back-internal.yaml\"\n      Auth:\n        ResourcePolicy:\n          CustomStatements:\n            - Action: 'execute-api:Invoke'\n              Effect: Allow\n              Principal: '*'\n              Resource:\n                - 'execute-api:/*'\n            - Action: 'execute-api:Invoke'\n              Effect: Deny\n              Principal: '*'\n              Resource:\n                - 'execute-api:/*'\n              Condition:\n                StringNotEquals:\n                  'aws:SourceVpce': !If\n                    - IsDevelopment\n                    - !ImportValue \"network-shared-development-ApiGatewayVpcEndpointId\"\n                    - Fn::ImportValue:\n                        !Sub \"${VpcStackName}-ExecuteApiGatewayEndpointId\"\n      StageName: !Sub ${Environment}\n      TracingEnabled: true\n      AccessLogSetting:\n        DestinationArn: !GetAtt IPVCorePrivateAPILogGroup.Arn\n        Format: \u003e-\n          {\n          \"requestId\":\"$context.requestId\",\n          \"ip\":\"$context.identity.sourceIp\",\n          \"requestTime\":\"$context.requestTime\",\n          \"httpMethod\":\"$context.httpMethod\",\n          \"path\":\"$context.path\",\n          \"routeKey\":\"$context.routeKey\",\n          \"status\":\"$context.status\",\n          \"protocol\":\"$context.protocol\",\n          \"responseLatency\":\"$context.responseLatency\",\n          \"responseLength\":\"$context.responseLength\"\n          }\n\n  IPVCorePrivateAPILogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-CoreBackPrivate-API-GW-AccessLogs\n      RetentionInDays: 14\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  IPVCorePrivateAPILogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref IPVCorePrivateAPILogGroup\n\n  IPVCoreExternalAPI:\n    Type: AWS::Serverless::Api\n    DependsOn:\n      - \"JWKSParamRole\"\n    Properties:\n      # checkov:skip=CKV_AWS_120: We are not implementing API Gateway caching at the time.\n      Name: !Sub IPV Core External API Gateway ${Environment}\n      StageName: !Sub ${Environment}\n      TracingEnabled: true\n      DefinitionBody:\n        'Fn::Transform':\n          Name: \"AWS::Include\"\n          Parameters:\n            Location: \"../openAPI/core-back-external.yaml\"\n      AccessLogSetting:\n        DestinationArn: !GetAtt IPVCoreExternalAPILogGroup.Arn\n        Format: \u003e-\n          {\n          \"requestId\":\"$context.requestId\",\n          \"ip\":\"$context.identity.sourceIp\",\n          \"requestTime\":\"$context.requestTime\",\n          \"httpMethod\":\"$context.httpMethod\",\n          \"path\":\"$context.path\",\n          \"routeKey\":\"$context.routeKey\",\n          \"status\":\"$context.status\",\n          \"protocol\":\"$context.protocol\",\n          \"responseLatency\":\"$context.responseLatency\",\n          \"responseLength\":\"$context.responseLength\"\n          }\n\n  IPVCoreExternalAPILogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-CoreBackExternal-API-GW-AccessLogs\n      RetentionInDays: 14\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  IPVCoreExternalAPILogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref IPVCoreExternalAPILogGroup\n\n  IssueClientAccessTokenFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"IssueClientAccessTokenFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"issue-client-access-token-${Environment}\"\n      Handler: uk.gov.di.ipv.core.issueclientaccesstoken.IssueClientAccessTokenHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/issue-client-access-token\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub issue-client-access-token-${Environment}\n          CLIENT_AUTH_JWT_IDS_TABLE_NAME: !Ref ClientAuthJwtIdsTable\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref ClientAuthJwtIdsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/clients/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n      Events:\n        IPVCoreExternalAPI:\n          Type: Api\n          Properties:\n            RestApiId: !Ref IPVCoreExternalAPI\n            Path: /token\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n          - AddProvisionedConcurrency\n          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n          - !Ref AWS::NoValue\n\n  IssueClientAccessTokenFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/issue-client-access-token-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  IssueClientAccessTokenFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref IssueClientAccessTokenFunctionLogGroup\n\n  BuildClientOauthResponseFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"BuildClientOauthResponseFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"build-client-oauth-response-${Environment}\"\n      Handler: uk.gov.di.ipv.core.buildclientoauthresponse.BuildClientOauthResponseHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/build-client-oauth-response\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub build-client-oauth-response-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/build-client-oauth-response\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  BuildClientOauthResponseFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/build-client-oauth-response-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  BuildClientOauthResponseFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref BuildClientOauthResponseFunctionLogGroup\n\n  InitialiseIpvSessionFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"InitialiseIpvSessionFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"initialise-ipv-session-${Environment}\"\n      Handler: uk.gov.di.ipv.core.initialiseipvsession.InitialiseIpvSessionHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/initialise-ipv-session\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub initialise-ipv-session-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt SessionsTable.Arn ] ]\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/clients/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: jarKmsEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue CoreEncryptionKeyArn\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /session/initialise\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  InitialiseIpvSessionFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/initialise-ipv-session-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  InitialiseIpvSessionFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref InitialiseIpvSessionFunctionLogGroup\n\n  RetrieveCriOauthAccessTokenFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"RetrieveCriOauthAccessTokenFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"retrieve-cri-oauth-access-token-${Environment}\"\n      Handler: uk.gov.di.ipv.core.retrievecrioauthaccesstoken.RetrieveCriOauthAccessTokenHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/retrieve-cri-oauth-access-token\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]\n          SIGNING_KEY_ID_PARAM: !Sub \"/${Environment}/core/self/signingKeyId\"\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub retrieve-cri-oauth-access-token-${Environment}\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          CI_STORAGE_PUT_LAMBDA_ARN: !Sub\n            - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:putContraIndicators-${env}\"\n            - contra_indicator_storage_account_id: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - ciStorageAccountId\n              env: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - environment\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBCrudPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - AWSSecretsManagerGetSecretValuePolicy:\n            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:${Environment}/credential-issuers/*/api-key-*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: kmsSigningKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:sign'\n              Resource:\n                - !ImportValue SigningKeyArn\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n            - Sid: invokePutCiFunction\n              Effect: Allow\n              Action:\n                - 'lambda:InvokeFunction'\n              Resource:\n                - !Sub\n                  - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:putContraIndicators-${env}\"\n                  - contra_indicator_storage_account_id: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - ciStorageAccountId\n                    env: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - environment\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/cri/access-token\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  RetrieveCriOauthAccessTokenFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/retrieve-cri-oauth-access-token-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  RetrieveCriOauthAccessTokenFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref RetrieveCriOauthAccessTokenFunctionLogGroup\n\n  RetrieveCriCredentialFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"RetrieveCriCredentialFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"retrieve-cri-credential-${Environment}\"\n      Handler: uk.gov.di.ipv.core.retrievecricredential.RetrieveCriCredentialHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/retrieve-cri-credential\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]\n          SIGNING_KEY_ID_PARAM: !Sub \"/${Environment}/core/self/signingKeyId\"\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub retrieve-cri-credentials-${Environment}\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          CI_STORAGE_PUT_LAMBDA_ARN: !Sub\n            - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:putContraIndicators-${env}\"\n            - contra_indicator_storage_account_id: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - ciStorageAccountId\n              env: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - environment\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBCrudPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - AWSSecretsManagerGetSecretValuePolicy:\n            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:${Environment}/credential-issuers/*/api-key-*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: kmsSigningKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:sign'\n              Resource:\n                - !ImportValue SigningKeyArn\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n            - Sid: invokePutCiFunction\n              Effect: Allow\n              Action:\n                - 'lambda:InvokeFunction'\n              Resource:\n                - !Sub\n                  - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:putContraIndicators-${env}\"\n                  - contra_indicator_storage_account_id: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - ciStorageAccountId\n                    env: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - environment\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/cri/credential\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  RetrieveCriCredentialFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/retrieve-cri-credential-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  RetrieveCriCredentialFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref RetrieveCriCredentialFunctionLogGroup\n\n  BuildCriOauthRequestFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"BuildCriOauthRequestFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"build-cri-oauth-request-${Environment}\"\n      Handler: uk.gov.di.ipv.core.buildcrioauthrequest.BuildCriOauthRequestHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/build-cri-oauth-request\n      Architectures:\n        - arm64\n      MemorySize: 3008\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub build-cri-oauth-request-${Environment}\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]\n          SIGNING_KEY_ID_PARAM: !Sub \"/${Environment}/core/self/signingKeyId\"\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: kmsSigningKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:sign'\n              Resource:\n                - !ImportValue SigningKeyArn\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/cri/build-oauth-request/{criId}\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  BuildCriOauthRequestFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/build-cri-oauth-request-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  BuildCriOauthRequestFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref BuildCriOauthRequestFunctionLogGroup\n\n  BuildUserIdentityFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"BuildUserIdentityFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"build-user-identity-${Environment}\"\n      Handler: uk.gov.di.ipv.core.builduseridentity.BuildUserIdentityHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/build-user-identity\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub build-user-identity-${Environment}\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [1, !Split ['/', !GetAtt UserIssuedCredentialsV2Table.Arn]]\n          IPV_SESSIONS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt SessionsTable.Arn ] ]\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - DynamoDBWritePolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n      Events:\n        IPVCoreExternalAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCoreExternalAPI\n            Path: /user-identity\n            Method: GET\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n          - AddProvisionedConcurrency\n          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n          - !Ref AWS::NoValue\n\n  BuildUserIdentityFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/build-user-identity-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  BuildUserIdentityFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref BuildUserIdentityFunctionLogGroup\n\n  GetCredentialIssuerConfig:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"GetCredentialIssuerFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"get-credential-issuer-config-${Environment}\"\n      Handler: uk.gov.di.ipv.core.getcredentialissuerconfig.GetCredentialIssuerConfigHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/get-credential-issuer-config\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub get-credential-issuer-config-${Environment}\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /request-config\n            Method: GET\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n          - AddProvisionedConcurrency\n          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n          - !Ref AWS::NoValue\n\n  GetCredentialIssuerFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/get-credential-issuer-config-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  GetCredentialIssuerFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref GetCredentialIssuerFunctionLogGroup\n\n  BuildDebugCredentialDataFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"BuildDebugCredentialDataFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"build-debug-credential-data-${Environment}\"\n      Handler: uk.gov.di.ipv.core.builddebugcredentialdata.BuildDebugCredentialDataHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/build-debug-credential-data\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub build-debug-credential-data-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt SessionsTable.Arn ] ]\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Select [ 1, !Split [ '/', !GetAtt UserIssuedCredentialsV2Table.Arn ] ]\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - DynamoDBWritePolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /debug-credential-data\n            Method: GET\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  BuildDebugCredentialDataFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/build-debug-credential-data-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  BuildDebugCredentialDataFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref BuildDebugCredentialDataFunctionLogGroup\n\n  CriReturnStepFunction:\n    Type: AWS::Serverless::StateMachine\n    Properties:\n      DefinitionUri: criReturnStepFunction.asl.json\n      DefinitionSubstitutions:\n        IPVProcessJourneyStepFunctionArn: !GetAtt IPVProcessJourneyStepFunction.Arn\n        RetrieveCriCredentialFunctionArn: !GetAtt RetrieveCriCredentialFunction.Arn\n        RetrieveCriOauthAccessTokenFunctionArn: !GetAtt RetrieveCriOauthAccessTokenFunction.Arn\n        ValidateOAuthCallbackFunctionArn: !GetAtt ValidateOAuthCallbackFunction.Arn\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/cri/callback\n            Method: POST\n      Logging:\n        Destinations:\n          - CloudWatchLogsLogGroup:\n              LogGroupArn: !GetAtt CriReturnStepFunctionLogGroup.Arn\n        IncludeExecutionData: true\n        Level: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, criReturnStepFunctionLogLevel ]\n      Policies:\n        - LambdaInvokePolicy:\n            FunctionName: !Ref IPVProcessJourneyStepFunction\n        - LambdaInvokePolicy:\n            FunctionName: !Ref RetrieveCriCredentialFunction\n        - LambdaInvokePolicy:\n            FunctionName: !Ref RetrieveCriOauthAccessTokenFunction\n        - LambdaInvokePolicy:\n            FunctionName: !Ref ValidateOAuthCallbackFunction\n        - Statement:\n            - Sid: CloudWatchLogsAccess\n              Effect: Allow\n              Action:\n                - \"logs:CreateLogDelivery\"\n                - \"logs:GetLogDelivery\"\n                - \"logs:UpdateLogDelivery\"\n                - \"logs:DeleteLogDelivery\"\n                - \"logs:ListLogDeliveries\"\n                - \"logs:PutLogEvents\"\n                - \"logs:PutResourcePolicy\"\n                - \"logs:DescribeResourcePolicies\"\n                - \"logs:DescribeLogGroups\"\n              Resource: \"*\"\n      Tracing:\n        Enabled: true\n      Type: EXPRESS\n      PermissionsBoundary: !If\n        - UsePermissionsBoundary\n        - !Ref PermissionsBoundary\n        - !Ref AWS::NoValue\n\n  CriReturnStepFunctionApiGateWayIamRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service:\n                - apigateway.amazonaws.com\n            Action:\n              - 'sts:AssumeRole'\n      Policies:\n        - PolicyName: AllowApiGatewayToInvokeStartSyncExecution\n          PolicyDocument:\n            Version: 2012-10-17\n            Statement:\n              - Effect: Allow\n                Action: 'states:StartSyncExecution'\n                Resource: !Ref CriReturnStepFunction\n      PermissionsBoundary: !If\n        - UsePermissionsBoundary\n        - !Ref PermissionsBoundary\n        - !Ref AWS::NoValue\n\n  CriReturnStepFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/states/cri-return-step-function-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  CriReturnStepFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref CriReturnStepFunctionLogGroup\n\n  JourneyEngineStepFunction:\n    Type: AWS::Serverless::StateMachine\n    Properties:\n      DefinitionUri: journey_engine.asl.json\n      DefinitionSubstitutions:\n        IPVProcessJourneyStepFunctionArn: !GetAtt IPVProcessJourneyStepFunction.Arn\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/{journeyStep}\n            Method: POST\n      Logging:\n        Destinations:\n          - CloudWatchLogsLogGroup:\n              LogGroupArn: !GetAtt JourneyEngineStepFunctionLogGroup.Arn\n        IncludeExecutionData: true\n        Level: ALL\n      Policies:\n        - LambdaInvokePolicy:\n            FunctionName: !Ref IPVProcessJourneyStepFunction\n        - Statement:\n            - Sid: CloudWatchLogsAccess\n              Effect: Allow\n              Action:\n                - \"logs:CreateLogDelivery\"\n                - \"logs:GetLogDelivery\"\n                - \"logs:UpdateLogDelivery\"\n                - \"logs:DeleteLogDelivery\"\n                - \"logs:ListLogDeliveries\"\n                - \"logs:PutLogEvents\"\n                - \"logs:PutResourcePolicy\"\n                - \"logs:DescribeResourcePolicies\"\n                - \"logs:DescribeLogGroups\"\n              Resource: \"*\"\n      Tracing:\n        Enabled: true\n      Type: EXPRESS\n      PermissionsBoundary: !If\n        - UsePermissionsBoundary\n        - !Ref PermissionsBoundary\n        - !Ref AWS::NoValue\n\n  JourneyEngineStepFunctionApiGateWayIamRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              Service:\n                - apigateway.amazonaws.com\n            Action:\n              - 'sts:AssumeRole'\n      Policies:\n        - PolicyName: AllowApiGatewayToInvokeStartSyncExecution\n          PolicyDocument:\n            Version: 2012-10-17\n            Statement:\n              - Effect: Allow\n                Action: 'states:StartSyncExecution'\n                Resource: !Ref JourneyEngineStepFunction\n      PermissionsBoundary: !If\n        - UsePermissionsBoundary\n        - !Ref PermissionsBoundary\n        - !Ref AWS::NoValue\n\n  JourneyEngineStepFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/states/journey-engine-step-function-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  JourneyEngineStepFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref JourneyEngineStepFunctionLogGroup\n\n  IPVProcessJourneyStepFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - \"IPVProcessJourneyStepFunctionLogGroup\"\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"process-journey-step-${Environment}\"\n      Handler: uk.gov.di.ipv.core.processjourneystep.ProcessJourneyStepHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/process-journey-step\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub session-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n          - AddProvisionedConcurrency\n          - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n          - !Ref AWS::NoValue\n\n  IPVProcessJourneyStepFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/process-journey-step-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  IPVProcessJourneyStepFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref IPVProcessJourneyStepFunctionLogGroup\n\n  EvaluateGpg45ScoresFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - EvaluateGpg45ScoresFunctionLogGroup\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"evaluate-gpg45-scores-${Environment}\"\n      Handler: uk.gov.di.ipv.core.evaluategpg45scores.EvaluateGpg45ScoresHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/evaluate-gpg45-scores\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub evaluate-gpg45-scores-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          CI_STORAGE_GET_LAMBDA_ARN: !Sub\n            - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:getContraIndicators-${env}\"\n            - contra_indicator_storage_account_id: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - ciStorageAccountId\n              env: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - environment\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - AWSSecretsManagerGetSecretValuePolicy:\n            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ci-scoring-config-*\n        - Statement:\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n            - Sid: invokeGetCiFunction\n              Effect: Allow\n              Action:\n                - 'lambda:InvokeFunction'\n              Resource:\n                - !Sub\n                  - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:getContraIndicators-${env}\"\n                  - contra_indicator_storage_account_id: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - ciStorageAccountId\n                    env: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - environment\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/evaluate-gpg45-scores\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  EvaluateGpg45ScoresFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/evaluate-gpg45-scores-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  EvaluateGpg45ScoresFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref EvaluateGpg45ScoresFunctionLogGroup\n\n  SelectCriFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - SelectCriFunctionLogGroup\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"select-cri-${Environment}\"\n      Handler: uk.gov.di.ipv.core.selectcri.SelectCriHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/select-cri\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub select-cri-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/select-cri\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  SelectCriFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/select-cri-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  SelectCriFunctionFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref SelectCriFunctionLogGroup\n\n  ValidateOAuthCallbackFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - ValidateOAuthCallbackFunctionLogGroup\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"validate-oauth-callback-${Environment}\"\n      Handler: uk.gov.di.ipv.core.validateoauthcallback.ValidateOAuthCallbackHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/validate-oauth-callback\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub validate-oauth-callback-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: {}\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/cri/validate-callback\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  ValidateOAuthCallbackFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/validate-oauth-callback-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  ValidateOAuthCallbackFunctionFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref ValidateOAuthCallbackFunctionLogGroup\n\n  EndMitigationJourneyFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - EndMitigationJourneyFunctionLogGroup\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"end-mitigation-journey-${Environment}\"\n      Handler: uk.gov.di.ipv.core.endmitigationjourney.EndMitigationJourneyHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/end-mitigation-journey\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub end-mitigation-journey-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          CI_STORAGE_GET_LAMBDA_ARN: !Sub\n            - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:getContraIndicators-${env}\"\n            - contra_indicator_storage_account_id: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - ciStorageAccountId\n              env: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - environment\n          CI_STORAGE_POST_MITIGATIONS_LAMBDA_ARN: !Sub\n            - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:postMitigations-${env}\"\n            - contra_indicator_storage_account_id: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - ciStorageAccountId\n              env: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - environment\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: { }\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n            - Sid: invokeGetCiFunction\n              Effect: Allow\n              Action:\n                - 'lambda:InvokeFunction'\n              Resource:\n                - !Sub\n                  - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:getContraIndicators-${env}\"\n                  - contra_indicator_storage_account_id: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - ciStorageAccountId\n                    env: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - environment\n            - Sid: invokePostCiMitigationFunction\n              Effect: Allow\n              Action:\n                - 'lambda:InvokeFunction'\n              Resource:\n                - !Sub\n                  - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:postMitigations-${env}\"\n                  - contra_indicator_storage_account_id: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - ciStorageAccountId\n                    env: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - environment\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBWritePolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/end-mitigation-journey/{mitigationId}\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  EndMitigationJourneyFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/end-mitigation-journey-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  EndMitigationJourneyFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref EndMitigationJourneyFunctionLogGroup\n\n\n  BuildProvenUserIdentityDetailsFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - BuildProvenUserIdentityDetailsFunctionLogGroup\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"build-proven-user-identity-details-${Environment}\"\n      Handler: uk.gov.di.ipv.core.buildprovenuseridentitydetails.BuildProvenUserIdentityDetailsHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/build-proven-user-identity-details\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub build-proven-user-identity-details-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: { }\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBReadPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBReadPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/build-proven-user-identity-details\n            Method: GET\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  BuildProvenUserIdentityDetailsFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/build-proven-user-identity-details-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  BuildProvenUserIdentityDetailsFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref BuildProvenUserIdentityDetailsFunctionLogGroup\n\n\n  CheckExistingIdentityFunction:\n    Type: AWS::Serverless::Function\n    DependsOn:\n      - CheckExistingIdentityFunctionLogGroup\n    Properties:\n      # checkov:skip=CKV_AWS_115: We do not have enough data to allocate the concurrent execution allowance per function.\n      # checkov:skip=CKV_AWS_116: Lambdas invoked via API Gateway do not support Dead Letter Queues.\n      # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work.\n      FunctionName: !Sub \"check-existing-identity-${Environment}\"\n      Handler: uk.gov.di.ipv.core.checkexistingidentity.CheckExistingIdentityHandler::handleRequest\n      Runtime: java11\n      PackageType: Zip\n      CodeUri: ../lambdas/check-existing-identity\n      Architectures:\n        - arm64\n      MemorySize: 2048\n      Tracing: Active\n      Environment:\n        # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.\n        Variables:\n          ENVIRONMENT: !Sub \"${Environment}\"\n          POWERTOOLS_SERVICE_NAME: !Sub check-existing-identity-${Environment}\n          IPV_SESSIONS_TABLE_NAME: !Ref SessionsTable\n          USER_ISSUED_CREDENTIALS_TABLE_NAME: !Ref UserIssuedCredentialsV2Table\n          CREDENTIAL_ISSUERS_CONFIG_PARAM_PREFIX: !Sub \"/${Environment}/core/credentialIssuers\"\n          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl\n          CI_STORAGE_GET_LAMBDA_ARN: !Sub\n            - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:getContraIndicators-${env}\"\n            - contra_indicator_storage_account_id: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - ciStorageAccountId\n              env: !FindInMap\n                - EnvironmentConfiguration\n                - !Ref AWS::AccountId\n                - environment\n      VpcConfig:\n        SubnetIds:\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA\n          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB\n        SecurityGroupIds:\n          - !GetAtt LambdaSecurityGroup.GroupId\n      Policies:\n        - VPCAccessPolicy: { }\n        - Statement:\n            - Sid: EnforceStayinSpecificVpc\n              Effect: Allow\n              Action:\n                - 'lambda:CreateFunction'\n                - 'lambda:UpdateFunctionConfiguration'\n              Resource:\n                - \"*\"\n              Condition:\n                StringEquals:\n                  \"lambda:VpcIds\":\n                    - Fn::ImportValue: !Sub ${VpcStackName}-VpcId\n            - Sid: kmsAuditEventQueueEncryptionKeyPermission\n              Effect: Allow\n              Action:\n                - 'kms:Decrypt'\n                - 'kms:GenerateDataKey'\n              Resource:\n                - !ImportValue AuditEventQueueEncryptionKeyArn\n        - KMSDecryptPolicy:\n            KeyId: !Ref DynamoDBKmsKey\n        - DynamoDBCrudPolicy:\n            TableName: !Ref SessionsTable\n        - DynamoDBCrudPolicy:\n            TableName: !Ref UserIssuedCredentialsV2Table\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/credentialIssuers/*\n        - SSMParameterReadPolicy:\n            ParameterName: !Sub ${Environment}/core/self/*\n        - AWSSecretsManagerGetSecretValuePolicy:\n            SecretArn: !Sub arn:aws:secretsmanager:eu-west-2:*:secret:/${Environment}/core/self/ci-scoring-config-*\n        - SQSSendMessagePolicy:\n            QueueName: !ImportValue AuditEventQueueName\n        - Statement:\n            - Sid: invokeGetCiFunction\n              Effect: Allow\n              Action:\n                - 'lambda:InvokeFunction'\n              Resource:\n                - !Sub\n                  - \"arn:aws:lambda:eu-west-2:${contra_indicator_storage_account_id}:function:getContraIndicators-${env}\"\n                  - contra_indicator_storage_account_id: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - ciStorageAccountId\n                    env: !FindInMap\n                      - EnvironmentConfiguration\n                      - !Ref AWS::AccountId\n                      - environment\n      Events:\n        IPVCorePrivateAPI:\n          Type: Api\n          Properties:\n            RestApiId:\n              Ref: IPVCorePrivateAPI\n            Path: /journey/check-existing-identity\n            Method: POST\n      AutoPublishAlias: live\n      ProvisionedConcurrencyConfig:\n        !If\n        - AddProvisionedConcurrency\n        - ProvisionedConcurrentExecutions: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, provisionedConcurrency ]\n        - !Ref AWS::NoValue\n\n  CheckExistingIdentityFunctionLogGroup:\n    Type: AWS::Logs::LogGroup\n    Properties:\n      RetentionInDays: 14\n      LogGroupName: !Sub \"/aws/lambda/check-existing-identity-${Environment}\"\n      KmsKeyId: !GetAtt LoggingKmsKey.Arn\n\n  CheckExistingIdentityFunctionLogGroupSubscriptionFilter:\n    Type: AWS::Logs::SubscriptionFilter\n    Condition: IsNotDevelopment\n    Properties:\n      DestinationArn: \"arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython\"\n      FilterPattern: \"\"\n      LogGroupName: !Ref CheckExistingIdentityFunctionLogGroup\n\n\n  UserIssuedCredentialsV2Table:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.\n      TableName: !Sub \"user-issued-credentials-v2-${Environment}\"\n      BillingMode: \"PAY_PER_REQUEST\"\n      AttributeDefinitions:\n        - AttributeName: \"userId\"\n          AttributeType: \"S\"\n        - AttributeName: \"credentialIssuer\"\n          AttributeType: \"S\"\n      KeySchema:\n        - AttributeName: \"userId\"\n          KeyType: \"HASH\"\n        - AttributeName: \"credentialIssuer\"\n          KeyType: \"RANGE\"\n      TimeToLiveSpecification:\n        AttributeName: \"ttl\"\n        Enabled: true\n      SSESpecification:\n        SSEEnabled: true\n        SSEType: KMS\n        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn\n\n  SessionsTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.\n      TableName: !Sub \"sessions-${Environment}\"\n      BillingMode: \"PAY_PER_REQUEST\"\n      AttributeDefinitions:\n        - AttributeName: \"ipvSessionId\"\n          AttributeType: \"S\"\n        - AttributeName: \"authorizationCode\"\n          AttributeType: \"S\"\n        - AttributeName: \"accessToken\"\n          AttributeType: \"S\"\n      KeySchema:\n        - AttributeName: \"ipvSessionId\"\n          KeyType: \"HASH\"\n      GlobalSecondaryIndexes:\n        - IndexName: \"authorizationCode\"\n          KeySchema:\n            - AttributeName: \"authorizationCode\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: \"ALL\"\n        - IndexName: \"accessToken\"\n          KeySchema:\n            - AttributeName: \"accessToken\"\n              KeyType: \"HASH\"\n          Projection:\n            ProjectionType: \"ALL\"\n      TimeToLiveSpecification:\n        AttributeName: \"ttl\"\n        Enabled: true\n      SSESpecification:\n        SSEEnabled: true\n        SSEType: KMS\n        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn\n\n  ClientAuthJwtIdsTable:\n    Type: AWS::DynamoDB::Table\n    # checkov:skip=CKV_AWS_28: Point in time recovery is not necessary for this table.\n    Properties:\n      TableName: !Sub \"client-auth-jwt-ids-${Environment}\"\n      BillingMode: \"PAY_PER_REQUEST\"\n      AttributeDefinitions:\n        - AttributeName: \"jwtId\"\n          AttributeType: \"S\"\n      KeySchema:\n        - AttributeName: \"jwtId\"\n          KeyType: \"HASH\"\n      TimeToLiveSpecification:\n        AttributeName: \"ttl\"\n        Enabled: true\n      SSESpecification:\n        SSEEnabled: true\n        SSEType: KMS\n        KMSMasterKeyId: !GetAtt DynamoDBKmsKey.Arn\n\n  DynamoDBKmsKey:\n    Type: AWS::KMS::Key\n    Properties:\n      EnableKeyRotation: true\n      KeyPolicy:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS: !Sub \"arn:aws:iam::${AWS::AccountId}:root\"\n            Action:\n              - kms:*\n            Resource: \"*\"\n          - Effect: Allow\n            Principal:\n              Service: \"dynamodb.amazonaws.com\"\n            Action:\n              - \"kms:Encrypt*\"\n              - \"kms:Decrypt*\"\n              - \"kms:ReEncrypt*\"\n              - \"kms:GenerateDataKey*\"\n              - \"kms:Describe*\"\n            Resource: \"*\"\n            Condition:\n              StringEquals:\n                \"kms:CallerAccount\": !Sub \"${AWS::AccountId}\"\n                \"kms:ViaService\":\n                  - \"dynamodb.amazonaws.com\"\n                  - !Sub \"lambda.${AWS::Region}.amazonaws.com\"\n\n  LoggingKmsKey:\n    Type: AWS::KMS::Key\n    Properties:\n      EnableKeyRotation: true\n      KeyPolicy:\n        Version: 2012-10-17\n        Statement:\n          - Effect: Allow\n            Principal:\n              AWS: !Sub \"arn:aws:iam::${AWS::AccountId}:root\"\n            Action:\n              - kms:*\n            Resource: \"*\"\n          - Effect: Allow\n            Principal:\n              Service: !Sub \"logs.${AWS::Region}.amazonaws.com\"\n            Action:\n              - \"kms:Encrypt*\"\n              - \"kms:Decrypt*\"\n              - \"kms:ReEncrypt*\"\n              - \"kms:GenerateDataKey*\"\n              - \"kms:Describe*\"\n            Resource: \"*\"\n            Condition:\n              ArnLike:\n                \"kms:EncryptionContext:aws:logs:arn\": !Sub \"arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*\"\n\n  CoreApiPrivateGw5xxErrors:\n    Type: AWS::CloudWatch::Alarm\n    Condition: IsNotDevelopment\n    Properties:\n        AlarmName: PrivateApiGateWay5xxAlarm\n        ActionsEnabled: true\n        AlarmActions:\n          - !ImportValue sns-topics-AlarmTopic\n        OKActions:\n          - !ImportValue sns-topics-AlarmTopic\n        InsufficientDataActions: []\n        EvaluationPeriods: 3\n        DatapointsToAlarm: 3\n        Threshold: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, pgw500ErrorLimit ]\n        ComparisonOperator: GreaterThanThreshold\n        TreatMissingData: notBreaching\n        Metrics:\n            - Id: e1\n              Label: Sum-of-5xx-Errors\n              ReturnData: true\n              Expression: SUM(METRICS())\n            - Id: m1\n              ReturnData: false\n              MetricStat:\n                  Metric:\n                      Namespace: AWS/ApiGateway\n                      MetricName: 5XXError\n                      Dimensions:\n                          - Name: ApiName\n                            Value: !Sub IPV Core Private API Gateway ${Environment}\n                  Period: 300\n                  Stat: Sum\n\n  CoreApiExternalGw5xxErrors:\n    Type: AWS::CloudWatch::Alarm\n    Condition: IsNotDevelopment\n    Properties:\n      AlarmName: ExternalApiGateWay5xxAlarm\n      ActionsEnabled: true\n      AlarmActions:\n        - !ImportValue sns-topics-AlarmTopic\n      OKActions:\n        - !ImportValue sns-topics-AlarmTopic\n      InsufficientDataActions: []\n      EvaluationPeriods: 3\n      DatapointsToAlarm: 3\n      Threshold: !FindInMap [ EnvironmentConfiguration, !Ref AWS::AccountId, egw500ErrorLimit ]\n      ComparisonOperator: GreaterThanThreshold\n      TreatMissingData: notBreaching\n      Metrics:\n        - Id: e1\n          Label: Sum-of-5xx-Errors\n          ReturnData: true\n          Expression: SUM(METRICS())\n        - Id: m1\n          ReturnData: false\n          MetricStat:\n            Metric:\n              Namespace: AWS/ApiGateway\n              MetricName: 5XXError\n              Dimensions:\n                - Name: ApiName\n                  Value: !Sub IPV Core External API Gateway ${Environment}\n            Period: 300\n            Stat: Sum\n\nOutputs:\n  IPVCorePrivateAPIGatewayID:\n    Description: Core Back Private API Gateway ID\n    Export:\n      Name: !Sub \"IPVCorePrivateAPIGatewayID-${Environment}\"\n    Value: !Ref IPVCorePrivateAPI\n  IPVCoreExternalAPIGatewayID:\n    Description: Core Back External API Gateway ID\n    Export:\n      Name: !Sub \"IPVCoreExternalAPIGatewayID-${Environment}\"\n    Value: !Ref IPVCoreExternalAPI\n",
			"canonicalURL": "/github.com/alphagov/di-ipv-core-back@39a02d25d563e79d2e95e12d82431f88de16e829/-/blob/deploy/template.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alphagov/di-ipv-core-back/blob/39a02d25d563e79d2e95e12d82431f88de16e829/deploy/template.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at deploy/template.yaml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}