{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CapacitorSet/box-js"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "integrations/api/swagger.yaml",
			"byteSize": 8306,
			"content": "openapi: 3.0.0\ninfo:\n  title: Box-js API\n  version: beta\nservers:\n  - url: 'http://127.0.0.1:9000/'\npaths:\n  '/sample/{id}':\n    get:\n      summary: Retrieves the analysis results\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: \u003e-\n            The analysis ID, as a UUID (eg.\n            `e483593a-4640-42cd-888d-0e97206e9131`)\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  code:\n                    type: integer\n                    description: \u003e\n                      Exit code of the analysis, as documented\n                      [here](https://github.com/CapacitorSet/box-js/tree/master/integrations#running-in-docker)\n                  stderr:\n                    type: string\n                    description: |\n                      Errors printed during the analysis, if any\n                    example: ''\n        '400':\n          description: Invalid ID. The ID must be an UUID.\n        '404':\n          description: 'Folder not found, or analysis not ready.'\n    delete:\n      summary: Deletes the analysis data\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: \u003e-\n            The analysis ID, as a UUID (eg.\n            `e483593a-4640-42cd-888d-0e97206e9131`)\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK (returns \"1\").\n        '400':\n          description: Invalid ID. The ID must be an UUID.\n        '404':\n          description: \u003e-\n            Folder not found. The analysis may have already been deleted, or it\n            never existed in the first place.\n  '/sample/{id}/urls':\n    get:\n      summary: Returns the list of extracted URLs\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: \u003e-\n            The analysis ID, as a UUID (eg.\n            `e483593a-4640-42cd-888d-0e97206e9131`)\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  example: 'http://malware.com/cryptolocker.exe'\n        '400':\n          description: Invalid ID. The ID must be an UUID.\n        '404':\n          description: \u003e-\n            File not found. Either the analysis was deleted, isn't yet ready, or\n            no URL was extracted yet.\n  '/sample/{id}/resources':\n    get:\n      summary: Returns the list of resources (i.e. files)\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: \u003e-\n            The analysis ID, as a UUID (eg.\n            `e483593a-4640-42cd-888d-0e97206e9131`)\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    \u003cUUID\u003e:\n                      type: object\n                      properties:\n                        path:\n                          type: string\n                          description: The path in the emulated environment\n                          example: 'C:\\Windows\\malware.exe'\n                        type:\n                          type: string\n                          description: 'The file type, as reported by `file`'\n                          example: 'PE32 executable (GUI) Intel 80386, for MS Windows'\n                        md5:\n                          type: string\n                          description: The MD5 hash of the resource\n        '400':\n          description: Invalid ID. The ID must be an UUID.\n        '404':\n          description: \u003e-\n            File not found. Either the analysis was deleted, isn't yet ready, or\n            no URL was extracted yet.\n  '/sample/{id}/snippets':\n    get:\n      summary: Returns the list of snippets (i.e. all code that was executed)\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: \u003e-\n            The analysis ID, as a UUID (eg.\n            `e483593a-4640-42cd-888d-0e97206e9131`)\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    \u003cUUID\u003e:\n                      type: object\n                      properties:\n                        as:\n                          type: string\n                          description: The type of code (JS or shell command)\n                          example: eval'd JS\n        '400':\n          description: Invalid ID. The ID must be an UUID.\n        '404':\n          description: File not found. Either the analysis was deleted or isn't ready yet.\n  '/sample/{id}/raw/{filename}':\n    get:\n      summary: Returns a file from an analysis\n      parameters:\n        - name: id\n          required: true\n          in: path\n          description: \u003e-\n            The analysis ID, as a UUID (eg.\n            `e483593a-4640-42cd-888d-0e97206e9131`)\n          schema:\n            type: string\n            format: uuid\n        - name: filename\n          required: true\n          in: query\n          description: The filename (eg. `analysis.log`)\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK (returns the file).\n        '400':\n          description: Invalid ID. The ID must be an UUID.\n        '404':\n          description: \u003e-\n            File not found. Either the analysis was deleted, isn't yet ready or\n            the file does not exist.\n  /sample:\n    post:\n      summary: Uploads a sample\n      responses:\n        '200':\n          description: OK (returns the sample ID)\n  /concurrency:\n    get:\n      summary: \u003e-\n        Returns the concurrency level (i.e. how many analyses can run at the\n        same time)\n      responses:\n        '200':\n          description: OK (returns the concurrency level)\n    post:\n      summary: Updates the concurrency level\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: integer\n                  description: The new concurrency level\n                  example: 4\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: integer\n                  description: The new concurrency level\n                  example: 4\n      responses:\n        '200':\n          description: OK (returns \"1\")\n  /debug/connectivity:\n    get:\n      summary: Returns \"1\"\n      description: \u003e\n        This endpoint can be used to run connectivity checks, i.e. to ensure\n        that you can reach the API server. Simply request /debug/connectivity;\n        it should return \"1\".\n      responses:\n        '200':\n          description: OK (returns \"1\")\n  /debug/docker:\n    get:\n      summary: Runs a test container\n      description: \u003e\n        This endpoint will try to create the container\n        [`hello-world`](https://hub.docker.com/_/hello-world/) and verify that\n        its output is correct. It is used to verify that the application can\n        create containers successfully; an error may indicate that Docker wasn't\n        installed correctly, or that the user running the API server can't\n        create Docker containers because of incorrect permissions.\n      responses:\n        '200':\n          description: OK (returns \"1\")\n        '500':\n          description: \u003e-\n            An error occurred creating the Docker container, read the output for\n            more information.\n",
			"canonicalURL": "/github.com/CapacitorSet/box-js@e41c4ae765dc61885a598bc8622951b7dd5e8c6c/-/blob/integrations/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CapacitorSet/box-js/blob/e41c4ae765dc61885a598bc8622951b7dd5e8c6c/integrations/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/sample/{id}/raw/{filename}\": get: at 1:3042: parse path \"/sample/{id}/raw/{filename}\": path parameter not specified: \"filename\""
}