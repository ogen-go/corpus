{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "cnssearch.json",
			"size": 0,
			"path": "openapi3_autogen/cnssearch.json",
			"byteSize": 3491,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"cnssearch\": {\n        \"description\": \"Provide search results for Prisma Cloud's investigate page.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"ID of the search request.\",\n            \"type\": \"string\"\n          },\n          \"data\": {\n            \"$ref\": \"./pcsearchresult#/components/schemas/pcsearchresult\"\n          },\n          \"description\": {\n            \"description\": \"Description of the search.\",\n            \"type\": \"string\"\n          },\n          \"endAbsolute\": {\n            \"default\": 0,\n            \"description\": \"Absolute end time of search, in UNIX time.\",\n            \"type\": \"integer\"\n          },\n          \"limit\": {\n            \"default\": 100,\n            \"description\": \"The number of items to fetch.\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"description\": \"Name of the RQL search request. Should set to be empty.\",\n            \"type\": \"string\"\n          },\n          \"pageToken\": {\n            \"description\": \"Represents the token to fetch next page.\",\n            \"type\": \"string\"\n          },\n          \"parsedQuery\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"The cloud network query data that was created after the RQL was parsed.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"query\": {\n            \"description\": \"The RQL query.\",\n            \"example\": \"network dns where id == 1\",\n            \"type\": \"string\"\n          },\n          \"saved\": {\n            \"description\": \"Indicates if the search has been saved.\",\n            \"type\": \"boolean\"\n          },\n          \"searchType\": {\n            \"description\": \"Type of search request. Should set to be network.\",\n            \"type\": \"string\"\n          },\n          \"startAbsolute\": {\n            \"default\": 0,\n            \"description\": \"Absolute start time of search, in UNIX time.\",\n            \"type\": \"integer\"\n          },\n          \"timeRange\": {\n            \"$ref\": \"./pctimerange#/components/schemas/pctimerange\"\n          }\n        },\n        \"required\": [\n          \"query\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"cnssearch\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/cnssearches\": {\n      \"post\": {\n        \"description\": \"Retrieves RQL search results.\",\n        \"operationId\": \"create-a-new-cnssearch\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/cnssearch\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/cnssearch\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"core/rql\",\n          \"karl\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'core/rql'\",\n      \"name\": \"core/rql\"\n    },\n    {\n      \"description\": \"This tag is for package 'karl'\",\n      \"name\": \"karl\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: paths: /cnssearches: post: operation \"create-a-new-cnssearch\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/cnssearch\": parse schema: data: parse schema: resolve \"./pcsearchresult#/components/schemas/pcsearchresult\": find schema: external base \"./pcsearchresult\" is not supported"
}