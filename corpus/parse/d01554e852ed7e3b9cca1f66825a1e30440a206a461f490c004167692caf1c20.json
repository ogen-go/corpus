{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Observations_ObservationDbId_GET_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/Observations/Observations_ObservationDbId_GET_PUT.yaml",
			"byteSize": 2436,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /observations/{observationDbId}:\n    get:\n      summary: Get the details of a specific Observations \n      description: |-\n        Get the details of a specific Observations\n\n        observationTimestamp should be ISO8601 format with timezone -\u003e YYYY-MM-DDThh:mm:ss+hhmm\n      parameters:\n      - description: The unique ID of an observation\n        in: path\n        name: observationDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/ObservationSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Observations\n    put:\n      summary: Update an existing Observation\n      description: Update an existing Observation\n      parameters:\n      - description: The unique ID of an observation\n        in: path\n        name: observationDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObservationNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ObservationSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Observations\ncomponents:\n  responses:\n    ObservationSingleResponse:\n      content:\n        application/json:\n          schema:\n            title: ObservationSingleResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                $ref: '#/components/schemas/Observation'\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Phenotyping/Observations/Observations_ObservationDbId_GET_PUT.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Phenotyping/Observations/Observations_ObservationDbId_GET_PUT.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: responses: \"ObservationSingleResponse\": at 1:57: at 1:68: content: application/json: at 1:88: schema: at 1:98: parse schema: property \"@context\": at 1:124: parse schema: resolve \"#/components/schemas/Context\": find schema: resolve: can't find value for \"components/schemas/Context\""
}