{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "media-list.yaml",
			"size": 0,
			"path": "v1/pcs/media-list.yaml",
			"byteSize": 7988,
			"content": "openapi: 3.0.1\ninfo:\n  version: 1.0.0-beta\n  title: MediaWiki page media API\n  description: API for retrieving data about media items appearing on a given page\n  termsOfService: https://www.mediawiki.org/wiki/REST_API#Terms_and_conditions\n  contact:\n    name: Product Infrastructure\n    url: https://www.mediawiki.org/wiki/Wikimedia_Product/Wikimedia_Product_Infrastructure_team\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\npaths:\n  /media-list/{title}:\n    x-route-filters:\n      - path: ./lib/access_check_filter.js\n        options:\n          redirect_cache_control: '{{options.response_cache_control}}'\n      - path: lib/security_response_header_filter.js\n      - path: lib/language_variants_filter.js\n    get: \u0026media_list_title_get_spec\n      tags:\n        - Page content\n      summary: Get list of media files used on a page.\n      description: |\n        Gets the list of media items (images, audio, and video) in the order in which they appear on a\n        given wiki page.\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/Wikimedia_Product/Wikimedia_Product_Infrastructure_team/API_endpoint_stability_policy#Unstable)\n\n        Please follow [wikitech-l](https://lists.wikimedia.org/mailman/listinfo/wikitech-l) or [mediawiki-api-announce](https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce) for announcements of breaking changes.\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - name: redirect\n          in: query\n          description: |\n            Requests for [redirect pages](https://www.mediawiki.org/wiki/Help:Redirects) return HTTP 302 with a redirect target in `Location` header and content in the body.\n            To get a 200 response instead, supply `false` to the `redirect` parameter.\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: JSON containing metadata of media items appearing on the given\n            page.\n          headers:\n            ETag:\n              description: |\n                Syntax: \"{revision}/{tid}\". Example: \"701384379/154d7bca-c264-11e5-8c2f-1b51b33b59fc\"\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Media/1.3.1\":\n              schema:\n                $ref: '#/components/schemas/media_list'\n        301:\n          description: |\n            A permanent redirect is returned if the supplied article title was not in the normalized form.\n            To avoid this kind of redirect, you can use the [mediawiki-title](https://github.com/wikimedia/mediawiki-title) library to perform\n            title normalization client-side.\n\n            Beware that redirected pre-flighted cross-origin requests (such as those sending custom request headers like `Api-User-Agent`)\n            will fail in most current browsers [due to a spec bug](https://github.com/whatwg/fetch/issues/204).\n        302:\n          description: |\n            The page is a [redirect page](https://www.mediawiki.org/wiki/Help:Redirects).\n            The `location` header points to the redirect target.\n            If you would like to avoid automatically following redirect pages, set the `redirect=false` query parameter.\n\n            Beware that redirected pre-flighted cross-origin requests (such as those sending custom request headers like `Api-User-Agent`)\n            will fail in most current browsers [due to a spec bug](https://github.com/whatwg/fetch/issues/204).\n        404:\n          description: Unknown page title\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      operationId: getContent-media-list\n      x-monitor: true\n      x-amples:\n        - title: Get media-list from storage\n          request:\n            params:\n              domain: en.wikipedia.org\n              title: User:BSitzmann_(WMF)/MCS/Test/Frankenstein\n          response:\n            status: 200\n            headers:\n              etag: /.+/\n              content-type: /^application\\/json/\n            body:\n              revision: /\\d+/\n              tid: /.+/\n              items:\n                - type: /.+/\n                  section_id: /\\d+/\n                  showInGallery: /.+/\n\n  /media-list/{title}/{revision}:\n    get:\n      \u003c\u003c: *media_list_title_get_spec\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - name: revision\n          in: path\n          description: |\n            Optional page revision. Note that older revisions are not stored, so request latency with the revision would be higher.\n          required: true\n          schema:\n            type: integer\n        - name: redirect\n          in: query\n          description: |\n            Requests for [redirect pages](https://www.mediawiki.org/wiki/Help:Redirects) return HTTP 302 with a redirect target in `Location` header and content in the body.\n            To get a 200 response instead, supply `false` to the `redirect` parameter.\n          schema:\n            type: boolean\n      operationId: getContentWithRevision-media-list\n      x-monitor: false\n\ncomponents:\n  schemas:\n    titles_set:\n      type: object\n      properties:\n        canonical:\n          type: string\n          description: the DB key (non-prefixed)\n        normalized:\n          type: string\n          description: the normalized title (https://www.mediawiki.org/wiki/API:Query#Title_normalization)\n        display:\n          type: string\n          description: the title as it should be displayed to the user\n      required:\n        - canonical\n        - normalized\n        - display\n\n    media_list:\n      type: object\n      properties:\n        revision:\n          type: string\n          description: the revision ID used to create the list\n        tid:\n          type: string\n          description: the time uuid of the page rendering used to create the list\n        items:\n          type: array\n          description: a list of media items\n          items:\n            $ref: '#/components/schemas/media_item'\n      required:\n        - items\n        - revision\n        - tid\n\n    media_item:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The file page title\n        type:\n          type: string\n          enum:\n            - image\n            - video\n            - audio\n        section_id:\n          type: integer\n          description: section ID in which the item is found on the page\n        showInGallery:\n          type: boolean\n          description: whether the client should show the file in an image gallery presentation\n        caption:\n          type: object\n          properties:\n            html:\n              type: string\n              description: on-wiki caption for the media item, including all HTML markup\n            text:\n              type: string\n              description: plain text of the on-wiki caption for the media item\n        original:\n          type: object\n          description: reference to a Mathoid-rendered math formula image\n          properties:\n            source:\n              type: string\n              description: Mathoid image render URL\n            mime:\n              type: string\n              description: the Mathoid image mime type\n      required:\n        - type\n        - section_id\n        - showInGallery\n",
			"canonicalURL": "/github.com/wikimedia/restbase@c45fefc52de715f3b0524662bfbc4240d8f90553/-/blob/v1/pcs/media-list.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wikimedia/restbase/blob/c45fefc52de715f3b0524662bfbc4240d8f90553/v1/pcs/media-list.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/media-list/{title}\": get: operation \"getContent-media-list\": responses: 404: content: application/problem+json: schema: parse schema: at 1:4804: find schema: resolve: can't find value for \"components/schemas/problem\""
}