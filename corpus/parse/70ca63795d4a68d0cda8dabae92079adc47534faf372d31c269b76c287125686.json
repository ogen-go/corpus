{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/wordpress/openapi.yml",
			"byteSize": 76236,
			"content": "openapi: 3.0.1\ninfo:\n  title: Wordpress v2 API\n  description: \u003e\n    This is a generated connector for [WordPress API v1.0](https://developer.wordpress.org/rest-api/) OpenAPI specification.\n    \n    The WordPress REST API provides an interface for applications to interact with your WordPress site. \n    WordPress API provides a rich set of tools and interfaces for building sites, and you should not feel pressured to use the REST API \n    if your site is already working the way you expect. You do not need to use the REST API to build a WordPress theme or plugin.\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create a [WordPress account](https://login.wordpress.org/register) and obtain tokens by following [this guide](https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/).\n  x-ballerina-display:\n    label: WordPress\n    iconPath: \"icon.png\"\n  version: 0.1.0\npaths:\n  /posts:\n    get:\n      summary: List Posts\n      operationId: getPosts\n      description: Scope under which the request is made; determines fields present\n        in response.\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/posts/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Posts Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/post'\n    post:\n      summary: Create Post\n      operationId: createPosts\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                title:\n                  type: object\n                  description: The title for the object.\n                content:\n                  type: string\n                  description: The content for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                excerpt:\n                  type: object\n                  description: The excerpt for the object\n                featured_media:\n                  type: string\n                  description: The id of the featured media for the object.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                sticky:\n                  type: boolean\n                  description: Whether or not the object should be treated as sticky.\n                categories:\n                  type: array\n                  description: Limit result set to all items that have the specified\n                    term assigned in the categories taxonomy.\n                  items:\n                    type: string\n                tags:\n                  type: array\n                  description: Limit result set to all items that have the specified\n                    term assigned in the tags taxonomy.\n                  items:\n                    type: string\n      responses:\n        200:\n          description: Post created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post'\n      security:\n      - oauth:\n        - basic\n  /posts/{id}:\n    get:\n      summary: Get Single Post\n      operationId: getSinglePost\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Post retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post'\n    post:\n      summary: Update Single Post\n      operationId: updateSinglePost\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                page:\n                  type: integer\n                  description: Current page of the collection. Default 1\n                  format: int32\n                per_page:\n                  type: integer\n                  description: Maximum number of items to be returned in result set.\n                    Default 10\n                  format: int32\n                search:\n                  type: string\n                  description: Limit results to those matching a string.\n                after:\n                  type: string\n                  description: Limit response to resources published after a given\n                    ISO8601 compliant date.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                author_exclude:\n                  type: string\n                  description: Ensure result set excludes posts assigned to specific\n                    authors.\n                before:\n                  type: string\n                  description: Limit response to resources published before a given\n                    ISO8601 compliant date.\n                exclude:\n                  type: string\n                  description: Ensure result set excludes specific ids.\n                include:\n                  type: string\n                  description: Ensure result set includes specific ids.\n                offset:\n                  type: string\n                  description: Offset the result set by a specific number of items.\n                order:\n                  type: string\n                  description: Order sort attribute ascending or descending. Default\n                    desc\n                  enum:\n                  - desc\n                  - asc\n                orderby:\n                  type: string\n                  description: Sort collection by object attribute. Default date\n                  enum:\n                  - date\n                  - id\n                  - include\n                  - title\n                  - slug\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                filter:\n                  type: string\n                  description: Use WP Query arguments to modify the response; private\n                    query vars require appropriate authorization.\n                categories:\n                  type: array\n                  description: Limit result set to all items that have the specified\n                    term assigned in the categories taxonomy.\n                  items:\n                    type: string\n                tags:\n                  type: array\n                  description: Limit result set to all items that have the specified\n                    term assigned in the tags taxonomy.\n                  items:\n                    type: string\n      responses:\n        200:\n          description: Post updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/post'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single Post\n      operationId: deleteSinglePost\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Post deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\n  /posts/{id}/revisions:\n    get:\n      summary: Get post revisions\n      operationId: getPostRevisions\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/posts/revisions.html\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Revisions Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/revision'\n  /posts/{id}/revisions/{revisionid}:\n    get:\n      summary: Get single post revisions\n      operationId: getSinglePostRevisions\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/posts/revisions.html\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: revisionid\n        in: path\n        description: Id of revision\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Revision retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/revision'\n    delete:\n      summary: Delete single post revisions\n      operationId: deleteSinglePostRevisions\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/posts/revisions.html\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: revisionid\n        in: path\n        description: Id of revision\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Revision retrieved.\n          content: {}\n  /pages:\n    get:\n      summary: List Pages\n      operationId: listPages\n      description: Scope under which the request is made; determines fields present\n        in response.\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/pages/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Pages Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/page'\n    post:\n      summary: Create Page\n      operationId: createPage\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                parent:\n                  type: integer\n                  description: The id for the parent of the object.\n                  format: int32\n                title:\n                  type: object\n                  description: The title for the object.\n                content:\n                  type: string\n                  description: The content for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                excerpt:\n                  type: object\n                  description: The excerpt for the object\n                featured_media:\n                  type: string\n                  description: The id of the featured media for the object.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                menu_order:\n                  type: integer\n                  description: The order of the object in relation to other object\n                    of its type.\n                  format: int32\n                template:\n                  type: integer\n                  description: The theme file to use to display the object.\n                  format: int32\n      responses:\n        200:\n          description: Page created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page'\n      security:\n      - oauth:\n        - basic\n  /pages/{id}:\n    get:\n      summary: Get Single Page\n      operationId: getSinglePage\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Page retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page'\n    post:\n      summary: Update Single Page\n      operationId: updateSinglePage\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                parent:\n                  type: integer\n                  description: The id for the parent of the object.\n                  format: int32\n                title:\n                  type: object\n                  description: The title for the object.\n                content:\n                  type: string\n                  description: The content for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                excerpt:\n                  type: object\n                  description: The excerpt for the object\n                featured_media:\n                  type: string\n                  description: The id of the featured media for the object.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                menu_order:\n                  type: integer\n                  description: The order of the object in relation to other object\n                    of its type.\n                  format: int32\n                template:\n                  type: integer\n                  description: The theme file to use to display the object.\n                  format: int32\n      responses:\n        200:\n          description: Page updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/page'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single Page\n      operationId: deleteSinglePage\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Post deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\n  /media:\n    get:\n      summary: List Media\n      operationId: listMedia\n      description: Scope under which the request is made; determines fields present\n        in response.\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/media/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Media Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/media'\n    post:\n      summary: Create Media\n      operationId: createMedia\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                title:\n                  type: object\n                  description: The title for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                alt_text:\n                  type: string\n                  description: Alternative text to display when resource is not displayed.\n                caption:\n                  type: string\n                  description: The caption for the resource.\n                description:\n                  type: string\n                  description: The description for the resource\n                post:\n                  type: string\n                  description: The id for the associated post of the resource.\n      responses:\n        200:\n          description: Media created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/media'\n      security:\n      - oauth:\n        - basic\n  /media/{id}:\n    get:\n      summary: Get Single Media\n      operationId: getSingleMedia\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Page retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/media'\n    post:\n      summary: Update Single Media\n      operationId: updateSingleMedia\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                title:\n                  type: object\n                  description: The title for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                alt_text:\n                  type: string\n                  description: Alternative text to display when resource is not displayed.\n                caption:\n                  type: string\n                  description: The caption for the resource.\n                description:\n                  type: string\n                  description: The description for the resource\n                post:\n                  type: string\n                  description: The id for the associated post of the resource.\n      responses:\n        200:\n          description: Page updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/media'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single Media\n      operationId: delteSingleMedia\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Media deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\n  /types:\n    get:\n      summary: List Type\n      operationId: listType\n      description: Scope under which the request is made; determines fields present\n        in response.\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/types/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Types Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/type'\n  /types/{id}:\n    get:\n      summary: Get Single Type\n      operationId: getSingleType\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Type retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/type'\n  /statuses:\n    get:\n      summary: List Status\n      operationId: listStatus\n      description: Scope under which the request is made; determines fields present\n        in response.\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/statuses/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Statuses Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/status'\n  /statuses/{id}:\n    get:\n      summary: Get Single Status\n      operationId: getSingleStatus\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Status retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/status'\n  /comments:\n    get:\n      summary: List Comments\n      operationId: listComments\n      description: Scope under which the request is made; determines fields present\n        in response.\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/comments/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Comments Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/comment'\n    post:\n      summary: Create Comment\n      operationId: createComment\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                title:\n                  type: object\n                  description: The title for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                alt_text:\n                  type: string\n                  description: Alternative text to display when resource is not displayed.\n                caption:\n                  type: string\n                  description: The caption for the resource.\n                description:\n                  type: string\n                  description: The description for the resource\n                post:\n                  type: string\n                  description: The id for the associated post of the resource.\n      responses:\n        200:\n          description: Comment created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/comment'\n      security:\n      - oauth:\n        - basic\n  /comments/{id}:\n    get:\n      operationId: getSingleComment\n      summary: Get Single Comment\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Comment retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/comment'\n    post:\n      summary: Update Single Comment\n      operationId: updateSingleComment\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              properties:\n                date:\n                  type: string\n                  description: The date the object was published, in the site's timezone.\n                  format: date-time\n                date_gmt:\n                  type: string\n                  description: The date the object was published, as GMT.\n                  format: date-time\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                status:\n                  type: string\n                  description: Limit result set to posts assigned a specific status.Default\n                    publish\n                  enum:\n                  - publish\n                  - future\n                  - draft\n                  - pending\n                  - private\n                title:\n                  type: object\n                  description: The title for the object.\n                author:\n                  type: integer\n                  description: Limit result set to posts assigned to specific authors.\n                comment_status:\n                  type: string\n                  description: Whether or not comments are open on the object\n                  enum:\n                  - open\n                  - closed\n                ping_status:\n                  type: string\n                  description: Whether or not the object can be pinged.\n                  enum:\n                  - open\n                  - closed\n                alt_text:\n                  type: string\n                  description: Alternative text to display when resource is not displayed.\n                caption:\n                  type: string\n                  description: The caption for the resource.\n                description:\n                  type: string\n                  description: The description for the resource\n                post:\n                  type: string\n                  description: The id for the associated post of the resource.\n      responses:\n        200:\n          description: Page updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/comment'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single Comment\n      operationId: deleteSingleComment\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Comment deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\n  /taxonomies:\n    get:\n      summary: List Taxonomy\n      operationId: listTaxonomy\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/taxonomies/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Types Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/taxonomy'\n  /taxonomies/{id}:\n    get:\n      summary: Get Single Taxonomy\n      operationId: getSingleTaxonomy\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Taxonomy retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/taxonomy'\n  /categories:\n    get:\n      summary: List categories\n      operationId: listCategories\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/categories/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Category Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/category'\n    post:\n      summary: Create Category\n      operationId: createCategory\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n              - name\n              properties:\n                description:\n                  type: string\n                  description: The description for the resource\n                name:\n                  type: string\n                  description: HTML title for the resource.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                parent:\n                  type: integer\n                  description: The id for the parent of the object.\n                  format: int32\n        required: true\n      responses:\n        200:\n          description: Category created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/category'\n      security:\n      - oauth:\n        - basic\n  /categories/{id}:\n    get:\n      summary: Get Single Category\n      operationId: getSingleCategory\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Category retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/category'\n    post:\n      summary: Update Single Category\n      operationId: updateSingleCategory\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n              - name\n              properties:\n                description:\n                  type: string\n                  description: The description for the resource\n                name:\n                  type: string\n                  description: HTML title for the resource.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                parent:\n                  type: integer\n                  description: The id for the parent of the object.\n                  format: int32\n        required: true\n      responses:\n        200:\n          description: Category updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/category'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single Category\n      operationId: deleteSingleCategory\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Category deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\n  /tags:\n    get:\n      summary: List Tags\n      operationId: gettagList\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/tags/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Tags Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/tag'\n    post:\n      summary: Create Tag\n      operationId: createTag\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n              - name\n              properties:\n                description:\n                  type: string\n                  description: The description for the resource\n                name:\n                  type: string\n                  description: HTML title for the resource.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n        required: true\n      responses:\n        200:\n          description: Tag created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tag'\n      security:\n      - oauth:\n        - basic\n  /tags/{id}:\n    get:\n      summary: Get Single Tag\n      operationId: getSingleTag\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Tag retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tag'\n    post:\n      summary: Update Single Tag\n      operationId: updateSingleTag\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n              - name\n              properties:\n                description:\n                  type: string\n                  description: The description for the resource\n                name:\n                  type: string\n                  description: HTML title for the resource.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n        required: true\n      responses:\n        200:\n          description: Tag updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tag'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single Tag\n      operationId: deleteSingleTag\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Tag deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\n  /users:\n    get:\n      summary: List Users\n      operationId: listUsers\n      externalDocs:\n        description: More information here\n        url: http://v2.wp-api.org/reference/users/\n      parameters:\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: Users Listed.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/user'\n    post:\n      summary: Create User\n      operationId: createUser\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n              - name\n              properties:\n                username:\n                  type: string\n                  description: The user name for the resource.\n                name:\n                  type: string\n                  description: HTML title for the resource.\n                first_name:\n                  type: string\n                  description: The first name for the resource.\n                last_name:\n                  type: string\n                  description: The last name for the resource.\n                email:\n                  type: string\n                  description: Email of the resource.\n                  format: email\n                url:\n                  type: string\n                  description: URL of the resource.\n                  format: url\n                description:\n                  type: string\n                  description: The description for the resource\n                nickname:\n                  type: string\n                  description: The nickname for the resource.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                roles:\n                  type: array\n                  description: Roles assigned to the resource.\n                  items:\n                    type: string\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                capabilities:\n                  type: array\n                  description: All capabilities used by the resource.\n                  items:\n                    type: string\n        required: true\n      responses:\n        200:\n          description: User created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n      security:\n      - oauth:\n        - basic\n  /users/{id}:\n    get:\n      summary: Get Single User\n      operationId: getSingleUser\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Scope under which the request is made; determines fields present\n          in response.\n        schema:\n          type: string\n          enum:\n          - view\n          - embed\n          - edit\n      responses:\n        200:\n          description: User retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n    post:\n      summary: Update Single User\n      operationId: updateSingleUser\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n              - name\n              properties:\n                username:\n                  type: string\n                  description: The user name for the resource.\n                name:\n                  type: string\n                  description: HTML title for the resource.\n                first_name:\n                  type: string\n                  description: The first name for the resource.\n                last_name:\n                  type: string\n                  description: The last name for the resource.\n                email:\n                  type: string\n                  description: Email of the resource.\n                  format: email\n                url:\n                  type: string\n                  description: URL of the resource.\n                  format: url\n                description:\n                  type: string\n                  description: The description for the resource\n                nickname:\n                  type: string\n                  description: The nickname for the resource.\n                slug:\n                  type: string\n                  description: Limit result set to posts with a specific slug.\n                roles:\n                  type: array\n                  description: Roles assigned to the resource.\n                  items:\n                    type: string\n                password:\n                  type: string\n                  description: The A password to protect access to the post.\n                capabilities:\n                  type: array\n                  description: All capabilities used by the resource.\n                  items:\n                    type: string\n        required: true\n      responses:\n        200:\n          description: User updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/user'\n      security:\n      - oauth:\n        - basic\n    delete:\n      summary: Delete Single User\n      operationId: deleteSingleUser\n      parameters:\n      - name: id\n        in: path\n        description: Id of object\n        required: true\n        schema:\n          type: string\n      - name: force\n        in: query\n        description: Whether to bypass trash and force deletion.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: User deleted.\n          content: {}\n      security:\n      - oauth:\n        - basic\ncomponents:\n  schemas:\n    formData_page:\n      type: integer\n      description: Current page of the collection. Default 1\n      format: int32\n    formData_per_page:\n      type: integer\n      description: Maximum number of items to be returned in result set. Default 10\n      format: int32\n    formData_search:\n      type: string\n      description: Limit results to those matching a string.\n    formData_after:\n      type: string\n      description: Limit response to resources published after a given ISO8601 compliant\n        date.\n    formData_author:\n      type: string\n      description: Limit result set to posts assigned to specific authors.\n    formData_author_exclude:\n      type: string\n      description: Ensure result set excludes posts assigned to specific authors.\n    formData_before:\n      type: string\n      description: Limit response to resources published before a given ISO8601 compliant\n        date.\n    formData_exclude:\n      type: string\n      description: Ensure result set excludes specific ids.\n    formData_include:\n      type: string\n      description: Ensure result set includes specific ids.\n    formData_offset:\n      type: string\n      description: Offset the result set by a specific number of items.\n    formData_order:\n      type: string\n      description: Order sort attribute ascending or descending. Default desc\n      enum:\n      - desc\n      - asc\n    formData_orderby:\n      type: string\n      description: Sort collection by object attribute. Default date\n      enum:\n      - date\n      - id\n      - include\n      - title\n      - slug\n    formData_slug:\n      type: string\n      description: Limit result set to posts with a specific slug.\n    formData_status:\n      type: string\n      description: Limit result set to posts assigned a specific status.Default publish\n      enum:\n      - publish\n      - future\n      - draft\n      - pending\n      - private\n    formData_filter:\n      type: string\n      description: Use WP Query arguments to modify the response; private query vars\n        require appropriate authorization.\n    formData_categories:\n      type: array\n      description: Limit result set to all items that have the specified term assigned\n        in the categories taxonomy.\n      items:\n        type: string\n    formData_tags:\n      type: array\n      description: Limit result set to all items that have the specified term assigned\n        in the tags taxonomy.\n      items:\n        type: string\n    formData_date:\n      type: string\n      description: The date the object was published, in the site's timezone.\n      format: date-time\n    formData_date_gmt:\n      type: string\n      description: The date the object was published, as GMT.\n      format: date-time\n    formData_password:\n      type: string\n      description: The A password to protect access to the post.\n    formData_title:\n      type: string\n      description: The title for the object.\n    formData_content:\n      type: string\n      description: The content for the object.\n    formData_excerpt:\n      type: string\n      description: The excerpt for the object\n    formData_featured_media:\n      type: string\n      description: The id of the featured media for the object.\n    formData_comment_status:\n      type: string\n      description: Whether or not comments are open on the object\n      enum:\n      - open\n      - closed\n    formData_ping_status:\n      type: string\n      description: Whether or not the object can be pinged.\n      enum:\n      - open\n      - closed\n    formData_sticky:\n      type: boolean\n      description: Whether or not the object should be treated as sticky.\n    formData_parent:\n      type: integer\n      description: The id for the parent of the object.\n      format: int32\n    formData_menu_order:\n      type: integer\n      description: The order of the object in relation to other object of its type.\n      format: int32\n    formData_template:\n      type: integer\n      description: The theme file to use to display the object.\n      format: int32\n    formData_parent_exclude:\n      type: string\n      description: Ensure result set excludes specific ids.\n    formData_post:\n      type: string\n      description: The id for the associated post of the resource.\n    formData_description:\n      type: string\n      description: The description for the resource\n    formData_caption:\n      type: string\n      description: The caption for the resource.\n    formData_alt_text:\n      type: string\n      description: Alternative text to display when resource is not displayed.\n    formData_author_email:\n      type: string\n      description: Limit result set to that from a specific author email. Requires\n        authorization.\n    formData_karma:\n      type: string\n      description: Limit result set to that of a particular comment karma. Requires\n        authorization\n    formData_name:\n      type: string\n      description: HTML title for the resource.\n    formData_hide_empty:\n      type: boolean\n      description: Whether to hide resources not assigned to any posts.\n    formData_nickname:\n      type: string\n      description: The nickname for the resource.\n    formData_last_name:\n      type: string\n      description: The last name for the resource.\n    formData_first_name:\n      type: string\n      description: The first name for the resource.\n    formData_username:\n      type: string\n      description: The user name for the resource.\n    formData_url:\n      type: string\n      description: URL of the resource.\n      format: url\n    formData_email:\n      type: string\n      description: Email of the resource.\n      format: email\n    formData_type:\n      type: string\n      description: Limit result set to comments assigned a specific type. Requires\n        authorization. Default comment\n    formData_media_type:\n      type: string\n      description: Type of resource.\n      enum:\n      - file\n      - image\n    formData_mime_type:\n      type: string\n      description: Alternative text to display when resource is not displayed.\n    formData_capabilities:\n      type: array\n      description: All capabilities used by the resource.\n      items:\n        type: string\n    formData_roles:\n      type: array\n      description: Roles assigned to the resource.\n      items:\n        type: string\n    formData_reassign:\n      type: string\n    user:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique identifier for the object.\n        username:\n          type: string\n          description: Login name for the resource.\n        name:\n          type: string\n          description: Display name for the resource.\n        first_name:\n          type: string\n          description: First name for the resource.\n        last_name:\n          type: string\n          description: Last name for the resource.\n        email:\n          type: string\n          description: The email address for the resource.\n        url:\n          type: string\n          description: URL of the resource.\n        description:\n          type: string\n          description: Description of the resource.\n        link:\n          type: string\n          description: Author URL to the resource.\n        nickname:\n          type: string\n          description: The nickname for the resource.\n        slug:\n          type: string\n          description: An alphanumeric identifier for the resource.\n        registered_date:\n          type: string\n          description: Registration date for the resource.\n        roles:\n          type: array\n          description: Roles assigned to the resource.\n          items:\n            type: string\n        password:\n          type: string\n          description: Password for the resource (never included).\n        capabilities:\n          type: object\n          description: All capabilities assigned to the resource.\n          items:\n            type: string\n        extra_capabilities:\n          type: array\n          description: Any extra capabilities assigned to the resource.\n          items:\n            type: string\n        avatar_urls:\n          type: array\n          description: Avatar URLs for the resource.\n          items:\n            type: string\n    comment:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique identifier for the object.\n        author:\n          type: integer\n          description: The id for the author of the object.\n        author_email:\n          type: string\n          description: Email address for the object author.\n        author_ip:\n          type: string\n          description: IP address for the object author.\n        author_name:\n          type: string\n          description: Display name for the object author.\n        author_url:\n          type: string\n          description: URL for the object author.\n        author_user_agent:\n          type: string\n          description: User agent for the object author.\n        content:\n          type: object\n          description: The content for the object.\n        date:\n          type: string\n          description: The date the object was published, in the site's timezone.\n          format: date-time\n        date_gmt:\n          type: string\n          description: The date the object was published, as GMT.\n          format: date-time\n        karma:\n          type: string\n          description: Karma for the object\n        link:\n          type: string\n          description: URL to the object.\n        parent:\n          type: integer\n          description: The id for the parent of the object.\n        post:\n          type: integer\n          description: The id for the associated post of the resource.\n        status:\n          type: string\n          description: A named status for the object.\n          enum:\n          - publish\n          - future\n          - draft\n          - pending\n          - private\n        type:\n          type: string\n          description: Type of Post for the object.\n        author_avatar_urls:\n          type: string\n          description: Avatar URLs for the object author.\n    status:\n      type: object\n      properties:\n        private:\n          type: boolean\n          description: Whether posts with this resource should be private.\n        protected:\n          type: boolean\n          description: Whether posts with this resource should be protected.\n        public:\n          type: boolean\n          description: Whether posts of this resource should be shown in the front\n            end of the site.\n        queryable:\n          type: boolean\n          description: Whether posts with this resource should be publicly-queryable.\n        show_in_list:\n          type: boolean\n          description: Whether to include posts in the edit listing for their post\n            type.\n        name:\n          type: string\n          description: The title for the resource.\n        slug:\n          type: string\n          description: An alphanumeric identifier for the object unique to its type.\n    taxonomy:\n      allOf:\n      - $ref: '#/components/schemas/type'\n      - type: object\n        properties:\n          show_cloud:\n            type: boolean\n            description: Whether or not the term cloud should be displayed.\n          types:\n            type: array\n            description: Types associated with resource.\n            items:\n              type: string\n    category:\n      allOf:\n      - $ref: '#/components/schemas/tag'\n      - type: object\n        properties:\n          parent:\n            type: integer\n            description: The id for the parent of the object.\n    tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique identifier for the object.\n        count:\n          type: integer\n          description: Number of published posts for the resource.\n        description:\n          type: string\n          description: The description for the resource.\n        link:\n          type: string\n          description: URL to the object.\n        name:\n          type: string\n          description: The title for the resource.\n        slug:\n          type: string\n          description: An alphanumeric identifier for the object unique to its type.\n        taxonomy:\n          type: string\n          description: Type attribution for the resource.\n          enum:\n          - category\n          - post_tag\n          - nav_menu\n          - link_category\n          - post_format\n    type:\n      type: object\n      properties:\n        capabilities:\n          type: object\n          description: All capabilities used by the resource.\n          items:\n            type: string\n        description:\n          type: string\n          description: A human-readable description of the resource.\n        hierarchical:\n          type: boolean\n          description: Whether or not the resource should have children.\n        labels:\n          type: object\n          description: Human-readable labels for the resource for various contexts.\n        name:\n          type: string\n          description: The title for the resource.\n        slug:\n          type: string\n          description: An alphanumeric identifier for the object unique to its type.\n    media:\n      type: object\n      properties:\n        date:\n          type: string\n          description: The date the object was published, in the site's timezone.\n          format: date-time\n        date_gmt:\n          type: string\n          description: The date the object was published, as GMT.\n          format: date-time\n        guid:\n          type: object\n          description: The globally unique identifier for the object.\n        id:\n          type: integer\n          description: Unique identifier for the object.\n        modified:\n          type: string\n          description: The date the object was last modified, in the site's timezone.\n          format: date-time\n        modified_gmt:\n          type: string\n          description: The date the object was last modified, as GMT.\n          format: date-time\n        password:\n          type: string\n          description: The A password to protect access to the post.\n        slug:\n          type: string\n          description: An alphanumeric identifier for the object unique to its type.\n        status:\n          type: string\n          description: A named status for the object.\n          enum:\n          - publish\n          - future\n          - draft\n          - pending\n          - private\n        type:\n          type: string\n          description: Type of Post for the object.\n        title:\n          type: string\n          description: The title for the object.\n        author:\n          type: integer\n          description: The id for the author of the object.\n        comment_status:\n          type: string\n          description: Whether or not comments are open on the object\n          enum:\n          - open\n          - closed\n        ping_status:\n          type: string\n          description: Whether or not the object can be pinged.\n          enum:\n          - open\n          - closed\n        alt_text:\n          type: string\n          description: Alternative text to display when resource is not displayed\n        caption:\n          type: string\n          description: The caption for the resource.\n        description:\n          type: string\n          description: The description for the resource.\n        media_type:\n          type: string\n          description: Type of resource.\n          enum:\n          - image\n          - file\n        mime_type:\n          type: string\n          description: Mime type of resource.\n        media_details:\n          type: string\n          description: Details about the resource file, specific to its type.\n        post:\n          type: integer\n          description: The id for the associated post of the resource.\n        source_url:\n          type: string\n          description: URL to the original resource file.\n    revision:\n      type: object\n      properties:\n        date:\n          type: string\n          description: The date the object was published, in the site's timezone.\n          format: date-time\n        date_gmt:\n          type: string\n          description: The date the object was published, as GMT.\n          format: date-time\n        guid:\n          type: object\n          description: The globally unique identifier for the object.\n        id:\n          type: integer\n          description: Unique identifier for the object.\n        modified:\n          type: string\n          description: The date the object was last modified, in the site's timezone.\n          format: date-time\n        modified_gmt:\n          type: string\n          description: The date the object was last modified, as GMT.\n          format: date-time\n        slug:\n          type: string\n          description: An alphanumeric identifier for the object unique to its type.\n        title:\n          type: string\n          description: The title for the object.\n        content:\n          type: object\n          description: The content for the object.\n        author:\n          type: integer\n          description: The id for the author of the object.\n        excerpt:\n          type: object\n          description: The excerpt for the object\n        parent:\n          type: integer\n          description: The id for the parent of the object.\n    commonPostPage:\n      type: object\n      properties:\n        date:\n          type: string\n          description: The date the object was published, in the site's timezone.\n          format: date-time\n        date_gmt:\n          type: string\n          description: The date the object was published, as GMT.\n          format: date-time\n        guid:\n          type: object\n          description: The globally unique identifier for the object.\n        id:\n          type: integer\n          description: Unique identifier for the object.\n        link:\n          type: string\n          description: URL to the object.\n        modified:\n          type: string\n          description: The date the object was last modified, in the site's timezone.\n          format: date-time\n        modified_gmt:\n          type: string\n          description: The date the object was last modified, as GMT.\n          format: date-time\n        password:\n          type: string\n          description: The A password to protect access to the post.\n        slug:\n          type: string\n          description: An alphanumeric identifier for the object unique to its type.\n        status:\n          type: string\n          description: A named status for the object.\n          enum:\n          - publish\n          - future\n          - draft\n          - pending\n          - private\n        type:\n          type: string\n          description: Type of Post for the object.\n        title:\n          type: object\n          description: The title for the object.\n        content:\n          type: object\n          description: The content for the object.\n        author:\n          type: integer\n          description: The id for the author of the object.\n        excerpt:\n          type: object\n          description: The excerpt for the object\n        featured_media:\n          type: integer\n          description: The id of the featured media for the object.\n        comment_status:\n          type: string\n          description: Whether or not comments are open on the object\n          enum:\n          - open\n          - closed\n        ping_status:\n          type: string\n          description: Whether or not the object can be pinged.\n          enum:\n          - open\n          - closed\n    post:\n      allOf:\n      - $ref: '#/components/schemas/commonPostPage'\n      - type: object\n        properties:\n          format:\n            type: string\n            description: The format for the object.\n            enum:\n            - standard\n            - aside\n            - chat\n            - gallery\n            - link\n            - image\n            - quote\n            - status\n            - video\n            - audio\n          sticky:\n            type: boolean\n            description: Whether or not the object should be treated as sticky.\n          categories:\n            type: array\n            description: The terms assigned to the object in the category taxonomy.\n            items:\n              type: integer\n          tags:\n            type: array\n            description: he terms assigned to the object in the post_tag taxonomy.\n            items:\n              type: integer\n    page:\n      allOf:\n      - $ref: '#/components/schemas/commonPostPage'\n      - type: object\n        properties:\n          parent:\n            type: integer\n            description: The id for the parent of the object.\n          menu_order:\n            type: integer\n            description: The order of the object in relation to other object of its\n              type.\n          template:\n            type: string\n            description: The theme file to use to display the object.\n  parameters:\n    id:\n      name: id\n      in: path\n      description: Id of object\n      required: true\n      schema:\n        type: string\n    revisionid:\n      name: revisionid\n      in: path\n      description: Id of revision\n      required: true\n      schema:\n        type: string\n    force:\n      name: force\n      in: query\n      description: Whether to bypass trash and force deletion.\n      schema:\n        type: boolean\n    context:\n      name: context\n      in: query\n      description: Scope under which the request is made; determines fields present\n        in response.\n      schema:\n        type: string\n        enum:\n        - view\n        - embed\n        - edit\n  securitySchemes:\n    oauth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth1/authorize\n          tokenUrl: /oauth1/request\n          scopes:\n            basic: OAuth authentication uses the OAuth 1.0a specification (published\n              as RFC5849) and requires installing the OAuth plugin on the site.\n      x-oauth1: true\n      x-accessUrl: /oauth1/access"
		}
	},
	"Error": "parse: parse spec: paths: /types/{id}: get: operation \"getSingleType\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/type\": parse schema: capabilities: parse schema: object cannot contain 'items' field"
}