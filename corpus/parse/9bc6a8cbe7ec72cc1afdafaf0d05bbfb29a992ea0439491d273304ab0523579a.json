{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "automation.json",
			"size": 0,
			"path": "openapi3_autogen/automation.json",
			"byteSize": 13210,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"automation\": {\n        \"description\": \"Allows you to define some JavaScript code and specify the conditions under which\\nit should\\nbe executed.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"actions\": {\n            \"description\": \"Contains the code that will be executed if the condition is met.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Stores additional information about an entity.\",\n            \"type\": \"object\"\n          },\n          \"associatedTags\": {\n            \"description\": \"List of tags attached to an entity.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"condition\": {\n            \"description\": \"Condition contains the code that will be executed to decide if any action(s)\\nshould be executed. Providing a condition for an automation with a\\n\\\"Webhook\\\" trigger type will have no impact as the condition will not be\\nevaluated. If no condition is defined, then the automation action(s) will be\\nexecuted; this behaves akin to a condition that always succeeds.\",\n            \"example\": \"function when(m, params) { return { continue: true }}\",\n            \"type\": \"string\"\n          },\n          \"createTime\": {\n            \"description\": \"Creation date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Description of the object.\",\n            \"type\": \"string\"\n          },\n          \"disabled\": {\n            \"description\": \"Defines if the property is disabled.\",\n            \"type\": \"boolean\"\n          },\n          \"entitlements\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"enum\": [\n                  \"\",\n                  \"retrieve-many\",\n                  \"retrieve\",\n                  \"create\",\n                  \"update\",\n                  \"delete\",\n                  \"patch\",\n                  \"info\"\n                ]\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Declares which operations are allowed on which identities.\",\n            \"type\": \"object\"\n          },\n          \"errors\": {\n            \"description\": \"Contains the error of the last run.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"events\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"properties\": {\n                  \"encoding\": {\n                    \"enum\": [\n                      \"application/json\",\n                      \"application/msgpack\"\n                    ]\n                  },\n                  \"entity\": {\n                    \"type\": \"string\"\n                  },\n                  \"identity\": {\n                    \"type\": \"string\"\n                  },\n                  \"timestamp\": {\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"enum\": [\n                      \"create\",\n                      \"update\",\n                      \"delete\",\n                      \"error\"\n                    ]\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Contains the identity and operation an event must have to trigger the\\nautomation.\",\n            \"type\": \"object\"\n          },\n          \"immediateExecution\": {\n            \"description\": \"If set and the trigger is of type Time, the automation will be run at create or\\nupdate before being scheduled.\",\n            \"type\": \"boolean\"\n          },\n          \"lastExecTime\": {\n            \"description\": \"The last successful execution tine.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"Name of the entity.\",\n            \"example\": \"the name\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"normalizedTags\": {\n            \"description\": \"Contains the list of normalized tags of the entities.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Contains the computed parameters.\",\n            \"type\": \"object\"\n          },\n          \"protected\": {\n            \"description\": \"Defines if the object is protected.\",\n            \"type\": \"boolean\"\n          },\n          \"schedule\": {\n            \"description\": \"Specifies when to run the automation. Must be in valid CRON format. This\\nonly applies if the trigger is set to `Time`.\",\n            \"type\": \"string\"\n          },\n          \"signature\": {\n            \"description\": \"Signature to validate the authenticity of the object.\",\n            \"type\": \"string\"\n          },\n          \"stdout\": {\n            \"description\": \"Contains the standard output of the last run.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"token\": {\n            \"description\": \"Holds the unique access token used as a password to trigger the\\nauthentication. It will be visible only after creation.\",\n            \"type\": \"string\"\n          },\n          \"tokenRenew\": {\n            \"description\": \"If set to `true` a new token will be issued and the previous one invalidated.\",\n            \"type\": \"boolean\"\n          },\n          \"trigger\": {\n            \"default\": \"Time\",\n            \"description\": \"Controls when the automation should be triggered.\",\n            \"enum\": [\n              \"Event\",\n              \"RemoteCall\",\n              \"Webhook\",\n              \"Time\"\n            ]\n          },\n          \"updateTime\": {\n            \"description\": \"Last update date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"automation\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/automations\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of automations.\",\n        \"operationId\": \"get-all-automations\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/automation\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new Automation.\",\n        \"operationId\": \"create-a-new-automation\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/automation\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automation\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      }\n    },\n    \"/automations/{id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the automation with the given ID.\",\n        \"operationId\": \"delete-automation-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automation\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieves the automation with the given ID.\",\n        \"operationId\": \"get-automation-by-ID\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automation\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"put\": {\n        \"description\": \"Updates the automation with the given ID.\",\n        \"operationId\": \"update-automation-by-ID\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/automation\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automation\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      }\n    },\n    \"/automations/{id}/triggers\": {\n      \"get\": {\n        \"description\": \"Allows a system to trigger the automation if its `trigger` property is set\\nto `RemoteCall`.\",\n        \"operationId\": \"get-all-triggers-for-a-given-automation\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./trigger#/components/schemas/trigger\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"post\": {\n        \"description\": \"Allows a system to trigger the automation if its `trigger` property is set\\nto `RemoteCall`.\",\n        \"operationId\": \"create-a-new-trigger-for-a-given-automation\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"./trigger#/components/schemas/trigger\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"./trigger#/components/schemas/trigger\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'integration/automation'\",\n      \"name\": \"integration/automation\"\n    },\n    {\n      \"description\": \"This tag is for package 'sephiroth'\",\n      \"name\": \"sephiroth\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /automations/{id}/triggers: get: operation \"get-all-triggers-for-a-given-automation\": responses: 200: content: application/json: schema: parse schema: item: parse schema: resolve \"./trigger#/components/schemas/trigger\": external \"./trigger\": file: local file reference is not allowed"
}