{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/apideck.com/vault/8.25.0/openapi.yaml",
			"byteSize": 111456,
			"content": "openapi: 3.0.3\nservers:\n  - description: Production server\n    url: https://unify.apideck.com\ninfo:\n  contact:\n    email: hello@apideck.com\n    url: https://developers.apideck.com\n  description: |+\n    Welcome to the Vault API ðŸ‘‹\n\n    When you're looking to connect to an API, the first step is authentication.\n\n    Vault helps you handle OAuth flows, store API keys, and refresh access tokens from users (called consumers in Apideck).\n\n    ## Base URL\n\n    The base URL for all API requests is `https://unify.apideck.com`\n\n    ## Get Started\n\n    To use the Apideck APIs, you need to sign up for free at [https://app.apideck.com/signup](). Follow the steps below to get started.\n\n    - [Create a free account.](https://app.apideck.com/signup)\n    - Go to the [Dashboard](https://app.apideck.com/unify/unified-apis/dashboard).\n    - Get your API key and the application ID.\n    - Select and configure the integrations you want to make available to your users. Through the Unify dashboard, you can configure which connectors you want to support as integrations.\n    - Retrieve the client_id and client_secret for the integration you want to activate (Only needed for OAuth integrations).\n    - Soon, you can skip the previous step and use the Apideck sandbox credentials to get you started instead (upcoming)\n    - Register the redirect URI for the example app (https://unify.apideck.com/vault/callback) in the list of redirect URIs under your app's settings\n    - Use the [publishing guides](/app-listing-requirements) to get your integration listed across app marketplaces.\n\n    ### Hosted Vault\n\n    Hosted Vault (vault.apideck.com) is a no-code solution, so you don't need to build your own UI to handle the integration settings and authentication.\n\n    ![Hosted Vault - Integrations portal](https://github.com/apideck-samples/integration-settings/raw/master/public/img/vault.png)\n\n    Behind the scenes, Hosted Vault implements the Vault API endpoints and handles the following features for your customers:\n\n    - Add a connection\n    - Handle the OAuth flow\n    - Configure connection settings per integration\n    - Manage connections\n    - Discover and propose integration options\n    - Search for integrations (upcoming)\n    - Give integration suggestions based on provided metadata (email or website) when creating the session (upcoming)\n\n    To use Hosted Vault, you will need to first [**create a session**](https://developers.apideck.com/apis/vault/reference#operation/sessionsCreate). This can be achieved by making a POST request to the Vault API to create a valid session for a user, hereafter referred to as the consumer ID.\n\n    Example using curl:\n\n    ```\n    curl -X POST https://unify.apideck.com/vault/sessions\n        -H \"Content-Type: application/json\"\n        -H \"Authorization: Bearer \u003cyour-api-key\u003e\"\n        -H \"X-APIDECK-CONSUMER-ID: \u003cconsumer-id\u003e\"\n        -H \"X-APIDECK-APP-ID: \u003capplication-id\u003e\"\n        -d '{\"consumer_metadata\": { \"account_name\" : \"Sample\", \"user_name\": \"Sand Box\", \"email\": \"sand@box.com\", \"image\": \"https://unavatar.now.sh/jake\" }, \"theme\": { \"vault_name\": \"Intercom\", \"primary_color\": \"#286efa\", \"sidepanel_background_color\": \"#286efa\",\"sidepanel_text_color\": \"#FFFFFF\", \"favicon\": \"https://res.cloudinary.com/apideck/icons/intercom\" }}'\n    ```\n\n    ### Vault API\n\n    _Beware, this is strategy takes more time to implement in comparison to Hosted Vault._\n\n    If you are building your integration settings UI manually, you can call the Vault API directly.\n\n    The Vault API is for those who want to completely white label the in-app integrations overview and authentication experience. All the available endpoints are listed below.\n\n    Through the API, your customers authenticate directly in your app, where Vault will still take care of redirecting to the auth provider and back to your app.\n\n    If you're already storing access tokens, we will help you migrate through our Vault Migration API (upcoming).\n\n    ## Domain model\n\n    At its core, a domain model creates a web of interconnected entities.\n\n    Our domain model contains five main entity types: Consumer (user, account, team, machine), Application, Connector, Integration, and Connection.\n\n    ## Connection state\n\n    The connection state is computed based on the connection flow below.\n\n    ![](https://developers.apideck.com/api-references/vault/connection-flow.png)\n\n    ## Unify and Proxy integration\n\n    The only thing you need to use the Unify APIs and Proxy is the consumer id; thereafter, Vault will do the look-up in the background to handle the token injection before performing the API call(s).\n\n    ## Headers\n\n    Custom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n    | Name                  | Type    | Required | Description                                                                                                                                                    |\n    | --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | x-apideck-app-id      | String  | Yes      | The id of your Unify application. Available at https://app.apideck.com/api-keys.                                                                               |\n    | x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n    | x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n\n    ## Sandbox (upcoming)\n\n    The sandbox is pre-loaded with data similar to a real-life integrations setup. You can use the preconfigured OAauth configured connectors for testing purposes and can skip this step by using the Apideck sandbox credentials to get you started.\n\n    ## Guides\n\n    - [How to build an integrations UI with Vault](https://github.com/apideck-samples/integration-settings)\n    - How to configure the OAuth credentials for integration providers (COMING SOON)\n\n    ## FAQ\n\n    **What purpose does Vault serve? Can I just handle the authentication and access token myself?**\n    You can store everything yourself, but that defeats the purpose of using Apideck Unify. Handling tokens for multiple providers can quickly become very complex.\n\n    ### Is my data secure?\n\n    Vault employs data minimization, therefore only requesting the minimum amount of scopes needed to perform an API request.\n\n    ### How do I migrate existing data?\n\n    Using our migration API, you can migrate the access tokens and accounts to Apideck Vault. (COMING SOON)\n\n    ### Can I use Vault in combination with existing integrations?\n\n    Yes, you can. The flexibility of Unify allows you to quickly the use cases you need while keeping a gradual migration path based on your timeline and requirements.\n\n    ### How does Vault work for Apideck Ecosystem customers?\n\n    Once logged in, pick your ecosystem; on the left-hand side of the screen, you'll have the option to create an application underneath the Unify section.\n\n    ### How to integrate Apideck Vault\n\n    This section covers everything you need to know to authenticate your customers through Vault.\n    Vault provides **three auth strategies** to use API tokens from your customers:\n\n    - Vault API\n    - Hosted Vault\n    - Apideck Ecosystem _(COMING SOON)_\n\n    You can also opt to bypass Vault and still take care of authentication flows yourself. Make sure to put the right safeguards in place to protect your customers' tokens and other sensitive data.\n\n    ### What auth types does Vault support?\n\n    What auth strategies does Vault handle? We currently support three flows so your customers can activate an integration.\n\n    #### API keys\n\n    For Services supporting the API key strategy, you can use Hosted Vault will need to provide an in-app form where users can configure their API keys provided by the integration service.\n\n    #### OAuth 2.0\n\n    ##### Authorization Code Grant Type Flow\n\n    Vault handles the complete Authorization Code Grant Type Flow for you. This flow only supports browser-based (passive) authentication because most identity providers don't allow entering a username and password to be entered into applications that they don't own.\n\n    Certain connectors require an OAuth redirect authentication flow, where the end-user is redirected to the provider's website or mobile app to authenticate.\n\n    This is being handled by the `/authorize` endpoint.\n\n    #### Basic auth\n\n    Basic authentication is a simple authentication scheme built into the HTTP protocol. The required fields to complete basic auth are handled by Hosted Vault or by updating the connection through the Vault API below.\n\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Vault API\n  version: 8.25.0\n  x-apideck-api: vault\n  x-apideck-sdk-support: true\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://developers.apideck.com/icon.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/vault.yml\n      version: \"3.0\"\n  x-providerName: apideck.com\n  x-serviceName: vault\n  x-tags:\n    - partner\nexternalDocs:\n  description: Apideck Developer Docs\n  url: https://developers.apideck.com\nsecurity:\n  - apiKey: []\n    applicationId: []\ntags:\n  - description: \"\"\n    name: Sessions\n    x-apideck-model:\n      $ref: \"#/components/schemas/Session\"\n  - description: \"\"\n    name: Connections\n    x-apideck-model:\n      $ref: \"#/components/schemas/Connection\"\n  - description: \"\"\n    name: Consumers\n    x-apideck-model:\n      $ref: \"#/components/schemas/Consumer\"\n  - description: \"\"\n    name: Logs\n    x-apideck-model:\n      $ref: \"#/components/schemas/Log\"\npaths:\n  \"/vault/authorize/{service_id}/{application_id}\":\n    get:\n      description: |\n        __In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__\n\n        Use this endpoint to authenticate a user with a connector. It will return a 301 redirect to the downstream connector endpoints.\n\n        Auth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integration providers.\n\n        Vault handles the complete Authorization Code Grant Type Flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.\n      operationId: connectionsAuthorize\n      parameters:\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/application_id\"\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/redirect_uri\"\n        - $ref: \"#/components/parameters/scope\"\n      responses:\n        \"301\":\n          description: redirect\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security: []\n      summary: Authorize\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              applicationId: 'application_id_example',\n              state:\n                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk',\n              redirectUri: 'http://example.com/integrations'\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsAuthorize(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n  /vault/callback:\n    get:\n      description: |\n        This endpoint gets called after the triggering the authorize flow.\n\n        Callback links need a state and code parameter to verify the validity of the request.\n      operationId: connectionsCallback\n      parameters:\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/code\"\n      responses:\n        \"301\":\n          description: callback\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security: []\n      summary: Callback\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY'\n            })\n\n            const params = {\n              state:\n                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk',\n              code: 'g0ZGZmNjVmOWI'\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsCallback(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n  /vault/connections:\n    get:\n      description: |\n        This endpoint includes all the configured integrations and contains the required assets\n        to build an integrations page where your users can install integrations.\n        OAuth2 supported integrations will contain authorize and revoke links to handle the authentication flows.\n      operationId: connectionsAll\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/api\"\n        - $ref: \"#/components/parameters/configured\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectionsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get all connections\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.vault.connectionsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: connections\n  \"/vault/connections/{unified_api}/{service_id}\":\n    delete:\n      description: Deletes a connection\n      operationId: connectionsDelete\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n      responses:\n        \"204\":\n          description: Resource deleted\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Deletes a connection\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.vault.connectionsDelete({\n                serviceId: 'pipedrive',\n                unifiedApi: 'crm'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: connectionsDelete\n    get:\n      description: Get a connection\n      operationId: connectionsOne\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get connection\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.vault.connectionsOne({\n                serviceId: 'pipedrive',\n                unifiedApi: 'crm'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      description: Update a connection\n      operationId: connectionsUpdate\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Connection\"\n        description: Fields that need to be updated on the resource\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update connection\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              unifiedApi: 'crm',\n              connection: {\n                settings: {\n                  instance_url: 'https://eu28.salesforce.com',\n                  api_key: '12345xxxxxx'\n                },\n                metadata: {\n                  account: {\n                    name: 'My Company',\n                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'\n                  },\n                  plan: 'enterprise'\n                },\n                configuration: [\n                  {\n                    resource: 'leads',\n                    defaults: [\n                      {\n                        id: 'ProductInterest',\n                        options: [Array],\n                        value: 'GC5000 series'\n                      }\n                    ]\n                  }\n                ],\n                enabled: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    post:\n      description: |\n        Create an authorized connection\n      operationId: connectionsAdd\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Connection\"\n        description: Fields that need to be persisted on the resource\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CreateConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create connection\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              unifiedApi: 'crm',\n              connection: {\n                settings: {\n                  instance_url: 'https://eu28.salesforce.com',\n                  api_key: '12345xxxxxx'\n                },\n                metadata: {\n                  account: {\n                    name: 'My Company',\n                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'\n                  },\n                  plan: 'enterprise'\n                },\n                configuration: [\n                  {\n                    resource: 'leads',\n                    defaults: [\n                      {\n                        id: 'ProductInterest',\n                        options: [Array],\n                        value: 'GC5000 series'\n                      }\n                    ]\n                  }\n                ],\n                enabled: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n  \"/vault/connections/{unified_api}/{service_id}/import\":\n    post:\n      description: |\n        Import an authorized connection.\n      operationId: connectionsImport\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionImportData\"\n        description: Fields that need to be persisted on the resource\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CreateConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Import connection\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              unifiedApi: 'crm',\n              connectionsImport: {\n                credentials: {\n                  access_token:\n                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c',\n                  refresh_token:\n                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ'\n                },\n                settings: {\n                  instance_url: 'https://eu28.salesforce.com'\n                },\n                metadata: {\n                  account: {\n                    name: 'My Company',\n                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'\n                  },\n                  plan: 'enterprise'\n                }\n              }\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsImport(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n  \"/vault/connections/{unified_api}/{service_id}/token\":\n    post:\n      description: |\n        Get an access token for a connection and store it in Vault. Currently only supported for connections with the client_credentials OAuth grant type.\n\n        Note that the access token will not be returned in the response. A 200 response code indicates a valid access token was stored on the connection.\n      operationId: connectionsToken\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties: false\n              properties: {}\n              type: object\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get Access Token\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              unifiedApi: 'crm',\n              connectionsToken: {}\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsToken(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n  \"/vault/connections/{unified_api}/{service_id}/{resource}/config\":\n    get:\n      description: |\n        This endpoint returns custom settings and their defaults required by connection for a given resource.\n      operationId: connectionsGetSettings\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/unified_api\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/resource\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get resource settings\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              unifiedApi: 'crm',\n              serviceId: 'pipedrive',\n              resource: 'leads'\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsGetSettings(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: connectionSettings\n    patch:\n      description: Update default values for a connection's resource settings\n      operationId: connectionsUpdateSettings\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/unified_api\"\n        - $ref: \"#/components/parameters/resource\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Connection\"\n        description: Fields that need to be updated on the resource\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/UpdateConnectionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Update settings\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              unifiedApi: 'crm',\n              resource: 'leads',\n              connection: {\n                settings: {\n                  instance_url: 'https://eu28.salesforce.com',\n                  api_key: '12345xxxxxx'\n                },\n                metadata: {\n                  account: {\n                    name: 'My Company',\n                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'\n                  },\n                  plan: 'enterprise'\n                },\n                configuration: [\n                  {\n                    resource: 'leads',\n                    defaults: [\n                      {\n                        id: 'ProductInterest',\n                        options: [Array],\n                        value: 'GC5000 series'\n                      }\n                    ]\n                  }\n                ],\n                enabled: true\n              }\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsUpdateSettings(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: connectionSettingsUpdate\n  /vault/consumers:\n    get:\n      description: |\n        This endpoint includes all application consumers, along with an aggregated count of requests made.\n      operationId: consumersAll\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConsumersResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get all consumers\n      tags:\n        - Consumers\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.vault.consumersAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: consumers\n  \"/vault/consumers/{consumer_id}\":\n    get:\n      description: |\n        Consumer detail including their aggregated counts with the connections they have authorized.\n      operationId: consumersOne\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/consumer_id\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetConsumerResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get consumer\n      tags:\n        - Consumers\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            try {\n              const { data } = await apideck.vault.consumersOne({\n                consumerId: 'test_user_id'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: consumer\n  \"/vault/consumers/{consumer_id}/stats\":\n    get:\n      description: |\n        Get consumer request counts within a given datetime range.\n      operationId: consumersRequestCounts\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/consumer_id\"\n        - $ref: \"#/components/parameters/start_datetime\"\n        - $ref: \"#/components/parameters/end_datetime\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ConsumerRequestCountsInDateRangeResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Consumer request counts\n      tags:\n        - Consumers\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID'\n            })\n\n            const params = {\n              consumerId: 'test_user_id',\n              startDatetime: '2021-05-01T12:00:00.000Z',\n              endDatetime: '2021-05-30T12:00:00.000Z'\n            }\n\n            try {\n              const { data } = await apideck.vault.consumersRequestCounts(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: consumersRequestCounts\n  /vault/logs:\n    get:\n      description: |\n        This endpoint includes all consumer request logs.\n      operationId: logsAll\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/filter\"\n        - $ref: \"#/components/parameters/cursor\"\n        - $ref: \"#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/GetLogsResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Get all consumer request logs\n      tags:\n        - Logs\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.vault.logsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-field-name: logs\n  \"/vault/revoke/{service_id}/{application_id}\":\n    get:\n      description: |\n        __In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__\n\n        Use this endpoint to revoke an existing OAuth connector.\n\n        Auth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integration providers.\n\n        Vault handles the complete revoke flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.\n      operationId: connectionsRevoke\n      parameters:\n        - $ref: \"#/components/parameters/service_id\"\n        - $ref: \"#/components/parameters/application_id\"\n        - $ref: \"#/components/parameters/state\"\n        - $ref: \"#/components/parameters/redirect_uri\"\n      responses:\n        \"301\":\n          description: redirect\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security: []\n      summary: Revoke\n      tags:\n        - Connections\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY'\n            })\n\n            const params = {\n              serviceId: 'pipedrive',\n              applicationId: 'application_id_example',\n              state:\n                'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk',\n              redirectUri: 'http://example.com/integrations'\n            }\n\n            try {\n              const { data } = await apideck.vault.connectionsRevoke(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n      x-graphql-exclude: true\n      x-sdk-exclude: true\n  /vault/sessions:\n    post:\n      description: |\n        Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned\n        url to allow temporary access to manage their integrations and settings.\n\n        Note: This is a short lived token that will expire after 1 hour (TTL: 3600).\n      operationId: sessionsCreate\n      parameters:\n        - $ref: \"#/components/parameters/x-apideck-consumer-id\"\n        - $ref: \"#/components/parameters/x-apideck-app-id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Session\"\n        description: Additional redirect uri and/or consumer metadata\n        required: false\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CreateSessionResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequestResponse\"\n        \"401\":\n          $ref: \"#/components/responses/UnauthorizedResponse\"\n        \"402\":\n          $ref: \"#/components/responses/PaymentRequiredResponse\"\n        \"404\":\n          $ref: \"#/components/responses/NotFoundResponse\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableResponse\"\n        default:\n          $ref: \"#/components/responses/UnexpectedErrorResponse\"\n      security:\n        - apiKey: []\n      summary: Create Session\n      tags:\n        - Sessions\n      x-apideck-api: vault\n      x-codeSamples:\n        - label: Node\n          lang: TypeScript\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              session: {\n                consumer_metadata: {\n                  account_name: 'SpaceX',\n                  user_name: 'Elon Musk',\n                  email: 'elon@musk.com',\n                  image: 'https://www.spacex.com/static/images/share.jpg'\n                },\n                custom_consumer_settings: {\n                  feature_flag_1: true,\n                  tax_rates: [\n                    {\n                      id: '6',\n                      label: '6%'\n                    },\n                    {\n                      id: '21',\n                      label: '21%'\n                    }\n                  ]\n                },\n                redirect_uri: 'https://mysaas.com/dashboard',\n                settings: {\n                  unified_apis: ['crm'],\n                  hide_resource_settings: false,\n                  sandbox_mode: false,\n                  isolation_mode: false,\n                  session_length: '30m',\n                  show_logs: true,\n                  show_suggestions: false,\n                  auto_redirect: false\n                },\n                theme: {\n                  favicon: 'https://res.cloudinary.com/apideck/icons/intercom',\n                  primary_color: '#286efa',\n                  privacy_url: 'https://compliance.apideck.com/privacy-policy',\n                  sidepanel_background_color: '#286efa',\n                  sidepanel_text_color: '#FFFFFF',\n                  terms_url: 'https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e',\n                  vault_name: 'Intercom'\n                }\n              }\n            }\n\n            try {\n              const { data } = await apideck.vault.sessionsCreate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\ncomponents:\n  parameters:\n    api:\n      description: Scope results to Unified API\n      example: crm\n      in: query\n      name: api\n      schema:\n        type: string\n    application_id:\n      description: Application ID of the resource to return\n      in: path\n      name: application_id\n      required: true\n      schema:\n        type: string\n    code:\n      description: An authorization code from the connector which Apideck Vault will later exchange for an access token.\n      example: g0ZGZmNjVmOWI\n      in: query\n      name: code\n      required: true\n      schema:\n        type: string\n    configured:\n      description: Scopes results to connections that have been configured or not\n      example: true\n      in: query\n      name: configured\n      schema:\n        type: boolean\n    consumer_id:\n      description: ID of the consumer to return\n      example: test_user_id\n      in: path\n      name: consumer_id\n      required: true\n      schema:\n        type: string\n    cursor:\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      in: query\n      name: cursor\n      schema:\n        nullable: true\n        type: string\n    end_datetime:\n      description: Scopes results to requests that happened before datetime\n      example: 2021-05-30T12:00:00.000Z\n      in: query\n      name: end_datetime\n      required: true\n      schema:\n        type: string\n    filter:\n      description: Filter results\n      explode: true\n      in: query\n      name: filter\n      schema:\n        $ref: \"#/components/schemas/LogsFilter\"\n      style: deepObject\n    id:\n      description: ID of the record you are acting upon.\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    limit:\n      description: Number of records to return\n      in: query\n      name: limit\n      schema:\n        default: 20\n        maximum: 200\n        minimum: 1\n        type: integer\n    raw:\n      description: Include raw response. Mostly used for debugging purposes\n      in: query\n      name: raw\n      schema:\n        default: false\n        type: boolean\n    redirect_uri:\n      description: URL to redirect back to after authorization. When left empty the default configured redirect uri will be used.\n      example: http://example.com/integrations\n      in: query\n      name: redirect_uri\n      required: true\n      schema:\n        type: string\n    resource:\n      description: Resource Name\n      example: leads\n      in: path\n      name: resource\n      required: true\n      schema:\n        type: string\n    scope:\n      description: One or more OAuth scopes to request from the connector. OAuth scopes control the set of resources and operations that are allowed after authorization. Refer to the connector's documentation for the available scopes.\n      example:\n        - openid\n        - leads:write\n        - profile:read\n      explode: false\n      in: query\n      name: scope\n      schema:\n        items:\n          type: string\n        type: array\n      style: spaceDelimited\n    service_id:\n      description: Service ID of the resource to return\n      example: pipedrive\n      in: path\n      name: service_id\n      required: true\n      schema:\n        type: string\n    start_datetime:\n      description: Scopes results to requests that happened after datetime\n      example: 2021-05-01T12:00:00.000Z\n      in: query\n      name: start_datetime\n      required: true\n      schema:\n        type: string\n    state:\n      description: An opaque value the applications adds to the initial request that the authorization server includes when redirecting the back to the application. This value must be used by the application to prevent CSRF attacks.\n      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk\n      in: query\n      name: state\n      required: true\n      schema:\n        type: string\n    unified_api:\n      description: Unified API\n      example: crm\n      in: path\n      name: unified_api\n      required: true\n      schema:\n        type: string\n    x-apideck-app-id:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      required: true\n      schema:\n        type: string\n    x-apideck-consumer-id:\n      description: ID of the consumer which you want to get or push data from\n      in: header\n      name: x-apideck-consumer-id\n      required: true\n      schema:\n        type: string\n    x-apideck-downstream-authorization:\n      description: Downstream authorization header. This will skip the Vault token injection.\n      example: Bearer XXXXXXXXXXXXXXXXX\n      in: header\n      name: x-apideck-downstream-authorization\n      required: false\n      schema:\n        type: string\n    x-apideck-downstream-method:\n      description: Downstream method. If not provided the upstream method will be inherited,\n      example: POST\n      in: header\n      name: x-apideck-downstream-method\n      required: false\n      schema:\n        type: string\n    x-apideck-downstream-url:\n      description: Downstream URL\n      example: https://api.twilio.com\n      in: header\n      name: x-apideck-downstream-url\n      required: true\n      schema:\n        type: string\n    x-apideck-service-id:\n      description: Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.\n      in: header\n      name: x-apideck-service-id\n      required: true\n      schema:\n        type: string\n  responses:\n    BadRequestResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BadRequestResponse\"\n      description: Bad Request\n    ConsumerRequestCountsInDateRangeResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ConsumerRequestCountsInDateRangeResponse\"\n      description: Consumers Request Counts within Date Range\n    CreateConnectionResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateConnectionResponse\"\n      description: Connection created\n    CreateSessionResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CreateSessionResponse\"\n      description: Session created\n    Created:\n      content:\n        application/json:\n          example: {}\n          schema: {}\n      description: Resource created\n    Deleted:\n      content:\n        application/json:\n          example: {}\n          schema: {}\n      description: Resource successfully deleted\n    GetConnectionResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConnectionResponse\"\n      description: Connection\n    GetConnectionsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConnectionsResponse\"\n      description: Connections\n    GetConsumerResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConsumerResponse\"\n      description: Consumer\n    GetConsumersResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetConsumersResponse\"\n      description: Consumers\n    GetLogsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GetLogsResponse\"\n      description: Logs\n    NoContent:\n      content:\n        application/json:\n          example: {}\n          schema: {}\n      description: No content\n    NotFoundResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotFoundResponse\"\n      description: The specified resource was not found\n    NotImplementedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotImplementedResponse\"\n      description: Not Implemented\n    Ok:\n      content:\n        application/json:\n          example: {}\n          schema: {}\n      description: Ok\n    PaymentRequiredResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaymentRequiredResponse\"\n      description: Payment Required\n    ProxyError:\n      content:\n        application/json:\n          schema: {}\n      description: Proxy error\n      headers:\n        x-apideck-downstream-error:\n          schema:\n            description: Indicates if the error returned in the body is from the downstream\n            type: boolean\n    UnauthorizedResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnauthorizedResponse\"\n      description: Unauthorized\n    UnexpectedErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnexpectedErrorResponse\"\n      description: Unexpected error\n    UnprocessableResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UnprocessableResponse\"\n      description: Unprocessable\n    UpdateConnectionResponse:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/UpdateConnectionResponse\"\n      description: Connection updated\n    Updated:\n      content:\n        application/json:\n          example: {}\n          schema: {}\n      description: Resource updated\n  schemas:\n    AuthType:\n      description: Type of authorization used by the connector\n      enum:\n        - oauth2\n        - apiKey\n        - basic\n        - custom\n        - none\n      example: oauth2\n      readOnly: true\n      type: string\n    BadRequestResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Missing property foobar\n              type: string\n            - example:\n                missing:\n                  - foobar: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestvalidationerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestValidationError\n          type: string\n    Connection:\n      properties:\n        auth_type:\n          $ref: \"#/components/schemas/AuthType\"\n        authorize_url:\n          example: https://unify.apideck.com/vault/authorize/salesforce/\u003capplication-id\u003e?state=\u003cstate\u003e\n          nullable: true\n          readOnly: true\n          type: string\n        configurable_resources:\n          example:\n            - opportunities\n            - companies\n            - contacts\n            - leads\n          items:\n            type: string\n          readOnly: true\n          type: array\n        configuration:\n          items:\n            properties:\n              defaults:\n                items:\n                  properties:\n                    id:\n                      example: ProductInterest\n                      type: string\n                    options:\n                      items:\n                        $ref: \"#/components/schemas/FormFieldOption\"\n                      type: array\n                    target:\n                      enum:\n                        - custom_fields\n                        - resource\n                      example: custom_fields\n                      readOnly: true\n                      type: string\n                    value:\n                      anyOf:\n                        - example: GC5000 series\n                          type: string\n                        - example: 10\n                          type: integer\n                        - example: 10.5\n                          type: number\n                        - example: true\n                          type: boolean\n                        - items:\n                            anyOf:\n                              - example: GC6000 series\n                                type: string\n                              - example: 10\n                                type: integer\n                              - example: 10.5\n                                type: number\n                          type: array\n                  type: object\n                type: array\n              resource:\n                example: leads\n                type: string\n            type: object\n          type: array\n        created_at:\n          example: 1615563533390\n          readOnly: true\n          type: number\n        enabled:\n          example: true\n          type: boolean\n        form_fields:\n          example:\n            - custom_field: false\n              disabled: false\n              id: instance_url\n              label: Instance url\n              mask: false\n              placeholder: \"\"\n              required: true\n              sensitive: false\n              type: text\n              value: https://eu28.salesforce.com\n            - custom_field: false\n              disabled: false\n              id: api_key\n              label: API Key\n              mask: false\n              placeholder: \"\"\n              required: true\n              sensitive: true\n              type: text\n              value: \"123455677\"\n          items:\n            $ref: \"#/components/schemas/FormField\"\n          readOnly: true\n          type: array\n        has_guide:\n          example: true\n          readOnly: true\n          type: boolean\n        icon:\n          example: https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\n          readOnly: true\n          type: string\n        id:\n          example: crm+salesforce\n          readOnly: true\n          type: string\n        logo:\n          example: https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\n          readOnly: true\n          type: string\n        metadata:\n          additionalProperties: true\n          description: Attach your own consumer specific metadata\n          example:\n            account:\n              id: c01458a5-7276-41ce-bc19-639906b0450a\n              name: My Company\n            plan: enterprise\n          nullable: true\n          properties: {}\n          type: object\n        name:\n          example: Salesforce\n          readOnly: true\n          type: string\n        oauth_grant_type:\n          $ref: \"#/components/schemas/OAuthGrantType\"\n        resource_schema_support:\n          example:\n            - leads\n          items:\n            type: string\n          readOnly: true\n          type: array\n        resource_settings_support:\n          example:\n            - leads\n          items:\n            type: string\n          readOnly: true\n          type: array\n        revoke_url:\n          example: https://unify.apideck.com/vault/revoke/salesforce/\u003capplication-id\u003e?state=\u003cstate\u003e\n          nullable: true\n          readOnly: true\n          type: string\n        service_id:\n          example: salesforce\n          readOnly: true\n          type: string\n        settings:\n          additionalProperties: true\n          description: Connection settings. Values will persist to `form_fields` with corresponding id\n          example:\n            api_key: 12345xxxxxx\n            instance_url: https://eu28.salesforce.com\n          nullable: true\n          properties: {}\n          type: object\n        settings_required_for_authorization:\n          example:\n            - instance_url\n          items:\n            type: string\n          readOnly: true\n          type: array\n        state:\n          $ref: \"#/components/schemas/ConnectionState\"\n        status:\n          enum:\n            - live\n            - upcoming\n            - requested\n          readOnly: true\n          type: string\n        tag_line:\n          example: CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\n          readOnly: true\n          type: string\n        unified_api:\n          example: crm\n          readOnly: true\n          type: string\n        updated_at:\n          example: 1616662325753\n          nullable: true\n          readOnly: true\n          type: number\n        website:\n          example: https://www.salesforce.com\n          readOnly: true\n          type: string\n      type: object\n    ConnectionEvent:\n      properties:\n        entity:\n          $ref: \"#/components/schemas/ConsumerConnection\"\n        entity_id:\n          description: The service provider's ID of the entity that triggered this event\n          example: 123456ASDF\n          type: string\n        entity_type:\n          description: The type entity that triggered this event\n          example: Company\n          type: string\n        event_id:\n          description: Unique reference to this request event\n          example: 9755c355-56c3-4a2f-a2da-86ff4411fccb\n          type: string\n        event_type:\n          $ref: \"#/components/schemas/VaultEventType\"\n        execution_attempt:\n          description: The current count this request event has been attempted\n          example: 2\n          type: number\n        occurred_at:\n          description: ISO Datetime for when the original event occurred\n          example: 2021-10-01T03:14:55.419Z\n          type: string\n        service_id:\n          description: Service provider identifier\n          example: close\n          type: string\n      type: object\n      x-sdk-exclude: true\n    ConnectionImportData:\n      properties:\n        credentials:\n          additionalProperties: false\n          example:\n            access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ\n          properties:\n            access_token:\n              description: Access token\n              example: 1234567890abcdefghijklmnopqrstuvwxyz\n              type: string\n            expires_in:\n              description: The number of seconds until the token expires. If omitted the token will be queued for refresh.\n              example: 3600\n              nullable: true\n              type: integer\n            issued_at:\n              description: The datetime at which the token was issued. If omitted the token will be queued for refresh.\n              example: 2020-01-01T00:00:00Z\n              format: date-time\n              nullable: true\n              type: string\n            refresh_token:\n              description: The refresh token can be used to obtain a new access token.\n              example: 1234567890abcdefghijklmnopqrstuvwxyz\n              type: string\n          required:\n            - refresh_token\n          type: object\n        metadata:\n          additionalProperties: true\n          description: Attach your own consumer specific metadata\n          example:\n            account:\n              id: c01458a5-7276-41ce-bc19-639906b0450a\n              name: My Company\n            plan: enterprise\n          nullable: true\n          properties: {}\n          type: object\n        settings:\n          description: Connection settings. Values will persist to `form_fields` with corresponding id\n          example:\n            instance_url: https://eu28.salesforce.com\n          nullable: true\n          type: object\n      type: object\n    ConnectionMetadata:\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      type: object\n    ConnectionState:\n      description: \"[Connection state flow](#section/Connection-state)\"\n      enum:\n        - available\n        - callable\n        - added\n        - authorized\n      example: authorized\n      readOnly: true\n      type: string\n    Consumer:\n      properties:\n        aggregated_request_count:\n          example: 101\n          type: number\n        application_id:\n          example: \"1111\"\n          type: string\n        connections:\n          items:\n            $ref: \"#/components/schemas/ConsumerConnection\"\n          type: array\n        consumer_id:\n          example: test_consumer_id\n          type: string\n        created:\n          example: 2021-05-07T12:55:42.242Z\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/ConsumerMetadata\"\n        modified:\n          example: 2021-05-07T12:55:42.242Z\n          type: string\n        request_count_updated:\n          example: 2021-05-07T12:55:42.242Z\n          type: string\n        request_counts:\n          $ref: \"#/components/schemas/RequestCountAllocation\"\n        services:\n          example:\n            - salesforce\n            - stripe\n          items:\n            example: salesforce\n            type: string\n          type: array\n      type: object\n    ConsumerConnection:\n      properties:\n        auth_type:\n          $ref: \"#/components/schemas/AuthType\"\n        consumer_id:\n          example: test_user_id\n          type: string\n        created_at:\n          example: 2020-09-19T12:18:37.071Z\n          type: string\n        enabled:\n          example: true\n          type: boolean\n        icon:\n          example: https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png\n          type: string\n        id:\n          example: 1111+test_user_id\n          readOnly: true\n          type: string\n        logo:\n          example: https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg\n          type: string\n        metadata:\n          additionalProperties: true\n          description: Attach your own consumer specific metadata\n          example:\n            account:\n              id: c01458a5-7276-41ce-bc19-639906b0450a\n              name: My Company\n            plan: enterprise\n          nullable: true\n          properties: {}\n          type: object\n        name:\n          example: Salesforce\n          type: string\n        service_id:\n          example: teamleader\n          type: string\n        settings:\n          description: Connection settings. Values will persist to `form_fields` with corresponding id\n          example:\n            instance_url: https://eu28.salesforce.com\n          nullable: true\n          type: object\n        state:\n          enum:\n            - available\n            - callable\n            - added\n            - configured\n            - authorized\n          example: authorized\n          type: string\n        tag_line:\n          example: CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.\n          readOnly: true\n          type: string\n        unified_api:\n          example: crm\n          type: string\n        updated_at:\n          example: 2020-09-19T12:18:37.071Z\n          nullable: true\n          type: string\n        website:\n          example: https://www.salesforce.com\n          readOnly: true\n          type: string\n      type: object\n    ConsumerMetadata:\n      properties:\n        account_name:\n          example: SpaceX\n          type: string\n        email:\n          example: elon@musk.com\n          type: string\n        image:\n          example: https://www.spacex.com/static/images/share.jpg\n          type: string\n        user_name:\n          example: Elon Musk\n          type: string\n      type: object\n    ConsumerRequestCountsInDateRangeResponse:\n      properties:\n        data:\n          properties:\n            aggregated_request_count:\n              example: 40\n              type: number\n            application_id:\n              example: \"1111\"\n              type: string\n            consumer_id:\n              example: test_user_id\n              type: string\n            end_datetime:\n              example: 2021-05-10T12:00:00.000Z\n              type: string\n            request_counts:\n              $ref: \"#/components/schemas/RequestCountAllocation\"\n            start_datetime:\n              example: 2021-05-01T12:00:00.000Z\n              type: string\n          type: object\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    ConsumerWebhook:\n      additionalProperties: false\n      properties:\n        created_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          title: Created at (timestamp)\n          type: string\n        delivery_url:\n          description: The delivery url of the webhook endpoint.\n          example: https://example.com/my/webhook/endpoint\n          format: uri\n          pattern: ^(https?)://\n          type: string\n        description:\n          example: A description\n          nullable: true\n          title: Description\n          type: string\n        events:\n          description: The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.\n          example:\n            - vault.connection.created\n            - vault.connection.updated\n          items:\n            enum:\n              - \"*\"\n              - crm.activity.created\n              - crm.activity.updated\n              - crm.activity.deleted\n              - crm.company.created\n              - crm.company.updated\n              - crm.company.deleted\n              - crm.contact.created\n              - crm.contact.updated\n              - crm.contact.deleted\n              - crm.lead.created\n              - crm.lead.updated\n              - crm.lead.deleted\n              - crm.note.created\n              - crm.notes.updated\n              - crm.notes.deleted\n              - crm.opportunity.created\n              - crm.opportunity.updated\n              - crm.opportunity.deleted\n              - lead.lead.created\n              - lead.lead.updated\n              - lead.lead.deleted\n              - vault.connection.created\n              - vault.connection.updated\n              - vault.connection.deleted\n              - vault.connection.callable\n              - vault.connection.token_refresh.failed\n              - ats.job.created\n              - ats.job.updated\n              - ats.job.deleted\n              - ats.applicant.created\n              - ats.applicant.updated\n              - ats.applicant.deleted\n              - accounting.customer.created\n              - accounting.customer.updated\n              - accounting.customer.deleted\n              - accounting.invoice.created\n              - accounting.invoice.updated\n              - accounting.invoice.deleted\n              - accounting.invoice_item.created\n              - accounting.invoice_item.updated\n              - accounting.invoice_item.deleted\n              - accounting.ledger_account.created\n              - accounting.ledger_account.updated\n              - accounting.ledger_account.deleted\n              - accounting.tax_rate.created\n              - accounting.tax_rate.updated\n              - accounting.tax_rate.deleted\n              - pos.order.created\n              - pos.order.updated\n              - pos.order.deleted\n              - pos.product.created\n              - pos.product.updated\n              - pos.product.deleted\n              - pos.payment.created\n              - pos.payment.updated\n              - pos.payment.deleted\n              - pos.merchant.created\n              - pos.merchant.updated\n              - pos.merchant.deleted\n              - pos.location.created\n              - pos.location.updated\n              - pos.location.deleted\n              - pos.item.created\n              - pos.item.updated\n              - pos.item.deleted\n              - pos.modifier.created\n              - pos.modifier.updated\n              - pos.modifier.deleted\n              - pos.modifier-group.created\n              - pos.modifier-group.updated\n              - pos.modifier-group.deleted\n            example: crm.company.created\n            type: string\n          title: Subscribed events\n          type: array\n        execute_base_url:\n          description: The Unify Base URL events from connectors will be sent to after service id is appended.\n          example: https://unify.apideck.com/webhook/webhooks/1234/execute\n          format: uri\n          pattern: ^(https?)://\n          readOnly: true\n          type: string\n        id:\n          example: \"1234\"\n          readOnly: true\n          type: string\n        status:\n          description: The status of the webhook.\n          enum:\n            - enabled\n            - disabled\n          example: enabled\n          type: string\n          x-graphql-type-name: WebhookStatus\n        unified_api:\n          $ref: \"#/components/schemas/UnifiedApiId\"\n        updated_at:\n          example: 2020-09-30T07:43:32.000Z\n          format: date-time\n          readOnly: true\n          title: Updated at (timestamp)\n          type: string\n      required:\n        - delivery_url\n        - status\n        - events\n        - unified_api\n        - execute_base_url\n      type: object\n    CreateConnectionResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Connection\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 201\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    CreateSessionResponse:\n      additionalProperties: false\n      properties:\n        data:\n          additionalProperties: false\n          properties:\n            session_token:\n              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\n              readOnly: true\n              type: string\n            session_uri:\n              example: http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj\n              readOnly: true\n              type: string\n          required:\n            - session_uri\n            - session_token\n          type: object\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    FormField:\n      properties:\n        allow_custom_values:\n          default: false\n          description: Only applicable to select fields. Allow the user to add a custom value though the option select if the desired value is not in the option select list.\n          example: false\n          title: Allow custom values\n          type: boolean\n        custom_field:\n          example: false\n          type: boolean\n        description:\n          example: Slack channel to push notification to\n          nullable: true\n          type: string\n        disabled:\n          example: false\n          nullable: true\n          type: boolean\n        id:\n          example: channel\n          type: string\n        label:\n          example: Channel\n          type: string\n        options:\n          example:\n            - label: General Channel\n              value: general\n          items:\n            $ref: \"#/components/schemas/FormFieldOption\"\n          type: array\n        placeholder:\n          example: Select a channel\n          nullable: true\n          type: string\n        required:\n          example: true\n          type: boolean\n        sensitive:\n          example: false\n          nullable: true\n          type: boolean\n        type:\n          enum:\n            - text\n            - checkbox\n            - tel\n            - email\n            - url\n            - textarea\n            - select\n            - filtered-select\n            - multi-select\n            - datetime\n            - date\n            - time\n            - number\n          example: select\n      type: object\n      x-graphql-type-name: FormField\n    FormFieldOption:\n      anyOf:\n        - $ref: \"#/components/schemas/SimpleFormFieldOption\"\n        - $ref: \"#/components/schemas/FormFieldOptionGroup\"\n    FormFieldOptionGroup:\n      properties:\n        id:\n          example: \"1234\"\n          type: string\n        label:\n          example: General Channel\n          type: string\n        options:\n          items:\n            $ref: \"#/components/schemas/SimpleFormFieldOption\"\n          type: array\n      type: object\n    GetConnectionResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Connection\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetConnectionsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Connection\"\n          type: array\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetConsumerResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Consumer\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetConsumersResponse:\n      properties:\n        data:\n          items:\n            properties:\n              aggregated_request_count:\n                example: 101\n                type: number\n              application_id:\n                example: \"1111\"\n                type: string\n              consumer_id:\n                example: test_consumer_id\n                type: string\n              created:\n                example: 2021-05-07T12:55:42.242Z\n                type: string\n              metadata:\n                $ref: \"#/components/schemas/ConsumerMetadata\"\n              modified:\n                example: 2021-05-07T12:55:42.242Z\n                type: string\n              request_count_updated:\n                example: 2021-05-07T12:55:42.242Z\n                type: string\n              request_counts:\n                $ref: \"#/components/schemas/RequestCountAllocation\"\n              services:\n                example:\n                  - salesforce\n                  - stripe\n                items:\n                  example: salesforce\n                  type: string\n                type: array\n            type: object\n          type: array\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    GetLogsResponse:\n      properties:\n        data:\n          items:\n            $ref: \"#/components/schemas/Log\"\n          type: array\n        links:\n          $ref: \"#/components/schemas/Links\"\n        meta:\n          $ref: \"#/components/schemas/Meta\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n      x-graphql-type-name: LogList\n    Links:\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        current:\n          description: Link to navigate to the current page through the API\n          example: https://unify.apideck.com/crm/companies\n          type: string\n        next:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\n          nullable: true\n          type: string\n        previous:\n          description: Link to navigate to the previous page through the API\n          example: https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\n          nullable: true\n          type: string\n      type: object\n    Log:\n      additionalProperties: false\n      properties:\n        api_style:\n          description: Indicates if the request was made via REST or Graphql endpoint.\n          example: REST\n          type: string\n        base_url:\n          description: The Apideck base URL the request was made to.\n          example: unify.apideck.com\n          type: string\n        child_request:\n          description: Indicates whether or not this is a child or parent request.\n          example: false\n          type: boolean\n        consumer_id:\n          description: The consumer Id associated with the request.\n          example: test-consumer\n          type: string\n        duration:\n          description: The entire execution time in milliseconds it took to call the Apideck service provider.\n          example: 2220.379304\n          type: number\n        error_message:\n          description: If error occurred, this is brief explanation\n          example: Refresh token is invalid\n          nullable: true\n          type: string\n        execution:\n          description: The entire execution time in milliseconds it took to make the request.\n          example: 2248\n          type: integer\n        has_children:\n          description: When request is a parent request, this indicates if there are child requests associated.\n          example: false\n          type: boolean\n        http_method:\n          description: HTTP Method of request.\n          example: GET\n          type: string\n        id:\n          description: UUID acting as Request Identifier.\n          example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\n          type: string\n        latency:\n          description: Latency added by making this request via Unified Api.\n          example: 27.620695999999953\n          type: number\n        operation:\n          additionalProperties: false\n          description: The request as defined in OpenApi Spec.\n          properties:\n            id:\n              description: The OpenApi Operation Id associated with the request\n              example: connectionsAll\n              type: string\n            name:\n              description: The OpenApi Operation name associated with the request\n              example: Get All Connections\n              type: string\n          required:\n            - id\n            - name\n          type: object\n        parent_id:\n          description: When request is a child request, this UUID indicates it's parent request.\n          example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f\n          nullable: true\n          type: string\n        path:\n          description: The path component of the URI the request was made to.\n          example: /vault/connections\n          type: string\n        sandbox:\n          description: Indicates whether the request was made using Apidecks sandbox credentials or not.\n          example: false\n          type: boolean\n        service:\n          additionalProperties: false\n          description: Apideck service provider associated with request.\n          properties:\n            id:\n              description: Apideck service provider id.\n              example: apideck-vault\n              type: string\n            name:\n              description: Apideck service provider name.\n              example: Apideck Vault\n              type: string\n          required:\n            - id\n            - name\n          type: object\n        source_ip:\n          description: The IP address of the source of the request.\n          example: 94.227.131.238\n          nullable: true\n          type: string\n        status_code:\n          description: HTTP Status code that was returned.\n          example: 200\n          type: integer\n        success:\n          description: Whether or not the request was successful.\n          example: true\n          type: boolean\n        timestamp:\n          description: ISO Date and time when the request was made.\n          example: 2021-07-12T14:26:17.420Z\n          type: string\n        unified_api:\n          description: Which Unified Api request was made to.\n          enum:\n            - crm\n            - lead\n            - proxy\n            - vault\n            - accounting\n          example: vault\n          type: string\n      required:\n        - id\n        - parent_id\n        - api_style\n        - base_url\n        - child_request\n        - consumer_id\n        - duration\n        - execution\n        - has_children\n        - http_method\n        - latency\n        - operation\n        - path\n        - sandbox\n        - service\n        - status_code\n        - success\n        - timestamp\n        - unified_api\n      type: object\n    LogsFilter:\n      properties:\n        connector_id:\n          example: crm+salesforce\n          nullable: true\n          type: string\n        exclude_unified_apis:\n          example: vault,proxy\n          nullable: true\n          type: string\n        status_code:\n          example: 201\n          nullable: true\n          type: number\n      type: object\n      x-graphql-type-name: LogsFilter\n    Meta:\n      description: Response metadata\n      properties:\n        cursors:\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            current:\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n              type: string\n            next:\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n              type: string\n            previous:\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n              type: string\n          type: object\n        items_on_page:\n          description: Number of items returned in the data property of the response\n          example: 50\n          type: integer\n      type: object\n    NotFoundResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Could not find widget with id: '123'\"\n              type: string\n            - example:\n                not_found:\n                  entity: widget\n                  id: \"123\"\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Found\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unknown Widget\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#entitynotfounderror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 404\n          type: number\n        type_name:\n          description: The type of error returned\n          example: EntityNotFoundError\n          type: string\n    NotImplementedResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'\n              type: string\n            - type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Implemented\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unmapped Attribute\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#mappingerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 501\n          type: number\n        type_name:\n          description: The type of error returned\n          example: MappingError\n          type: string\n    OAuthGrantType:\n      description: \"OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types\"\n      enum:\n        - authorization_code\n        - client_credentials\n      example: authorization_code\n      readOnly: true\n      type: string\n    PaymentRequiredResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: You have reached your limit of 2000\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Payment Required\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Request Limit Reached\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#requestlimiterror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 402\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestLimitError\n          type: string\n    ProxyRequest:\n      example:\n        account_sid: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        api_version: 2010-04-01\n        body: This is the ship that made the Kessel Run in fourteen parsecs?\n        date_created: Thu, 30 Jul 2015 20:12:31 +0000\n        date_sent: Thu, 30 Jul 2015 20:12:33 +0000\n        date_updated: Thu, 30 Jul 2015 20:12:33 +0000\n        direction: outbound-api\n        from: \"+15017122661\"\n        messaging_service_sid: MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        num_media: \"0\"\n        num_segments: \"1\"\n        sid: SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        status: sent\n        subresource_uris:\n          media: /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Media.json\n        to: \"+15558675310\"\n        uri: /2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.json\n      properties: {}\n      type: object\n    RequestCountAllocation:\n      properties:\n        proxy:\n          example: 10\n          type: number\n        unify:\n          example: 100\n          type: number\n        vault:\n          example: 21\n          type: number\n      type: object\n    Session:\n      additionalProperties: false\n      properties:\n        consumer_metadata:\n          $ref: \"#/components/schemas/ConsumerMetadata\"\n        custom_consumer_settings:\n          additionalProperties: true\n          description: Custom consumer settings that are passed as part of the session.\n          example:\n            feature_flag_1: true\n            tax_rates:\n              - id: \"6\"\n                label: 6%\n              - id: \"21\"\n                label: 21%\n          title: Custom consumer settings\n          type: object\n        redirect_uri:\n          example: https://mysaas.com/dashboard\n          type: string\n        settings:\n          additionalProperties: false\n          properties:\n            auto_redirect:\n              default: false\n              description: Automatically redirect to redirect uri after the connection has been configured as callable. Defaults to `false`.\n              title: Auto-redirect\n              type: boolean\n            hide_resource_settings:\n              default: false\n              title: Hide resource settings\n              type: boolean\n            isolation_mode:\n              default: false\n              description: Configure [Vault](/apis/vault/reference#section/Get-Started) to run in isolation mode, meaning it only shows the connection settings and hides the navigation items.\n              title: Isolation mode\n              type: boolean\n            sandbox_mode:\n              default: false\n              description: Configure [Vault](/apis/vault/reference#section/Get-Started) to show a banner informing the logged in user is in a test environment.\n              title: Sandbox mode\n              type: boolean\n            session_length:\n              default: 1h\n              description: The duration of time the session is valid for (maximum 1 week).\n              example: 30m\n              title: Session Length\n              type: string\n            show_logs:\n              default: true\n              description: Configure [Vault](/apis/vault/reference#section/Get-Started) to show the logs page. Defaults to `true`.\n              title: Show logs\n              type: boolean\n            show_suggestions:\n              default: false\n              description: Configure [Vault](/apis/vault/reference#section/Get-Started) to show the suggestions page. Defaults to `true`.\n              title: Show suggestions\n              type: boolean\n            unified_apis:\n              description: Provide the IDs of the Unified APIs you want to be visible. Leaving it empty or omiting this field will show all Unified APIs.\n              items:\n                $ref: \"#/components/schemas/UnifiedApiId\"\n              type: array\n          type: object\n          x-graphql-type-name: SessionSettings\n        theme:\n          properties:\n            favicon:\n              example: https://res.cloudinary.com/apideck/icons/intercom\n              type: string\n            primary_color:\n              example: \"#286efa\"\n              type: string\n            privacy_url:\n              example: https://compliance.apideck.com/privacy-policy\n              type: string\n            sidepanel_background_color:\n              example: \"#286efa\"\n              type: string\n            sidepanel_text_color:\n              example: \"#FFFFFF\"\n              type: string\n            terms_url:\n              example: https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e\n              type: string\n            vault_name:\n              example: Intercom\n              type: string\n          type: object\n      type: object\n    SimpleFormFieldOption:\n      properties:\n        label:\n          example: General Channel\n          type: string\n        value:\n          anyOf:\n            - example: general\n              type: string\n            - example: 123\n              type: integer\n            - example: 12.5\n              type: number\n            - example: true\n              type: boolean\n            - example:\n                - team\n                - general\n              items:\n                anyOf:\n                  - type: string\n                  - type: integer\n                  - type: number\n              type: array\n      type: object\n    UnauthorizedResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: Failed to generate valid JWT Session. Verify applicationId is correct\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unauthorized\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Unauthorized Request\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 401\n          type: number\n        type_name:\n          description: The type of error returned\n          example: UnauthorizedError\n          type: string\n    UnexpectedErrorResponse:\n      properties:\n        detail:\n          anyOf:\n            - example: \"Missing Header: x-apideck-consumer-id\"\n              type: string\n            - example:\n                missing:\n                  - x-apideck-consumer-id: required\n              type: object\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#unauthorizederror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 400\n          type: number\n        type_name:\n          description: The type of error returned\n          example: RequestHeadersValidationError\n          type: string\n    UnifiedApiId:\n      description: Name of Apideck Unified API\n      enum:\n        - vault\n        - lead\n        - crm\n        - accounting\n        - file-storage\n        - spreadsheet\n        - email\n        - script\n        - sms\n        - team-messaging\n        - ecommerce\n        - payroll\n        - customer-support\n        - time-registration\n        - transactional-email\n        - hcm\n        - form\n        - csp\n        - email-marketing\n        - ats\n        - hris\n        - pos\n      example: crm\n      type: string\n    UnprocessableResponse:\n      properties:\n        detail:\n          description: Contains parameter or domain specific information related to the error and why it occurred.\n          example: State did not include unified_api\n          type: string\n        error:\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unprocessable Entity\n          type: string\n        message:\n          description: A human-readable message providing more details about the error.\n          example: Invalid State\n          type: string\n        ref:\n          description: Link to documentation of error type\n          example: https://developers.apideck.com/errors#invalidstateerror\n          type: string\n        status_code:\n          description: HTTP status code\n          example: 422\n          type: number\n        type_name:\n          description: The type of error returned\n          example: InvalidStateError\n          type: string\n    UpdateConnectionResponse:\n      properties:\n        data:\n          $ref: \"#/components/schemas/Connection\"\n        status:\n          description: HTTP Response Status\n          example: OK\n          type: string\n        status_code:\n          description: HTTP Response Status Code\n          example: 200\n          type: integer\n      required:\n        - status_code\n        - status\n        - data\n      type: object\n    VaultEventType:\n      enum:\n        - \"*\"\n        - vault.connection.created\n        - vault.connection.updated\n        - vault.connection.deleted\n        - vault.connection.callable\n        - vault.connection.token_refresh.failed\n      example: vault.connection.created\n      type: string\n  securitySchemes:\n    apiKey:\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n      in: header\n      name: Authorization\n      type: apiKey\n    applicationId:\n      description: The ID of your Unify application\n      in: header\n      name: x-apideck-app-id\n      type: apiKey\nx-webhooks:\n  ConnectionCallable:\n    post:\n      description: Connection Callable\n      operationId: connectionCallable\n      parameters:\n        - description: The type of event that was triggered\n          in: header\n          name: x-apideck-event-type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/VaultEventType\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionEvent\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n      summary: Connection Callable\n      tags:\n        - Webhook Events\n  ConnectionCreated:\n    post:\n      description: Connection Created\n      operationId: connectionCreated\n      parameters:\n        - description: The type of event that was triggered\n          in: header\n          name: x-apideck-event-type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/VaultEventType\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionEvent\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n      summary: Connection Created\n      tags:\n        - Webhook Events\n  ConnectionDeleted:\n    post:\n      description: Connection Deleted\n      operationId: connectionDeleted\n      parameters:\n        - description: The type of event that was triggered\n          in: header\n          name: x-apideck-event-type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/VaultEventType\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionEvent\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n      summary: Connection Deleted\n      tags:\n        - Webhook Events\n  ConnectionUpdated:\n    post:\n      description: Connection Updated\n      operationId: connectionUpdated\n      parameters:\n        - description: The type of event that was triggered\n          in: header\n          name: x-apideck-event-type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/VaultEventType\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionEvent\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n      summary: Connection Updated\n      tags:\n        - Webhook Events\n  TokenRefreshFailed:\n    post:\n      description: Attempt to refresh the connections access_token failed.\n      operationId: connectionTokenRefreshFailed\n      parameters:\n        - description: The type of event that was triggered\n          in: header\n          name: x-apideck-event-type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/VaultEventType\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConnectionEvent\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n      summary: Token Refresh Failed\n      tags:\n        - Webhook Events\n  x-sdk-exclude: true\n"
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"scope\": style: unexpected style: \"spaceDelimited\""
}