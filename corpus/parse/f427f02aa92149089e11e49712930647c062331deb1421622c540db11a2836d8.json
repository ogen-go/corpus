{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CS-SI/eodag"
		},
		"file": {
			"name": "stac_api.yml",
			"size": 0,
			"path": "eodag/resources/stac_api.yml",
			"byteSize": 55420,
			"content": "openapi: 3.0.1\ninfo:\n  title: The SpatioTemporal Asset Catalog API\n  version: 0.9.0\n  license:\n    name: Apache License 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0'\n  description: \u003e-\n    This is an OpenAPI definition of the core SpatioTemporal Asset Catalog API\n    specification. Any service that implements this endpoint to allow search of\n    spatiotemporal assets can be considered a STAC API. The endpoint is also\n    available as an OpenAPI fragment that can be integrated with other OpenAPI\n    definitions, and is designed to slot seamlessly into a OGC API - Features\n    definition.\n  contact:\n    name: STAC Specification\n    url: 'http://stacspec.org'\ntags:\n  - name: Capabilities\n    description: essential characteristics of this API\n  - name: Data\n    description: access to data (features)\n  - name: STAC\n    description: \u003e-\n      Extension to OGC API - Features to support STAC metadata model and search\n      API\npaths:\n  /:\n    get:\n      tags:\n        - Capabilities\n      summary: landing page\n      description: |-\n        Returns the root STAC Catalog or STAC Collection that is the entry point\n        for users to browse with STAC Browser or for search engines to crawl.\n        This can either return a single STAC Collection or more commonly a STAC\n        catalog.\n\n        The landing page provides links to the API definition, the conformance\n        statements, the collections and sub-catalogs.\n      operationId: getLandingPage\n      responses:\n        '200':\n          $ref: '#/components/responses/LandingPage'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /conformance:\n    get:\n      tags:\n        - Capabilities\n      summary: information about specifications that this API conforms to\n      description: |-\n        A list of all conformance classes specified in a standard that the\n        server conforms to.\n      operationId: getConformanceDeclaration\n      responses:\n        '200':\n          $ref: '#/components/responses/ConformanceDeclaration'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /collections:\n    get:\n      tags:\n        - Capabilities\n      summary: the feature collections in the dataset\n      operationId: getCollections\n      responses:\n        '200':\n          $ref: '#/components/responses/Collections'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/collections/{collectionId}':\n    get:\n      tags:\n        - Capabilities\n      summary: describe the feature collection with id `collectionId`\n      operationId: describeCollection\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n      responses:\n        '200':\n          $ref: '#/components/responses/Collection'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/collections/{collectionId}/items':\n    get:\n      tags:\n        - Data\n      summary: fetch features\n      description: |-\n        Fetch features of the feature collection with id `collectionId`.\n\n        Every feature in a dataset belongs to a collection. A dataset may\n        consist of multiple feature collections. A feature collection is often a\n        collection of features of a similar type, based on a common schema.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeatures\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/datetime'\n      responses:\n        '200':\n          $ref: '#/components/responses/Features'\n        '400':\n          $ref: '#/components/responses/InvalidParameter'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/collections/{collectionId}/items/{featureId}':\n    get:\n      tags:\n        - Data\n      summary: fetch a single feature\n      description: |-\n        Fetch the feature with id `featureId` in the feature collection\n        with id `collectionId`.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeature\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n        - $ref: '#/components/parameters/featureId'\n      responses:\n        '200':\n          $ref: '#/components/responses/Feature'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  /search:\n    get:\n      summary: Search STAC items with simple filtering.\n      description: |-\n        Retrieve Items matching filters. Intended as a shorthand API for simple\n        queries.\n\n        This method is optional, but you MUST implement `POST /search` if you\n        want to implement this method.\n\n        If this endpoint is implemented on a server, it is required to add a\n        link referring to this endpoint with `rel` set to `search` to the\n        `links` array in `GET /`. As `GET` is the default method, the `method`\n        may not be set explicitly in the link.\n      operationId: getSearchSTAC\n      tags:\n        - STAC\n      parameters:\n        - $ref: '#/components/parameters/bbox'\n        - $ref: '#/components/parameters/datetime'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/ids'\n        - $ref: '#/components/parameters/collectionsArray'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\n    post:\n      summary: Search STAC items with full-featured filtering.\n      description: |-\n        retrieve items matching filters. Intended as the standard, full-featured\n        query API.\n\n        This method is mandatory to implement if `GET /search` is implemented.\n        If this endpoint is implemented on a server, it is required to add a\n        link referring to this endpoint with `rel` set to `search` and `method`\n        set to `POST` to the `links` array in `GET /`.\n      operationId: postSearchSTAC\n      tags:\n        - STAC\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/searchBody'\n      responses:\n        '200':\n          description: A feature collection.\n          content:\n            application/geo+json:\n              schema:\n                $ref: '#/components/schemas/itemCollection'\n            text/html:\n              schema:\n                type: string\n        default:\n          description: An error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/exception'\n            text/html:\n              schema:\n                type: string\ncomponents:\n  parameters:\n    bbox:\n      name: bbox\n      in: query\n      description: \u003e-\n        Only features that have a geometry that intersects the bounding box are\n        selected.\n\n        The bounding box is provided as four or six numbers, depending on\n\n        whether the coordinate reference system includes a vertical axis (height\n\n        or depth):\n\n\n        * Lower left corner, coordinate axis 1\n\n        * Lower left corner, coordinate axis 2\n\n        * Minimum value, coordinate axis 3 (optional)\n\n        * Upper right corner, coordinate axis 1\n\n        * Upper right corner, coordinate axis 2\n\n        * Maximum value, coordinate axis 3 (optional)\n\n\n        The coordinate reference system of the values is WGS 84\n\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless\n\n        a different coordinate reference system is specified in the parameter\n\n        `bbox-crs`.\n\n\n        For WGS 84 longitude/latitude the values are in most cases the sequence\n\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n\n        latitude. However, in cases where the box spans the antimeridian the\n\n        first value (west-most box edge) is larger than the third value\n\n        (east-most box edge).\n\n\n        If the vertical axis is included, the third and the sixth number are\n\n        the bottom and the top of the 3-dimensional bounding box.\n\n\n        If a feature has multiple spatial geometry properties, it is the\n\n        decision of the server whether only a single spatial geometry property\n\n        is used to determine the extent or all relevant geometries.\n\n\n        Example: The bounding box of the New Zealand Exclusive Economic Zone in\n\n        WGS 84 (from 160.6째E to 170째W and from 55.95째S to 25.89째S) would be\n\n        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as\n\n        `bbox=160.6,-55.95,-170,-25.89`.\n      required: false\n      schema:\n        type: array\n        minItems: 4\n        maxItems: 6\n        items:\n          type: number\n      style: form\n      explode: false\n    collectionId:\n      name: collectionId\n      in: path\n      description: local identifier of a collection\n      required: true\n      schema:\n        type: string\n    datetime:\n      name: datetime\n      in: query\n      description: \u003e-\n        Either a date-time or an interval, open or closed. Date and time\n        expressions\n\n        adhere to RFC 3339. Open intervals are expressed using double-dots.\n\n\n        Examples:\n\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n\n        Only features that have a temporal property that intersects the value of\n\n        `datetime` are selected.\n\n\n        If a feature has multiple temporal properties, it is the decision of the\n\n        server whether only a single temporal property is used to determine\n\n        the extent or all relevant temporal properties.\n      required: false\n      schema:\n        type: string\n      style: form\n      explode: false\n    featureId:\n      name: featureId\n      in: path\n      description: local identifier of a feature\n      required: true\n      schema:\n        type: string\n    limit:\n      name: limit\n      in: query\n      description: \u003e-\n        The optional limit parameter limits the number of items that are\n        presented in the response document.\n\n\n        Only items are counted that are on the first level of the collection in\n        the response document.\n\n        Nested objects contained within the explicitly requested items shall not\n        be counted.\n\n\n        Minimum = 1. Maximum = 10000. Default = 10.\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 10000\n        default: 10\n      style: form\n      explode: false\n    ids:\n      name: ids\n      in: query\n      description: |-\n        Array of Item ids to return. All other filter parameters that further\n        restrict the number of search results are ignored\n      required: false\n      schema:\n        $ref: '#/components/schemas/ids'\n      explode: false\n    collectionsArray:\n      name: collections\n      in: query\n      description: |\n        Array of Collection IDs to include in the search for items.\n        Only Items in one of the provided Collections will be searched\n      required: false\n      schema:\n        $ref: '#/components/schemas/collectionsArray'\n      explode: false\n  schemas:\n    collection:\n      type: object\n      required:\n        - id\n        - links\n        - stac_version\n        - description\n        - license\n        - extent\n      properties:\n        id:\n          description: 'identifier of the collection used, for example, in URIs'\n          type: string\n          example: address\n        title:\n          description: human readable title of the collection\n          type: string\n          example: address\n        description:\n          description: a description of the features in the collection\n          type: string\n          example: An address.\n          $ref: '#/components/schemas/description'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n          example:\n            - href: 'http://data.example.com/buildings'\n              rel: item\n            - href: 'http://example.com/concepts/buildings.html'\n              rel: describedBy\n              type: text/html\n        extent:\n          $ref: '#/components/schemas/extent'\n        itemType:\n          description: \u003e-\n            indicator about the type of the items in the collection (the default\n            value is 'feature').\n          type: string\n          default: feature\n        crs:\n          description: the list of coordinate reference systems supported by the service\n          type: array\n          items:\n            type: string\n          default:\n            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n          example:\n            - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n            - 'http://www.opengis.net/def/crs/EPSG/0/4326'\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        keywords:\n          type: array\n          description: List of keywords describing the collection.\n          items:\n            type: string\n        license:\n          $ref: '#/components/schemas/license'\n        providers:\n          $ref: '#/components/schemas/providers'\n        summaries:\n          description: |-\n            Summaries are either a unique set of all available values *or*\n            statistics. Statistics by default only specify the range (minimum\n            and maximum values), but can optionally be accompanied by additional\n            statistical values. The range can specify the potential range of\n            values, but it is recommended to be as precise as possible. The set\n            of values must contain at least one element and it is strongly\n            recommended to list all values. It is recommended to list as many\n            properties as reasonable so that consumers get a full overview of\n            the Collection. Properties that are covered by the Collection\n            specification (e.g. `providers` and `license`) may not be repeated\n            in the summaries.\n          type: object\n          additionalProperties:\n            oneOf:\n              - type: array\n                title: Set of values\n                items:\n                  description: A value of any type.\n              - type: object\n                title: Statistics\n                description: |-\n                  By default, only ranges with a minimum and a maximum value can\n                  be specified. Ranges can be specified for ordinal values only,\n                  which means they need to have a rank order. Therefore, ranges\n                  can only be specified for numbers and some special types of\n                  strings. Examples: grades (A to F), dates or times.\n                  Implementors are free to add other derived statistical values\n                  to the object, for example `mean` or `stddev`.\n                required:\n                  - min\n                  - max\n                properties:\n                  min:\n                    anyOf:\n                      - type: string\n                      - type: number\n                  max:\n                    anyOf:\n                      - type: string\n                      - type: number\n      example:\n        stac_version: 0.9.0\n        stac_extensions: []\n        id: Sentinel-2\n        title: 'Sentinel-2 MSI: MultiSpectral Instrument, Level-1C'\n        description: |\n          Sentinel-2 is a wide-swath, high-resolution, multi-spectral\n          imaging mission...\n        license: proprietary\n        keywords:\n          - copernicus\n          - esa\n          - eu\n          - msi\n          - radiance\n          - sentinel\n        providers:\n          - name: ESA\n            roles:\n              - producer\n              - licensor\n            url: 'https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi'\n        extent:\n          spatial:\n            bbox:\n              - - -180\n                - -56\n                - 180\n                - 83\n          temporal:\n            interval:\n              - - '2015-06-23T00:00:00Z'\n                - '2019-07-10T13:44:56Z'\n        summaries:\n          datetime:\n            min: '2015-06-23T00:00:00Z'\n            max: '2019-07-10T13:44:56Z'\n          'sci:citation':\n            - 'Copernicus Sentinel data [Year]'\n          'eo:gsd':\n            - 10\n            - 30\n            - 60\n          platform:\n            - sentinel-2a\n            - sentinel-2b\n          constellation:\n            - sentinel-2\n          instruments:\n            - msi\n          'view:off_nadir':\n            min: 0\n            max: 100\n          'view:sun_elevation':\n            min: 6.78\n            max: 89.9\n          'eo:bands':\n            - - name: B1\n                common_name: coastal\n                center_wavelength: 4.439\n              - name: B2\n                common_name: blue\n                center_wavelength: 4.966\n              - name: B3\n                common_name: green\n                center_wavelength: 5.6\n              - name: B4\n                common_name: red\n                center_wavelength: 6.645\n              - name: B5\n                center_wavelength: 7.039\n              - name: B6\n                center_wavelength: 7.402\n              - name: B7\n                center_wavelength: 7.825\n              - name: B8\n                common_name: nir\n                center_wavelength: 8.351\n              - name: B8A\n                center_wavelength: 8.648\n              - name: B9\n                center_wavelength: 9.45\n              - name: B10\n                center_wavelength: 1.3735\n              - name: B11\n                common_name: swir16\n                center_wavelength: 1.6137\n              - name: B12\n                common_name: swir22\n                center_wavelength: 2.2024\n        links:\n          - rel: self\n            href: 'http://cool-sat.com/collections/Sentinel-2'\n          - rel: root\n            href: 'http://cool-sat.com/collections'\n          - rel: license\n            href: \u003e-\n              https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf\n            title: \u003e-\n              Legal notice on the use of Copernicus Sentinel Data and Service\n              Information\n    collections:\n      type: object\n      required:\n        - links\n        - collections\n      properties:\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        collections:\n          type: array\n          items:\n            $ref: '#/components/schemas/collection'\n    confClasses:\n      type: object\n      required:\n        - conformsTo\n      properties:\n        conformsTo:\n          type: array\n          items:\n            type: string\n    exception:\n      type: object\n      description: \u003e-\n        Information about the exception: an error code plus an optional\n        description.\n      required:\n        - code\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    extent:\n      type: object\n      description: \u003e-\n        The extent of the features in the collection. In the Core only spatial\n        and temporal\n\n        extents are specified. Extensions may add additional members to\n        represent other\n\n        extents, for example, thermal or pressure ranges.\n      properties:\n        spatial:\n          description: The spatial extent of the features in the collection.\n          type: object\n          properties:\n            bbox:\n              description: \u003e-\n                One or more bounding boxes that describe the spatial extent of\n                the dataset.\n\n                In the Core only a single bounding box is supported. Extensions\n                may support\n\n                additional areas. If multiple areas are provided, the union of\n                the bounding\n\n                boxes describes the spatial extent.\n              type: array\n              minItems: 1\n              items:\n                description: \u003e-\n                  Each bounding box is provided as four or six numbers,\n                  depending on\n\n                  whether the coordinate reference system includes a vertical\n                  axis\n\n                  (height or depth):\n\n\n                  * Lower left corner, coordinate axis 1\n\n                  * Lower left corner, coordinate axis 2\n\n                  * Minimum value, coordinate axis 3 (optional)\n\n                  * Upper right corner, coordinate axis 1\n\n                  * Upper right corner, coordinate axis 2\n\n                  * Maximum value, coordinate axis 3 (optional)\n\n\n                  The coordinate reference system of the values is WGS 84\n                  longitude/latitude\n\n                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a\n                  different coordinate\n\n                  reference system is specified in `crs`.\n\n\n                  For WGS 84 longitude/latitude the values are in most cases the\n                  sequence of\n\n                  minimum longitude, minimum latitude, maximum longitude and\n                  maximum latitude.\n\n                  However, in cases where the box spans the antimeridian the\n                  first value\n\n                  (west-most box edge) is larger than the third value (east-most\n                  box edge).\n\n\n                  If the vertical axis is included, the third and the sixth\n                  number are\n\n                  the bottom and the top of the 3-dimensional bounding box.\n\n\n                  If a feature has multiple spatial geometry properties, it is\n                  the decision of the\n\n                  server whether only a single spatial geometry property is used\n                  to determine\n\n                  the extent or all relevant geometries.\n                type: array\n                minItems: 4\n                maxItems: 6\n                items:\n                  type: number\n                example:\n                  - -180\n                  - -90\n                  - 180\n                  - 90\n            crs:\n              description: \u003e-\n                Coordinate reference system of the coordinates in the spatial\n                extent\n\n                (property `bbox`). The default reference system is WGS 84\n                longitude/latitude.\n\n                In the Core this is the only supported coordinate reference\n                system.\n\n                Extensions may support additional coordinate reference systems\n                and add\n\n                additional enum values.\n              type: string\n              enum:\n                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n          required:\n            - bbox\n        temporal:\n          description: The temporal extent of the features in the collection.\n          type: object\n          properties:\n            interval:\n              description: \u003e-\n                One or more time intervals that describe the temporal extent of\n                the dataset.\n\n                The value `null` is supported and indicates an open time\n                intervall.\n\n                In the Core only a single time interval is supported. Extensions\n                may support\n\n                multiple intervals. If multiple intervals are provided, the\n                union of the\n\n                intervals describes the temporal extent.\n              type: array\n              minItems: 1\n              items:\n                description: \u003e-\n                  Begin and end times of the time interval. The timestamps\n\n                  are in the coordinate reference system specified in `trs`. By\n                  default\n\n                  this is the Gregorian calendar.\n                type: array\n                minItems: 2\n                maxItems: 2\n                items:\n                  type: string\n                  format: date-time\n                  nullable: true\n                example:\n                  - '2011-11-11T12:22:11Z'\n                  - null\n            trs:\n              description: \u003e-\n                Coordinate reference system of the coordinates in the temporal\n                extent\n\n                (property `interval`). The default reference system is the\n                Gregorian calendar.\n\n                In the Core this is the only supported temporal reference\n                system.\n\n                Extensions may support additional temporal reference systems and\n                add\n\n                additional enum values.\n              type: string\n              enum:\n                - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n              default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'\n          required:\n            - interval\n      required:\n        - spatial\n        - temporal\n    featureCollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - features\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/item'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        timeStamp:\n          $ref: '#/components/schemas/timeStamp'\n        numberMatched:\n          $ref: '#/components/schemas/numberMatched'\n        numberReturned:\n          $ref: '#/components/schemas/numberReturned'\n    featureGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: '#/components/schemas/geometryGeoJSON'\n        properties:\n          type: object\n          nullable: true\n        id:\n          oneOf:\n            - type: string\n            - type: integer\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n    geometryGeoJSON:\n      oneOf:\n        - $ref: '#/components/schemas/pointGeoJSON'\n        - $ref: '#/components/schemas/multipointGeoJSON'\n        - $ref: '#/components/schemas/linestringGeoJSON'\n        - $ref: '#/components/schemas/multilinestringGeoJSON'\n        - $ref: '#/components/schemas/polygonGeoJSON'\n        - $ref: '#/components/schemas/multipolygonGeoJSON'\n        - $ref: '#/components/schemas/geometrycollectionGeoJSON'\n    geometrycollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - geometries\n      properties:\n        type:\n          type: string\n          enum:\n            - GeometryCollection\n        geometries:\n          type: array\n          items:\n            $ref: '#/components/schemas/geometryGeoJSON'\n    landingPage:\n      type: object\n      required:\n        - links\n        - stac_version\n        - id\n        - description\n      properties:\n        title:\n          type: string\n          example: Buildings in Bonn\n        description:\n          type: string\n          example: \u003e-\n            Access to data about buildings in the city of Bonn via a Web API\n            that conforms to the OGC API Features specification.\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        id:\n          type: string\n    linestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - LineString\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    link:\n      type: object\n      required:\n        - href\n        - rel\n      properties:\n        href:\n          type: string\n          example: 'http://www.geoserver.example/stac/naip/child/catalog.json'\n          format: url\n        rel:\n          type: string\n          example: child\n        type:\n          type: string\n          example: application/geo+json\n        hreflang:\n          type: string\n          example: en\n        title:\n          type: string\n          example: NAIP Child Catalog\n        length:\n          type: integer\n        method:\n          type: string\n          enum:\n            - GET\n            - POST\n          default: GET\n          description: Specifies the HTTP method that the link expects\n        headers:\n          type: object\n          description: Object key values pairs they map to headers\n          example:\n            Accept: application/json\n        body:\n          type: object\n          description: \u003e-\n            For POST requests, the link can specify the HTTP body as a JSON\n            object.\n        merge:\n          type: boolean\n          default: false\n          description: |-\n            This is only valid when the server is responding to POST request.\n\n            If merge is true, the client is expected to merge the body value\n            into the current request body before following the link.\n            This avoids passing large post bodies back and forth when following\n            links, particularly for navigating pages through the `POST /search`\n            endpoint.\n\n            NOTE: To support form encoding it is expected that a client be able\n            to merge in the key value pairs specified as JSON\n            `{\"next\": \"token\"}` will become `\u0026next=token`.\n      title: Link\n    multilinestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiLineString\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    multipointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPoint\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    multipolygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPolygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              minItems: 4\n              items:\n                type: array\n                minItems: 2\n                items:\n                  type: number\n    numberMatched:\n      description: |-\n        The number of features of the feature type that match the selection\n        parameters like `bbox`.\n      type: integer\n      minimum: 0\n      example: 127\n    numberReturned:\n      description: |-\n        The number of features in the feature collection.\n\n        A server may omit this information in a response, if the information\n        about the number of features is not known or difficult to compute.\n\n        If the value is provided, the value shall be identical to the number\n        of items in the \"features\" array.\n      type: integer\n      minimum: 0\n      example: 10\n    pointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: number\n    polygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 4\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    timeStamp:\n      description: \u003e-\n        This property indicates the time and date when the response was\n        generated.\n      type: string\n      format: date-time\n      example: '2017-08-17T08:05:32Z'\n    description:\n      type: string\n      description: |-\n        Detailed multi-line description to fully explain the catalog or\n        collection.\n\n        [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich\n        text representation.\n    license:\n      type: string\n      description: |-\n        License(s) of the data as a SPDX\n        [License identifier](https://spdx.org/licenses/). Alternatively, use\n        `proprietary` if the license is not on the SPDX license list or\n        `various` if multiple licenses apply. In these two cases links to the\n        license texts SHOULD be added, see the `license` link relation type.\n\n        Non-SPDX licenses SHOULD add a link to the license text with the\n        `license` relation in the links section. The license text MUST NOT be\n        provided as a value of this field. If there is no public license URL\n        available, it is RECOMMENDED to host the license text and\n        link to it.\n      example: Apache-2.0\n    providers:\n      type: array\n      description: \u003e-\n        A list of providers, which may include all organizations capturing or\n        processing the data or the hosting provider. Providers should be listed\n        in chronological order with the most recent provider being the last\n        element of the list.\n      items:\n        type: object\n        title: Provider\n        required:\n          - name\n        properties:\n          name:\n            description: The name of the organization or the individual.\n            type: string\n          description:\n            description: \u003e-\n              Multi-line description to add further provider information such as\n              processing details for processors and producers, hosting details\n              for hosts or basic contact information.\n\n\n              CommonMark 0.29 syntax MAY be used for rich text representation.\n            type: string\n          roles:\n            description: |-\n              Roles of the provider.\n\n              The provider's role(s) can be one or more of the following\n              elements:\n\n              * licensor: The organization that is licensing the dataset under\n                the license specified in the collection's license field.\n              * producer: The producer of the data is the provider that\n                initially captured and processed the source data, e.g. ESA for\n                Sentinel-2 data.\n              * processor: A processor is any provider who processed data to a\n                derived product.\n              * host: The host is the actual provider offering the data on their\n                storage. There should be no more than one host, specified as last\n                element of the list.\n            type: array\n            items:\n              type: string\n              enum:\n                - producer\n                - licensor\n                - processor\n                - host\n          url:\n            description: \u003e-\n              Homepage on which the provider describes the dataset and publishes\n              contact information.\n            type: string\n            format: url\n    searchBody:\n      description: The search criteria\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/bboxFilter'\n        - $ref: '#/components/schemas/datetimeFilter'\n        - $ref: '#/components/schemas/intersectsFilter'\n        - $ref: '#/components/schemas/collectionsFilter'\n        - $ref: '#/components/schemas/idsFilter'\n        - $ref: '#/components/schemas/limitFilter'\n    limit:\n      type: integer\n      minimum: 1\n      example: 10\n      default: 10\n      maximum: 10000\n      description: The maximum number of results to return (page size). Defaults to 10\n    bbox:\n      description: |-\n        Only features that have a geometry that intersects the bounding box are\n        selected. The bounding box is provided as four or six numbers,\n        depending on whether the coordinate reference system includes a\n        vertical axis (elevation or depth):\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Lower left corner, coordinate axis 3 (optional)\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n        * Upper right corner, coordinate axis 3 (optional)\n\n        The coordinate reference system of the values is WGS84\n        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless\n        a different coordinate reference system is specified in the parameter\n        `bbox-crs`.\n\n        For WGS84 longitude/latitude the values are in most cases the sequence\n        of minimum longitude, minimum latitude, maximum longitude and maximum\n        latitude. However, in cases where the box spans the antimeridian the\n        first value (west-most box edge) is larger than the third value\n        (east-most box edge).\n\n        If a feature has multiple spatial geometry properties, it is the\n        decision of the server whether only a single spatial geometry property\n        is used to determine the extent or all relevant geometries.\n\n        Example: The bounding box of the New Zealand Exclusive Economic Zone in\n        WGS 84 (from 160.6째E to 170째W and from 55.95째S to 25.89째S) would be\n        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as\n        `bbox=160.6,-55.95,-170,-25.89`.\n      type: array\n      minItems: 4\n      maxItems: 6\n      items:\n        type: number\n      example:\n        - -110\n        - 39.5\n        - -105\n        - 40.5\n    bboxFilter:\n      type: object\n      description: Only return items that intersect the provided bounding box.\n      properties:\n        bbox:\n          $ref: '#/components/schemas/bbox'\n    collectionsArray:\n      type: array\n      description: |-\n        Array of Collection IDs to include in the search for items.\n        Only Items in one of the provided Collections will be searched.\n      items:\n        type: string\n    ids:\n      type: array\n      description: |-\n        Array of Item ids to return. All other filter parameters that further\n        restrict the number of search results are ignored\n      items:\n        type: string\n    datetimeFilter:\n      description: An object representing a date+time based filter.\n      type: object\n      properties:\n        datetime:\n          $ref: '#/components/schemas/datetime'\n    intersectsFilter:\n      type: object\n      description: Only returns items that intersect with the provided polygon.\n      properties:\n        intersects:\n          $ref: 'https://geojson.org/schema/Geometry.json'\n    limitFilter:\n      type: object\n      description: Only returns maximum number of results (page size)\n      properties:\n        limit:\n          $ref: '#/components/schemas/limit'\n    idsFilter:\n      type: object\n      description: Only returns items that match the array of given ids\n      properties:\n        ids:\n          $ref: '#/components/schemas/ids'\n    collectionsFilter:\n      type: object\n      description: Only returns the collections specified\n      properties:\n        collections:\n          $ref: '#/components/schemas/collectionsArray'\n    datetime:\n      type: string\n      description: |-\n        Either a date-time or an interval, open or closed. Date and time\n        expressions adhere to RFC 3339. Open intervals are expressed using\n        double-dots.\n\n        Examples:\n\n        * A date-time: \"2018-02-12T23:20:50Z\"\n        * A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n        * Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\n        Only features that have a temporal property that intersects the value of\n        `datetime` are selected.\n\n        If a feature has multiple temporal properties, it is the decision of the\n        server whether only a single temporal property is used to determine\n        the extent or all relevant temporal properties.\n      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n    stac_version:\n      title: STAC version\n      type: string\n      example: 0.9.0\n    stac_extensions:\n      title: STAC extensions\n      type: array\n      uniqueItems: true\n      items:\n        anyOf:\n          - title: Reference to a JSON Schema\n            type: string\n            format: uri\n          - title: Reference to a core extension\n            type: string\n    itemCollection:\n      description: \u003e-\n        A GeoJSON FeatureCollection augmented with foreign members that contain\n        values relevant to a STAC entity\n      type: object\n      required:\n        - features\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/item'\n        links:\n          $ref: '#/components/schemas/itemCollectionLinks'\n    item:\n      description: \u003e-\n        A GeoJSON Feature augmented with foreign members that contain values\n        relevant to a STAC entity\n      type: object\n      required:\n        - stac_version\n        - id\n        - type\n        - geometry\n        - bbox\n        - links\n        - properties\n        - assets\n      properties:\n        stac_version:\n          $ref: '#/components/schemas/stac_version'\n        stac_extensions:\n          $ref: '#/components/schemas/stac_extensions'\n        id:\n          $ref: '#/components/schemas/itemId'\n        bbox:\n          $ref: '#/components/schemas/bbox'\n        geometry:\n          $ref: 'https://geojson.org/schema/Geometry.json'\n        type:\n          $ref: '#/components/schemas/itemType'\n        properties:\n          $ref: '#/components/schemas/itemProperties'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/link'\n        assets:\n          $ref: '#/components/schemas/itemAssets'\n      example:\n        stac_version: 0.9.0\n        stac_extensions:\n          - eo\n          - view\n          - 'https://example.com/cs-extension/1.0/schema.json'\n        type: Feature\n        id: CS3-20160503_132131_05\n        bbox:\n          - -122.59750209\n          - 37.48803556\n          - -122.2880486\n          - 37.613537207\n        geometry:\n          type: Polygon\n          coordinates:\n            - - - -122.308150179\n                - 37.488035566\n              - - -122.597502109\n                - 37.538869539\n              - - -122.576687533\n                - 37.613537207\n              - - -122.2880486\n                - 37.562818007\n              - - -122.308150179\n                - 37.488035566\n        properties:\n          datetime: '2016-05-03T13:22:30.040Z'\n          title: A CS3 item\n          license: PDDL-1.0\n          providers:\n            - name: CoolSat\n              roles:\n                - producer\n                - licensor\n              url: 'https://cool-sat.com/'\n          'view:sun_azimuth': 168.7\n          'eo:cloud_cover': 0.12\n          'view:off_nadir': 1.4\n          platform: coolsat2\n          instruments:\n            - cool_sensor_v1\n          'eo:bands': []\n          'view:sun_elevation': 33.4\n          'eo:gsd': 0.512\n        collection: CS3\n        links:\n          - rel: self\n            href: 'http://cool-sat.com/collections/CS3/items/20160503_132130_04'\n          - rel: root\n            href: 'http://cool-sat.com/collections'\n          - rel: parent\n            href: 'http://cool-sat.com/collections/CS3'\n          - rel: collection\n            href: 'http://cool-sat.com/collections/CS3'\n        assets:\n          analytic:\n            href: \u003e-\n              http://cool-sat.com/static-catalog/CS3/20160503_132130_04/analytic.tif\n            title: 4-Band Analytic\n          thumbnail:\n            href: \u003e-\n              http://cool-sat.com/static-catalog/CS3/20160503_132130_04/thumbnail.png\n            title: Thumbnail\n    itemId:\n      type: string\n      example: path/to/example.tif\n      description: 'Provider identifier, a unique ID, potentially a link to a file.'\n    itemType:\n      type: string\n      description: The GeoJSON type\n      enum:\n        - Feature\n    itemAssets:\n      type: object\n      additionalProperties:\n        type: object\n        required:\n          - href\n        properties:\n          href:\n            type: string\n            format: url\n            description: Link to the asset object\n            example: \u003e-\n              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png\n          title:\n            type: string\n            description: Displayed title\n            example: Thumbnail\n          description:\n            type: string\n            description: |-\n              Multi-line description to explain the asset.\n\n              [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for\n              rich text representation.\n            example: Small 256x256px PNG thumbnail for a preview.\n          type:\n            type: string\n            description: Media type of the asset\n            example: image/png\n          roles:\n            type: array\n            items:\n              type: string\n            description: Purposes of the asset\n            example:\n              - thumbnail\n    itemProperties:\n      type: object\n      required:\n        - datetime\n      description: provides the core metatdata fields plus extensions\n      properties:\n        datetime:\n          $ref: '#/components/schemas/datetime'\n      additionalProperties:\n        description: \u003e-\n          Any additional properties added in via Item specification or\n          extensions.\n    itemCollectionLinks:\n      type: array\n      description: \u003e-\n        An array of links. Can be used for pagination, e.g. by providing a link\n        with the `next` relation type.\n      items:\n        $ref: '#/components/schemas/link'\n      example:\n        - rel: next\n          href: \u003e-\n            http://api.cool-sat.com/search?next=ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk\n  responses:\n    LandingPage:\n      description: |-\n        The landing page provides links to the API definition\n        (link relations `service-desc` and `service-doc`),\n        the Conformance declaration (path `/conformance`,\n        link relation `conformance`), and the Feature\n        Collections (path `/collections`, link relation\n        `data`).\n\n        Links to the search endpoints (path `/search`, link relation `search`,\n        method `GET` or `POST`) are **required** to be specified if the API\n        implements `/search` for any of the specified HTTP methods.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/landingPage'\n          example:\n            title: NAIP Imagery\n            description: Catalog of NAIP Imagery.\n            links:\n              - href: 'http://data.example.org/'\n                rel: self\n                type: application/json\n                title: this document\n              - href: 'http://data.example.org/api'\n                rel: service-desc\n                type: application/vnd.oai.openapi+json;version=3.0\n                title: the API definition\n              - href: 'http://data.example.org/api.html'\n                rel: service-doc\n                type: text/html\n                title: the API documentation\n              - href: 'http://data.example.org/conformance'\n                rel: conformance\n                type: application/json\n                title: OGC API conformance classes implemented by this server\n              - href: 'http://data.example.org/collections'\n                rel: data\n                type: application/json\n                title: Information about the feature collections\n              - href: 'http://data.example.org/search'\n                rel: search\n                type: application/json\n                title: Search across feature collections\n            stac_version: 0.9.0\n            id: naip\n        text/html:\n          schema:\n            type: string\n    ConformanceDeclaration:\n      description: |-\n        The URIs of all conformance classes supported by the server.\n\n        To support \"generic\" clients that want to access multiple\n        OGC API Features implementations - and not \"just\" a specific\n        API / server, the server declares the conformance\n        classes it implements and conforms to.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/confClasses'\n          example:\n            conformsTo:\n              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'\n              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'\n              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/html'\n              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'\n        text/html:\n          schema:\n            type: string\n    Collections:\n      description: \u003e-\n        The feature collections shared by this API.\n\n\n        The dataset is organized as one or more feature collections. This\n        resource\n\n        provides information about and access to the collections.\n\n\n        The response contains the list of collections. For each collection, a\n        link\n\n        to the items in the collection (path\n        `/collections/{collectionId}/items`,\n\n        link relation `items`) as well as key information about the collection.\n\n        This information includes:\n\n\n        * A local identifier for the collection that is unique for the dataset;\n\n        * A list of coordinate reference systems (CRS) in which geometries may\n        be returned by the server. The first CRS is the default coordinate\n        reference system (the default is always WGS 84 with axis order\n        longitude/latitude);\n\n        * An optional title and description for the collection;\n\n        * An optional extent that can be used to provide an indication of the\n        spatial and temporal extent of the collection - typically derived from\n        the data;\n\n        * An optional indicator about the type of the items in the collection\n        (the default value, if the indicator is not provided, is 'feature').\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/collections'\n        text/html:\n          schema:\n            type: string\n    Collection:\n      description: \u003e-\n        Information about the feature collection with id `collectionId`.\n\n\n        The response contains a link to the items in the collection\n\n        (path `/collections/{collectionId}/items`, link relation `items`)\n\n        as well as key information about the collection. This information\n\n        includes:\n\n\n        * A local identifier for the collection that is unique for the dataset;\n\n        * A list of coordinate reference systems (CRS) in which geometries may\n        be returned by the server. The first CRS is the default coordinate\n        reference system (the default is always WGS 84 with axis order\n        longitude/latitude);\n\n        * An optional title and description for the collection;\n\n        * An optional extent that can be used to provide an indication of the\n        spatial and temporal extent of the collection - typically derived from\n        the data;\n\n        * An optional indicator about the type of the items in the collection\n        (the default value, if the indicator is not provided, is 'feature').\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/collection'\n        text/html:\n          schema:\n            type: string\n    Features:\n      description: \u003e-\n        The response is a document consisting of features in the collection.\n\n        The features included in the response are determined by the server\n\n        based on the query parameters of the request. To support access to\n\n        larger collections without overloading the client, the API supports\n\n        paged access with links to the next page, if more features are selected\n\n        that the page size.\n\n\n        The `bbox` and `datetime` parameter can be used to select only a\n\n        subset of the features in the collection (the features that are in the\n\n        bounding box or time interval). The `bbox` parameter matches all\n        features\n\n        in the collection that are not associated with a location, too. The\n\n        `datetime` parameter matches all features in the collection that are\n\n        not associated with a time stamp or interval, too.\n\n\n        The `limit` parameter may be used to control the subset of the\n\n        selected features that should be returned in the response, the page\n        size.\n\n        Each page may include information about the number of selected and\n\n        returned features (`numberMatched` and `numberReturned`) as well as\n\n        links to support paging (link relation `next`).\n      content:\n        application/geo+json:\n          schema:\n            $ref: '#/components/schemas/featureCollectionGeoJSON'\n        text/html:\n          schema:\n            type: string\n    Feature:\n      description: |-\n        fetch the feature with id `featureId` in the feature collection\n        with id `collectionId`\n      content:\n        application/geo+json:\n          schema:\n            $ref: '#/components/schemas/item'\n        text/html:\n          schema:\n            type: string\n    InvalidParameter:\n      description: A query parameter has an invalid value.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/exception'\n        text/html:\n          schema:\n            type: string\n    NotFound:\n      description: The requested URI was not found.\n    ServerError:\n      description: A server error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/exception'\n        text/html:\n          schema:\n            type: string\nservers:\n  - url: 'http://dev.cool-sat.com'\n    description: Development server\n  - url: 'http://www.cool-sat.com'\n    description: Production server\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"searchBody\": parse schema: allOf: [2]: parse schema: resolve \"#/components/schemas/intersectsFilter\": parse schema: property \"intersects\": parse schema: resolve \"https://geojson.org/schema/Geometry.json\": external \"https://geojson.org/schema/Geometry.json\": https: do: Get \"https://geojson.org/schema/Geometry.json\": host \"geojson.org\" is not allowed"
}