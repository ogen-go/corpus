{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa/utm-docs"
		},
		"file": {
			"name": "etm-ess-api.yaml",
			"size": 0,
			"path": "etm/ess-interface-spec/etm-ess-api.yaml",
			"byteSize": 156247,
			"content": "openapi: 3.0.2\ninfo:\n  title: ETM API (ESS-\u003eDSS and ESS-\u003eESS)\n  version: 1.0.0\n  description: \u003e-\n    Interface definitions for communication between an ETM Service Supplier (ESS)\n    and a DSS, as well as for communication between two ESSs.\n\n    DSS functionality includes identification of peer ETM ESS instances\n    (managing flight operational intents and constraints). ESS functionality\n    includes sharing details of flight operational intents and constraints.\n\n    Note: Unless otherwise specified, fields specified in a message but not\n    declared in the API must be ignored.\n\n    Whenever a object-type field may be omitted, it may also be set to null for\n    the same effect.\n\n    Note that, for now, we're going to use authorities (a.k.a., FIMS AZ scopes)\n    with prefixes of utm rather than etm. This is because we'd otherwise have to change\n    FIMS AZ to allow new scopes, which we'd rather not do at this time.\n    See https://atmjira.arc.nasa.gov/browse/FRED-894 for more info.\nsecurity:\n- Authority:\n  - utm.strategic_coordination\n  - utm.constraint_management\n  - utm.constraint_processing\n  - utm.conformance_monitoring_sa\n  - utm.availability_arbitration\ntags:\n- name: Operational intent references\n  description: \u003e-\n    Endpoints exposed by the DSS for interaction with references to\n    operational intents.\n- name: Operational intent details\n  description: \u003e-\n    Endpoints exposed by ESSs for interaction with details of operational\n    intents.\n- name: Constraint references\n  description: \u003e-\n    Endpoints exposed by the DSS for interaction with references to\n    constraints.\n- name: Constraint details\n  description: \u003e-\n    Endpoints exposed by ESSs for interaction with details of constraints.\n- name: Subscriptions\n  description: \u003e-\n    Endpoints exposed by the DSS for interaction with subscription entities.\n- name: Reports\n  description: Endpoints exposed by the DSS for reporting peer DSS issues.\n- name: Availability\n  description: Endpoints exposed by the DSS for declaring ESS availability.\n- name: Logging\n  description: \u003e-\n    Pseudo-endpoints not intended to be implemented literally, but rather to\n    illustrate logging data formats\n- name: dss\n  description: Endpoints exposed by the DSS server.\n- name: p2p_etm\n  description: Endpoints exposed by ETM ESSs for peer-peer communication.\ncomponents:\n  securitySchemes:\n    Authority:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.example.com/oauth/token\n          scopes:\n            utm.strategic_coordination: \u003e-\n              Client may perform actions encompassed by the strategic\n              coordination role including strategic conflict detection.\n            utm.constraint_management: \u003e-\n              Client may manage (create, edit, and delete) constraints according\n              to the constraint management role.\n            utm.constraint_processing: \u003e-\n              Client may read constraint references from the DSS and details\n              from the partner ESSs according to the constraint processing role.\n            utm.conformance_monitoring_sa: \u003e-\n              Client may perform actions encompassed by the conformance\n              monitoring for situational awareness role.\n            utm.availability_arbitration: \u003e-\n              Client may set the availability state of ESSs in the DSS.\n      description: \u003e-\n        Authorization from, or on behalf of, an authorization authority.  This\n        authority will issue access tokens that are JSON Web Tokens as defined\n        in RFC 7519, using the `RS256` algorithm for the signature, publish to\n        all providers the public key for verifying that signature, and implement\n        standard OAuth server discovery mechanisms as described in RFC 8414.\n\n        The following fields must be included in the JWT claim for access tokens\n        issued by this authority:\n\n        * `iss`, with the URL at which the token generation request was\n        received.\n\n        * `exp`, with a time no further than 1 hour in the future.\n\n        * `sub`, with unique ID of the client requesting the access token.\n\n        * `scope`, with a string composed of a space-separated list of strings\n        indicating the scopes granted, per RFC 6749.\n\n        * `jti`, according to RFC 7519.\n\n        Following the principle of least privilege, only one of the scopes\n        enumerated in this document should be granted in a single token (though\n        other scopes may accompany it).  The tokens granted by this authority\n        must protect against reuse of received tokens to impersonate the sender\n        to other recipients (via use of the `aud` claim or other means).\n\n        When using the `aud` claim to protect against the reuse of received\n        tokens, and absent guidance on behalf of the competent authority to the\n        contrary, the JWT `aud` claim requested by the client must be included\n        in each access token and must contain the fully qualified domain name of\n        the URL the access token will be used to access.  For example, if an ESS\n        were querying the endpoint at\n        https://dss.example.com:8888/rid/v2/dss/identification_service_areas,\n        the access token included in the request should specify `\"aud\":\n        \"dss.example.com\"`.\n\n        Clients must provide these access tokens in an `Authorization` header in\n        the form `Bearer \u003ctoken\u003e` in accordance with RFC 6750.\n  schemas:\n    UUIDv4Format:\n      description: \u003e-\n        String whose format matches a version-4 UUID according to RFC 4122.\n      maxLength: 36\n      minLength: 36\n      type: string\n      format: uuid\n      pattern: \u003e-\n        ^[0-9a-fA-F]{8}\\\\-[0-9a-fA-F]{4}\\\\-4[0-9a-fA-F]{3}\\\\-[8-b][0-9a-fA-F]{3}\\\\-[0-9a-fA-F]{12}$\n      example: 03e5572a-f733-49af-bc14-8a18bd53ee39\n    EntityID:\n      description: \u003e-\n        Identifier for an Entity communicated through the DSS.  Formatted as a\n        UUIDv4.\n      allOf:\n      - $ref: '#/components/schemas/UUIDv4Format'\n      example: 2f8343be-6482-4d1b-a474-16847e01af1e\n    EntityOVN:\n      title: EntityOVN\n      description: \u003e-\n        A token associated with a particular ETM Entity+version created by the\n        DSS upon creation or modification of an Entity reference and provided to\n        the client creating or modifying the Entity reference.  The EntityOVN is\n        stored privately by the DSS and then compared against entries in a Key\n        provided to mutate the airspace.  The EntityOVN is also provided by the\n        client whenever that client transmits the full information of the Entity\n        (either via GET, or via a subscription notification).\n      type: string\n      minLength: 16\n      maxLength: 128\n      example: 9d158f59-80b7-4c11-9c0c-8a2b4d936b2d\n    SubscriptionID:\n      description: \u003e-\n        Identifier for a subscription communicated through the DSS.  Formatted\n        as a UUIDv4.\n      allOf:\n      - $ref: '#/components/schemas/UUIDv4Format'\n      example: 78ea3fe8-71c2-4f5c-9b44-9c02f5563c6f\n    Key:\n      description: \u003e-\n        Proof that a client has obtained the latest airspace content, used to\n        ensure that write operations to the DSS occur only when the latest\n        content is known (i.e. has been read). The client is required to pass a\n        current Key constructed from information obtained with previous read\n        operations and subsequent requests for full information, and optionally,\n        subscription updates for deconflicted write operations to the DSS.  The\n        contents of this data structure are generated by the client.\n      type: array\n      items:\n        $ref: '#/components/schemas/EntityOVN'\n      default: [ ]\n    Time:\n      required:\n      - value\n      - format\n      type: object\n      properties:\n        value:\n          type: string\n          description: \u003e-\n            RFC3339-formatted time/date string.  The time zone must be 'Z'.\n          format: date-time\n          example: '1985-04-12T23:20:50.52Z'\n        format:\n          type: string\n          enum:\n          - RFC3339\n    Radius:\n      required:\n      - value\n      - units\n      type: object\n      properties:\n        value:\n          format: float\n          description: \u003e-\n            Distance from the centerpoint of a circular area, along the WGS84\n            ellipsoid.\n          type: number\n          minimum: 0\n          exclusiveMinimum: true\n          example: 300.183\n        units:\n          type: string\n          description: \u003e-\n            FIXM-compatible units.  Only meters (\"M\") are acceptable for ETM.\n          enum:\n          - M\n    Altitude:\n      type: object\n      required:\n      - value\n      - reference\n      - units\n      properties:\n        value:\n          description: \u003e-\n            The numeric value of the altitude. Note that min and max values are\n            added as a sanity check. As use cases evolve and more options are\n            made available in terms of units of measure or reference systems,\n            these bounds may be re-evaluated.\n          type: number\n          format: double\n          minimum: -8000\n          exclusiveMinimum: false\n          maximum: 100000\n          exclusiveMaximum: false\n        reference:\n          description: \u003e-\n            A code indicating the reference for a vertical distance. See AIXM\n            5.1 and FIXM 4.2.0. Currently, ETM only allows WGS84 with no\n            immediate plans to allow other options. FIXM and AIXM allow for\n            'SFC' which is equivalent to AGL.\n          type: string\n          enum:\n          - W84\n        units:\n          description: \u003e-\n            The reference quantities used to express the value of altitude. See\n            FIXM 4.2. Currently, ETM only allows meters with no immediate plans\n            to allow other options.\n          type: string\n          enum:\n          - M\n    Latitude:\n      description: \u003e-\n        Degrees of latitude north of the equator, with reference to the WGS84\n        ellipsoid.\n      maximum: 90\n      exclusiveMaximum: false\n      minimum: -90\n      exclusiveMinimum: false\n      type: number\n      format: double\n      example: 34.123\n    Longitude:\n      description: \u003e-\n        Degrees of longitude east of the Prime Meridian, with reference to the\n        WGS84 ellipsoid.\n      minimum: -180\n      exclusiveMaximum: false\n      maximum: 180\n      exclusiveMinimum: false\n      type: number\n      format: double\n      example: -118.456\n    Polygon:\n      description: \u003e-\n        An enclosed area on the earth. The bounding edges of this polygon are\n        defined to be the shortest paths between connected vertices.  This\n        means, for instance, that the edge between two points both defined at a\n        particular latitude is not generally contained at that latitude. The\n        winding order must be interpreted as the order which produces the\n        smaller area. The path between two vertices is defined to be the\n        shortest possible path between those vertices. Edges may not cross.\n        Vertices may not be duplicated.  In particular, the final polygon vertex\n        must not be identical to the first vertex.\n      required:\n      - vertices\n      type: object\n      properties:\n        vertices:\n          minItems: 3\n          type: array\n          items:\n            $ref: '#/components/schemas/LatLngPoint'\n    LatLngPoint:\n      description: Point on the earth's surface.\n      required:\n      - lat\n      - lng\n      type: object\n      properties:\n        lng:\n          $ref: '#/components/schemas/Longitude'\n        lat:\n          $ref: '#/components/schemas/Latitude'\n    Circle:\n      description: A circular area on the surface of the earth.\n      type: object\n      properties:\n        center:\n          $ref: '#/components/schemas/LatLngPoint'\n        radius:\n          $ref: '#/components/schemas/Radius'\n    Volume3D:\n      description: \u003e-\n        A three-dimensional geographic volume consisting of a\n        vertically-extruded shape. Exactly one outline must be specified.\n      type: object\n      properties:\n        outline_circle:\n          allOf:\n          - $ref: '#/components/schemas/Circle'\n          description: A circular geographic shape on the surface of the earth.\n        outline_polygon:\n          allOf:\n          - $ref: '#/components/schemas/Polygon'\n          description: \u003e-\n            A polygonal geographic shape on the surface of the earth.\n        altitude_lower:\n          description: \u003e-\n            Minimum bounding altitude of this volume. Must be less than\n            altitude_upper, if specified.\n          allOf:\n          - $ref: '#/components/schemas/Altitude'\n        altitude_upper:\n          description: \u003e-\n            Maximum bounding altitude of this volume. Must be greater than\n            altitude_lower, if specified.\n          allOf:\n          - $ref: '#/components/schemas/Altitude'\n    Volume4D:\n      description: Contiguous block of geographic spacetime.\n      required:\n      - volume\n      type: object\n      properties:\n        volume:\n          $ref: '#/components/schemas/Volume3D'\n        time_start:\n          description: Beginning time of this volume. Must be before time_end.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        time_end:\n          description: End time of this volume. Must be after time_start.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n    ErrorResponse:\n      description: \u003e-\n        Human-readable string returned when an error occurs as a result of an ESS\n        - DSS transaction.\n      type: object\n      properties:\n        message:\n          description: \u003e-\n            Human-readable message indicating what error occurred and/or why.\n          type: string\n          example: The error occurred because [...]\n    SubscriptionState:\n      description: \u003e-\n        State of subscription which is causing a notification to be sent.\n      required:\n      - subscription_id\n      - notification_index\n      type: object\n      properties:\n        subscription_id:\n          $ref: '#/components/schemas/SubscriptionID'\n        notification_index:\n          $ref: '#/components/schemas/SubscriptionNotificationIndex'\n    SubscriberToNotify:\n      description: \u003e-\n        Subscriber to notify of a change in the airspace.  This is provided by\n        the DSS to a client changing the airspace, and it is the responsibility\n        of that client to send a notification to the specified ESS according to\n        the change made to the airspace.\n      required:\n      - subscriptions\n      - ess_base_url\n      type: object\n      properties:\n        subscriptions:\n          description: Subscription(s) prompting this notification.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n          minItems: 1\n        ess_base_url:\n          $ref: '#/components/schemas/SubscriptionEssBaseURL'\n    Subscription:\n      description: \u003e-\n        Specification of a geographic area that a client is interested in on an\n        ongoing basis (e.g., \"planning area\").\n      required:\n      - id\n      - version\n      - notification_index\n      - ess_base_url\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/SubscriptionID'\n        version:\n          description: \u003e-\n            Version of the subscription that the DSS changes every time an ESS\n            changes the subscription.  The DSS incrementing the\n            notification_index does not constitute a change that triggers a new\n            version. An ESS must specify this version when modifying an existing\n            subscription to ensure consistency in read-modify-write operations\n            and distributed systems.\n          type: string\n        notification_index:\n          $ref: '#/components/schemas/SubscriptionNotificationIndex'\n        time_start:\n          description: \u003e-\n            If set, this subscription will not receive notifications involving\n            airspace changes entirely before this time.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        time_end:\n          description: \u003e-\n            If set, this subscription will not receive notifications involving\n            airspace changes entirely after this time.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        ess_base_url:\n          $ref: '#/components/schemas/SubscriptionEssBaseURL'\n        notify_for_operational_intents:\n          description: \u003e-\n            If true, trigger notifications when operational intents are created,\n            updated, or deleted.  Otherwise, changes in operational intents\n            should not trigger notifications.  The scope\n            utm.strategic_coordination is required to set this flag true.\n          type: boolean\n          default: false\n        notify_for_constraints:\n          description: \u003e-\n            If true, trigger notifications when constraints are created,\n            updated, or deleted.  Otherwise, changes in constraints should not\n            trigger notifications.  The scope utm.constraint_processing is\n            required to set this flag true.\n          type: boolean\n          default: false\n        implicit_subscription:\n          description: \u003e-\n            True if this subscription was implicitly created by the DSS via the\n            creation of an operational intent, and should therefore be deleted\n            by the DSS when that operational intent is deleted.\n          type: boolean\n          default: false\n        dependent_operational_intents:\n          description: \u003e-\n            List of IDs for operational intents that are dependent on this\n            subscription.\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityID'\n          default: [ ]\n    SubscriptionNotificationIndex:\n      format: int32\n      description: \u003e-\n        Tracks the notifications sent for a subscription so the subscriber can\n        detect missed notifications more easily.\n      type: integer\n      minimum: 0\n      exclusiveMinimum: false\n      default: 0\n    QuerySubscriptionParameters:\n      description: \u003e-\n        Parameters for a request to find subscriptions matching the provided\n        criteria.\n      type: object\n      properties:\n        area_of_interest:\n          $ref: '#/components/schemas/Volume4D'\n    QuerySubscriptionsResponse:\n      description: \u003e-\n        Response to DSS query for subscriptions in a particular geographic area.\n      required:\n      - subscriptions\n      type: object\n      properties:\n        subscriptions:\n          description: \u003e-\n            Subscriptions that overlap the specified geographic area.\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n          default: [ ]\n    GetSubscriptionResponse:\n      description: \u003e-\n        Response to DSS request for the subscription with the given id.\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n    PutSubscriptionParameters:\n      description: \u003e-\n        Parameters for a request to create/update a subscription in the DSS.  At\n        least one form of notifications must be requested.\n      required:\n      - extents\n      - ess_base_url\n      type: object\n      properties:\n        extents:\n          description: \u003e-\n            Spacetime extents of the volume to subscribe to.\n\n            This subscription will automatically be deleted after its end time\n            if it has not been refreshed by then. If end time is not specified,\n            the value will be chosen automatically by the DSS. If start time is\n            not specified, it will default to the time the request is processed.\n            The end time may not be in the past.\n\n            Note that some Entities triggering notifications may lie entirely\n            outside the requested area.\n          allOf:\n          - $ref: '#/components/schemas/Volume4D'\n        ess_base_url:\n          $ref: '#/components/schemas/SubscriptionEssBaseURL'\n        notify_for_operational_intents:\n          description: \u003e-\n            If true, trigger notifications when operational intents are created,\n            updated, or deleted.  Otherwise, changes in operational intents\n            should not trigger notifications.  The scope\n            utm.strategic_coordination is required to set this flag true.\n          type: boolean\n          default: false\n        notify_for_constraints:\n          description: \u003e-\n            If true, trigger notifications when constraints are created,\n            updated, or deleted.  Otherwise, changes in constraints should not\n            trigger notifications.  The scope utm.constraint_processing is\n            required to set this flag true.\n          type: boolean\n          default: false\n    SubscriptionEssBaseURL:\n      description: \u003e-\n        The base URL of an ESS implementation of the parts of the ESS-ESS API\n        necessary for receiving the notifications requested by this\n        subscription.\n      allOf:\n      - $ref: '#/components/schemas/EssBaseURL'\n    PutSubscriptionResponse:\n      description: Response for a request to create or update a subscription.\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n        operational_intent_references:\n          description: \u003e-\n            Operational intents in or near the subscription area at the time of\n            creation/update, if `notify_for_operational_intents` is true.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationalIntentReference'\n          default: [ ]\n        constraint_references:\n          description: \u003e-\n            Constraints in or near the subscription area at the time of\n            creation/update, if `notify_for_constraints` is true.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintReference'\n          default: [ ]\n    DeleteSubscriptionResponse:\n      description: Response for a successful request to delete a subscription.\n      required:\n      - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n    EssBaseURL:\n      description: \u003e-\n        The base URL of an ESS implementation of part or all of the ESS-ESS API.\n        Per the ESS-ESS API, the full URL of a particular resource can be\n        constructed by appending, e.g., `/ess/v1/{resource}/{id}` to this base\n        URL. Accordingly, this URL may not have a trailing '/' character.\n      type: string\n      example: https://ess.example.com/etm\n    OperationalIntentState:\n      description: \u003e-\n        State of an operational intent.\n\n        'Accepted': Operational intent is created and shared, but not yet in\n        use; see standard text for more details.\n\n        The create or update request for this operational intent reference must\n        include a Key containing all OVNs for all relevant Entities.\n\n        'Activated': Operational intent is in active use; see standard text for\n        more details.\n\n        The create or update request for this operational intent reference must\n        include a Key containing all OVNs for all relevant Entities.\n\n        'Nonconforming': UA is temporarily outside its volumes, but the\n        situation is expected to be recoverable; see standard text for more\n        details.\n\n        In this state, the `/ess/v1/operational_intents/{entityid}/telemetry`\n        ESS-ESS endpoint should respond, if available, to queries from ESS\n        peers.  The create or update request for this operational intent may\n        omit a Key in this case because the operational intent is being adjusted\n        as flown and cannot necessarily deconflict.\n\n        'Contingent': UA is considered unrecoverably unable to conform with its\n        coordinate operational intent; see standard text for more details.\n\n        This state must transition to Ended.  In this state, the\n        `/ess/v1/operational_intents/{entityid}/telemetry` ESS-ESS endpoint\n        should respond, if available, to queries from ESS peers.  The create or\n        update request for this operational intent may omit a Key in this case\n        because the operational intent is being adjusted as flown and cannot\n        necessarily deconflict.\n      type: string\n      enum:\n      - Accepted\n      - Activated\n      - Nonconforming\n      - Contingent\n    OperationalIntentReference:\n      description: \u003e-\n        The high-level information of a planned or active operational intent\n        with the URL of an ESS to query for details.  Note: 'ovn' is returned\n        ONLY to the ESS that created the operational intent but NEVER to other\n        ESS instances.\n      required:\n      - id\n      - manager\n      - ess_availability\n      - version\n      - state\n      - time_start\n      - time_end\n      - ess_base_url\n      - subscription_id\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityID'\n        manager:\n          type: string\n          example: ess1\n          description: \u003e-\n            Created by the DSS based on creating client's ID (via access\n            token).  Used internal to the DSS for restricting mutation and\n            deletion operations to manager.  Used by ESSs to reject operational\n            intent update notifications originating from an ESS that does not\n            manage the operational intent.\n        ess_availability:\n          $ref: '#/components/schemas/EssAvailabilityState'\n        version:\n          type: integer\n          format: int32\n          example: 1\n          description: \u003e-\n            Numeric version of this operational intent which increments upon\n            each change in the operational intent, regardless of whether any\n            field of the operational intent reference changes. An ESS with the\n            details of this operational intent when it was at a particular\n            version does not need to retrieve the details again until the\n            version changes.\n        state:\n          $ref: '#/components/schemas/OperationalIntentState'\n        ovn:\n          description: \u003e-\n            Opaque version number of this operational intent.  Populated only\n            when the OperationalIntentReference is managed by the ESS retrieving\n            or providing it.  Not populated when the OperationalIntentReference\n            is not managed by the ESS retrieving or providing it (instead, the\n            ESS must obtain the OVN from the details retrieved from the managing\n            ESS).\n          allOf:\n          - $ref: '#/components/schemas/EntityOVN'\n        time_start:\n          description: Beginning time of operational intent.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        time_end:\n          description: End time of operational intent.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        ess_base_url:\n          $ref: '#/components/schemas/OperationalIntentEssBaseURL'\n        subscription_id:\n          description: \u003e-\n            The ID of the subscription that is ensuring the operational intent\n            manager receives relevant airspace updates.\n          allOf:\n          - $ref: '#/components/schemas/SubscriptionID'\n    OperationalIntentEssBaseURL:\n      description: \u003e-\n        The base URL of an ESS implementation that implements the parts of the\n        ESS-ESS API necessary for providing the details of this operational\n        intent, and telemetry during non-conformance or contingency, if\n        applicable.\n      allOf:\n      - $ref: '#/components/schemas/EssBaseURL'\n    PutOperationalIntentReferenceParameters:\n      description: \u003e-\n        Parameters for a request to create an OperationalIntentReference in the\n        DSS. A subscription to changes overlapping this volume may be implicitly\n        created, but this can be overridden by providing the (optional)\n        'subscription_id' to use. Note: The implicit subscription is managed by\n        the DSS, not the ESS.\n      required:\n      - extents\n      - state\n      - ess_base_url\n      type: object\n      properties:\n        extents:\n          description: \u003e-\n            Spacetime extents that bound this operational intent.\n\n            Start and end times, as well as lower and upper altitudes, are\n            required for each volume. The end time may not be in the past. All\n            volumes, both nominal and off-nominal, must be encompassed in these\n            extents. However, these extents do not need to match the precise\n            volumes of the operational intent; a single bounding extent may be\n            provided instead, for instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n          minItems: 1\n        key:\n          description: \u003e-\n            Proof that the ESS creating or mutating this operational intent was\n            aware of the current state of the airspace, with the expectation\n            that this operational intent is therefore deconflicted from all\n            relevant features in the airspace.  This field is not required when\n            declaring an operational intent Nonconforming or Contingent, or when\n            there are no relevant Entities in the airspace, but is otherwise\n            required. OVNs for constraints are required if and only if the ESS\n            managing this operational intent is performing the constraint\n            processing role, which is indicated by whether the subscription\n            associated with this operational intent triggers notifications for\n            constraints.  The key does not need to contain the OVN for the\n            operational intent being updated.\n          allOf:\n          - $ref: '#/components/schemas/Key'\n        state:\n          $ref: '#/components/schemas/OperationalIntentState'\n        ess_base_url:\n          $ref: '#/components/schemas/OperationalIntentEssBaseURL'\n        subscription_id:\n          description: \u003e-\n            The ID of an existing subscription that the ESS will use to keep the\n            operator informed about updates to relevant airspace information. If\n            this field is not provided when the operational intent is in the\n            Activated, Nonconforming, or Contingent state, then the\n            `new_subscription` field must be provided in order to provide\n            notification capability for the operational intent.  The\n            subscription specified by this ID must cover at least the area over\n            which this operational intent is conducted, and it must provide\n            notifications for operational intents.\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        new_subscription:\n          description: \u003e-\n            If an existing subscription is not specified in `subscription_id`,\n            and the operational intent is in the Activated, Nonconforming, or\n            Contingent state, then this field must be populated.  When this\n            field is populated, an implicit subscription will be created and\n            associated with this operational intent, and will generally be\n            deleted automatically upon the deletion of this operational intent.\n          allOf:\n          - $ref: '#/components/schemas/ImplicitSubscriptionParameters'\n    ImplicitSubscriptionParameters:\n      description: \u003e-\n        Information necessary to create a subscription to serve a single\n        operational intent's notification needs.\n      type: object\n      required:\n      - ess_base_url\n      properties:\n        ess_base_url:\n          description: \u003e-\n            The base URL of an ESS implementation of the parts of the ESS-ESS API\n            necessary for receiving the notifications that the operational\n            intent must be aware of.  This includes, at least, notifications for\n            relevant changes in operational intents.\n          allOf:\n          - $ref: '#/components/schemas/SubscriptionEssBaseURL'\n        notify_for_constraints:\n          description: \u003e-\n            True if this operational intent's subscription should trigger\n            notifications when constraints change. Otherwise, changes in\n            constraints should not trigger notifications.  The scope\n            utm.constraint_processing is required to set this flag true, and a\n            ESS performing the constraint processing role should set this flag\n            true.\n          type: boolean\n          default: false\n    GetOperationalIntentReferenceResponse:\n      description: \u003e-\n        Response to DSS request for the OperationalIntentReference with the\n        given ID.\n      required:\n      - operational_intent_reference\n      type: object\n      properties:\n        operational_intent_reference:\n          $ref: '#/components/schemas/OperationalIntentReference'\n    ChangeOperationalIntentReferenceResponse:\n      description: \u003e-\n        Response to a request to create, update, or delete an\n        OperationalIntentReference in the DSS.\n      required:\n      - subscribers\n      - operational_intent_reference\n      type: object\n      properties:\n        subscribers:\n          description: \u003e-\n            DSS subscribers that this client now has the obligation to notify of\n            the operational intent changes just made.  This client must call\n            POST for each provided URL according to the ESS-ESS\n            `/ess/v1/operational_intents` path API.  The client's own\n            subscriptions will also be included in this list.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriberToNotify'\n          default: [ ]\n        operational_intent_reference:\n          $ref: '#/components/schemas/OperationalIntentReference'\n    QueryOperationalIntentReferenceParameters:\n      description: \u003e-\n        Parameters for a request to find OperationalIntentReferences matching\n        the provided criteria.\n      type: object\n      properties:\n        area_of_interest:\n          $ref: '#/components/schemas/Volume4D'\n    QueryOperationalIntentReferenceResponse:\n      description: \u003e-\n        Response to DSS query for OperationalIntentReferences in an area of\n        interest.\n      required:\n      - operational_intent_references\n      type: object\n      properties:\n        operational_intent_references:\n          description: OperationalIntentReferences in the area of interest.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationalIntentReference'\n          default: [ ]\n    ConstraintReference:\n      description: \u003e-\n        A ConstraintReference (area in which a constraint is present, along with\n        other high-level information, but no details).  The DSS reports only\n        these references and clients must exchange details and additional\n        information peer-to-peer.\n      required:\n      - id\n      - manager\n      - ess_availability\n      - version\n      - time_start\n      - time_end\n      - ess_base_url\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityID'\n        manager:\n          type: string\n          example: ess1\n          description: \u003e-\n            Created by the DSS based on creating client's ID (via access\n            token).  Used internal to the DSS for restricting mutation and\n            deletion operations to manager.  Used by ESSs to reject constraint\n            update notifications originating from an ESS that does not manage the\n            constraint.\n        ess_availability:\n          $ref: '#/components/schemas/EssAvailabilityState'\n        version:\n          type: integer\n          format: int32\n          example: 1\n          description: \u003e-\n            Numeric version of this constraint which increments upon each change\n            in the constraint, regardless of whether any field of the constraint\n            reference changes. An ESS with the details of this constraint when\n            it was at a particular version does not need to retrieve the details\n            again until the version changes.\n        ovn:\n          description: \u003e-\n            Opaque version number of this constraint.  Populated only when the\n            ConstraintReference is managed by the ESS retrieving or providing\n            it.  Not populated when the ConstraintReference is not managed by\n            the ESS retrieving or providing it (instead, the ESS must obtain the\n            OVN from the details retrieved from the managing ESS).\n          allOf:\n          - $ref: '#/components/schemas/EntityOVN'\n        time_start:\n          $ref: '#/components/schemas/Time'\n        time_end:\n          $ref: '#/components/schemas/Time'\n        ess_base_url:\n          $ref: '#/components/schemas/ConstraintEssBaseURL'\n    ConstraintEssBaseURL:\n      description: \u003e-\n        The base URL of an ESS implementation that implements the parts of the\n        ESS-ESS API necessary for providing the details of this constraint.\n      allOf:\n      - $ref: '#/components/schemas/EssBaseURL'\n    PutConstraintReferenceParameters:\n      description: \u003e-\n        Parameters for a request to create/update a ConstraintReference in the\n        DSS.\n      required:\n      - extents\n      - ess_base_url\n      type: object\n      properties:\n        extents:\n          description: \u003e-\n            Spacetime extents that bound this constraint.\n\n            The end time may not be in the past.\n\n            All volumes of the constraint must be encompassed in these extents.\n            However, these extents do not need to match the precise volumes of\n            the constraint; a single bounding extent may be provided instead,\n            for instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n          minItems: 1\n        ess_base_url:\n          $ref: '#/components/schemas/ConstraintEssBaseURL'\n    GetConstraintReferenceResponse:\n      description: \u003e-\n        Response to DSS request for the ConstraintReference with the given ID.\n      required:\n      - constraint_reference\n      type: object\n      properties:\n        constraint_reference:\n          $ref: '#/components/schemas/ConstraintReference'\n    ChangeConstraintReferenceResponse:\n      description: \u003e-\n        Response to a request to create, update, or delete a\n        ConstraintReference. in the DSS.\n      required:\n      - subscribers\n      - constraint_reference\n      type: object\n      properties:\n        subscribers:\n          description: \u003e-\n            DSS subscribers that this client now has the obligation to notify of\n            the constraint changes just made.  This client must call POST for\n            each provided URL according to the ESS-ESS `/ess/v1/constraints`\n            path API.  The client's own subscriptions will also be included in\n            this list.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriberToNotify'\n          default: [ ]\n        constraint_reference:\n          $ref: '#/components/schemas/ConstraintReference'\n    QueryConstraintReferenceParameters:\n      description: \u003e-\n        Parameters for a request to find ConstraintReferences matching the\n        provided criteria.\n      type: object\n      properties:\n        area_of_interest:\n          $ref: '#/components/schemas/Volume4D'\n    QueryConstraintReferencesResponse:\n      description: \u003e-\n        Response to DSS query for ConstraintReferences in an area of interest.\n      required:\n      - constraint_references\n      type: object\n      properties:\n        constraint_references:\n          description: ConstraintReferences in the area of interest.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintReference'\n          default: [ ]\n    AirspaceConflictResponse:\n      description: Data provided when an airspace conflict was encountered.\n      type: object\n      properties:\n        message:\n          description: \u003e-\n            Human-readable message indicating what error occurred and/or why.\n          type: string\n        missing_operational_intents:\n          description: \u003e-\n            List of operational intent references for which current proof of\n            knowledge was not provided.  If this field is present and contains\n            elements, the calling ESS should query the details URLs for these\n            operational intents to obtain their details and correct OVNs.  The\n            OVNs can be used to update the key, at which point the ESS may retry\n            this call.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationalIntentReference'\n          default: [ ]\n        missing_constraints:\n          description: \u003e-\n            List of constraint references for which current proof of knowledge\n            was not provided.  If this field is present and contains elements,\n            the calling ESS should query the details URLs for these constraints\n            to obtain their details and correct OVNs.  The OVNs can be used to\n            update the key, at which point the ESS may retry this call.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintReference'\n          default: [ ]\n\n    #\n    # ESS-ESS schema components\n    #\n    OperationalIntentDetails:\n      description: \u003e-\n        Details of a ETM operational intent. Note that this data is not stored\n        in the DSS; only with the clients.\n      type: object\n      properties:\n        volumes:\n          description: \u003e-\n            Volumes that wholly contain the operational intent while being within\n            an externally defined convention for maximum size. Once this size is\n            reached the confidence value for the OperationalIntentVolume4D should\n            decrease rather than the volume size increasing.\n\n            Start and end times, as well as lower and upper altitudes, are\n            required for each volume. The end time may not be in the past.\n\n            Required with at least one item when the operational intent is\n            Accepted, Activated, or Nonconforming.\n\n            May not contain any items when the operational intent is Contingent.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationalIntentVolume4D'\n          default: [ ]\n        off_nominal_volumes:\n          description: \u003e-\n            Volumes that contain the anticipated area of non-conformance while\n            the aircraft is in the Nonconforming or Contingent states.\n\n            Start and end times, as well as lower and upper altitudes, are\n            required for each volume. The end time may not be in the past.\n\n            Required with at least one item when the operational intent is\n            Nonconforming or Contingent.\n\n            May not contain any items when the operational intent is Accepted or\n            Activated.\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n          default: [ ]\n        priority:\n          $ref: '#/components/schemas/Priority'\n        operational_profile_details:\n          $ref: '#/components/schemas/OperationalProfileDetails'\n    Priority:\n      description: \u003e-\n        Ordinal priority of the operational intent, as defined by the\n        regulator.  Operational intents with lesser values are lower priority\n        than all operational intents with greater values.  A lower-priority\n        operational intent may not create a conflict with a higher-priority\n        operational intent.  A higher-priority operational intent may create a\n        conflict with a lower-priority operational intent.  The regulator\n        specifies whether an operational intent may create a conflict with other\n        operational intents of the same priority.\n      type: integer\n      default: 0\n    OperationalIntent:\n      description: Full description of a ETM operational intent.\n      required:\n      - reference\n      - details\n      type: object\n      properties:\n        reference:\n          $ref: '#/components/schemas/OperationalIntentReference'\n        details:\n          $ref: '#/components/schemas/OperationalIntentDetails'\n    PutOperationalIntentDetailsParameters:\n      description: \u003e-\n        Parameters of a message informing of detailed information for a peer\n        operational intent. Pushed (by a client, not the DSS) directly to\n        clients with subscriptions when another client makes a change to\n        airspace within a cell with a subscription.\n      required:\n      - operational_intent_id\n      - subscriptions\n      type: object\n      properties:\n        operational_intent_id:\n          description: ID of operational intent that has changed.\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        operational_intent:\n          description: \u003e-\n            Full information about the operational intent that has changed.  If\n            this field is omitted, the operational intent was deleted.  The\n            `ovn` field in the nested `reference` must be populated.\n          allOf:\n          - $ref: '#/components/schemas/OperationalIntent'\n        subscriptions:\n          type: array\n          description: Subscription(s) prompting this notification.\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n          minItems: 1\n    GetOperationalIntentDetailsResponse:\n      description: \u003e-\n        Response to peer request for the details of operational intent with the\n        given ID.\n      required:\n      - operational_intent\n      type: object\n      properties:\n        operational_intent:\n          $ref: '#/components/schemas/OperationalIntent'\n    ConstraintDetails:\n      description: \u003e-\n        Details of a ETM constraint. Note that this data is not stored in the\n        DSS; only with the clients.\n      required:\n      - volumes\n      type: object\n      properties:\n        volumes:\n          description: \u003e-\n            Volumes that wholly contain the constraint while being as small as\n            practical.\n\n            The end time may not be in the past.\n          minItems: 1\n          type: array\n          items:\n            $ref: '#/components/schemas/Volume4D'\n        type:\n          description: Type of airspace feature this constraint represents.\n          type: string\n          example: com.example.non_etm_aircraft_operations\n        geozone:\n          description: \u003e-\n            If this constraint is an ED-269 compliant geo zone, the details\n            about that geo zone.\n          allOf:\n          - $ref: '#/components/schemas/GeoZone'\n    Constraint:\n      description: Full specification of a ETM constraint.\n      required:\n      - reference\n      - details\n      type: object\n      properties:\n        reference:\n          $ref: '#/components/schemas/ConstraintReference'\n        details:\n          $ref: '#/components/schemas/ConstraintDetails'\n    PutConstraintDetailsParameters:\n      description: \u003e-\n        Parameters of a message informing of new full information for a\n        constraint.  Pushed (by a client, not the DSS) directly to clients with\n        subscriptions when another client makes a change to airspace within a\n        cell with a subscription.\n      required:\n      - constraint_id\n      - subscriptions\n      type: object\n      properties:\n        constraint_id:\n          description: ID of constraint that has changed.\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        constraint:\n          description: \u003e-\n            Full information about the constraint that has changed.  If this\n            field is omitted, the constraint was deleted.  The `ovn` field in\n            the nested `reference` must be populated.\n          allOf:\n          - $ref: '#/components/schemas/Constraint'\n        subscriptions:\n          description: Subscription(s) prompting this notification.\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionState'\n          minItems: 1\n    GetConstraintDetailsResponse:\n      description: \u003e-\n        Response to peer request for the details of operational intent with the\n        given ID.\n      required:\n      - constraint\n      type: object\n      properties:\n        constraint:\n          $ref: '#/components/schemas/Constraint'\n    GetOperationalIntentTelemetryResponse:\n      description: \u003e-\n        Response to a peer request for telemetry of an off-nominal operational\n        intent.\n      required:\n      - operational_intent_id\n      type: object\n      properties:\n        operational_intent_id:\n          description: \u003e-\n            ID of the operational intent which the vehicle reporting telemetry\n            is flying.\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        telemetry:\n          $ref: '#/components/schemas/VehicleTelemetry'\n        next_telemetry_opportunity:\n          description: \u003e-\n            The next telemetry similar to this telemetry is not expected to be\n            available until at or after this time, so the polling ESS should\n            generally not poll the endpoint providing this response data again\n            until at or after that time.  If this field is omitted, then there\n            is no current expectation of new telemetry becoming available.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n    VehicleTelemetry:\n      description: Vehicle position, altitude, and velocity.\n      required:\n      - time_measured\n      type: object\n      properties:\n        time_measured:\n          $ref: '#/components/schemas/Time'\n        position:\n          $ref: '#/components/schemas/Position'\n        velocity:\n          $ref: '#/components/schemas/Velocity'\n    PositionAccuracyVertical:\n      description: \u003e-\n        Vertical error that is likely to be present in this reported position.\n        This is the GVA enumeration from ADS-B, plus some finer values for UAS.\n      type: string\n      enum:\n      - VAUnknown\n      - VA150mPlus\n      - VA150m\n      - VA45m\n      - VA25m\n      - VA10m\n      - VA3m\n      - VA1m\n    PositionAccuracyHorizontal:\n      description: \u003e-\n        Horizontal error that is likely to be present in this reported position.\n        This is the NACp enumeration from ADS-B, plus 1m for a more complete\n        range for UAS.\n      type: string\n      enum:\n      - HAUnknown\n      - HA10NMPlus\n      - HA10NM\n      - HA4NM\n      - HA2NM\n      - HA1NM\n      - HA05NM\n      - HA03NM\n      - HA01NM\n      - HA005NM\n      - HA30m\n      - HA10m\n      - HA3m\n      - HA1m\n    Position:\n      description: \u003e-\n        Location of the vehicle (UAS) as reported for ETM. Note: 'accuracy'\n        values are required when extrapolated field is true.\n      type: object\n      properties:\n        longitude:\n          $ref: '#/components/schemas/Longitude'\n        latitude:\n          $ref: '#/components/schemas/Latitude'\n        accuracy_h:\n          $ref: '#/components/schemas/PositionAccuracyHorizontal'\n        accuracy_v:\n          $ref: '#/components/schemas/PositionAccuracyVertical'\n        extrapolated:\n          description: \u003e-\n            True if this position was generated primarily by computation rather\n            than primarily from a direct instrument measurement.\n          type: boolean\n          default: false\n        altitude:\n          $ref: '#/components/schemas/Altitude'\n    Velocity:\n      required:\n      - speed\n      - units_speed\n      type: object\n      properties:\n        speed:\n          format: float\n          type: number\n          description: Ground speed in meters/second.\n          example: 200.1\n        units_speed:\n          type: string\n          enum:\n          - MetersPerSecond\n        track:\n          format: float\n          type: number\n          description: \u003e-\n            Direction of flight expressed as a \"True North-based\" ground track\n            angle. This value is provided in degrees East of North with a\n            minimum resolution of 1 degree. A value of 360 indicates invalid, no\n            value, or unknown.\n          example: 120\n          default: 0\n    EssAvailabilityStatus:\n      type: object\n      required:\n      - ess\n      - availability\n      properties:\n        ess:\n          type: string\n          description: \u003e-\n            Client ID (matching their `sub` in access tokens) of the ESS to\n            which this availability applies.\n        availability:\n          $ref: '#/components/schemas/EssAvailabilityState'\n    EssAvailabilityState:\n      type: string\n      enum:\n      - Unknown\n      - Normal\n      - Down\n      description: \u003e-\n        An ESS is presumed to be in the Unknown state absent indication otherwise\n        by an ESS with availability arbitration scope.  Upon determination via\n        availability arbitration, an ESS is Down when it does not respond\n        appropriately, and a Down ESS may not perform the following operations\n        in the DSS:\n\n        * Create an operational intent in the Accepted or Activated states\n\n        * Modify an operational intent whose new or unchanged state is Accepted\n        or Activated\n\n        * Delete an operational intent\n\n        An ESS in the Unknown state possesses all the capabilities, within the\n        DSS, of an ESS in the Normal state.\n    SetEssAvailabilityStatusParameters:\n      type: object\n      required:\n      - old_version\n      - availability\n      properties:\n        old_version:\n          type: string\n          default: ''\n          description: \u003e-\n            Version of ESS's availability to change, for consistent\n            read-modify-write operations and consistent retry behavior.\n        availability:\n          $ref: '#/components/schemas/EssAvailabilityState'\n    EssAvailabilityStatusResponse:\n      type: object\n      required:\n      - status\n      - version\n      properties:\n        version:\n          type: string\n          description: \u003e-\n            Current version of ESS's availability.  Used to change ESS's\n            availability.\n        status:\n          $ref: '#/components/schemas/EssAvailabilityStatus'\n\n    #\n    # Data structures for logging\n    #\n    ESSLogSet:\n      type: object\n      description: \u003e-\n        The set of log data fulfilling this standard's Logging requirements.\n      properties:\n        messages:\n          description: \u003e-\n            Outgoing messages sent to other ESSs and the DSS, and incoming\n            messages received from other ESSs, including instances where an\n            expected response to a request is not received.\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeRecord'\n          default: [ ]\n        operator_notifications:\n          description: \u003e-\n            Instances of operator notifications as specifically required within\n            this standard.\n          type: array\n          items:\n            $ref: '#/components/schemas/UserNotificationRecord'\n          default: [ ]\n        operator_inputs:\n          description: \u003e-\n            Instances of operator input as specifically required within this\n            standard.\n          type: array\n          items:\n            $ref: '#/components/schemas/UserInputRecord'\n          default: [ ]\n        operator_associations:\n          description: \u003e-\n            For an ESS that manages operational intents, associations of an\n            operator with operational intents that transitioned to the Accepted\n            state.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperatorAssociation'\n          default: [ ]\n        planning_attempts:\n          description: \u003e-\n            For an ESS that manages operational intents, instances where an\n            operational intent could not be planned or replanned due to\n            conflicts with other operational intents or constraints.\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanningRecord'\n          default: [ ]\n        operational_intent_positions:\n          description: \u003e-\n            For an ESS performing conformance monitoring, all position data used\n            for conformance monitoring that is ingested from the UA.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationalIntentPositions'\n          default: [ ]\n        constraint_provider_associations:\n          description: \u003e-\n            For an ESS that performs constraint management, associations of an\n            authorized constraint provider with all constraints that transition\n            to the valid state.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstraintProviderAssociation'\n          default: [ ]\n    ExchangeRecord:\n      type: object\n      description: Details of a request/response data exchange.\n      required:\n      - url\n      - method\n      - recorder_role\n      - request_time\n      - request_source\n      properties:\n        url:\n          type: string\n          description: Full URL of request.\n        method:\n          type: string\n          description: HTTP verb used by requestor (e.g., \"PUT,\" \"GET,\" etc.)\n        headers:\n          description: \u003e-\n            Set of headers associated with request or response. Requires\n            'Authorization:' field (at a minimum)\n          type: array\n          items:\n            type: string\n          default: [ ]\n        recorder_role:\n          type: string\n          description: \u003e-\n            A coded value that indicates the role of the logging ESS: 'Client'\n            (initiating a request to a remote ESS) or 'Server' (handling a\n            request from a remote ESS)\n          enum:\n          - Client\n          - Server\n        request_time:\n          description: The time at which the request was sent/received.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        request_body:\n          description: Base64-encoded body content sent/received as a request.\n          type: string\n          default: ''\n        response_time:\n          description: The time at which the response was sent/received.\n          allOf:\n          - $ref: '#/components/schemas/Time'\n        response_body:\n          type: string\n          default: ''\n          description: \u003e-\n            Base64-encoded body content sent/received in response to request.\n        response_code:\n          type: integer\n          format: int32\n          default: 0\n          description: HTTP response code sent/received in response to request.\n        problem:\n          type: string\n          description: \u003e-\n            'Human-readable description of the problem with the exchange, if any.'\n    ErrorReport:\n      type: object\n      description: A report informing a server of a communication problem.\n      required:\n      - exchange\n      properties:\n        report_id:\n          type: string\n          maxLength: 128\n          description: \u003e-\n            ID assigned by the server receiving the report.  Not populated when\n            submitting a report.\n        exchange:\n          allOf:\n          - $ref: '#/components/schemas/ExchangeRecord'\n          description: \u003e-\n            The request (by this ESS) and response associated with the error.\n    PositionRecord:\n      type: object\n      description: \u003e-\n        A record of vehicle telemetry information received by this ESS\n        (typically for conformance monitoring).\n      required:\n      - time_received\n      - telemetry\n      properties:\n        time_received:\n          allOf:\n          - $ref: '#/components/schemas/Time'\n          description: Time that this position data was received by the ESS\n        telemetry:\n          $ref: '#/components/schemas/VehicleTelemetry'\n    OperationalIntentPositions:\n      type: object\n      description: \u003e-\n        A record of position data gathered through the course of an operational\n        intent\n      required:\n      - operational_intent_id\n      properties:\n        positions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PositionRecord'\n          default: [ ]\n        operational_intent_id:\n          description: ID of the operational intent associated with `positions`\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n    PlanningRecord:\n      type: object\n      description: \u003e-\n        A record of a single attempt to (successfully or unsuccessfully) create\n        or modify an operational intent.\n      required:\n      - time\n      - ovns\n      properties:\n        time:\n          allOf:\n          - $ref: '#/components/schemas/Time'\n          description: Time that this planning event occurred\n        ovns:\n          description: \u003e-\n            OVNs the planning ESS was aware of when it was planning the\n            operational intent\n          type: array\n          default: [ ]\n          items:\n            $ref: '#/components/schemas/EntityOVN'\n        missing_operational_intents:\n          description: \u003e-\n            List of missing operational intents (for planning attempts that were\n            denied by the DSS with code 409)\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityID'\n          default: [ ]\n        missing_constraints:\n          description: \u003e-\n            List of missing constraints (for planning attempts that were denied\n            by the DSS with code 409)\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityID'\n          default: [ ]\n        operational_intent_id:\n          description: ID of the operational intent being planned\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        problem:\n          type: string\n          description: \u003e-\n            A free text description of the problem(s) encountered during this\n            planning attempt.\n    UserNotificationRecord:\n      type: object\n      description: User notification record.\n      required:\n      - triggering_event_time\n      - notification_time\n      - notification_triggering_event\n      properties:\n        triggering_event_time:\n          allOf:\n          - $ref: '#/components/schemas/Time'\n          description: Time of the notification triggering event\n        notification_time:\n          allOf:\n          - $ref: '#/components/schemas/Time'\n          description: Time at which the user was notified\n        notification_details:\n          type: string\n          description: \u003e-\n            Description of information that was provided to the user, as per the\n            referenced notification_triggering_event requirement\n        notification_triggering_event:\n          type: string\n          description: Requirement ID that pertains to the given notification\n          enum:\n          - GEN0400\n          - GEN0405\n          - SCD0090\n          - SCD0095\n          - ACM0010\n          - CMSA0115\n          - CMSA0300\n          - CSTP0005\n          - CSTP0010\n          - CSTP0020\n          - CSTP0025\n          - CSTP0030\n          - CSTO0035\n    UserInputRecord:\n      type: object\n      description: User input record\n      required:\n      - triggering_event_time\n      - operational_intent_id\n      - input_triggering_event\n      properties:\n        triggering_event_time:\n          allOf:\n          - $ref: '#/components/schemas/Time'\n          description: Time in which user input was received by the ESS\n        operational_intent_id:\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n          description: \u003e-\n            ID of the operational_intent ID pertaining to the user input\n        input_triggering_event:\n          type: string\n          description: Requirement ID that pertains to the given notification\n          enum:\n          - OPIN0040\n          - CMSA0010\n          - CMSA0025\n          - CMSA0100\n          - CMSA0105\n          - CMSA0110\n          - CMSA0200\n          - CMSA0205\n          - CMSA0210\n          - CMSA0215\n        input_details:\n          type: string\n          description: \u003e-\n            Description of the information that was provided by the user, as per\n            the referenced input_triggering_event requirement\n    OperatorAssociation:\n      type: object\n      description: \u003e-\n        Association between an operational intent and the operator of that\n        operational intent\n      required:\n      - operational_intent_id\n      - operator_id\n      properties:\n        operational_intent_id:\n          description: \u003e-\n            ID of operational intent to which this association pertains\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        operator_id:\n          description: \u003e-\n            Unique identifier of the operator responsible for the operational\n            intent\n          type: string\n    ConstraintProviderAssociation:\n      type: object\n      description: \u003e-\n        Association between a constraint and the constraint provider responsible\n        for that constraint\n      required:\n      - constraint_id\n      - constraint_provider_id\n      properties:\n        constraint_id:\n          description: ID of constraint to which this association pertains\n          allOf:\n          - $ref: '#/components/schemas/EntityID'\n        constraint_provider_id:\n          description: \u003e-\n            Unique identifier of the constraint provider responsible for the\n            constraint\n          type: string\n\n    #\n    # ED-269 compliant GeoZone representation\n    #\n    GeoZone:\n      type: object\n      description: \u003e-\n        An airspace of defined dimensions, above the land areas or territorial\n        waters of a State, within which a particular restriction or condition\n        for UAS flights applies.\n      required:\n      - identifier\n      - country\n      - type\n      - restriction\n      - zone_authority\n      properties:\n        identifier:\n          allOf:\n          - $ref: '#/components/schemas/CodeZoneIdentifierType'\n          description: \u003e-\n            A string of characters that uniquely identifies the UAS Zone within\n            the State/Territory identified by the country attribute.\n\n            Note - The UAS Zone is uniquely identified worldwide by the\n            combination of the country and the identifier attributes\n        country:\n          allOf:\n          - $ref: '#/components/schemas/CodeCountryISOType'\n          description: \u003e-\n            The State that has the authority to declare the zone.\n\n            Note - There will be no Zone belonging to two States. Not necessary\n            to code the information that two zones are \"in neighboring States\"\n            or \"related\".\n        zone_authority:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Authority'\n        name:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            A free text name by which the zone may be known by the public or by\n            the UAS community.\n        type:\n          allOf:\n          - $ref: '#/components/schemas/CodeZoneType'\n          description: \u003e-\n            An indication whether the Zone is provided with its common\n            definition or with a customised definition, for a particular user.\n        restriction:\n          allOf:\n          - $ref: '#/components/schemas/CodeRestrictionType'\n          description: \u003e-\n            An indication if flying in the zone is conditional, forbidden or\n            unrestricted.\n        restriction_conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ConditionExpressionType'\n          description: \u003e-\n            An indication of the conditions under which the zone can be used\n        region:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 65535\n          description: \u003e-\n            Where applicable, identifies a region inside a State where the UAS\n            Zone is located.\n\n            Note 1) identified with a digit between 0-65535 (16 bit),\n            corresponding to a list of regions pre-defined for each State.\n\n            Note 2) this attribute is intended to facilitate extracting sub-sets\n            of data, for specific regions\n        reason:\n          items:\n            $ref: '#/components/schemas/CodeZoneReasonType'\n          description: \u003e-\n            A coded indication for the reason that led to the establishment of\n            the zone.\n          maxItems: 9\n          type: array\n        other_reason_info:\n          type: string\n          maxLength: 30\n          description: \u003e-\n            A free text description of the reason that led to the establishment\n            of the zone, when not covered by a pre-defined coded value.\n        regulation_exemption:\n          allOf:\n          - $ref: '#/components/schemas/CodeYesNoType'\n          description: \u003e-\n            This is an extension point. It allows adding additional attributes\n            of national interest through this element.\n        u_space_class:\n          allOf:\n          - $ref: '#/components/schemas/CodeUSpaceClassType'\n          description: \u003e-\n            A code that identifies the category or class of the zone applying a\n            \"USpace concept\".\n\n            Note: Two (draft) classifications exist, one from Eurocontrol and\n            one from CORUS. Therefore, two instances of this attribute are\n            expected, one from each sub-list. This might be later replaced with\n            separate attributes and separate lists of values.\n        message:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            A message to be displayed to the user of the zone, typically on the\n            RPS for the Remote Pilot, to make him/her aware about specific\n            information associated with the zone (typically when it is not only\n            a restriction to fly in the zone, thus not only an alert or an\n            automatic limitation, for example : \"image capture prohibited in\n            this zone\", \"frequent strong winds in this zone\", \"no landing or\n            take-off in this zone\"). This message is also used to indicate\n            exemptions from regulation in a zone (see below). Several\n            information can be grouped in a message, separated by a \"/\".\n        additional_properties:\n          type: object\n          description: \u003e-\n            Indicates that exemptions from the national or European regulations\n            are allowed in the UAS Zone, that will be detailed via the \"message\"\n            property.\n    CodeZoneIdentifierType:\n      type: string\n      maxLength: 7\n      description: \u003e-\n        a string of maximum 7 characters that uniquely identifies the area\n        within a geographical scope.\n\n        NOTE (1): This shall not include the country identifier, which is a\n        separate attribute of the UAS Zone.\n\n        NOTE (2): The length of this data type is limited to 7 characters for\n        compatibility with ARINC 424 and AIXM, where an airspace designator may\n        have maximum 10 characters. The 10 characters are the result of\n        concatenating the UAS Zone attributes for country and identifier.\n    CodeCountryISOType:\n      type: string\n      minLength: 3\n      maxLength: 3\n      description: \u003e-\n        A 3 letter identifier of a country or territory using the ISO 3166-1\n        alpha-3 standard.\n\n        NOTE: \u003e-\n           The ISO 3-letter country codes come with the following advantages:\n              - allow to distinguish between remote territories and mainland\n              - are unique, unlike the ICAO Country codes where the same State\n                could have two or more codes\n              - are also used in military standards, such as NATO STANAG 1059\n                INT, which come with well document additions that might be also\n                useful for UAS areas.\n    CodeZoneType:\n      type: string\n      description: \u003e-\n        A coded list of values which allows indicating that the definition of a\n        UAS Zone is specifically customised for a particular UAS or operator.\n      enum:\n      - COMMON\n      - CUSTOMIZED\n      - PROHIBITED\n      - REQ_AUTHORISATION\n      - CONDITIONAL\n      - NO_RESTRICTION\n    ConditionExpressionType:\n      type: string\n      maxLength: 10000\n      description: \u003e-\n        A coded expression that provides information about what is authorised /\n        forbidden in a zone that has conditional access.\n\n        By difference with the \"Message\" field per zone, this coded expression\n        is made to be interopreted by the UAS while the \"Message\" is to\n        interpreted by the remote pilot.\n\n        NOTE: the maximum field length is 10 000 characters.\n\n        ---------------------- Condition definition language ----------------\n        * A list of relevant characteristics (CHARTYPE) has first to be\n        established per state, and their finite list of acceptable values\n        (CHARVAL)\n\n        * Each chartype and charval fields are defined by a limited set of\n        characters\n\n        * A public document shall give the definitions of each, and provide the\n        reference to legal or technical characteristics implied\n\n        * The Geozone editor per state can use these characteristics, with the\n        dedicated condition language defined below, to define exact conditions\n        per zone\n\n        * Each UAS Geofencing function shall be loaded with the corresponding\n        chararacteristic status of the UAS for the intended flight, so as to be\n        able to apply the conditions , either to generate alerts or to limit the\n        flight\n\n        * If the value of a given characteristic of the condition equation is\n        not defined in the UAS, the UAS Geofencing function should inform the\n        pilot in Geoawareness alerting or consider that the zone is forbidden,\n        by default in automatic Geofencing.\n\n        A conditional expression shall be of the following type:\n\n        * The UAS is PERMITTED XOR PROHIBITED (exclusive choice) to fly in this\n        zone at this time IF (Characteristic1) CHARTYPE1 = (Value1) CHARVAL1 AND\n\n        CHARTYPE 2 = CHARVAL 2 AND ... AND End IF\n\n        OR (...)\n\n        ...\n\n        End OR\n\n        * Only the fields in bold need to be edited in the character string,\n        separated by\"/\". Others are implicit.\n\n        Examples of CHARTYPE and CHARVALUE:\n\n        * CHARTYPE: operator type; Acceptable CHARVAL values:\n        Military/Police/Firefighting\n\n        * CHARTYPE: Operator ID (registration number); Acceptable CHARVAL\n        values: as per registration format\n\n        * CHARTYPE: Operation type: A1 as per EASA Open Types or S1 (National\n        standard Scenario 1), STS01 (EASA Specific standard scenario) or ...\n\n        * CHARTYPE: ETM operation type: Planned/Unplanned,\n\n        * CHARTYPE: passengers on board: yes /no Note that it is possible in\n        each national catalog of chartype and charval items, to define complex\n        categories of operation/drone /equipment. Example: In nation A, we may\n        have a type \"drone level\" with values Low, Medium, High. Each level\n        corresponds to a defined set of required UAS performance/operation\n        features/ operator qualification etc. This avoids to code a complex\n        combination in the geozone database. This conditional expression can\n        also be used to code a prohibition of image capture in a zone.\n\n        Example: PERMITTED/IMAGE CAPTURE=NO/NOISE\n\n          CLASS=A/OR/OPERATOR=POLICE\n\n        Meaning: \u003e-\n           the fight is permitted in this zone at that time if No image is\n        captured (removed or deactivated) and if noise class = class A\n        (following a known classification) or if the UAS operator is the Police\n    CodeRestrictionType:\n      type: string\n      description: \u003e-\n        An indication if flying in the zone is conditional, forbidden or\n        unrestricted.\n    CodeZoneReasonType:\n      type: string\n      description: \u003e-\n        A coded indication of a reason that justifies the existence of an UAS\n        Zone\n      enum:\n      - AIR_TRAFFIC\n      - SENSITIVE\n      - PRIVACY\n      - POPULATION\n      - NATURE\n      - NOISE\n      - FOREIGN_TERRITORY\n      - EMERGENCY\n      - OTHER\n    CodeUSpaceClassType:\n      type: string\n      maxLength: 100\n      description: \u003e-\n        A coded identifier for a category or class of the zone applying a\n        \"USpace concept\".\n\n        NOTE: \u003e-\n           In the current model version, there is no specific list of values.\n        For example, the \"X\", \"Y\", \"Z\" types of zones as per SESAR JU Corus\n        project on USpace concept of operation could be used in a future\n        version. Until a precise list of values is defined, this data type will\n        be considered as string of characters of maximum 100 characters.\n    CodeYesNoType:\n      type: string\n      description: \u003e-\n        A coded value that indicates a choice between a positive (yes) or a\n        negative (no) applicability.\n      enum:\n      - YES\n      - NO\n    Authority:\n      type: object\n      description: \u003e-\n        A relevant authority that is in charge for authorising, being notified\n        or providing information for UAS operations in the UAS zone.\n\n        Rule: \u003e-\n           at least one of the following shall be specified - siteURL, email,\n        phone.\n      properties:\n        name:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: The official name of a public or private authority\n        service:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            The name of a specific department or service within the organisation\n        contact_name:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            The name or role of a specific person that needs to be contacted\n            within the organisation\n        site_url:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            The URL of the public internet site through which the organisation\n            may be contacted\n\n            Note: in the data coding format, this might be further constrained\n            in order to ensure a valid URL format.\n        email:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            The e-mail address by which the organisation may be contacted.\n\n            Note: in the data coding format, this might be further constrained\n            in order to ensure a valid e-mail format.\n        phone:\n          allOf:\n          - $ref: '#/components/schemas/TextShortType'\n          description: \u003e-\n            A phone number at which the organisation may be contacted\n        purpose:\n          allOf:\n          - $ref: '#/components/schemas/CodeAuthorityRole'\n          description: The role of the Authority in relation with the zone.\n        interval_before:\n          type: string\n          format: duration\n          description: \u003e-\n            The minimal time interval required between notification or\n            authorization request and starting to operate in the zone, in the\n            format PnnDTnnHnnM (ISO 8601).\n    CodeAuthorityRole:\n      type: string\n      description: \u003e-\n        A coded list of values indicating the role that an authority has in\n        relation with the UAS zone.\n      enum:\n      - AUTHORIZATION\n      - NOTIFICATION\n      - INFORMATION\n    TextShortType:\n      type: string\n      maxLength: 200\n      description: A free text with a maximum length of 200 characters\n    #\n    # Data structures for ETM Specific Data\n    #\n    OperationalProfileDetails:\n      description: \u003e-\n        Details of the operational profile. Note that this data is not stored\n        in the DSS; only with the clients. Contains information outside of the\n        operational intent pertaining to the mission profile\n      type: object\n      properties:\n        vehicle_make:\n          $ref: '#/components/schemas/VehicleMake'\n        vehicle_model:\n          $ref: '#/components/schemas/VehicleModel'\n        aircraft_registration:\n          $ref: '#/components/schemas/AircraftRegistration'\n        operator:\n          $ref: '#/components/schemas/Operator'\n        mission_type:\n          $ref: '#/components/schemas/MissionType'\n        mission_description:\n          $ref: '#/components/schemas/MissionDescription'\n        contingency_handling_description:\n          $ref: '#/components/schemas/ContingencyHandlingDescription'\n        common_operating_procedures:\n          $ref: '#/components/schemas/CommonOperatingProcedure'\n        negotiated_operators:\n          $ref: '#/components/schemas/NegotiatedOperators'\n        regular_updates:\n          $ref: '#/components/schemas/RegularUpdate'\n    VehicleMake:\n      type: string\n      description: \u003e-\n        A string descriptor for the maker of the vehicle corresponding to a given operation.\n    VehicleModel:\n      type: string\n      description: \u003e-\n        A string descriptor for the model of the vehicle corresponding to a given operation\n    AircraftRegistration:\n      type: string\n      pattern: \"[A-Z0-9]{1,7}\"\n      description: |\n        A unique, alphanumeric string that identifies a civil aircraft and consists of the Aircraft\n        Nationality or Common Mark and an additional alphanumeric string, the registration mark,\n        assigned by the state of registry or common mark registering authority. [FIXM]\n      minLength: 1\n      maxLength: 7\n      externalDocs:\n        description: See FIXM 4.2.0 for further information.\n        url: https://fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftRegistrationType.html#LinkBC\n    Operator:\n      type: object\n      description: \u003e-\n        The information about an operator, identifier, email, telephone number\n      properties:\n        operator_name:\n          $ref: '#/components/schemas/OperatorName'\n        email:\n          type: string\n          format: email\n        phone_number:\n          type: string\n          format: phone-number\n    OperatorName:\n      description: The identifier of the ETM Operator.\n      type: string\n      pattern: \"[A-Z]{3}\"\n      example: \"AAL\"\n      externalDocs:\n        description: See FIXM 4.2.0 for further information.\n        url: https://www.fixm.aero/releases/FIXM-4.2.0/doc/schema_documentation/Fixm_AircraftOperatorType.html#Link1E3\n    MissionType:\n      type: string\n      description: \u003e-\n        Designation of mission type, whether public or private. Default to public\n      enum:\n      - PUBLIC\n      - PRIVATE\n      default: PUBLIC\n    MissionDescription:\n      type: string\n      description: \u003e-\n        Description of the mission, e.g. describing the mission, such as fly to the Gulf of\n        Mexico and loiter for 6 months providing a service @spencer this should be a enum/type\n        field\n      maxLength: 1000\n    ContingencyHandlingDescription:\n      type: string\n      description: \u003e-\n        Description of the contigency handling procedures @spencer this should be a enum/type\n        field\n      maxLength: 10000\n    CommonOperatingProcedure:\n      description: \u003e-\n        Common operating procedure, string values denote a specific type of rules by which the operation will interact with other operations by default. Does not preclude operator-operator negotiation or agreements.\n        COP1_FIRST_RESERVED - De-confliction through first-reserved-first-served principle\n        COP2_PREDEFINED_AGREEMENT - De-confliction through pre-defined agreement\n        COP3_DYNAMIC_AGREEMENT - De-confliction through dynamically generated/negotiated agreement\n      type: string\n      enum:\n      - COP1_FIRST_RESERVED\n      - COP2_PREDEFINED_AGREEMENT\n      - COP3_DYNAMIC_AGREEMENT\n      default: COP1_FIRST_RESERVED\n    NegotiatedOperators:\n      type: array\n      description: \u003e-\n        List of other operators that the operator of this operation has agreements with for the\n        purposes of negotiation outside of the common operating procedures.\n      items:\n        $ref: '#/components/schemas/OperatorName'\n    RegularUpdate:\n      type: boolean\n      description: \u003e-\n        True or false descriptor for whether or not there is an expectation that the operational\n        intent for this operation will be regularlary updated.\n      default: false\n    FlightPlan:\n      description: \u003e-\n        Detailed flight plan that will inform the operational intent generator, which has been built for developing operation\n        intent based on detailed flight plan, flight mode, and certain level of wind information. The Flight Plan model is not\n        shared in the operational intent details, but is instead available through a separate endpoint in the event that\n        conflict is determined to be outside of the acceptable risk tolerance and additional information exchanges need to\n        occur for further operator negotiation.\n      type: object\n      properties:\n        flight_plan_waypoint_array:\n          $ref: '#/components/schemas/FlightPlanWayPointArray'\n        trajectory_performance:\n          $ref: '#/components/schemas/TrajectoryPerformance'\n    FlightPlanWayPointArray:\n      type: array\n      minItems: 2\n      maxItems: 1000\n      description: |-\n        The list of flight waypoints and associated flight modes for this operation. This list must contain all significant flight waypoints.\n      items:\n        $ref: '#/components/schemas/FlightPlanWayPoint'\n    FlightPlanWayPoint:\n      description: \u003e-\n        A waypoint and associate mode for use within a flight plan.\n      required:\n        - lat_lng_point\n        - altitude\n        - true_air_speed\n        - flight_mode\n        - controlled_arrival_time_tolerance\n      type: object\n      properties:\n        point_designator:\n          description: The name of the designated point.\n            This is required for all named airspace structure points.\n          type: string\n          example: ee123\n        lat_lng_point:\n          description: Latitude and Longitude of the point. If this is for a named airspace structure\n            point it should be the same value as the specific airspace structure point.\n          allOf:\n            - $ref: '#/components/schemas/LatLngPoint'\n        altitude:\n          description: Altitude of the point. If this is for a named airspace structure\n            point it should be the same value as from specific airspace structure point.\n          allOf:\n            - $ref: '#/components/schemas/Altitude'\n        true_air_speed:\n          description: |-\n            Speed of the vehicle from current waypoint to next waypoint in the flight plan.\n          allOf:\n            - $ref: '#/components/schemas/TrueAirSpeed'\n        flight_mode:\n          description: |-\n            Provides the flight mode between current waypoint to next waypoint\n          type: object\n          required:\n          - lateral_mode\n          - vertical_mode\n          properties:\n            lateral_mode:\n              type: string\n              enum:\n              - CONSTANT_VELOCITY\n              - CONSTANT_ACCELERATION\n              - CONSTANT_TURN\n              - STATION_KEEPING\n            vertical_mode:\n              type: string\n              enum:\n              - CONSTANT_CLIMB_DESCENT\n              - CONSTANT_ALTITUDE\n        controlled_time_of_arrival_tolerance:\n          description: |-\n            Provides controlled arrival time tolerance in minutes at the associated waypoint\n          allOf:\n           - $ref: '#/components/schemas/ControlledTimeOfArrivalTolerance'\n    TrajectoryPerformance:\n      description: Describes any applicable trajectory performance that can be used to build trajectory uncertainty.\n      type: object\n      required:\n        - along_track_error_rms\n        - cross_track_error_rms\n        - vertical_track_error_rms\n      properties:\n        along_track_error_rms:\n          description: |\n            Provides root-mean-square for flight's along-track error, including the constant (zeroth order) and rate (first order)\n          allOf:\n           - $ref: '#/components/schemas/TrackingErrorRMS'\n        cross_track_error_rms:\n          description: |\n            Provides root-mean-square for flight's cross-track error, including the constant (zeroth order) and rate (first order)\n          allOf:\n           - $ref: '#/components/schemas/TrackingErrorRMS'\n        vertical_track_error_rms:\n          description: |\n            Provides root-mean-square for flight's vertical-track error, including the constant (zeroth order) and rate (first order)\n          allOf:\n           - $ref: '#/components/schemas/TrackingErrorRMS'\n    TrueAirSpeed:\n      required:\n      - speed\n      - units_speed\n      type: object\n      properties:\n        speed:\n          format: float\n          type: number\n          multipleOf: 0.01\n          minimum: 0.0\n          exclusiveMinimum: false\n          description: Ground speed in meters/second.\n          example: 200.1\n        units_speed:\n          type: string\n          enum:\n          - Knots\n    ControlledTimeOfArrivalTolerance:\n      required:\n      - status\n      - value\n      - units\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n          - ACTIVATED\n          - INACTIVATED\n        value:\n          format: float\n          type: number\n          multipleOf: 0.1\n          minimum: 0.0\n          exclusiveMinimum: false\n          description: Tolerance for controlled time of arrival at a waypoint\n          example: 10.0\n        units:\n          type: string\n          enum:\n          - Minutes\n    TrackingErrorRMS:\n      required:\n      - status\n      - constant\n      - growth_rate\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n          - ACTIVATED\n          - INACTIVATED\n        constant:\n          format: float\n          type: number\n          multipleOf: 0.01\n          minimum: 0.00\n          exclusiveMinimum: false\n          description: the constant portion of the root-mean-square error for the tracking error at a given direction\n          example: 1.00\n        growth_rate:\n          format: float\n          type: number\n          multipleOf: 0.01\n          minimum: 0.00\n          exclusiveMinimum: false\n          description: the rate portion of the root-mean-square error for the tracking error at a given direction\n          example: 1.00\n    OperationalIntentVolume4D:\n      type: object\n      description: \u003e-\n        Four dimensional volume used for communicating operational intent. This volume includes a containment confidence level to communicate to other operators the likelihood of being inside of a designated volume in order to avoid high-uncertainty vehicles having volumes larger than acceptable by the current design.\n      properties:\n        volume:\n          $ref: '#/components/schemas/Volume4D'\n        containtment_confidence_level:\n          $ref: '#/components/schemas/ContainmentConfidenceLevel'\n    ContainmentConfidenceLevel:\n      description: \u003e-\n        A confidence value between 0.0 - 1.0 that expresses the likelihood that a vehicle will be within a volume.\n      type: number\n      format: float\n      minimum: 0.0\n      maximum: 1.0\n\npaths:\n  #\n  # DSS endpoints for operational intents\n  #\n  /dss/v1/operational_intent_references/query:\n    summary: \u003e-\n      Query all operational intents in the DSS that intersect with a specified\n      geographic area, altitude-range, and time-range.\n    description: Interface to operational intent references in the DSS.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryOperationalIntentReferenceParameters'\n        required: true\n      tags:\n      - Operational intent references\n      - dss\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: \u003e-\n        Query all operational intent references in the specified\n        area/volume/time from the DSS.\n      description: \u003e-\n        Note that this endpoint does not produce any mutations in the DSS\n        despite using the HTTP POST verb.  The HTTP GET verb is traditionally\n        used for operations like this one, but requiring or using a request body\n        for HTTP GET requests is non-standard and not supported by some\n        architectures.  POST is used here instead of GET to ensure robust\n        support for the use of a request body.\n      operationId: queryOperationalIntentReferences\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryOperationalIntentReferenceResponse'\n          description: Operational intents were successfully retrieved.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /dss/v1/operational_intent_references/{entityid}:\n    summary: \u003e-\n      Create/read endpoint for a specified operational intent reference in the\n      DSS.\n    parameters:\n    - name: entityid\n      description: EntityID of the operational intent.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    get:\n      tags:\n      - Operational intent references\n      - dss\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: \u003e-\n        Retrieve the specified operational intent reference from the DSS.\n      operationId: getOperationalIntentReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperationalIntentReferenceResponse'\n          description: Operational intent reference was retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutOperationalIntentReferenceParameters'\n        required: true\n      tags:\n      - Operational intent references\n      - dss\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.strategic_coordination\n        - utm.constraint_processing\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: Create the specified operational intent reference in the DSS.\n      operationId: createOperationalIntentReference\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeOperationalIntentReferenceResponse'\n          description: \u003e-\n            An operational intent reference was created successfully in the DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the operational intent in a\n            disallowed way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AirspaceConflictResponse'\n          description: \u003e-\n            * The provided key did not prove knowledge of all current and\n            relevant airspace Entities\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '412':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client attempted to transition the operational intent to\n            Accepted or Activated while marked as Down in the DSS.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the operational intent is too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /dss/v1/operational_intent_references/{entityid}/{ovn}:\n    summary: \u003e-\n      Update endpoint for a specified operational intent reference in the DSS.\n    parameters:\n    - name: entityid\n      description: EntityID of the operational intent.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    - name: ovn\n      description: \u003e-\n        Opaque version number of the existing operational intent reference.\n      schema:\n        $ref: '#/components/schemas/EntityOVN'\n      in: path\n      required: true\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutOperationalIntentReferenceParameters'\n        required: true\n      tags:\n      - Operational intent references\n      - dss\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.strategic_coordination\n        - utm.constraint_processing\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: Update the specified operational intent reference in the DSS.\n      operationId: updateOperationalIntentReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeOperationalIntentReferenceResponse'\n          description: \u003e-\n            An operational intent reference was updated successfully in the DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the operational intent in a\n            disallowed way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AirspaceConflictResponse'\n          description: \u003e-\n            * The provided key did not prove knowledge of all current and\n            relevant airspace Entities\n\n            * The provided `ovn` does not match the current version of the\n            existing operational intent.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '412':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client attempted to transition the operational intent to\n            Accepted or Activated while marked as Down in the DSS.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the operational intent is too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n    delete:\n      tags:\n      - Operational intent references\n      - dss\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: Remove the specified operational intent reference from the DSS.\n      operationId: deleteOperationalIntentReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeOperationalIntentReferenceResponse'\n          description: \u003e-\n            The specified operational intent was successfully removed from the\n            DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the operational intent in a\n            disallowed way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The provided `ovn` does not match the current version of the\n            existing operational intent.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '412':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client attempted to delete the operational intent while marked\n            as Down in the DSS.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # DSS endpoints for constraints\n  #\n  /dss/v1/constraint_references/query:\n    summary: \u003e-\n      Query all constraint references in the DSS that intersect with a specified\n      area/volume/time.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryConstraintReferenceParameters'\n        required: true\n      tags:\n      - Constraint references\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_management\n      - Authority:\n        - utm.constraint_processing\n      summary: \u003e-\n        Query all constraint references in the specified area/volume from the\n        DSS.\n      description: \u003e-\n        Note that this endpoint does not produce any mutations in the DSS\n        despite using the HTTP POST verb.  The HTTP GET verb is traditionally\n        used for operations like this one, but requiring or using a request body\n        for HTTP GET requests is non-standard and not supported by some\n        architectures.  POST is used here instead of GET to ensure robust\n        support for the use of a request body.\n      operationId: queryConstraintReferences\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryConstraintReferencesResponse'\n          description: Constraint references were successfully retrieved.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /dss/v1/constraint_references/{entityid}:\n    parameters:\n    - name: entityid\n      description: EntityID of the constraint.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    summary: \u003e-\n      Create/read endpoint for a specified constraint reference in the DSS.\n    get:\n      tags:\n      - Constraint references\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_management\n      - Authority:\n        - utm.constraint_processing\n      summary: Retrieve the specified constraint reference from the DSS.\n      operationId: getConstraintReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetConstraintReferenceResponse'\n          description: Constraint reference was retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutConstraintReferenceParameters'\n        required: true\n      tags:\n      - Constraint references\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_management\n      summary: Create the specified constraint reference in the DSS.\n      operationId: createConstraintReference\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeConstraintReferenceResponse'\n          description: \u003e-\n            A constraint reference was created successfully in the DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the constraint in a disallowed\n            way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * A constraint with the provided ID already exists.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the constraint is too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /dss/v1/constraint_references/{entityid}/{ovn}:\n    parameters:\n    - name: entityid\n      description: EntityID of the constraint.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    - name: ovn\n      description: \u003e-\n        Opaque version number of the existing operational intent reference.\n      schema:\n        $ref: '#/components/schemas/EntityOVN'\n      in: path\n      required: true\n    summary: \u003e-\n      Update/delete endpoint for a specified constraint reference in the DSS.\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutConstraintReferenceParameters'\n        required: true\n      tags:\n      - Constraint references\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_management\n      summary: Update the specified constraint reference in the DSS.\n      operationId: updateConstraintReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeConstraintReferenceResponse'\n          description: \u003e-\n            A constraint reference was updated successfully in the DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the constraint in a disallowed\n            way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The provided `ovn` does not match the current version of the\n            existing constraint.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The area of the constraint is too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n    delete:\n      tags:\n      - Constraint references\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_management\n      summary: Delete the specified constraint reference from the DSS.\n      operationId: deleteConstraintReference\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangeConstraintReferenceResponse'\n          description: The constraint was successfully removed from the DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the constraint in a disallowed\n            way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The provided `ovn` does not match the current version of the\n            existing constraint.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # DSS endpoints for subscriptions\n  #\n  /dss/v1/subscriptions/query:\n    summary: Subscriptions for airspace updates to a volume of interest.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QuerySubscriptionParameters'\n        required: true\n      tags:\n      - Subscriptions\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.strategic_coordination\n      description: \u003e-\n        Query subscriptions intersecting an area of interest.  Subscription\n        notifications are only triggered by (and contain full information of)\n        changes to, creation of, or deletion of, Entities referenced by or\n        stored in the DSS; they do not involve any data transfer (such as remote\n        ID telemetry updates) apart from Entity information.\n\n        Note that this parameter is a JSON object (in the 'request-body'). Note\n        that either or both of the 'altitude' and 'time' values may be omitted\n        from this parameter.\n\n        Only subscriptions belonging to the caller are returned.  This endpoint\n        would be used if an ESS lost track of subscriptions they had created\n        and/or wanted to resolve an error indicating that they had too many\n        existing subscriptions in an area.\n      summary: \u003e-\n        Query all subscriptions in the specified area/volume from the DSS.\n      operationId: querySubscriptions\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuerySubscriptionsResponse'\n          description: Subscriptions were retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '413':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested area was too large.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /dss/v1/subscriptions/{subscriptionid}:\n    summary: Create/read endpoint for a specific subscription in the DSS.\n    parameters:\n    - name: subscriptionid\n      description: SubscriptionID of the subscription of interest.\n      schema:\n        $ref: '#/components/schemas/SubscriptionID'\n      in: path\n      required: true\n    get:\n      tags:\n      - Subscriptions\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.strategic_coordination\n      summary: Retrieve the specified subscription from the DSS.\n      operationId: getSubscription\n      description: Retrieve a specific subscription.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSubscriptionResponse'\n          description: Subscription information was retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: A subscription with the specified ID was not found.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n    put:\n      security:\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.strategic_coordination\n      summary: Create the specified subscription in the DSS.\n      operationId: createSubscription\n      description: \u003e-\n        Create a subscription.\n\n        Subscription notifications are only triggered by (and contain full\n        information of) changes to, creation of, or deletion of, Entities\n        referenced by or stored in the DSS; they do not involve any data\n        transfer (such as remote ID telemetry updates) apart from Entity\n        information.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutSubscriptionParameters'\n        required: true\n      tags:\n      - Subscriptions\n      - dss\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutSubscriptionResponse'\n          description: A new subscription was created successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the subscription in a disallowed\n            way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint or the request.\n\n            * Client attempted to request notifications for an Entity type to\n            which the scopes included in the access token do not provide access.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * A subscription with the specified ID already exists.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client may have issued too many requests within a small period\n            of time.\n  /dss/v1/subscriptions/{subscriptionid}/{version}:\n    summary: Update/delete a specific subscription in the DSS.\n    parameters:\n    - name: subscriptionid\n      description: SubscriptionID of the subscription of interest.\n      schema:\n        $ref: '#/components/schemas/SubscriptionID'\n      in: path\n      required: true\n    - name: version\n      description: Version of the subscription to be modified.\n      schema:\n        type: string\n      in: path\n      required: true\n    put:\n      security:\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.strategic_coordination\n      summary: Update the specified subscription in the DSS.\n      operationId: updateSubscription\n      description: \u003e-\n        Update a subscription.\n\n        Subscription notifications are only triggered by (and contain full\n        information of) changes to, creation of, or deletion of, Entities\n        referenced by or stored in the DSS; they do not involve any data\n        transfer (such as remote ID telemetry updates) apart from Entity\n        information.\n\n        The standard requires each operational intent to have a subscription\n        that cover the 4D volume of the operational intent.  If an ESS attempts\n        to update a subscription upon which an operational intent depends, and\n        this update would cause the operational intent to lose subscription\n        coverage, the update will be rejected by the DSS as a bad request.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutSubscriptionParameters'\n        required: true\n      tags:\n      - Subscriptions\n      - dss\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutSubscriptionResponse'\n          description: A subscription was updated successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more input parameters were missing or invalid.\n\n            * The request attempted to mutate the subscription in a disallowed\n            way.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint or the request.\n\n            * Client attempted to request notifications for an Entity type to\n            which the scopes included in the access token do not provide access.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * A subscription with the specified ID already exists and is managed\n            by a different client.\n\n            * The provided `version` does not match the current subscription.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            update because of other simultaneous changes.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client may have issued too many requests within a small period\n            of time.\n    delete:\n      tags:\n      - Subscriptions\n      - dss\n      security:\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.strategic_coordination\n      summary: Remove the specified subscription from the DSS.\n      operationId: deleteSubscription\n      description: \u003e-\n        The standard requires each operational intent to have a subscription\n        that cover the 4D volume of the operational intent.  If an ESS attempts\n        to delete a subscription upon which an operational intent depends, the\n        deletion will be rejected by the DSS as a bad request.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSubscriptionResponse'\n          description: Subscription was successfully removed from DSS.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: A subscription with the specified ID was not found.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * A subscription with the specified ID is managed by a different\n            client.\n\n            * The provided `version` does not match the current subscription.\n\n            * Despite repeated attempts, the DSS was unable to complete the\n            deletion because of other simultaneous changes.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # DSS endpoints for reports\n  #\n  /dss/v1/reports:\n    summary: Error reports of potential operational issues relevant to DSSs.\n    post:\n      security:\n      - Authority:\n        - utm.constraint_management\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.conformance_monitoring_sa\n      - Authority:\n        - utm.availability_arbitration\n      summary: Report information about communication issues to a DSS.\n      operationId: makeDssReport\n      description: \u003e-\n        Report issues to a DSS. Data sent to this endpoint is archived.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorReport'\n        required: true\n      tags:\n      - Reports\n      - dss\n      responses:\n        '201':\n          description: A new Report was created successfully (and archived).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more parameters were missing or invalid.\n\n            * The report could not be parsed, or contains unrecognized data.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint or the request.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # DSS endpoints for ESS availability\n  #\n  /dss/v1/ess_availability/{ess_id}:\n    summary: Availability status of an ESS\n    parameters:\n    - name: ess_id\n      description: \u003e-\n        Client ID (matching their `sub` in access tokens) of the ESS to which\n        this availability applies.\n      schema:\n        type: string\n      in: path\n      required: true\n    put:\n      security:\n      - Authority:\n        - utm.availability_arbitration\n      summary: Set availability status of an ESS.\n      operationId: setEssAvailability\n      description: Set availability status of an ESS.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetEssAvailabilityStatusParameters'\n        required: true\n      tags:\n      - Availability\n      - dss\n      responses:\n        '200':\n          description: \u003e-\n            Availability status of specified ESS was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EssAvailabilityStatusResponse'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: '* One or more parameters were missing or invalid.'\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint or the request.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n    get:\n      security:\n      - Authority:\n        - utm.availability_arbitration\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: Get availability status of an ESS.\n      operationId: getEssAvailability\n      description: Get availability status of an ESS.\n      tags:\n      - Availability\n      - dss\n      responses:\n        '200':\n          description: \u003e-\n            Availability status of specified ESS was successfully retrieved.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EssAvailabilityStatusResponse'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: '* One or more parameters were missing or invalid.'\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint or the request.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # ESS endpoints for operational intents\n  #\n  /ess/v1/operational_intents/{entityid}:\n    summary: Query detailed information of an operational intent from an ESS.\n    parameters:\n    - name: entityid\n      description: EntityID for this operational intent.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    get:\n      tags:\n      - Operational intent details\n      - p2p_etm\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      summary: Retrieve the specified operational intent details from an ESS.\n      description: \u003e-\n        The ESS hosting this endpoint returns the details (and reference) of an\n        operational intent it manages.  While the ESS has a pending request to\n        change the operational intent in the DSS, the ESS should report the most\n        recent version the ESS knows was accepted by the DSS.  So, before an ESS\n        receives a response to create an operational intent reference in the\n        DSS, it should return 404 if queried for that operational intent at this\n        endpoint.\n      operationId: getOperationalIntentDetails\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperationalIntentDetailsResponse'\n          description: Operational intent details were retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /ess/v1/operational_intents/{entityid}/telemetry:\n    summary: \u003e-\n      Detailed information on the position of an off-nominal operational intent.\n    parameters:\n    - name: entityid\n      description: EntityID for this operational intent.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    get:\n      tags:\n      - Operational intent details\n      - p2p_etm\n      security:\n      - Authority:\n        - utm.conformance_monitoring_sa\n      summary: \u003e-\n        Query detailed information on the position of an off-nominal operational\n        intent from an ESS.\n      operationId: getOperationalIntentTelemetry\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperationalIntentTelemetryResponse'\n          description: \u003e-\n            OperationalIntent telemetry details were retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Operational intent is not in a state that provides telemetry.\n        '412':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: No telemetry data is available.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /ess/v1/operational_intents:\n    summary: \u003e-\n      An ESS's representation of detailed information about operational intents.\n    post:\n      tags:\n      - Operational intent details\n      - p2p_etm\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      summary: Notify a peer ESS of changed operational intent details.\n      operationId: notifyOperationalIntentDetailsChanged\n      description: \u003e-\n        Notify a peer ESS directly of changed operational intent details\n        (usually as a requirement of previous interactions with the DSS).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutOperationalIntentDetailsParameters'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            New or updated full operational intent information received\n            successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more parameters were missing or invalid.\n\n            * The Entity could not be parsed, or contains illegal data.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n\n            * The client identified in the access token is not the manager of\n            this Entity according to the receiving client's records.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The Entity version specified in this message is lower than a\n            previously-received notification, or identical to a\n            previously-received notification and the Entity is different.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # ESS endpoints for constraints\n  #\n  /ess/v1/constraints/{entityid}:\n    summary: Query detailed information of a constraint from an ESS.\n    parameters:\n    - name: entityid\n      description: EntityID of the constraint.\n      schema:\n        $ref: '#/components/schemas/EntityID'\n      in: path\n      required: true\n    get:\n      tags:\n      - Constraint details\n      - p2p_etm\n      security:\n      - Authority:\n        - utm.constraint_processing\n      summary: Retrieve the specified constraint details from an ESS.\n      operationId: getConstraintDetails\n      description: \u003e-\n        The ESS hosting this endpoint returns the details (and reference) of a\n        constraint it manages.  While the ESS has a pending request to change\n        the constraint in the DSS, the ESS should report the most recent version\n        the ESS knows was accepted by the DSS.  So, before an ESS receives a\n        response to create a constraint reference in the DSS, it should return\n        404 if queried for that constraint at this endpoint.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetConstraintDetailsResponse'\n          description: Constraint details were retrieved successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: One or more input parameters were missing or invalid.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: The requested Entity could not be found.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n  /ess/v1/constraints:\n    summary: An ESS's representation of detailed information about constraints.\n    post:\n      tags:\n      - Constraint details\n      - p2p_etm\n      security:\n      - Authority:\n        - utm.constraint_management\n      summary: Notify a peer ESS of changed constraint details.\n      operationId: notifyConstraintDetailsChanged\n      description: \u003e-\n        Notify a peer ESS directly of changed constraint details (usually as a\n        requirement of previous interactions with the DSS).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutConstraintDetailsParameters'\n        required: true\n      responses:\n        '204':\n          description: \u003e-\n            New or updated full constraint information received successfully.\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more parameters were missing or invalid.\n\n            * The Entity could not be parsed, or contains illegal data.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n\n            * The client identified in the access token is not the manager of\n            this Entity according to the receiving client's records.\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The Entity version specified in this message is lower than a\n            previously-received notification, or identical to a\n            previously-received notification and the Entity is different.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # ESS endpoints for reports\n  #\n  /ess/v1/reports:\n    summary: Error reports of issues communicating with a peer ESS.\n    post:\n      tags:\n      - Reports\n      - p2p_etm\n      security:\n      - Authority:\n        - utm.strategic_coordination\n      - Authority:\n        - utm.constraint_processing\n      - Authority:\n        - utm.constraint_management\n      - Authority:\n        - utm.conformance_monitoring_sa\n      - Authority:\n        - utm.availability_arbitration\n      summary: \u003e-\n        Notify ESS of an error encountered that might otherwise go unnoticed.\n      operationId: makeEssReport\n      description: \u003e-\n        Endpoint to provide feedback (errors, etc.) that might otherwise go\n        unnoticed by this ESS.  This endpoint is used for all feedback related\n        to operational intents and constraints.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ErrorReport'\n        required: true\n      responses:\n        '201':\n          description: Report received and successfully archived.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorReport'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * One or more parameters were missing or invalid.\n\n            * The report could not be parsed, or contains unrecognized data.\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            Bearer access token was not provided in Authorization header, token\n            could not be decoded, or token was invalid.\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            * The access token was decoded successfully but did not include a\n            scope appropriate to this endpoint.\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n          description: \u003e-\n            The client issued too many requests in a short period of time.\n\n  #\n  # ESS pseudo endpoint for logging\n  #\n  /ess/v1/log_sets/{log_set_id}:\n    summary: General summary\n    parameters:\n    - name: log_set_id\n      description: \u003e-\n        ESS-defined identifier for a set of log entries.  For instance, this\n        ID may refer to all logs associated with a particular reportable\n        incident, or over a time range for the purpose of metric computation.\n      schema:\n        type: string\n      in: path\n      required: true\n      example: com.example.incident.20200107.v4\n    get:\n      tags:\n      - Logging\n      summary: Get ESS logs\n      operationId: getLogSet\n      description: \u003e-\n        An ESS will not usually implement this endpoint directly, but rather will\n        be capable of exporting log data in a format equivalent to the response\n        format of this pseudo-endpoint according to the requirements of the\n        standard.\n      responses:\n        '200':\n          description: Log data successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ESSLogSet'\n",
			"canonicalURL": "/github.com/nasa/utm-docs@951b2856d907928ecfbab869de45e82c15049a50/-/blob/etm/ess-interface-spec/etm-ess-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nasa/utm-docs/blob/951b2856d907928ecfbab869de45e82c15049a50/etm/ess-interface-spec/etm-ess-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Constraint\": parse schema: property \"details\": parse schema: resolve \"#/components/schemas/ConstraintDetails\": parse schema: property \"geozone\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/GeoZone\": parse schema: property \"regulation_exemption\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/CodeYesNoType\": parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}