{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Tzahi12345/YoutubeDL-Material"
		},
		"file": {
			"name": "Public API v1.yaml",
			"size": 0,
			"path": "Public API v1.yaml",
			"byteSize": 75634,
			"content": "openapi: 3.0.0\ninfo:\n  title: YoutubeDL-Material API Docs - Official\n  version: '1.0'\n  description: \"Welcome to the official docs for YoutubeDL-Material.\\n\\n\\nYou can check out all the available endpoints. Remember to authenticate with your API key using the \\\"apiKey\\\" query parameter with your requests.\\n\\n\\nTo do so, simply add this to the end of your API call:\\n\\n\\n`?apiKey=API_KEY`\\n\\n\\nReplce API_KEY with the API key in the settings menu. If one doesn't exist, click generate to create one.\\n\\n### Multi-user mode\\n\\nWhen using multi-user mode, you will need to supply a JWT token to authenticate requests through that user. This lets the server know which user to run the task for, like downloading a video for a specific user. \\n\\nTo do this, you must use the `/api/auth/login` endpoint to login using a user's username and password. This will result in an object containing a `token`. Supply this along with your API key like so:\\n\\n`?apiKey=API_KEY\u0026jwt=JWT_TOKEN`\\n\\nNotice the `\u0026` between the `API_KEY` and `jwt`.\"\n  contact:\n    name: Isaac Abadi\n    url: https://github.com/Tzahi12345/YoutubeDL-Material\n    email: IsaacMGrynsztein@gmail.com\nservers:\n  - url: 'http://localhost:17442'\npaths:\n  /api/downloadFile:\n    post:\n      tags:\n        - downloader\n      summary: Download video file\n      description: |-\n        Downloads a file with the given URL. Will include global args if they exist.\n\n\n        HTTP requests will return once the video file download completes. In the future, it will (by default) return once the download starts, and a separate API call will be used for checking the download status.\n      operationId: post-tomp4\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadResponse'\n        '500':\n          description: Server download error\n      security:\n        - Auth query parameter: []\n  /api/generateArgs:\n    post:\n      tags:\n        - downloader\n      summary: Generates arguments used to download file\n      description: Generates args, used for checking what args would run if you ran downloadFile\n      operationId: post-generateArgs\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateArgsResponse'\n      security:\n        - Auth query parameter: []\n  /api/getMp3s:\n    get:\n      tags:\n        - files\n      summary: Get all mp3 files\n      description: Gets all mp3 files and audio playlists stored in the db\n      operationId: get-getMp3s\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMp3sResponse'\n      security:\n        - Auth query parameter: []\n  /api/getMp4s:\n    get:\n      tags:\n        - files\n      summary: Get all mp4 files\n      description: Gets all mp4 files and video playlists stored in the db\n      operationId: get-getMp4s\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetMp4sResponse'\n      security:\n        - Auth query parameter: []\n  /api/getAllFiles:\n    post:\n      tags:\n        - files\n      summary: Get all files\n      description: Gets all files and playlists stored in the db\n      operationId: get-getAllFiles\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetAllFilesRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllFilesResponse'\n      security:\n        - Auth query parameter: []\n  /api/getFile:\n    post:\n      tags:\n        - files\n      summary: Get file database object\n      description: Gets a file db object by its uid and type. Type will be found if not provided\n      operationId: post-getFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetFileRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFileResponse'\n        '401':\n          description: User is not authorized to view the file.\n      security:\n        - Auth query parameter: []\n  /api/updateFile:\n    post:\n      tags:\n        - files\n      summary: Updates file database object\n      description: Updates a file db object using its uid and a change object.\n      operationId: post-updateFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFileRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/enableSharing:\n    post:\n      tags:\n        - files\n        - playlists\n      summary: Enable sharing\n      description: Enables sharing for a video or playlist\n      operationId: post-enableSharing\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SharingToggle'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/disableSharing:\n    post:\n      tags:\n        - files\n        - playlists\n      summary: Disable sharing\n      description: Disables sharing for a video or playlist\n      operationId: post-disableSharing\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SharingToggle'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/incrementViewCount:\n    post:\n      summary: Increments a file's view count\n      tags:\n        - files\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IncrementViewCountRequest'\n      operationId: post-api-incrementViewCount\n      description: Increments a file's view count\n      security:\n        - Auth query parameter: []\n  /api/subscribe:\n    post:\n      tags:\n        - subscriptions\n      summary: Subscribe to channel or playlist\n      description: Allows you to subscribe to channels and playlists. Name is optional (will use the channel/playlist name)\n      operationId: post-api-subscribe\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscribeRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscribeResponse'\n      security:\n        - Auth query parameter: []\n  /api/unsubscribe:\n    post:\n      tags:\n        - subscriptions\n      summary: Unsubscribe from channel or playlist\n      description: Unsubscribes from a subscription\n      operationId: post-api-unsubscribe\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnsubscribeRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsubscribeResponse'\n      security:\n        - Auth query parameter: []\n  /api/deleteSubscriptionFile:\n    post:\n      tags:\n        - subscriptions\n      summary: Delete video from subscription\n      description: Deletes a file from a subscription\n      operationId: post-api-deleteSubscriptionFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSubscriptionFileRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n        '500':\n          description: Internal Server Error\n      security:\n        - Auth query parameter: []\n  /api/getSubscription:\n    post:\n      tags:\n        - subscriptions\n      summary: Get subscription\n      description: Gets a subscription from its ID\n      operationId: post-api-getSubscription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetSubscriptionRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSubscriptionResponse'\n      security:\n        - Auth query parameter: []\n  /api/downloadVideosForSubscription:\n    post:\n      tags:\n        - subscriptions\n      summary: Download videos for subscription\n      description: 'Manually check the subscription for new videos. When used on newly created subscriptions, it will grab all  possible videos'\n      operationId: post-api-downloadVideosForSubscription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadVideosForSubscriptionRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/getSubscriptions:\n    post:\n      tags:\n        - subscriptions\n      summary: Get all subscriptions\n      operationId: post-api-getSubscriptions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllSubscriptionsResponse'\n      security:\n        - Auth query parameter: []\n  /api/createPlaylist:\n    post:\n      tags:\n        - playlists\n      summary: Create a playlist\n      description: Creates a playlist from existing downloaded videos\n      operationId: post-api-createPlaylist\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePlaylistRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreatePlaylistResponse'\n      security:\n        - Auth query parameter: []\n  /api/getPlaylist:\n    post:\n      tags:\n        - playlists\n      summary: Get playlist\n      description: Gets a playlist object from the database from its ID\n      operationId: post-api-getPlaylist\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetPlaylistRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPlaylistResponse'\n      security:\n        - Auth query parameter: []\n  /api/updatePlaylist:\n    post:\n      tags:\n        - playlists\n      summary: Update playlist\n      description: Updates the playlist object\n      operationId: post-api-updatePlaylist\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePlaylistRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/deletePlaylist:\n    post:\n      tags:\n        - playlists\n      summary: Delete playlist\n      description: Deletes a playlist from the database by its ID\n      operationId: post-api-deletePlaylist\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeletePlaylistRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/addFileToPlaylist:\n    post:\n      tags:\n        - playlists\n      summary: Adds a file to a playlist\n      description: Adds a file to a playlist\n      operationId: post-api-addFileToPlaylist\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddFileToPlaylistRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/deleteMp4:\n    post:\n      tags:\n        - files\n      summary: Delete mp4 file\n      description: Deletes an mp4 file by its uid\n      operationId: post-api-deleteMp4\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteMp3Mp4Request'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: Whether the operation succeeded\n      security:\n        - Auth query parameter: []\n  /api/downloadFileFromServer:\n    post:\n      tags:\n        - files\n      summary: Download downloaded file from server\n      operationId: post-api-downloadFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadFileRequest'\n      responses:\n        '200':\n          description: 'The file itself is in the response, as well as an options object.'\n        '401':\n          description: User is not authorized to view the file.\n      security:\n        - Auth query parameter: []\n  /api/deleteFile:\n    post:\n      tags:\n        - files\n      summary: Delete downloaded file\n      operationId: post-api-deleteFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteMp3Mp4Request'\n      responses:\n        '200':\n          description: OK\n      security:\n        - Auth query parameter: []\n  /api/deleteAllFiles:\n    post:\n      tags:\n        - files\n      summary: Delete all downloaded files\n      operationId: post-api-deleteAllFiles\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteMp3Mp4Request'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAllFilesResponse'\n      security:\n        - Auth query parameter: []\n  /api/downloadArchive:\n    post:\n      tags:\n        - subscriptions\n      summary: Download subscription archive\n      description: Downloads the archive file of a subscription\n      operationId: post-api-downloadArchive\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadArchiveRequest'\n      responses:\n        '200':\n          description: The archive text file is sent as a response\n        '404':\n          description: If the archive dir is not found, 404 is sent as a response\n      security:\n        - Auth query parameter: []\n  /api/updaterStatus:\n    get:\n      tags:\n        - updating\n      summary: Get updater status\n      description: Gets the status of an update that is in progress\n      operationId: get-api-updaterStatus\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdaterStatus'\n      security:\n        - Auth query parameter: []\n  /api/updateServer:\n    post:\n      tags:\n        - updating\n      summary: Update server\n      description: 'Updates the server. If no tag is provided, the latest version will be used.'\n      operationId: post-api-updateServer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServerRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/isPinSet:\n    post:\n      tags:\n        - security\n      summary: Check if pin is set\n      description: Checks if the pin is set for settings\n      operationId: post-api-isPinSet\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_15'\n      security:\n        - Auth query parameter: []\n  /api/generateNewAPIKey:\n    post:\n      tags:\n        - security\n      summary: Generate new API key\n      description: Generates and sets a new API key\n      operationId: post-genapikey\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateNewApiKeyResponse'\n      security:\n        - Auth query parameter: []\n  /api/deleteMp3:\n    post:\n      tags:\n        - files\n      summary: Delete mp3 file\n      description: Deletes an mp3 file by its uid\n      operationId: post-api-deleteMp3\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteMp3Mp4Request'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: Whether the operation succeeded\n      security:\n        - Auth query parameter: []\n  /api/config:\n    get:\n      tags: []\n      summary: Get config\n      description: \"Gets the config file stored in 'default.json'\"\n      operationId: get-config\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConfigResponse'\n      security:\n        - Auth query parameter: []\n  /api/setConfig:\n    post:\n      summary: Set config\n      description: \"Sets the 'default.json' config file to the 'new_config_file' object\"\n      operationId: post-api-setConfig\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetConfigRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n        '404':\n          description: Tried to save invalid config file.\n      security:\n        - Auth query parameter: []\n  /api/downloads:\n    post:\n      summary: Get info for all downloads\n      tags:\n        - downloader\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllDownloadsResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetAllDownloadsRequest'\n      operationId: post-api-downloads\n      description: Retrieves all downloads recorded by the server and their status.\n      security:\n        - Auth query parameter: []\n  /api/download:\n    post:\n      summary: Get info for one download\n      operationId: post-api-download\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDownloadResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDownloadRequest'\n        description: ''\n      description: \"Gets a single download using its download_id.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/pauseDownload:\n    post:\n      summary: Pauses one download\n      operationId: post-api-pause-download\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDownloadRequest'\n        description: ''\n      description: \"Pause a single download using its download_id.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/pauseAllDownloads:\n    post:\n      tags:\n        - downloader\n      summary: Pauses all downloads\n      operationId: post-api-pause-all-downloads\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/resumeDownload:\n    post:\n      summary: Resume one download\n      operationId: post-api-resume-download\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDownloadRequest'\n        description: ''\n      description: \"Resume a single download using its download_id.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/resumeAllDownloads:\n    post:\n      tags:\n        - downloader\n      summary: Resumes all downloads\n      operationId: post-api-resume-all-downloads\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/restartDownload:\n    post:\n      summary: Restart one download\n      operationId: post-api-restart-download\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDownloadRequest'\n        description: ''\n      description: \"Restart a single download using its download_id.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/cancelDownload:\n    post:\n      summary: Cancel one download\n      operationId: post-api-cancel-download\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDownloadRequest'\n        description: ''\n      description: \"Cancel a single download using its download_id.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/clearDownload:\n    post:\n      summary: Clear one download\n      operationId: post-api-clear-download\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDownloadRequest'\n        description: ''\n      description: \"Clears a single download from the downloaded list using its download_id.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/clearDownloads:\n    post:\n      summary: Clear multiple downloads\n      operationId: post-api-clear-downloads\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClearDownloadsRequest'\n        description: ''\n      description: \"Clears multiple downloads based on a given filter.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - downloader\n  /api/getTask:\n    post:\n      summary: Get info for one task\n      operationId: post-api-get-task\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetTaskResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetTaskRequest'\n        description: ''\n      description: \"Gets a single task using its key.\"\n      security:\n        - Auth query parameter: []\n      tags:\n        - tasks\n  /api/getTasks:\n    post:\n      tags:\n        - tasks\n      summary: Get tasks\n      operationId: post-api-get-tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllTasksResponse'\n  /api/resetTasks:\n    post:\n      tags:\n        - tasks\n      summary: Resets all tasks\n      operationId: post-api-reset-tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      security:\n        - Auth query parameter: []\n  /api/runTask:\n    post:\n      tags:\n        - tasks\n      summary: Runs one task\n      operationId: post-api-run-task\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetTaskRequest'\n  /api/confirmTask:\n    post:\n      tags:\n        - tasks\n      summary: Confirms a task\n      operationId: post-api-confirm-task\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetTaskRequest'\n  /api/cancelTask:\n    post:\n      tags:\n        - tasks\n      summary: Cancels a task\n      operationId: post-api-cancel-task\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetTaskRequest'\n  /api/updateTaskSchedule:\n    post:\n      tags:\n        - tasks\n      summary: Updates task schedule\n      operationId: post-api-update-task-schedule\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTaskScheduleRequest'\n  /api/updateTaskData:\n    post:\n      tags:\n        - tasks\n      summary: Updates task data\n      operationId: post-api-update-task-data\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTaskDataRequest'\n  /api/getDBBackups:\n    post:\n      tags:\n        - tasks\n      summary: Get database backups\n      operationId: post-api-get-database-backups\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDBBackupsResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n  /api/restoreDBBackup:\n    post:\n      tags:\n        - tasks\n      summary: Restore database backup\n      operationId: post-api-restore-database-backup\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreDBBackupRequest'\n  /api/auth/login:\n    post:\n      summary: Login\n      operationId: post-api-auth-login\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginResponse'\n      description: Use this method to log into a user using their username and password and receive a jwt auth token so you can send per-user requests.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/auth/register:\n    post:\n      summary: Register\n      operationId: post-api-auth-register\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterResponse'\n      description: Use this endpoint to register a user. It will only work if registration is enabled.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterRequest'\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/updateUser:\n    post:\n      summary: Update user\n      operationId: post-api-updateUser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n      description: Updates certain properties for a user. Only two are possible right now.\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/deleteUser:\n    post:\n      summary: Delete user\n      operationId: post-api-deleteUser\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      description: Deletes a user by its uid.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteUserRequest'\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/getRoles:\n    post:\n      summary: Get available roles\n      operationId: post-api-getRoles\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRolesResponse'\n      description: Gets the available roles and their permissions\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/changeUserPermissions:\n    post:\n      summary: Change user permissions\n      operationId: post-api-changeUserPermissions\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      description: \"Changes the permissions for a user. Available values for each permission are: `default`, `yes`, and `no`. `default` will use the user's role's default permission.\"\n      security:\n        - Auth query parameter: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeUserPermissionsRequest'\n      tags:\n        - multi-user mode\n  /api/changeRolePermissions:\n    post:\n      summary: Change role permissions\n      operationId: post-api-changeRolePermissions\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeRolePermissionsRequest'\n      description: 'Changes the permissions for a role. Available values for each permission are: `yes`, and `no`.'\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/getUsers:\n    post:\n      summary: Get all users\n      operationId: post-api-getUsers\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetUsersResponse'\n      description: 'Gets all users, returns a list of the user objects including their user permissions, videos, playlists, subscriptions, etc.'\n      security:\n        - Auth query parameter: []\n      tags:\n        - multi-user mode\n  /api/versionInfo:\n    get:\n      tags:\n        - server\n      summary: Gets server version info\n      operationId: get-api-versionInfo\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionInfoResponse'\n      security:\n        - Auth query parameter: []\n  /api/getLogs:\n    post:\n      summary: Gets logs from server\n      tags:\n        - server\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLogsResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetLogsRequest'\n      operationId: post-api-getLogs\n      description: Gets logs from server\n      security:\n        - Auth query parameter: []\n  /api/clearAllLogs:\n    post:\n      summary: Clears the log file\n      tags:\n        - server\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      operationId: post-api-clearAllLogs\n      description: Clears the log file\n      security:\n        - Auth query parameter: []\n  /api/getDBInfo:\n    get:\n      tags:\n        - db\n      summary: Gets information on the DB\n      operationId: get-api-getDBInfo\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DBInfoResponse'\n      security:\n        - Auth query parameter: []\n  /api/transferDB:\n    post:\n      summary: Transfers DB between Local and MongoDB\n      tags:\n        - db\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransferDBResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransferDBRequest'\n      operationId: post-api-transferDB\n      description: Initiates a transfer between Local and MongoDB. Connection string must be set.\n      security:\n        - Auth query parameter: []\n  /api/testConnectionString:\n    post:\n      summary: Tests a MongoDB connection string\n      tags:\n        - db\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestConnectionStringResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestConnectionStringRequest'\n      operationId: post-api-testConnectionString\n      description: Tests a MongoDB connection string and returns an error if one exists.\n      security:\n        - Auth query parameter: []\n  /api/getFullTwitchChat:\n    post:\n      summary: Gets the downloaded Twitch Chat (VODs only)\n      tags:\n        - twitch\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetFullTwitchChatResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetFullTwitchChatRequest'\n      operationId: post-api-getFullTwitchChat\n      description: Gets the downloaded Twitch Chat (VODs only)\n      security:\n        - Auth query parameter: []\n  /api/downloadTwitchChatByVODID:\n    post:\n      summary: Downloads Twitch Chat for a VOD\n      tags:\n        - twitch\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownloadTwitchChatByVODIDResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownloadTwitchChatByVODIDRequest'\n      operationId: post-api-downloadTwitchChatByVODID\n      description: Downloads Twitch Chat for a VOD\n      security:\n        - Auth query parameter: []\n  /api/checkConcurrentStream:\n    post:\n      summary: Checks status of a concurrent stream\n      tags:\n        - player\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckConcurrentStreamResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckConcurrentStreamRequest'\n      operationId: post-api-checkConcurrentStream\n      description: Checks status of a concurrent stream\n      security:\n        - Auth query parameter: []\n  /api/updateConcurrentStream:\n    post:\n      summary: Updates a concurrent stream\n      tags:\n        - player\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateConcurrentStreamResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateConcurrentStreamRequest'\n      operationId: post-api-updateConcurrentStream\n      description: Updates a concurrent stream\n      security:\n        - Auth query parameter: []\n  /api/getAllCategories:\n    post:\n      summary: Gets all categories\n      tags:\n        - categories\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllCategoriesResponse'\n      operationId: post-api-getAllCategories\n      description: Gets all categories\n      security:\n        - Auth query parameter: []\n  /api/createCategory:\n    post:\n      summary: Creates a category\n      tags:\n        - categories\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateCategoryResponse'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCategoryRequest'\n      operationId: post-api-createCategory\n      description: Creates a category\n      security:\n        - Auth query parameter: []\n  /api/deleteCategory:\n    post:\n      summary: Deletes a category\n      tags:\n        - categories\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteCategoryRequest'\n      operationId: post-api-deleteCategory\n      description: Deletes a category\n      security:\n        - Auth query parameter: []\n  /api/updateCategory:\n    post:\n      summary: Updates a category\n      tags:\n        - categories\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCategoryRequest'\n      operationId: post-api-updateCategory\n      description: Updates a category\n      security:\n        - Auth query parameter: []\n  /api/updateCategories:\n    post:\n      summary: Updates all categories\n      tags:\n        - categories\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessObject'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCategoriesRequest'\n      operationId: post-api-updateCategories\n      description: Updates all categories\n      security:\n        - Auth query parameter: []\ncomponents:\n  schemas:\n    SuccessObject:\n      required:\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        error:\n          type: string\n    FileType:\n      type: string\n      enum:\n        - audio\n        - video\n    CropFileSettings:\n      type: object\n      required:\n        - cropFileStart\n        - cropFileEnd\n      properties:\n        cropFileStart:\n          type: number\n        cropFileEnd:\n          type: number\n    Config:\n      required:\n        - YoutubeDLMaterial\n      type: object\n      properties:\n        YoutubeDLMaterial:\n          type: object\n    DownloadRequest:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          type: string\n        customQualityConfiguration:\n          type: string\n          description: Video format code. Overrides other quality options.\n          example: '251'\n        customArgs:\n          type: string\n          description: Custom command-line arguments for youtube-dl. Overrides all other options, except url.\n        additionalArgs:\n          type: string\n          description: Additional command-line arguments for youtube-dl. Added to whatever args would normally be used.\n        customOutput:\n          type: string\n          description: Custom output filename template.\n        youtubeUsername:\n          type: string\n          description: Login with this account ID\n        youtubePassword:\n          type: string\n          description: Account password\n        selectedHeight:\n          type: string\n          description: Height of the video, if known\n          example: '1080'\n        maxBitrate:\n          type: string\n          description: Specify ffmpeg/avconv audio quality\n          example: '160'      \n        type:\n          $ref: '#/components/schemas/FileType'\n        cropFileSettings:\n          $ref: '#/components/schemas/CropFileSettings'\n    DownloadResponse:\n      type: object\n      properties:\n        download:\n          $ref: '#/components/schemas/Download'\n    GenerateArgsResponse:\n      type: object\n      properties:\n        args:\n          type: array\n          items:\n            type: string\n    GetDownloadRequest:\n      type: object\n      properties:\n        download_uid:\n          type: string\n      required:\n        - download_uid\n    GetDownloadResponse:\n      type: object\n      properties:\n        download:\n          $ref: '#/components/schemas/Download'\n    GetAllDownloadsRequest:\n      type: object\n      properties:\n        uids:\n          type: array\n          items:\n            type: string\n          description: Filters downloads with the array\n          nullable: true\n    GetAllDownloadsResponse:\n      type: object\n      properties:\n        downloads:\n          type: array\n          items:\n            $ref: '#/components/schemas/Download'\n    ClearDownloadsRequest:\n      type: object\n      properties:\n        clear_finished:\n          type: boolean\n        clear_paused:\n          type: boolean\n        clear_errors:\n          type: boolean\n    GetTaskRequest:\n      type: object\n      properties:\n        task_key:\n          type: string\n      required:\n        - task_key\n    UpdateTaskScheduleRequest:\n      type: object\n      properties:\n        task_key:\n          type: string\n        new_schedule:\n          $ref: '#/components/schemas/Schedule'\n      required:\n        - task_key\n        - new_schedule\n    UpdateTaskDataRequest:\n      type: object\n      properties:\n        task_key:\n          type: string\n        new_data:\n          type: object\n      required:\n        - task_key\n        - new_data\n    GetTaskResponse:\n      type: object\n      properties:\n        task:\n          $ref: '#/components/schemas/Task'\n    GetAllTasksResponse:\n      type: object\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Task'\n    GetDBBackupsResponse:\n      type: object\n      properties:\n        tasks:\n          type: array\n          items:\n            $ref: '#/components/schemas/DBBackup'\n    RestoreDBBackupRequest:\n      type: object\n      required:\n        - file_name\n      properties:\n        file_name:\n          type: string\n    GetMp3sResponse:\n      required:\n        - mp3s\n        - playlists\n      type: object\n      properties:\n        mp3s:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatabaseFile'\n        playlists:\n          type: array\n          description: All audio playlists\n          items:\n            $ref: '#/components/schemas/Playlist'\n    GetMp4sResponse:\n      required:\n        - mp4s\n        - playlists\n      type: object\n      properties:\n        mp4s:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatabaseFile'\n        playlists:\n          type: array\n          description: All video playlists\n          items:\n            $ref: '#/components/schemas/Playlist'\n    GetAllFilesRequest:\n      type: object\n      properties:\n        sort:\n          $ref: '#/components/schemas/Sort'\n        range:\n          type: array\n          items:\n            type: number\n            description: Two elements allowed, start index and end index\n          minItems: 2\n          maxItems: 2\n        text_search:\n          type: string\n          description: Filter files by title\n        file_type_filter:\n          $ref: '#/components/schemas/FileTypeFilter'\n        sub_id:\n          type: string\n          description: Include if you want to filter by subscription\n    Sort:\n      type: object\n      properties:\n        by:\n          type: string\n          description: Property to sort by\n        order:\n          type: number\n          description: 1 for ascending, -1 for descending\n    FileTypeFilter:\n      type: string\n      enum:\n        - audio_only\n        - video_only\n        - both\n    GetAllFilesResponse:\n      required:\n        - files\n        - playlists\n      type: object\n      properties:\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/DatabaseFile'\n        playlists:\n          type: array\n          description: All video playlists\n          items:\n            $ref: '#/components/schemas/Playlist'\n    GetFileRequest:\n      required:\n        - uid\n      type: object\n      properties:\n        uid:\n          type: string\n          description: Video UID\n        type:\n          $ref: '#/components/schemas/FileType'\n        uuid:\n          type: string\n          description: User UID\n    GetFileResponse:\n      required:\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        file:\n          $ref: '#/components/schemas/DatabaseFile'\n    UpdateFileRequest:\n      required:\n        - uid\n        - change_obj\n      type: object\n      properties:\n        uid:\n          type: string\n          description: Video UID\n        change_obj:\n          type: object\n          description: Object with fields to update as keys and their new values\n    SharingToggle:\n      required:\n        - uid\n      type: object\n      properties:\n        uid:\n          type: string\n        is_playlist:\n          type: boolean\n    SubscribeRequest:\n      required:\n        - name\n        - url\n      type: object\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        timerange:\n          type: string\n        audioOnly:\n          type: boolean\n        customArgs:\n          type: string\n        customFileOutput:\n          type: string\n        maxQuality:\n          type: string\n    SubscribeResponse:\n      required:\n        - new_sub\n      type: object\n      properties:\n        new_sub:\n          $ref: '#/components/schemas/Subscription'\n        error:\n          type: string\n    UnsubscribeRequest:\n      required:\n        - sub\n      type: object\n      properties:\n        sub:\n          $ref: '#/components/schemas/SubscriptionRequestData'\n        deleteMode:\n          type: boolean\n          description: Defaults to false\n    UnsubscribeResponse:\n      required:\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        error:\n          type: string\n    DeleteAllFilesResponse:\n      type: object\n      properties:\n        file_count:\n          type: number\n          description: Number of files found matching search parameters\n        delete_count:\n          type: number\n          description: Number of files removed\n    DeleteSubscriptionFileRequest:\n      required:\n        - file\n        - sub\n      type: object\n      properties:\n        file:\n          type: string\n        file_uid:\n          type: string\n        sub:\n          $ref: '#/components/schemas/SubscriptionRequestData'\n        deleteForever:\n          type: boolean\n          description: 'If true, does not remove id from archive. Only valid if youtube-dl archive is enabled in settings.'\n    GetSubscriptionRequest:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Subscription ID\n        name:\n          type: string\n          description: Subscription name\n    GetSubscriptionResponse:\n      required:\n        - files\n        - subscription\n      type: object\n      properties:\n        subscription:\n          $ref: '#/components/schemas/Subscription'\n        files:\n          type: array\n          items:\n            type: object\n    DownloadVideosForSubscriptionRequest:\n      required:\n        - subID\n      type: object\n      properties:\n        subID:\n          type: string\n    GetAllSubscriptionsResponse:\n      required:\n        - subscriptions\n      type: object\n      properties:\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n    CreatePlaylistRequest:\n      required:\n        - uids\n        - playlistName\n        - thumbnailURL\n      type: object\n      properties:\n        playlistName:\n          type: string\n        uids:\n          type: array\n          items:\n            type: string\n        thumbnailURL:\n          type: string\n    CreatePlaylistResponse:\n      required:\n        - new_playlist\n        - success\n      type: object\n      properties:\n        new_playlist:\n          $ref: '#/components/schemas/Playlist'\n        success:\n          type: boolean\n    GetPlaylistRequest:\n      required:\n        - playlist_id\n      type: object\n      properties:\n        playlist_id:\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        uuid:\n          type: string\n        include_file_metadata:\n          type: boolean\n    GetPlaylistResponse:\n      required:\n        - playlist\n        - success\n      type: object\n      properties:\n        playlist:\n          $ref: '#/components/schemas/Playlist'\n        success:\n          type: boolean\n        file_objs:\n          type: array\n          description: File objects for every uid in the playlist's uids property, in the same order\n          items:\n            $ref: '#/components/schemas/DatabaseFile'\n    GetPlaylistsRequest:\n      type: object\n      properties:\n        include_categories:\n          type: boolean\n    GetPlaylistsResponse:\n      required:\n        - playlists\n      type: object\n      properties:\n        playlists:\n          type: array\n          items:\n            $ref: '#/components/schemas/Playlist'\n    UpdatePlaylistRequest:\n      required:\n        - playlist\n      type: object\n      properties:\n        playlist:\n          $ref: '#/components/schemas/Playlist'\n    DeletePlaylistRequest:\n      required:\n        - playlist_id\n      type: object\n      properties:\n        playlist_id:\n          type: string\n    DownloadFileRequest:\n      type: object\n      properties:\n        uid:\n          type: string\n        uuid:\n          type: string\n        sub_id:\n          type: string\n        playlist_id:\n          type: string\n        url:\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n    DownloadArchiveRequest:\n      required:\n        - sub\n      type: object\n      properties:\n        sub:\n          required:\n            - archive_dir\n          type: object\n          properties:\n            archive_dir:\n              type: string\n    UpdaterStatus:\n      required:\n        - details\n        - updating\n      type: object\n      properties:\n        updating:\n          type: boolean\n        details:\n          type: string\n        error:\n          type: boolean\n    UpdateServerRequest:\n      required:\n        - tag\n      type: object\n      properties:\n        tag:\n          type: string\n    DBInfoResponse:\n      required:\n        - db_info\n      type: object\n      properties:\n        using_local_db:\n          type: boolean\n        stats_by_table:\n          type: object\n          properties:\n            files:\n              $ref: '#/components/schemas/TableInfo'\n            playlists:\n              $ref: '#/components/schemas/TableInfo'\n            categories:\n              $ref: '#/components/schemas/TableInfo'\n            subscriptions:\n              $ref: '#/components/schemas/TableInfo'\n            users:\n              $ref: '#/components/schemas/TableInfo'\n            roles:\n              $ref: '#/components/schemas/TableInfo'\n            download_queue:\n              $ref: '#/components/schemas/TableInfo'\n    TransferDBResponse:\n      required:\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        error:\n          type: string\n    TransferDBRequest:\n      required:\n        - local_to_remote\n      type: object\n      properties:\n        local_to_remote:\n          description: True if transfering DB from Local to MongoDB, false if transferring DB from MongoDB to Local\n          type: boolean\n    TestConnectionStringResponse:\n      required:\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        error:\n          type: string\n    TestConnectionStringRequest:\n      required:\n        - connection_string\n      type: object\n      properties:\n        connection_string:\n          description: MongoDB connection string\n          type: string\n    GetFullTwitchChatResponse:\n      required:\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        error:\n          type: string\n    GetFullTwitchChatRequest:\n      required:\n        - id\n        - type\n      type: object\n      properties:\n        id:\n          description: File ID\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        uuid:\n          description: User UID\n          type: string\n        sub:\n          $ref: '#/components/schemas/Subscription'\n    DownloadTwitchChatByVODIDResponse:\n      required:\n        - chat\n      type: object\n      properties:\n        chat:\n          type: array\n          items:\n            $ref: '#/components/schemas/TwitchChatMessage'\n    DownloadTwitchChatByVODIDRequest:\n      required:\n        - id\n        - type\n        - vodId\n      type: object\n      properties:\n        id:\n          description: File ID\n          type: string\n        vodId:\n          description: ID of the VOD\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        uuid:\n          description: User UID\n          type: string\n        sub:\n          $ref: '#/components/schemas/Subscription'\n    CheckConcurrentStreamResponse:\n      required:\n        - stream\n      type: object\n      properties:\n        stream:\n          $ref: '#/components/schemas/ConcurrentStream'\n    CheckConcurrentStreamRequest:\n      required:\n        - uid\n      type: object\n      properties:\n        uid:\n          description: UID of the concurrent stream\n          type: string\n    UpdateConcurrentStreamResponse:\n      required:\n        - stream\n      type: object\n      properties:\n        stream:\n          $ref: '#/components/schemas/ConcurrentStream'\n    UpdateConcurrentStreamRequest:\n      allOf:\n        - $ref: '#/components/schemas/ConcurrentStream'\n        - type: object\n          properties:\n            uid:\n              type: string\n              description: Concurrent stream UID\n          required:\n            - uid\n    GetLogsResponse:\n      type: object\n      properties:\n        logs:\n          type: string\n          description: Number of lines to retrieve from the bottom\n        success:\n          type: boolean\n    GetLogsRequest:\n      required:\n        - connection_string\n      type: object\n      properties:\n        lines:\n          type: number\n    GetFileFormatsRequest:\n      type: object\n      properties:\n        url:\n          type: string\n    GetFileFormatsResponse:\n      required:\n        - result\n        - success\n      type: object\n      properties:\n        success:\n          type: boolean\n        result:\n          allOf:\n          - type: object\n            properties:\n              formats:\n                type: array\n                items:\n                  type: object\n    IncrementViewCountRequest:\n      required:\n        - file_uid\n      type: object\n      properties:\n        file_uid:\n          type: string\n        sub_id:\n          type: string\n        uuid:\n          type: string\n          description: User UID\n    AddFileToPlaylistRequest:\n      required:\n        - playlist_id\n        - file_uid\n      type: object\n      properties:\n        file_uid:\n          type: string\n        playlist_id:\n          type: string\n    GetAllCategoriesResponse:\n      required:\n        - categories\n      type: object\n      properties:\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n    CreateCategoryResponse:\n      type: object\n      properties:\n        new_category:\n          $ref: '#/components/schemas/Category'\n        success:\n          type: boolean\n    CreateCategoryRequest:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n    DeleteCategoryRequest:\n      required:\n        - category_uid\n      type: object\n      properties:\n        category_uid:\n          type: string\n    UpdateCategoryRequest:\n      required:\n        - category\n      type: object\n      properties:\n        category:\n          $ref: '#/components/schemas/Category'\n    UpdateCategoriesRequest:\n      required:\n        - categories\n      type: object\n      properties:\n        categories:\n          type: array\n          items:\n            $ref: '#/components/schemas/Category'\n    VersionInfoResponse:\n      required:\n        - version_info\n      type: object\n      properties:\n        version_info:\n          $ref: '#/components/schemas/Version'\n    inline_response_200_15:\n      required:\n        - is_set\n      type: object\n      properties:\n        is_set:\n          type: boolean\n    body_19:\n      required:\n        - input_pin\n      type: object\n      properties:\n        input_pin:\n          type: string\n    body_20:\n      required:\n        - unhashed_pin\n      type: object\n      properties:\n        unhashed_pin:\n          type: string\n    GenerateNewApiKeyResponse:\n      required:\n        - new_api_key\n      type: object\n      properties:\n        new_api_key:\n          type: string\n          example: 4241b401-7236-493e-92b5-b72696b9d853\n    DeleteMp3Mp4Request:\n      required:\n        - uid\n      type: object\n      properties:\n        uid:\n          type: string\n        blacklistMode:\n          type: boolean\n    ConfigResponse:\n      required:\n        - config_file\n        - success\n      type: object\n      properties:\n        config_file:\n          $ref: '#/components/schemas/Config'\n        success:\n          type: boolean\n    SetConfigRequest:\n      required:\n        - new_config_file\n      type: object\n      properties:\n        new_config_file:\n          $ref: '#/components/schemas/Config'\n    DatabaseFile:\n      required:\n        - duration\n        - id\n        - isAudio\n        - path\n        - size\n        - thumbnailURL\n        - title\n        - uid\n        - upload_date\n        - uploader\n        - url\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        thumbnailURL:\n          type: string\n          description: Backup if thumbnailPath is not defined\n        thumbnailPath:\n          type: string\n        isAudio:\n          type: boolean\n        duration:\n          type: number\n          description: In seconds\n        url:\n          type: string\n        uploader:\n          type: string\n        size:\n          type: number\n          description: In bytes\n        path:\n          type: string\n        upload_date:\n          type: string\n        uid:\n          type: string\n        sharingEnabled:\n          type: boolean\n        category:\n          $ref: '#/components/schemas/Category'\n        view_count:\n          type: number\n        local_view_count:\n          type: number\n        sub_id:\n          type: string\n        registered:\n          type: number\n        height:\n          type: number\n          description: In pixels, only for videos\n        abr:\n          type: number\n          description: In Kbps\n    Playlist:\n      required:\n        - uids\n        - id\n        - name\n        - thumbnailURL\n        - type\n        - registered\n        - duration\n      type: object\n      properties:\n        name:\n          type: string\n        uids:\n          type: array\n          items:\n            type: string\n        id:\n          type: string\n        thumbnailURL:\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        registered:\n          type: number\n        duration:\n          type: number\n        user_uid:\n          type: string\n        auto:\n          type: boolean\n    Download:\n      required:\n        - url\n        - type\n        - title\n        - options\n        - uid\n        - step_index\n        - paused\n        - running\n        - finished_step\n        - percent_complete\n        - finished\n        - timestamp_start\n      type: object\n      properties:\n        uid:\n          type: string\n        ui_uid:\n          type: string\n        running:\n          type: boolean\n        finished:\n          type: boolean\n        paused:\n          type: boolean\n        finished_step:\n          type: boolean\n        url:\n          type: string\n        type:\n          type: string\n        title:\n          type: string\n        step_index:\n          type: number\n        percent_complete:\n          type: number\n        timestamp_start:\n          type: number\n        error:\n          type: string\n          description: Error text, set if download fails.\n          nullable: true\n        user_uid:\n          type: string\n        sub_id:\n          type: string\n        sub_name:\n          type: string\n        prefetched_info:\n          type: object\n    Task:\n      required:\n        - key\n        - last_ran\n        - last_confirmed\n        - running\n        - confirming\n        - data\n        - error\n        - schedule\n      type: object\n      properties:\n        key:\n          type: string\n        title:\n          type: string\n        last_ran:\n          type: number\n        last_confirmed:\n          type: number\n        running:\n          type: boolean\n        confirming:\n          type: boolean\n        data:\n          type: object\n        error:\n          type: string\n        schedule:\n          type: object\n    Schedule:\n      required:\n        - type\n        - data\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - timestamp\n            - recurring\n        data:\n          type: object\n          properties:\n            dayOfWeek:\n              type: array\n              items:\n                type: number\n            hour:\n              type: number\n            minute:\n              type: number\n            timestamp:\n              type: number\n    DBBackup:\n      required:\n        - name\n        - timestamp\n        - size\n        - source\n      type: object\n      properties:\n        name:\n          type: string\n        timestamp:\n          type: number\n        size:\n          type: number\n        source:\n          type: string\n          enum:\n            - local\n            - remote\n    SubscriptionRequestData:\n      required:\n        - id\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        isPlaylist:\n          type: boolean\n        archive:\n          type: string\n    Subscription:\n      required:\n        - id\n        - name\n        - url\n        - type\n        - user_uid\n        - isPlaylist\n        - videos\n      type: object\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        id:\n          type: string\n        type:\n          $ref: '#/components/schemas/FileType'\n        user_uid:\n          type: string\n          nullable: true\n        isPlaylist:\n          type: boolean\n        archive:\n          type: string\n        timerange:\n          type: string\n        custom_args:\n          type: string\n        custom_output:\n          type: string\n        videos:\n          type: array\n          items:\n            type: object\n    User:\n      title: user\n      type: object\n      properties:\n        uid:\n          type: string\n        name:\n          type: string\n        passhash:\n          type: string\n        subscriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n        created:\n          type: number\n        role:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserPermission'\n        permission_overrides:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserPermission'\n    UserPermission:\n      type: string\n      enum:\n        - filemanager\n        - settings\n        - subscriptions\n        - sharing\n        - advanced_download\n        - downloads_manager\n    YesNo:\n      type: string\n      enum:\n        - 'yes'\n        - 'no'\n    TableInfo:\n      type: object\n      properties:\n        records_count:\n          type: number\n    TwitchChatMessage:\n      type: object\n      properties:\n        created_at:\n          type: string\n        content_offset_seconds:\n          type: number\n        commenter:\n          type: object\n          properties:\n            name:\n              type: string\n            _id:\n              type: string\n            created_at:\n              type: string\n        message:\n          type: object\n          properties:\n            body:\n              type: string\n            user_color:\n              type: string\n    ConcurrentStream:\n      type: object\n      properties:\n        playback_timestamp:\n          type: number\n        unix_timestamp:\n          type: number\n        playing:\n          type: boolean\n    Category:\n      type: object\n      properties:\n        name:\n          type: string\n        uid:\n          type: string\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/CategoryRule'\n        custom_output:\n          type: string\n          description: Overrides file output for downloaded files in category\n    CategoryRule:\n      type: object\n      properties:\n        preceding_operator:\n          type: string\n          enum:\n            - 'or'\n            - 'and'\n        comparator:\n          type: string\n          enum:\n            - 'includes'\n            - 'not_includes'\n            - 'equals'\n            - 'not_equals'\n    Version:\n      type: object\n      properties:\n        type:\n          type: string\n        tag:\n          type: string\n        commit:\n          type: string\n        date:\n          type: string\n    BaseChangePermissionsRequest:\n      required:\n        - permission\n        - new_value\n      type: object\n      properties:\n        permission:\n          $ref: '#/components/schemas/UserPermission'\n        new_value:\n          $ref: '#/components/schemas/YesNo'\n    ChangeUserPermissionsRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseChangePermissionsRequest'\n        - type: object\n          properties:\n            user_uid:\n              type: string\n          required:\n            - user_uid\n    ChangeRolePermissionsRequest:\n      allOf:\n        - $ref: '#/components/schemas/BaseChangePermissionsRequest'\n        - type: object\n          properties:\n            role:\n              type: string\n          required:\n            - role\n    file:\n      title: file\n      type: object\n      properties:\n        id:\n          type: string\n    RegisterRequest:\n      required:\n        - userid\n        - username\n        - password\n      type: object\n      properties:\n        userid:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n    RegisterResponse:\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n    LoginRequest:\n      required:\n        - username\n        - password\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n    LoginResponse:\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n        token:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserPermission'\n        available_permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserPermission'\n    UpdateUserRequest:\n      required:\n        - change_object\n      type: object\n      properties:\n        change_object:\n          required:\n            - uid\n          type: object\n          properties:\n            uid:\n              type: string\n            name:\n              type: string\n            role:\n              type: string\n    DeleteUserRequest:\n      required:\n        - uid\n      type: object\n      properties:\n        uid:\n          type: string\n    GetUsersResponse:\n      required:\n        - users\n      type: object\n      properties:\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n    GetRolesResponse:\n      required:\n        - roles\n      type: object\n      properties:\n        roles:\n          type: object\n          properties:\n            admin:\n              type: object\n              properties:\n                permissions:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UserPermission'\n            user:\n              type: object\n              properties:\n                permissions:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UserPermission'\n  securitySchemes:\n    Auth query parameter:\n      name: apiKey\n      type: apiKey\n      in: query\n      description: Use your public API key generated from the settings menu\n    JWT token parameter:\n      name: jwt\n      type: apiKey\n      in: query\n      description: 'User-specific authentication token, only used in multi-user mode. Retrieve this token by using the login endpoint'\n",
			"canonicalURL": "/github.com/Tzahi12345/YoutubeDL-Material@9c0a77cb6e4d3e36234ef58b9828b19a0404c528/-/blob/Public%20API%20v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Tzahi12345/YoutubeDL-Material/blob/9c0a77cb6e4d3e36234ef58b9828b19a0404c528/Public API v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: securitySchemes: at 1:23278: invalid name: \"Auth query parameter\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}