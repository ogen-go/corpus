{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-core"
		},
		"file": {
			"name": "petstore-3.1_refs_siblings.yaml",
			"size": 0,
			"path": "modules/swagger-core/src/test/resources/specFiles/3.1.0/petstore-3.1_refs_siblings.yaml",
			"byteSize": 3587,
			"content": "openapi: \"3.1.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  summary: petstore sample for OAS 3.1.0\n  license:\n    name: MIT\n    identifier: test\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /ref_pet:\n    $ref: '#/components/pathItems/pet'\n    description: \"ref pathItem description\"\n    summary: \"ref pathItem summary\"\n  /pets:\n    post:\n      tags:\n        - pets\n      summary: Create a pet\n      operationId: createPets\n      parameters:\n        - $ref: '#/components/parameters/testParameter'\n          description: \"ref parameter description\"\n          summary: \"ref parameter summary\"\n        - name: randomParam\n          in: query\n          schema:\n            type: string\n          examples:\n            refExample:\n              $ref: '#/components/examples/testExample'\n              description: \"ref example description\"\n              summary: \"ref example summary\"\n      callbacks:\n        callIt:\n          $ref: '#/components/callbacks/TestCallback'\n      requestBody:\n        $ref: '#/components/requestBodies/body'\n        description: \"ref request body description\"\n        summary: \"ref request body summary\"\n      responses:\n        \"201\":\n          $ref: '#/components/responses/okResponse'\n          description: \"ref response description\"\n          summary: \"ref response summary\"\n        default:\n          description: 'default response'\n          headers:\n            head:\n              $ref: '#/components/headers/head'\n              description: \"ref header description\"\n              summary: \"ref header summary\"\n\n\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n      discriminator:\n        propertyName: tag\n        x-test-extension: extended\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n        description: desc\n        format: int32\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    AnotherPet:\n      title: Another Pet\n      description: Another Pet for petstore referencing Pet schema\n      $ref: \"#/components/schemas/Pet\"\n      properties:\n        category:\n          type: string\n        photoUrl:\n          type: string\n  pathItems:\n    pet:\n      description: get a pet\n      get:\n        operationId: getPet\n        responses:\n          \"200\":\n            description: pet returned\n  links:\n    address:\n      operationId: getUserAddressByUUID\n      parameters:\n        # get the `uuid` field from the `uuid` field in the response body\n        userUuid: $response.body#/uuid\n  callbacks:\n    TestCallback:\n      '{$request.query.queryUrl}':\n        description: test path item\n        post:\n          operationId: testPathItem\n          responses:\n            default:\n              description: ok\n  securitySchemes:\n    basic:\n      $ref: \"#/components/securitySchemes/http\"\n    http:\n      type: http\n      scheme: basic\n  headers:\n    head:\n      schema:\n        type: string\n  requestBodies:\n    body:\n      description: client model\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n  responses:\n    okResponse:\n      description: everything is good\"\n  examples:\n    testExample:\n      value: Example on test\n  parameters:\n    testParameter:\n      name: param\n      in: query\n      schema:\n        type: string\n",
			"canonicalURL": "/github.com/swagger-api/swagger-core@259355ab5088fe15e1c790aa36b53994e17639a1/-/blob/modules/swagger-core/src/test/resources/specFiles/3.1.0/petstore-3.1_refs_siblings.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/swagger-core/blob/259355ab5088fe15e1c790aa36b53994e17639a1/modules/swagger-core/src/test/resources/specFiles/3.1.0/petstore-3.1_refs_siblings.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/ref_pet\": at 1:2724: referenced pathItem not supported"
}