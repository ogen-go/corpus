{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "healthcare-v1beta1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/healthcare-v1beta1.yaml",
			"byteSize": 331955,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    ActivateConsentRequest:\n      description: Activates the latest revision of the specified Consent by committing\n        a new revision with `state` updated to `ACTIVE`. If the latest revision of\n        the given Consent is in the `ACTIVE` state, no new revision is committed.\n        A FAILED_PRECONDITION error occurs if the latest revision of the given consent\n        is in the `REJECTED` or `REVOKED` state.\n      properties:\n        consentArtifact:\n          description: Required. The resource name of the Consent artifact that contains\n            documentation of the user's consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.\n            If the draft Consent had a Consent artifact, this Consent artifact overwrites\n            it.\n          type: string\n        expireTime:\n          description: Timestamp in UTC of when this Consent is considered expired.\n          format: google-datetime\n          type: string\n        ttl:\n          description: The time to live for this Consent from when it is marked as\n            active.\n          format: google-duration\n          type: string\n      type: object\n    AnalyzeEntitiesRequest:\n      description: The request to analyze healthcare entities in a document.\n      properties:\n        documentContent:\n          description: document_content is a document to be annotated.\n          type: string\n        licensedVocabularies:\n          description: A list of licensed vocabularies to use in the request, in addition\n            to the default unlicensed vocabularies.\n          items:\n            enum:\n            - LICENSED_VOCABULARY_UNSPECIFIED\n            - ICD10CM\n            - SNOMEDCT_US\n            type: string\n          type: array\n      type: object\n    AnalyzeEntitiesResponse:\n      description: Includes recognized entity mentions and relationships between them.\n      properties:\n        entities:\n          description: The union of all the candidate entities that the entity_mentions\n            in this response could link to. These are UMLS concepts or normalized\n            mention content.\n          items:\n            $ref: '#/components/schemas/Entity'\n          type: array\n        entityMentions:\n          description: entity_mentions contains all the annotated medical entities\n            that were mentioned in the provided document.\n          items:\n            $ref: '#/components/schemas/EntityMention'\n          type: array\n        relationships:\n          description: relationships contains all the binary relationships that were\n            identified between entity mentions within the provided document.\n          items:\n            $ref: '#/components/schemas/EntityMentionRelationship'\n          type: array\n      type: object\n    Annotation:\n      description: An annotation record.\n      properties:\n        annotationSource:\n          $ref: '#/components/schemas/AnnotationSource'\n          description: Details of the source.\n        customData:\n          additionalProperties:\n            type: string\n          description: Additional information for this annotation record, such as\n            annotator and verifier information or study campaign.\n          type: object\n        imageAnnotation:\n          $ref: '#/components/schemas/ImageAnnotation'\n          description: Annotations for images. For example, bounding polygons.\n        name:\n          description: Resource name of the Annotation, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.\n          type: string\n        resourceAnnotation:\n          $ref: '#/components/schemas/ResourceAnnotation'\n          description: Annotations for resource. For example, classification tags.\n        textAnnotation:\n          $ref: '#/components/schemas/SensitiveTextAnnotation'\n          description: Annotations for sensitive texts. For example, a range that\n            describes the location of sensitive text.\n      type: object\n    AnnotationConfig:\n      description: Specifies how to store annotations during de-identification operation.\n      properties:\n        annotationStoreName:\n          description: The name of the annotation store, in the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`).\n            * The destination annotation store must be in the same project as the\n            source data. De-identifying data across multiple projects is not supported.\n            * The destination annotation store must exist when using DeidentifyDicomStore\n            or DeidentifyFhirStore. DeidentifyDataset automatically creates the destination\n            annotation store.\n          type: string\n        storeQuote:\n          description: If set to true, the sensitive texts are included in SensitiveTextAnnotation\n            of Annotation.\n          type: boolean\n      type: object\n    AnnotationSource:\n      description: AnnotationSource holds the source information of the annotation.\n      properties:\n        cloudHealthcareSource:\n          $ref: '#/components/schemas/CloudHealthcareSource'\n          description: Cloud Healthcare API resource.\n      type: object\n    AnnotationStore:\n      description: An Annotation store that can store annotation resources such as\n        labels and tags for text, image and audio.\n      properties:\n        labels:\n          additionalProperties:\n            type: string\n          description: 'Optional. User-supplied key-value pairs used to organize Annotation\n            stores. Label keys must be between 1 and 63 characters long, have a UTF-8\n            encoding of maximum 128 bytes, and must conform to the following PCRE\n            regular expression: \\p{Ll}\\p{Lo}{0,62} Label values must be between 1\n            and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and\n            must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n            No more than 64 labels can be associated with a given store.'\n          type: object\n        name:\n          description: Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.\n          type: string\n      type: object\n    ArchiveUserDataMappingRequest:\n      description: Archives the specified User data mapping.\n      properties: {}\n      type: object\n    ArchiveUserDataMappingResponse:\n      description: Archives the specified User data mapping.\n      properties: {}\n      type: object\n    Attribute:\n      description: An attribute value for a Consent or User data mapping. Each Attribute\n        must have a corresponding AttributeDefinition in the consent store that defines\n        the default and allowed values.\n      properties:\n        attributeDefinitionId:\n          description: Indicates the name of an attribute defined in the consent store.\n          type: string\n        values:\n          description: The value of the attribute. Must be an acceptable value as\n            defined in the consent store. For example, if the consent store defines\n            \"data type\" with acceptable values \"questionnaire\" and \"step-count\", when\n            the attribute name is data type, this field must contain one of those\n            values.\n          items:\n            type: string\n          type: array\n      type: object\n    AttributeDefinition:\n      description: A client-defined consent attribute.\n      properties:\n        allowedValues:\n          description: Required. Possible values for the attribute. The number of\n            allowed values must not exceed 500. An empty list is invalid. The list\n            can only be expanded after creation.\n          items:\n            type: string\n          type: array\n        category:\n          description: Required. The category of the attribute. The value of this\n            field cannot be changed after creation.\n          enum:\n          - CATEGORY_UNSPECIFIED\n          - RESOURCE\n          - REQUEST\n          type: string\n        consentDefaultValues:\n          description: Optional. Default values of the attribute in Consents. If no\n            default values are specified, it defaults to an empty value.\n          items:\n            type: string\n          type: array\n        dataMappingDefaultValue:\n          description: Optional. Default value of the attribute in User data mappings.\n            If no default value is specified, it defaults to an empty value. This\n            field is only applicable to attributes of the category `RESOURCE`.\n          type: string\n        description:\n          description: Optional. A description of the attribute.\n          type: string\n        name:\n          description: Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`.\n            Cannot be changed after creation.\n          type: string\n      type: object\n    AuditConfig:\n      description: 'Specifies the audit configuration for a service. The configuration\n        determines which permission types are logged, and what identities, if any,\n        are exempted from logging. An AuditConfig must have one or more AuditLogConfigs.\n        If there are AuditConfigs for both `allServices` and a specific service, the\n        union of the two AuditConfigs is used for that service: the log_types specified\n        in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig\n        are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\":\n        [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\",\n        \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\"\n        }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\",\n        \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\",\n        \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice,\n        this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also\n        exempts jose@example.com from DATA_READ logging, and aliya@example.com from\n        DATA_WRITE logging.'\n      properties:\n        auditLogConfigs:\n          description: The configuration for logging of each type of permission.\n          items:\n            $ref: '#/components/schemas/AuditLogConfig'\n          type: array\n        service:\n          description: Specifies a service that will be enabled for audit logging.\n            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices`\n            is a special value that covers all services.\n          type: string\n      type: object\n    AuditLogConfig:\n      description: 'Provides the configuration for logging a type of permissions.\n        Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\":\n        [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables\n        ''DATA_READ'' and ''DATA_WRITE'' logging, while exempting jose@example.com\n        from DATA_READ logging.'\n      properties:\n        exemptedMembers:\n          description: Specifies the identities that do not cause logging for this\n            type of permission. Follows the same format of Binding.members.\n          items:\n            type: string\n          type: array\n        logType:\n          description: The log type that this config enables.\n          enum:\n          - LOG_TYPE_UNSPECIFIED\n          - ADMIN_READ\n          - DATA_WRITE\n          - DATA_READ\n          type: string\n      type: object\n    BatchGetMessagesResponse:\n      description: Gets multiple messages in a specified HL7v2 store.\n      properties:\n        messages:\n          description: The returned Messages. See `MessageView` for populated fields.\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n      type: object\n    Binding:\n      description: Associates `members`, or principals, with a `role`.\n      properties:\n        condition:\n          $ref: '#/components/schemas/Expr'\n          description: The condition that is associated with this binding. If the\n            condition evaluates to `true`, then this binding applies to the current\n            request. If the condition evaluates to `false`, then this binding does\n            not apply to the current request. However, a different role binding might\n            grant the same role to one or more of the principals in this binding.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        members:\n          description: 'Specifies the principals requesting access for a Cloud Platform\n            resource. `members` can have the following values: * `allUsers`: A special\n            identifier that represents anyone who is on the internet; with or without\n            a Google account. * `allAuthenticatedUsers`: A special identifier that\n            represents anyone who is authenticated with a Google account or a service\n            account. * `user:{emailid}`: An email address that represents a specific\n            Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`:\n            An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.\n            * `group:{emailid}`: An email address that represents a Google group.\n            For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a user that has\n            been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\n            If the user is recovered, this value reverts to `user:{emailid}` and the\n            recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a service account\n            that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n            If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\n            and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a Google group\n            that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`.\n            If the group is recovered, this value reverts to `group:{emailid}` and\n            the recovered group retains the role in the binding. * `domain:{domain}`:\n            The G Suite domain (primary) that represents all the users of that domain.\n            For example, `google.com` or `example.com`. '\n          items:\n            type: string\n          type: array\n        role:\n          description: Role that is assigned to the list of `members`, or principals.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    BoundingPoly:\n      description: A bounding polygon for the detected image annotation.\n      properties:\n        label:\n          description: A description of this polygon.\n          type: string\n        vertices:\n          description: List of the vertices of this polygon.\n          items:\n            $ref: '#/components/schemas/Vertex'\n          type: array\n      type: object\n    CancelOperationRequest:\n      description: The request message for Operations.CancelOperation.\n      properties: {}\n      type: object\n    CharacterMaskConfig:\n      description: Mask a string by replacing its characters with a fixed character.\n      properties:\n        maskingCharacter:\n          description: Character to mask the sensitive values. If not supplied, defaults\n            to \"*\".\n          type: string\n      type: object\n    CheckDataAccessRequest:\n      description: Checks if a particular data_id of a User data mapping in the given\n        consent store is consented for a given use.\n      properties:\n        consentList:\n          $ref: '#/components/schemas/ConsentList'\n          description: Optional. Specific Consents to evaluate the access request\n            against. These Consents must have the same `user_id` as the evaluated\n            User data mapping, must exist in the current `consent_store`, and have\n            a `state` of either `ACTIVE` or `DRAFT`. A maximum of 100 Consents can\n            be provided here. If no selection is specified, the access request is\n            evaluated against all `ACTIVE` unexpired Consents with the same `user_id`\n            as the evaluated User data mapping.\n        dataId:\n          description: Required. The unique identifier of the resource to check access\n            for. This identifier must correspond to a User data mapping in the given\n            consent store.\n          type: string\n        requestAttributes:\n          additionalProperties:\n            type: string\n          description: The values of request attributes associated with this access\n            request.\n          type: object\n        responseView:\n          description: Optional. The view for CheckDataAccessResponse. If unspecified,\n            defaults to `BASIC` and returns `consented` as `TRUE` or `FALSE`.\n          enum:\n          - RESPONSE_VIEW_UNSPECIFIED\n          - BASIC\n          - FULL\n          type: string\n      type: object\n    CheckDataAccessResponse:\n      description: Checks if a particular data_id of a User data mapping in the given\n        consent store is consented for a given use.\n      properties:\n        consentDetails:\n          additionalProperties:\n            $ref: '#/components/schemas/ConsentEvaluation'\n          description: The resource names of all evaluated Consents mapped to their\n            evaluation.\n          type: object\n        consented:\n          description: Whether the requested resource is consented for the given use.\n          type: boolean\n      type: object\n    CloudHealthcareSource:\n      description: Cloud Healthcare API resource.\n      properties:\n        name:\n          description: Full path of a Cloud Healthcare API resource.\n          type: string\n      type: object\n    ConfigureSearchRequest:\n      description: Request to configure the search parameters for the specified FHIR\n        store.\n      properties:\n        canonicalUrls:\n          description: The canonical URLs of the search parameters that are intended\n            to be used for the FHIR store. See https://www.hl7.org/fhir/references.html#canonical\n            for explanation on FHIR canonical urls\n          items:\n            type: string\n          type: array\n        validateOnly:\n          description: If `validate_only` is set to true, the method will compile\n            all the search parameters without actually setting the search config for\n            the store and triggering the reindex.\n          type: boolean\n      type: object\n    Consent:\n      description: Represents a user's consent.\n      properties:\n        consentArtifact:\n          description: Required. The resource name of the Consent artifact that contains\n            proof of the end user's consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.\n          type: string\n        expireTime:\n          description: Timestamp in UTC of when this Consent is considered expired.\n          format: google-datetime\n          type: string\n        metadata:\n          additionalProperties:\n            type: string\n          description: 'Optional. User-supplied key-value pairs used to organize Consent\n            resources. Metadata keys must: - be between 1 and 63 characters long -\n            have a UTF-8 encoding of maximum 128 bytes - begin with a letter - consist\n            of up to 63 characters including lowercase letters, numeric characters,\n            underscores, and dashes Metadata values must be: - be between 1 and 63\n            characters long - have a UTF-8 encoding of maximum 128 bytes - consist\n            of up to 63 characters including lowercase letters, numeric characters,\n            underscores, and dashes No more than 64 metadata entries can be associated\n            with a given consent.'\n          type: object\n        name:\n          description: Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.\n            Cannot be changed after creation.\n          type: string\n        policies:\n          description: Optional. Represents a user's consent in terms of the resources\n            that can be accessed and under what conditions.\n          items:\n            $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1ConsentPolicy'\n          type: array\n        revisionCreateTime:\n          description: Output only. The timestamp that the revision was created.\n          format: google-datetime\n          readOnly: true\n          type: string\n        revisionId:\n          description: Output only. The revision ID of the Consent. The format is\n            an 8-character hexadecimal string. Refer to a specific revision of a Consent\n            by appending `@{revision_id}` to the Consent's resource name.\n          readOnly: true\n          type: string\n        state:\n          description: Required. Indicates the current state of this Consent.\n          enum:\n          - STATE_UNSPECIFIED\n          - ACTIVE\n          - ARCHIVED\n          - REVOKED\n          - DRAFT\n          - REJECTED\n          type: string\n        ttl:\n          description: Input only. The time to live for this Consent from when it\n            is created.\n          format: google-duration\n          type: string\n        userId:\n          description: Required. User's UUID provided by the client.\n          type: string\n      type: object\n    ConsentArtifact:\n      description: Documentation of a user's consent.\n      properties:\n        consentContentScreenshots:\n          description: Optional. Screenshots, PDFs, or other binary information documenting\n            the user's consent.\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        consentContentVersion:\n          description: Optional. An string indicating the version of the consent information\n            shown to the user.\n          type: string\n        guardianSignature:\n          $ref: '#/components/schemas/Signature'\n          description: Optional. A signature from a guardian.\n        metadata:\n          additionalProperties:\n            type: string\n          description: Optional. Metadata associated with the Consent artifact. For\n            example, the consent locale or user agent version.\n          type: object\n        name:\n          description: Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.\n            Cannot be changed after creation.\n          type: string\n        userId:\n          description: Required. User's UUID provided by the client.\n          type: string\n        userSignature:\n          $ref: '#/components/schemas/Signature'\n          description: Optional. User's signature.\n        witnessSignature:\n          $ref: '#/components/schemas/Signature'\n          description: Optional. A signature from a witness.\n      type: object\n    ConsentEvaluation:\n      description: The detailed evaluation of a particular Consent.\n      properties:\n        evaluationResult:\n          description: The evaluation result.\n          enum:\n          - EVALUATION_RESULT_UNSPECIFIED\n          - NOT_APPLICABLE\n          - NO_MATCHING_POLICY\n          - NO_SATISFIED_POLICY\n          - HAS_SATISFIED_POLICY\n          type: string\n      type: object\n    ConsentList:\n      description: List of resource names of Consent resources.\n      properties:\n        consents:\n          description: The resource names of the Consents to evaluate against, of\n            the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.\n          items:\n            type: string\n          type: array\n      type: object\n    ConsentStore:\n      description: Represents a consent store.\n      properties:\n        defaultConsentTtl:\n          description: Optional. Default time to live for Consents created in this\n            store. Must be at least 24 hours. Updating this field will not affect\n            the expiration time of existing consents.\n          format: google-duration\n          type: string\n        enableConsentCreateOnUpdate:\n          description: Optional. If `true`, UpdateConsent creates the Consent if it\n            does not already exist. If unspecified, defaults to `false`.\n          type: boolean\n        labels:\n          additionalProperties:\n            type: string\n          description: 'Optional. User-supplied key-value pairs used to organize consent\n            stores. Label keys must be between 1 and 63 characters long, have a UTF-8\n            encoding of maximum 128 bytes, and must conform to the following PCRE\n            regular expression: \\p{Ll}\\p{Lo}{0,62}. Label values must be between 1\n            and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and\n            must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}.\n            No more than 64 labels can be associated with a given store. For more\n            information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources'\n          type: object\n        name:\n          description: Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.\n            Cannot be changed after creation.\n          type: string\n      type: object\n    CreateMessageRequest:\n      description: Creates a new message.\n      properties:\n        message:\n          $ref: '#/components/schemas/Message'\n          description: HL7v2 message.\n      type: object\n    CryptoHashConfig:\n      description: Pseudonymization method that generates surrogates via cryptographic\n        hashing. Uses SHA-256. Outputs a base64-encoded representation of the hashed\n        output. For example, `L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=`.\n      properties:\n        cryptoKey:\n          description: An AES 128/192/256 bit key. Causes the hash to be computed\n            based on this key. A default key is generated for each Deidentify operation\n            and is used wherever crypto_key is not specified.\n          format: byte\n          type: string\n      type: object\n    Dataset:\n      description: A message representing a health dataset. A health dataset represents\n        a collection of healthcare data pertaining to one or more patients. This may\n        include multiple modalities of healthcare data, such as electronic medical\n        records or medical imaging data.\n      properties:\n        name:\n          description: Resource name of the dataset, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.\n          type: string\n        timeZone:\n          description: The default timezone used by this dataset. Must be a either\n            a valid IANA time zone name such as \"America/New_York\" or empty, which\n            defaults to UTC. This is used for parsing times in resources, such as\n            HL7 messages, where no explicit timezone is specified.\n          type: string\n      type: object\n    DateShiftConfig:\n      description: Shift a date forward or backward in time by a random amount which\n        is consistent for a given patient and crypto key combination.\n      properties:\n        cryptoKey:\n          description: An AES 128/192/256 bit key. Causes the shift to be computed\n            based on this key and the patient ID. A default key is generated for each\n            Deidentify operation and is used wherever crypto_key is not specified.\n          format: byte\n          type: string\n      type: object\n    DeidentifyConfig:\n      description: Configures de-id options specific to different types of content.\n        Each submessage customizes the handling of an https://tools.ietf.org/html/rfc6838\n        media type or subtype. Configs are applied in a nested manner at runtime.\n      properties:\n        annotation:\n          $ref: '#/components/schemas/AnnotationConfig'\n          description: Configures how annotations, meaning that the location and infoType\n            of sensitive information findings, are created during de-identification.\n            If unspecified, no annotations are created.\n        dicom:\n          $ref: '#/components/schemas/DicomConfig'\n          description: Configures de-id of application/DICOM content.\n        fhir:\n          $ref: '#/components/schemas/FhirConfig'\n          description: Configures de-id of application/FHIR content.\n        image:\n          $ref: '#/components/schemas/ImageConfig'\n          description: Configures de-identification of image pixels wherever they\n            are found in the source_dataset.\n        text:\n          $ref: '#/components/schemas/TextConfig'\n          description: Configures de-identification of text wherever it is found in\n            the source_dataset.\n      type: object\n    DeidentifyDatasetRequest:\n      description: Redacts identifying information from the specified dataset.\n      properties:\n        config:\n          $ref: '#/components/schemas/DeidentifyConfig'\n          description: Deidentify configuration.\n        destinationDataset:\n          description: The name of the dataset resource to create and write the redacted\n            data to. * The destination dataset must not exist. * The destination dataset\n            must be in the same location as the source dataset. De-identifying data\n            across multiple locations is not supported.\n          type: string\n      type: object\n    DeidentifyDicomStoreRequest:\n      description: Creates a new DICOM store with sensitive information de-identified.\n      properties:\n        config:\n          $ref: '#/components/schemas/DeidentifyConfig'\n          description: De-identify configuration.\n        destinationStore:\n          description: The name of the DICOM store to create and write the redacted\n            data to. For example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.\n            * The destination dataset must exist. * The source dataset and destination\n            dataset must both reside in the same location. De-identifying data across\n            multiple locations is not supported. * The destination DICOM store must\n            not exist. * The caller must have the necessary permissions to create\n            the destination DICOM store.\n          type: string\n        filterConfig:\n          $ref: '#/components/schemas/DicomFilterConfig'\n          description: Filter configuration.\n      type: object\n    DeidentifyFhirStoreRequest:\n      description: Creates a new FHIR store with sensitive information de-identified.\n      properties:\n        config:\n          $ref: '#/components/schemas/DeidentifyConfig'\n          description: Deidentify configuration.\n        destinationStore:\n          description: The name of the FHIR store to create and write the redacted\n            data to. For example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.\n            * The destination dataset must exist. * The source dataset and destination\n            dataset must both reside in the same location. De-identifying data across\n            multiple locations is not supported. * The destination FHIR store must\n            exist. * The caller must have the healthcare.fhirResources.update permission\n            to write to the destination FHIR store.\n          type: string\n        resourceFilter:\n          $ref: '#/components/schemas/FhirFilter'\n          description: A filter specifying the resources to include in the output.\n            If not specified, all resources are included in the output.\n      type: object\n    DeidentifySummary:\n      description: Contains a detailed summary of the Deidentify operation.\n      properties: {}\n      type: object\n    Detail:\n      description: Contains multiple sensitive information findings for each resource\n        slice.\n      properties:\n        findings:\n          items:\n            $ref: '#/components/schemas/Finding'\n          type: array\n      type: object\n    DicomConfig:\n      description: Specifies the parameters needed for de-identification of DICOM\n        stores.\n      properties:\n        filterProfile:\n          description: Tag filtering profile that determines which tags to keep/remove.\n          enum:\n          - TAG_FILTER_PROFILE_UNSPECIFIED\n          - MINIMAL_KEEP_LIST_PROFILE\n          - ATTRIBUTE_CONFIDENTIALITY_BASIC_PROFILE\n          - KEEP_ALL_PROFILE\n          - DEIDENTIFY_TAG_CONTENTS\n          type: string\n        keepList:\n          $ref: '#/components/schemas/TagFilterList'\n          description: List of tags to keep. Remove all other tags.\n        removeList:\n          $ref: '#/components/schemas/TagFilterList'\n          description: List of tags to remove. Keep all other tags.\n        skipIdRedaction:\n          description: 'If true, skip replacing StudyInstanceUID, SeriesInstanceUID,\n            SOPInstanceUID, and MediaStorageSOPInstanceUID and leave them untouched.\n            The Cloud Healthcare API regenerates these UIDs by default based on the\n            DICOM Standard''s reasoning: \"Whilst these UIDs cannot be mapped directly\n            to an individual out of context, given access to the original images,\n            or to a database of the original images containing the UIDs, it would\n            be possible to recover the individual''s identity.\" http://dicom.nema.org/medical/dicom/current/output/chtml/part15/sect_E.3.9.html'\n          type: boolean\n      type: object\n    DicomFilterConfig:\n      description: Specifies the filter configuration for DICOM resources.\n      properties:\n        resourcePathsGcsUri:\n          description: The Cloud Storage location of the filter configuration file.\n            The `gcs_uri` must be in the format `gs://bucket/path/to/object`. The\n            filter configuration file must contain a list of resource paths separated\n            by newline characters (\\n or \\r\\n). Each resource path must be in the\n            format \"/studies/{studyUID}[/series/{seriesUID}[/instances/{instanceUID}]]\"\n            The Cloud Healthcare API service account must have the `roles/storage.objectViewer`\n            Cloud IAM role for this Cloud Storage location.\n          type: string\n      type: object\n    DicomStore:\n      description: Represents a DICOM store.\n      properties:\n        labels:\n          additionalProperties:\n            type: string\n          description: 'User-supplied key-value pairs used to organize DICOM stores.\n            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding\n            of maximum 128 bytes, and must conform to the following PCRE regular expression:\n            \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63\n            characters long, have a UTF-8 encoding of maximum 128 bytes, and must\n            conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n            No more than 64 labels can be associated with a given store.'\n          type: object\n        name:\n          description: Resource name of the DICOM store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.\n          type: string\n        notificationConfig:\n          $ref: '#/components/schemas/NotificationConfig'\n          description: Notification destination for new DICOM instances. Supplied\n            by the client.\n        streamConfigs:\n          description: A list of streaming configs used to configure the destination\n            of streaming exports for every DICOM instance insertion in this DICOM\n            store. After a new config is added to `stream_configs`, DICOM instance\n            insertions are streamed to the new destination. When a config is removed\n            from `stream_configs`, the server stops streaming to that destination.\n            Each config must contain a unique destination.\n          items:\n            $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1DicomStreamConfig'\n          type: array\n      type: object\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    Entity:\n      description: The candidate entities that an entity mention could link to.\n      properties:\n        entityId:\n          description: entity_id is a first class field entity_id uniquely identifies\n            this concept and its meta-vocabulary. For example, \"UMLS/C0000970\".\n          type: string\n        preferredTerm:\n          description: preferred_term is the preferred term for this concept. For\n            example, \"Acetaminophen\". For ad hoc entities formed by normalization,\n            this is the most popular unnormalized string.\n          type: string\n        vocabularyCodes:\n          description: Vocabulary codes are first-class fields and differentiated\n            from the concept unique identifier (entity_id). vocabulary_codes contains\n            the representation of this concept in particular vocabularies, such as\n            ICD-10, SNOMED-CT and RxNORM. These are prefixed by the name of the vocabulary,\n            followed by the unique code within that vocabulary. For example, \"RXNORM/A10334543\".\n          items:\n            type: string\n          type: array\n      type: object\n    EntityMention:\n      description: An entity mention in the document.\n      properties:\n        certaintyAssessment:\n          $ref: '#/components/schemas/Feature'\n          description: 'The certainty assessment of the entity mention. Its value\n            is one of: LIKELY, SOMEWHAT_LIKELY, UNCERTAIN, SOMEWHAT_UNLIKELY, UNLIKELY,\n            CONDITIONAL'\n        confidence:\n          description: The model's confidence in this entity mention annotation. A\n            number between 0 and 1.\n          format: double\n          type: number\n        linkedEntities:\n          description: linked_entities are candidate ontological concepts that this\n            entity mention may refer to. They are sorted by decreasing confidence.it\n          items:\n            $ref: '#/components/schemas/LinkedEntity'\n          type: array\n        mentionId:\n          description: mention_id uniquely identifies each entity mention in a single\n            response.\n          type: string\n        subject:\n          $ref: '#/components/schemas/Feature'\n          description: 'The subject this entity mention relates to. Its value is one\n            of: PATIENT, FAMILY_MEMBER, OTHER'\n        temporalAssessment:\n          $ref: '#/components/schemas/Feature'\n          description: 'How this entity mention relates to the subject temporally.\n            Its value is one of: CURRENT, CLINICAL_HISTORY, FAMILY_HISTORY, UPCOMING,\n            ALLERGY'\n        text:\n          $ref: '#/components/schemas/TextSpan'\n          description: text is the location of the entity mention in the document.\n        type:\n          description: 'The semantic type of the entity: UNKNOWN_ENTITY_TYPE, ALONE,\n            ANATOMICAL_STRUCTURE, ASSISTED_LIVING, BF_RESULT, BM_RESULT, BM_UNIT,\n            BM_VALUE, BODY_FUNCTION, BODY_MEASUREMENT, COMPLIANT, DOESNOT_FOLLOWUP,\n            FAMILY, FOLLOWSUP, LABORATORY_DATA, LAB_RESULT, LAB_UNIT, LAB_VALUE, MEDICAL_DEVICE,\n            MEDICINE, MED_DOSE, MED_DURATION, MED_FORM, MED_FREQUENCY, MED_ROUTE,\n            MED_STATUS, MED_STRENGTH, MED_TOTALDOSE, MED_UNIT, NON_COMPLIANT, OTHER_LIVINGSTATUS,\n            PROBLEM, PROCEDURE, PROCEDURE_RESULT, PROC_METHOD, REASON_FOR_NONCOMPLIANCE,\n            SEVERITY, SUBSTANCE_ABUSE, UNCLEAR_FOLLOWUP.'\n          type: string\n      type: object\n    EntityMentionRelationship:\n      description: Defines directed relationship from one entity mention to another.\n      properties:\n        confidence:\n          description: The model's confidence in this annotation. A number between\n            0 and 1.\n          format: double\n          type: number\n        objectId:\n          description: object_id is the id of the object entity mention.\n          type: string\n        subjectId:\n          description: subject_id is the id of the subject entity mention.\n          type: string\n      type: object\n    EvaluateAnnotationStoreRequest:\n      description: Request to evaluate an Annotation store against a ground truth\n        [Annotation store].\n      properties:\n        bigqueryDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination'\n          description: The BigQuery table where the server writes the output. BigQueryDestination\n            requires the `roles/bigquery.dataEditor` and `roles/bigquery.jobUser`\n            Cloud IAM roles.\n        evalInfoTypeMapping:\n          additionalProperties:\n            type: string\n          description: 'Optional. InfoType mapping for `eval_store`. Different resources\n            can map to the same infoType. For example, `PERSON_NAME`, `PERSON`, `NAME`,\n            and `HUMAN` are different. To map all of these into a single infoType\n            (such as `PERSON_NAME`), specify the following mapping: ``` info_type_mapping[\"PERSON\"]\n            = \"PERSON_NAME\" info_type_mapping[\"NAME\"] = \"PERSON_NAME\" info_type_mapping[\"HUMAN\"]\n            = \"PERSON_NAME\" ``` Unmentioned infoTypes, such as `DATE`, are treated\n            as identity mapping. For example: ``` info_type_mapping[\"DATE\"] = \"DATE\"\n            ``` InfoTypes are case-insensitive.'\n          type: object\n        goldenInfoTypeMapping:\n          additionalProperties:\n            type: string\n          description: Optional. Similar to `eval_info_type_mapping`, infoType mapping\n            for `golden_store`.\n          type: object\n        goldenStore:\n          description: The Annotation store to use as ground truth, in the format\n            of `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.\n          type: string\n        infoTypeConfig:\n          $ref: '#/components/schemas/InfoTypeConfig'\n      type: object\n    EvaluateAnnotationStoreResponse:\n      description: Response for successful Annotation store evaluation operations.\n        This structure is included in the response upon operation completion.\n      properties: {}\n      type: object\n    EvaluateUserConsentsRequest:\n      description: 'Evaluate a user''s Consents for all matching User data mappings.\n        Note: User data mappings are indexed asynchronously, causing slight delays\n        between the time mappings are created or updated and when they are included\n        in EvaluateUserConsents results.'\n      properties:\n        consentList:\n          $ref: '#/components/schemas/ConsentList'\n          description: Optional. Specific Consents to evaluate the access request\n            against. These Consents must have the same `user_id` as the User data\n            mappings being evalauted, must exist in the current `consent_store`, and\n            must have a `state` of either `ACTIVE` or `DRAFT`. A maximum of 100 Consents\n            can be provided here. If unspecified, all `ACTIVE` unexpired Consents\n            in the current `consent_store` will be evaluated.\n        pageSize:\n          description: Optional. Limit on the number of User data mappings to return\n            in a single response. If not specified, 100 is used. May not be larger\n            than 1000.\n          format: int32\n          type: integer\n        pageToken:\n          description: Optional. Token to retrieve the next page of results, or empty\n            to get the first page.\n          type: string\n        requestAttributes:\n          additionalProperties:\n            type: string\n          description: Required. The values of request attributes associated with\n            this access request.\n          type: object\n        resourceAttributes:\n          additionalProperties:\n            type: string\n          description: Optional. The values of resource attributes associated with\n            the resources being requested. If no values are specified, then all resources\n            are queried.\n          type: object\n        responseView:\n          description: Optional. The view for EvaluateUserConsentsResponse. If unspecified,\n            defaults to `BASIC` and returns `consented` as `TRUE` or `FALSE`.\n          enum:\n          - RESPONSE_VIEW_UNSPECIFIED\n          - BASIC\n          - FULL\n          type: string\n        userId:\n          description: Required. User ID to evaluate consents for.\n          type: string\n      type: object\n    EvaluateUserConsentsResponse:\n      properties:\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list. This token is valid for 72 hours after\n            it is created.\n          type: string\n        results:\n          description: The consent evaluation result for each `data_id`.\n          items:\n            $ref: '#/components/schemas/Result'\n          type: array\n      type: object\n    ExportAnnotationsRequest:\n      description: Request to export Annotations. The export operation is not atomic.\n        If a failure occurs, any annotations already exported are not removed.\n      properties:\n        bigqueryDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination'\n          description: 'The BigQuery output destination, which requires two IAM roles:\n            `roles/bigquery.dataEditor` and `roles/bigquery.jobUser`.'\n        gcsDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1AnnotationGcsDestination'\n          description: The Cloud Storage destination, which requires the `roles/storage.objectAdmin`\n            Cloud IAM role.\n      type: object\n    ExportAnnotationsResponse:\n      description: Response for successful annotation export operations. This structure\n        is included in response upon operation completion.\n      properties: {}\n      type: object\n    ExportDicomDataRequest:\n      description: Exports data from the specified DICOM store. If a given resource,\n        such as a DICOM object with the same SOPInstance UID, already exists in the\n        output, it is overwritten with the version in the source dataset. Exported\n        DICOM data persists when the DICOM store from which it was exported is deleted.\n      properties:\n        bigqueryDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1DicomBigQueryDestination'\n          description: 'The BigQuery output destination. You can only export to a\n            BigQuery dataset that''s in the same project as the DICOM store you''re\n            exporting from. The Cloud Healthcare Service Agent requires two IAM roles\n            on the BigQuery location: `roles/bigquery.dataEditor` and `roles/bigquery.jobUser`.'\n        filterConfig:\n          $ref: '#/components/schemas/DicomFilterConfig'\n          description: Specifies the filter configuration.\n        gcsDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1DicomGcsDestination'\n          description: The Cloud Storage output destination. The Cloud Healthcare\n            Service Agent requires the `roles/storage.objectAdmin` Cloud IAM roles\n            on the Cloud Storage location.\n      type: object\n    ExportDicomDataResponse:\n      description: Returns additional information in regards to a completed DICOM\n        store export.\n      properties: {}\n      type: object\n    ExportMessagesRequest:\n      description: Request to schedule an export.\n      properties:\n        endTime:\n          description: The end of the range in `send_time` (MSH.7, https://www.hl7.org/documentcenter/public_temp_2E58C1F9-1C23-BA17-0C6126475344DA9D/wg/conf/HL7MSH.htm)\n            to process. If not specified, the time when the export is scheduled is\n            used. This value has to come after the `start_time` defined below. Only\n            messages whose `send_time` lies in the range `start_time` (inclusive)\n            to `end_time` (exclusive) are exported.\n          format: google-datetime\n          type: string\n        gcsDestination:\n          $ref: '#/components/schemas/GcsDestination'\n          description: Export to a Cloud Storage destination.\n        startTime:\n          description: The start of the range in `send_time` (MSH.7, https://www.hl7.org/documentcenter/public_temp_2E58C1F9-1C23-BA17-0C6126475344DA9D/wg/conf/HL7MSH.htm)\n            to process. If not specified, the UNIX epoch (1970-01-01T00:00:00Z) is\n            used. This value has to come before the `end_time` defined below. Only\n            messages whose `send_time` lies in the range `start_time` (inclusive)\n            to `end_time` (exclusive) are exported.\n          format: google-datetime\n          type: string\n      type: object\n    ExportMessagesResponse:\n      description: Final response for the export operation. This structure is included\n        in the response to describe the detailed outcome.\n      properties: {}\n      type: object\n    ExportResourcesRequest:\n      description: Request to export resources.\n      properties:\n        _since:\n          description: If provided, only resources updated after this time are exported.\n            The time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example, `2015-02-07T13:28:17.239+02:00`\n            or `2017-01-01T00:00:00Z`. The time must be specified to the second and\n            include a time zone.\n          type: string\n        _type:\n          description: String of comma-delimited FHIR resource types. If provided,\n            only resources of the specified resource type(s) are exported.\n          type: string\n        bigqueryDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1FhirBigQueryDestination'\n          description: 'The BigQuery output destination. The Cloud Healthcare Service\n            Agent requires two IAM roles on the BigQuery location: `roles/bigquery.dataEditor`\n            and `roles/bigquery.jobUser`. The output is one BigQuery table per resource\n            type. Unlike when setting `BigQueryDestination` for `StreamConfig`, `ExportResources`\n            does not create BigQuery views.'\n        gcsDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1FhirGcsDestination'\n          description: The Cloud Storage output destination. The Cloud Healthcare\n            Service Agent requires the `roles/storage.objectAdmin` Cloud IAM roles\n            on the Cloud Storage location. The exported outputs are organized by FHIR\n            resource types. The server creates one object per resource type. Each\n            object contains newline delimited JSON, and each line is a FHIR resource.\n      type: object\n    Expr:\n      description: 'Represents a textual expression in the Common Expression Language\n        (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\n        of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\n        title: \"Summary size limit\" description: \"Determines if a summary is less\n        than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality):\n        title: \"Requestor is owner\" description: \"Determines if requestor is the document\n        owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic):\n        title: \"Public documents\" description: \"Determine whether the document should\n        be publicly visible\" expression: \"document.type != ''private'' \u0026\u0026 document.type\n        != ''internal''\" Example (Data Manipulation): title: \"Notification string\"\n        description: \"Create a notification string with a timestamp.\" expression:\n        \"''New message received at '' + string(document.create_time)\" The exact variables\n        and functions that may be referenced within an expression are determined by\n        the service that evaluates it. See the service documentation for additional\n        information.'\n      properties:\n        description:\n          description: Optional. Description of the expression. This is a longer text\n            which describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: Textual representation of an expression in Common Expression\n            Language syntax.\n          type: string\n        location:\n          description: Optional. String indicating the location of the expression\n            for error reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: Optional. Title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the expression.\n          type: string\n      type: object\n    Feature:\n      description: A feature of an entity mention.\n      properties:\n        confidence:\n          description: The model's confidence in this feature annotation. A number\n            between 0 and 1.\n          format: double\n          type: number\n        value:\n          description: The value of this feature annotation. Its range depends on\n            the type of the feature.\n          type: string\n      type: object\n    FhirConfig:\n      description: Specifies how to handle de-identification of a FHIR store.\n      properties:\n        fieldMetadataList:\n          description: Specifies FHIR paths to match and how to transform them. Any\n            field that is not matched by a FieldMetadata is passed through to the\n            output dataset unmodified. All extensions will be processed according\n            to `default_keep_extensions`. If a field can be matched by more than one\n            FieldMetadata, the first FieldMetadata.Action is applied.\n          items:\n            $ref: '#/components/schemas/FieldMetadata'\n          type: array\n      type: object\n    FhirFilter:\n      description: Filter configuration.\n      properties:\n        resources:\n          $ref: '#/components/schemas/Resources'\n          description: List of resources to include in the output. If this list is\n            empty or not specified, all resources are included in the output.\n      type: object\n    FhirStore:\n      description: Represents a FHIR store.\n      properties:\n        defaultSearchHandlingStrict:\n          description: 'If true, overrides the default search behavior for this FHIR\n            store to `handling=strict` which returns an error for unrecognized search\n            parameters. If false, uses the FHIR specification default `handling=lenient`\n            which ignores unrecognized search parameters. The handling can always\n            be changed from the default on an individual API call by setting the HTTP\n            header `Prefer: handling=strict` or `Prefer: handling=lenient`.'\n          type: boolean\n        disableReferentialIntegrity:\n          description: Immutable. Whether to disable referential integrity in this\n            FHIR store. This field is immutable after FHIR store creation. The default\n            value is false, meaning that the API enforces referential integrity and\n            fails the requests that result in inconsistent state in the FHIR store.\n            When this field is set to true, the API skips referential integrity checks.\n            Consequently, operations that rely on references, such as GetPatientEverything,\n            do not return all the results if broken references exist.\n          type: boolean\n        disableResourceVersioning:\n          description: Immutable. Whether to disable resource versioning for this\n            FHIR store. This field can not be changed after the creation of FHIR store.\n            If set to false, which is the default behavior, all write operations cause\n            historical versions to be recorded automatically. The historical versions\n            can be fetched through the history APIs, but cannot be updated. If set\n            to true, no historical versions are kept. The server sends errors for\n            attempts to read the historical versions.\n          type: boolean\n        enableUpdateCreate:\n          description: Whether this FHIR store has the [updateCreate capability](https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.updateCreate).\n            This determines if the client can use an Update operation to create a\n            new resource with a client-specified ID. If false, all IDs are server-assigned\n            through the Create operation and attempts to update a non-existent resource\n            return errors. It is strongly advised not to include or encode any sensitive\n            data such as patient identifiers in client-specified resource IDs. Those\n            IDs are part of the FHIR resource path recorded in Cloud audit logs and\n            Pub/Sub notifications. Those IDs can also be contained in reference fields\n            within other resources.\n          type: boolean\n        labels:\n          additionalProperties:\n            type: string\n          description: 'User-supplied key-value pairs used to organize FHIR stores.\n            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding\n            of maximum 128 bytes, and must conform to the following PCRE regular expression:\n            \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63\n            characters long, have a UTF-8 encoding of maximum 128 bytes, and must\n            conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n            No more than 64 labels can be associated with a given store.'\n          type: object\n        name:\n          description: Output only. Resource name of the FHIR store, of the form `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.\n          type: string\n        notificationConfig:\n          $ref: '#/components/schemas/NotificationConfig'\n          description: If non-empty, publish all resource modifications of this FHIR\n            store to this destination. The Pub/Sub message attributes contain a map\n            with a string describing the action that has triggered the notification.\n            For example, \"action\":\"CreateResource\".\n        searchConfig:\n          $ref: '#/components/schemas/SearchConfig'\n          description: Configuration for how FHIR resource can be searched.\n        streamConfigs:\n          description: A list of streaming configs that configure the destinations\n            of streaming export for every resource mutation in this FHIR store. Each\n            store is allowed to have up to 10 streaming configs. After a new config\n            is added, the next resource mutation is streamed to the new location in\n            addition to the existing ones. When a location is removed from the list,\n            the server stops streaming to that location. Before adding a new config,\n            you must add the required [`bigquery.dataEditor`](https://cloud.google.com/bigquery/docs/access-control#bigquery.dataEditor)\n            role to your project's **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/iam/docs/service-accounts).\n            Some lag (typically on the order of dozens of seconds) is expected before\n            the results show up in the streaming destination.\n          items:\n            $ref: '#/components/schemas/StreamConfig'\n          type: array\n        validationConfig:\n          $ref: '#/components/schemas/ValidationConfig'\n          description: Configuration for how to validate incoming FHIR resources against\n            configured profiles.\n        version:\n          description: Immutable. The FHIR specification version that this FHIR store\n            supports natively. This field is immutable after store creation. Requests\n            are rejected if they contain FHIR resources of a different version. Version\n            is required for every FHIR store.\n          enum:\n          - VERSION_UNSPECIFIED\n          - DSTU2\n          - STU3\n          - R4\n          type: string\n      type: object\n    Field:\n      description: A (sub) field of a type.\n      properties:\n        maxOccurs:\n          description: The maximum number of times this field can be repeated. 0 or\n            -1 means unbounded.\n          format: int32\n          type: integer\n        minOccurs:\n          description: The minimum number of times this field must be present/repeated.\n          format: int32\n          type: integer\n        name:\n          description: The name of the field. For example, \"PID-1\" or just \"1\".\n          type: string\n        table:\n          description: The HL7v2 table this field refers to. For example, PID-15 (Patient's\n            Primary Language) usually refers to table \"0296\".\n          type: string\n        type:\n          description: The type of this field. A Type with this name must be defined\n            in an Hl7TypesConfig.\n          type: string\n      type: object\n    FieldMetadata:\n      description: Specifies FHIR paths to match, and how to handle de-identification\n        of matching fields.\n      properties:\n        action:\n          description: Deidentify action for one field.\n          enum:\n          - ACTION_UNSPECIFIED\n          - TRANSFORM\n          - INSPECT_AND_TRANSFORM\n          - DO_NOT_TRANSFORM\n          type: string\n        paths:\n          description: 'List of paths to FHIR fields to redact. Each path is a period-separated\n            list where each component is either a field name or FHIR type name. All\n            types begin with an upper case letter. For example, the resource field\n            \"Patient.Address.city\", which uses a string type, can be matched by \"Patient.Address.String\".\n            Path also supports partial matching. For example, \"Patient.Address.city\"\n            can be matched by \"Address.city\" (Patient omitted). Partial matching and\n            type matching can be combined. For example, \"Patient.Address.city\" can\n            be matched by \"Address.String\". For \"choice\" types (those defined in the\n            FHIR spec with the form: field[x]), use two separate components. For example,\n            \"deceasedAge.unit\" is matched by \"Deceased.Age.unit\". Supported types\n            are: AdministrativeGenderCode, Code, Date, DateTime, Decimal, HumanName,\n            Id, LanguageCode, Markdown, Oid, String, Uri, Uuid, Xhtml. The sub-type\n            for HumanName, such as HumanName.given or HumanName.family, can be omitted.'\n          items:\n            type: string\n          type: array\n      type: object\n    FilterList:\n      description: List of infoTypes to be filtered.\n      properties:\n        infoTypes:\n          description: These infoTypes are based on after the `eval_info_type_mapping`\n            and `golden_info_type_mapping`.\n          items:\n            type: string\n          type: array\n      type: object\n    Finding:\n      properties:\n        end:\n          description: Zero-based ending index of the found text, exclusively.\n          format: int64\n          type: string\n        infoType:\n          description: The type of information stored in this text range. For example,\n            HumanName, BirthDate, or Address.\n          type: string\n        quote:\n          description: The snippet of the sensitive text. This field is only populated\n            during deidentification if `store_quote` is set to true in DeidentifyConfig.\n          type: string\n        start:\n          description: Zero-based starting index of the found text, inclusively.\n          format: int64\n          type: string\n      type: object\n    GcsDestination:\n      description: The Cloud Storage output destination. The Cloud Healthcare Service\n        Agent requires the `roles/storage.objectAdmin` Cloud IAM roles on the Cloud\n        Storage location.\n      properties:\n        contentStructure:\n          description: The format of the exported HL7v2 message files.\n          enum:\n          - CONTENT_STRUCTURE_UNSPECIFIED\n          - MESSAGE_JSON\n          type: string\n        messageView:\n          description: Specifies the parts of the Message resource to include in the\n            export. If not specified, FULL is used.\n          enum:\n          - MESSAGE_VIEW_UNSPECIFIED\n          - RAW_ONLY\n          - PARSED_ONLY\n          - FULL\n          - SCHEMATIZED_ONLY\n          - BASIC\n          type: string\n        uriPrefix:\n          description: URI of an existing Cloud Storage directory where the server\n            writes result files, in the format `gs://{bucket-id}/{path/to/destination/dir}`.\n            If there is no trailing slash, the service appends one when composing\n            the object path.\n          type: string\n      type: object\n    GcsSource:\n      description: Specifies the configuration for importing data from Cloud Storage.\n      properties:\n        uri:\n          description: 'Points to a Cloud Storage URI containing file(s) to import.\n            The URI must be in the following format: `gs://{bucket_id}/{object_id}`.\n            The URI can include wildcards in `object_id` and thus identify multiple\n            files. Supported wildcards: * `*` to match 0 or more non-separator characters\n            * `**` to match 0 or more characters (including separators). Must be used\n            at the end of a path and with no other wildcards in the path. Can also\n            be used with a file extension (such as .ndjson), which imports all files\n            with the extension in the specified directory and its sub-directories.\n            For example, `gs://my-bucket/my-directory/**.ndjson` imports all files\n            with `.ndjson` extensions in `my-directory/` and its sub-directories.\n            * `?` to match 1 character Files matching the wildcard are expected to\n            contain content only, no metadata.'\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1AnnotationBigQueryDestination:\n      description: The BigQuery table for export.\n      properties:\n        force:\n          description: Use `write_disposition` instead. If `write_disposition` is\n            specified, this parameter is ignored. force=false is equivalent to write_disposition=WRITE_EMPTY\n            and force=true is equivalent to write_disposition=WRITE_TRUNCATE.\n          type: boolean\n        schemaType:\n          description: Specifies the schema format to export.\n          enum:\n          - SCHEMA_TYPE_UNSPECIFIED\n          - SIMPLE\n          type: string\n        tableUri:\n          description: BigQuery URI to a table, up to 2000 characters long, must be\n            of the form bq://projectId.bqDatasetId.tableId.\n          type: string\n        writeDisposition:\n          description: Determines if existing data in the destination dataset is overwritten,\n            appended to, or not written if the tables contain data. If a write_disposition\n            is specified, the `force` parameter is ignored.\n          enum:\n          - WRITE_DISPOSITION_UNSPECIFIED\n          - WRITE_EMPTY\n          - WRITE_TRUNCATE\n          - WRITE_APPEND\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1AnnotationGcsDestination:\n      description: The Cloud Storage location for export.\n      properties:\n        uriPrefix:\n          description: The Cloud Storage destination to export to. URI for a Cloud\n            Storage directory where the server writes result files, in the format\n            `gs://{bucket-id}/{path/to/destination/dir}`. If there is no trailing\n            slash, the service appends one when composing the object path. The user\n            is responsible for creating the Cloud Storage bucket referenced in `uri_prefix`.\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1AnnotationGcsSource:\n      description: Specifies the configuration for importing data from Cloud Storage.\n      properties:\n        uri:\n          description: 'Points to a Cloud Storage URI containing file(s) with content\n            only. The URI must be in the following format: `gs://{bucket_id}/{object_id}`.\n            The URI can include wildcards in `object_id` and thus identify multiple\n            files. Supported wildcards: ''*'' to match 0 or more non-separator characters\n            ''**'' to match 0 or more characters (including separators). Must be used\n            at the end of a path and with no other wildcards in the path. Can also\n            be used with a file extension (such as .dcm), which imports all files\n            with the extension in the specified directory and its sub-directories.\n            For example, `gs://my-bucket/my-directory/**.json` imports all files with\n            .json extensions in `my-directory/` and its sub-directories. ''?'' to\n            match 1 character All other URI formats are invalid. Files matching the\n            wildcard are expected to contain content only, no metadata.'\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1ConsentGcsDestination:\n      description: The Cloud Storage location for export.\n      properties:\n        uriPrefix:\n          description: URI for a Cloud Storage directory where the server writes result\n            files, in the format `gs://{bucket-id}/{path/to/destination/dir}`. If\n            there is no trailing slash, the service appends one when composing the\n            object path. The user is responsible for creating the Cloud Storage bucket\n            and directory referenced in `uri_prefix`.\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1ConsentPolicy:\n      description: Represents a user's consent in terms of the resources that can\n        be accessed and under what conditions.\n      properties:\n        authorizationRule:\n          $ref: '#/components/schemas/Expr'\n          description: Required. The request conditions to meet to grant access. In\n            addition to any supported comparison operators, authorization rules may\n            have `IN` operator as well as at most 10 logical operators that are limited\n            to `AND` (`\u0026\u0026`), `OR` (`||`).\n        resourceAttributes:\n          description: The resources that this policy applies to. A resource is a\n            match if it matches all the attributes listed here. If empty, this policy\n            applies to all User data mappings for the given user.\n          items:\n            $ref: '#/components/schemas/Attribute'\n          type: array\n      type: object\n    GoogleCloudHealthcareV1beta1DeidentifyDeidentifyDicomStoreSummary:\n      description: Contains a summary of the DeidentifyDicomStore operation.\n      properties: {}\n      type: object\n    GoogleCloudHealthcareV1beta1DeidentifyDeidentifyFhirStoreSummary:\n      description: Contains a summary of the DeidentifyFhirStore operation.\n      properties: {}\n      type: object\n    GoogleCloudHealthcareV1beta1DicomBigQueryDestination:\n      description: The BigQuery table where the server writes output.\n      properties:\n        force:\n          description: Use `write_disposition` instead. If `write_disposition` is\n            specified, this parameter is ignored. force=false is equivalent to write_disposition=WRITE_EMPTY\n            and force=true is equivalent to write_disposition=WRITE_TRUNCATE.\n          type: boolean\n        tableUri:\n          description: BigQuery URI to a table, up to 2000 characters long, in the\n            format `bq://projectId.bqDatasetId.tableId`\n          type: string\n        writeDisposition:\n          description: Determines whether the existing table in the destination is\n            to be overwritten or appended to. If a write_disposition is specified,\n            the `force` parameter is ignored.\n          enum:\n          - WRITE_DISPOSITION_UNSPECIFIED\n          - WRITE_EMPTY\n          - WRITE_TRUNCATE\n          - WRITE_APPEND\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1DicomGcsDestination:\n      description: The Cloud Storage location where the server writes the output and\n        the export configuration.\n      properties:\n        mimeType:\n          description: 'MIME types supported by DICOM spec. Each file is written in\n            the following format: `.../{study_id}/{series_id}/{instance_id}[/{frame_number}].{extension}`\n            The frame_number component exists only for multi-frame instances. Supported\n            MIME types are consistent with supported formats in DICOMweb: https://cloud.google.com/healthcare/docs/dicom#retrieve_transaction.\n            Specifically, the following are supported: - application/dicom; transfer-syntax=1.2.840.10008.1.2.1\n            (uncompressed DICOM) - application/dicom; transfer-syntax=1.2.840.10008.1.2.4.50\n            (DICOM with embedded JPEG Baseline) - application/dicom; transfer-syntax=1.2.840.10008.1.2.4.90\n            (DICOM with embedded JPEG 2000 Lossless Only) - application/dicom; transfer-syntax=1.2.840.10008.1.2.4.91\n            (DICOM with embedded JPEG 2000)h - application/dicom; transfer-syntax=*\n            (DICOM with no transcoding) - application/octet-stream; transfer-syntax=1.2.840.10008.1.2.1\n            (raw uncompressed PixelData) - application/octet-stream; transfer-syntax=*\n            (raw PixelData in whatever format it was uploaded in) - image/jpeg; transfer-syntax=1.2.840.10008.1.2.4.50\n            (Consumer JPEG) - image/png The following extensions are used for output\n            files: - application/dicom -\u003e .dcm - image/jpeg -\u003e .jpg - image/png -\u003e\n            .png - application/octet-stream -\u003e no extension If unspecified, the instances\n            are exported in the original DICOM format they were uploaded in.'\n          type: string\n        uriPrefix:\n          description: The Cloud Storage destination to export to. URI for a Cloud\n            Storage directory where the server writes the result files, in the format\n            `gs://{bucket-id}/{path/to/destination/dir}`). If there is no trailing\n            slash, the service appends one when composing the object path. The user\n            is responsible for creating the Cloud Storage bucket referenced in `uri_prefix`.\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1DicomGcsSource:\n      description: Specifies the configuration for importing data from Cloud Storage.\n      properties:\n        uri:\n          description: 'Points to a Cloud Storage URI containing file(s) with content\n            only. The URI must be in the following format: `gs://{bucket_id}/{object_id}`.\n            The URI can include wildcards in `object_id` and thus identify multiple\n            files. Supported wildcards: * ''*'' to match 0 or more non-separator characters\n            * ''**'' to match 0 or more characters (including separators). Must be\n            used at the end of a path and with no other wildcards in the path. Can\n            also be used with a file extension (such as .dcm), which imports all files\n            with the extension in the specified directory and its sub-directories.\n            For example, `gs://my-bucket/my-directory/**.dcm` imports all files with\n            .dcm extensions in `my-directory/` and its sub-directories. * ''?'' to\n            match 1 character. All other URI formats are invalid. Files matching the\n            wildcard are expected to contain content only, no metadata.'\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1DicomStreamConfig:\n      description: StreamConfig specifies configuration for a streaming DICOM export.\n      properties:\n        bigqueryDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1DicomBigQueryDestination'\n          description: 'Results are appended to this table. The server creates a new\n            table in the given BigQuery dataset if the specified table does not exist.\n            To enable the Cloud Healthcare API to write to your BigQuery table, you\n            must give the Cloud Healthcare API service account the bigquery.dataEditor\n            role. The service account is: `service-{PROJECT_NUMBER}@gcp-sa-healthcare.iam.gserviceaccount.com`.\n            The PROJECT_NUMBER identifies the project that the DICOM store resides\n            in. To get the project number, go to the Cloud Console Dashboard. It is\n            recommended to not have a custom schema in the destination table which\n            could conflict with the schema created by the Cloud Healthcare API. Instance\n            deletions are not applied to the destination table. The destination''s\n            table schema will be automatically updated in case a new instance''s data\n            is incompatible with the current schema. The schema should not be updated\n            manually as this can cause incompatibilies that cannot be resolved automatically.\n            One resolution in this case is to delete the incompatible table and let\n            the server recreate one, though the newly created table only contains\n            data after the table recreation. BigQuery imposes a 1 MB limit on streaming\n            insert row size, therefore any instance that generates more than 1 MB\n            of BigQuery data will not be streamed. If an instance cannot be streamed\n            to BigQuery, errors will be logged to Cloud Logging (see [Viewing error\n            logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).'\n      type: object\n    GoogleCloudHealthcareV1beta1FhirBigQueryDestination:\n      description: The configuration for exporting to BigQuery.\n      properties:\n        datasetUri:\n          description: BigQuery URI to an existing dataset, up to 2000 characters\n            long, in the format `bq://projectId.bqDatasetId`.\n          type: string\n        force:\n          description: Use `write_disposition` instead. If `write_disposition` is\n            specified, this parameter is ignored. force=false is equivalent to write_disposition=WRITE_EMPTY\n            and force=true is equivalent to write_disposition=WRITE_TRUNCATE.\n          type: boolean\n        schemaConfig:\n          $ref: '#/components/schemas/SchemaConfig'\n          description: The configuration for the exported BigQuery schema.\n        writeDisposition:\n          description: Determines if existing data in the destination dataset is overwritten,\n            appended to, or not written if the tables contain data. If a write_disposition\n            is specified, the `force` parameter is ignored.\n          enum:\n          - WRITE_DISPOSITION_UNSPECIFIED\n          - WRITE_EMPTY\n          - WRITE_TRUNCATE\n          - WRITE_APPEND\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1FhirExportResourcesResponse:\n      description: Response when all resources export successfully. This structure\n        is included in the response to describe the detailed outcome after the operation\n        finishes successfully.\n      properties: {}\n      type: object\n    GoogleCloudHealthcareV1beta1FhirGcsDestination:\n      description: The configuration for exporting to Cloud Storage.\n      properties:\n        uriPrefix:\n          description: URI for a Cloud Storage directory where result files should\n            be written (in the format `gs://{bucket-id}/{path/to/destination/dir}`).\n            If there is no trailing slash, the service appends one when composing\n            the object path. The Cloud Storage bucket referenced in `uri_prefix` must\n            exist or an error occurs.\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1FhirGcsSource:\n      description: Specifies the configuration for importing data from Cloud Storage.\n      properties:\n        uri:\n          description: 'Points to a Cloud Storage URI containing file(s) to import.\n            The URI must be in the following format: `gs://{bucket_id}/{object_id}`.\n            The URI can include wildcards in `object_id` and thus identify multiple\n            files. Supported wildcards: * `*` to match 0 or more non-separator characters\n            * `**` to match 0 or more characters (including separators). Must be used\n            at the end of a path and with no other wildcards in the path. Can also\n            be used with a file extension (such as .ndjson), which imports all files\n            with the extension in the specified directory and its sub-directories.\n            For example, `gs://my-bucket/my-directory/**.ndjson` imports all files\n            with `.ndjson` extensions in `my-directory/` and its sub-directories.\n            * `?` to match 1 character Files matching the wildcard are expected to\n            contain content only, no metadata.'\n          type: string\n      type: object\n    GoogleCloudHealthcareV1beta1FhirImportResourcesResponse:\n      description: Final response of importing resources. This structure is included\n        in the response to describe the detailed outcome after the operation finishes\n        successfully.\n      properties: {}\n      type: object\n    GroupOrSegment:\n      description: Construct representing a logical group or a segment.\n      properties:\n        group:\n          $ref: '#/components/schemas/SchemaGroup'\n        segment:\n          $ref: '#/components/schemas/SchemaSegment'\n      type: object\n    Hl7SchemaConfig:\n      description: Root config message for HL7v2 schema. This contains a schema structure\n        of groups and segments, and filters that determine which messages to apply\n        the schema structure to.\n      properties:\n        messageSchemaConfigs:\n          additionalProperties:\n            $ref: '#/components/schemas/SchemaGroup'\n          description: Map from each HL7v2 message type and trigger event pair, such\n            as ADT_A04, to its schema configuration root group.\n          type: object\n        version:\n          description: Each VersionSource is tested and only if they all match is\n            the schema used for the message.\n          items:\n            $ref: '#/components/schemas/VersionSource'\n          type: array\n      type: object\n    Hl7TypesConfig:\n      description: Root config for HL7v2 datatype definitions for a specific HL7v2\n        version.\n      properties:\n        type:\n          description: The HL7v2 type definitions.\n          items:\n            $ref: '#/components/schemas/Type'\n          type: array\n        version:\n          description: The version selectors that this config applies to. A message\n            must match ALL version sources to apply.\n          items:\n            $ref: '#/components/schemas/VersionSource'\n          type: array\n      type: object\n    Hl7V2NotificationConfig:\n      description: Specifies where and whether to send notifications upon changes\n        to a data store.\n      properties:\n        filter:\n          description: 'Restricts notifications sent for messages matching a filter.\n            If this is empty, all messages are matched. The following syntax is available:\n            * A string field value can be written as text inside quotation marks,\n            for example `\"query text\"`. The only valid relational operation for text\n            fields is equality (`=`), where text is searched within the field, rather\n            than having the field be equal to the text. For example, `\"Comment = great\"`\n            returns messages with `great` in the comment field. * A number field value\n            can be written as an integer, a decimal, or an exponential. The valid\n            relational operators for number fields are the equality operator (`=`),\n            along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`).\n            Note that there is no inequality (`!=`) operator. You can prepend the\n            `NOT` operator to an expression to negate it. * A date field value must\n            be written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339\n            time format. Leading zeros are required for one-digit months and days.\n            The valid relational operators for date fields are the equality operator\n            (`=`) , along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`,\n            `\u003e=`). Note that there is no inequality (`!=`) operator. You can prepend\n            the `NOT` operator to an expression to negate it. * Multiple field query\n            expressions can be combined in one query by adding `AND` or `OR` operators\n            between the expressions. If a boolean operator appears within a quoted\n            string, it is not treated as special, it''s just another part of the character\n            string to be matched. You can prepend the `NOT` operator to an expression\n            to negate it. Fields/functions available for filtering are: * `message_type`,\n            from the MSH-9.1 field. For example, `NOT message_type = \"ADT\"`. * `send_date`\n            or `sendDate`, the YYYY-MM-DD date the message was sent in the dataset''s\n            time_zone, from the MSH-7 segment. For example, `send_date \u003c \"2017-01-02\"`.\n            * `send_time`, the timestamp when the message was sent, using the RFC3339\n            time format for comparisons, from the MSH-7 segment. For example, `send_time\n            \u003c \"2017-01-02T00:00:00-05:00\"`. * `create_time`, the timestamp when the\n            message was created in the HL7v2 store. Use the RFC3339 time format for\n            comparisons. For example, `create_time \u003c \"2017-01-02T00:00:00-05:00\"`.\n            * `send_facility`, the care center that the message came from, from the\n            MSH-4 segment. For example, `send_facility = \"ABC\"`. * `PatientId(value,\n            type)`, which matches if the message lists a patient having an ID of the\n            given value and type in the PID-2, PID-3, or PID-4 segments. For example,\n            `PatientId(\"123456\", \"MRN\")`. * `labels.x`, a string value of the label\n            with key `x` as set using the Message.labels map. For example, `labels.\"priority\"=\"high\"`.\n            The operator `:*` can be used to assert the existence of a label. For\n            example, `labels.\"priority\":*`.'\n          type: string\n        pubsubTopic:\n          description: 'The [Pub/Sub](https://cloud.google.com/pubsub/docs/) topic\n            that notifications of changes are published on. Supplied by the client.\n            The notification is a `PubsubMessage` with the following fields: * `PubsubMessage.Data`\n            contains the resource name. * `PubsubMessage.MessageId` is the ID of this\n            notification. It is guaranteed to be unique within the topic. * `PubsubMessage.PublishTime`\n            is the time when the message was published. Note that notifications are\n            only sent if the topic is non-empty. [Topic names](https://cloud.google.com/pubsub/docs/overview#names)\n            must be scoped to a project. Cloud Healthcare API service account must\n            have publisher permissions on the given Pub/Sub topic. Not having adequate\n            permissions causes the calls that send notifications to fail. If a notification\n            can''t be published to Pub/Sub, errors are logged to Cloud Logging. For\n            more information, see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).'\n          type: string\n      type: object\n    Hl7V2Store:\n      description: Represents an HL7v2 store.\n      properties:\n        labels:\n          additionalProperties:\n            type: string\n          description: 'User-supplied key-value pairs used to organize HL7v2 stores.\n            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding\n            of maximum 128 bytes, and must conform to the following PCRE regular expression:\n            \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63\n            characters long, have a UTF-8 encoding of maximum 128 bytes, and must\n            conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n            No more than 64 labels can be associated with a given store.'\n          type: object\n        name:\n          description: Resource name of the HL7v2 store, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.\n          type: string\n        notificationConfig:\n          $ref: '#/components/schemas/NotificationConfig'\n          description: The notification destination all messages (both Ingest \u0026 Create)\n            are published on. Only the message name is sent as part of the notification.\n            If this is unset, no notifications are sent. Supplied by the client.\n        notificationConfigs:\n          description: A list of notification configs. Each configuration uses a filter\n            to determine whether to publish a message (both Ingest \u0026 Create) on the\n            corresponding notification destination. Only the message name is sent\n            as part of the notification. Supplied by the client.\n          items:\n            $ref: '#/components/schemas/Hl7V2NotificationConfig'\n          type: array\n        parserConfig:\n          $ref: '#/components/schemas/ParserConfig'\n          description: The configuration for the parser. It determines how the server\n            parses the messages.\n        rejectDuplicateMessage:\n          description: Determines whether to reject duplicate messages. A duplicate\n            message is a message with the same raw bytes as a message that has already\n            been ingested/created in this HL7v2 store. The default value is false,\n            meaning that the store accepts the duplicate messages and it also returns\n            the same ACK message in the IngestMessageResponse as has been returned\n            previously. Note that only one resource is created in the store. When\n            this field is set to true, CreateMessage/IngestMessage requests with a\n            duplicate message will be rejected by the store, and IngestMessageErrorDetail\n            returns a NACK message upon rejection.\n          type: boolean\n      type: object\n    HttpBody:\n      description: 'Message that represents an arbitrary HTTP body. It should only\n        be used for payload formats that can''t be represented as JSON, such as raw\n        binary or an HTML page. This message can be used both in streaming and non-streaming\n        API methods in the request as well as the response. It can be used as a top-level\n        request field, which is convenient if one wants to extract parameters from\n        either the URL or HTTP template into the request fields and also want access\n        to the raw HTTP body. Example: message GetResourceRequest { // A unique request\n        id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody\n        http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest)\n        returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns\n        (google.protobuf.Empty); } Example with streaming methods: service CaldavService\n        { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody);\n        rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody);\n        } Use of this type only changes how the request and response bodies are handled,\n        all other features will continue to work unchanged.'\n      properties:\n        contentType:\n          description: The HTTP Content-Type header value specifying the content type\n            of the body.\n          type: string\n        data:\n          description: The HTTP request/response body as raw binary.\n          format: byte\n          type: string\n        extensions:\n          description: Application specific response metadata. Must be set in the\n            first response for streaming APIs.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type\n                URL.\n            type: object\n          type: array\n      type: object\n    Image:\n      description: Raw bytes representing consent artifact content.\n      properties:\n        gcsUri:\n          description: 'Input only. Points to a Cloud Storage URI containing the consent\n            artifact content. The URI must be in the following format: `gs://{bucket_id}/{object_id}`.\n            The Cloud Healthcare API service account must have the `roles/storage.objectViewer`\n            Cloud IAM role for this Cloud Storage location. The consent artifact content\n            at this URI is copied to a Cloud Storage location managed by the Cloud\n            Healthcare API. Responses to fetching requests return the consent artifact\n            content in raw_bytes.'\n          type: string\n        rawBytes:\n          description: Consent artifact content represented as a stream of bytes.\n            This field is populated when returned in GetConsentArtifact response,\n            but not included in CreateConsentArtifact and ListConsentArtifact response.\n          format: byte\n          type: string\n      type: object\n    ImageAnnotation:\n      description: Image annotation.\n      properties:\n        boundingPolys:\n          description: The list of polygons outlining the sensitive regions in the\n            image.\n          items:\n            $ref: '#/components/schemas/BoundingPoly'\n          type: array\n        frameIndex:\n          description: 0-based index of the image frame. For example, an image frame\n            in a DICOM instance.\n          format: int32\n          type: integer\n      type: object\n    ImageConfig:\n      description: Specifies how to handle de-identification of image pixels.\n      properties:\n        textRedactionMode:\n          description: Determines how to redact text from image.\n          enum:\n          - TEXT_REDACTION_MODE_UNSPECIFIED\n          - REDACT_ALL_TEXT\n          - REDACT_SENSITIVE_TEXT\n          - REDACT_NO_TEXT\n          type: string\n      type: object\n    ImportAnnotationsRequest:\n      description: Request to import Annotations. The Annotations to be imported must\n        have client-supplied resource names which indicate the annotation resource.\n        The import operation is not atomic. If a failure occurs, any annotations already\n        imported are not removed.\n      properties:\n        gcsSource:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1AnnotationGcsSource'\n      type: object\n    ImportAnnotationsResponse:\n      description: Final response of importing Annotations in successful case. This\n        structure is included in the response. It is only included when the operation\n        finishes.\n      properties: {}\n      type: object\n    ImportDicomDataRequest:\n      description: Imports data into the specified DICOM store. Returns an error if\n        any of the files to import are not DICOM files. This API accepts duplicate\n        DICOM instances by ignoring the newly-pushed instance. It does not overwrite.\n      properties:\n        gcsSource:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1DicomGcsSource'\n          description: Cloud Storage source data location and import configuration.\n            The Cloud Healthcare Service Agent requires the `roles/storage.objectViewer`\n            Cloud IAM roles on the Cloud Storage location.\n      type: object\n    ImportDicomDataResponse:\n      description: Returns additional information in regards to a completed DICOM\n        store import.\n      properties: {}\n      type: object\n    ImportMessagesRequest:\n      description: Request to import messages.\n      properties:\n        gcsSource:\n          $ref: '#/components/schemas/GcsSource'\n          description: Cloud Storage source data location and import configuration.\n            The Cloud Healthcare Service Agent requires the `roles/storage.objectViewer`\n            Cloud IAM roles on the Cloud Storage location.\n      type: object\n    ImportMessagesResponse:\n      description: Final response of importing messages. This structure is included\n        in the response to describe the detailed outcome. It is only included when\n        the operation finishes successfully.\n      properties: {}\n      type: object\n    ImportResourcesRequest:\n      description: Request to import resources.\n      properties:\n        contentStructure:\n          description: The content structure in the source location. If not specified,\n            the server treats the input source files as BUNDLE.\n          enum:\n          - CONTENT_STRUCTURE_UNSPECIFIED\n          - BUNDLE\n          - RESOURCE\n          - BUNDLE_PRETTY\n          - RESOURCE_PRETTY\n          type: string\n        gcsSource:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1FhirGcsSource'\n          description: Cloud Storage source data location and import configuration.\n            The Cloud Healthcare Service Agent requires the `roles/storage.objectViewer`\n            Cloud IAM roles on the Cloud Storage location. The Healthcare Service\n            Agent Each Cloud Storage object should be a text file that contains the\n            format specified in ContentStructure.\n      type: object\n    InfoTypeConfig:\n      description: Specifies how to use infoTypes for evaluation. For example, a user\n        might only want to evaluate `PERSON`, `LOCATION`, and `AGE`.\n      properties:\n        evaluateList:\n          $ref: '#/components/schemas/FilterList'\n        ignoreList:\n          $ref: '#/components/schemas/FilterList'\n        strictMatching:\n          description: 'If `TRUE`, infoTypes described by `filter` are used for evaluation.\n            Otherwise, infoTypes are not considered for evaluation. For example: *\n            Annotated text: \"Toronto is a location\" * Finding 1: `{\"infoType\": \"PERSON\",\n            \"quote\": \"Toronto\", \"start\": 0, \"end\": 7}` * Finding 2: `{\"infoType\":\n            \"CITY\", \"quote\": \"Toronto\", \"start\": 0, \"end\": 7}` * Finding 3: `{}` *\n            Ground truth: `{\"infoType\": \"LOCATION\", \"quote\": \"Toronto\", \"start\": 0,\n            \"end\": 7}` When `strict_matching` is `TRUE`: * Finding 1: 1 false positive\n            * Finding 2: 1 false positive * Finding 3: 1 false negative When `strict_matching`\n            is `FALSE`: * Finding 1: 1 true positive * Finding 2: 1 true positive\n            * Finding 3: 1 false negative'\n          type: boolean\n      type: object\n    InfoTypeTransformation:\n      description: A transformation to apply to text that is identified as a specific\n        info_type.\n      properties:\n        characterMaskConfig:\n          $ref: '#/components/schemas/CharacterMaskConfig'\n          description: Config for character mask.\n        cryptoHashConfig:\n          $ref: '#/components/schemas/CryptoHashConfig'\n          description: Config for crypto hash.\n        dateShiftConfig:\n          $ref: '#/components/schemas/DateShiftConfig'\n          description: Config for date shift.\n        infoTypes:\n          description: InfoTypes to apply this transformation to. If this is not specified,\n            this transformation becomes the default transformation, and is used for\n            any info_type that is not specified in another transformation.\n          items:\n            type: string\n          type: array\n        redactConfig:\n          $ref: '#/components/schemas/RedactConfig'\n          description: Config for text redaction.\n        replaceWithInfoTypeConfig:\n          $ref: '#/components/schemas/ReplaceWithInfoTypeConfig'\n          description: Config for replace with InfoType.\n      type: object\n    IngestMessageRequest:\n      description: Ingests a message into the specified HL7v2 store.\n      properties:\n        message:\n          $ref: '#/components/schemas/Message'\n          description: HL7v2 message to ingest.\n      type: object\n    IngestMessageResponse:\n      description: Acknowledges that a message has been ingested into the specified\n        HL7v2 store.\n      properties:\n        hl7Ack:\n          description: HL7v2 ACK message.\n          format: byte\n          type: string\n        message:\n          $ref: '#/components/schemas/Message'\n          description: Created message resource.\n      type: object\n    LinkedEntity:\n      description: EntityMentions can be linked to multiple entities using a LinkedEntity\n        message lets us add other fields, e.g. confidence.\n      properties:\n        entityId:\n          description: entity_id is a concept unique identifier. These are prefixed\n            by a string that identifies the entity coding system, followed by the\n            unique identifier within that system. For example, \"UMLS/C0000970\". This\n            also supports ad hoc entities, which are formed by normalizing entity\n            mention content.\n          type: string\n      type: object\n    ListAnnotationStoresResponse:\n      description: Lists the Annotation stores in the given dataset.\n      properties:\n        annotationStores:\n          description: The returned Annotation stores. Won't be more Annotation stores\n            than the value of page_size in the request.\n          items:\n            $ref: '#/components/schemas/AnnotationStore'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListAnnotationsResponse:\n      description: Lists the Annotations in the specified Annotation store.\n      properties:\n        annotations:\n          description: The returned Annotations. Won't be more values than the value\n            of page_size in the request. See `AnnotationView` in the request for populated\n            fields.\n          items:\n            $ref: '#/components/schemas/Annotation'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListAttributeDefinitionsResponse:\n      properties:\n        attributeDefinitions:\n          description: The returned Attribute definitions. The maximum number of attributes\n            returned is determined by the value of page_size in the ListAttributeDefinitionsRequest.\n          items:\n            $ref: '#/components/schemas/AttributeDefinition'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListConsentArtifactsResponse:\n      properties:\n        consentArtifacts:\n          description: The returned Consent artifacts. The maximum number of artifacts\n            returned is determined by the value of page_size in the ListConsentArtifactsRequest.\n          items:\n            $ref: '#/components/schemas/ConsentArtifact'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListConsentRevisionsResponse:\n      properties:\n        consents:\n          description: The returned Consent revisions. The maximum number of revisions\n            returned is determined by the value of `page_size` in the ListConsentRevisionsRequest.\n          items:\n            $ref: '#/components/schemas/Consent'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListConsentStoresResponse:\n      properties:\n        consentStores:\n          description: The returned consent stores. The maximum number of stores returned\n            is determined by the value of page_size in the ListConsentStoresRequest.\n          items:\n            $ref: '#/components/schemas/ConsentStore'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListConsentsResponse:\n      properties:\n        consents:\n          description: The returned Consents. The maximum number of Consents returned\n            is determined by the value of page_size in the ListConsentsRequest.\n          items:\n            $ref: '#/components/schemas/Consent'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListDatasetsResponse:\n      description: Lists the available datasets.\n      properties:\n        datasets:\n          description: The first page of datasets.\n          items:\n            $ref: '#/components/schemas/Dataset'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListDicomStoresResponse:\n      description: Lists the DICOM stores in the given dataset.\n      properties:\n        dicomStores:\n          description: The returned DICOM stores. Won't be more DICOM stores than\n            the value of page_size in the request.\n          items:\n            $ref: '#/components/schemas/DicomStore'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListFhirStoresResponse:\n      description: Lists the FHIR stores in the given dataset.\n      properties:\n        fhirStores:\n          description: The returned FHIR stores. Won't be more FHIR stores than the\n            value of page_size in the request.\n          items:\n            $ref: '#/components/schemas/FhirStore'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListHl7V2StoresResponse:\n      description: Lists the HL7v2 stores in the given dataset.\n      properties:\n        hl7V2Stores:\n          description: The returned HL7v2 stores. Won't be more HL7v2 stores than\n            the value of page_size in the request.\n          items:\n            $ref: '#/components/schemas/Hl7V2Store'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListLocationsResponse:\n      description: The response message for Locations.ListLocations.\n      properties:\n        locations:\n          description: A list of locations that matches the specified filter in the\n            request.\n          items:\n            $ref: '#/components/schemas/Location'\n          type: array\n        nextPageToken:\n          description: The standard List next-page token.\n          type: string\n      type: object\n    ListMessagesResponse:\n      description: Lists the messages in the specified HL7v2 store.\n      properties:\n        hl7V2Messages:\n          description: The returned Messages. Won't be more Messages than the value\n            of page_size in the request. See view for populated fields.\n          items:\n            $ref: '#/components/schemas/Message'\n          type: array\n        nextPageToken:\n          description: Token to retrieve the next page of results or empty if there\n            are no more results in the list.\n          type: string\n      type: object\n    ListOperationsResponse:\n      description: The response message for Operations.ListOperations.\n      properties:\n        nextPageToken:\n          description: The standard List next-page token.\n          type: string\n        operations:\n          description: A list of operations that matches the specified filter in the\n            request.\n          items:\n            $ref: '#/components/schemas/Operation'\n          type: array\n      type: object\n    ListUserDataMappingsResponse:\n      properties:\n        nextPageToken:\n          description: Token to retrieve the next page of results, or empty if there\n            are no more results in the list.\n          type: string\n        userDataMappings:\n          description: The returned User data mappings. The maximum number of User\n            data mappings returned is determined by the value of page_size in the\n            ListUserDataMappingsRequest.\n          items:\n            $ref: '#/components/schemas/UserDataMapping'\n          type: array\n      type: object\n    Location:\n      description: A resource that represents Google Cloud Platform location.\n      properties:\n        displayName:\n          description: The friendly name for this location, typically a nearby city\n            name. For example, \"Tokyo\".\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: 'Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\":\n            \"us-east1\"}'\n          type: object\n        locationId:\n          description: 'The canonical id for this location. For example: `\"us-east1\"`.'\n          type: string\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: Service-specific metadata. For example the available capacity\n            at the given location.\n          type: object\n        name:\n          description: 'Resource name for the location, which may vary between implementations.\n            For example: `\"projects/example-project/locations/us-east1\"`'\n          type: string\n      type: object\n    Message:\n      description: A complete HL7v2 message. See [Introduction to HL7 Standards] (https://www.hl7.org/implement/standards/index.cfm?ref=common)\n        for details on the standard.\n      properties:\n        createTime:\n          description: Output only. The datetime when the message was created. Set\n            by the server.\n          format: google-datetime\n          readOnly: true\n          type: string\n        data:\n          description: Raw message bytes.\n          format: byte\n          type: string\n        labels:\n          additionalProperties:\n            type: string\n          description: 'User-supplied key-value pairs used to organize HL7v2 stores.\n            Label keys must be between 1 and 63 characters long, have a UTF-8 encoding\n            of maximum 128 bytes, and must conform to the following PCRE regular expression:\n            \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63\n            characters long, have a UTF-8 encoding of maximum 128 bytes, and must\n            conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n            No more than 64 labels can be associated with a given store.'\n          type: object\n        messageType:\n          description: The message type for this message. MSH-9.1.\n          type: string\n        name:\n          description: Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.\n            Assigned by the server.\n          type: string\n        parsedData:\n          $ref: '#/components/schemas/ParsedData'\n          description: Output only. The parsed version of the raw message data.\n          readOnly: true\n        patientIds:\n          description: All patient IDs listed in the PID-2, PID-3, and PID-4 segments\n            of this message.\n          items:\n            $ref: '#/components/schemas/PatientId'\n          type: array\n        schematizedData:\n          $ref: '#/components/schemas/SchematizedData'\n          description: The parsed version of the raw message data schematized according\n            to this store's schemas and type definitions.\n        sendFacility:\n          description: The hospital that this message came from. MSH-4.\n          type: string\n        sendTime:\n          description: The datetime the sending application sent this message. MSH-7.\n          format: google-datetime\n          type: string\n      type: object\n    NotificationConfig:\n      description: Specifies where to send notifications upon changes to a data store.\n      properties:\n        pubsubTopic:\n          description: The [Pub/Sub](https://cloud.google.com/pubsub/docs/) topic\n            that notifications of changes are published on. Supplied by the client.\n            PubsubMessage.Data contains the resource name. PubsubMessage.MessageId\n            is the ID of this message. It is guaranteed to be unique within the topic.\n            PubsubMessage.PublishTime is the time at which the message was published.\n            Notifications are only sent if the topic is non-empty. [Topic names](https://cloud.google.com/pubsub/docs/overview#names)\n            must be scoped to a project. Cloud Healthcare API service account must\n            have publisher permissions on the given Pub/Sub topic. Not having adequate\n            permissions causes the calls that send notifications to fail. If a notification\n            can't be published to Pub/Sub, errors are logged to Cloud Logging (see\n            [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).\n            If the number of errors exceeds a certain rate, some aren't submitted.\n            Note that not all operations trigger notifications, see [Configuring Pub/Sub\n            notifications](https://cloud.google.com/healthcare/docs/how-tos/pubsub)\n            for specific details.\n          type: string\n        sendForBulkImport:\n          description: Indicates whether or not to send Pub/Sub notifications on bulk\n            import. Only supported for DICOM imports.\n          type: boolean\n      type: object\n    Operation:\n      description: This resource represents a long-running operation that is the result\n        of a network API call.\n      properties:\n        done:\n          description: If the value is `false`, it means the operation is still in\n            progress. If `true`, the operation is completed, and either `error` or\n            `response` is available.\n          type: boolean\n        error:\n          $ref: '#/components/schemas/Status'\n          description: The error result of the operation in case of failure or cancellation.\n        metadata:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: Service-specific metadata associated with the operation. It\n            typically contains progress information and common metadata such as create\n            time. Some services might not provide such metadata. Any method that returns\n            a long-running operation should document the metadata type, if any.\n          type: object\n        name:\n          description: The server-assigned name, which is only unique within the same\n            service that originally returns it. If you use the default HTTP mapping,\n            the `name` should be a resource name ending with `operations/{unique_id}`.\n          type: string\n        response:\n          additionalProperties:\n            description: Properties of the object. Contains field @type with type\n              URL.\n          description: The normal response of the operation in case of success. If\n            the original method returns no data on success, such as `Delete`, the\n            response is `google.protobuf.Empty`. If the original method is standard\n            `Get`/`Create`/`Update`, the response should be the resource. For other\n            methods, the response should have the type `XxxResponse`, where `Xxx`\n            is the original method name. For example, if the original method name\n            is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.\n          type: object\n      type: object\n    OperationMetadata:\n      description: OperationMetadata provides information about the operation execution.\n        Returned in the long-running operation's metadata field.\n      properties:\n        apiMethodName:\n          description: The name of the API method that initiated the operation.\n          type: string\n        cancelRequested:\n          description: Specifies if cancellation was requested for the operation.\n          type: boolean\n        counter:\n          $ref: '#/components/schemas/ProgressCounter'\n        createTime:\n          description: The time at which the operation was created by the API.\n          format: google-datetime\n          type: string\n        endTime:\n          description: The time at which execution was completed.\n          format: google-datetime\n          type: string\n        logsUrl:\n          description: A link to audit and error logs in the log viewer. Error logs\n            are generated only by some operations, listed at [Viewing error logs in\n            Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).\n          type: string\n      type: object\n    ParsedData:\n      description: The content of an HL7v2 message in a structured format.\n      properties:\n        segments:\n          items:\n            $ref: '#/components/schemas/Segment'\n          type: array\n      type: object\n    ParserConfig:\n      description: The configuration for the parser. It determines how the server\n        parses the messages.\n      properties:\n        allowNullHeader:\n          description: Determines whether messages with no header are allowed.\n          type: boolean\n        schema:\n          $ref: '#/components/schemas/SchemaPackage'\n          description: Schemas used to parse messages in this store, if schematized\n            parsing is desired.\n        segmentTerminator:\n          description: Byte(s) to use as the segment terminator. If this is unset,\n            '\\r' is used as segment terminator, matching the HL7 version 2 specification.\n          format: byte\n          type: string\n        version:\n          description: Immutable. Determines the version of the unschematized parser\n            to be used when `schema` is not given. This field is immutable after store\n            creation.\n          enum:\n          - PARSER_VERSION_UNSPECIFIED\n          - V1\n          - V2\n          type: string\n      type: object\n    PatientId:\n      description: A patient identifier and associated type.\n      properties:\n        type:\n          description: ID type. For example, MRN or NHS.\n          type: string\n        value:\n          description: The patient's unique identifier.\n          type: string\n      type: object\n    Policy:\n      description: 'An Identity and Access Management (IAM) policy, which specifies\n        access controls for Google Cloud resources. A `Policy` is a collection of\n        `bindings`. A `binding` binds one or more `members`, or principals, to a single\n        `role`. Principals can be user accounts, service accounts, Google groups,\n        and domains (such as G Suite). A `role` is a named list of permissions; each\n        `role` can be an IAM predefined role or a user-created custom role. For some\n        types of Google Cloud resources, a `binding` can also specify a `condition`,\n        which is a logical expression that allows access to a resource only if the\n        expression evaluates to `true`. A condition can add constraints based on attributes\n        of the request, the resource, or both. To learn which resources support conditions\n        in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\",\n        \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\",\n        \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\":\n        \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\"\n        ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant\n        access after Sep 2020\", \"expression\": \"request.time \u003c timestamp(''2020-10-01T00:00:00.000Z'')\",\n        } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings:\n        - members: - user:mike@example.com - group:admins@example.com - domain:google.com\n        - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\n        - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\n        condition: title: expirable access description: Does not grant access after\n        Sep 2020 expression: request.time \u003c timestamp(''2020-10-01T00:00:00.000Z'')\n        etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see\n        the [IAM documentation](https://cloud.google.com/iam/docs/).'\n      properties:\n        auditConfigs:\n          description: Specifies cloud audit logging configuration for this policy.\n          items:\n            $ref: '#/components/schemas/AuditConfig'\n          type: array\n        bindings:\n          description: Associates a list of `members`, or principals, with a `role`.\n            Optionally, may specify a `condition` that determines how and when the\n            `bindings` are applied. Each of the `bindings` must contain at least one\n            principal. The `bindings` in a `Policy` can refer to up to 1,500 principals;\n            up to 250 of these principals can be Google groups. Each occurrence of\n            a principal counts towards these limits. For example, if the `bindings`\n            grant 50 different roles to `user:alice@example.com`, and not to any other\n            principal, then you can add another 1,450 principals to the `bindings`\n            in the `Policy`.\n          items:\n            $ref: '#/components/schemas/Binding'\n          type: array\n        etag:\n          description: '`etag` is used for optimistic concurrency control as a way\n            to help prevent simultaneous updates of a policy from overwriting each\n            other. It is strongly suggested that systems make use of the `etag` in\n            the read-modify-write cycle to perform policy updates in order to avoid\n            race conditions: An `etag` is returned in the response to `getIamPolicy`,\n            and systems are expected to put that etag in the request to `setIamPolicy`\n            to ensure that their change will be applied to the same version of the\n            policy. **Important:** If you use IAM Conditions, you must include the\n            `etag` field whenever you call `setIamPolicy`. If you omit this field,\n            then IAM allows you to overwrite a version `3` policy with a version `1`\n            policy, and all of the conditions in the version `3` policy are lost.'\n          format: byte\n          type: string\n        version:\n          description: 'Specifies the format of the policy. Valid values are `0`,\n            `1`, and `3`. Requests that specify an invalid value are rejected. Any\n            operation that affects conditional role bindings must specify version\n            `3`. This requirement applies to the following operations: * Getting a\n            policy that includes a conditional role binding * Adding a conditional\n            role binding to a policy * Changing a conditional role binding in a policy\n            * Removing any role binding, with or without a condition, from a policy\n            that includes conditions **Important:** If you use IAM Conditions, you\n            must include the `etag` field whenever you call `setIamPolicy`. If you\n            omit this field, then IAM allows you to overwrite a version `3` policy\n            with a version `1` policy, and all of the conditions in the version `3`\n            policy are lost. If a policy does not include any conditions, operations\n            on that policy may specify any valid version or leave the field unset.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'\n          format: int32\n          type: integer\n      type: object\n    ProgressCounter:\n      description: ProgressCounter provides counters to describe an operation's progress.\n      properties:\n        failure:\n          description: The number of units that failed in the operation.\n          format: int64\n          type: string\n        pending:\n          description: The number of units that are pending in the operation.\n          format: int64\n          type: string\n        success:\n          description: The number of units that succeeded in the operation.\n          format: int64\n          type: string\n      type: object\n    QueryAccessibleDataRequest:\n      description: Queries all data_ids that are consented for a given use in the\n        given consent store and writes them to a specified destination. The returned\n        Operation includes a progress counter for the number of User data mappings\n        processed. Errors are logged to Cloud Logging (see [Viewing error logs in\n        Cloud Logging] (https://cloud.google.com/healthcare/docs/how-tos/logging)\n        and [QueryAccessibleData] for a sample log entry).\n      properties:\n        gcsDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1ConsentGcsDestination'\n          description: 'The Cloud Storage destination. The Cloud Healthcare API service\n            account must have the `roles/storage.objectAdmin` Cloud IAM role for this\n            Cloud Storage location. The object name is in the following format: query-accessible-data-result-{operation_id}.txt\n            where each line contains a single data_id.'\n        requestAttributes:\n          additionalProperties:\n            type: string\n          description: The values of request attributes associated with this access\n            request.\n          type: object\n        resourceAttributes:\n          additionalProperties:\n            type: string\n          description: Optional. The values of resource attributes associated with\n            the type of resources being requested. If no values are specified, then\n            all resource types are included in the output.\n          type: object\n      type: object\n    QueryAccessibleDataResponse:\n      description: Response for successful QueryAccessibleData operations. This structure\n        is included in the response upon operation completion.\n      properties:\n        gcsUris:\n          description: List of files, each of which contains a list of data_id(s)\n            that are consented for a specified use in the request.\n          items:\n            type: string\n          type: array\n      type: object\n    RedactConfig:\n      description: Define how to redact sensitive values. Default behaviour is erase.\n        For example, \"My name is Jane.\" becomes \"My name is .\"\n      properties: {}\n      type: object\n    RejectConsentRequest:\n      description: Rejects the latest revision of the specified Consent by committing\n        a new revision with `state` updated to `REJECTED`. If the latest revision\n        of the given Consent is in the `REJECTED` state, no new revision is committed.\n      properties:\n        consentArtifact:\n          description: Optional. The resource name of the Consent artifact that contains\n            documentation of the user's rejection of the draft Consent, of the form\n            `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.\n            If the draft Consent had a Consent artifact, this Consent artifact overwrites\n            it.\n          type: string\n      type: object\n    ReplaceWithInfoTypeConfig:\n      description: When using the INSPECT_AND_TRANSFORM action, each match is replaced\n        with the name of the info_type. For example, \"My name is Jane\" becomes \"My\n        name is [PERSON_NAME].\" The TRANSFORM action is equivalent to redacting.\n      properties: {}\n      type: object\n    ResourceAnnotation:\n      description: Resource level annotation.\n      properties:\n        label:\n          description: A description of the annotation record.\n          type: string\n      type: object\n    Resources:\n      description: A list of FHIR resources.\n      properties:\n        resources:\n          description: List of resources IDs. For example, \"Patient/1234\".\n          items:\n            type: string\n          type: array\n      type: object\n    Result:\n      description: The consent evaluation result for a single `data_id`.\n      properties:\n        consentDetails:\n          additionalProperties:\n            $ref: '#/components/schemas/ConsentEvaluation'\n          description: The resource names of all evaluated Consents mapped to their\n            evaluation.\n          type: object\n        consented:\n          description: Whether the resource is consented for the given use.\n          type: boolean\n        dataId:\n          description: The unique identifier of the evaluated resource.\n          type: string\n      type: object\n    RevokeConsentRequest:\n      description: Revokes the latest revision of the specified Consent by committing\n        a new revision with `state` updated to `REVOKED`. If the latest revision of\n        the given Consent is in the `REVOKED` state, no new revision is committed.\n      properties:\n        consentArtifact:\n          description: Optional. The resource name of the Consent artifact that contains\n            proof of the user's revocation of the Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.\n          type: string\n      type: object\n    SchemaConfig:\n      description: Configuration for the FHIR BigQuery schema. Determines how the\n        server generates the schema.\n      properties:\n        recursiveStructureDepth:\n          description: The depth for all recursive structures in the output analytics\n            schema. For example, `concept` in the CodeSystem resource is a recursive\n            structure; when the depth is 2, the CodeSystem table will have a column\n            called `concept.concept` but not `concept.concept.concept`. If not specified\n            or set to 0, the server will use the default value 2. The maximum depth\n            allowed is 5.\n          format: int64\n          type: string\n        schemaType:\n          description: Specifies the output schema type. Schema type is required.\n          enum:\n          - SCHEMA_TYPE_UNSPECIFIED\n          - LOSSLESS\n          - ANALYTICS\n          type: string\n      type: object\n    SchemaGroup:\n      description: An HL7v2 logical group construct.\n      properties:\n        choice:\n          description: True indicates that this is a choice group, meaning that only\n            one of its segments can exist in a given message.\n          type: boolean\n        maxOccurs:\n          description: The maximum number of times this group can be repeated. 0 or\n            -1 means unbounded.\n          format: int32\n          type: integer\n        members:\n          description: Nested groups and/or segments.\n          items:\n            $ref: '#/components/schemas/GroupOrSegment'\n          type: array\n        minOccurs:\n          description: The minimum number of times this group must be present/repeated.\n          format: int32\n          type: integer\n        name:\n          description: The name of this group. For example, \"ORDER_DETAIL\".\n          type: string\n      type: object\n    SchemaPackage:\n      description: A schema package contains a set of schemas and type definitions.\n      properties:\n        ignoreMinOccurs:\n          description: Flag to ignore all min_occurs restrictions in the schema. This\n            means that incoming messages can omit any group, segment, field, component,\n            or subcomponent.\n          type: boolean\n        schemas:\n          description: Schema configs that are layered based on their VersionSources\n            that match the incoming message. Schema configs present in higher indices\n            override those in lower indices with the same message type and trigger\n            event if their VersionSources all match an incoming message.\n          items:\n            $ref: '#/components/schemas/Hl7SchemaConfig'\n          type: array\n        schematizedParsingType:\n          description: Determines how messages that fail to parse are handled.\n          enum:\n          - SCHEMATIZED_PARSING_TYPE_UNSPECIFIED\n          - SOFT_FAIL\n          - HARD_FAIL\n          type: string\n        types:\n          description: Schema type definitions that are layered based on their VersionSources\n            that match the incoming message. Type definitions present in higher indices\n            override those in lower indices with the same type name if their VersionSources\n            all match an incoming message.\n          items:\n            $ref: '#/components/schemas/Hl7TypesConfig'\n          type: array\n        unexpectedSegmentHandling:\n          description: Determines how unexpected segments (segments not matched to\n            the schema) are handled.\n          enum:\n          - UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED\n          - FAIL\n          - SKIP\n          - PARSE\n          type: string\n      type: object\n    SchemaSegment:\n      description: An HL7v2 Segment.\n      properties:\n        maxOccurs:\n          description: The maximum number of times this segment can be present in\n            this group. 0 or -1 means unbounded.\n          format: int32\n          type: integer\n        minOccurs:\n          description: The minimum number of times this segment can be present in\n            this group.\n          format: int32\n          type: integer\n        type:\n          description: The Segment type. For example, \"PID\".\n          type: string\n      type: object\n    SchematizedData:\n      description: The content of an HL7v2 message in a structured format as specified\n        by a schema.\n      properties:\n        data:\n          description: JSON output of the parser.\n          type: string\n        error:\n          description: The error output of the parser.\n          type: string\n      type: object\n    SearchConfig:\n      description: Contains the configuration for FHIR search.\n      properties:\n        searchParameters:\n          description: A list of search parameters in this FHIR store that are used\n            to configure this FHIR store.\n          items:\n            $ref: '#/components/schemas/SearchParameter'\n          type: array\n      type: object\n    SearchParameter:\n      description: Contains the versioned name and the URL for one SearchParameter.\n      properties:\n        canonicalUrl:\n          description: The canonical url of the search parameter resource.\n          type: string\n        parameter:\n          description: The versioned name of the search parameter resource. The format\n            is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/_history/{version-id}\n            For fhir stores with disable_resource_versioning=true, the format is projects/{project-id}/locations/{location}/datasets/{dataset-id}/fhirStores/{fhirStore-id}/fhir/SearchParameter/{resource-id}/\n          type: string\n      type: object\n    SearchResourcesRequest:\n      description: Request to search the resources in the specified FHIR store.\n      properties:\n        resourceType:\n          description: The FHIR resource type to search, such as Patient or Observation.\n            For a complete list, see the FHIR Resource Index ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n            [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n            [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\n          type: string\n      type: object\n    Segment:\n      description: A segment in a structured format.\n      properties:\n        fields:\n          additionalProperties:\n            type: string\n          description: 'A mapping from the positional location to the value. The key\n            string uses zero-based indexes separated by dots to identify Fields, components\n            and sub-components. A bracket notation is also used to identify different\n            instances of a repeated field. Regex for key: (\\d+)(\\[\\d+\\])?(.\\d+)?(.\\d+)?\n            Examples of (key, value) pairs: * (0.1, \"hemoglobin\") denotes that the\n            first component of Field 0 has the value \"hemoglobin\". * (1.1.2, \"CBC\")\n            denotes that the second sub-component of the first component of Field\n            1 has the value \"CBC\". * (1[0].1, \"HbA1c\") denotes that the first component\n            of the first Instance of Field 1, which is repeated, has the value \"HbA1c\".'\n          type: object\n        segmentId:\n          description: A string that indicates the type of segment. For example, EVN\n            or PID.\n          type: string\n        setId:\n          description: Set ID for segments that can be in a set. This can be empty\n            if it's missing or isn't applicable.\n          type: string\n      type: object\n    SensitiveTextAnnotation:\n      description: A TextAnnotation specifies a text range that includes sensitive\n        information.\n      properties:\n        details:\n          additionalProperties:\n            $ref: '#/components/schemas/Detail'\n          description: Maps from a resource slice. For example, FHIR resource field\n            path to a set of sensitive text findings. For example, Appointment.Narrative\n            text1 --\u003e {findings_1, findings_2, findings_3}\n          type: object\n      type: object\n    SetIamPolicyRequest:\n      description: Request message for `SetIamPolicy` method.\n      properties:\n        policy:\n          $ref: '#/components/schemas/Policy'\n          description: 'REQUIRED: The complete policy to be applied to the `resource`.\n            The size of the policy is limited to a few 10s of KB. An empty policy\n            is a valid policy but certain Cloud Platform services (such as Projects)\n            might reject them.'\n        updateMask:\n          description: 'OPTIONAL: A FieldMask specifying which fields of the policy\n            to modify. Only the fields in the mask will be modified. If no mask is\n            provided, the following default mask is used: `paths: \"bindings, etag\"`'\n          format: google-fieldmask\n          type: string\n      type: object\n    Signature:\n      description: User signature.\n      properties:\n        image:\n          $ref: '#/components/schemas/Image'\n          description: Optional. An image of the user's signature.\n        metadata:\n          additionalProperties:\n            type: string\n          description: Optional. Metadata associated with the user's signature. For\n            example, the user's name or the user's title.\n          type: object\n        signatureTime:\n          description: Optional. Timestamp of the signature.\n          format: google-datetime\n          type: string\n        userId:\n          description: Required. User's UUID provided by the client.\n          type: string\n      type: object\n    Status:\n      description: 'The `Status` type defines a logical error model that is suitable\n        for different programming environments, including REST APIs and RPC APIs.\n        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\n        three pieces of data: error code, error message, and error details. You can\n        find out more about this error model and how to work with it in the [API Design\n        Guide](https://cloud.google.com/apis/design/errors).'\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a\n            common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type\n                URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English.\n            Any user-facing error message should be localized and sent in the google.rpc.Status.details\n            field, or localized by the client.\n          type: string\n      type: object\n    StreamConfig:\n      description: Contains configuration for streaming FHIR export.\n      properties:\n        bigqueryDestination:\n          $ref: '#/components/schemas/GoogleCloudHealthcareV1beta1FhirBigQueryDestination'\n          description: The destination BigQuery structure that contains both the dataset\n            location and corresponding schema config. The output is organized in one\n            table per resource type. The server reuses the existing tables (if any)\n            that are named after the resource types, e.g. \"Patient\", \"Observation\".\n            When there is no existing table for a given resource type, the server\n            attempts to create one. When a table schema doesn't align with the schema\n            config, either because of existing incompatible schema or out of band\n            incompatible modification, the server does not stream in new data. One\n            resolution in this case is to delete the incompatible table and let the\n            server recreate one, though the newly created table only contains data\n            after the table recreation. BigQuery imposes a 1 MB limit on streaming\n            insert row size, therefore any resource mutation that generates more than\n            1 MB of BigQuery data will not be streamed. Results are written to BigQuery\n            tables according to the parameters in BigQueryDestination.WriteDisposition.\n            Different versions of the same resource are distinguishable by the meta.versionId\n            and meta.lastUpdated columns. The operation (CREATE/UPDATE/DELETE) that\n            results in the new version is recorded in the meta.tag. The tables contain\n            all historical resource versions since streaming was enabled. For query\n            convenience, the server also creates one view per table of the same name\n            containing only the current resource version. The streamed data in the\n            BigQuery dataset is not guaranteed to be completely unique. The combination\n            of the id and meta.versionId columns should ideally identify a single\n            unique row. But in rare cases, duplicates may exist. At query time, users\n            may use the SQL select statement to keep only one of the duplicate rows\n            given an id and meta.versionId pair. Alternatively, the server created\n            view mentioned above also filters out duplicates. If a resource mutation\n            cannot be streamed to BigQuery, errors will be logged to Cloud Logging\n            (see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).\n        resourceTypes:\n          description: Supply a FHIR resource type (such as \"Patient\" or \"Observation\").\n            See https://www.hl7.org/fhir/valueset-resource-types.html for a list of\n            all FHIR resource types. The server treats an empty list as an intent\n            to stream all the supported resource types in this FHIR store.\n          items:\n            type: string\n          type: array\n      type: object\n    TagFilterList:\n      description: List of tags to be filtered.\n      properties:\n        tags:\n          description: 'Tags to be filtered. Tags must be DICOM Data Elements, File\n            Meta Elements, or Directory Structuring Elements, as defined at: http://dicom.nema.org/medical/dicom/current/output/html/part06.html#table_6-1,.\n            They may be provided by \"Keyword\" or \"Tag\". For example, \"PatientID\",\n            \"00100010\".'\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsRequest:\n      description: Request message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: The set of permissions to check for the `resource`. Permissions\n            with wildcards (such as '*' or 'storage.*') are not allowed. For more\n            information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsResponse:\n      description: Response message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: A subset of `TestPermissionsRequest.permissions` that the caller\n            is allowed.\n          items:\n            type: string\n          type: array\n      type: object\n    TextConfig:\n      properties:\n        transformations:\n          description: The transformations to apply to the detected data.\n          items:\n            $ref: '#/components/schemas/InfoTypeTransformation'\n          type: array\n      type: object\n    TextSpan:\n      description: A span of text in the provided document.\n      properties:\n        beginOffset:\n          description: The unicode codepoint index of the beginning of this span.\n          format: int32\n          type: integer\n        content:\n          description: The original text contained in this span.\n          type: string\n      type: object\n    Type:\n      description: A type definition for some HL7v2 type (incl. Segments and Datatypes).\n      properties:\n        fields:\n          description: The (sub) fields this type has (if not primitive).\n          items:\n            $ref: '#/components/schemas/Field'\n          type: array\n        name:\n          description: The name of this type. This would be the segment or datatype\n            name. For example, \"PID\" or \"XPN\".\n          type: string\n        primitive:\n          description: If this is a primitive type then this field is the type of\n            the primitive For example, STRING. Leave unspecified for composite types.\n          enum:\n          - PRIMITIVE_UNSPECIFIED\n          - STRING\n          - VARIES\n          - UNESCAPED_STRING\n          type: string\n      type: object\n    UserDataMapping:\n      description: Maps a resource to the associated user and Attributes.\n      properties:\n        archiveTime:\n          description: Output only. Indicates the time when this mapping was archived.\n          format: google-datetime\n          readOnly: true\n          type: string\n        archived:\n          description: Output only. Indicates whether this mapping is archived.\n          readOnly: true\n          type: boolean\n        dataId:\n          description: Required. A unique identifier for the mapped resource.\n          type: string\n        name:\n          description: Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.\n          type: string\n        resourceAttributes:\n          description: Attributes of the resource. Only explicitly set attributes\n            are displayed here. Attribute definitions with defaults set implicitly\n            apply to these User data mappings. Attributes listed here must be single\n            valued, that is, exactly one value is specified for the field \"values\"\n            in each Attribute.\n          items:\n            $ref: '#/components/schemas/Attribute'\n          type: array\n        userId:\n          description: Required. User's UUID provided by the client.\n          type: string\n      type: object\n    ValidationConfig:\n      description: Contains the configuration for FHIR profiles and validation.\n      properties:\n        disableProfileValidation:\n          description: Whether to disable profile validation for this FHIR store.\n            Set this to true to disable checking incoming resources for conformance\n            against StructureDefinitions in this FHIR store.\n          type: boolean\n        enabledImplementationGuides:\n          description: 'A list of ImplementationGuide URLs in this FHIR store that\n            are used to configure the profiles to use for validation. For example,\n            to use the US Core profiles for validation, set `enabled_implementation_guides`\n            to `[\"http://hl7.org/fhir/us/core/ImplementationGuide/ig\"]`. If `enabled_implementation_guides`\n            is empty or omitted, then incoming resources are only required to conform\n            to the base FHIR profiles. Otherwise, a resource must conform to at least\n            one profile listed in the `global` property of one of the enabled ImplementationGuides.\n            The Cloud Healthcare API does not currently enforce all of the rules in\n            a StructureDefinition. The following rules are supported: - min/max -\n            minValue/maxValue - maxLength - type - fixed[x] - pattern[x] on simple\n            types - slicing, when using \"value\" as the discriminator type When a URL\n            cannot be resolved (for example, in a type assertion), the server does\n            not return an error.'\n          items:\n            type: string\n          type: array\n      type: object\n    VersionSource:\n      description: Describes a selector for extracting and matching an MSH field to\n        a value.\n      properties:\n        mshField:\n          description: The field to extract from the MSH segment. For example, \"3.1\"\n            or \"18[1].1\".\n          type: string\n        value:\n          description: The value to match with the field. For example, \"My Application\n            Name\" or \"2.3\".\n          type: string\n      type: object\n    Vertex:\n      description: A 2D coordinate in an image. The origin is the top-left.\n      properties:\n        x:\n          description: X coordinate.\n          format: float\n          type: number\n        y:\n          description: Y coordinate.\n          format: float\n          type: number\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources: {}\nexternalDocs:\n  url: https://cloud.google.com/healthcare\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: Manage, store, and access healthcare data in Google Cloud Platform.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Cloud Healthcare API\n  version: v1beta1\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://healthcare.googleapis.com/$discovery/rest?version=v1beta1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: healthcare\nopenapi: 3.0.0\npaths:\n  /v1beta1/{consentStore}:checkDataAccess:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Checks if a particular data_id of a User data mapping in the specified\n        consent store is consented for the specified use.\n      operationId: healthcare.projects.locations.datasets.consentStores.checkDataAccess\n      parameters:\n      - description: Required. Name of the consent store where the requested data_id\n          is stored, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.\n        in: path\n        name: consentStore\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckDataAccessRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckDataAccessResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{consentStore}:evaluateUserConsents:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Evaluates the user''s Consents for all matching User data mappings.\n        Note: User data mappings are indexed asynchronously, which can cause a slight\n        delay between the time mappings are created or updated and when they are included\n        in EvaluateUserConsents results.'\n      operationId: healthcare.projects.locations.datasets.consentStores.evaluateUserConsents\n      parameters:\n      - description: Required. Name of the consent store to retrieve User data mappings\n          from.\n        in: path\n        name: consentStore\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EvaluateUserConsentsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EvaluateUserConsentsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{consentStore}:queryAccessibleData:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Queries all data_ids that are consented for a specified use in\n        the given consent store and writes them to a specified destination. The returned\n        Operation includes a progress counter for the number of User data mappings\n        processed. If the request is successful, a detailed response is returned of\n        type QueryAccessibleDataResponse, contained in the response field when the\n        operation finishes. The metadata field type is OperationMetadata. Errors are\n        logged to Cloud Logging (see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).\n        For example, the following sample log entry shows a `failed to evaluate consent\n        policy` error that occurred during a QueryAccessibleData call to consent store\n        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.\n        ```json jsonPayload: { @type: \"type.googleapis.com/google.cloud.healthcare.logging.QueryAccessibleDataLogEntry\"\n        error: { code: 9 message: \"failed to evaluate consent policy\" } resourceName:\n        \"projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}\"\n        } logName: \"projects/{project_id}/logs/healthcare.googleapis.com%2Fquery_accessible_data\"\n        operation: { id: \"projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/operations/{operation_id}\"\n        producer: \"healthcare.googleapis.com/QueryAccessibleData\" } receiveTimestamp:\n        \"TIMESTAMP\" resource: { labels: { consent_store_id: \"{consent_store_id}\" dataset_id:\n        \"{dataset_id}\" location: \"{location_id}\" project_id: \"{project_id}\" } type:\n        \"healthcare_consent_store\" } severity: \"ERROR\" timestamp: \"TIMESTAMP\" ```'\n      operationId: healthcare.projects.locations.datasets.consentStores.queryAccessibleData\n      parameters:\n      - description: Required. Name of the consent store to retrieve User data mappings\n          from.\n        in: path\n        name: consentStore\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryAccessibleDataRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:\n    delete:\n      description: Deletes an HL7v2 message.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.delete\n      parameters:\n      - description: The resource name of the HL7v2 message to delete.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: Gets the latest state of a long-running operation. Clients can\n        use this method to poll the operation result at intervals as recommended by\n        the API service.\n      operationId: healthcare.projects.locations.datasets.operations.get\n      parameters:\n      - description: The name of the operation resource.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Specifies which parts of the Message resource to return in the\n          response. When unspecified, equivalent to FULL.\n        in: query\n        name: view\n        schema:\n          enum:\n          - MESSAGE_VIEW_UNSPECIFIED\n          - RAW_ONLY\n          - PARSED_ONLY\n          - FULL\n          - SCHEMATIZED_ONLY\n          - BASIC\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Update the message. The contents of the message in Message.data\n        and data extracted from the contents such as Message.create_time can't be\n        altered. Only the Message.labels field is allowed to be updated. The labels\n        in the request are merged with the existing set of labels. Existing labels\n        with the same keys are updated.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.patch\n      parameters:\n      - description: Resource name of the Message, of the form `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.\n          Assigned by the server.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: The update mask applies to the resource. For the `FieldMask`\n          definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Message'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    put:\n      description: 'Updates the entire contents of a resource. Implements the FHIR\n        standard update interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#update),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#update), [R4](https://hl7.org/implement/standards/fhir/R4/http.html#update)).\n        If the specified resource does not exist and the FHIR store has enable_update_create\n        set, creates the resource with the client-specified ID. It is strongly advised\n        not to include or encode any sensitive data such as patient identifiers in\n        client-specified resource IDs. Those IDs are part of the FHIR resource path\n        recorded in Cloud Audit Logs and Pub/Sub notifications. Those IDs can also\n        be contained in reference fields within other resources. The request body\n        must contain a JSON-encoded FHIR resource, and the request headers must contain\n        `Content-Type: application/fhir+json`. The resource must contain an `id` element\n        having an identical value to the ID in the REST path of the request. On success,\n        the response body contains a JSON-encoded representation of the updated resource,\n        including the server-assigned version ID. Errors generated by the FHIR store\n        contain a JSON-encoded `OperationOutcome` resource describing the reason for\n        the error. If the request cannot be mapped to a valid API method on a FHIR\n        store, a generic GCP error might be returned instead. For samples that show\n        how to call `update`, see [Updating a FHIR resource](/healthcare/docs/how-tos/fhir-resources#updating_a_fhir_resource).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.update\n      parameters:\n      - description: The name of the resource to update.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}/$everything:\n    get:\n      description: 'Retrieves a Patient resource and resources related to that patient.\n        Implements the FHIR extended operation Patient-everything ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/patient-operations.html#everything),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/patient-operations.html#everything),\n        [R4](https://hl7.org/implement/standards/fhir/R4/patient-operations.html#everything)).\n        On success, the response body contains a JSON-encoded representation of a\n        `Bundle` resource of type `searchset`, containing the results of the operation.\n        Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome`\n        resource describing the reason for the error. If the request cannot be mapped\n        to a valid API method on a FHIR store, a generic GCP error might be returned\n        instead. The resources in scope for the response are: * The patient resource\n        itself. * All the resources directly referenced by the patient resource. *\n        Resources directly referencing the patient resource that meet the inclusion\n        criteria. The inclusion criteria are based on the membership rules in the\n        patient compartment definition ([DSTU2](https://hl7.org/fhir/DSTU2/compartment-patient.html),\n        [STU3](http://www.hl7.org/fhir/stu3/compartmentdefinition-patient.html), [R4](https://hl7.org/fhir/R4/compartmentdefinition-patient.html)),\n        which details the eligible resource types and referencing search parameters.\n        For samples that show how to call `Patient-everything`, see [Getting all patient\n        compartment resources](/healthcare/docs/how-tos/fhir-resources#getting_all_patient_compartment_resources).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything\n      parameters:\n      - description: Name of the `Patient` resource for which the information is required.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Maximum number of resources in a page. If not specified, 100\n          is used. May not be larger than 1000.\n        in: query\n        name: _count\n        schema:\n          type: integer\n      - description: Used to retrieve the next or previous page of results when using\n          pagination. Set `_page_token` to the value of _page_token set in next or\n          previous page links' url. Next and previous page are returned in the response\n          bundle's links field, where `link.relation` is \"previous\" or \"next\". Omit\n          `_page_token` if no previous request has been made.\n        in: query\n        name: _page_token\n        schema:\n          type: string\n      - description: If provided, only resources updated after this time are returned.\n          The time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example, `2015-02-07T13:28:17.239+02:00`\n          or `2017-01-01T00:00:00Z`. The time must be specified to the second and\n          include a time zone.\n        in: query\n        name: _since\n        schema:\n          type: string\n      - description: String of comma-delimited FHIR resource types. If provided, only\n          resources of the specified resource type(s) are returned.\n        in: query\n        name: _type\n        schema:\n          type: string\n      - description: The response includes records prior to the end date. If no end\n          date is provided, all records subsequent to the start date are in scope.\n        in: query\n        name: end\n        schema:\n          type: string\n      - description: The response includes records subsequent to the start date. If\n          no start date is provided, all records prior to the end date are in scope.\n        in: query\n        name: start\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/$purge:\n    delete:\n      description: Deletes all the historical versions of a resource (excluding the\n        current version) from the FHIR store. To remove all versions of a resource,\n        first delete the current version and then call this method. This is not a\n        FHIR standard operation. For samples that show how to call `Resource-purge`,\n        see [Deleting historical versions of a FHIR resource](/healthcare/docs/how-tos/fhir-resources#deleting_historical_versions_of_a_fhir_resource).\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Resource-purge\n      parameters:\n      - description: The name of the resource to purge.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/$translate:\n    get:\n      description: Translates a code from one value set to another using a concept\n        map. You can provide your own concept maps to translate any code system to\n        another code system. Implements the FHIR standard $translate operation ([DSTU2](https://www.hl7.org/fhir/DSTU2/operation-conceptmap-translate.html),\n        [STU3](https://www.hl7.org/fhir/STU3/operation-conceptmap-translate.html),\n        [R4](https://www.hl7.org/fhir/R4/operation-conceptmap-translate.html)). On\n        success, the response body contains a JSON-encoded representation of a FHIR\n        Parameters resource, which includes the translation result. Errors generated\n        by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing\n        the reason for the error. If the request cannot be mapped to a valid API method\n        on a FHIR store, a generic GCP error might be returned instead.\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap-translate\n      parameters:\n      - description: The URL for the concept map to use for the translation.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: The code to translate.\n        in: query\n        name: code\n        schema:\n          type: string\n      - description: The version of the concept map to use. If unset, the most current\n          version is used.\n        in: query\n        name: conceptMapVersion\n        schema:\n          type: string\n      - description: The system for the code to be translated.\n        in: query\n        name: system\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/_history:\n    get:\n      description: Lists all the versions of a resource (including the current version\n        and deleted versions) from the FHIR store. Implements the per-resource form\n        of the FHIR standard history interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#history),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#history), [R4](https://hl7.org/implement/standards/fhir/R4/http.html#history)).\n        On success, the response body contains a JSON-encoded representation of a\n        `Bundle` resource of type `history`, containing the version history sorted\n        from most recent to oldest versions. Errors generated by the FHIR store contain\n        a JSON-encoded `OperationOutcome` resource describing the reason for the error.\n        If the request cannot be mapped to a valid API method on a FHIR store, a generic\n        GCP error might be returned instead. For samples that show how to call `history`,\n        see [Listing FHIR resource versions](/healthcare/docs/how-tos/fhir-resources#listing_fhir_resource_versions).\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.history\n      parameters:\n      - description: The name of the resource to retrieve.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: 'Only include resource versions that were current at some point\n          during the time period specified in the date time value. The date parameter\n          format is yyyy-mm-ddThh:mm:ss[Z|(+|-)hh:mm] Clients may specify any of the\n          following: * An entire year: `_at=2019` * An entire month: `_at=2019-01`\n          * A specific day: `_at=2019-01-20` * A specific second: `_at=2018-12-31T23:59:58Z`'\n        in: query\n        name: _at\n        schema:\n          type: string\n      - description: The maximum number of search results on a page. If not specified,\n          100 is used. May not be larger than 1000.\n        in: query\n        name: _count\n        schema:\n          type: integer\n      - description: Used to retrieve the first, previous, next, or last page of resource\n          versions when using pagination. Value should be set to the value of `_page_token`\n          set in next or previous page links' URLs. Next and previous page are returned\n          in the response bundle's links field, where `link.relation` is \"previous\"\n          or \"next\". Omit `_page_token` if no previous request has been made.\n        in: query\n        name: _page_token\n        schema:\n          type: string\n      - description: Only include resource versions that were created at or after\n          the given instant in time. The instant in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz\n          (for example 2015-02-07T13:28:17.239+02:00 or 2017-01-01T00:00:00Z). The\n          time must be specified to the second and include a time zone.\n        in: query\n        name: _since\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/fhir/metadata:\n    get:\n      description: Gets the FHIR capability statement ([STU3](https://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html),\n        [R4](https://hl7.org/implement/standards/fhir/R4/capabilitystatement.html)),\n        or the [conformance statement](https://hl7.org/implement/standards/fhir/DSTU2/conformance.html)\n        in the DSTU2 case for the store, which contains a description of functionality\n        supported by the server. Implements the FHIR standard capabilities interaction\n        ([STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#capabilities),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#capabilities)),\n        or the [conformance interaction](https://hl7.org/implement/standards/fhir/DSTU2/http.html#conformance)\n        in the DSTU2 case. On success, the response body contains a JSON-encoded representation\n        of a `CapabilityStatement` resource.\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.capabilities\n      parameters:\n      - description: Name of the FHIR store to retrieve the capabilities for.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/locations:\n    get:\n      description: Lists information about the supported locations for this service.\n      operationId: healthcare.projects.locations.list\n      parameters:\n      - description: The resource that owns the locations collection, if applicable.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: A filter to narrow down results to a preferred subset. The filtering\n          language accepts strings like \"displayName=tokyo\", and is documented in\n          more detail in [AIP-160](https://google.aip.dev/160).\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: The maximum number of results to return. If not set, the service\n          selects a default.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: A page token received from the `next_page_token` field in the\n          response. Send that page token to receive the subsequent page.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLocationsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/operations:\n    get:\n      description: 'Lists operations that match the specified filter in the request.\n        If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE:\n        the `name` binding allows API services to override the binding to use different\n        resource name schemes, such as `users/*/operations`. To override the binding,\n        API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to\n        their service configuration. For backwards compatibility, the default name\n        includes the operations collection id, however overriding users must ensure\n        the name binding is the parent resource, without the operations collection\n        id.'\n      operationId: healthcare.projects.locations.datasets.operations.list\n      parameters:\n      - description: The name of the operation's parent resource.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: The standard list filter.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: The standard list page size.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The standard list page token.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOperationsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}:activate:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Activates the latest revision of the specified Consent by committing\n        a new revision with `state` updated to `ACTIVE`. If the latest revision of\n        the specified Consent is in the `ACTIVE` state, no new revision is committed.\n        A FAILED_PRECONDITION error occurs if the latest revision of the specified\n        consent is in the `REJECTED` or `REVOKED` state.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.activate\n      parameters:\n      - description: Required. The resource name of the Consent to activate, of the\n          form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.\n          An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActivateConsentRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Consent'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:archive:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Archives the specified User data mapping.\n      operationId: healthcare.projects.locations.datasets.consentStores.userDataMappings.archive\n      parameters:\n      - description: Required. The resource name of the User data mapping to archive.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArchiveUserDataMappingRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchiveUserDataMappingResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:cancel:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Starts asynchronous cancellation on a long-running operation. The\n        server makes a best effort to cancel the operation, but success is not guaranteed.\n        If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\n        Clients can use Operations.GetOperation or other methods to check whether\n        the cancellation succeeded or whether the operation completed despite cancellation.\n        On successful cancellation, the operation is not deleted; instead, it becomes\n        an operation with an Operation.error value with a google.rpc.Status.code of\n        1, corresponding to `Code.CANCELLED`.\n      operationId: healthcare.projects.locations.datasets.operations.cancel\n      parameters:\n      - description: The name of the operation resource to be cancelled.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CancelOperationRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:configureSearch:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Configure the search parameters for the FHIR store and reindex\n        resources in the FHIR store according to the defined search parameters. The\n        search parameters provided in this request will replace any previous search\n        configuration. The target SearchParameter resources need to exist in the store\n        before calling ConfigureSearch, otherwise an error will occur. This method\n        returns an Operation that can be used to track the progress of the reindexing\n        by calling GetOperation.\n      operationId: healthcare.projects.locations.datasets.fhirStores.configureSearch\n      parameters:\n      - description: The name of the FHIR store to configure, in the format `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigureSearchRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:deleteRevision:\n    delete:\n      description: Deletes the specified revision of a Consent. An INVALID_ARGUMENT\n        error occurs if the specified revision is the latest revision.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.deleteRevision\n      parameters:\n      - description: Required. The resource name of the Consent revision to delete,\n          of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{revision_id}`.\n          An INVALID_ARGUMENT error occurs if `revision_id` is not specified in the\n          name.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}:evaluate:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Evaluate an Annotation store against a ground truth Annotation\n        store. When the operation finishes successfully, a detailed response is returned\n        of type EvaluateAnnotationStoreResponse, contained in the response. The metadata\n        field type is OperationMetadata. Errors are logged to Cloud Logging (see [Viewing\n        error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).\n      operationId: healthcare.projects.locations.datasets.annotationStores.evaluate\n      parameters:\n      - description: The Annotation store to compare against `golden_store`, in the\n          format of `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EvaluateAnnotationStoreRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:export:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Exports the messages to a destination. To filter messages to be\n        exported, define a filter using the start and end time, relative to the message\n        generation time (MSH.7). This API returns an Operation that can be used to\n        track the status of the job by calling GetOperation. Immediate fatal errors\n        appear in the error field. Otherwise, when the operation finishes, a detailed\n        response of type ExportMessagesResponse is returned in the response field.\n        The metadata field type for this operation is OperationMetadata.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.export\n      parameters:\n      - description: The name of the source HL7v2 store, in the format `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportMessagesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:import:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Import messages to the HL7v2 store by loading data from the specified\n        sources. This method is optimized to load large quantities of data using import\n        semantics that ignore some HL7v2 store configuration options and are not suitable\n        for all use cases. It is primarily intended to load data into an empty HL7v2\n        store that is not being used by other clients. An existing message will be\n        overwritten if a duplicate message is imported. A duplicate message is a message\n        with the same raw bytes as a message that already exists in this HL7v2 store.\n        When a message is overwritten, its labels will also be overwritten. The import\n        operation is idempotent unless the input data contains multiple valid messages\n        with the same raw bytes but different labels. In that case, after the import\n        completes, the store contains exactly one message with those raw bytes but\n        there is no ordering guarantee on which version of the labels it has. The\n        operation result counters do not count duplicated raw bytes as an error and\n        count one success for each message in the input, which might result in a success\n        count larger than the number of messages in the HL7v2 store. If some messages\n        fail to import, for example due to parsing errors, successfully imported messages\n        are not rolled back. This method returns an Operation that can be used to\n        track the status of the import by calling GetOperation. Immediate fatal errors\n        appear in the error field, errors are also logged to Cloud Logging (see [Viewing\n        error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).\n        Otherwise, when the operation finishes, a response of type ImportMessagesResponse\n        is returned in the response field. The metadata field type for this operation\n        is OperationMetadata.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.import\n      parameters:\n      - description: The name of the target HL7v2 store, in the format `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportMessagesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:listRevisions:\n    get:\n      description: Lists the revisions of the specified Consent in reverse chronological\n        order.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.listRevisions\n      parameters:\n      - description: Required. The resource name of the Consent to retrieve revisions\n          for.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. Restricts the revisions returned to those matching\n          a filter. The following syntax is available: * A string field value can\n          be written as text inside quotation marks, for example `\"query text\"`. The\n          only valid relational operation for text fields is equality (`=`), where\n          text is searched within the field, rather than having the field be equal\n          to the text. For example, `\"Comment = great\"` returns messages with `great`\n          in the comment field. * A number field value can be written as an integer,\n          a decimal, or an exponential. The valid relational operators for number\n          fields are the equality operator (`=`), along with the less than/greater\n          than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality\n          (`!=`) operator. You can prepend the `NOT` operator to an expression to\n          negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields\n          with date and time use the RFC3339 time format. Leading zeros are required\n          for one-digit months and days. The valid relational operators for date fields\n          are the equality operator (`=`) , along with the less than/greater than\n          operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`)\n          operator. You can prepend the `NOT` operator to an expression to negate\n          it. * Multiple field query expressions can be combined in one query by adding\n          `AND` or `OR` operators between the expressions. If a boolean operator appears\n          within a quoted string, it is not treated as special, it''s just another\n          part of the character string to be matched. You can prepend the `NOT` operator\n          to an expression to negate it. Fields/functions available for filtering\n          are: - user_id. For example, `filter=''user_id=\"user123\"''`. - consent_artifact\n          - state - revision_create_time - metadata. For example, `filter=Metadata(\\\"testkey\\\")=\\\"value\\\"`\n          or `filter=HasMetadata(\\\"testkey\\\")`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. Limit on the number of revisions to return in a single\n          response. If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. Token to retrieve the next page of results or empty\n          if there are no more results in the list.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConsentRevisionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}:reject:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Rejects the latest revision of the specified Consent by committing\n        a new revision with `state` updated to `REJECTED`. If the latest revision\n        of the specified Consent is in the `REJECTED` state, no new revision is committed.\n        A FAILED_PRECONDITION error occurs if the latest revision of the specified\n        Consent is in the `ACTIVE` or `REVOKED` state.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.reject\n      parameters:\n      - description: Required. The resource name of the Consent to reject, of the\n          form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.\n          An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RejectConsentRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Consent'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}:revoke:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Revokes the latest revision of the specified Consent by committing\n        a new revision with `state` updated to `REVOKED`. If the latest revision of\n        the specified Consent is in the `REVOKED` state, no new revision is committed.\n        A FAILED_PRECONDITION error occurs if the latest revision of the given consent\n        is in `DRAFT` or `REJECTED` state.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.revoke\n      parameters:\n      - description: Required. The resource name of the Consent to revoke, of the\n          form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.\n          An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RevokeConsentRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Consent'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{nlpService}:analyzeEntities:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Analyze heathcare entity in a document. Its response includes the\n        recognized entity mentions and the relationships between them. AnalyzeEntities\n        uses context aware models to detect entities. This method can only analyze\n        documents written in English.\n      operationId: healthcare.projects.locations.services.nlp.analyzeEntities\n      parameters:\n      - description: 'The resource name of the service of the form: \"projects/{project_id}/locations/{location_id}/services/nlp\".'\n        in: path\n        name: nlpService\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnalyzeEntitiesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyzeEntitiesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/annotationStores:\n    get:\n      description: Lists the Annotation stores in the given dataset for a source store.\n      operationId: healthcare.projects.locations.datasets.annotationStores.list\n      parameters:\n      - description: Name of the dataset.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Restricts stores returned to those matching a filter. The following\n          syntax is available: * A string field value can be written as text inside\n          quotation marks, for example `\"query text\"`. The only valid relational operation\n          for text fields is equality (`=`), where text is searched within the field,\n          rather than having the field be equal to the text. For example, `\"Comment\n          = great\"` returns messages with `great` in the comment field. * A number\n          field value can be written as an integer, a decimal, or an exponential.\n          The valid relational operators for number fields are the equality operator\n          (`=`), along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`,\n          `\u003e=`). Note that there is no inequality (`!=`) operator. You can prepend\n          the `NOT` operator to an expression to negate it. * A date field value must\n          be written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339\n          time format. Leading zeros are required for one-digit months and days. The\n          valid relational operators for date fields are the equality operator (`=`)\n          , along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`).\n          Note that there is no inequality (`!=`) operator. You can prepend the `NOT`\n          operator to an expression to negate it. * Multiple field query expressions\n          can be combined in one query by adding `AND` or `OR` operators between the\n          expressions. If a boolean operator appears within a quoted string, it is\n          not treated as special, it''s just another part of the character string\n          to be matched. You can prepend the `NOT` operator to an expression to negate\n          it. Only filtering on labels is supported, for example `labels.key=value`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Limit on the number of Annotation stores to return in a single\n          response. If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from the previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAnnotationStoresResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new Annotation store within the parent dataset.\n      operationId: healthcare.projects.locations.datasets.annotationStores.create\n      parameters:\n      - description: The name of the dataset this Annotation store belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'The ID of the Annotation store that is being created. The string\n          must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`.'\n        in: query\n        name: annotationStoreId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AnnotationStore'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnnotationStore'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/annotations:\n    get:\n      description: Lists the Annotations in the given Annotation store for a source\n        resource.\n      operationId: healthcare.projects.locations.datasets.annotationStores.annotations.list\n      parameters:\n      - description: Name of the Annotation store to retrieve Annotations from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Restricts Annotations returned to those matching a filter. Functions\n          available for filtering are: - `matches(\"annotation_source.cloud_healthcare_source.name\",\n          substring)`. Filter on `cloud_healthcare_source.name`. For example: `matches(\"annotation_source.cloud_healthcare_source.name\",\n          \"some source\")`. - `matches(\"annotation\", substring)`. Filter on all fields\n          of annotation. For example: `matches(\"annotation\", \"some-content\")`. - `type(\"text\")`,\n          `type(\"image\")`, `type(\"resource\")`. Filter on the type of annotation `data`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Limit on the number of Annotations to return in a single response.\n          If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from the previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Controls which fields are populated in the response.\n        in: query\n        name: view\n        schema:\n          enum:\n          - ANNOTATION_VIEW_UNSPECIFIED\n          - ANNOTATION_VIEW_BASIC\n          - ANNOTATION_VIEW_FULL\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAnnotationsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new Annotation record. It is valid to create Annotation\n        objects for the same source more than once since a unique ID is assigned to\n        each record by this service.\n      operationId: healthcare.projects.locations.datasets.annotationStores.annotations.create\n      parameters:\n      - description: The name of the Annotation store this annotation belongs to.\n          For example, `projects/my-project/locations/us-central1/datasets/mydataset/annotationStores/myannotationstore`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Annotation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/attributeDefinitions:\n    get:\n      description: Lists the Attribute definitions in the specified consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.attributeDefinitions.list\n      parameters:\n      - description: Required. Name of the consent store to retrieve Attribute definitions\n          from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. Restricts the attributes returned to those matching\n          a filter. The following syntax is available: * A string field value can\n          be written as text inside quotation marks, for example `\"query text\"`. The\n          only valid relational operation for text fields is equality (`=`), where\n          text is searched within the field, rather than having the field be equal\n          to the text. For example, `\"Comment = great\"` returns messages with `great`\n          in the comment field. * A number field value can be written as an integer,\n          a decimal, or an exponential. The valid relational operators for number\n          fields are the equality operator (`=`), along with the less than/greater\n          than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality\n          (`!=`) operator. You can prepend the `NOT` operator to an expression to\n          negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields\n          with date and time use the RFC3339 time format. Leading zeros are required\n          for one-digit months and days. The valid relational operators for date fields\n          are the equality operator (`=`) , along with the less than/greater than\n          operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`)\n          operator. You can prepend the `NOT` operator to an expression to negate\n          it. * Multiple field query expressions can be combined in one query by adding\n          `AND` or `OR` operators between the expressions. If a boolean operator appears\n          within a quoted string, it is not treated as special, it''s just another\n          part of the character string to be matched. You can prepend the `NOT` operator\n          to an expression to negate it. The only field available for filtering is\n          `category`. For example, `filter=category=\\\"REQUEST\\\"`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. Limit on the number of Attribute definitions to return\n          in a single response. If not specified, 100 is used. May not be larger than\n          1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. Token to retrieve the next page of results or empty\n          to get the first page.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAttributeDefinitionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new Attribute definition in the parent consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.attributeDefinitions.create\n      parameters:\n      - description: Required. The name of the consent store that this Attribute definition\n          belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Required. The ID of the Attribute definition to create. The\n          string must match the following regex: `_a-zA-Z{0,255}` and must not be\n          a reserved keyword within the Common Expression Language as listed on https://github.com/google/cel-spec/blob/master/doc/langdef.md.'\n        in: query\n        name: attributeDefinitionId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttributeDefinition'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttributeDefinition'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/consentArtifacts:\n    get:\n      description: Lists the Consent artifacts in the specified consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.consentArtifacts.list\n      parameters:\n      - description: Required. Name of the consent store to retrieve consent artifacts\n          from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. Restricts the artifacts returned to those matching\n          a filter. The following syntax is available: * A string field value can\n          be written as text inside quotation marks, for example `\"query text\"`. The\n          only valid relational operation for text fields is equality (`=`), where\n          text is searched within the field, rather than having the field be equal\n          to the text. For example, `\"Comment = great\"` returns messages with `great`\n          in the comment field. * A number field value can be written as an integer,\n          a decimal, or an exponential. The valid relational operators for number\n          fields are the equality operator (`=`), along with the less than/greater\n          than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality\n          (`!=`) operator. You can prepend the `NOT` operator to an expression to\n          negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields\n          with date and time use the RFC3339 time format. Leading zeros are required\n          for one-digit months and days. The valid relational operators for date fields\n          are the equality operator (`=`) , along with the less than/greater than\n          operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`)\n          operator. You can prepend the `NOT` operator to an expression to negate\n          it. * Multiple field query expressions can be combined in one query by adding\n          `AND` or `OR` operators between the expressions. If a boolean operator appears\n          within a quoted string, it is not treated as special, it''s just another\n          part of the character string to be matched. You can prepend the `NOT` operator\n          to an expression to negate it. The fields available for filtering are: -\n          user_id. For example, `filter=user_id=\\\"user123\\\"`. - consent_content_version\n          - metadata. For example, `filter=Metadata(\\\"testkey\\\")=\\\"value\\\"` or `filter=HasMetadata(\\\"testkey\\\")`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. Limit on the number of consent artifacts to return\n          in a single response. If not specified, 100 is used. May not be larger than\n          1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. The next_page_token value returned from the previous\n          List request, if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConsentArtifactsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new Consent artifact in the parent consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.consentArtifacts.create\n      parameters:\n      - description: Required. The name of the consent store this Consent artifact\n          belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentArtifact'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentArtifact'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/consentStores:\n    get:\n      description: Lists the consent stores in the specified dataset.\n      operationId: healthcare.projects.locations.datasets.consentStores.list\n      parameters:\n      - description: Required. Name of the dataset.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. Restricts the stores returned to those matching a\n          filter. The following syntax is available: * A string field value can be\n          written as text inside quotation marks, for example `\"query text\"`. The\n          only valid relational operation for text fields is equality (`=`), where\n          text is searched within the field, rather than having the field be equal\n          to the text. For example, `\"Comment = great\"` returns messages with `great`\n          in the comment field. * A number field value can be written as an integer,\n          a decimal, or an exponential. The valid relational operators for number\n          fields are the equality operator (`=`), along with the less than/greater\n          than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality\n          (`!=`) operator. You can prepend the `NOT` operator to an expression to\n          negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields\n          with date and time use the RFC3339 time format. Leading zeros are required\n          for one-digit months and days. The valid relational operators for date fields\n          are the equality operator (`=`) , along with the less than/greater than\n          operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`)\n          operator. You can prepend the `NOT` operator to an expression to negate\n          it. * Multiple field query expressions can be combined in one query by adding\n          `AND` or `OR` operators between the expressions. If a boolean operator appears\n          within a quoted string, it is not treated as special, it''s just another\n          part of the character string to be matched. You can prepend the `NOT` operator\n          to an expression to negate it. Only filtering on labels is supported. For\n          example, `filter=labels.key=value`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. Limit on the number of consent stores to return in\n          a single response. If not specified, 100 is used. May not be larger than\n          1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. Token to retrieve the next page of results, or empty\n          to get the first page.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConsentStoresResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new consent store in the parent dataset. Attempting to\n        create a consent store with the same ID as an existing store fails with an\n        ALREADY_EXISTS error.\n      operationId: healthcare.projects.locations.datasets.consentStores.create\n      parameters:\n      - description: Required. The name of the dataset this consent store belongs\n          to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Required. The ID of the consent store to create. The string\n          must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`. Cannot be changed\n          after creation.'\n        in: query\n        name: consentStoreId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConsentStore'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConsentStore'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/consents:\n    get:\n      description: Lists the Consent in the given consent store, returning each Consent's\n        latest revision.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.list\n      parameters:\n      - description: Required. Name of the consent store to retrieve Consents from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. Restricts the consents returned to those matching\n          a filter. The following syntax is available: * A string field value can\n          be written as text inside quotation marks, for example `\"query text\"`. The\n          only valid relational operation for text fields is equality (`=`), where\n          text is searched within the field, rather than having the field be equal\n          to the text. For example, `\"Comment = great\"` returns messages with `great`\n          in the comment field. * A number field value can be written as an integer,\n          a decimal, or an exponential. The valid relational operators for number\n          fields are the equality operator (`=`), along with the less than/greater\n          than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality\n          (`!=`) operator. You can prepend the `NOT` operator to an expression to\n          negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields\n          with date and time use the RFC3339 time format. Leading zeros are required\n          for one-digit months and days. The valid relational operators for date fields\n          are the equality operator (`=`) , along with the less than/greater than\n          operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`)\n          operator. You can prepend the `NOT` operator to an expression to negate\n          it. * Multiple field query expressions can be combined in one query by adding\n          `AND` or `OR` operators between the expressions. If a boolean operator appears\n          within a quoted string, it is not treated as special, it''s just another\n          part of the character string to be matched. You can prepend the `NOT` operator\n          to an expression to negate it. The fields available for filtering are: -\n          user_id. For example, `filter=''user_id=\"user123\"''`. - consent_artifact\n          - state - revision_create_time - metadata. For example, `filter=Metadata(\\\"testkey\\\")=\\\"value\\\"`\n          or `filter=HasMetadata(\\\"testkey\\\")`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. Limit on the number of Consents to return in a single\n          response. If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. The next_page_token value returned from the previous\n          List request, if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConsentsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new Consent in the parent consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.consents.create\n      parameters:\n      - description: Required. Name of the consent store.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Consent'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Consent'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/datasets:\n    get:\n      description: Lists the health datasets in the current project.\n      operationId: healthcare.projects.locations.datasets.list\n      parameters:\n      - description: The name of the project whose datasets should be listed. For\n          example, `projects/{project_id}/locations/{location_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The maximum number of items to return. If not specified, 100\n          is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from a previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDatasetsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new health dataset. Results are returned through the\n        Operation interface which returns either an `Operation.response` which contains\n        a Dataset or `Operation.error`. The metadata field type is OperationMetadata.\n      operationId: healthcare.projects.locations.datasets.create\n      parameters:\n      - description: The name of the project where the server creates the dataset.\n          For example, `projects/{project_id}/locations/{location_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'The ID of the dataset that is being created. The string must\n          match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`.'\n        in: query\n        name: datasetId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/dicomStores:\n    get:\n      description: Lists the DICOM stores in the given dataset.\n      operationId: healthcare.projects.locations.datasets.dicomStores.list\n      parameters:\n      - description: Name of the dataset.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Restricts stores returned to those matching a filter. The following\n          syntax is available: * A string field value can be written as text inside\n          quotation marks, for example `\"query text\"`. The only valid relational operation\n          for text fields is equality (`=`), where text is searched within the field,\n          rather than having the field be equal to the text. For example, `\"Comment\n          = great\"` returns messages with `great` in the comment field. * A number\n          field value can be written as an integer, a decimal, or an exponential.\n          The valid relational operators for number fields are the equality operator\n          (`=`), along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`,\n          `\u003e=`). Note that there is no inequality (`!=`) operator. You can prepend\n          the `NOT` operator to an expression to negate it. * A date field value must\n          be written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339\n          time format. Leading zeros are required for one-digit months and days. The\n          valid relational operators for date fields are the equality operator (`=`)\n          , along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`).\n          Note that there is no inequality (`!=`) operator. You can prepend the `NOT`\n          operator to an expression to negate it. * Multiple field query expressions\n          can be combined in one query by adding `AND` or `OR` operators between the\n          expressions. If a boolean operator appears within a quoted string, it is\n          not treated as special, it''s just another part of the character string\n          to be matched. You can prepend the `NOT` operator to an expression to negate\n          it. Only filtering on labels is supported. For example, `labels.key=value`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Limit on the number of DICOM stores to return in a single response.\n          If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from the previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDicomStoresResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new DICOM store within the parent dataset.\n      operationId: healthcare.projects.locations.datasets.dicomStores.create\n      parameters:\n      - description: The name of the dataset this DICOM store belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The ID of the DICOM store that is being created. Any string value\n          up to 256 characters in length.\n        in: query\n        name: dicomStoreId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DicomStore'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DicomStore'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/dicomWeb/{dicomWebPath}:\n    delete:\n      description: DeleteInstance deletes an instance associated with the given study,\n        series, and SOP Instance UID. Delete requests are equivalent to the GET requests\n        specified in the Retrieve transaction. Study and series search results can\n        take a few seconds to be updated after an instance is deleted using DeleteInstance.\n        For samples that show how to call DeleteInstance, see [Deleting a study, series,\n        or instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#deleting_a_study_series_or_instance).\n      operationId: healthcare.projects.locations.datasets.dicomStores.studies.series.instances.delete\n      parameters:\n      - description: The name of the DICOM store that is being accessed. For example,\n          `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The path of the DeleteInstance request. For example, `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.\n        in: path\n        name: dicomWebPath\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: RetrieveRenderedFrames returns instances associated with the given\n        study, series, SOP Instance UID and frame numbers in an acceptable Rendered\n        Media Type. See [RetrieveTransaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).\n        For details on the implementation of RetrieveRenderedFrames, see [Rendered\n        resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources)\n        in the Cloud Healthcare API conformance statement. For samples that show how\n        to call RetrieveRenderedFrames, see [Retrieving consumer image formats](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieving_consumer_image_formats).\n      operationId: healthcare.projects.locations.datasets.dicomStores.studies.series.instances.frames.retrieveRendered\n      parameters:\n      - description: The name of the DICOM store that is being accessed. For example,\n          `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The path of the RetrieveRenderedFrames DICOMweb request. For\n          example, `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rendered`.\n        in: path\n        name: dicomWebPath\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: StoreInstances stores DICOM instances associated with study instance\n        unique identifiers (SUID). See [Store Transaction](http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5).\n        For details on the implementation of StoreInstances, see [Store transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction)\n        in the Cloud Healthcare API conformance statement. For samples that show how\n        to call StoreInstances, see [Storing DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#storing_dicom_data).\n      operationId: healthcare.projects.locations.datasets.dicomStores.studies.storeInstances\n      parameters:\n      - description: The name of the DICOM store that is being accessed. For example,\n          `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The path of the StoreInstances DICOMweb request. For example,\n          `studies/[{study_uid}]`. Note that the `study_uid` is optional.\n        in: path\n        name: dicomWebPath\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/fhir:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Executes all the requests in the given Bundle. Implements the\n        FHIR standard batch/transaction interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#transaction),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#transaction),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#transaction)).\n        Supports all interactions within a bundle, except search. This method accepts\n        Bundles of type `batch` and `transaction`, processing them according to the\n        batch processing rules ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.1),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#brules)) and transaction\n        processing rules ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.2),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#trules)). The request\n        body must contain a JSON-encoded FHIR `Bundle` resource, and the request headers\n        must contain `Content-Type: application/fhir+json`. For a batch bundle or\n        a successful transaction the response body contains a JSON-encoded representation\n        of a `Bundle` resource of type `batch-response` or `transaction-response`\n        containing one entry for each entry in the request, with the outcome of processing\n        the entry. In the case of an error for a transaction bundle, the response\n        body contains a JSON-encoded `OperationOutcome` resource describing the reason\n        for the error. If the request cannot be mapped to a valid API method on a\n        FHIR store, a generic GCP error might be returned instead. This method requires\n        permission for executing the requests in the bundle. The `executeBundle` permission\n        grants permission to execute the request in the bundle but you must grant\n        sufficient permissions to execute the individual requests in the bundle. For\n        example, if the bundle contains a `create` request, you must have permission\n        to execute the `create` request. Logging is available for the `executeBundle`\n        permission. For samples that show how to call `executeBundle`, see [Managing\n        FHIR resources using FHIR bundles](/healthcare/docs/how-tos/fhir-bundles).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.executeBundle\n      parameters:\n      - description: Name of the FHIR store in which this bundle will be executed.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/fhir/ConceptMap/$translate:\n    get:\n      description: Translates a code from one value set to another by searching for\n        appropriate concept maps. Implements the FHIR standard $translate operation\n        ([DSTU2](https://www.hl7.org/fhir/DSTU2/operation-conceptmap-translate.html),\n        [STU3](https://www.hl7.org/fhir/STU3/operation-conceptmap-translate.html),\n        [R4](https://www.hl7.org/fhir/R4/operation-conceptmap-translate.html)). On\n        success, the response body contains a JSON-encoded representation of a FHIR\n        Parameters resource, which includes the translation result. Errors generated\n        by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing\n        the reason for the error. If the request cannot be mapped to a valid API method\n        on a FHIR store, a generic GCP error might be returned instead.\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap-search-translate\n      parameters:\n      - description: The name for the FHIR store containing the concept map(s) to\n          use for the translation.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The code to translate.\n        in: query\n        name: code\n        schema:\n          type: string\n      - description: The version of the concept map to use. If unset, the most current\n          version is used.\n        in: query\n        name: conceptMapVersion\n        schema:\n          type: string\n      - description: The source value set of the concept map to be used. If unset,\n          target is used to search for concept maps.\n        in: query\n        name: source\n        schema:\n          type: string\n      - description: The system for the code to be translated.\n        in: query\n        name: system\n        schema:\n          type: string\n      - description: The target value set of the concept map to be used. If unset,\n          source is used to search for concept maps.\n        in: query\n        name: target\n        schema:\n          type: string\n      - description: The canonical url of the concept map to use. If unset, the source\n          and target is used to search for concept maps.\n        in: query\n        name: url\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/fhir/Observation/$lastn:\n    get:\n      description: 'Retrieves the N most recent `Observation` resources for a subject\n        matching search criteria specified as query parameters, grouped by `Observation.code`,\n        sorted from most recent to oldest. Implements the FHIR extended operation\n        Observation-lastn ([STU3](https://hl7.org/implement/standards/fhir/STU3/observation-operations.html#lastn),\n        [R4](https://hl7.org/implement/standards/fhir/R4/observation-operations.html#lastn)).\n        DSTU2 doesn''t define the Observation-lastn method, but the server supports\n        it the same way it supports STU3. Search terms are provided as query parameters\n        following the same pattern as the search method. The following search parameters\n        must be provided: - `subject` or `patient` to specify a subject for the Observation.\n        - `code`, `category` or any of the composite parameters that include `code`.\n        Any other valid Observation search parameters can also be provided. This operation\n        accepts an additional query parameter `max`, which specifies N, the maximum\n        number of Observations to return from each group, with a default of 1. Searches\n        with over 1000 results are rejected. Results are counted before grouping and\n        limiting the results with `max`. To stay within the limit, constrain these\n        searches using Observation search parameters such as `_lastUpdated` or `date`.\n        On success, the response body contains a JSON-encoded representation of a\n        `Bundle` resource of type `searchset`, containing the results of the operation.\n        Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome`\n        resource describing the reason for the error. If the request cannot be mapped\n        to a valid API method on a FHIR store, a generic GCP error might be returned\n        instead.'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Observation-lastn\n      parameters:\n      - description: Name of the FHIR store to retrieve resources from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/fhir/_search:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Searches for resources in the given FHIR store according to criteria\n        specified as query parameters. Implements the FHIR standard search interaction\n        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#search),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#search), [R4](https://hl7.org/implement/standards/fhir/R4/http.html#search))\n        using the search semantics described in the FHIR Search specification ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/search.html),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/search.html), [R4](https://hl7.org/implement/standards/fhir/R4/search.html)).\n        Supports four methods of search defined by the specification: * `GET [base]?[parameters]`\n        to search across all resources. * `GET [base]/[type]?[parameters]` to search\n        resources of a specified type. * `POST [base]/_search?[parameters]` as an\n        alternate form having the same semantics as the `GET` method across all resources.\n        * `POST [base]/[type]/_search?[parameters]` as an alternate form having the\n        same semantics as the `GET` method for the specified type. The `GET` and `POST`\n        methods do not support compartment searches. The `POST` method does not support\n        `application/x-www-form-urlencoded` search parameters. On success, the response\n        body contains a JSON-encoded representation of a `Bundle` resource of type\n        `searchset`, containing the results of the search. Errors generated by the\n        FHIR store contain a JSON-encoded `OperationOutcome` resource describing the\n        reason for the error. If the request cannot be mapped to a valid API method\n        on a FHIR store, a generic GCP error might be returned instead. The server''s\n        capability statement, retrieved through capabilities, indicates what search\n        parameters are supported on each FHIR resource. A list of all search parameters\n        defined by the specification can be found in the FHIR Search Parameter Registry\n        ([STU3](https://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),\n        [R4](https://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)).\n        FHIR search parameters for DSTU2 can be found on each resource''s definition\n        page. Supported search modifiers: `:missing`, `:exact`, `:contains`, `:text`,\n        `:in`, `:not-in`, `:above`, `:below`, `:[type]`, `:not`, and `:recurse`. Supported\n        search result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,\n        `_summary=data`, and `_elements`. The maximum number of search results returned\n        defaults to 100, which can be overridden by the `_count` parameter up to a\n        maximum limit of 1000. If there are additional results, the returned `Bundle`\n        contains a link of `relation` \"next\", which has a `_page_token` parameter\n        for an opaque pagination token that can be used to retrieve the next page.\n        Resources with a total size larger than 5MB or a field count larger than 50,000\n        might not be fully searchable as the server might trim its generated search\n        index in those cases. Note: FHIR resources are indexed asynchronously, so\n        there might be a slight delay between the time a resource is created or changes\n        and when the change is reflected in search results. For samples and detailed\n        information, see [Searching for FHIR resources](/healthcare/docs/how-tos/fhir-search)\n        and [Advanced FHIR search features](/healthcare/docs/how-tos/fhir-advanced-search).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.search\n      parameters:\n      - description: Name of the FHIR store to retrieve resources from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchResourcesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/fhir/{resourceType}/_search:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Searches for resources in the given FHIR store according to criteria\n        specified as query parameters. Implements the FHIR standard search interaction\n        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#search),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#search), [R4](https://hl7.org/implement/standards/fhir/R4/http.html#search))\n        using the search semantics described in the FHIR Search specification ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/search.html),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/search.html), [R4](https://hl7.org/implement/standards/fhir/R4/search.html)).\n        Supports four methods of search defined by the specification: * `GET [base]?[parameters]`\n        to search across all resources. * `GET [base]/[type]?[parameters]` to search\n        resources of a specified type. * `POST [base]/_search?[parameters]` as an\n        alternate form having the same semantics as the `GET` method across all resources.\n        * `POST [base]/[type]/_search?[parameters]` as an alternate form having the\n        same semantics as the `GET` method for the specified type. The `GET` and `POST`\n        methods do not support compartment searches. The `POST` method does not support\n        `application/x-www-form-urlencoded` search parameters. On success, the response\n        body contains a JSON-encoded representation of a `Bundle` resource of type\n        `searchset`, containing the results of the search. Errors generated by the\n        FHIR store contain a JSON-encoded `OperationOutcome` resource describing the\n        reason for the error. If the request cannot be mapped to a valid API method\n        on a FHIR store, a generic GCP error might be returned instead. The server''s\n        capability statement, retrieved through capabilities, indicates what search\n        parameters are supported on each FHIR resource. A list of all search parameters\n        defined by the specification can be found in the FHIR Search Parameter Registry\n        ([STU3](https://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),\n        [R4](https://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)).\n        FHIR search parameters for DSTU2 can be found on each resource''s definition\n        page. Supported search modifiers: `:missing`, `:exact`, `:contains`, `:text`,\n        `:in`, `:not-in`, `:above`, `:below`, `:[type]`, `:not`, and `:recurse`. Supported\n        search result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,\n        `_summary=data`, and `_elements`. The maximum number of search results returned\n        defaults to 100, which can be overridden by the `_count` parameter up to a\n        maximum limit of 1000. If there are additional results, the returned `Bundle`\n        contains a link of `relation` \"next\", which has a `_page_token` parameter\n        for an opaque pagination token that can be used to retrieve the next page.\n        Resources with a total size larger than 5MB or a field count larger than 50,000\n        might not be fully searchable as the server might trim its generated search\n        index in those cases. Note: FHIR resources are indexed asynchronously, so\n        there might be a slight delay between the time a resource is created or changes\n        and when the change is reflected in search results. For samples and detailed\n        information, see [Searching for FHIR resources](/healthcare/docs/how-tos/fhir-search)\n        and [Advanced FHIR search features](/healthcare/docs/how-tos/fhir-advanced-search).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.search-type\n      parameters:\n      - description: Name of the FHIR store to retrieve resources from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The FHIR resource type to search, such as Patient or Observation.\n          For a complete list, see the FHIR Resource Index ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n          [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n          [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\n        in: path\n        name: resourceType\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchResourcesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/fhir/{type}:\n    delete:\n      description: 'Deletes FHIR resources that match a search query. Implements the\n        FHIR standard conditional delete interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.12.1),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.13.1),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#3.1.0.7.1)). If\n        multiple resources match, all matching resources are deleted. Search terms\n        are provided as query parameters following the same pattern as the search\n        method. Note: Unless resource versioning is disabled by setting the disable_resource_versioning\n        flag on the FHIR store, the deleted resources are moved to a history repository\n        that can still be retrieved through vread and related methods, unless they\n        are removed by the purge method. This method requires the`healthcare.fhirStores.searchResources`\n        and `healthcare.fhirResources.delete` permissions on the parent FHIR store.\n        For samples that show how to call `conditionalDelete`, see [Conditionally\n        deleting a FHIR resource](/healthcare/docs/how-tos/fhir-resources#conditionally_deleting_a_fhir_resource).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.conditionalDelete\n      parameters:\n      - description: The name of the FHIR store this resource belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The FHIR resource type to delete, such as Patient or Observation.\n          For a complete list, see the FHIR Resource Index ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n          [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n          [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: 'If a resource is found based on the search criteria specified\n        in the query parameters, updates part of that resource by applying the operations\n        specified in a [JSON Patch](http://jsonpatch.com/) document. Implements the\n        FHIR standard conditional patch interaction ([STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#patch),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#patch)). DSTU2\n        doesn''t define a conditional patch method, but the server supports it in\n        the same way it supports STU3. Search terms are provided as query parameters\n        following the same pattern as the search method. If the search criteria identify\n        more than one match, the request returns a `412 Precondition Failed` error.\n        The request body must contain a JSON Patch document, and the request headers\n        must contain `Content-Type: application/json-patch+json`. On success, the\n        response body contains a JSON-encoded representation of the updated resource,\n        including the server-assigned version ID. Errors generated by the FHIR store\n        contain a JSON-encoded `OperationOutcome` resource describing the reason for\n        the error. If the request cannot be mapped to a valid API method on a FHIR\n        store, a generic GCP error might be returned instead. This method requires\n        the`healthcare.fhirStores.searchResources` permission on the parent FHIR store\n        and the `healthcare.fhirResources.patch` permission on the requested FHIR\n        store resource. For samples that show how to call `conditionalPatch`, see\n        [Conditionally patching a FHIR resource](/healthcare/docs/how-tos/fhir-resources#conditionally_patching_a_fhir_resource).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.conditionalPatch\n      parameters:\n      - description: The name of the FHIR store this resource belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The FHIR resource type to update, such as Patient or Observation.\n          For a complete list, see the FHIR Resource Index ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n          [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n          [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    post:\n      description: 'Creates a FHIR resource. Implements the FHIR standard create interaction\n        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#create),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#create), [R4](https://hl7.org/implement/standards/fhir/R4/http.html#create)),\n        which creates a new resource with a server-assigned resource ID. Also supports\n        the FHIR standard conditional create interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#ccreate),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#ccreate), [R4](https://hl7.org/implement/standards/fhir/R4/http.html#ccreate)),\n        specified by supplying an `If-None-Exist` header containing a FHIR search\n        query. If no resources match this search query, the server processes the create\n        operation as normal. The request body must contain a JSON-encoded FHIR resource,\n        and the request headers must contain `Content-Type: application/fhir+json`.\n        On success, the response body contains a JSON-encoded representation of the\n        resource as it was created on the server, including the server-assigned resource\n        ID and version ID. Errors generated by the FHIR store contain a JSON-encoded\n        `OperationOutcome` resource describing the reason for the error. If the request\n        cannot be mapped to a valid API method on a FHIR store, a generic GCP error\n        might be returned instead. For samples that show how to call `create`, see\n        [Creating a FHIR resource](/healthcare/docs/how-tos/fhir-resources#creating_a_fhir_resource).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.create\n      parameters:\n      - description: The name of the FHIR store this resource belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The FHIR resource type to create, such as Patient or Observation.\n          For a complete list, see the FHIR Resource Index ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n          [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n          [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must\n          match the resource type in the provided content.\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    put:\n      description: 'If a resource is found based on the search criteria specified\n        in the query parameters, updates the entire contents of that resource. Implements\n        the FHIR standard conditional update interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.10.2),\n        [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#cond-update),\n        [R4](https://hl7.org/implement/standards/fhir/R4/http.html#cond-update)).\n        Search terms are provided as query parameters following the same pattern as\n        the search method. If the search criteria identify more than one match, the\n        request returns a `412 Precondition Failed` error. If the search criteria\n        identify zero matches, and the supplied resource body contains an `id`, and\n        the FHIR store has enable_update_create set, creates the resource with the\n        client-specified ID. It is strongly advised not to include or encode any sensitive\n        data such as patient identifiers in client-specified resource IDs. Those IDs\n        are part of the FHIR resource path recorded in Cloud Audit Logs and Pub/Sub\n        notifications. Those IDs can also be contained in reference fields within\n        other resources. If the search criteria identify zero matches, and the supplied\n        resource body does not contain an `id`, the resource is created with a server-assigned\n        ID as per the create method. The request body must contain a JSON-encoded\n        FHIR resource, and the request headers must contain `Content-Type: application/fhir+json`.\n        On success, the response body contains a JSON-encoded representation of the\n        updated resource, including the server-assigned version ID. Errors generated\n        by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing\n        the reason for the error. If the request cannot be mapped to a valid API method\n        on a FHIR store, a generic GCP error might be returned instead. This method\n        requires the`healthcare.fhirStores.searchResources` and `healthcare.fhirResources.update`\n        permissions on the parent FHIR store. For samples that show how to call `conditionalUpdate`,\n        see [Conditionally updating a FHIR resource](/healthcare/docs/how-tos/fhir-resources#conditionally_updating_a_fhir_resource).'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.conditionalUpdate\n      parameters:\n      - description: The name of the FHIR store this resource belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The FHIR resource type to update, such as Patient or Observation.\n          For a complete list, see the FHIR Resource Index ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n          [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n          [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must\n          match the resource type in the provided content.\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/fhir/{type}/$validate:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Validates an input FHIR resource''s conformance to its profiles\n        and the profiles configured on the FHIR store. Implements the FHIR extended\n        operation $validate ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resource-operations.html#validate),\n        [STU3](http://hl7.org/implement/standards/fhir/STU3/resource-operations.html#validate),\n        or [R4](http://hl7.org/implement/standards/fhir/R4/resource-operation-validate.html)).\n        The request body must contain a JSON-encoded FHIR resource, and the request\n        headers must contain `Content-Type: application/fhir+json`. The `Parameters`\n        input syntax is not supported. The `profile` query parameter can be used to\n        request that the resource only be validated against a specific profile. If\n        a profile with the given URL cannot be found in the FHIR store then an error\n        is returned. Errors generated by validation contain a JSON-encoded `OperationOutcome`\n        resource describing the reason for the error. If the request cannot be mapped\n        to a valid API method on a FHIR store, a generic GCP error might be returned\n        instead.'\n      operationId: healthcare.projects.locations.datasets.fhirStores.fhir.Resource-validate\n      parameters:\n      - description: The name of the FHIR store that holds the profiles being used\n          for validation.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The FHIR resource type of the resource being validated. For a\n          complete list, see the FHIR Resource Index ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),\n          [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),\n          or [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).\n          Must match the resource type in the provided content.\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n      - description: A profile that this resource should be validated against.\n        in: query\n        name: profile\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HttpBody'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HttpBody'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/fhirStores:\n    get:\n      description: Lists the FHIR stores in the given dataset.\n      operationId: healthcare.projects.locations.datasets.fhirStores.list\n      parameters:\n      - description: Name of the dataset.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Restricts stores returned to those matching a filter. The following\n          syntax is available: * A string field value can be written as text inside\n          quotation marks, for example `\"query text\"`. The only valid relational operation\n          for text fields is equality (`=`), where text is searched within the field,\n          rather than having the field be equal to the text. For example, `\"Comment\n          = great\"` returns messages with `great` in the comment field. * A number\n          field value can be written as an integer, a decimal, or an exponential.\n          The valid relational operators for number fields are the equality operator\n          (`=`), along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`,\n          `\u003e=`). Note that there is no inequality (`!=`) operator. You can prepend\n          the `NOT` operator to an expression to negate it. * A date field value must\n          be written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339\n          time format. Leading zeros are required for one-digit months and days. The\n          valid relational operators for date fields are the equality operator (`=`)\n          , along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`).\n          Note that there is no inequality (`!=`) operator. You can prepend the `NOT`\n          operator to an expression to negate it. * Multiple field query expressions\n          can be combined in one query by adding `AND` or `OR` operators between the\n          expressions. If a boolean operator appears within a quoted string, it is\n          not treated as special, it''s just another part of the character string\n          to be matched. You can prepend the `NOT` operator to an expression to negate\n          it. Only filtering on labels is supported, for example `labels.key=value`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Limit on the number of FHIR stores to return in a single response.\n          If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from the previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListFhirStoresResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new FHIR store within the parent dataset.\n      operationId: healthcare.projects.locations.datasets.fhirStores.create\n      parameters:\n      - description: The name of the dataset this FHIR store belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'The ID of the FHIR store that is being created. The string must\n          match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`.'\n        in: query\n        name: fhirStoreId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FhirStore'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FhirStore'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/hl7V2Stores:\n    get:\n      description: Lists the HL7v2 stores in the given dataset.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.list\n      parameters:\n      - description: Name of the dataset.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Restricts stores returned to those matching a filter. The following\n          syntax is available: * A string field value can be written as text inside\n          quotation marks, for example `\"query text\"`. The only valid relational operation\n          for text fields is equality (`=`), where text is searched within the field,\n          rather than having the field be equal to the text. For example, `\"Comment\n          = great\"` returns messages with `great` in the comment field. * A number\n          field value can be written as an integer, a decimal, or an exponential.\n          The valid relational operators for number fields are the equality operator\n          (`=`), along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`,\n          `\u003e=`). Note that there is no inequality (`!=`) operator. You can prepend\n          the `NOT` operator to an expression to negate it. * A date field value must\n          be written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339\n          time format. Leading zeros are required for one-digit months and days. The\n          valid relational operators for date fields are the equality operator (`=`)\n          , along with the less than/greater than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`).\n          Note that there is no inequality (`!=`) operator. You can prepend the `NOT`\n          operator to an expression to negate it. * Multiple field query expressions\n          can be combined in one query by adding `AND` or `OR` operators between the\n          expressions. If a boolean operator appears within a quoted string, it is\n          not treated as special, it''s just another part of the character string\n          to be matched. You can prepend the `NOT` operator to an expression to negate\n          it. Only filtering on labels is supported. For example, `labels.key=value`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Limit on the number of HL7v2 stores to return in a single response.\n          If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from the previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListHl7V2StoresResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new HL7v2 store within the parent dataset.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.create\n      parameters:\n      - description: The name of the dataset this HL7v2 store belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'The ID of the HL7v2 store that is being created. The string\n          must match the following regex: `[\\p{L}\\p{N}_\\-\\.]{1,256}`.'\n        in: query\n        name: hl7V2StoreId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Hl7V2Store'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Hl7V2Store'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/messages:\n    get:\n      description: 'Lists all the messages in the given HL7v2 store with support for\n        filtering. Note: HL7v2 messages are indexed asynchronously, so there might\n        be a slight delay between the time a message is created and when it can be\n        found through a filter.'\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.list\n      parameters:\n      - description: Name of the HL7v2 store to retrieve messages from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Restricts messages returned to those matching a filter. The\n          following syntax is available: * A string field value can be written as\n          text inside quotation marks, for example `\"query text\"`. The only valid\n          relational operation for text fields is equality (`=`), where text is searched\n          within the field, rather than having the field be equal to the text. For\n          example, `\"Comment = great\"` returns messages with `great` in the comment\n          field. * A number field value can be written as an integer, a decimal, or\n          an exponential. The valid relational operators for number fields are the\n          equality operator (`=`), along with the less than/greater than operators\n          (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`) operator.\n          You can prepend the `NOT` operator to an expression to negate it. * A date\n          field value must be written in `yyyy-mm-dd` form. Fields with date and time\n          use the RFC3339 time format. Leading zeros are required for one-digit months\n          and days. The valid relational operators for date fields are the equality\n          operator (`=`) , along with the less than/greater than operators (`\u003c`, `\u003c=`,\n          `\u003e`, `\u003e=`). Note that there is no inequality (`!=`) operator. You can prepend\n          the `NOT` operator to an expression to negate it. * Multiple field query\n          expressions can be combined in one query by adding `AND` or `OR` operators\n          between the expressions. If a boolean operator appears within a quoted string,\n          it is not treated as special, it''s just another part of the character string\n          to be matched. You can prepend the `NOT` operator to an expression to negate\n          it. Fields/functions available for filtering are: * `message_type`, from\n          the MSH-9.1 field. For example, `NOT message_type = \"ADT\"`. * `send_date`\n          or `sendDate`, the YYYY-MM-DD date the message was sent in the dataset''s\n          time_zone, from the MSH-7 segment. For example, `send_date \u003c \"2017-01-02\"`.\n          * `send_time`, the timestamp when the message was sent, using the RFC3339\n          time format for comparisons, from the MSH-7 segment. For example, `send_time\n          \u003c \"2017-01-02T00:00:00-05:00\"`. * `create_time`, the timestamp when the\n          message was created in the HL7v2 store. Use the RFC3339 time format for\n          comparisons. For example, `create_time \u003c \"2017-01-02T00:00:00-05:00\"`. *\n          `send_facility`, the care center that the message came from, from the MSH-4\n          segment. For example, `send_facility = \"ABC\"`. * `PatientId(value, type)`,\n          which matches if the message lists a patient having an ID of the given value\n          and type in the PID-2, PID-3, or PID-4 segments. For example, `PatientId(\"123456\",\n          \"MRN\")`. * `labels.x`, a string value of the label with key `x` as set using\n          the Message.labels map. For example, `labels.\"priority\"=\"high\"`. The operator\n          `:*` can be used to assert the existence of a label. For example, `labels.\"priority\":*`.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: 'Orders messages returned by the specified order_by clause. Syntax:\n          https://cloud.google.com/apis/design/design_patterns#sorting_order Fields\n          available for ordering are: * `send_time`'\n        in: query\n        name: orderBy\n        schema:\n          type: string\n      - description: Limit on the number of messages to return in a single response.\n          If not specified, 100 is used. May not be larger than 1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: The next_page_token value returned from the previous List request,\n          if any.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - description: Specifies the parts of the Message to return in the response.\n          When unspecified, equivalent to BASIC. Setting this to anything other than\n          BASIC with a `page_size` larger than the default can generate a large response,\n          which impacts the performance of this method.\n        in: query\n        name: view\n        schema:\n          enum:\n          - MESSAGE_VIEW_UNSPECIFIED\n          - RAW_ONLY\n          - PARSED_ONLY\n          - FULL\n          - SCHEMATIZED_ONLY\n          - BASIC\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMessagesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Parses and stores an HL7v2 message. This method triggers an asynchronous\n        notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig,\n        if the filtering matches the message. If an MLLP adapter is configured to\n        listen to a Pub/Sub topic, the adapter transmits the message when a notification\n        is received.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.create\n      parameters:\n      - description: The name of the dataset this message belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMessageRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Message'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/messages:batchGet:\n    get:\n      description: Gets multiple messages in the given HL7v2 store.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.batchGet\n      parameters:\n      - description: 'Name of the HL7v2 store to retrieve messages from, in the format:\n          `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`.'\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'The resource id of the HL7v2 messages to retrieve in the format:\n          `{message_id}`, where the full resource name is `{parent}/messages/{message_id}`\n          A maximum of 100 messages can be retrieved in a batch. All ''ids'' have\n          to be under parent.'\n        explode: true\n        in: query\n        name: ids\n        schema:\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Specifies the parts of the Messages resource to return in the\n          response. When unspecified, equivalent to BASIC.\n        in: query\n        name: view\n        schema:\n          enum:\n          - MESSAGE_VIEW_UNSPECIFIED\n          - RAW_ONLY\n          - PARSED_ONLY\n          - FULL\n          - SCHEMATIZED_ONLY\n          - BASIC\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetMessagesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/messages:ingest:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Parses and stores an HL7v2 message. This method triggers an asynchronous\n        notification to any Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig,\n        if the filtering matches the message. If an MLLP adapter is configured to\n        listen to a Pub/Sub topic, the adapter transmits the message when a notification\n        is received. If the method is successful, it generates a response containing\n        an HL7v2 acknowledgment (`ACK`) message. If the method encounters an error,\n        it returns a negative acknowledgment (`NACK`) message. This behavior is suitable\n        for replying to HL7v2 interface systems that expect these acknowledgments.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.messages.ingest\n      parameters:\n      - description: The name of the HL7v2 store this message belongs to.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IngestMessageRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestMessageResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/userDataMappings:\n    get:\n      description: Lists the User data mappings in the specified consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.userDataMappings.list\n      parameters:\n      - description: Required. Name of the consent store to retrieve User data mappings\n          from.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. Restricts the user data mappings returned to those\n          matching a filter. The following syntax is available: * A string field value\n          can be written as text inside quotation marks, for example `\"query text\"`.\n          The only valid relational operation for text fields is equality (`=`), where\n          text is searched within the field, rather than having the field be equal\n          to the text. For example, `\"Comment = great\"` returns messages with `great`\n          in the comment field. * A number field value can be written as an integer,\n          a decimal, or an exponential. The valid relational operators for number\n          fields are the equality operator (`=`), along with the less than/greater\n          than operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality\n          (`!=`) operator. You can prepend the `NOT` operator to an expression to\n          negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields\n          with date and time use the RFC3339 time format. Leading zeros are required\n          for one-digit months and days. The valid relational operators for date fields\n          are the equality operator (`=`) , along with the less than/greater than\n          operators (`\u003c`, `\u003c=`, `\u003e`, `\u003e=`). Note that there is no inequality (`!=`)\n          operator. You can prepend the `NOT` operator to an expression to negate\n          it. * Multiple field query expressions can be combined in one query by adding\n          `AND` or `OR` operators between the expressions. If a boolean operator appears\n          within a quoted string, it is not treated as special, it''s just another\n          part of the character string to be matched. You can prepend the `NOT` operator\n          to an expression to negate it. The fields available for filtering are: -\n          data_id - user_id. For example, `filter=user_id=\\\"user123\\\"`. - archived\n          - archive_time'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. Limit on the number of User data mappings to return\n          in a single response. If not specified, 100 is used. May not be larger than\n          1000.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. Token to retrieve the next page of results, or empty\n          to get the first page.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserDataMappingsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new User data mapping in the parent consent store.\n      operationId: healthcare.projects.locations.datasets.consentStores.userDataMappings.create\n      parameters:\n      - description: Required. Name of the consent store.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDataMapping'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDataMapping'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:getIamPolicy:\n    get:\n      description: Gets the access control policy for a resource. Returns an empty\n        policy if the resource exists and does not have a policy set.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.getIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being requested.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      - description: Optional. The policy format version to be returned. Valid values\n          are 0, 1, and 3. Requests specifying an invalid value will be rejected.\n          Requests for policies with any conditional bindings must specify version\n          3. Policies without any conditional bindings may specify any valid value\n          or leave the field unset. To learn which resources support conditions in\n          their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        in: query\n        name: options.requestedPolicyVersion\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{resource}:setIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Sets the access control policy on the specified resource. Replaces\n        any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED`\n        errors.\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.setIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being specified.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:testIamPermissions:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: 'Returns permissions that a caller has on the specified resource.\n        If the resource does not exist, this will return an empty set of permissions,\n        not a `NOT_FOUND` error. Note: This operation is designed to be used for building\n        permission-aware UIs and command-line tools, not for authorization checking.\n        This operation may \"fail open\" without warning.'\n      operationId: healthcare.projects.locations.datasets.hl7V2Stores.testIamPermissions\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy detail is being\n          requested. See the operation documentation for the appropriate value for\n          this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestIamPermissionsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestIamPermissionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{sourceDataset}:deidentify:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new dataset containing de-identified data from the source\n        dataset. The metadata field type is OperationMetadata. If the request is successful,\n        the response field type is DeidentifySummary. The LRO result may still be\n        successful if de-identification fails for some resources. The new de-identified\n        dataset will not contain these failed resources. The number of resources processed\n        are tracked in Operation.metadata. Error details are logged to Cloud Logging.\n        For more information, see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).\n      operationId: healthcare.projects.locations.datasets.deidentify\n      parameters:\n      - description: Source dataset resource name. For example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.\n        in: path\n        name: sourceDataset\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeidentifyDatasetRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{sourceStore}:deidentify:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: De-identifies data from the source store and writes it to the destination\n        store. The metadata field type is OperationMetadata. If the request is successful,\n        the response field type is DeidentifyFhirStoreSummary. The number of resources\n        processed are tracked in Operation.metadata. Error details are logged to Cloud\n        Logging. For more information, see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).\n      operationId: healthcare.projects.locations.datasets.fhirStores.deidentify\n      parameters:\n      - description: Source FHIR store resource name. For example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.\n        in: path\n        name: sourceStore\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeidentifyFhirStoreRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Operation'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\nservers:\n- url: https://healthcare.googleapis.com/\ntags:\n- name: projects\nx-hasEquivalentPaths: true\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@ca6abad4745061e15112152cdee33275701a16c1/-/blob/providers/src/googleapis.com/v0.1.2/services/healthcare-v1beta1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/ca6abad4745061e15112152cdee33275701a16c1/providers/src/googleapis.com/v0.1.2/services/healthcare-v1beta1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:285359: duplicate path: \"/v1beta1/{sourceStore}:deidentify\""
}