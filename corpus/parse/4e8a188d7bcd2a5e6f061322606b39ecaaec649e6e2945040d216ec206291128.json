{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/BIDMCDigitalPsychiatry/LAMP-server"
		},
		"file": {
			"name": "OpenAPISchema.json",
			"size": 0,
			"path": "src/utils/OpenAPISchema.json",
			"byteSize": 215489,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"LAMP Platform\",\n    \"version\": \"1.0.0\",\n    \"description\": \"\",\n    \"contact\": {\n      \"url\": \"https://digitalpsych.org/\",\n      \"email\": \"team@digitalpsych.org\",\n      \"name\": \"Division of Digital Psychiatry at the Beth Israel Deaconess Medical Center.\"\n    }\n  },\n  \"externalDocs\": {\n    \"url\": \"https://docs.lamp.digital/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://{server_url}\",\n      \"description\": \"LAMP Platform API Server\",\n      \"variables\": {\n        \"server_url\": {\n          \"default\": \"api.lamp.digital\",\n          \"description\": \"A specific API server instance (HTTPS required).\"\n        }\n      }\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"API\",\n      \"description\": \"Advanced query and schema endpoints.\"\n    },\n    {\n      \"name\": \"ActivitySpec\",\n      \"description\": \"Operations related to the management of ActivitySpecs.\"\n    },\n    {\n      \"name\": \"SensorSpec\",\n      \"description\": \"Operations related to the management of SensorSpecs.\"\n    },\n    {\n      \"name\": \"Researcher\",\n      \"description\": \"Operations related to the management of Researchers.\"\n    },\n    {\n      \"name\": \"Study\",\n      \"description\": \"Operations related to the management of Studies.\"\n    },\n    {\n      \"name\": \"Participant\",\n      \"description\": \"Operations related to the management of Participants.\"\n    },\n    {\n      \"name\": \"Activity\",\n      \"description\": \"Operations related to the management of Activities.\"\n    },\n    {\n      \"name\": \"Sensor\",\n      \"description\": \"Operations related to the management of Sensors.\"\n    }\n  ],\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"operationId\": \"API.schema\",\n        \"summary\": \"View the API Schema.\",\n        \"description\": \"View this API schema document from a live server instance.\",\n        \"tags\": [\n          \"API\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Content Available\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"API.query\",\n        \"summary\": \"Query the LAMP Database.\",\n        \"description\": \"Query the LAMP Database using a transformation document. All GET operations in this API schema document are available by replacing the period with an underscore (i.e. `$Participant_view(...)` instead of `Participant.view(...)`). The `origin`, `from`, and `to` parameters of EventStream functions are preserved but the `transform` parameter is not.\",\n        \"tags\": [\n          \"API\"\n        ],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"text/plain\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Data Queried\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\nresult = LAMP.API.query('$Researcher_view(\\\"me\\\") { id: $Participant_all(studies[0]).{ id: $SensorEvent_all(id)[-1] } }')\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity_spec\": {\n      \"post\": {\n        \"operationId\": \"ActivitySpec.create\",\n        \"summary\": \"Create an ActivitySpec.\",\n        \"description\": \"Create an ActivitySpec.\",\n        \"tags\": [\n          \"ActivitySpec\"\n        ],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ActivitySpec\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"ActivitySpec.list\",\n        \"summary\": \"List all ActivitySpecs.\",\n        \"description\": \"List all ActivitySpecs.\",\n        \"tags\": [\n          \"ActivitySpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ActivitySpec\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity_spec/{id}\": {\n      \"put\": {\n        \"operationId\": \"ActivitySpec.update\",\n        \"summary\": \"Update an ActivitySpec.\",\n        \"description\": \"Update an ActivitySpec.\",\n        \"tags\": [\n          \"ActivitySpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ActivitySpec\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"ActivitySpec.delete\",\n        \"summary\": \"Delete an ActivitySpec.\",\n        \"description\": \"Delete an ActivitySpec.\",\n        \"tags\": [\n          \"ActivitySpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"ActivitySpec.view\",\n        \"summary\": \"View an ActivitySpec.\",\n        \"description\": \"View an ActivitySpec.\",\n        \"tags\": [\n          \"ActivitySpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ActivitySpec\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor_spec\": {\n      \"post\": {\n        \"operationId\": \"SensorSpec.create\",\n        \"summary\": \"Create a SensorSpec.\",\n        \"description\": \"Create a SensorSpec.\",\n        \"tags\": [\n          \"SensorSpec\"\n        ],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SensorSpec\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"SensorSpec.list\",\n        \"summary\": \"List all SensorSpecs.\",\n        \"description\": \"List all SensorSpecs.\",\n        \"tags\": [\n          \"SensorSpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/SensorSpec\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor_spec/{id}\": {\n      \"put\": {\n        \"operationId\": \"SensorSpec.update\",\n        \"summary\": \"Update a SensorSpec.\",\n        \"description\": \"Update a SensorSpec.\",\n        \"tags\": [\n          \"SensorSpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SensorSpec\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"SensorSpec.delete\",\n        \"summary\": \"Delete a SensorSpec.\",\n        \"description\": \"Delete a SensorSpec.\",\n        \"tags\": [\n          \"SensorSpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"SensorSpec.view\",\n        \"summary\": \"View a SensorSpec.\",\n        \"description\": \"View a SensorSpec.\",\n        \"tags\": [\n          \"SensorSpec\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/SensorSpec\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher\": {\n      \"post\": {\n        \"operationId\": \"Researcher.create\",\n        \"summary\": \"Create a Researcher.\",\n        \"description\": \"This action requires system administrator privileges.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Researcher\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Researcher.list\",\n        \"summary\": \"List all Researchers.\",\n        \"description\": \"This action requires system administrator privileges.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Content Available\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Researcher\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}\": {\n      \"put\": {\n        \"operationId\": \"Researcher.update\",\n        \"summary\": \"Update a Researcher.\",\n        \"description\": \"Update a Researcher's settings.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Researcher\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Researcher.delete\",\n        \"summary\": \"Delete a Researcher.\",\n        \"description\": \"Delete a Researcher.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Researcher.view\",\n        \"summary\": \"View a Researcher.\",\n        \"description\": \"View a Researcher.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Researcher\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}/study\": {\n      \"post\": {\n        \"operationId\": \"Researcher.create_study\",\n        \"summary\": \"Create a Study for a Researcher.\",\n        \"description\": \"Create a Study for a Researcher.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Study\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Researcher.list_studies\",\n        \"summary\": \"List all Studies for a Researcher.\",\n        \"description\": \"List all studies for a Researcher.\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Study\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}\": {\n      \"put\": {\n        \"operationId\": \"Study.update\",\n        \"summary\": \"Update a Study.\",\n        \"description\": \"Update a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Study\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Study.delete\",\n        \"summary\": \"Delete a Study.\",\n        \"description\": \"Delete a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Study.view\",\n        \"summary\": \"View a Study.\",\n        \"description\": \"View a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Study\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/participant\": {\n      \"post\": {\n        \"operationId\": \"Study.create_participant\",\n        \"summary\": \"Create a Participant for a Study.\",\n        \"description\": \"Create a Participant for a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Participant\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Study.list_participants\",\n        \"summary\": \"List all Participants for a Study.\",\n        \"description\": \"List all Participants in a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Participant\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}\": {\n      \"put\": {\n        \"operationId\": \"Participant.update\",\n        \"summary\": \"Update a Participant.\",\n        \"description\": \"Update a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Participant\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Participant.delete\",\n        \"summary\": \"Delete a Participant.\",\n        \"description\": \"All owned data or event streams will be permanently deleted.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Participant.view\",\n        \"summary\": \"View a Participant.\",\n        \"description\": \"Get a single participant, by identifier.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Participant\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/activity\": {\n      \"post\": {\n        \"operationId\": \"Study.create_activity\",\n        \"summary\": \"Create an Activity for a Study.\",\n        \"description\": \"Create an Activity for a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Activity\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Study.list_activities\",\n        \"summary\": \"List all Activities for a Study.\",\n        \"description\": \"List all Activities available to Participants of a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}\": {\n      \"put\": {\n        \"operationId\": \"Activity.update\",\n        \"summary\": \"Update an Activity.\",\n        \"description\": \"Update an Activity.\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Activity\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Activity.delete\",\n        \"summary\": \"Delete an Activity.\",\n        \"description\": \"Delete an Activity.\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Activity.view\",\n        \"summary\": \"View an Activity.\",\n        \"description\": \"View an Activity.\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/sensor\": {\n      \"post\": {\n        \"operationId\": \"Study.create_sensor\",\n        \"summary\": \"Create a Sensor for a Study.\",\n        \"description\": \"Create a Sensor for a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Sensor\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Study.list_sensors\",\n        \"summary\": \"List all Sensors in a Study.\",\n        \"description\": \"List all Sensors available to Participants of a Study.\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Sensor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}\": {\n      \"put\": {\n        \"operationId\": \"Sensor.update\",\n        \"summary\": \"Update a Sensor.\",\n        \"description\": \"Update a Sensor.\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Sensor\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Sensor.delete\",\n        \"summary\": \"Delete a Sensor.\",\n        \"description\": \"Delete a Sensor.\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Sensor.view\",\n        \"summary\": \"View a Sensor.\",\n        \"description\": \"View a Sensor.\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Sensor\"\n                      },\n                      \"maxLength\": 1\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/activity\": {\n      \"get\": {\n        \"operationId\": \"Participant.list_activities\",\n        \"summary\": \"List all Activities in a Study shared by a Participant.\",\n        \"description\": \"List all Activities available to a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/sensor\": {\n      \"get\": {\n        \"operationId\": \"Participant.list_sensors\",\n        \"summary\": \"List all Sensors in a Study shared by a Participant.\",\n        \"description\": \"List all Sensors available to a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Sensor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}/participant\": {\n      \"get\": {\n        \"operationId\": \"Activity.list_participants\",\n        \"summary\": \"List all Participants in a Study shared by an Activity.\",\n        \"description\": \"List all Participants available to an Activity.\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Activity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}/participant\": {\n      \"get\": {\n        \"operationId\": \"Sensor.list_participants\",\n        \"summary\": \"List all Participants in a Study shared by a Sensor.\",\n        \"description\": \"List all Participants available to a Sensor.\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Sensor\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/activity_event\": {\n      \"post\": {\n        \"operationId\": \"Participant.create_activity_events\",\n        \"summary\": \"Create an ActivityEvent for a Participant.\",\n        \"description\": \"Create an ActivityEvent for a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ActivityEvent\"\n                  },\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/ActivityEvent\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Participant.query_activity_events\",\n        \"summary\": \"Query ActivityEvents for a Participant.\",\n        \"description\": \"List ActivityEvents produced by a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"origin\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"description\": \"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"description\": \"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"default\": 1000,\n              \"description\": \"The maximum number of events to return in the query. Positive values like +1000 return latest events first, while negative values like -1000 return earliest events first.\",\n              \"example\": \"-10\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ActivityEvent\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/sensor_event\": {\n      \"post\": {\n        \"operationId\": \"Participant.create_sensor_events\",\n        \"summary\": \"Create a SensorEvent for a Participant.\",\n        \"description\": \"Create a SensorEvent for a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/SensorEvent\"\n                  },\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/SensorEvent\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"Participant.query_sensor_events\",\n        \"summary\": \"Query SensorEvents for a Participant.\",\n        \"description\": \"List SensorEvents produced by a Participant.\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"origin\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"description\": \"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"description\": \"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"default\": 1000,\n              \"description\": \"The maximum number of events to return in the query. Positive values like +1000 return latest events first, while negative values like -1000 return earliest events first.\",\n              \"example\": \"-10\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/SensorEvent\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}/tag\": {\n      \"get\": {\n        \"operationId\": \"Researcher.list_tags\",\n        \"summary\": \"List all Tags set for or by a Researcher.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}/tag/{key}\": {\n      \"get\": {\n        \"operationId\": \"Researcher.get_tag\",\n        \"summary\": \"Get a Tag set for or by a Researcher.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}/tag/{key}/{target}\": {\n      \"put\": {\n        \"operationId\": \"Researcher.set_tag\",\n        \"summary\": \"Set a Tag for a Researcher or its childen.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}/credential\": {\n      \"get\": {\n        \"operationId\": \"Researcher.list_credentials\",\n        \"summary\": \"List all Credentials for a Researcher.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Credential\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"Researcher.create_credential\",\n        \"summary\": \"Add a Credential for a Researcher.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/researcher/{id}/credential/{access_key}\": {\n      \"put\": {\n        \"operationId\": \"Researcher.update_credential\",\n        \"summary\": \"Update a Credential for a Researcher.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Researcher.delete_credential\",\n        \"summary\": \"Delete a Credential for a Researcher.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Researcher\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/tag\": {\n      \"get\": {\n        \"operationId\": \"Study.list_tags\",\n        \"summary\": \"List all Tags set for or by a Study.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/tag/{key}\": {\n      \"get\": {\n        \"operationId\": \"Study.get_tag\",\n        \"summary\": \"Get a Tag set for or by a Study.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/tag/{key}/{target}\": {\n      \"put\": {\n        \"operationId\": \"Study.set_tag\",\n        \"summary\": \"Set a Tag for a Study or its childen.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/credential\": {\n      \"get\": {\n        \"operationId\": \"Study.list_credentials\",\n        \"summary\": \"List all Credentials for a Study.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Credential\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"Study.create_credential\",\n        \"summary\": \"Create a Credential for a Study.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"type_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/study/{id}/credential/{access_key}\": {\n      \"put\": {\n        \"operationId\": \"Study.update_credential\",\n        \"summary\": \"Update a Credential for a Study.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Study.delete_credential\",\n        \"summary\": \"Delete a Credential for a Study.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Study\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/tag\": {\n      \"get\": {\n        \"operationId\": \"Participant.list_tags\",\n        \"summary\": \"List all Tags set for or by a Participant.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/tag/{key}\": {\n      \"get\": {\n        \"operationId\": \"Participant.get_tag\",\n        \"summary\": \"Get a Tag set for or by a Participant.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/tag/{key}/{target}\": {\n      \"put\": {\n        \"operationId\": \"Participant.set_tag\",\n        \"summary\": \"Set a Tag for the Participant or its childen.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/credential\": {\n      \"get\": {\n        \"operationId\": \"Participant.list_credentials\",\n        \"summary\": \"List all Credentials for a Participant.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Credential\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"Participant.create_credential\",\n        \"summary\": \"Create a Credential for a Participant.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/participant/{id}/credential/{access_key}\": {\n      \"put\": {\n        \"operationId\": \"Participant.update_credential\",\n        \"summary\": \"Update a Credential for a Participant.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Participant.delete_credential\",\n        \"summary\": \"Delete a Credential for a Participant.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Participant\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}/tag\": {\n      \"get\": {\n        \"operationId\": \"Activity.list_tags\",\n        \"summary\": \"List all Tags set for or by the Activity.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}/tag/{key}\": {\n      \"get\": {\n        \"operationId\": \"Activity.get_tag\",\n        \"summary\": \"Get a Tag set for or by the Activity.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}/tag/{key}/{target}\": {\n      \"put\": {\n        \"operationId\": \"Activity.set_tag\",\n        \"summary\": \"Set a Tag for the Activity or its childen.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}/credential\": {\n      \"get\": {\n        \"operationId\": \"Activity.list_credentials\",\n        \"summary\": \"List all Credentials for an Activity.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Credential\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"Activity.create_credential\",\n        \"summary\": \"Create a Credential for an Activity.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/activity/{id}/credential/{access_key}\": {\n      \"put\": {\n        \"operationId\": \"Activity.update_credential\",\n        \"summary\": \"Update a Credential for an Activity.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Activity.delete_credential\",\n        \"summary\": \"Delete a Credential for an Activity.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Activity\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}/tag\": {\n      \"get\": {\n        \"operationId\": \"Sensor.list_tags\",\n        \"summary\": \"List all Tags set for or by the Sensor.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}/tag/{key}\": {\n      \"get\": {\n        \"operationId\": \"Sensor.get_tag\",\n        \"summary\": \"Get a Tag set for or by the Sensor.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}/tag/{key}/{target}\": {\n      \"put\": {\n        \"operationId\": \"Sensor.set_tag\",\n        \"summary\": \"Set a Tag for the Sensor or its childen.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}/credential\": {\n      \"get\": {\n        \"operationId\": \"Sensor.list_credentials\",\n        \"summary\": \"List all Credentials for a Sensor.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Credential\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"Sensor.create_credential\",\n        \"summary\": \"Create a Credential for a Sensor.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/sensor/{id}/credential/{access_key}\": {\n      \"put\": {\n        \"operationId\": \"Sensor.update_credential\",\n        \"summary\": \"Update a Credential for a Sensor.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"operationId\": \"Sensor.delete_credential\",\n        \"summary\": \"Delete a Credential for a Sensor.\",\n        \"description\": \"\",\n        \"tags\": [\n          \"Sensor\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"access_key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    },\n    \"/type/{id}/parent\": {\n      \"get\": {\n        \"operationId\": \"API.parent\",\n        \"summary\": \"Find the Parent of the Object.\",\n        \"description\": \"Get the parent type identifier of the data structure referenced by the identifier.\",\n        \"tags\": [\n          \"API\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"transform\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"additionalProperties\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Authorization\": []\n          }\n        ],\n        \"x-code-samples\": [\n          {\n            \"lang\": \"js\",\n            \"label\": \"JavaScript\",\n            \"source\": \"import LAMP from 'lamp-core'\\nawait LAMP.connect({ serverAddress: \\\"api.lamp.digital\\\", accessKey: \\\"email@address.com\\\", secretKey: \\\"password\\\" })\\n// function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"python\",\n            \"label\": \"Python\",\n            \"source\": \"import LAMP\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          },\n          {\n            \"lang\": \"go\",\n            \"label\": \"R Script\",\n            \"source\": \"library(LAMP)\\nLAMP.connect(\\\"api.lamp.digital\\\", \\\"email@address.com\\\", \\\"password\\\")\\n# function-specific sample code here\\n\"\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"JSONSchema\": {\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n          \"$id\": {\n            \"type\": \"string\",\n            \"format\": \"uri-reference\"\n          },\n          \"$schema\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"$ref\": {\n            \"type\": \"string\",\n            \"format\": \"uri-reference\"\n          },\n          \"$comment\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"readOnly\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"examples\": {\n            \"type\": \"array\",\n            \"items\": {}\n          },\n          \"multipleOf\": {\n            \"type\": \"number\",\n            \"minimum\": 0,\n            \"exclusiveMinimum\": true\n          },\n          \"maximum\": {\n            \"type\": \"number\"\n          },\n          \"exclusiveMaximum\": {\n            \"type\": \"number\"\n          },\n          \"minimum\": {\n            \"type\": \"number\"\n          },\n          \"exclusiveMinimum\": {\n            \"type\": \"number\"\n          },\n          \"maxLength\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"minLength\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"default\": 0\n          },\n          \"pattern\": {\n            \"type\": \"string\",\n            \"format\": \"regex\"\n          },\n          \"additionalItems\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"items\": {\n            \"anyOf\": [\n              {\n                \"$ref\": \"#/components/schemas/JSONSchema\"\n              },\n              {\n                \"type\": \"array\",\n                \"minItems\": 1,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/JSONSchema\"\n                }\n              }\n            ],\n            \"default\": true\n          },\n          \"maxItems\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"minItems\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"default\": 0\n          },\n          \"uniqueItems\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"contains\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"maxProperties\": {\n            \"type\": \"integer\",\n            \"minimum\": 0\n          },\n          \"minProperties\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"default\": 0\n          },\n          \"required\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"uniqueItems\": true,\n            \"default\": []\n          },\n          \"additionalProperties\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"definitions\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/JSONSchema\"\n            },\n            \"default\": {}\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/JSONSchema\"\n            },\n            \"default\": {}\n          },\n          \"patternProperties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/JSONSchema\"\n            },\n            \"default\": {}\n          },\n          \"dependencies\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"anyOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JSONSchema\"\n                },\n                {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"uniqueItems\": true,\n                  \"default\": []\n                }\n              ]\n            }\n          },\n          \"propertyNames\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"enum\": {\n            \"type\": \"array\",\n            \"items\": {},\n            \"minItems\": 1,\n            \"uniqueItems\": true\n          },\n          \"type\": {\n            \"anyOf\": [\n              {\n                \"enum\": [\n                  \"array\",\n                  \"boolean\",\n                  \"integer\",\n                  \"null\",\n                  \"number\",\n                  \"object\",\n                  \"string\"\n                ]\n              },\n              {\n                \"type\": \"array\",\n                \"items\": {\n                  \"enum\": [\n                    \"array\",\n                    \"boolean\",\n                    \"integer\",\n                    \"null\",\n                    \"number\",\n                    \"object\",\n                    \"string\"\n                  ]\n                },\n                \"minItems\": 1,\n                \"uniqueItems\": true\n              }\n            ]\n          },\n          \"format\": {\n            \"type\": \"string\"\n          },\n          \"contentMediaType\": {\n            \"type\": \"string\"\n          },\n          \"contentEncoding\": {\n            \"type\": \"string\"\n          },\n          \"if\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"then\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"else\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          },\n          \"allOf\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/JSONSchema\"\n            }\n          },\n          \"anyOf\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/JSONSchema\"\n            }\n          },\n          \"oneOf\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/JSONSchema\"\n            }\n          },\n          \"not\": {\n            \"$ref\": \"#/components/schemas/JSONSchema\"\n          }\n        },\n        \"example\": {\n          \"type\": \"object\",\n          \"additionalProperties\": true\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\",\n            \"example\": \"400.bad-request\"\n          }\n        }\n      },\n      \"ActivitySpec\": {\n        \"type\": \"object\",\n        \"description\": \"The ActivitySpec determines the parameters and properties of an Activity and its corresponding generated ActivityEvents.\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The name of the activity spec.\",\n            \"example\": \"lamp.survey\"\n          },\n          \"help_contents\": {\n            \"type\": \"string\",\n            \"description\": \"Either a binary blob containing a document or video, or a string containing  instructional aid about the Activity.\"\n          },\n          \"script_contents\": {\n            \"type\": \"string\",\n            \"description\": \"The WebView-compatible script that provides this Activity on mobile or desktop (IFrame) clients.\"\n          },\n          \"static_data\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/JSONSchema\"\n              },\n              {\n                \"description\": \"The static data definition of an ActivitySpec.\",\n                \"example\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jewel_count\": {\n                      \"title\": \"Difficulty Level\",\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"beginner\",\n                        \"intermediate\",\n                        \"advanced\",\n                        \"expert\"\n                      ],\n                      \"description\": \"The difficulty level that will be experienced by the participant when playing the game.\",\n                      \"example\": \"expert\"\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          \"temporal_slices\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/JSONSchema\"\n              },\n              {\n                \"description\": \"The temporal event data definition of an ActivitySpec.\",\n                \"example\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"item\": {\n                      \"title\": \"Question\",\n                      \"type\": \"string\",\n                      \"description\": \"The survey question text.\",\n                      \"example\": \"What day is it today?\"\n                    },\n                    \"value\": {\n                      \"title\": \"Response\",\n                      \"type\": [\n                        \"string\",\n                        \"integer\"\n                      ],\n                      \"description\": \"The question response chosen by the participant.\",\n                      \"example\": \"The sky is blue.\"\n                    },\n                    \"type\": {\n                      \"title\": \"Unused\",\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"example\": null\n                    },\n                    \"level\": {\n                      \"title\": \"Unused\",\n                      \"type\": \"object\",\n                      \"nullable\": true,\n                      \"example\": null\n                    },\n                    \"duration\": {\n                      \"title\": \"Time Taken\",\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"description\": \"The number of milliseconds taken by the participant to answer this questtion.\",\n                      \"example\": 8473\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          \"settings\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/JSONSchema\"\n              },\n              {\n                \"description\": \"The Activity settings definition of an ActivitySpec.\",\n                \"example\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jewel_count\": {\n                      \"title\": \"Number of Jewels Displayed\",\n                      \"type\": \"integer\",\n                      \"format\": \"int32\",\n                      \"description\": \"The number of Jewels to display on the screen; if using Jewels variant B, this number is effectively half to account for the two types of Jewels for a participant to tap on.\",\n                      \"example\": 20\n                    },\n                    \"max_duration\": {\n                      \"title\": \"Maximum Duration for a Jewels Game\",\n                      \"type\": \"number\",\n                      \"format\": \"float\",\n                      \"description\": \"The number of seconds to cut a participant off when playing Jewels, if they have not already finished the game.\",\n                      \"example\": 120\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"SensorSpec\": {\n        \"type\": \"object\",\n        \"description\": \"The SensorSpec determines the parameters of generated SensorEvents.\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the sensor.\",\n            \"example\": \"lamp.accelerometer\"\n          },\n          \"settings_schema\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/JSONSchema\"\n              },\n              {\n                \"description\": \"The settings definition of a SensorSpec.\",\n                \"example\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"frequency\": {\n                      \"title\": \"Sensor Collection Frequency\",\n                      \"type\": \"integer\",\n                      \"format\": \"int32\",\n                      \"minimum\": 0,\n                      \"maximum\": 10,\n                      \"description\": \"The sensor collection frequency of the mobile device's accelerometer/device motion sensor.\",\n                      \"example\": 5\n                    }\n                  }\n                }\n              }\n            ]\n          },\n          \"data_schema\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/JSONSchema\"\n              },\n              {\n                \"description\": \"The data definition of a SensorSpec.\",\n                \"example\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"x\": {\n                      \"title\": \"X Coordinate\",\n                      \"type\": \"number\",\n                      \"format\": \"double\",\n                      \"description\": \"The x coordinate of the accelerometer reading.\",\n                      \"example\": 1.123\n                    },\n                    \"y\": {\n                      \"title\": \"Y Coordinate\",\n                      \"type\": \"number\",\n                      \"format\": \"double\",\n                      \"description\": \"The y coordinate of the accelerometer reading.\",\n                      \"example\": 1.123\n                    },\n                    \"z\": {\n                      \"title\": \"Z Coordinate\",\n                      \"type\": \"number\",\n                      \"format\": \"double\",\n                      \"description\": \"The z coordinate of the accelerometer reading.\",\n                      \"example\": 1.123\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"Researcher\": {\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The self-referencing identifier to this object.\",\n            \"example\": \"2wp97csc3g57ptznhhkg\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the researcher.\",\n            \"example\": \"Harvard Psychiatry\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ]\n      },\n      \"Study\": {\n        \"type\": \"object\",\n        \"description\": \"\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The self-referencing identifier to this object.\",\n            \"example\": \"2wp97csc3g57ptznhhkg\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the study.\",\n            \"example\": \"Psychosis Study\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ]\n      },\n      \"Participant\": {\n        \"type\": \"object\",\n        \"description\": \"A participant within a study; a participant cannot be enrolled in more than one study at a time.\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The self-referencing identifier to this object.\",\n            \"example\": \"U1234567890\"\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"Activity\": {\n        \"type\": \"object\",\n        \"description\": \"An activity that may be performed by a participant in a study.\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The self-referencing identifier to this object.\",\n            \"example\": \"2wp97csc3g57ptznhhkg\"\n          },\n          \"spec\": {\n            \"type\": \"string\",\n            \"description\": \"The specification, parameters, and type of the activity.\",\n            \"example\": \"lamp.survey\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the activity.\",\n            \"example\": \"Mood Survey\"\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"description\": \"The configuration settings for the activity.\",\n            \"example\": {\n              \"questions\": [\n                {\n                  \"text\": \"What day is it today?\",\n                  \"description\": \"Please answer based on when you received the notification for this survey.\",\n                  \"type\": \"slider\",\n                  \"options\": [\n                    \"Sunday\",\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\",\n                    \"Friday\",\n                    \"Saturday\"\n                  ]\n                }\n              ]\n            }\n          },\n          \"schedule\": {\n            \"type\": \"array\",\n            \"description\": \"The notification schedule for the activity.\",\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"object\",\n                  \"description\": \"An advanced scheduling item.\",\n                  \"properties\": {\n                    \"start\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"description\": \"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.\"\n                    },\n                    \"interval\": {\n                      \"type\": \"array\",\n                      \"items\": {},\n                      \"description\": \"\"\n                    },\n                    \"repeat_count\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"description\": \"\"\n                    },\n                    \"end\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int64\",\n                      \"description\": \"The UNIX Epoch date-time representation: number of milliseconds since 1/1/1970 12:00 AM.\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"description\": \"A simplified scheduling item.\",\n                  \"properties\": {\n                    \"start_date\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"description\": \"The date after which this schedule should begin firing.\",\n                      \"example\": \"2020-10-28T20:50:12.000Z\"\n                    },\n                    \"time\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"description\": \"For certain `repeat_interval` types, specify the hour and minute of the day to fire.\",\n                      \"example\": \"2020-10-28T20:50:12.000Z\"\n                    },\n                    \"repeat_interval\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"hourly\",\n                        \"every3h\",\n                        \"every6h\",\n                        \"every12h\",\n                        \"daily\",\n                        \"biweekly\",\n                        \"triweekly\",\n                        \"weekly\",\n                        \"bimonthly\",\n                        \"monthly\",\n                        \"custom\",\n                        \"none\"\n                      ],\n                      \"description\": \"If set to `hourly`, `every3h`, `every6h`, or `every12h`, only the `time` parameter's minute field is used. If set to anything other than `custom` or `none`, the `time` parameter's hour and minute field are both used. The `biweekly` option refers to Tue/Thurs and `triweekly` option refers to Mon/Wed/Fri. The `bimonthly` option refers to twice a month. The `custom` option refers to only using the `custom_times` array, and the `none` option means to only trigger the schedule once.\",\n                      \"example\": \"every6h\"\n                    },\n                    \"custom_times\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"description\": \"A specific date-time to fire at.\",\n                        \"example\": \"2020-10-28T20:50:12.000Z\"\n                      },\n                      \"nullable\": true,\n                      \"description\": \"For `custom` schedules, specify a list of all specific date-times to fire at.\"\n                    }\n                  }\n                }\n              ]\n            },\n            \"example\": [\n              {\n                \"start_date\": \"2020-10-24T14:17:00.000Z\",\n                \"time\": \"2020-10-23T16:17:33.291Z\",\n                \"repeat_interval\": \"every3h\",\n                \"custom_time\": [\n                  \"2020-10-23T14:18:20.973Z\",\n                  \"2020-10-23T14:18:20.973Z\",\n                  \"2020-10-23T14:18:20.973Z\",\n                  \"2020-10-23T14:18:20.973Z\"\n                ]\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"spec\",\n          \"name\",\n          \"settings\",\n          \"schedule\"\n        ]\n      },\n      \"Sensor\": {\n        \"type\": \"object\",\n        \"description\": \"A sensor that may or may not be available on a physical device.\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"The self-referencing identifier to this object.\",\n            \"example\": \"2wp97csc3g57ptznhhkg\"\n          },\n          \"spec\": {\n            \"type\": \"string\",\n            \"description\": \"The specification, parameters, and type of the sensor.\",\n            \"example\": \"lamp.accelerometer\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the sensor.\",\n            \"example\": \"Accelerometer\"\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"description\": \"The configuration settings for the sensor.\",\n            \"example\": {\n              \"frequency\": 5\n            }\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"spec\",\n          \"name\",\n          \"settings\"\n        ]\n      },\n      \"ActivityEvent\": {\n        \"type\": \"object\",\n        \"description\": \"An event generated by the participant interacting with an `Activity`.\",\n        \"properties\": {\n          \"timestamp\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"The UNIX Epoch date-time representation of when this event was recorded: number of milliseconds since 1/1/1970 12:00 AM.\",\n            \"example\": 1605022000000\n          },\n          \"duration\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"The duration this event lasted before recording ended.\",\n            \"example\": 84123\n          },\n          \"activity\": {\n            \"type\": \"string\",\n            \"description\": \"The activity that produced this activity event.\",\n            \"example\": \"2wp97csc3g57ptznhhkg\"\n          },\n          \"static_data\": {\n            \"type\": \"object\",\n            \"description\": \"The summary information for the activity event as determined by the activity that created this activity event.\",\n            \"example\": {\n              \"assistance_required\": true,\n              \"mode\": \"expert\"\n            }\n          },\n          \"temporal_slices\": {\n            \"description\": \"The specific interaction details of the activity event.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"description\": \"A specific sub-detail of a `ActivityEvent` that contains specific  interaction information that comprises the parent `ActivityEvent`.\",\n              \"properties\": {\n                \"item\": {\n                  \"nullable\": true,\n                  \"description\": \"The item that was interacted with; for example, in a Jewels game, the  corresponding alphabet, or in a survey, the question index.\",\n                  \"example\": \"What day is it today?\"\n                },\n                \"value\": {\n                  \"nullable\": true,\n                  \"description\": \"The value of the item that was interacted with; in most games,  this field is  `null`, but in a survey, this field is the question  choice index.\",\n                  \"example\": 3\n                },\n                \"type\": {\n                  \"nullable\": true,\n                  \"description\": \"The type of interaction that for this detail; for example, in  a Jewels game,  `none` if the tapped jewel was  incorrect, or `correct` if it was correct, or in  a  survey, this field will be `null`.\",\n                  \"example\": \"correct\"\n                },\n                \"duration\": {\n                  \"nullable\": true,\n                  \"description\": \"The time difference from the previous detail or the  start of the parent result.\",\n                  \"example\": 84280\n                },\n                \"level\": {\n                  \"nullable\": true,\n                  \"description\": \"The level of activity for this detail; for example, in  games with multiple  levels, this field might be `2` or  `4`, but for surveys and other games this field  will be `null`.\",\n                  \"example\": 8\n                }\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"timestamp\",\n          \"activity\",\n          \"duration\",\n          \"static_data\",\n          \"temporal_slices\"\n        ]\n      },\n      \"SensorEvent\": {\n        \"type\": \"object\",\n        \"description\": \"An event generated by a participant interacting with the LAMP app.\",\n        \"properties\": {\n          \"timestamp\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"description\": \"The UNIX Epoch date-time representation of when this event was recorded: number of milliseconds since 1/1/1970 12:00 AM.\"\n          },\n          \"sensor\": {\n            \"type\": \"string\",\n            \"description\": \"The type of the sensor event.\",\n            \"example\": \"lamp.accelerometer\"\n          },\n          \"data\": {\n            \"type\": \"object\",\n            \"additionalProperties\": true,\n            \"description\": \"The item information recorded within the sensor event.\",\n            \"example\": {\n              \"x\": 0.1234,\n              \"y\": 1.2345,\n              \"z\": 2.3456\n            }\n          }\n        },\n        \"required\": [\n          \"timestamp\",\n          \"sensor\",\n          \"data\"\n        ]\n      },\n      \"Credential\": {\n        \"type\": \"object\",\n        \"description\": \"Every object can have one or more credential(s) associated with it. (i.e. `my_researcher.credentials = ['person A', 'person B', 'api A'', 'person C', 'api B']`)\",\n        \"properties\": {\n          \"origin\": {\n            \"type\": \"string\",\n            \"description\": \"The root object this credential is attached to. The scope of this credential is limited to the object itself and any children.\",\n            \"example\": \"U1234567890\"\n          },\n          \"access_key\": {\n            \"type\": \"string\",\n            \"description\": \"Username or machine-readable public key (access).\",\n            \"example\": \"my_email@address.com\"\n          },\n          \"secret_key\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"writeOnly\": true,\n            \"description\": \"SALTED HASH OF Password or machine-readable private key (secret).\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"The user-visible description of the credential.\",\n            \"example\": \"Firstname Lastname\"\n          }\n        },\n        \"required\": [\n          \"origin\",\n          \"access_key\",\n          \"secret_key\",\n          \"description\"\n        ]\n      }\n    },\n    \"securitySchemes\": {\n      \"Authorization\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/BIDMCDigitalPsychiatry/LAMP-server@be23725a89fe65dc938e655a56666e071966f67e/-/blob/src/utils/OpenAPISchema.json",
			"externalURLs": [
				{
					"url": "https://github.com/BIDMCDigitalPsychiatry/LAMP-server/blob/be23725a89fe65dc938e655a56666e071966f67e/src/utils/OpenAPISchema.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ActivitySpec\": resolve \"#/components/schemas/ActivitySpec\": property \"static_data\": allOf: $ref: resolve \"#/components/schemas/JSONSchema\": property \"items\": at src/utils/OpenAPISchema.json:6458:24: parse default: unexpected type: \"\""
}