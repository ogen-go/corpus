{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "asana-1.json",
			"size": 0,
			"path": "schemas/openapi3/asana-1.json",
			"byteSize": 551170,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Asana\",\n    \"description\": \"Work anytime, anywhere with Asana. Keep remote and distributed teams, and your entire organization, focused on their goals, projects, and tasks with Asana.\",\n    \"x-categories\": [\"project-management\", \"productivity\"],\n    \"x-logo\": {\n      \"url\": \"https://raw.githubusercontent.com/chainjet/assets/master/integrations/asana.svg\"\n    },\n    \"termsOfService\": \"https://asana.com/terms\",\n    \"contact\": { \"name\": \"Asana Support\", \"url\": \"https://asana.com/support\" },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0\"\n    },\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    { \"url\": \"https://app.asana.com/api/1.0\", \"description\": \"Main endpoint.\" }\n  ],\n  \"security\": [{ \"personalAccessToken\": [] }, { \"oauth2\": [] }],\n  \"tags\": [\n    {\n      \"name\": \"Attachments\",\n      \"description\": \"An *attachment* object represents any file attached to a task in Asana, whether it’s an uploaded file or one associated via a third-party service such as Dropbox or Google Drive.\"\n    },\n    {\n      \"name\": \"Batch API\",\n      \"description\": \"There are many cases where you want to accomplish a variety of work in the Asana API but want to minimize the number of HTTP requests you make. For example:\\n\\n* Modern browsers limit the number of requests that a single web page can\\n  make at once.\\n* Mobile apps will use more battery life to keep the cellular radio on\\n  when making a series of requests.\\n* There is an overhead cost to developing software that can make multiple\\n  requests in parallel.\\n* Some cloud platforms handle parallelism poorly, or disallow it\\n  entirely.\\n\\n\\nTo make development easier in these use cases, Asana provides a **batch API** that enables developers to perform multiple “actions” by making only a single HTTP request.\\n\\n#### Making a Batch Request\\n\\nTo make a batch request, send a `POST` request to `/batch`. Like other `POST` endpoints, the body should contain a `data` envelope. Inside this envelope should be a single `actions` field, containing a list of “action” objects.  Each action represents a standard request to an existing endpoint in the Asana API.\\n\\n**The maximum number of actions allowed in a single batch request is 10**. Making a batch request with no actions in it will result in a `400 Bad Request`.\\n\\nWhen the batch API receives the list of actions to execute, it will dispatch those actions to the already-implemented endpoints specified by the `relative_path` and `method` for each action. This happens in parallel, so all actions in the request will be processed simultaneously. There is no guarantee of the execution order for these actions, nor is there a way to use the output of one action as the input of another action (such as creating a task and then commenting on it).\\n\\nThe response to the batch request will contain (within the `data` envelope) a list of result objects, one for each action. The results are guaranteed to be in the same order as the actions in the request, e.g., the first result in the response corresponds to the first action in the request.\\n\\nThe batch API will always attempt to return a `200 Success` response with individual result objects for each individual action in the request. Only in certain cases (such as missing authorization or malformed JSON in the body) will the entire request fail with another status code. Even if every individual action in the request fails, the batch API will still return a `200 Success` response, and each result object in the response will contain the errors encountered with each action.\\n\\n#### Rate Limiting\\n\\nThe batch API fully respects all of our rate limiting. This means that a batch request counts against *both* the standard rate limiter and the concurrent request limiter as though you had made a separate HTTP request for every individual action. For example, a batch request with five actions counts as five separate requests in the standard rate limiter, and counts as five concurrent requests in the concurrent request limiter. The batch request itself incurs no cost.\\n\\nIf any of the actions in a batch request would exceed any of the enforced limits, the *entire* request will fail with a `429 Too Many Requests` error. This is to prevent the unpredictability of which actions might succeed if not all of them could succeed.\\n\\n#### Restrictions\\n\\nNot every endpoint can be accessed through the batch API. Specifically, the following actions cannot be taken and will result in a `400 Bad Request` for that action:\\n\\n* Uploading attachments\\n* Creating, getting, or deleting organization exports\\n* Any SCIM operations\\n* Nested calls to the batch API\"\n    },\n    {\n      \"name\": \"Custom Fields\",\n      \"description\": \"In the Asana application, Tasks, Projects, and Portfolios can hold user-specified Custom Fields which provide extra information; for example, a priority value or a number representing the time required to complete a Task. This lets a user define the type of information that each Item within a Project or Portfolio can contain in addition to the built-in fields that Asana provides.\\n\\n**Note:** Custom Fields are a premium feature. Integrations which work with Custom Fields need to handle an assortment of use cases for free and premium users in context of free and premium organizations. For a detailed examination of to what data users will have access in different circumstances, read the section below on access control.\\n\\nThe characteristics of Custom Fields are:\\n\\n* There is metadata that defines the Custom Field. This metadata can be shared across an entire workspace, or be specific to a Project or Portfolio.\\n* Creating a Custom Field Setting on a Project or Portfolio means each direct child will have the custom field. This is conceptually akin to adding columns in a database or a spreadsheet: every Task (row) in the Project (table) can contain information for that field, including \\\"blank\\\" values, i.e. `null` data. For Portfolio custom fields, every Project (row) in the Portfolio (table) will contain information for the custom field.\\n* Custom Field Settings only go one child deep. Meaning a custom field setting on a portfolio will give each project the custom field, but not each task within those projects.\\n* Tasks have Custom Field _values_ assigned to them.\\n\\nA brief example: let's imagine that an organization has defined a Custom Field for \\\"Priority\\\". This field is of `enum` type and can have user-defined values of `Low`, `Medium`, or `High`. This is the field metadata, and it is visible within, and shared across, the entire organization.\\n\\nA Project is then created in the organization, called \\\"Bugs\\\", and the \\\"Priority\\\" Custom Field is associated with that Project. This will allow all Tasks within the \\\"Bugs\\\" Project to have an associated \\\"Priority\\\".\\n\\nA new Task is created within \\\"Bugs\\\". This Task, then, has a field named \\\"Priority\\\" which can take on the Custom Field value of one of `[null]`, `Low`, `Medium`, and `High`.\\n\\nThese Custom Fields are accessible via the API through a number of endpoints at the top level (e.g. `/custom_fields` and `/custom_field_settings`) and through calls on Workspaces, Portfolios, Projects, and Tasks resources. The API also provides a way to fetch both the metadata and data which define each particular Custom Field, so that a client application may render proper UI to display or edit the values.\\n\\nCustom Field aware integrations need to be aware of the basic types that Custom Fields can adopt. These types are:\\n\\n* `text` - an arbitrary, relatively short string of text\\n* `number` - a number with a defined level of precision\\n* `enum` - a selection from a defined list of options\\n\\nText fields are currently limited to 1024 characters. On Tasks, their Custom Field value will have a `text_value` property to represent this field.\\n\\nNumber fields can have an arbitrary `precision` associated with them; for example, a precision of `2` would round its value to the second (hundredths) place, i.e. 1.2345 would round to 1.23. On Tasks, the Custom Field value will have a `number_value` property to represent this field.\\n\\nEnum fields represent a selection from a list of options. On the metadata, they will contain all of the options in an array. Each option has 4 properties:\\n\\n* `gid` - the gid of this enum option. Note that this is the gid of the _option_ - the Custom Field itself has a separate `gid`.\\n* `name` - the name of the option, e.g. \\\"Choice #1\\\"\\n* `enabled` - whether this field is enabled. Disabled fields are not available to choose from when disabled, and are visually hidden in the Asana application, but they remain in the metadata for Custom Field values which were set to the option before the option was disabled.\\n* `color` - a color associated with this choice.\\n\\nOn the Task's Custom Field value, the enum will have an `enum_value` property which will be the same as one of the choices from the list defined in the Custom Field metadata.\\n\\n#### Querying an organization for its Custom Fields\\n\\nFor Custom Fields shared across the workspace or organization, the Workspace [can be queried](/docs/get-a-workspace-39-s-custom-fields) for its list of defined Custom Fields. Like other collection queries, the fields will be returned as a compact record; slightly different from most other compact records is the fact that the compact record for Custom Fields includes `type` as well as `gid` and `name`.\\n\\n#### Accessing Custom Field definitions\\n\\nThe [Custom Fields](/docs/get-a-custom-field) reference describes how the metadata which defines a Custom Field is accessed. A GET request with a `gid` can be issued on the `/custom_fields` endpoint to fetch the full definition of a single Custom Field given its `gid` from (for instance) listing all Custom Fields on a Workspace, or getting the `gid` from a Custom Field Settings object or a Task.\\n\\n#### Associating Custom Fields with a Project or Portfolio\\n\\nA mapping between a Custom Field and a Project or Portfolio is handled with a [Custom Field Settings](/docs/asana-custom-field-settings) object. This object contains a reference for each of the Custom Field and the Project or Porfolio, as well as additional information about the status of that particular Custom Field. For instance, `is_important`, which defines whether or not the custom field will appear in the list/grid on the Asana application.\\n\\n#### Accessing Custom Field values on Tasks or Projects\\n\\nThe [Tasks](/docs/get-a-task) reference has information on how Custom Fields look on Tasks. Custom Fields will return as an array on the property `custom_fields`, and each entry will contain, side-by-side, the compact representation of the Custom Field metadata and a `{typename}_value` property that stores the value set for the Custom Field.\\n\\nOf particular note is that the top-level `gid` of each entry in the `custom_fields` array is the `gid` of the Custom Field metadata, as it is the compact representation of this metadata. This can be used to refer to the full metadata by making a request to the `/custom_fields/{custom_fields_id}` endpoint as described above.\\n\\nCustom Fields can be set just as in the Asana-defined fields on a task via POST or PUT requests. You can see an example on the [update a task](/docs/update-a-task) endpoint.\\n\\nCustom Fields on projects follow this same pattern.\\n\\n#### Warning: Program defensively with regards to Custom Field definitions\\n\\nAsana application users have the ability to change the definitions of Custom Field metadata. This means that as you write scripts or applications to work with them, it's possible for the definitions to change at any time, which may cause an application using them to break or malfunction if it makes assumptions about the metadata for a particular Custom Field. When using Custom Fields, it is a good idea to program *defensively*, meaning you your application should double-check that the Custom Field metadata is what it expects.\\n\\nStoring the state of the Custom Field metadata for too long if you dynamically create a model for it can cause your model to become unsynchronized with the model stored in Asana. If you encounter (for example) an `enum` value on a Task that does not match any option in your metadata model, your metadata model has become out of date with the Custom Field metadata.\\n\\n**Note:** We are currently studying proposals for future implementations to more elegantly handle the modification of Custom Field metadata for application integrations.\\n\\n#### Enabled and Disabled Values\\n\\nWhen information that is contained in a Custom Field value loses a logical association with its metadata definition, the value becomes disabled. This can happen in a couple of simple ways, for example, if you remove the Custom Field metadata from a Project, or move a Task with a Custom Field to a different Project which does not have the Custom Field metadata associated with it. The value remains on the Task, and the Custom Field metadata can still be found and examined, but as the context in which the Custom Field makes sense is gone, the Custom Field cannot change its value; it can only be cleared.\\n\\nNote: Tasks that are associated with multiple Projects do not become disabled, so long as at least one of the Projects is still associated with the Custom Field metadata. In other words, Tasks with multiple Projects will retain logically associated to the set of Custom Field metadata represented by all of their Projects.\\n\\nMoving the Task back under a Project with that Custom Field applied to it or applying the Custom Field metadata to the current Project will return the Custom Field value to an enabled state. In this scenario, the Custom Field will be re-enabled and editable again.\\n\\nIn the Asana application, disabled fields are grayed out and not allowed to change, other than to be discarded. In the API, we return a property `enabled: false` to inform the external application that the value has been disabled.\\n\\nNote that the API enforces the same operations on disabled Custom Field values as hold in the Asana application: they may not have their values changed, since the lack of context for the values of a custom field in general doesn't provide enough information to know what new values should be. Setting the Custom Field value to `null` will clear and remove the Custom Field value from the Task.\\n\\n#### Custom Field access control\\n\\nCustom Fields are a complex feature of the Asana platform, and their access in the Asana application and in the API vary based on the status of the user and project. When building your application, it's best to be defensive and not assume the given user will have read or write access to a custom field, and fail gracefully when this occurs.\"\n    },\n    {\n      \"name\": \"Custom Field Settings\",\n      \"description\": \"Custom fields are attached to a particular project with the Custom Field Settings resource. This resource both represents the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing; for instance, the `is_important` property determines some possible application-specific handling of that custom field.\"\n    },\n    {\n      \"name\": \"Events\",\n      \"description\": \"An *event* is an object representing a change to a resource that was observed by an event subscription.\\n\\nIn general, requesting events on a resource is faster and subject to higher rate limits than requesting the resource itself. Additionally, change events bubble up - listening to events on a project would include when stories are added to tasks in the project, even on subtasks.\\n\\nEstablish an initial sync token by making a request with no sync token. The response will be a `412` error - the same as if the sync token had expired.\\n\\nSubsequent requests should always provide the sync token from the immediately preceding call.\\n\\nSync tokens may not be valid if you attempt to go ‘backward’ in the history by requesting previous tokens, though re-requesting the current sync token is generally safe, and will always return the same results.\\n\\nWhen you receive a `412 Precondition Failed` error, it means that the sync token is either invalid or expired. If you are attempting to keep a set of data in sync, this signals you may need to re-crawl the data.\\n\\nSync tokens always expire after 24 hours, but may expire sooner, depending on load on the service.\"\n    },\n    {\n      \"name\": \"Jobs\",\n      \"description\": \"Jobs represent processes that handle asynchronous work.\\nJobs are created when an endpoint requests an action that will be handled asynchronously. Such as project or task duplication.\\nOnly the creator of the duplication process can access the duplication status of the new object.\"\n    },\n    {\n      \"name\": \"Organization Exports\",\n      \"description\": \"An *organization_export* object represents a request to export the complete data of an Organization in JSON format.\\n\\nTo export an Organization using this API:\\n\\n* Create an `organization_export`\\n  [request](/docs/create-an-organization-export-request)\\n  and store the id that is returned.\\n* Request the `organization_export` every few minutes, until the\\n  `state` field contains ‘finished’.\\n* Download the file located at the URL in the `download_url` field. * Exports can take a long time, from several minutes to a few hours\\n  for large Organizations.\\n\\n\\n*Note: These endpoints are only available to [Service Accounts](https://asana.com/guide/help/premium/service-accounts) of an [Enterprise](https://asana.com/enterprise) Organization.*\"\n    },\n    {\n      \"name\": \"Portfolios\",\n      \"description\": \"A 'portfolio' gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/docs/asana-project-statuses) update.\\nPortfolios have some restrictions on size. Each portfolio has a max of 250 items and, like projects, a max of 20 custom fields.\"\n    },\n    {\n      \"name\": \"Portfolio Memberships\",\n      \"description\": \"This object determines if a user is a member of a portfolio.\"\n    },\n    {\n      \"name\": \"Projects\",\n      \"description\": \"A `project` represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.\\n\\nProjects in organizations are shared with a single team. You cannot currently change the team of a project via the API. Non-organization workspaces do not have teams and so you should not specify the team of project in a regular workspace.\\n\\nFollowers of a project are a subset of the members of that project. Followers of a project will receive all updates including tasks created, added and removed from that project. Members of the project have access to and will receive status updates of the project. Adding followers to a project will add them as members if they are not already, removing followers from a project will not affect membership.\"\n    },\n    {\n      \"name\": \"Project Memberships\",\n      \"description\": \"With the introduction of “comment-only” projects in Asana, a user’s membership in a project comes with associated permissions. These permissions (whether a user has full access to the project or comment-only access) are accessible through the project memberships endpoints described here.\"\n    },\n    {\n      \"name\": \"Project Statuses\",\n      \"description\": \"A *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: “green” for projects that are on track, “yellow” for projects at risk, and “red” for projects that are behind.\\n\\nProject statuses can be created and deleted, but not modified.\"\n    },\n    {\n      \"name\": \"Sections\",\n      \"description\": \"A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.\\n\\nSections are largely a shared idiom in Asana’s API for both list and board views of a project regardless of the project’s layout.\\n\\nThe ‘memberships’ property when [getting a task](/docs/get-a-task) will return the information for the section or the column under ‘section’ in the response.\"\n    },\n    {\n      \"name\": \"Stories\",\n      \"description\": \"*See [our forum post](https://forum.asana.com/t/no-more-parsing-story-text-new-fields-on-stories/42924) for more info on when conditional fields are returned.*\\n\\nA *story* represents an activity associated with an object in the Asana system. Stories are generated by the system whenever users take actions such as creating or assigning tasks, or moving tasks between projects. *Comments* are also a form of user-generated story.\"\n    },\n    {\n      \"name\": \"Tags\",\n      \"description\": \"A tag is a label that can be attached to any task in Asana. It exists in a single workspace or organization.\\n\\nTags have some metadata associated with them, but it is possible that we will simplify them in the future so it is not encouraged to rely too heavily on it. Unlike projects, tags do not provide any ordering on the tasks they are associated with.\"\n    },\n    {\n      \"name\": \"Tasks\",\n      \"description\": \"The task is the basic object around which many operations in Asana are centered. In the Asana application, multiple tasks populate the middle pane according to some view parameters, and the set of selected tasks determines the more detailed information presented in the details pane.\\n\\nSections are unique in that they will be included in the *memberships* field of task objects returned in the API when the task is within a section. They can also be used to manipulate the ordering of a task within a project.\\n\\n[Queries](/docs/get-a-set-of-tasks) return a compact representation of each object which is typically the id and name fields. Interested in a specific set of fields or all of the fields? Use [field selectors](/docs/input-output-options) to manipulate what data is included in a response.\"\n    },\n    {\n      \"name\": \"Teams\",\n      \"description\": \"A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.\"\n    },\n    {\n      \"name\": \"Team Memberships\",\n      \"description\": \"This object determines if a user is a member of a team.\"\n    },\n    {\n      \"name\": \"Typeahead\",\n      \"description\": \"The typeahead search API provides search for objects from a single workspace.\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"A user object represents an account in Asana that can be given access to various workspaces, projects, and tasks.\\n\\nLike other objects in the system, users are referred to by numerical IDs. However, the special string identifier `me` can be used anywhere a user ID is accepted, to refer to the current authenticated user.\"\n    },\n    {\n      \"name\": \"User Task Lists\",\n      \"description\": \"A user task list represents the tasks assigned to a particular user.\\n\\nA user’s “My Tasks” represent all of the tasks assigned to that user. It is visually divided into regions based on the task’s [`assignee_status`](/docs/tocS_Task) for Asana users to triage their tasks based on when they can address them. When building an integration it’s worth noting that tasks with due dates will automatically move through `assignee_status` states as their due dates approach; read up on [task auto-promotion](https://asana.com/guide/help/fundamentals/my-tasks#gl-auto-promote) for more information.\"\n    },\n    {\n      \"name\": \"Webhooks\",\n      \"description\": \"Webhooks allow an application to be notified of changes in Asana. They are intended to provide an efficient way for integrations which react to changes of state in Asana to take action only when something has actually changed.\\n\\nThis is similar to our [Events](/docs/asana-events) resource, but webhooks \\\"push\\\" events via HTTP `POST` rather than expecting integrations to repeatedly \\\"poll\\\" for them. For services that are already accessible on the Internet this is often more convenient and efficient.\\n\\nHowever, webhooks _require_ a server to be accessible over the internet at all times to receive the event. For most simple integrations, Events provide much of the same benefits while using a significantly simpler implementation which does not require maintaining an internet-accessible server.\\n\\n#### The webhook \\\"handshake\\\"\\nIn order to ensure that the receiving server is available to receive incoming events from a webhook Asana will `POST` to the requested target endpoint during the webhook creation request. In other words, the outgoing webhook creation request will wait to return until another full `POST` request from Asana's servers to the target has been completed, *then* the webhook creation request can return with a successful response.\\n\\n*Note: this means that your server must be able to handle being blocked on the outgoing create request while still being able to receive and handle an incoming request. A common reason that webhook handshakes fail is that servers are not able to asynchronously handle the handshake request.*\\n\\nIncluded in the webhook handshake is a HTTP header called `X-Hook-Secret`.  To successfully complete the handshake the receiving server should echo back the same header with the same value and a `200 OK` or `204 No Content` response code.\\n\\nThe purpose of this header is to provide a shared secret that both Asana and the receiving server both store--this is the only time it will be transmitted. In future webhook events Asana will use this key to compute a signature over the webhook callback request's body which can be used to verify that the incoming request was genuine (details below). We strongly recommend that you take advantage of this security feature and reject webhooks that have an invalid signature.\\n\\n#### Receiving Events\\n\\nBecause multiple events often happen in short succession, a webhook payload is designed to be able to transmit multiple events at once. The schema of these events is described in [Event](/docs/tocS_Event).\\n\\nThe HTTP POST that the target receives contains:\\n\\n\\n * An `X-Hook-Signature` header, which allows verifying that the payload\\n is genuine.  The signature is a SHA256 HMAC signature computed on the\\n request body using the shared secret transmitted during the handshake.\\n Verification is **strongly recommended**, as it would otherwise be\\n possible for an attacker to POST a malicious payload to the same\\n endpoint.\\n * A JSON body with a single key, `events`, containing an array of the\\n events that have occurred since the last webhook delivery. (Note that this\\n list may be empty, as periodically we send a \\\"heartbeat\\\" webhook to\\n verify that the endpoint is still available.)\\n\\n\\nNote that events are \\\"skinny\\\" and contain only some basic details of the change, not the whole resource. We expect integrations to make additional calls to the API to retrieve the latest state from Asana.\\n\\n#### Filtering\\nWebhook events will \\\"propagate up\\\" from contained objects through to parent objects--for instance, changes to comments will be sent to webhooks on the parent task and to ones on the task's projects. In this way a webhook on a project will be notified of all changes that occur in all of its tasks, subtasks of those tasks, and comments on those tasks and subtasks.\\n\\nThis can be a lot of data, some of which might not be relevant to a particular integration, so Asana's webhooks have a filtering feature which allows integrations to specify only the types of changes that they care about. By specifying the list of [WebhookFilter](/docs/tocS_WebhookFilter)s on webhook creation an integration can select just the subset of events it wants to receive.  When filters are specified on the webhook events will only be delivered if they pass any of the filters specified when creating the webhook.\\n\\nTo reduce the volume of data to transfer, webhooks created on teams, portfolios, and workspaces *must* specify filters. In addition, the set of event filters that can be placed on a team-level or workspace-level webhook is more limited than filters for webhooks that are created on lower-level resources:\\n\\n\\n * Webhook events from tasks, subtasks, and stories won't be propagated\\n to these higher-level webhooks, so all changes on these resources are\\n automatically filtered out.\\n * Webhook events from `project` resources can be filtered for these\\n `action`s: `added`, `removed`, `deleted`, `undeleted`, and `changed`.\\n * Webhook events from `team_membership` resources can be filtered to\\n `action`s `added` and `removed`.\\n * Webhook events from `workspace_membership` resources can be filtered\\n to `added` and `removed`.\\n\\n\\n#### Error Handling and Retry\\n\\nIf we attempt to send a webhook payload and we receive an error status code, or the request times out, we will retry delivery with exponential backoff. In general, if your servers are not available for an hour, you can expect it to take no longer than approximately an hour after they come back before the paused delivery resumes. However, if we are unable to deliver a message for 24 hours the webhook will be deactivated.\\n#### Resources and Actions\\nThis is not an exhaustive list, but should cover the most common use cases.\\n\\n\\n * Attachment - deleted, undeleted\\n * Portfolio - added, deleted, removed\\n * Project - added, changed, deleted, removed, undeleted\\n * Project Membership - added, removed\\n * Section - added, changed, deleted, undeleted\\n * Story - added, removed, undeleted\\n * Tag - added, changed, deleted, undeleted\\n * Task - added, changed, deleted, removed, undeleted\\n * Team - added, changed, deleted\\n * Team Membership - added, removed\\n * Workspace - added, removed, changed\\n * Workspace Memberships - added, removed\"\n    },\n    {\n      \"name\": \"Workspaces\",\n      \"description\": \"A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.\\n\\nAn *organization* is a special kind of workspace that represents a company. In an organization, you can group your projects into teams. You can read more about how organizations work on the Asana Guide. To tell if your workspace is an organization or not, check its `is_organization` property.\\n\\nOver time, we intend to migrate most workspaces into organizations and to release more organization-specific functionality. We may eventually deprecate using workspace-based APIs for organizations. Currently, and until after some reasonable grace period following any further announcements, you can still reference organizations in any `workspace` parameter.\"\n    },\n    {\n      \"name\": \"Workspace Memberships\",\n      \"description\": \"This object determines if a user is a member of a workspace.\"\n    },\n    {\n      \"name\": \"Typeahead\",\n      \"description\": \"The typeahead search API provides search for objects from a single workspace.\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"A user object represents an account in Asana that can be given access to various workspaces, projects, and tasks.\\n\\nLike other objects in the system, users are referred to by numerical IDs. However, the special string identifier `me` can be used anywhere a user ID is accepted, to refer to the current authenticated user.\"\n    },\n    {\n      \"name\": \"User Task Lists\",\n      \"description\": \"A user task list represents the tasks assigned to a particular user.\"\n    },\n    {\n      \"name\": \"Webhooks\",\n      \"description\": \"Webhooks allow you to subscribe to notifications about events that occur on Asana resources (e.g., tasks, projects, stories, etc.)\\n\\nFor a more detailed explanation of webhooks see [Overview of Webhooks](/docs/overview-of-webhooks)\"\n    },\n    {\n      \"name\": \"Workspaces\",\n      \"description\": \"A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.\\n\\nAn *organization* is a special kind of workspace that represents a company. In an organization, you can group your projects into teams. You can read more about how organizations work on the Asana Guide. To tell if your workspace is an organization or not, check its `is_organization` property.\\n\\nOver time, we intend to migrate most workspaces into organizations and to release more organization-specific functionality. We may eventually deprecate using workspace-based APIs for organizations. Currently, and until after some reasonable grace period following any further announcements, you can still reference organizations in any `workspace` parameter.\"\n    },\n    {\n      \"name\": \"Workspace Memberships\",\n      \"description\": \"This object determines if a user is a member of a workspace.\"\n    },\n    {\n      \"name\": \"Workspace Memberships\",\n      \"description\": \"This object determines if a user is a member of a workspace.\"\n    }\n  ],\n  \"components\": {\n    \"parameters\": {\n      \"fields\": {\n        \"name\": \"opt_fields\",\n        \"in\": \"query\",\n        \"description\": \"Defines fields to return.\\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\\nThe id of included objects will always be returned, regardless of the field options.\",\n        \"example\": [\"followers\", \"assignee\"],\n        \"required\": false,\n        \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n        \"style\": \"form\",\n        \"explode\": false\n      },\n      \"pretty\": {\n        \"name\": \"opt_pretty\",\n        \"in\": \"query\",\n        \"description\": \"Provides “pretty” output.\\nProvides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.\",\n        \"required\": false,\n        \"allowEmptyValue\": true,\n        \"schema\": { \"type\": \"boolean\" },\n        \"style\": \"form\",\n        \"example\": true\n      },\n      \"limit\": {\n        \"name\": \"limit\",\n        \"in\": \"query\",\n        \"description\": \"Results per page.\\nThe number of objects to return per page. The value must be between 1 and 100.\",\n        \"example\": 50,\n        \"schema\": { \"type\": \"integer\" }\n      },\n      \"offset\": {\n        \"name\": \"offset\",\n        \"in\": \"query\",\n        \"description\": \"Offset token.\\nAn offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results.\\n'Note: You can only pass in an offset that was returned to you via a previously paginated request.'\",\n        \"example\": \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\",\n        \"schema\": { \"type\": \"string\" }\n      },\n      \"archived_query_param\": {\n        \"name\": \"archived\",\n        \"in\": \"query\",\n        \"description\": \"Only return projects whose `archived` field takes on the value of this parameter.\",\n        \"schema\": { \"type\": \"boolean\" },\n        \"example\": false\n      },\n      \"attachment_path_gid\": {\n        \"name\": \"attachment_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the attachment.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"custom_field_path_gid\": {\n        \"name\": \"custom_field_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the custom field.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"job_path_gid\": {\n        \"name\": \"job_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the job.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"organization_export_path_gid\": {\n        \"name\": \"organization_export_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the organization export.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"project_path_gid\": {\n        \"name\": \"project_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the project.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"1331\"\n      },\n      \"project_membership_path_gid\": {\n        \"name\": \"project_membership_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"1331\"\n      },\n      \"project_status_path_gid\": {\n        \"name\": \"project_status_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"The project status update to get.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"321654\"\n      },\n      \"portfolio_path_gid\": {\n        \"name\": \"portfolio_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the portfolio.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"portfolio_membership_path_gid\": {\n        \"name\": \"portfolio_membership_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"1331\"\n      },\n      \"portfolio_query_param\": {\n        \"name\": \"portfolio\",\n        \"in\": \"query\",\n        \"description\": \"The portfolio to filter results on.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"section_path_gid\": {\n        \"name\": \"section_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"The globally unique identifier for the section.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"321654\"\n      },\n      \"story_path_gid\": {\n        \"name\": \"story_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the story.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"35678\"\n      },\n      \"tag_path_gid\": {\n        \"name\": \"tag_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the tag.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"11235\"\n      },\n      \"task_path_gid\": {\n        \"name\": \"task_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"The task to operate on.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"321654\"\n      },\n      \"team_path_gid\": {\n        \"name\": \"team_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the team.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"159874\"\n      },\n      \"team_membership_path_gid\": {\n        \"name\": \"team_membership_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"724362\"\n      },\n      \"user_query_param\": {\n        \"name\": \"user\",\n        \"in\": \"query\",\n        \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"me\"\n      },\n      \"user_path_gid\": {\n        \"name\": \"user_gid\",\n        \"in\": \"path\",\n        \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"me\"\n      },\n      \"user_task_list_path_gid\": {\n        \"name\": \"user_task_list_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the user task list.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"webhook_path_gid\": {\n        \"name\": \"webhook_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the webhook.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"workspace_path_gid\": {\n        \"name\": \"workspace_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the workspace or organization.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"workspace_query_param\": {\n        \"name\": \"workspace\",\n        \"in\": \"query\",\n        \"description\": \"The workspace to filter results on.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"workspace_membership_path_gid\": {\n        \"name\": \"workspace_membership_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"goal_path_gid\": {\n        \"name\": \"goal_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the goal.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"project_brief_path_gid\": {\n        \"name\": \"project_brief_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the project brief.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      },\n      \"project_template_path_gid\": {\n        \"name\": \"project_template_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the project template.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"1331\"\n      },\n      \"status_path_gid\": {\n        \"name\": \"status_gid\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"description\": \"The status update to get.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"321654\"\n      },\n      \"team_query_param\": {\n        \"name\": \"team\",\n        \"in\": \"query\",\n        \"description\": \"The team to filter projects on.\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"14916\"\n      },\n      \"time_period_path_gid\": {\n        \"name\": \"time_period_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the time period.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"917392\"\n      },\n      \"audit_log_start_at\": {\n        \"name\": \"start_at\",\n        \"in\": \"query\",\n        \"description\": \"Filter to events created after this time (inclusive).\",\n        \"required\": false,\n        \"schema\": { \"type\": \"string\", \"format\": \"date-time\" }\n      },\n      \"audit_log_end_at\": {\n        \"name\": \"end_at\",\n        \"in\": \"query\",\n        \"description\": \"Filter to events created before this time (exclusive).\",\n        \"required\": false,\n        \"schema\": { \"type\": \"string\", \"format\": \"date-time\" }\n      },\n      \"audit_log_event_type\": {\n        \"name\": \"event_type\",\n        \"in\": \"query\",\n        \"description\": \"Filter to events of this type.\\nRefer to the [Supported AuditLogEvents](/docs/supported-auditlogevents) for a full list of values.\",\n        \"required\": false,\n        \"schema\": { \"type\": \"string\" }\n      },\n      \"audit_log_actor_type\": {\n        \"name\": \"actor_type\",\n        \"in\": \"query\",\n        \"description\": \"Filter to events with an actor of this type.\\nThis only needs to be included if querying for actor types without an ID. If `actor_gid` is included, this should be excluded.\",\n        \"required\": false,\n        \"schema\": {\n          \"type\": \"string\",\n          \"enum\": [\n            \"user\",\n            \"asana\",\n            \"asana_support\",\n            \"anonymous\",\n            \"external_administrator\"\n          ]\n        }\n      },\n      \"audit_log_actor_gid\": {\n        \"name\": \"actor_gid\",\n        \"in\": \"query\",\n        \"description\": \"Filter to events triggered by the actor with this ID.\",\n        \"required\": false,\n        \"schema\": { \"type\": \"string\" }\n      },\n      \"audit_log_resource_gid\": {\n        \"name\": \"resource_gid\",\n        \"in\": \"query\",\n        \"description\": \"Filter to events with this resource ID.\",\n        \"required\": false,\n        \"schema\": { \"type\": \"string\" }\n      },\n      \"completed_since\": {\n        \"name\": \"completed_since\",\n        \"in\": \"query\",\n        \"required\": false,\n        \"description\": \"Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword *now*.\\n\",\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"2012-02-22T02:06:58.158Z\"\n      },\n      \"goal_relationship_path_gid\": {\n        \"name\": \"goal_relationship_gid\",\n        \"in\": \"path\",\n        \"description\": \"Globally unique identifier for the goal relationship.\",\n        \"required\": true,\n        \"schema\": { \"type\": \"string\" },\n        \"example\": \"12345\"\n      }\n    },\n    \"responses\": {\n      \"BadRequest\": {\n        \"description\": \"This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"Unauthorized\": {\n        \"description\": \"A valid authentication token was not provided with the request, so the API could not associate a user with the request.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"PaymentRequired\": {\n        \"description\": \"The request was valid, but the queried object or object mutation specified in the request is above your current premium level.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"Forbidden\": {\n        \"description\": \"The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"NotFound\": {\n        \"description\": \"Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"TooManyRequests\": {\n        \"description\": \"You have exceeded one of the enforced rate limits in the API. See the [documentation on rate limiting](https://developers.asana.com/docs/#rate-limits) for more information.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"InternalServerError\": {\n        \"description\": \"There was a problem on Asana’s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"BadGateway\": {\n        \"description\": \"There is an issue between the load balancers and Asana's API.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"ServiceUnavailable\": {\n        \"description\": \"Either the upstream service is unavailable to the API, or he API has been intentionally shut off.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      },\n      \"GatewayTimeout\": {\n        \"description\": \"This request took too long to complete.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": { \"$ref\": \"#/components/schemas/ErrorResponse\" }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"AsanaResource\": {\n        \"description\": \"A generic Asana Resource, containing a globally unique identifier.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"gid\": {\n            \"description\": \"Globally unique identifier of the resource, as a string.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"12345\"\n          },\n          \"resource_type\": {\n            \"description\": \"The base type of this resource.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"task\"\n          }\n        }\n      },\n      \"AsanaNamedResource\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the object.\",\n                \"type\": \"string\",\n                \"example\": \"Bug Task\"\n              }\n            }\n          }\n        ]\n      },\n      \"AttachmentRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"file\": {\n            \"type\": \"string\",\n            \"format\": \"binary\",\n            \"description\": \"Required for `asana` attachments.\\n\"\n          },\n          \"resource_subtype\": {\n            \"description\": \"The type of the attachment. Must be one of the [given values](/docs/attachment). If not specified, a file attachment of type `asana` will be assumed. Note that if the value of `resource_subtype` is `external`, a `parent`, `name`, and `url` must also be provided.\\n\",\n            \"type\": \"string\",\n            \"example\": \"external\",\n            \"enum\": [\"asana_file_attachments\", \"external\"]\n          },\n          \"parent\": {\n            \"description\": \"Required identifier of the parent task or project_brief, as a string.\\n\",\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"description\": \"The URL of the external resource being attached. Required for attachments of type `external`.\\n\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"The name of the external resource being attached. Required for attachments of type `external`.\\n\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AttachmentResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AttachmentBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"download_url\": {\n                \"description\": \"The URL containing the content of the attachment.\\n*Note:* May be null if the attachment is hosted by [Box](https://www.box.com/). If present, this URL may only be valid for two minutes from the time of retrieval. You should avoid persisting this URL somewhere and just refresh it on demand to ensure you do not keep stale URLs.\",\n                \"type\": \"string\",\n                \"format\": \"uri\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"example\": \"https://s3.amazonaws.com/assets/123/Screenshot.png\"\n              },\n              \"host\": {\n                \"description\": \"The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive` and `box`.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"dropbox\"\n              },\n              \"parent\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/TaskCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"The task this attachment is attached to.\",\n                    \"readOnly\": true,\n                    \"properties\": {\n                      \"resource_subtype\": {\n                        \"description\": \"The resource subtype of the parent resource that the filter applies to.\",\n                        \"type\": \"string\",\n                        \"example\": \"default_task\",\n                        \"nullable\": true\n                      }\n                    }\n                  }\n                ]\n              },\n              \"view_url\": {\n                \"description\": \"The URL where the attachment can be viewed, which may be friendlier to users in a browser than just directing them to a raw file. May be null if no view URL exists for the service.\",\n                \"type\": \"string\",\n                \"format\": \"uri\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"example\": \"https://www.dropbox.com/s/123/Screenshot.png\"\n              },\n              \"permanent_url\": {\n                \"description\": \"\",\n                \"type\": \"string\",\n                \"format\": \"uri\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"example\": \"https://s3.amazonaws.com/assets/123/Screenshot.png\"\n              },\n              \"size\": {\n                \"description\": \"The size of the attachment in bytes. Only present when the `resource_subtype` is `asana`.\",\n                \"type\": \"integer\",\n                \"readOnly\": true,\n                \"example\": 12345\n              }\n            }\n          }\n        ]\n      },\n      \"AttachmentBase\": { \"$ref\": \"#/components/schemas/AttachmentCompact\" },\n      \"AttachmentCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"An *attachment* object represents any file attached to a task in Asana, whether it’s an uploaded file or one associated via a third-party service such as Dropbox or Google Drive.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the file.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"Screenshot.png\"\n              },\n              \"resource_subtype\": {\n                \"description\": \"The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `onedrive`, `box`, and `external`.\\n`external` attachments are a beta feature currently limited to specific integrations.\",\n                \"type\": \"string\",\n                \"example\": \"dropbox\"\n              }\n            }\n          }\n        ]\n      },\n      \"BatchRequest\": {\n        \"description\": \"A request object for use in a batch request.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"actions\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/BatchRequestAction\" }\n          }\n        }\n      },\n      \"BatchRequestAction\": {\n        \"description\": \"An action object for use in a batch request.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"relative_path\": {\n            \"description\": \"The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.\",\n            \"type\": \"string\",\n            \"example\": \"/tasks/123\"\n          },\n          \"method\": {\n            \"description\": \"The HTTP method you wish to emulate for the action.\",\n            \"type\": \"string\",\n            \"enum\": [\"get\", \"post\", \"put\", \"delete\", \"patch\", \"head\"],\n            \"example\": \"get\"\n          },\n          \"data\": {\n            \"description\": \"For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.\",\n            \"type\": \"object\",\n            \"example\": { \"assignee\": \"me\", \"workspace\": \"1337\" }\n          },\n          \"options\": {\n            \"description\": \"Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.\",\n            \"type\": \"object\",\n            \"properties\": {\n              \"limit\": {\n                \"description\": \"Pagination limit for the request.\",\n                \"type\": \"integer\",\n                \"example\": 50\n              },\n              \"offset\": {\n                \"description\": \"Pagination offset for the request.\",\n                \"type\": \"integer\",\n                \"example\": \"eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9\"\n              },\n              \"fields\": {\n                \"description\": \"The fields to retrieve in the request.\",\n                \"type\": \"array\",\n                \"items\": { \"type\": \"string\" },\n                \"example\": [\"name\", \"gid\", \"notes\", \"completed\"]\n              }\n            },\n            \"example\": { \"limit\": 3, \"fields\": [\"name\", \"notes\", \"completed\"] }\n          }\n        },\n        \"required\": [\"relative_path\", \"method\"]\n      },\n      \"BatchResponse\": {\n        \"description\": \"A response object returned from a batch request.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"status_code\": {\n            \"description\": \"The HTTP status code that the invoked endpoint returned.\",\n            \"type\": \"integer\",\n            \"example\": 200\n          },\n          \"headers\": {\n            \"description\": \"A map of HTTP headers specific to this result. This is primarily used for returning a `Location` header to accompany a `201 Created` result.  The parent HTTP response will contain all common headers.\",\n            \"type\": \"object\",\n            \"example\": { \"location\": \"/tasks/1234\" }\n          },\n          \"body\": {\n            \"description\": \"The JSON body that the invoked endpoint returned.\",\n            \"type\": \"object\",\n            \"example\": {\n              \"data\": {\n                \"gid\": \"1967\",\n                \"completed\": false,\n                \"name\": \"Hello, world!\",\n                \"notes\": \"How are you today?\"\n              }\n            }\n          }\n        }\n      },\n      \"CustomFieldResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/CustomFieldBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"enum_value\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/EnumOption\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an enum custom field.\"\n                  }\n                ]\n              },\n              \"created_by\": {\n                \"$ref\": \"#/components/schemas/UserCompact\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"CustomFieldRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/CustomFieldBase\" },\n          {\n            \"type\": \"object\",\n            \"required\": [\"workspace\"],\n            \"properties\": {\n              \"workspace\": {\n                \"type\": \"string\",\n                \"description\": \"*Create-Only* The workspace to create a custom field in.\",\n                \"example\": \"1331\"\n              }\n            }\n          }\n        ]\n      },\n      \"CustomFieldBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/CustomFieldCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"description\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The description of the custom field.\",\n                \"type\": \"string\",\n                \"example\": \"Development team priority\"\n              },\n              \"enum_options\": {\n                \"description\": \"*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/EnumOption\" }\n              },\n              \"precision\": {\n                \"description\": \"Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\\nThe identifier format will always have a precision of 0.\",\n                \"type\": \"integer\",\n                \"example\": 2\n              },\n              \"format\": {\n                \"description\": \"The format of this custom field.\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"currency\",\n                  \"identifier\",\n                  \"percentage\",\n                  \"custom\",\n                  \"none\"\n                ],\n                \"example\": \"custom\"\n              },\n              \"currency_code\": {\n                \"description\": \"ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"example\": \"EUR\"\n              },\n              \"custom_label\": {\n                \"description\": \"This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"example\": \"gold pieces\"\n              },\n              \"custom_label_position\": {\n                \"description\": \"Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.\",\n                \"type\": \"string\",\n                \"enum\": [\"prefix\", \"suffix\"],\n                \"example\": \"suffix\"\n              },\n              \"is_global_to_workspace\": {\n                \"description\": \"This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.\",\n                \"type\": \"boolean\",\n                \"example\": true,\n                \"readOnly\": true\n              },\n              \"has_notifications_enabled\": {\n                \"description\": \"*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.\",\n                \"type\": \"boolean\",\n                \"example\": true\n              }\n            }\n          }\n        ]\n      },\n      \"CustomFieldCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [Custom Fields](/docs/asana-custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\\n\\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the custom field.\",\n                \"type\": \"string\",\n                \"example\": \"Status\"\n              },\n              \"resource_subtype\": {\n                \"description\": \"The type of the custom field. Must be one of the given values.\\n\",\n                \"type\": \"string\",\n                \"example\": \"text\",\n                \"enum\": [\"text\", \"enum\", \"number\", \"number\", \"date\"]\n              },\n              \"type\": {\n                \"description\": \"*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\\n\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"enum\": [\"text\", \"enum\", \"number\", \"number\"]\n              },\n              \"enum_options\": {\n                \"description\": \"*Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/EnumOption\" }\n              },\n              \"enabled\": {\n                \"description\": \"*Conditional*. Determines if the custom field is enabled or not.\",\n                \"type\": \"boolean\",\n                \"example\": true\n              },\n              \"number_value\": {\n                \"description\": \"*Conditional*. This number is the value of a number custom field.\",\n                \"type\": \"number\",\n                \"example\": 5.2\n              },\n              \"text_value\": {\n                \"description\": \"*Conditional*. This string is the value of a text custom field.\",\n                \"type\": \"string\",\n                \"example\": \"Some Value\"\n              },\n              \"enum_value\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/EnumOption\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an enum custom field.\"\n                  }\n                ]\n              },\n              \"multi_enum_values\": {\n                \"description\": \"*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a multi_enum custom field.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/EnumOption\" }\n              },\n              \"display_value\": {\n                \"description\": \"A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"blue\"\n              },\n              \"date_value\": {\n                \"description\": \"*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a date custom field. If no date is selected, the value of `date_value` will be `null`.\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"date\": {\n                    \"type\": \"string\",\n                    \"description\": \"A string representing the date in YYYY-MM-DD format.\",\n                    \"example\": \"2024-08-23\"\n                  },\n                  \"date_time\": {\n                    \"type\": \"string\",\n                    \"description\": \"A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.\",\n                    \"example\": \"2024-08-23T22:00:00.000Z\"\n                  }\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"CustomFieldSettingResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/CustomFieldSettingBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"project\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"*Deprecated: new integrations should prefer the `parent` field.* The id of the project that this custom field settings refers to.\",\n                    \"readOnly\": true\n                  }\n                ]\n              },\n              \"is_important\": {\n                \"description\": \"`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              },\n              \"parent\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"The parent to which the custom field is applied. This can be a project or portfolio and indicates that the tasks or projects that the parent contains may be given custom field values for this custom field.\",\n                    \"readOnly\": true\n                  }\n                ]\n              },\n              \"custom_field\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/CustomFieldResponse\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"The custom field that is applied to the `parent`.\",\n                    \"readOnly\": true\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"CustomFieldSettingBase\": {\n        \"$ref\": \"#/components/schemas/CustomFieldSettingCompact\"\n      },\n      \"CustomFieldSettingCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"Custom Fields Settings objects represent the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing.\"\n          }\n        ]\n      },\n      \"ModifyDependenciesRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dependencies\": {\n            \"description\": \"An array of task gids that a task depends on.\",\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          }\n        },\n        \"example\": { \"dependencies\": [\"133713\", \"184253\"] }\n      },\n      \"ModifyDependentsRequest\": {\n        \"description\": \"A set of dependent tasks.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"dependents\": {\n            \"description\": \"An array of task gids that are dependents of the given task.\",\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          }\n        },\n        \"example\": { \"dependents\": [\"133713\", \"184253\"] }\n      },\n      \"EmptyResponse\": {\n        \"type\": \"object\",\n        \"description\": \"An empty object. Some endpoints do not return an object on success. The success is conveyed through a 2-- status code and returning an empty object.\"\n      },\n      \"EnumOptionRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/EnumOptionBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"insert_before\": {\n                \"type\": \"string\",\n                \"description\": \"An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.\",\n                \"example\": \"12345\"\n              },\n              \"insert_after\": {\n                \"type\": \"string\",\n                \"description\": \"An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.\",\n                \"example\": \"12345\"\n              }\n            }\n          }\n        ]\n      },\n      \"EnumOptionBase\": { \"$ref\": \"#/components/schemas/EnumOption\" },\n      \"EnumOption\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 50.\\n\\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\\n\\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\\n\\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to “trashing” the enum option in the Asana web app within the “Edit Fields” dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\\n\\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\\n\\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the enum option.\",\n                \"type\": \"string\",\n                \"example\": \"Low\"\n              },\n              \"enabled\": {\n                \"description\": \"The color of the enum option. Defaults to ‘none’.\",\n                \"type\": \"boolean\",\n                \"example\": true\n              },\n              \"color\": {\n                \"description\": \"Whether or not the enum option is a selectable value for the custom field.\",\n                \"type\": \"string\",\n                \"example\": \"blue\"\n              }\n            }\n          }\n        ]\n      },\n      \"EnumOptionInsertRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"enum_option\"],\n        \"properties\": {\n          \"enum_option\": {\n            \"type\": \"string\",\n            \"description\": \"The gid of the enum option to relocate.\",\n            \"example\": \"97285\"\n          },\n          \"before_enum_option\": {\n            \"type\": \"string\",\n            \"description\": \"An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.\",\n            \"example\": \"12345\"\n          },\n          \"after_enum_option\": {\n            \"type\": \"string\",\n            \"description\": \"An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"ErrorResponse\": {\n        \"description\": \"Sadly, sometimes requests to the API are not successful. Failures can\\noccur for a wide range of reasons. In all cases, the API should return\\nan HTTP Status Code that indicates the nature of the failure,\\nwith a response body in JSON format containing additional information.\\n\\n\\nIn the event of a server error the response body will contain an error\\nphrase. These phrases are automatically generated using the\\n[node-asana-phrase\\nlibrary](https://github.com/Asana/node-asana-phrase) and can be used by\\nAsana support to quickly look up the incident that caused the server\\nerror.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/Error\" }\n          }\n        }\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"Message providing more detail about the error that occurred, if available.\",\n            \"example\": \"project: Missing input\"\n          },\n          \"help\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"Additional information directing developers to resources on how to address and fix the problem, if available.\",\n            \"example\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\"\n          },\n          \"phrase\": {\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"description\": \"*500 errors only*. A unique error phrase which can be used when contacting developer support to help identify the exact occurrence of the problem in Asana’s logs.\",\n            \"example\": \"6 sad squid snuggle softly\"\n          }\n        }\n      },\n      \"EventResponse\": {\n        \"description\": \"An *event* is an object representing a change to a resource that was\\nobserved by an event subscription or delivered asynchronously to\\nthe target location of an active webhook.\\n\\nThe event may be triggered by a different `user` than the\\nsubscriber. For example, if user A subscribes to a task and user B\\nmodified it, the event’s user will be user B. Note: Some events\\nare generated by the system, and will have `null` as the user. API\\nconsumers should make sure to handle this case.\\n\\nThe `resource` that triggered the event may be different from the one\\nthat the events were requested for or the webhook is subscribed to. For\\nexample, a subscription to a project will contain events for tasks\\ncontained within the project.\\n\\n**Note:** pay close attention to the relationship between the fields\\n`Event.action` and `Event.change.action`.\\n`Event.action` represents the action taken on the resource\\nitself, and `Event.change.action` represents how the information\\nwithin the resource's fields have been modified.\\n\\nFor instance, consider these scenarios:\\n\\n\\n* When at task is added to a project, `Event.action` will be\\n`added`, `Event.parent` will be on object with the `id` and\\n`type` of the project, and there will be no `change` field.\\n\\n\\n* When an assignee is set on the task, `Event.parent` will be\\n`null`, `Event.action` will be `changed`,\\n`Event.change.action` will be `changed`, and `changed_value` will\\nbe an object with the user's `id` and `type`.\\n\\n\\n* When a collaborator is added to the task, `Event.parent` will\\nbe `null`, `Event.action` will be `changed`,\\n`Event.change.action` will be `added`, and `added_value` will be\\nan object with the user's `id` and `type`.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/UserCompact\" },\n              { \"description\": \"The user who triggered the event.\" }\n            ]\n          },\n          \"resource\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AsanaNamedResource\" },\n              {\n                \"description\": \"The resource which has triggered the event by being modified in some way.\"\n              }\n            ]\n          },\n          \"type\": {\n            \"description\": \"*Deprecated: Refer to the resource_type of the resource.* The type of the resource that generated the event.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"task\"\n          },\n          \"action\": {\n            \"description\": \"The type of action taken on the **resource** that triggered the event.  This can be one of `changed`, `added`, `removed`, `deleted`, or `undeleted` depending on the nature of the event.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"changed\"\n          },\n          \"parent\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AsanaNamedResource\" },\n              {\n                \"description\": \"For added/removed events, the parent object that resource was added to or removed from. The parent will be `null` for other event types.\"\n              }\n            ]\n          },\n          \"created_at\": {\n            \"description\": \"The timestamp when the event occurred.\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"example\": \"2012-02-22T02:06:58.147Z\"\n          },\n          \"change\": {\n            \"type\": \"object\",\n            \"description\": \"Information about the type of change that has occurred. This field is only present when the value of the property `action`, describing the action taken on the **resource**, is `changed`.\",\n            \"readOnly\": true,\n            \"properties\": {\n              \"field\": {\n                \"description\": \"The name of the field that has changed in the resource.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"assignee\"\n              },\n              \"action\": {\n                \"description\": \"The type of action taken on the **field** which has been changed.  This can be one of `changed`, `added`, or `removed` depending on the nature of the change.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"changed\"\n              },\n              \"new_value\": {\n                \"description\": \"*Conditional.* This property is only present when the **field's** `action` is `changed` and the `new_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/input-output-options)) when using the [Events](/docs/asana-events) resource.\",\n                \"example\": { \"gid\": \"12345\", \"resource_type\": \"user\" }\n              },\n              \"added_value\": {\n                \"description\": \"*Conditional.* This property is only present when the **field's** `action` is `added` and the `added_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/input-output-options)) when using the [Events](/docs/asana-events) resource.\",\n                \"example\": { \"gid\": \"12345\", \"resource_type\": \"user\" }\n              },\n              \"removed_value\": {\n                \"description\": \"*Conditional.* This property is only present when the **field's** `action` is `removed` and the `removed_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/input-output-options)) when using the [Events](/docs/asana-events) resource.\",\n                \"example\": { \"gid\": \"12345\", \"resource_type\": \"user\" }\n              }\n            }\n          }\n        }\n      },\n      \"JobResponse\": { \"$ref\": \"#/components/schemas/JobBase\" },\n      \"JobBase\": { \"$ref\": \"#/components/schemas/JobCompact\" },\n      \"JobCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *job* is an object representing a process that handles asynchronous work.\",\n            \"properties\": {\n              \"resource_subtype\": {\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"duplicate_task\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"enum\": [\"not_started\", \"in_progress\", \"completed\", \"failed\"],\n                \"readOnly\": true,\n                \"example\": \"in_progress\",\n                \"description\": \"The current status of this job. The value is one of: `not_started`, `in_progress`, `succeeded`, or `failed`.\"\n              },\n              \"new_project\": { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n              \"new_task\": { \"$ref\": \"#/components/schemas/TaskCompact\" },\n              \"new_project_template\": {\n                \"$ref\": \"#/components/schemas/ProjectTemplateCompact\"\n              }\n            }\n          }\n        ]\n      },\n      \"Like\": {\n        \"type\": \"object\",\n        \"description\": \"An object to represent a user's like.\",\n        \"properties\": {\n          \"gid\": {\n            \"description\": \"Globally unique identifier of the object, as a string.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"12345\"\n          },\n          \"user\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n        }\n      },\n      \"OrganizationExportRequest\": {\n        \"type\": \"object\",\n        \"description\": \"An *organization_export* request starts a job to export the complete data of the given Organization.\",\n        \"properties\": {\n          \"organization\": {\n            \"description\": \"Globally unique identifier for the workspace or organization.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"OrganizationExportResponse\": {\n        \"$ref\": \"#/components/schemas/OrganizationExportBase\"\n      },\n      \"OrganizationExportBase\": {\n        \"$ref\": \"#/components/schemas/OrganizationExportCompact\"\n      },\n      \"OrganizationExportCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"An *organization_export* object represents a request to export the complete data of an Organization in JSON format.\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"download_url\": {\n                \"description\": \"Download this URL to retreive the full export of the organization\\nin JSON format. It will be compressed in a gzip (.gz) container.\\n\\n*Note: May be null if the export is still in progress or\\nfailed.  If present, this URL may only be valid for 1 hour from\\nthe time of retrieval. You should avoid persisting this URL\\nsomewhere and rather refresh on demand to ensure you do not keep\\nstale URLs.*\",\n                \"type\": \"string\",\n                \"format\": \"uri\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"example\": \"https://asana-export.s3.amazonaws.com/export-4632784536274-20170127-43246.json.gz?AWSAccessKeyId=xxxxxxxx\"\n              },\n              \"state\": {\n                \"description\": \"The current state of the export.\",\n                \"type\": \"string\",\n                \"enum\": [\"pending\", \"started\", \"finished\", \"error\"],\n                \"readOnly\": true,\n                \"example\": \"started\"\n              },\n              \"organization\": {\n                \"$ref\": \"#/components/schemas/WorkspaceCompact\"\n              }\n            }\n          }\n        ]\n      },\n      \"PortfolioResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/PortfolioBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"created_by\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"custom_field_settings\": {\n                \"description\": \"Array of custom field settings applied to the portfolio.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/CustomFieldSettingResponse\"\n                }\n              },\n              \"due_on\": {\n                \"description\": \"The localized day on which this portfolio is due. This takes a date with format YYYY-MM-DD.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date-time\",\n                \"example\": \"2019-09-15\"\n              },\n              \"members\": {\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n              },\n              \"owner\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"start_on\": {\n                \"description\": \"The day on which work for this portfolio begins, or null if the portfolio has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, start_on and due_on cannot be the same date.*\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date\",\n                \"example\": \"2019-09-14\"\n              },\n              \"workspace\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"*Create-only*. The workspace or organization that the portfolio belongs to.\"\n                  }\n                ]\n              },\n              \"permalink_url\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"description\": \"A url that points directly to the object within Asana.\",\n                \"example\": \"https://app.asana.com/0/resource/123456789/list\"\n              },\n              \"current_status_update\": {\n                \"description\": \"The latest `status_update` posted to this portfolio.\",\n                \"nullable\": true,\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/StatusUpdateCompact\" }\n                ]\n              },\n              \"public\": {\n                \"description\": \"True if the portfolio is public to its workspace members.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              }\n            }\n          }\n        ]\n      },\n      \"PortfolioRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/PortfolioBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"members\": {\n                \"type\": \"array\",\n                \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Gid of an object.\"\n                },\n                \"example\": [\"52164\", \"15363\"]\n              },\n              \"workspace\": {\n                \"type\": \"string\",\n                \"description\": \"Gid of an object.\",\n                \"example\": \"167589\"\n              },\n              \"public\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if the portfolio is public to its workspace members.\",\n                \"example\": false\n              }\n            }\n          }\n        ]\n      },\n      \"PortfolioBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/PortfolioCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"color\": {\n                \"description\": \"Color of the portfolio.\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"dark-pink\",\n                  \"dark-green\",\n                  \"dark-blue\",\n                  \"dark-red\",\n                  \"dark-teal\",\n                  \"dark-brown\",\n                  \"dark-orange\",\n                  \"dark-purple\",\n                  \"dark-warm-gray\",\n                  \"light-pink\",\n                  \"light-green\",\n                  \"light-blue\",\n                  \"light-red\",\n                  \"light-teal\",\n                  \"light-brown\",\n                  \"light-orange\",\n                  \"light-purple\",\n                  \"light-warm-gray\"\n                ],\n                \"example\": \"light-green\"\n              }\n            }\n          }\n        ]\n      },\n      \"PortfolioCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/docs/asana-project-statuses) update.\\nPortfolios have some restrictions on size. Each portfolio has a max of 250 items and, like projects, a max of 20 custom fields.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the portfolio.\",\n                \"type\": \"string\",\n                \"example\": \"Bug Portfolio\"\n              }\n            }\n          }\n        ]\n      },\n      \"PortfolioAddItemRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"item\"],\n        \"properties\": {\n          \"item\": {\n            \"description\": \"The item to add to the portfolio.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"insert_before\": {\n            \"description\": \"An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"insert_after\": {\n            \"description\": \"An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"PortfolioRemoveItemRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"item\"],\n        \"properties\": {\n          \"item\": {\n            \"description\": \"The item to remove from the portfolio.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"AddMembersRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"members\"],\n        \"properties\": {\n          \"members\": {\n            \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"521621,621373\"\n          }\n        }\n      },\n      \"RemoveMembersRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"members\"],\n        \"properties\": {\n          \"members\": {\n            \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"521621,621373\"\n          }\n        }\n      },\n      \"AddFollowersRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"followers\"],\n        \"properties\": {\n          \"followers\": {\n            \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"521621,621373\"\n          }\n        }\n      },\n      \"RemoveFollowersRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"followers\"],\n        \"properties\": {\n          \"followers\": {\n            \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"521621,621373\"\n          }\n        }\n      },\n      \"PortfolioMembershipResponse\": {\n        \"$ref\": \"#/components/schemas/PortfolioMembershipBase\"\n      },\n      \"PortfolioMembershipBase\": {\n        \"$ref\": \"#/components/schemas/PortfolioMembershipCompact\"\n      },\n      \"PortfolioMembershipCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"This object determines if a user is a member of a portfolio.\",\n            \"properties\": {\n              \"portfolio\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The portfolio the user is a member of.\",\n                \"$ref\": \"#/components/schemas/PortfolioCompact\"\n              },\n              \"user\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n            }\n          }\n        ]\n      },\n      \"Preview\": {\n        \"type\": \"object\",\n        \"description\": \"A collection of rich text that will be displayed as a preview to another app.\\n\\nThis is read-only except for a small group of whitelisted apps.\",\n        \"readOnly\": true,\n        \"properties\": {\n          \"fallback\": {\n            \"description\": \"Some fallback text to display if unable to display the full preview.\",\n            \"type\": \"string\",\n            \"example\": \"Greg: Great! I like this idea.\\\\n\\\\nhttps//a_company.slack.com/archives/ABCDEFG/12345678\"\n          },\n          \"footer\": {\n            \"description\": \"Text to display in the footer.\",\n            \"type\": \"string\",\n            \"example\": \"Mar 17, 2019 1:25 PM\"\n          },\n          \"header\": {\n            \"description\": \"Text to display in the header.\",\n            \"type\": \"string\",\n            \"example\": \"Asana for Slack\"\n          },\n          \"header_link\": {\n            \"description\": \"Where the header will link to.\",\n            \"type\": \"string\",\n            \"example\": \"https://asana.comn/apps/slack\"\n          },\n          \"html_text\": {\n            \"description\": \"HTML formatted text for the body of the preview.\",\n            \"type\": \"string\",\n            \"example\": \"\u003cbody\u003eGreat! I like this idea.\u003c/body\u003e\"\n          },\n          \"text\": {\n            \"description\": \"Text for the body of the preview.\",\n            \"type\": \"string\",\n            \"example\": \"Great! I like this idea.\"\n          },\n          \"title\": {\n            \"description\": \"Text to display as the title.\",\n            \"type\": \"string\",\n            \"example\": \"Greg\"\n          },\n          \"title_link\": {\n            \"description\": \"Where to title will link to.\",\n            \"type\": \"string\",\n            \"example\": \"https://asana.slack.com/archives/ABCDEFG/12345678\"\n          }\n        }\n      },\n      \"ProjectResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"custom_fields\": {\n                \"description\": \"Array of Custom Fields.\",\n                \"readOnly\": true,\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/CustomFieldCompact\" }\n              },\n              \"followers\": {\n                \"description\": \"Array of users following this project. Followers are a subset of members who receive all notifications for a project, the default notification setting when adding members to a project in-product.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n                \"readOnly\": true\n              },\n              \"owner\": {\n                \"description\": \"The current owner of the project, may be null.\",\n                \"nullable\": true,\n                \"allOf\": [{ \"$ref\": \"#/components/schemas/UserCompact\" }]\n              },\n              \"team\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/TeamCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"*Create-only*. The team that this project is shared with. This field only exists for projects in organizations.\"\n                  }\n                ]\n              },\n              \"icon\": {\n                \"description\": \"The icon for a project.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"enum\": [\n                  \"list\",\n                  \"board\",\n                  \"timeline\",\n                  \"calendar\",\n                  \"rocket\",\n                  \"people\",\n                  \"graph\",\n                  \"star\",\n                  \"bug\",\n                  \"light_bulb\",\n                  \"globe\",\n                  \"gear\",\n                  \"notebook\",\n                  \"computer\",\n                  \"check\",\n                  \"target\",\n                  \"html\",\n                  \"megaphone\",\n                  \"chat_bubbles\",\n                  \"briefcase\",\n                  \"page_layout\",\n                  \"mountain_flag\",\n                  \"puzzle\",\n                  \"presentation\",\n                  \"line_and_symbols\",\n                  \"speed_dial\",\n                  \"ribbon\",\n                  \"shoe\",\n                  \"shopping_basket\",\n                  \"map\",\n                  \"ticket\",\n                  \"coins\"\n                ],\n                \"example\": \"chat_bubbles\"\n              },\n              \"permalink_url\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"description\": \"A url that points directly to the object within Asana.\",\n                \"example\": \"https://app.asana.com/0/resource/123456789/list\"\n              },\n              \"completed\": {\n                \"description\": \"True if the project is currently marked complete, false if not.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              },\n              \"completed_at\": {\n                \"description\": \"The time at which this project was completed, or null if the project is not completed.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"completed_by\": {\n                \"description\": \"The user that marked this project complete, or null if the project is not completed.\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"$ref\": \"#/components/schemas/UserCompact\"\n              },\n              \"created_from_template\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectTemplateCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"[Opt In](/docs/input-output-options). The project template from which this project was created. If the project was not created from a template, this field will be null.\",\n                    \"nullable\": true\n                  }\n                ]\n              },\n              \"project_brief\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectBriefCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"[Opt In](/docs/input-output-options). The project brief associated with this project.\",\n                    \"nullable\": true\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"custom_fields\": {\n                \"description\": \"An object where each key is a Custom Field gid and each value is an enum gid, string, or number.\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"string\",\n                  \"description\": \"\\\"{custom_field_gid}\\\" =\u003e Value (Can be text, number, etc.)\"\n                },\n                \"example\": {\n                  \"5678904321\": \"On Hold\",\n                  \"4578152156\": \"Not Started\"\n                }\n              },\n              \"followers\": {\n                \"description\": \"*Create-only*. Comma separated string of users. Followers are a subset of members who receive all notifications for a project, the default notification setting when adding members to a project in-product.\",\n                \"type\": \"string\",\n                \"example\": \"12345,23456\"\n              },\n              \"owner\": {\n                \"description\": \"The current owner of the project, may be null.\",\n                \"nullable\": true,\n                \"type\": \"string\",\n                \"example\": \"12345\"\n              },\n              \"team\": {\n                \"description\": \"*Create-only*. The team that this project is shared with. This field only exists for projects in organizations.\",\n                \"type\": \"string\",\n                \"example\": \"12345\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"archived\": {\n                \"description\": \"True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              },\n              \"color\": {\n                \"description\": \"Color of the project.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"enum\": [\n                  \"dark-pink\",\n                  \"dark-green\",\n                  \"dark-blue\",\n                  \"dark-red\",\n                  \"dark-teal\",\n                  \"dark-brown\",\n                  \"dark-orange\",\n                  \"dark-purple\",\n                  \"dark-warm-gray\",\n                  \"light-pink\",\n                  \"light-green\",\n                  \"light-blue\",\n                  \"light-red\",\n                  \"light-teal\",\n                  \"light-brown\",\n                  \"light-orange\",\n                  \"light-purple\",\n                  \"light-warm-gray\"\n                ],\n                \"example\": \"light-green\"\n              },\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"current_status\": {\n                \"nullable\": true,\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectStatusResponse\" }\n                ],\n                \"description\": \"*Deprecated: new integrations should prefer the `current_status_update` resource.*\"\n              },\n              \"custom_field_settings\": {\n                \"description\": \"Array of Custom Field Settings (in compact form).\",\n                \"readOnly\": true,\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/CustomFieldSettingCompact\"\n                }\n              },\n              \"default_view\": {\n                \"description\": \"The default view (list, board, calendar, or timeline) of a project.\",\n                \"type\": \"string\",\n                \"enum\": [\"list\", \"board\", \"calendar\", \"timeline\"],\n                \"example\": \"calendar\"\n              },\n              \"due_date\": {\n                \"description\": \"*Deprecated: new integrations should prefer the due_on field.*\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date-time\",\n                \"example\": \"2019-09-15\"\n              },\n              \"due_on\": {\n                \"description\": \"The day on which this project is due. This takes a date with format YYYY-MM-DD.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date-time\",\n                \"example\": \"2019-09-15\"\n              },\n              \"html_notes\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The notes of the project with formatting as HTML.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eThese are things we need to purchase.\u003c/body\u003e\"\n              },\n              \"is_template\": {\n                \"description\": \"[Opt In](/docs/input-output-options). Determines if the project is a template.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              },\n              \"members\": {\n                \"description\": \"Array of users who are members of this project.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n                \"readOnly\": true\n              },\n              \"modified_at\": {\n                \"description\": \"The time at which this project was last modified.\\n*Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"format\": \"date-time\",\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"notes\": {\n                \"description\": \"More detailed, free-form textual information associated with the project.\",\n                \"type\": \"string\",\n                \"example\": \"These are things we need to purchase.\"\n              },\n              \"public\": {\n                \"description\": \"True if the project is public to the organization. If false, do not share this project with other users in this organization without explicitly checking to see if they have access.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              },\n              \"start_on\": {\n                \"description\": \"The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, start_on and due_on cannot be the same date.*\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date\",\n                \"example\": \"2019-09-14\"\n              },\n              \"workspace\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"readOnly\": true,\n                    \"description\": \"*Create-only*. The workspace or organization this project is associated with. Once created, projects cannot be moved to a different workspace. This attribute can only be specified at creation time.\"\n                  }\n                ]\n              },\n              \"current_status_update\": {\n                \"description\": \"The latest `status_update` posted to this project.\",\n                \"nullable\": true,\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/StatusUpdateCompact\" }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.\",\n                \"type\": \"string\",\n                \"example\": \"Stuff to buy\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectDuplicateRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"name\"],\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name of the new project.\",\n            \"type\": \"string\",\n            \"example\": \"New Project Name\"\n          },\n          \"team\": {\n            \"description\": \"Sets the team of the new project. If team is not defined, the new project will be in the same team as the the original project.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"include\": {\n            \"description\": \"The elements that will be duplicated to the new project. Tasks are always included.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"members\",\n              \"notes\",\n              \"task_notes\",\n              \"task_assignee\",\n              \"task_subtasks\",\n              \"task_attachments\",\n              \"task_dates\",\n              \"task_dependencies\",\n              \"task_followers\",\n              \"task_tags\",\n              \"task_projects\",\n              \"task_projects\"\n            ],\n            \"example\": [\"members\", \"task_notes\"]\n          },\n          \"schedule_dates\": {\n            \"description\": \"A dictionary of options to auto-shift dates. `task_dates` must be included to use this option. Requires either `start_on` or `due_on`, but not both.\",\n            \"type\": \"object\",\n            \"required\": [\"should_skip_weekends\"],\n            \"properties\": {\n              \"should_skip_weekends\": {\n                \"description\": \"Determines if the auto-shifted dates should skip weekends.\",\n                \"type\": \"boolean\",\n                \"example\": true\n              },\n              \"due_on\": {\n                \"description\": \"Sets the last due date in the duplicated project to the given date. The rest of the due dates will be offset by the same amount as the due dates in the original project.\",\n                \"type\": \"string\",\n                \"example\": \"2019-05-21\"\n              },\n              \"start_on\": {\n                \"description\": \"Sets the first start date in the duplicated project to the given date. The rest of the start dates will be offset by the same amount as the start dates in the original project.\",\n                \"type\": \"string\",\n                \"example\": \"2019-05-21\"\n              }\n            }\n          }\n        }\n      },\n      \"AddCustomFieldSettingRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"custom_field\"],\n        \"properties\": {\n          \"custom_field\": {\n            \"description\": \"The custom field to associate with this container.\",\n            \"type\": \"string\",\n            \"example\": \"14916\"\n          },\n          \"is_important\": {\n            \"description\": \"Whether this field should be considered important to this container (for instance, to display in the list view of items in the container).\",\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"insert_before\": {\n            \"description\": \"A gid of a Custom Field Setting on this container, before which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"insert_after\": {\n            \"description\": \"A gid of a Custom Field Setting on this container, after which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"RemoveCustomFieldSettingRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"custom_field\"],\n        \"properties\": {\n          \"custom_field\": {\n            \"description\": \"The custom field to remove from this portfolio.\",\n            \"type\": \"string\",\n            \"example\": \"14916\"\n          }\n        }\n      },\n      \"ProjectMembershipResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectMembershipBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"project\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The project the user is a member of.\",\n                \"$ref\": \"#/components/schemas/ProjectCompact\"\n              },\n              \"write_access\": {\n                \"description\": \"Whether the user has full access to the project or has comment-only access.\",\n                \"type\": \"string\",\n                \"enum\": [\"full_write\", \"comment_only\"],\n                \"readOnly\": true,\n                \"example\": \"full_write\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectMembershipBase\": {\n        \"$ref\": \"#/components/schemas/ProjectMembershipCompact\"\n      },\n      \"ProjectMembershipCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"With the introduction of “comment-only” projects in Asana, a user’s membership in a project comes with associated permissions. These permissions (whether a user has full access to the project or comment-only access) are accessible through the project memberships endpoints described here.\",\n            \"properties\": {\n              \"user\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n            }\n          }\n        ]\n      },\n      \"ProjectStatusResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectStatusBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"created_by\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"author\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"modified_at\": {\n                \"description\": \"The time at which this project status was last modified.\\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectStatusRequest\": {\n        \"$ref\": \"#/components/schemas/ProjectStatusBase\"\n      },\n      \"ProjectStatusBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectStatusCompact\" },\n          {\n            \"type\": \"object\",\n            \"required\": [\"text\", \"color\"],\n            \"properties\": {\n              \"author\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"modified_at\": {\n                \"description\": \"The time at which this project status was last modified.\\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*\"\n              },\n              \"text\": {\n                \"description\": \"The text content of the status update.\",\n                \"type\": \"string\",\n                \"example\": \"The project is moving forward according to plan...\"\n              },\n              \"html_text\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eThe project \u003cstrong\u003eis\u003c/strong\u003e moving forward according to plan...\u003c/body\u003e\"\n              },\n              \"color\": {\n                \"description\": \"The color associated with the status update.\",\n                \"type\": \"string\",\n                \"enum\": [\"green\", \"yellow\", \"red\", \"blue\"]\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectStatusCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: \\\"green\\\" for projects that are on track, \\\"yellow\\\" for projects at risk, and \\\"red\\\" for projects that are behind.\",\n            \"properties\": {\n              \"title\": {\n                \"description\": \"The title of the project status update.\",\n                \"type\": \"string\",\n                \"example\": \"Status Update - Jun 15\"\n              }\n            }\n          }\n        ]\n      },\n      \"SectionResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/SectionBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"project\": { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n              \"projects\": {\n                \"description\": \"*Deprecated - please use project instead*\",\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n              }\n            }\n          }\n        ]\n      },\n      \"SectionRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"description\": \"*Create-Only* The project to create the section in\",\n            \"type\": \"string\",\n            \"example\": \"13579\"\n          },\n          \"name\": {\n            \"description\": \"The text to be displayed as the section name. This cannot be an empty string.\",\n            \"type\": \"string\",\n            \"example\": \"Next Actions\"\n          },\n          \"insert_before\": {\n            \"description\": \"An existing section within this project before which the added section should be inserted. Cannot be provided together with insert_after.\",\n            \"type\": \"string\",\n            \"example\": \"86420\"\n          },\n          \"insert_after\": {\n            \"description\": \"An existing section within this project after which the added section should be inserted. Cannot be provided together with insert_before.\",\n            \"type\": \"string\",\n            \"example\": \"987654\"\n          }\n        },\n        \"required\": [\"project\", \"name\"]\n      },\n      \"SectionBase\": { \"$ref\": \"#/components/schemas/SectionCompact\" },\n      \"SectionCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the section (i.e. the text displayed as the section header).\",\n                \"type\": \"string\",\n                \"example\": \"Next Actions\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectSectionInsertRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"description\": \"The project in which to reorder the given section.\",\n            \"type\": \"string\",\n            \"example\": \"123456\"\n          },\n          \"section\": {\n            \"description\": \"The section to reorder.\",\n            \"type\": \"string\",\n            \"example\": \"321654\"\n          },\n          \"before_section\": {\n            \"description\": \"Insert the given section immediately before the section specified by this parameter.\",\n            \"type\": \"string\",\n            \"example\": \"86420\"\n          },\n          \"after_section\": {\n            \"description\": \"Insert the given section immediately after the section specified by this parameter.\",\n            \"type\": \"string\",\n            \"example\": \"987654\"\n          }\n        },\n        \"required\": [\"project\", \"section\"]\n      },\n      \"SectionTaskInsertRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"task\": {\n            \"description\": \"The task to add to this section.\",\n            \"type\": \"string\",\n            \"example\": \"123456\"\n          },\n          \"insert_before\": {\n            \"description\": \"An existing task within this section before which the added task should be inserted. Cannot be provided together with insert_after.\",\n            \"type\": \"string\",\n            \"example\": \"86420\"\n          },\n          \"insert_after\": {\n            \"description\": \"An existing task within this section after which the added task should be inserted. Cannot be provided together with insert_before.\",\n            \"type\": \"string\",\n            \"example\": \"987654\"\n          }\n        },\n        \"required\": [\"task\"]\n      },\n      \"StoryResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/StoryBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"is_edited\": {\n                \"description\": \"*Conditional*. Whether the text of the story has been edited after creation.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              },\n              \"hearted\": {\n                \"description\": \"*Deprecated - please use likes instead*\\n*Conditional*. True if the story is hearted by the authorized user, false if not.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              },\n              \"hearts\": {\n                \"description\": \"*Deprecated - please use likes instead*\\n\\n*Conditional*. Array of likes for users who have hearted this story.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"num_hearts\": {\n                \"description\": \"*Deprecated - please use likes instead*\\n\\n*Conditional*. The number of users who have hearted this story.\",\n                \"type\": \"integer\",\n                \"readOnly\": true,\n                \"example\": 5\n              },\n              \"liked\": {\n                \"description\": \"*Conditional*. True if the story is liked by the authorized user, false if not.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              },\n              \"likes\": {\n                \"description\": \"*Conditional*. Array of likes for users who have liked this story.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"num_likes\": {\n                \"description\": \"*Conditional*. The number of users who have liked this story.\",\n                \"type\": \"integer\",\n                \"readOnly\": true,\n                \"example\": 5\n              },\n              \"previews\": {\n                \"description\": \"*Conditional*. A collection of previews to be displayed in the story.\\n\\n*Note: This property only exists for comment stories.*\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Preview\" },\n                \"readOnly\": true\n              },\n              \"old_name\": {\n                \"description\": \"*Conditional*'\",\n                \"type\": \"string\",\n                \"example\": \"This was the Old Name\"\n              },\n              \"new_name\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"This is the New Name\"\n              },\n              \"old_dates\": {\n                \"$ref\": \"#/components/schemas/StoryResponseDates\"\n              },\n              \"new_dates\": {\n                \"$ref\": \"#/components/schemas/StoryResponseDates\"\n              },\n              \"old_resource_subtype\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"default_task\"\n              },\n              \"new_resource_subtype\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"milestone\"\n              },\n              \"story\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/StoryCompact\",\n                \"readOnly\": true\n              },\n              \"assignee\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/UserCompact\",\n                \"readOnly\": true\n              },\n              \"follower\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/UserCompact\",\n                \"readOnly\": true\n              },\n              \"old_section\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/SectionCompact\",\n                \"readOnly\": true\n              },\n              \"new_section\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/SectionCompact\",\n                \"readOnly\": true\n              },\n              \"task\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/TaskCompact\",\n                \"readOnly\": true\n              },\n              \"project\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/ProjectCompact\",\n                \"readOnly\": true\n              },\n              \"tag\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/TagCompact\",\n                \"readOnly\": true\n              },\n              \"custom_field\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/CustomFieldCompact\",\n                \"readOnly\": true\n              },\n              \"old_text_value\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"This was the Old Text\"\n              },\n              \"new_text_value\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"This is the New Text\"\n              },\n              \"old_number_value\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"integer\",\n                \"readOnly\": true,\n                \"example\": 1\n              },\n              \"new_number_value\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"integer\",\n                \"readOnly\": true,\n                \"example\": 2\n              },\n              \"old_enum_value\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/EnumOption\",\n                \"readOnly\": true\n              },\n              \"new_enum_value\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/EnumOption\",\n                \"readOnly\": true\n              },\n              \"new_approval_status\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"approved\"\n              },\n              \"old_approval_status\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"pending\"\n              },\n              \"duplicate_of\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/TaskCompact\",\n                \"readOnly\": true\n              },\n              \"duplicated_from\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/TaskCompact\",\n                \"readOnly\": true\n              },\n              \"dependency\": {\n                \"description\": \"*Conditional*\",\n                \"$ref\": \"#/components/schemas/TaskCompact\",\n                \"readOnly\": true\n              },\n              \"source\": {\n                \"description\": \"The component of the Asana product the user used to trigger the story.\",\n                \"type\": \"string\",\n                \"enum\": [\"web\", \"email\", \"mobile\", \"api\", \"unknown\"],\n                \"readOnly\": true,\n                \"example\": \"web\"\n              },\n              \"target\": {\n                \"description\": \"The object this story is associated with. Currently may only be a task.\",\n                \"readOnly\": true,\n                \"properties\": {\n                  \"gid\": { \"type\": \"string\", \"example\": \"1234\" },\n                  \"name\": { \"type\": \"string\", \"example\": \"Bug Task\" }\n                },\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/TaskCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"readOnly\": true,\n                    \"description\": \"The object this story is associated with. Currently may only be a task.\"\n                  }\n                ]\n              },\n              \"created_by\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"old_multi_enum_values\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/EnumOption\" },\n                \"readOnly\": true\n              },\n              \"new_multi_enum_values\": {\n                \"description\": \"*Conditional*\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/EnumOption\" },\n                \"readOnly\": true\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\"comment\", \"system\"],\n                \"readOnly\": true,\n                \"example\": \"comment\"\n              },\n              \"is_editable\": {\n                \"description\": \"*Conditional*. Whether the text of the story can be edited after creation.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              }\n            }\n          }\n        ]\n      },\n      \"StoryRequest\": { \"$ref\": \"#/components/schemas/StoryBase\" },\n      \"StoryBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/StoryCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"text\": {\n                \"description\": \"The plain text of the comment to add. Cannot be used with html_text.\",\n                \"type\": \"string\",\n                \"example\": \"This is a comment.\"\n              },\n              \"html_text\": {\n                \"description\": \"[Opt In](/docs/input-output-options). HTML formatted text for a comment. This will not include the name of the creator.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eThis is a comment.\u003cbody\u003e\"\n              },\n              \"is_pinned\": {\n                \"description\": \"*Conditional*. Whether the story should be pinned on the resource.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              },\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"resource_subtype\": {\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"comment_added\"\n              },\n              \"sticker_name\": {\n                \"description\": \"The name of the sticker in this story. `null` if there is no sticker.\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"green_checkmark\",\n                  \"people_dancing\",\n                  \"dancing_unicorn\",\n                  \"heart\",\n                  \"party_popper\",\n                  \"people_waving_flags\",\n                  \"splashing_narwhal\",\n                  \"trophy\",\n                  \"yeti_riding_unicorn\",\n                  \"celebrating_people\",\n                  \"determined_climbers\",\n                  \"phoenix_spreading_love\"\n                ],\n                \"example\": \"dancing_unicorn\"\n              }\n            },\n            \"description\": \"A story represents an activity associated with an object in the Asana system.\"\n          }\n        ]\n      },\n      \"StoryCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A story represents an activity associated with an object in the Asana system.\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"created_by\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"resource_subtype\": {\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"comment_added\"\n              },\n              \"text\": {\n                \"description\": \"*Create-only*. Human-readable text for the story or comment.\\nThis will not include the name of the creator.\\n*Note: This is not guaranteed to be stable for a given type of story. For example, text for a reassignment may not always say “assigned to …” as the text for a story can both be edited and change based on the language settings of the user making the request.*\\nUse the `resource_subtype` property to discover the action that created the story.\",\n                \"type\": \"string\",\n                \"example\": \"marked today\"\n              }\n            }\n          }\n        ]\n      },\n      \"StoryResponseDates\": {\n        \"description\": \"*Conditional*\",\n        \"type\": \"object\",\n        \"readOnly\": true,\n        \"properties\": {\n          \"start_on\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"example\": \"2019-09-14\"\n          },\n          \"due_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2019-09-15T02:06:58.158Z\"\n          },\n          \"due_on\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"example\": \"2019-09-15\"\n          }\n        }\n      },\n      \"TagResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TagBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"followers\": {\n                \"description\": \"Array of users following this tag.\",\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n              },\n              \"workspace\": { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n              \"permalink_url\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"description\": \"A url that points directly to the object within Asana.\",\n                \"example\": \"https://app.asana.com/0/resource/123456789/list\"\n              },\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              }\n            }\n          }\n        ]\n      },\n      \"TagRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TagBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"followers\": {\n                \"type\": \"array\",\n                \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n                \"items\": { \"type\": \"string\" },\n                \"example\": [\"12345\", \"42563\"]\n              },\n              \"workspace\": {\n                \"type\": \"string\",\n                \"description\": \"Gid of an object.\",\n                \"example\": \"12345\"\n              }\n            }\n          }\n        ]\n      },\n      \"TagBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TagCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"color\": {\n                \"type\": \"string\",\n                \"description\": \"Color of the tag.\",\n                \"enum\": [\n                  \"dark-pink\",\n                  \"dark-green\",\n                  \"dark-blue\",\n                  \"dark-red\",\n                  \"dark-teal\",\n                  \"dark-brown\",\n                  \"dark-orange\",\n                  \"dark-purple\",\n                  \"dark-warm-gray\",\n                  \"light-pink\",\n                  \"light-green\",\n                  \"light-blue\",\n                  \"light-red\",\n                  \"light-teal\",\n                  \"light-brown\",\n                  \"light-orange\",\n                  \"light-purple\",\n                  \"light-warm-gray\"\n                ],\n                \"example\": \"light-green\",\n                \"nullable\": true\n              },\n              \"notes\": {\n                \"description\": \"Free-form textual information associated with the tag (i.e. its description).\",\n                \"type\": \"string\",\n                \"example\": \"Mittens really likes the stuff from Humboldt.\"\n              }\n            }\n          }\n        ]\n      },\n      \"TagCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.\",\n                \"type\": \"string\",\n                \"example\": \"Stuff to buy\"\n              }\n            }\n          }\n        ]\n      },\n      \"TaskResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TaskBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"assignee\": {\n                \"nullable\": true,\n                \"allOf\": [{ \"$ref\": \"#/components/schemas/UserCompact\" }]\n              },\n              \"custom_fields\": {\n                \"description\": \"Array of custom field values applied to the task. These represent the custom field values recorded on this project for a particular custom field. For example, these custom field values will contain an `enum_value` property for custom fields of type `enum`, a `text_value` property for custom fields of type `text`, and so on. Please note that the `gid` returned on each custom field value *is identical* to the `gid` of the custom field, which allows referencing the custom field metadata through the `/custom_fields/custom_field-gid` endpoint.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/CustomFieldResponse\" },\n                \"readOnly\": true\n              },\n              \"followers\": {\n                \"description\": \"Array of users following this task.\",\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n              },\n              \"parent\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/TaskCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"readOnly\": true,\n                    \"description\": \"The parent of this task, or `null` if this is not a subtask. This property cannot be modified using a PUT request but you can change it with the `setParent` endpoint. You can create subtasks by using the subtasks endpoint.\",\n                    \"nullable\": true\n                  }\n                ]\n              },\n              \"projects\": {\n                \"description\": \"*Create-only.* Array of projects this task is associated with. At task creation time, this array can be used to add the task to many projects at once. After task creation, these associations can be modified using the addProject and removeProject endpoints.\",\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n              },\n              \"tags\": {\n                \"description\": \"Array of tags associated with this task. In order to change tags on an existing task use `addTag` and `removeTag`.\",\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": { \"$ref\": \"#/components/schemas/TagCompact\" },\n                \"example\": [{ \"gid\": \"59746\", \"name\": \"Grade A\" }]\n              },\n              \"workspace\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"readOnly\": true,\n                    \"description\": \"*Create-only*. The workspace this task is associated with. Once created, task cannot be moved to a different workspace. This attribute can only be specified at creation time.\"\n                  }\n                ]\n              },\n              \"permalink_url\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"description\": \"A url that points directly to the object within Asana.\",\n                \"example\": \"https://app.asana.com/0/resource/123456789/list\"\n              },\n              \"assignee_section\": {\n                \"nullable\": true,\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/SectionCompact\" },\n                  {\n                    \"description\": \"The *assignee section* is a subdivision of a project that groups tasks together in the assignee's \\\"My Tasks\\\" list. It can either be a header above a list of tasks in a list view or a column in a board view of \\\"My Tasks.\\\"\\nThe `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user's \\\"My Tasks\\\" list.\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"TaskRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TaskBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"assignee\": {\n                \"type\": \"string\",\n                \"readOnly\": false,\n                \"description\": \"Gid of a user.\",\n                \"example\": \"12345\",\n                \"nullable\": true\n              },\n              \"custom_fields\": {\n                \"description\": \"An object where each key is a Custom Field gid and each value is an enum gid, string, or number.\",\n                \"type\": \"object\",\n                \"additionalProperties\": {\n                  \"type\": \"string\",\n                  \"description\": \"\\\"{custom_field_gid}\\\" =\u003e Value (Can be text, number, etc.)\"\n                },\n                \"example\": {\n                  \"5678904321\": \"On Hold\",\n                  \"4578152156\": \"Not Started\"\n                }\n              },\n              \"followers\": {\n                \"type\": \"array\",\n                \"description\": \"*Create-Only* An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user. In order to change followers on an existing task use `addFollowers` and `removeFollowers`.\",\n                \"items\": { \"type\": \"string\", \"description\": \"Gid of a user.\" },\n                \"example\": [\"12345\"]\n              },\n              \"parent\": {\n                \"type\": \"string\",\n                \"readOnly\": false,\n                \"description\": \"Gid of a task.\",\n                \"example\": \"12345\",\n                \"nullable\": true\n              },\n              \"projects\": {\n                \"type\": \"array\",\n                \"description\": \"*Create-Only* Array of project gids. In order to change projects on an existing task use `addProject` and `removeProject`.\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"Gid of a project.\"\n                },\n                \"example\": [\"12345\"]\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"description\": \"*Create-Only* Array of tag gids. In order to change tags on an existing task use `addTag` and `removeTag`.\",\n                \"items\": { \"type\": \"string\", \"description\": \"Gid of a tag.\" },\n                \"example\": [\"12345\"]\n              },\n              \"workspace\": {\n                \"type\": \"string\",\n                \"readOnly\": false,\n                \"description\": \"Gid of a workspace.\",\n                \"example\": \"12345\"\n              },\n              \"assignee_section\": {\n                \"nullable\": true,\n                \"type\": \"string\",\n                \"description\": \"The *assignee section* is a subdivision of a project that groups tasks together in the assignee's \\\"My Tasks\\\" list. It can either be a header above a list of tasks in a list view or a column in a board view of \\\"My Tasks.\\\"\\nThe `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user's \\\"My Tasks\\\" list.\",\n                \"example\": \"12345\"\n              }\n            }\n          }\n        ]\n      },\n      \"TaskBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TaskCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"approval_status\": {\n                \"type\": \"string\",\n                \"description\": \"*Conditional* Reflects the approval status of this task. This field is kept in sync with `completed`, meaning `pending` translates to false while `approved`, `rejected`, and `changes_requested` translate to true. If you set completed to true, this field will be set to `approved`.\",\n                \"enum\": [\n                  \"pending\",\n                  \"approved\",\n                  \"rejected\",\n                  \"changes_requested\"\n                ],\n                \"example\": \"pending\"\n              },\n              \"assignee_status\": {\n                \"description\": \"Scheduling status of this task for the user it is assigned to. This field can only be set if the assignee is non-null.\\nSetting this field to \\\"inbox\\\" or \\\"upcoming\\\" inserts it at the top of the section, while the other options will insert at the bottom.\",\n                \"type\": \"string\",\n                \"enum\": [\"today\", \"upcoming\", \"later\", \"new\", \"inbox\"],\n                \"example\": \"upcoming\"\n              },\n              \"completed\": {\n                \"description\": \"True if the task is currently marked complete, false if not.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              },\n              \"completed_at\": {\n                \"description\": \"The time at which this task was completed, or null if the task is incomplete.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"nullable\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"completed_by\": {\n                \"readOnly\": true,\n                \"$ref\": \"#/components/schemas/UserCompact\"\n              },\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"dependencies\": {\n                \"description\": \"[Opt In](/docs/input-output-options). Array of resources referencing tasks that this task depends on. The objects contain only the gid of the dependency.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/AsanaResource\" },\n                \"readOnly\": true\n              },\n              \"dependents\": {\n                \"description\": \"[Opt In](/docs/input-output-options). Array of resources referencing tasks that depend on this task. The objects contain only the ID of the dependent.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/AsanaResource\" },\n                \"readOnly\": true\n              },\n              \"due_at\": {\n                \"description\": \"The UTC date and time on which this task is due, or null if the task has no due time. This takes a UTC timestamp and should not be used together with `due_on`.\",\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2019-09-15T02:06:58.147Z\",\n                \"nullable\": true\n              },\n              \"due_on\": {\n                \"description\": \"The localized date on which this task is due, or null if the task has no due date.  This takes a date with `YYYY-MM-DD` format and should not be used together with due_at.\",\n                \"type\": \"string\",\n                \"format\": \"date\",\n                \"example\": \"2019-09-15\",\n                \"nullable\": true\n              },\n              \"external\": {\n                \"description\": \"*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/input-output-options).\\nThe external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"gid\": { \"type\": \"string\", \"example\": \"1234\" },\n                  \"data\": {\n                    \"type\": \"string\",\n                    \"example\": \"A blob of information.\"\n                  }\n                },\n                \"example\": { \"gid\": \"my_gid\", \"data\": \"A blob of information\" }\n              },\n              \"html_notes\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The notes of the text with formatting as HTML.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eMittens \u003cem\u003ereally\u003c/em\u003e likes the stuff from Humboldt.\u003c/body\u003e\"\n              },\n              \"hearted\": {\n                \"description\": \"*Deprecated - please use liked instead* True if the task is hearted by the authorized user, false if not.\",\n                \"type\": \"boolean\",\n                \"example\": true,\n                \"readOnly\": true\n              },\n              \"hearts\": {\n                \"description\": \"*Deprecated - please use likes instead* Array of likes for users who have hearted this task.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"is_rendered_as_separator\": {\n                \"description\": \"[Opt In](/docs/input-output-options). In some contexts tasks can be rendered as a visual separator; for instance, subtasks can appear similar to [sections](/docs/asana-sections) without being true `section` objects. If a `task` object is rendered this way in any context it will have the property `is_rendered_as_separator` set to `true`.\",\n                \"type\": \"boolean\",\n                \"example\": false,\n                \"readOnly\": true\n              },\n              \"liked\": {\n                \"description\": \"True if the task is liked by the authorized user, false if not.\",\n                \"type\": \"boolean\",\n                \"example\": true\n              },\n              \"likes\": {\n                \"description\": \"Array of likes for users who have liked this task.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"memberships\": {\n                \"description\": \"*Create-only*. Array of projects this task is associated with and the section it is in. At task creation time, this array can be used to add the task to specific sections. After task creation, these associations can be modified using the `addProject` and `removeProject` endpoints. Note that over time, more types of memberships may be added to this property.\",\n                \"type\": \"array\",\n                \"readOnly\": true,\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"project\": {\n                      \"$ref\": \"#/components/schemas/ProjectCompact\"\n                    },\n                    \"section\": { \"$ref\": \"#/components/schemas/SectionCompact\" }\n                  }\n                }\n              },\n              \"modified_at\": {\n                \"description\": \"The time at which this task was last modified.\\n\\n*Note: This does not currently reflect any changes in\\nassociations such as projects or comments that may have been\\nadded or removed from the task.*\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"name\": {\n                \"description\": \"Name of the task. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.\",\n                \"type\": \"string\",\n                \"example\": \"Buy catnip\"\n              },\n              \"notes\": {\n                \"description\": \"More detailed, free-form textual information associated with the task.\",\n                \"type\": \"string\",\n                \"example\": \"Mittens really likes the stuff from Humboldt.\"\n              },\n              \"num_hearts\": {\n                \"description\": \"*Deprecated - please use likes instead* The number of users who have hearted this task.\",\n                \"type\": \"integer\",\n                \"example\": 5,\n                \"readOnly\": true\n              },\n              \"num_likes\": {\n                \"description\": \"The number of users who have liked this task.\",\n                \"type\": \"integer\",\n                \"example\": 5,\n                \"readOnly\": true\n              },\n              \"num_subtasks\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The number of subtasks on this task.\\n\",\n                \"type\": \"integer\",\n                \"example\": 3,\n                \"readOnly\": true\n              },\n              \"resource_subtype\": {\n                \"type\": \"string\",\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\\nThe resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.\",\n                \"enum\": [\"default_task\", \"milestone\", \"section\", \"approval\"],\n                \"example\": \"default_task\"\n              },\n              \"start_on\": {\n                \"description\": \"The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format.\\n*Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date\",\n                \"example\": \"2019-09-14\"\n              },\n              \"start_at\": {\n                \"description\": \"Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`.\\n*Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"format\": \"date\",\n                \"example\": \"2019-09-14T02:06:58.147Z\"\n              }\n            }\n          }\n        ]\n      },\n      \"TaskCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"The *task* is the basic object around which many operations in Asana are centered.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the task.\",\n                \"type\": \"string\",\n                \"example\": \"Bug Task\"\n              },\n              \"resource_subtype\": {\n                \"type\": \"string\",\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\\nThe resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.\",\n                \"enum\": [\"default_task\", \"milestone\", \"section\", \"approval\"],\n                \"example\": \"default_task\"\n              }\n            }\n          }\n        ]\n      },\n      \"TaskDuplicateRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name of the new task.\",\n            \"type\": \"string\",\n            \"example\": \"New Task Name\"\n          },\n          \"include\": {\n            \"description\": \"The fields that will be duplicated to the new task.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"notes\",\n              \"assignee\",\n              \"subtasks\",\n              \"attachments\",\n              \"tags\",\n              \"followers\",\n              \"projects\",\n              \"dates\",\n              \"dependencies\",\n              \"parent\"\n            ],\n            \"example\": [\"notes\", \"assignee\"]\n          }\n        }\n      },\n      \"TaskSetParentRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"parent\": {\n            \"description\": \"The new parent of the task, or `null` for no parent.\",\n            \"type\": \"string\",\n            \"example\": \"987654\"\n          },\n          \"insert_after\": {\n            \"description\": \"A subtask of the parent to insert the task after, or `null` to insert at the beginning of the list.\",\n            \"type\": \"string\",\n            \"example\": \"null\"\n          },\n          \"insert_before\": {\n            \"description\": \"A subtask of the parent to insert the task before, or `null` to insert at the end of the list.\",\n            \"type\": \"string\",\n            \"example\": \"124816\"\n          }\n        },\n        \"required\": [\"parent\"]\n      },\n      \"TaskAddProjectRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"description\": \"The project to add the task to.\",\n            \"type\": \"string\",\n            \"example\": \"13579\"\n          },\n          \"insert_after\": {\n            \"description\": \"A task in the project to insert the task after, or `null` to insert at the beginning of the list.\",\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"124816\"\n          },\n          \"insert_before\": {\n            \"description\": \"A task in the project to insert the task before, or `null` to insert at the end of the list.\",\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"432134\"\n          },\n          \"section\": {\n            \"description\": \"A section in the project to insert the task into. The task will be inserted at the bottom of the section.\",\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"example\": \"987654\"\n          }\n        },\n        \"required\": [\"project\"]\n      },\n      \"TaskRemoveProjectRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"description\": \"The project to remove the task from.\",\n            \"type\": \"string\",\n            \"example\": \"13579\"\n          }\n        },\n        \"required\": [\"project\"]\n      },\n      \"TaskAddTagRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"description\": \"The tag to add to the task.\",\n            \"type\": \"string\",\n            \"example\": \"13579\"\n          }\n        },\n        \"required\": [\"tag\"]\n      },\n      \"TaskRemoveTagRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"description\": \"The tag to remove from the task.\",\n            \"type\": \"string\",\n            \"example\": \"13579\"\n          }\n        },\n        \"required\": [\"tag\"]\n      },\n      \"TaskAddFollowersRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"followers\": {\n            \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" },\n            \"example\": [\"13579\", \"321654\"]\n          }\n        },\n        \"required\": [\"followers\"]\n      },\n      \"TaskRemoveFollowersRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"followers\": {\n            \"description\": \"An array of strings identifying users. These can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" },\n            \"example\": [\"13579\", \"321654\"]\n          }\n        },\n        \"required\": [\"followers\"]\n      },\n      \"TaskCountResponse\": {\n        \"description\": \"A response object returned from the task count endpoint.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"num_tasks\": {\n            \"description\": \"The number of tasks in a project.\",\n            \"type\": \"integer\",\n            \"example\": 200\n          },\n          \"num_incomplete_tasks\": {\n            \"description\": \"The number of incomplete tasks in a project.\",\n            \"type\": \"integer\",\n            \"example\": 50\n          },\n          \"num_completed_tasks\": {\n            \"description\": \"The number of completed tasks in a project.\",\n            \"type\": \"integer\",\n            \"example\": 150\n          },\n          \"num_milestones\": {\n            \"description\": \"The number of milestones in a project.\",\n            \"type\": \"integer\",\n            \"example\": 10\n          },\n          \"num_incomplete_milestones\": {\n            \"description\": \"The number of incomplete milestones in a project.\",\n            \"type\": \"integer\",\n            \"example\": 7\n          },\n          \"num_completed_milestones\": {\n            \"description\": \"The number of completed milestones in a project.\",\n            \"type\": \"integer\",\n            \"example\": 3\n          }\n        }\n      },\n      \"TeamResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TeamBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"description\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The description of the team.\\n\",\n                \"type\": \"string\",\n                \"example\": \"All developers should be members of this team.\"\n              },\n              \"html_description\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The description of the team with formatting as HTML.\\n\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003e\u003cem\u003eAll\u003c/em\u003e developers should be members of this team.\u003c/body\u003e\"\n              },\n              \"organization\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"The organization/workspace the team belongs to.\\n\"\n                  }\n                ]\n              },\n              \"permalink_url\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"description\": \"A url that points directly to the object within Asana.\",\n                \"example\": \"https://app.asana.com/0/resource/123456789/list\"\n              },\n              \"visibility\": {\n                \"description\": \"The visibility of the team to users in the same organization\\n\",\n                \"type\": \"string\",\n                \"enum\": [\"secret\", \"request_to_join\", \"public\"]\n              }\n            }\n          }\n        ]\n      },\n      \"TeamRequest\": {\n        \"$ref\": \"#/components/schemas/TeamBase\",\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TeamBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"description\": {\n                \"description\": \"The description of the team.\\n\",\n                \"type\": \"string\",\n                \"example\": \"All developers should be members of this team.\"\n              },\n              \"html_description\": {\n                \"description\": \"The description of the team with formatting as HTML.\\n\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003e\u003cem\u003eAll\u003c/em\u003e developers should be members of this team.\u003c/body\u003e\"\n              },\n              \"organization\": {\n                \"type\": \"string\",\n                \"description\": \"The organization/workspace the team belongs to.\\n\",\n                \"example\": \"123456789\"\n              },\n              \"visibility\": {\n                \"description\": \"The visibility of the team to users in the same organization\\n\",\n                \"type\": \"string\",\n                \"enum\": [\"secret\", \"request_to_join\", \"public\"]\n              }\n            }\n          }\n        ]\n      },\n      \"TeamBase\": { \"$ref\": \"#/components/schemas/TeamCompact\" },\n      \"TeamCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the team.\",\n                \"type\": \"string\",\n                \"example\": \"Marketing\"\n              }\n            }\n          }\n        ]\n      },\n      \"TeamMembershipResponse\": {\n        \"$ref\": \"#/components/schemas/TeamMembershipBase\"\n      },\n      \"TeamMembershipBase\": {\n        \"$ref\": \"#/components/schemas/TeamMembershipCompact\"\n      },\n      \"TeamMembershipCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"This object represents a user's connection to a team.\",\n            \"properties\": {\n              \"user\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"team\": { \"$ref\": \"#/components/schemas/TeamCompact\" },\n              \"is_guest\": {\n                \"type\": \"boolean\",\n                \"description\": \"Describes if the user is a guest in the team.\",\n                \"example\": false\n              }\n            }\n          }\n        ]\n      },\n      \"UserResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/UserBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"email\": {\n                \"type\": \"string\",\n                \"format\": \"email\",\n                \"readOnly\": true,\n                \"description\": \"The user's email address.\",\n                \"example\": \"gsanchez@example.com\"\n              },\n              \"photo\": {\n                \"type\": \"object\",\n                \"nullable\": true,\n                \"properties\": {\n                  \"image_21x21\": { \"type\": \"string\", \"format\": \"uri\" },\n                  \"image_27x27\": { \"type\": \"string\", \"format\": \"uri\" },\n                  \"image_36x36\": { \"type\": \"string\", \"format\": \"uri\" },\n                  \"image_60x60\": { \"type\": \"string\", \"format\": \"uri\" },\n                  \"image_128x128\": { \"type\": \"string\", \"format\": \"uri\" }\n                },\n                \"readOnly\": true,\n                \"description\": \"A map of the user’s profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, and 128. Images are in PNG format.\",\n                \"example\": {\n                  \"image_21x21\": \"https://...\",\n                  \"image_27x27\": \"https://...\",\n                  \"image_36x36\": \"https://...\",\n                  \"image_60x60\": \"https://...\",\n                  \"image_128x128\": \"https://...\"\n                }\n              },\n              \"workspaces\": {\n                \"description\": \"Workspaces and organizations this user may access.\\nNote\\\\: The API will only return workspaces and organizations that also contain the authenticated user.\",\n                \"readOnly\": true,\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/WorkspaceCompact\" }\n              }\n            }\n          }\n        ]\n      },\n      \"UserBase\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n      \"UserCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"*Read-only except when same user as requester*. The user’s name.\",\n                \"example\": \"Greg Sanchez\"\n              }\n            }\n          }\n        ]\n      },\n      \"TeamAddUserRequest\": {\n        \"type\": \"object\",\n        \"description\": \"A user identification object for specification with the addUser/removeUser endpoints.\",\n        \"properties\": {\n          \"user\": {\n            \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"TeamRemoveUserRequest\": {\n        \"type\": \"object\",\n        \"description\": \"A user identification object for specification with the addUser/removeUser endpoints.\",\n        \"properties\": {\n          \"user\": {\n            \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"UserTaskListResponse\": {\n        \"$ref\": \"#/components/schemas/UserTaskListBase\"\n      },\n      \"UserTaskListBase\": {\n        \"$ref\": \"#/components/schemas/UserTaskListCompact\"\n      },\n      \"UserTaskListCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A user task list represents the tasks assigned to a particular user. It provides API access to a user’s “My Tasks” view in Asana.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the user task list.\",\n                \"type\": \"string\",\n                \"example\": \"My Tasks in My Workspace\"\n              },\n              \"owner\": {\n                \"description\": \"The owner of the user task list, i.e. the person whose My Tasks is represented by this resource.\",\n                \"readOnly\": true,\n                \"allOf\": [{ \"$ref\": \"#/components/schemas/UserCompact\" }]\n              },\n              \"workspace\": {\n                \"description\": \"The workspace in which the user task list is located.\",\n                \"readOnly\": true,\n                \"allOf\": [{ \"$ref\": \"#/components/schemas/WorkspaceCompact\" }]\n              }\n            }\n          }\n        ]\n      },\n      \"WebhookResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/WebhookCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"last_failure_at\": {\n                \"description\": \"The timestamp when the webhook last received an error when sending an event to the target.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"last_failure_content\": {\n                \"description\": \"The contents of the last error response sent to the webhook when attempting to deliver events to the target.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"500 Server Error\\\\n\\\\nCould not complete the request\"\n              },\n              \"last_success_at\": {\n                \"description\": \"The timestamp when the webhook last successfully sent an event to the target.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"filters\": {\n                \"description\": \"Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"allOf\": [\n                    { \"$ref\": \"#/components/schemas/WebhookFilter\" },\n                    {\n                      \"description\": \"A set of filters to specify a whitelist for what types of events will be delivered.\"\n                    },\n                    { \"type\": \"object\" }\n                  ]\n                }\n              }\n            }\n          }\n        ]\n      },\n      \"WebhookRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"resource\": {\n            \"description\": \"A resource ID to subscribe to. Many Asana resources are valid to create webhooks on, but higher-level resources require filters.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"target\": {\n            \"description\": \"The URL to receive the HTTP POST. The full URL will be used to deliver events from this webhook (including parameters) which allows encoding of application-specific state when the webhook is created.\",\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"example\": \"https://example.com/receive-webhook/7654?app_specific_param=app_specific_value\"\n          },\n          \"filters\": {\n            \"type\": \"array\",\n            \"description\": \"An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.\",\n            \"items\": {\n              \"allOf\": [\n                { \"$ref\": \"#/components/schemas/WebhookFilter\" },\n                {\n                  \"description\": \"A set of filters to specify a whitelist for what types of events will be delivered.\"\n                },\n                { \"type\": \"object\" }\n              ]\n            }\n          }\n        },\n        \"required\": [\"resource\", \"target\"]\n      },\n      \"WebhookCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"Webhook objects represent the state of an active subscription for a server to be updated with information from Asana. This schema represents the subscription itself, not the objects that are sent to the server. For information on those please refer to the [Event](/docs/tocS_Event) schema.\",\n            \"properties\": {\n              \"active\": {\n                \"description\": \"If true, the webhook will send events - if false it is considered inactive and will not generate events.\",\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"example\": false\n              },\n              \"resource\": { \"$ref\": \"#/components/schemas/AsanaNamedResource\" },\n              \"target\": {\n                \"description\": \"The URL to receive the HTTP POST.\",\n                \"type\": \"string\",\n                \"format\": \"uri\",\n                \"readOnly\": true,\n                \"example\": \"https://example.com/receive-webhook/7654\"\n              }\n            }\n          }\n        ]\n      },\n      \"WebhookFilter\": {\n        \"type\": \"object\",\n        \"description\": \"A WebhookFilter can be passed on creation of a webhook in order to filter the types of actions that trigger delivery of an [Event](/docs/tocS_Event)\",\n        \"properties\": {\n          \"resource_type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of the resource which created the event when modified; for example, to filter to changes on regular tasks this field should be set to `task`.\",\n            \"example\": \"task\"\n          },\n          \"resource_subtype\": {\n            \"description\": \"The resource subtype of the resource that the filter applies to. This should be set to the same value as is returned on the `resource_subtype` field on the resources themselves.\",\n            \"type\": \"string\",\n            \"example\": \"milestone\"\n          },\n          \"action\": {\n            \"type\": \"string\",\n            \"description\": \"The type of change on the **resource** to pass through the filter. For more information refer to `Event.action` in the [Event](/docs/tocS_Event) schema. This can be one of `changed`, `added`, `removed`, `deleted`, and `undeleted` depending on the nature of what has occurred on the resource.\",\n            \"example\": \"changed\"\n          },\n          \"fields\": {\n            \"type\": \"array\",\n            \"description\": \"*Conditional.* A whitelist of fields for events which will pass the filter when the resource is changed. These can be any combination of the fields on the resources themselves. This field is only valid for `action` of type `changed`\",\n            \"items\": { \"type\": \"string\" },\n            \"example\": [\"due_at\", \"due_on\", \"dependencies\"]\n          }\n        }\n      },\n      \"WorkspaceResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/WorkspaceBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"email_domains\": {\n                \"description\": \"The email domains that are associated with this workspace.\",\n                \"type\": \"array\",\n                \"items\": { \"type\": \"string\", \"format\": \"uri\" },\n                \"example\": [\"asana.com\"]\n              },\n              \"is_organization\": {\n                \"description\": \"Whether the workspace is an *organization*.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              }\n            }\n          }\n        ]\n      },\n      \"WorkspaceRequest\": { \"$ref\": \"#/components/schemas/WorkspaceBase\" },\n      \"WorkspaceBase\": { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n      \"WorkspaceCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"The name of the workspace.\",\n                \"type\": \"string\",\n                \"example\": \"My Company Workspace\"\n              }\n            }\n          }\n        ]\n      },\n      \"WorkspaceAddUserRequest\": {\n        \"type\": \"object\",\n        \"description\": \"A user identification object for specification with the addUser/removeUser endpoints.\",\n        \"properties\": {\n          \"user\": {\n            \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"WorkspaceRemoveUserRequest\": {\n        \"type\": \"object\",\n        \"description\": \"A user identification object for specification with the addUser/removeUser endpoints.\",\n        \"properties\": {\n          \"user\": {\n            \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"WorkspaceMembershipResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/WorkspaceMembershipBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user_task_list\": {\n                \"$ref\": \"#/components/schemas/UserTaskListResponse\",\n                \"description\": \"The user's \\\"My Tasks\\\" in the workspace.\",\n                \"readOnly\": true\n              },\n              \"is_active\": {\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"description\": \"Reflects if this user still a member of the workspace.\"\n              },\n              \"is_admin\": {\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"description\": \"Reflects if this user is an admin of the workspace.\"\n              },\n              \"is_guest\": {\n                \"type\": \"boolean\",\n                \"readOnly\": true,\n                \"description\": \"Reflects if this user is a guest of the workspace.\"\n              }\n            }\n          }\n        ]\n      },\n      \"WorkspaceMembershipBase\": {\n        \"$ref\": \"#/components/schemas/WorkspaceMembershipCompact\"\n      },\n      \"WorkspaceMembershipCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"This object determines if a user is a member of a workspace.\",\n            \"properties\": {\n              \"user\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"workspace\": { \"$ref\": \"#/components/schemas/WorkspaceCompact\" }\n            }\n          }\n        ]\n      },\n      \"AuditLogEvent\": {\n        \"description\": \"An object representing a single event within an Asana domain.\\n\\nEvery audit log event is comprised of an `event_type`, `actor`, `resource`, and `context`. Some events will include additional metadata about the event under `details`. See our [currently supported list of events](/docs/supported-auditlogevents) for more details.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"gid\": {\n            \"description\": \"Globally unique identifier of the `AuditLogEvent`, as a string.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"created_at\": {\n            \"description\": \"The time the event was created.\",\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"example\": \"2021-01-01T00:00:00.000Z\"\n          },\n          \"event_type\": {\n            \"description\": \"The type of the event.\",\n            \"type\": \"string\",\n            \"example\": \"task_deleted\"\n          },\n          \"event_category\": {\n            \"description\": \"The category that this `event_type` belongs to.\",\n            \"type\": \"string\",\n            \"example\": \"deletion\"\n          },\n          \"actor\": {\n            \"allOf\": [{ \"$ref\": \"#/components/schemas/AuditLogEventActor\" }]\n          },\n          \"resource\": {\n            \"allOf\": [{ \"$ref\": \"#/components/schemas/AuditLogEventResource\" }]\n          },\n          \"details\": {\n            \"allOf\": [{ \"$ref\": \"#/components/schemas/AuditLogEventDetails\" }]\n          },\n          \"context\": {\n            \"allOf\": [{ \"$ref\": \"#/components/schemas/AuditLogEventContext\" }]\n          }\n        }\n      },\n      \"AuditLogEventActor\": {\n        \"description\": \"The entity that triggered the event. Will typically be a user.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"actor_type\": {\n            \"description\": \"The type of actor.\\nCan be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"user\",\n              \"asana\",\n              \"asana_support\",\n              \"anonymous\",\n              \"external_administrator\"\n            ],\n            \"example\": \"user\"\n          },\n          \"gid\": {\n            \"description\": \"Globally unique identifier of the actor, if it is a user.\",\n            \"type\": \"string\",\n            \"example\": \"1111\"\n          },\n          \"name\": {\n            \"description\": \"The name of the actor, if it is a user.\",\n            \"type\": \"string\",\n            \"example\": \"Greg Sanchez\"\n          },\n          \"email\": {\n            \"description\": \"The email of the actor, if it is a user.\",\n            \"type\": \"string\",\n            \"example\": \"gregsanchez@example.com\"\n          }\n        }\n      },\n      \"AuditLogEventContext\": {\n        \"description\": \"The context from which this event originated.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"context_type\": {\n            \"description\": \"The type of context.\\nCan be one of `web`, `desktop`, `mobile`, `asana_support`, `asana`, `email`, or `api`.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"web\",\n              \"desktop\",\n              \"mobile\",\n              \"asana_support\",\n              \"asana\",\n              \"email\",\n              \"api\"\n            ],\n            \"example\": \"web\"\n          },\n          \"api_authentication_method\": {\n            \"description\": \"The authentication method used in the context of an API request.\\nOnly present if the `context_type` is `api`. Can be one of `cookie`, `oauth`, `personal_access_token`, or `service_account`.\",\n            \"type\": \"string\",\n            \"enum\": [\n              \"cookie\",\n              \"oauth\",\n              \"personal_access_token\",\n              \"service_account\"\n            ]\n          },\n          \"client_ip_address\": {\n            \"description\": \"The IP address of the client that initiated the event, if applicable.\",\n            \"type\": \"string\",\n            \"example\": \"1.1.1.1\"\n          },\n          \"user_agent\": {\n            \"description\": \"The user agent of the client that initiated the event, if applicable.\",\n            \"type\": \"string\",\n            \"example\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n          },\n          \"oauth_app_name\": {\n            \"description\": \"The name of the OAuth App that initiated the event.\\nOnly present if the `api_authentication_method` is `oauth`.\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AuditLogEventDetails\": {\n        \"description\": \"Event specific details. The schema will vary depending on the `event_type`.\",\n        \"type\": \"object\"\n      },\n      \"AuditLogEventResource\": {\n        \"description\": \"The primary object that was affected by this event.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"resource_type\": {\n            \"description\": \"The type of resource.\",\n            \"type\": \"string\",\n            \"example\": \"task\"\n          },\n          \"resource_subtype\": {\n            \"description\": \"The subtype of resource. Most resources will not have a subtype.\",\n            \"type\": \"string\",\n            \"example\": \"milestone\"\n          },\n          \"gid\": {\n            \"description\": \"Globally unique identifier of the resource.\",\n            \"type\": \"string\",\n            \"example\": \"1111\"\n          },\n          \"name\": {\n            \"description\": \"The name of the resource.\",\n            \"type\": \"string\",\n            \"example\": \"Example Task\"\n          },\n          \"email\": {\n            \"description\": \"The email of the resource, if applicable.\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GoalAddSubgoalRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"subgoal\"],\n        \"properties\": {\n          \"subgoal\": {\n            \"description\": \"The goal gid to add as subgoal to a parent goal\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"insert_before\": {\n            \"description\": \"An id of a subgoal of this parent goal. The new subgoal will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"insert_after\": {\n            \"description\": \"An id of a subgoal of this parent goal. The new subgoal will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"GoalAddSupportingWorkRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"supporting_work\"],\n        \"properties\": {\n          \"supporting_work\": {\n            \"description\": \"The project/portfolio gid to add as supporting work for a goal\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"GoalBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the goal.\",\n                \"example\": \"Grow web traffic by 30%\"\n              },\n              \"html_notes\": {\n                \"type\": \"string\",\n                \"description\": \"The notes of the goal with formatting as HTML.\",\n                \"example\": \"\u003cbody\u003eStart building brand awareness.\u003c/body\u003e\"\n              },\n              \"notes\": {\n                \"type\": \"string\",\n                \"description\": \"Free-form textual information associated with the goal (i.e. its description).\",\n                \"example\": \"Start building brand awareness.\"\n              },\n              \"due_on\": {\n                \"type\": \"string\",\n                \"description\": \"The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.\",\n                \"example\": \"2019-09-15\",\n                \"nullable\": true\n              },\n              \"start_on\": {\n                \"type\": \"string\",\n                \"description\": \"The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.\",\n                \"example\": \"2019-09-14\",\n                \"nullable\": true\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect \\\"On Track\\\", \\\"At Risk\\\", and \\\"Off Track\\\", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`.\\n*Note* you can only write to this property if `metric` is set.\",\n                \"example\": \"green\",\n                \"nullable\": true\n              },\n              \"is_workspace_level\": {\n                \"type\": \"boolean\",\n                \"description\": \"*Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspace’s goals) or not. If it isn’t a workspace-level goal, it is a team-level goal, and is associated with the goal’s team.\",\n                \"example\": true\n              },\n              \"liked\": {\n                \"type\": \"boolean\",\n                \"description\": \"True if the goal is liked by the authorized user, false if not.\",\n                \"example\": false\n              }\n            }\n          }\n        ]\n      },\n      \"GoalCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"description\": \"The name of the goal.\",\n                \"example\": \"Grow web traffic by 30%\"\n              },\n              \"owner\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/UserCompact\" },\n                  { \"type\": \"object\", \"nullable\": true }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"GoalMetricBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"resource_subtype\": {\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"number\",\n                \"enum\": [\"number\"]\n              },\n              \"precision\": {\n                \"description\": \"*Conditional*. Only relevant for goal metrics of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\",\n                \"type\": \"integer\",\n                \"example\": 2\n              },\n              \"unit\": {\n                \"description\": \"A supported unit of measure for the goal metric, or none.\",\n                \"type\": \"string\",\n                \"enum\": [\"none\", \"currency\", \"percentage\"]\n              },\n              \"currency_code\": {\n                \"description\": \"ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"example\": \"EUR\"\n              },\n              \"initial_number_value\": {\n                \"description\": \"This number is the start value of a goal metric of type number.\",\n                \"type\": \"number\",\n                \"example\": 5.2\n              },\n              \"target_number_value\": {\n                \"description\": \"This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.\",\n                \"type\": \"number\",\n                \"example\": 10.2\n              },\n              \"current_number_value\": {\n                \"description\": \"This number is the current value of a goal metric of type number.\",\n                \"type\": \"number\",\n                \"example\": 8.12\n              },\n              \"current_display_value\": {\n                \"description\": \"This string is the current value of a goal metric of type string.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"8.12\"\n              },\n              \"progress_source\": {\n                \"description\": \"This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, or calculated automatically from contributing subgoals or projects.\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"manual\",\n                  \"subgoal_progress\",\n                  \"project_task_completion\",\n                  \"project_milestone_completion\"\n                ],\n                \"example\": \"manual\"\n              }\n            }\n          }\n        ]\n      },\n      \"GoalMetricCurrentValueRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"current_number_value\": {\n                \"description\": \"*Conditional*. This number is the current value of a goal metric of type number.\",\n                \"type\": \"number\",\n                \"example\": 8.12\n              }\n            }\n          }\n        ]\n      },\n      \"GoalMetricRequest\": { \"$ref\": \"#/components/schemas/GoalMetricBase\" },\n      \"GoalRemoveSubgoalRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"subgoal\"],\n        \"properties\": {\n          \"subgoal\": {\n            \"description\": \"The goal gid to remove as subgoal from the parent goal\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          }\n        }\n      },\n      \"GoalRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/GoalBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"team\": {\n                \"type\": \"string\",\n                \"description\": \"*Conditional*. This property is only present when the `workspace` provided is an organization.\",\n                \"example\": \"12345\",\n                \"nullable\": true\n              },\n              \"workspace\": {\n                \"type\": \"string\",\n                \"description\": \"The `gid` of a workspace.\",\n                \"example\": \"12345\"\n              },\n              \"followers\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"description\": \"The `gid` of a user.\"\n                },\n                \"example\": [\"12345\"]\n              },\n              \"time_period\": {\n                \"type\": \"string\",\n                \"description\": \"The `gid` of a time period.\",\n                \"example\": \"12345\",\n                \"nullable\": true\n              },\n              \"owner\": {\n                \"type\": \"string\",\n                \"description\": \"The `gid` of a user.\",\n                \"example\": \"12345\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"GoalResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/GoalBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"likes\": {\n                \"description\": \"Array of likes for users who have liked this goal.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"num_likes\": {\n                \"description\": \"The number of users who have liked this goal.\",\n                \"type\": \"integer\",\n                \"readOnly\": true,\n                \"example\": 5\n              },\n              \"team\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/TeamCompact\" },\n                  { \"type\": \"object\", \"nullable\": true }\n                ],\n                \"description\": \"*Conditional*. This property is only present when the `workspace` provided is an organization.\"\n              },\n              \"workspace\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/WorkspaceCompact\" },\n                  { \"type\": \"object\" }\n                ]\n              },\n              \"followers\": {\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n                \"description\": \"Array of users who are members of this goal.\"\n              },\n              \"time_period\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/TimePeriodCompact\" },\n                  { \"type\": \"object\", \"nullable\": true }\n                ]\n              },\n              \"metric\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/GoalMetricBase\" },\n                  { \"type\": \"object\", \"nullable\": true }\n                ]\n              },\n              \"owner\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/UserCompact\" },\n                  { \"type\": \"object\", \"nullable\": true }\n                ]\n              },\n              \"current_status_update\": {\n                \"description\": \"The latest `status_update` posted to this goal.\",\n                \"nullable\": true,\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/StatusUpdateCompact\" }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectBriefBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectBriefCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"title\": {\n                \"description\": \"The title of the project brief.\",\n                \"type\": \"string\",\n                \"example\": \"Stuff to buy — Project Brief\"\n              },\n              \"html_text\": {\n                \"description\": \"HTML formatted text for the project brief.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eThis is a \u003cstrong\u003eproject brief\u003c/strong\u003e.\u003c/body\u003e\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectBriefCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *Project Brief* allows you to explain the what and why of the project to your team.\"\n          }\n        ]\n      },\n      \"ProjectBriefRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectBriefBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"text\": {\n                \"description\": \"The plain text of the project brief. When writing to a project brief, you can specify either `html_text` (preferred) or `text`, but not both.\",\n                \"type\": \"string\",\n                \"example\": \"This is a project brief.\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectBriefResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectBriefBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"text\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The plain text of the project brief.\",\n                \"type\": \"string\",\n                \"example\": \"This is a project brief.\"\n              },\n              \"permalink_url\": {\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"description\": \"A url that points directly to the object within Asana.\",\n                \"example\": \"https://app.asana.com/0/11111111/22222222\"\n              },\n              \"project\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"The project with which this project brief is associated.\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectTemplateCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.\",\n            \"properties\": {\n              \"name\": {\n                \"description\": \"Name of the project template.\",\n                \"type\": \"string\",\n                \"example\": \"Packing list\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectTemplateBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/ProjectTemplateCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"description\": {\n                \"description\": \"Free-form textual information associated with the project template\",\n                \"type\": \"string\",\n                \"example\": \"These are things we need to pack for a trip.\"\n              },\n              \"html_description\": {\n                \"description\": \"The description of the project template with formatting as HTML.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eThese are things we need to pack for a trip.\u003c/body\u003e\"\n              },\n              \"public\": {\n                \"description\": \"True if the project template is public to its team.\",\n                \"type\": \"boolean\",\n                \"example\": false\n              },\n              \"owner\": {\n                \"description\": \"The current owner of the project template, may be null.\",\n                \"nullable\": true,\n                \"allOf\": [{ \"$ref\": \"#/components/schemas/UserCompact\" }]\n              },\n              \"team\": {\n                \"allOf\": [{ \"$ref\": \"#/components/schemas/TeamCompact\" }]\n              },\n              \"requested_dates\": {\n                \"description\": \"Array of date variables in this project template. Calendar dates must be provided for these variables when instantiating a project.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/DateVariableCompact\" },\n                \"readOnly\": true\n              },\n              \"color\": {\n                \"description\": \"Color of the project template.\",\n                \"type\": \"string\",\n                \"nullable\": true,\n                \"enum\": [\n                  \"dark-pink\",\n                  \"dark-green\",\n                  \"dark-blue\",\n                  \"dark-red\",\n                  \"dark-teal\",\n                  \"dark-brown\",\n                  \"dark-orange\",\n                  \"dark-purple\",\n                  \"dark-warm-gray\",\n                  \"light-pink\",\n                  \"light-green\",\n                  \"light-blue\",\n                  \"light-red\",\n                  \"light-teal\",\n                  \"light-brown\",\n                  \"light-orange\",\n                  \"light-purple\",\n                  \"light-warm-gray\"\n                ],\n                \"example\": \"light-green\"\n              }\n            }\n          }\n        ]\n      },\n      \"ProjectTemplateResponse\": {\n        \"allOf\": [{ \"$ref\": \"#/components/schemas/ProjectTemplateBase\" }]\n      },\n      \"ProjectTemplateInstantiateProjectRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"name\", \"public\"],\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name of the new project.\",\n            \"type\": \"string\",\n            \"example\": \"New Project Name\"\n          },\n          \"team\": {\n            \"description\": \"*Conditional*. Sets the team of the new project. If the project template exists in an _organization_, you must specify a value for `team` and not `workspace`.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"workspace\": {\n            \"description\": \"*Conditional*. Sets the workspace of the new project. If the project template exists in a _workspace_, you must specify a value for `workspace` and not `team`.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"public\": {\n            \"description\": \"Sets the project to public to its team.\",\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"is_strict\": {\n            \"description\": \"*Optional*. If set to `true`, the endpoint returns an \\\"Unprocessable Entity\\\" error if you fail to provide a calendar date value for any date variable. If set to `false`, a default date is used for each unfulfilled date variable (e.g., the current date is used as the Start Date of a project).\",\n            \"type\": \"boolean\",\n            \"example\": true\n          },\n          \"requested_dates\": {\n            \"description\": \"Array of mappings of date variables to calendar dates.\",\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/DateVariableRequest\" }\n          }\n        }\n      },\n      \"DateVariableCompact\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gid\": {\n            \"description\": \"Globally unique identifier of date variable, as a string.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"12345\"\n          },\n          \"name\": {\n            \"description\": \"The name of the date variable.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"Start Date\"\n          },\n          \"description\": {\n            \"description\": \"The description of what the date variable is used for when instantiating a project.\",\n            \"type\": \"string\",\n            \"readOnly\": true,\n            \"example\": \"Choose a start date for your project.\"\n          }\n        }\n      },\n      \"DateVariableRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"gid\": {\n            \"description\": \"Globally unique identifier of date variable, as a string.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"value\": {\n            \"description\": \"The date with which the date variable should be replaced when instantiating a project. This takes a date with `YYYY-MM-DD` format.\",\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"format\": \"date-time\",\n            \"example\": \"2022-01-01\"\n          }\n        }\n      },\n      \"ProjectSaveAsTemplateRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"name\", \"public\"],\n        \"properties\": {\n          \"name\": {\n            \"description\": \"The name of the new project template.\",\n            \"type\": \"string\",\n            \"example\": \"New Project Template\"\n          },\n          \"team\": {\n            \"description\": \"Sets the team of the new project template. If the project exists in an organization, specify team and not workspace.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"workspace\": {\n            \"description\": \"Sets the workspace of the new project template. Only specify workspace if the project exists in a workspace.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"public\": {\n            \"description\": \"Sets the project template to public to its team.\",\n            \"type\": \"boolean\",\n            \"example\": true\n          }\n        }\n      },\n      \"StatusUpdateBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/StatusUpdateCompact\" },\n          {\n            \"type\": \"object\",\n            \"required\": [\"text\", \"status_type\"],\n            \"properties\": {\n              \"text\": {\n                \"description\": \"The text content of the status update.\",\n                \"type\": \"string\",\n                \"example\": \"The project is moving forward according to plan...\"\n              },\n              \"html_text\": {\n                \"description\": \"[Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.\",\n                \"type\": \"string\",\n                \"example\": \"\u003cbody\u003eThe project \u003cstrong\u003eis\u003c/strong\u003e moving forward according to plan...\u003c/body\u003e\"\n              },\n              \"status_type\": {\n                \"description\": \"The type associated with the status update. This represents the current state of the object this object is on.\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"on_track\",\n                  \"at_risk\",\n                  \"off_track\",\n                  \"on_hold\",\n                  \"complete\",\n                  \"achieved\",\n                  \"partial\",\n                  \"missed\",\n                  \"dropped\"\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"StatusUpdateCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.\",\n            \"properties\": {\n              \"title\": {\n                \"description\": \"The title of the status update.\",\n                \"type\": \"string\",\n                \"example\": \"Status Update - Jun 15\"\n              },\n              \"resource_subtype\": {\n                \"type\": \"string\",\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\\nThe `resource_subtype`s for `status` objects represent the type of their parent.\",\n                \"enum\": [\n                  \"project_status_update\",\n                  \"portfolio_status_update\",\n                  \"goal_status_update\"\n                ],\n                \"example\": \"project_status_update\",\n                \"readOnly\": true\n              }\n            }\n          }\n        ]\n      },\n      \"StatusUpdateRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/StatusUpdateBase\" },\n          {\n            \"type\": \"object\",\n            \"required\": [\"parent\"],\n            \"properties\": {\n              \"parent\": {\n                \"allOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"description\": \"The id of parent to send this status update to. This can be a project, goal or portfolio.\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"StatusUpdateResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/StatusUpdateBase\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"author\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"created_at\": {\n                \"description\": \"The time at which this resource was created.\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"created_by\": { \"$ref\": \"#/components/schemas/UserCompact\" },\n              \"hearted\": {\n                \"description\": \"*Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.\",\n                \"type\": \"boolean\",\n                \"example\": true,\n                \"readOnly\": true\n              },\n              \"hearts\": {\n                \"description\": \"*Deprecated - please use likes instead* Array of likes for users who have hearted this status.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"liked\": {\n                \"description\": \"True if the status is liked by the authorized user, false if not.\",\n                \"type\": \"boolean\",\n                \"example\": true\n              },\n              \"likes\": {\n                \"description\": \"Array of likes for users who have liked this status.\",\n                \"type\": \"array\",\n                \"items\": { \"$ref\": \"#/components/schemas/Like\" },\n                \"readOnly\": true\n              },\n              \"modified_at\": {\n                \"description\": \"The time at which this project status was last modified.\\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*\",\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"readOnly\": true,\n                \"example\": \"2012-02-22T02:06:58.147Z\"\n              },\n              \"num_hearts\": {\n                \"description\": \"*Deprecated - please use likes instead* The number of users who have hearted this status.\",\n                \"type\": \"integer\",\n                \"example\": 5,\n                \"readOnly\": true\n              },\n              \"num_likes\": {\n                \"description\": \"The number of users who have liked this status.\",\n                \"type\": \"integer\",\n                \"example\": 5,\n                \"readOnly\": true\n              },\n              \"parent\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"The parent of the status update. This can be a project, goal or portfolio, and indicates that this status was sent on that object.\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"TimePeriodBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TimePeriodCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"parent\": { \"$ref\": \"#/components/schemas/TimePeriodCompact\" }\n            }\n          }\n        ]\n      },\n      \"TimePeriodCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"end_on\": {\n                \"type\": \"string\",\n                \"description\": \"The localized end date of the time period in `YYYY-MM-DD` format.\",\n                \"example\": \"2019-09-14\"\n              },\n              \"start_on\": {\n                \"type\": \"string\",\n                \"description\": \"The localized start date of the time period in `YYYY-MM-DD` format.\",\n                \"example\": \"2019-09-13\"\n              },\n              \"period\": {\n                \"type\": \"string\",\n                \"description\": \"The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.\",\n                \"enum\": [\"FY\", \"H1\", \"H2\", \"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n                \"example\": \"Q1\"\n              },\n              \"display_name\": {\n                \"type\": \"string\",\n                \"description\": \"A string representing the cadence code and the fiscal year.\",\n                \"example\": \"Q1 FY22\"\n              }\n            }\n          }\n        ]\n      },\n      \"TimePeriodResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/TimePeriodBase\" },\n          { \"type\": \"object\" }\n        ]\n      },\n      \"WebhookUpdateRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filters\": {\n            \"type\": \"array\",\n            \"description\": \"An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.\",\n            \"items\": {\n              \"allOf\": [\n                { \"$ref\": \"#/components/schemas/WebhookFilter\" },\n                {\n                  \"description\": \"A set of filters to specify a whitelist for what types of events will be delivered.\"\n                },\n                { \"type\": \"object\" }\n              ]\n            }\n          }\n        }\n      },\n      \"GoalRemoveSupportingRelationshipRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"supporting_resource\"],\n        \"properties\": {\n          \"supporting_resource\": {\n            \"description\": \"The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, or portfolio.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          }\n        }\n      },\n      \"GoalAddSupportingRelationshipRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"supporting_resource\"],\n        \"properties\": {\n          \"supporting_resource\": {\n            \"description\": \"The gid of the supporting resource to add to the parent goal. Must be the gid of a goal, project, or portfolio.\",\n            \"type\": \"string\",\n            \"example\": \"12345\"\n          },\n          \"insert_before\": {\n            \"description\": \"An id of a subgoal of this parent goal. The new subgoal will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified. Currently only supported when adding a subgoal.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"insert_after\": {\n            \"description\": \"An id of a subgoal of this parent goal. The new subgoal will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified. Currently only supported when adding a subgoal.\",\n            \"type\": \"string\",\n            \"example\": \"1331\"\n          },\n          \"contribution_weight\": {\n            \"description\": \"The weight that the supporting resource's progress will contribute to the supported goal's progress. This can only be 0 or 1.\",\n            \"type\": \"number\",\n            \"example\": 1\n          }\n        }\n      },\n      \"GoalRelationshipBase\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/GoalRelationshipCompact\" },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"supported_goal\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/GoalCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"readOnly\": true,\n                    \"description\": \"The goal that the supporting resource supports.\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"GoalRelationshipCompact\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/AsanaResource\" },\n          {\n            \"type\": \"object\",\n            \"description\": \"A *goal relationship* is an object representing the relationship between a goal and another goal, a project, or a portfolio.\",\n            \"properties\": {\n              \"resource_subtype\": {\n                \"description\": \"The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\",\n                \"type\": \"string\",\n                \"readOnly\": true,\n                \"example\": \"subgoal\",\n                \"enum\": [\"subgoal\", \"supporting_work\"]\n              },\n              \"supporting_resource\": {\n                \"allOf\": [\n                  { \"$ref\": \"#/components/schemas/ProjectCompact\" },\n                  {\n                    \"type\": \"object\",\n                    \"readOnly\": true,\n                    \"description\": \"The supporting resource that supports the goal. This can be either a project, portfolio, or goal.\"\n                  }\n                ]\n              },\n              \"contribution_weight\": {\n                \"description\": \"The weight that the supporting resource's progress contributes to the supported goal's progress. This can only be 0 or 1.\",\n                \"type\": \"number\",\n                \"example\": 1\n              }\n            }\n          }\n        ]\n      },\n      \"GoalRelationshipRequest\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/GoalRelationshipBase\" },\n          { \"type\": \"object\" }\n        ]\n      },\n      \"GoalRelationshipResponse\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/GoalRelationshipBase\" },\n          { \"type\": \"object\" }\n        ]\n      }\n    },\n    \"securitySchemes\": {\n      \"personalAccessToken\": {\n        \"type\": \"http\",\n        \"description\": \"A personal access token allows access to the api for the user who created it. This should be kept a secret and be treated like a password.\",\n        \"scheme\": \"bearer\"\n      },\n      \"oauth2\": {\n        \"type\": \"oauth2\",\n        \"description\": \"We require that applications designed to access the Asana API on behalf of multiple users implement OAuth 2.0.\\nAsana supports the Authorization Code Grant flow.\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"https://app.asana.com/-/oauth_authorize\",\n            \"tokenUrl\": \"https://app.asana.com/-/oauth_token\",\n            \"refreshUrl\": \"https://app.asana.com/-/oauth_token\",\n            \"scopes\": {\n              \"default\": \"Provides access to all endpoints documented in our API reference. If no scopes are requested, this scope is assumed by default.\",\n              \"openid\": \"Provides access to OpenID Connect ID tokens and the OpenID Connect user info endpoint.\",\n              \"email\": \"Provides access to the user’s email through the OpenID Connect user info endpoint.\",\n              \"profile\": \"Provides access to the user’s name and profile photo through the OpenID Connect user info endpoint.\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"paths\": {\n    \"/attachments/{attachment_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/attachment_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get an attachment\",\n        \"description\": \"Get the full record for a single attachment.\",\n        \"tags\": [\"Attachments\"],\n        \"operationId\": \"getAttachment\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the record for a single attachment.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/AttachmentResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"424\": { \"$ref\": \"#/components/responses/TooManyRequests\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" },\n          \"501\": { \"$ref\": \"#/components/responses/BadGateway\" },\n          \"503\": { \"$ref\": \"#/components/responses/ServiceUnavailable\" },\n          \"504\": { \"$ref\": \"#/components/responses/GatewayTimeout\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete an attachment\",\n        \"description\": \"Deletes a specific, existing attachment.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Attachments\"],\n        \"operationId\": \"deleteAttachment\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified attachment.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/attachments\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get attachments for a task\",\n        \"description\": \"Returns the compact records for all attachments on the task.\",\n        \"tags\": [\"Attachments\"],\n        \"operationId\": \"getAttachmentsForTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the compact records for all attachments on the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/AttachmentCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Upload an attachment\",\n        \"description\": \"Upload an attachment.\\n\\nThis method uploads an attachment to a task and returns the compact\\nrecord for the created attachment object. It is not possible to attach\\nfiles from third party services such as Dropbox, Box \u0026 Google Drive via\\nthe API. You must download the file content first and then upload it as\\nany other attachment.\\n\\nThe 100MB size limit on attachments in Asana is enforced on this endpoint.\\n\\nThis endpoint expects a multipart/form-data encoded request containing\\nthe full contents of the file to be uploaded.\\n\\nRequests made should follow the HTTP/1.1 specification that line\\nterminators are of the form `CRLF` or `\\\\r\\\\n` outlined\\n[here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules)\\nin order for the server to reliably and properly handle the request.\",\n        \"tags\": [\"Attachments\"],\n        \"operationId\": \"createAttachmentForTask\",\n        \"requestBody\": {\n          \"description\": \"The file you want to upload.\\n\\n*Note when using curl:*\\n\\nBe sure to add an `‘@’` before the file path, and use the `—form`\\noption instead of the `-d` option.\\n\\nWhen uploading PDFs with curl, force the content-type to be pdf by\\nappending the content type to the file path: `—form\\n“file=@file.pdf;type=application/pdf”`.\",\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/AttachmentRequest\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully uploaded the attachment to the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/AttachmentResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/batch\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Submit parallel requests\",\n        \"description\": \"Make multiple requests in parallel to Asana's API.\",\n        \"tags\": [\"Batch API\"],\n        \"operationId\": \"createBatchRequest\",\n        \"requestBody\": {\n          \"description\": \"The requests to batch together via the Batch API.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/BatchRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully completed the requested batch API operations.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/BatchResponse\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/custom_field_settings\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a project's custom fields\",\n        \"description\": \"Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` can be used to include more data than is returned in the compact representation. See the [getting started guide on input/output options](https://developers.asana.com/docs/#input-output-options) for more information.\",\n        \"tags\": [\"Custom Field Settings\"],\n        \"operationId\": \"getCustomFieldSettingsForProject\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved custom field settings objects for a project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CustomFieldSettingResponse\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/custom_field_settings\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a portfolio's custom fields\",\n        \"description\": \"Returns a list of all of the custom fields settings on a portfolio, in compact form.\",\n        \"tags\": [\"Custom Field Settings\"],\n        \"operationId\": \"getCustomFieldSettingsForPortfolio\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved custom field settings objects for a portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CustomFieldSettingResponse\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/custom_fields\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create a custom field\",\n        \"description\": \"Creates a new custom field in a workspace. Every custom field is required\\nto be created in a specific workspace, and this workspace cannot be\\nchanged once set.\\n\\nA custom field’s name must be unique within a workspace and not conflict\\nwith names of existing task properties such as ‘Due Date’ or ‘Assignee’.\\nA custom field’s type must be one of ‘text’, ‘enum’, or ‘number’.\\n\\nReturns the full record of the newly created custom field.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"createCustomField\",\n        \"requestBody\": {\n          \"description\": \"The custom field object to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/CustomFieldRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Custom field successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CustomFieldResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/custom_fields/{custom_field_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/custom_field_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a custom field\",\n        \"description\": \"Get the complete definition of a custom field’s metadata.\\n\\nSince custom fields can be defined for one of a number of types, and\\nthese types have different data and behaviors, there are fields that are\\nrelevant to a particular type. For instance, as noted above, enum_options\\nis only relevant for the enum type and defines the set of choices that\\nthe enum could represent. The examples below show some of these\\ntype-specific custom field definitions.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"getCustomField\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the complete definition of a custom field’s metadata.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CustomFieldResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a custom field\",\n        \"description\": \"A specific, existing custom field can be updated by making a PUT request on the URL for that custom field. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged\\nWhen using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the custom field.\\nA custom field’s `type` cannot be updated.\\nAn enum custom field’s `enum_options` cannot be updated with this endpoint. Instead see “Work With Enum Options” for information on how to update `enum_options`.\\nLocked custom fields can only be updated by the user who locked the field.\\nReturns the complete updated custom field record.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"updateCustomField\",\n        \"requestBody\": {\n          \"description\": \"The custom field object with all updated properties.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/CustomFieldRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The custom field was successfully updated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CustomFieldResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a custom field\",\n        \"description\": \"A specific, existing custom field can be deleted by making a DELETE request on the URL for that custom field.\\nLocked custom fields can only be deleted by the user who locked the field.\\nReturns an empty data record.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"deleteCustomField\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The custom field was successfully deleted.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/custom_fields\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a workspace's custom fields\",\n        \"description\": \"Returns a list of the compact representation of all of the custom fields in a workspace.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"getCustomFieldsForWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved all custom fields for the given workspace.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CustomFieldResponse\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/custom_fields/{custom_field_gid}/enum_options\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/custom_field_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create an enum option\",\n        \"description\": \"Creates an enum option and adds it to this custom field’s list of enum options. A custom field can have at most 50 enum options (including disabled options). By default new enum options are inserted at the end of a custom field’s list.\\nLocked custom fields can only have enum options added by the user who locked the field.\\nReturns the full record of the newly created enum option.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"createEnumOptionForCustomField\",\n        \"requestBody\": {\n          \"description\": \"The enum option object to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/EnumOptionRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Custom field enum option successfully created.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EnumOption\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/custom_fields/{custom_field_gid}/enum_options/insert\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/custom_field_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Reorder a custom field's enum\",\n        \"description\": \"Moves a particular enum option to be either before or after another specified enum option in the custom field.\\nLocked custom fields can only be reordered by the user who locked the field.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"insertEnumOptionForCustomField\",\n        \"requestBody\": {\n          \"description\": \"The enum option object to create.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/EnumOptionInsertRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Custom field enum option successfully reordered.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EnumOption\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/enum_options/{enum_option_gid}\": {\n      \"parameters\": [\n        {\n          \"name\": \"enum_option_gid\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"Globally unique identifier for the enum option.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"124578\"\n        },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"put\": {\n        \"summary\": \"Update an enum option\",\n        \"description\": \"Updates an existing enum option. Enum custom fields require at least one enabled enum option.\\nLocked custom fields can only be updated by the user who locked the field.\\nReturns the full record of the updated enum option.\",\n        \"tags\": [\"Custom Fields\"],\n        \"operationId\": \"updateEnumOption\",\n        \"requestBody\": {\n          \"description\": \"The enum option object to update\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/EnumOptionRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the specified custom field enum.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EnumOption\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/events\": {\n      \"parameters\": [\n        {\n          \"name\": \"resource\",\n          \"in\": \"query\",\n          \"required\": true,\n          \"description\": \"A resource ID to subscribe to. The resource can be a task or project.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345\"\n        },\n        {\n          \"name\": \"sync\",\n          \"in\": \"query\",\n          \"required\": false,\n          \"description\": \"A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated.\\n*Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token.If the sync token is too old (which may happen from time to time) the API will return a `412 Precondition Failed` error, and include a fresh sync token in the response.*\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"de4774f6915eae04714ca93bb2f5ee81\"\n        },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get events on a resource\",\n        \"description\": \"Returns the full record for all events that have occurred since the sync\\ntoken was created.\\n\\nA GET request to the endpoint /[path_to_resource]/events can be made in\\nlieu of including the resource ID in the data for the request.\\n\\n*Note: The resource returned will be the resource that triggered the\\nevent. This may be different from the one that the events were requested\\nfor. For example, a subscription to a project will contain events for\\ntasks contained within the project.*\",\n        \"tags\": [\"Events\"],\n        \"operationId\": \"getEvents\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved events.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"description\": \"The full record for all events that have occurred since the sync token was created.\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/EventResponse\" }\n                    },\n                    \"sync\": {\n                      \"description\": \"A sync token to be used with the next call to the events endpoint.\",\n                      \"type\": \"string\",\n                      \"example\": \"de4774f6915eae04714ca93bb2f5ee81\"\n                    },\n                    \"has_more\": {\n                      \"description\": \"Indicates whether there are more events to pull.\",\n                      \"type\": \"boolean\",\n                      \"example\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/jobs/{job_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/job_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a job by id\",\n        \"description\": \"Returns the full record for a job.\",\n        \"tags\": [\"Jobs\"],\n        \"operationId\": \"getJob\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved Job.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/JobResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/organization_exports\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create an organization export request\",\n        \"description\": \"This method creates a request to export an Organization. Asana will complete the export at some point after you create the request.\",\n        \"tags\": [\"Organization Exports\"],\n        \"operationId\": \"createOrganizationExport\",\n        \"requestBody\": {\n          \"description\": \"The organization to export.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/OrganizationExportRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created organization export request.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/OrganizationExportResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/organization_exports/{organization_export_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/organization_export_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get details on an org export request\",\n        \"description\": \"Returns details of a previously-requested Organization export.\",\n        \"tags\": [\"Organization Exports\"],\n        \"operationId\": \"getOrganizationExport\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved organization export object.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/OrganizationExportResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolio_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_query_param\" },\n        { \"$ref\": \"#/components/parameters/workspace_query_param\" },\n        { \"$ref\": \"#/components/parameters/user_query_param\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple portfolio memberships\",\n        \"description\": \"Returns a list of portfolio memberships in compact representation. You must specify `portfolio`, `portfolio` and `user`, or `workspace` and `user`.\",\n        \"tags\": [\"Portfolio Memberships\"],\n        \"operationId\": \"getPortfolioMemberships\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved portfolio memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/PortfolioMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolio_memberships/{portfolio_membership_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_membership_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a portfolio membership\",\n        \"description\": \"Returns the complete portfolio record for a single portfolio membership.\",\n        \"tags\": [\"Portfolio Memberships\"],\n        \"operationId\": \"getPortfolioMembership\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested portfolio membership.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/PortfolioMembershipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/portfolio_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/user_query_param\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get memberships from a portfolio\",\n        \"description\": \"Returns the compact portfolio membership records for the portfolio.\",\n        \"tags\": [\"Portfolio Memberships\"],\n        \"operationId\": \"getPortfolioMembershipsForPortfolio\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested portfolio's memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/PortfolioMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple portfolios\",\n        \"description\": \"Returns a list of the portfolios in compact representation that are owned by the current API user.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"getPortfolios\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The workspace or organization to filter portfolios on.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"1331\"\n          },\n          {\n            \"name\": \"owner\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The user who owns the portfolio. Currently, API users can only get a list of portfolios that they themselves own.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"14916\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved portfolios.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/PortfolioCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a portfolio\",\n        \"description\": \"Creates a new portfolio in the given workspace with the supplied name.\\n\\nNote that portfolios created in the Asana UI may have some state\\n(like the “Priority” custom field) which is automatically added\\nto the portfolio when it is created. Portfolios created via our\\nAPI will *not* be created with the same initial state to allow\\nintegrations to create their own starting state on a portfolio.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"createPortfolio\",\n        \"requestBody\": {\n          \"description\": \"The portfolio to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/PortfolioRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/PortfolioResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a portfolio\",\n        \"description\": \"Returns the complete portfolio record for a single portfolio.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"getPortfolio\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/PortfolioResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a portfolio\",\n        \"description\": \"An existing portfolio can be updated by making a PUT request on the URL for\\nthat portfolio. Only the fields provided in the `data` block will be updated;\\nany unspecified fields will remain unchanged.\\n\\nReturns the complete updated portfolio record.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"updatePortfolio\",\n        \"requestBody\": {\n          \"description\": \"The updated fields for the portfolio.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/PortfolioRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/PortfolioResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a portfolio\",\n        \"description\": \"An existing portfolio can be deleted by making a DELETE request on\\nthe URL for that portfolio.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"deletePortfolio\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/items\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get portfolio items\",\n        \"description\": \"Get a list of the items in compact form in a portfolio.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"getItemsForPortfolio\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested portfolio's items.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/addItem\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a portfolio item\",\n        \"description\": \"Add an item to a portfolio.\\nReturns an empty data block.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"addItemForPortfolio\",\n        \"requestBody\": {\n          \"description\": \"Information about the item being inserted.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/PortfolioAddItemRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the item to the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/removeItem\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a portfolio item\",\n        \"description\": \"Remove an item from a portfolio.\\nReturns an empty data block.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"removeItemForPortfolio\",\n        \"requestBody\": {\n          \"description\": \"Information about the item being removed.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/PortfolioRemoveItemRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the item from the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/addCustomFieldSetting\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a custom field to a portfolio\",\n        \"description\": \"Custom fields are associated with portfolios by way of custom field settings.  This method creates a setting for the portfolio.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"addCustomFieldSettingForPortfolio\",\n        \"requestBody\": {\n          \"description\": \"Information about the custom field setting.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/AddCustomFieldSettingRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the custom field to the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/removeCustomFieldSetting\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a custom field from a portfolio\",\n        \"description\": \"Removes a custom field setting from a portfolio.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"removeCustomFieldSettingForPortfolio\",\n        \"requestBody\": {\n          \"description\": \"Information about the custom field setting being removed.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/RemoveCustomFieldSettingRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the custom field from the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/addMembers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add users to a portfolio\",\n        \"description\": \"Adds the specified list of users as members of the portfolio.\\nReturns the updated portfolio record.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"addMembersForPortfolio\",\n        \"requestBody\": {\n          \"description\": \"Information about the members being added.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/AddMembersRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added members to the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/portfolios/{portfolio_gid}/removeMembers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/portfolio_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove users from a portfolio\",\n        \"description\": \"Removes the specified list of users from members of the portfolio.\\nReturns the updated portfolio record.\",\n        \"tags\": [\"Portfolios\"],\n        \"operationId\": \"removeMembersForPortfolio\",\n        \"requestBody\": {\n          \"description\": \"Information about the members being removed.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/RemoveMembersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the members from the portfolio.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/project_memberships/{project_membership_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_membership_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a project membership\",\n        \"description\": \"Returns the complete project record for a single project membership.\",\n        \"tags\": [\"Project Memberships\"],\n        \"operationId\": \"getProjectMembership\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested project membership.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectMembershipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/project_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/user_query_param\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get memberships from a project\",\n        \"description\": \"Returns the compact project membership records for the project.\",\n        \"tags\": [\"Project Memberships\"],\n        \"operationId\": \"getProjectMembershipsForProject\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested project's memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ProjectMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/project_statuses/{project_status_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_status_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a project status\",\n        \"description\": \"Returns the complete record for a single status update.\",\n        \"tags\": [\"Project Statuses\"],\n        \"operationId\": \"getProjectStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified project's status updates.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectStatusResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a project status\",\n        \"description\": \"Deletes a specific, existing project status update.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Project Statuses\"],\n        \"operationId\": \"deleteProjectStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified project status.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/project_statuses\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get statuses from a project\",\n        \"description\": \"Returns the compact project status update records for all updates on the project.\",\n        \"tags\": [\"Project Statuses\"],\n        \"operationId\": \"getProjectStatusesForProject\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/project_path_gid\" },\n          { \"$ref\": \"#/components/parameters/pretty\" },\n          { \"$ref\": \"#/components/parameters/fields\" },\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified project's status updates.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ProjectStatusCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a project status\",\n        \"description\": \"Creates a new status update on the project.\\nReturns the full record of the newly created project status update.\",\n        \"tags\": [\"Project Statuses\"],\n        \"operationId\": \"createProjectStatusForProject\",\n        \"requestBody\": {\n          \"description\": \"The project status to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ProjectStatusRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new story.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectStatusResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple projects\",\n        \"description\": \"Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"getProjects\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"description\": \"The workspace or organization to filter projects on.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"1331\"\n          },\n          {\n            \"name\": \"team\",\n            \"in\": \"query\",\n            \"description\": \"The team to filter projects on.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"14916\"\n          },\n          { \"$ref\": \"#/components/parameters/archived_query_param\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved projects.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a project\",\n        \"description\": \"Create a new project in a workspace or team.\\n\\nEvery project is required to be created in a specific workspace or\\norganization, and this cannot be changed once set. Note that you can use\\nthe `workspace` parameter regardless of whether or not it is an\\norganization.\\n\\nIf the workspace for your project is an organization, you must also\\nsupply a `team` to share the project with.\\n\\nReturns the full record of the newly created project.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"createProject\",\n        \"requestBody\": {\n          \"description\": \"The project to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/ProjectRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully retrieved projects.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a project\",\n        \"description\": \"Returns the complete project record for a single project.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"getProject\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a project\",\n        \"description\": \"A specific, existing project can be updated by making a PUT request on\\nthe URL for that project. Only the fields provided in the `data` block\\nwill be updated; any unspecified fields will remain unchanged.\\n\\nWhen using this method, it is best to specify only those fields you wish\\nto change, or else you may overwrite changes made by another user since\\nyou last retrieved the task.\\n\\nReturns the complete updated project record.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"updateProject\",\n        \"requestBody\": {\n          \"description\": \"The updated fields for the project.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/ProjectRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a project\",\n        \"description\": \"A specific, existing project can be deleted by making a DELETE request on\\nthe URL for that project.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"deleteProject\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/duplicate\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Duplicate a project\",\n        \"description\": \"Creates and returns a job that will asynchronously handle the duplication.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"duplicateProject\",\n        \"requestBody\": {\n          \"description\": \"Describes the duplicate's name and the elements that will be duplicated.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ProjectDuplicateRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the job to handle duplication.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/JobResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/projects\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get projects a task is in\",\n        \"description\": \"Returns a compact representation of all of the projects the task is in.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"getProjectsForTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the projects for the given task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}/projects\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a team's projects\",\n        \"description\": \"Returns the compact project records for all projects in the team.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"getProjectsForTeam\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          { \"$ref\": \"#/components/parameters/archived_query_param\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested team's projects.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a project in a team\",\n        \"description\": \"Creates a project shared with the given team.\\n\\nReturns the full record of the newly created project.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"createProjectForTeam\",\n        \"requestBody\": {\n          \"description\": \"The new project to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/ProjectRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the specified project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/projects\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get all projects in a workspace\",\n        \"description\": \"Returns the compact project records for all projects in the workspace.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"getProjectsForWorkspace\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          { \"$ref\": \"#/components/parameters/archived_query_param\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested workspace's projects.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a project in a workspace\",\n        \"description\": \"Returns the compact project records for all projects in the workspace.\\n\\nIf the workspace for your project is an organization, you must also\\nsupply a team to share the project with.\\n\\nReturns the full record of the newly created project.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"createProjectForWorkspace\",\n        \"requestBody\": {\n          \"description\": \"The new project to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/ProjectRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new project in the specified workspace.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/ProjectResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/addCustomFieldSetting\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a custom field to a project\",\n        \"description\": \"Custom fields are associated with projects by way of custom field settings.  This method creates a setting for the project.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"addCustomFieldSettingForProject\",\n        \"requestBody\": {\n          \"description\": \"Information about the custom field setting.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/AddCustomFieldSettingRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the custom field to the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CustomFieldSettingResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/removeCustomFieldSetting\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a custom field from a project\",\n        \"description\": \"Removes a custom field setting from a project.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"removeCustomFieldSettingForProject\",\n        \"requestBody\": {\n          \"description\": \"Information about the custom field setting being removed.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/RemoveCustomFieldSettingRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the custom field from the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/task_counts\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get task count of a project\",\n        \"description\": \"Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](/docs/input-output-options) using `opt_fields` to get any information from this endpoint.\\n\\nThis endpoint has an additional [rate limit](/docs/standard-rate-limits) and each field counts especially high against our [cost limits](/docs/cost-limits).\\n\\nMilestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"getTaskCountsForProject\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested project's task counts.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TaskCountResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/addMembers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add users to a project\",\n        \"description\": \"Adds the specified list of users as members of the project.\\nReturns the updated project record.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"addMembersForProject\",\n        \"requestBody\": {\n          \"description\": \"Information about the members being added.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/AddMembersRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added members to the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/removeMembers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove users from a project\",\n        \"description\": \"Removes the specified list of users from members of the project.\\nReturns the updated project record.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"removeMembersForProject\",\n        \"requestBody\": {\n          \"description\": \"Information about the members being removed.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/RemoveMembersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the members from the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/addFollowers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add followers to a project\",\n        \"description\": \"Adds the specified list of users as followers to the project. Followers are a subset of members, therefore if the users are not already members of the project they will also become members as a result of this operation.\\nReturns the updated project record.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"addFollowersForProject\",\n        \"requestBody\": {\n          \"description\": \"Information about the followers being added.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/AddFollowersRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added followers to the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/removeFollowers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove followers from a project\",\n        \"description\": \"Removes the specified list of users from following the project, this will not affect project membership status.\\nReturns the updated project record.\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"removeFollowersForProject\",\n        \"requestBody\": {\n          \"description\": \"Information about the followers being removed.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/RemoveFollowersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed followers from the project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/sections/{section_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/section_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a section\",\n        \"description\": \"Returns the complete record for a single section.\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"getSection\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved section.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/SectionResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a section\",\n        \"description\": \"A specific, existing section can be updated by making a PUT request on\\nthe URL for that project. Only the fields provided in the `data` block\\nwill be updated; any unspecified fields will remain unchanged. (note that\\nat this time, the only field that can be updated is the `name` field.)\\n\\nWhen using this method, it is best to specify only those fields you wish\\nto change, or else you may overwrite changes made by another user since\\nyou last retrieved the task.\\n\\nReturns the complete updated section record.\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"updateSection\",\n        \"requestBody\": {\n          \"description\": \"The section to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/SectionRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the specified section.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/SectionResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a section\",\n        \"description\": \"A specific, existing section can be deleted by making a DELETE request on\\nthe URL for that section.\\n\\nNote that sections must be empty to be deleted.\\n\\nThe last remaining section cannot be deleted.\\n\\nReturns an empty data block.\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"deleteSection\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified section.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/sections\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get sections in a project\",\n        \"description\": \"Returns the compact records for all sections in the specified project.\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"getSectionsForProject\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved sections in project.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/SectionCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a section in a project\",\n        \"description\": \"Creates a new section in a project.\\nReturns the full record of the newly created section.\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"createSectionForProject\",\n        \"requestBody\": {\n          \"description\": \"The section to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/SectionRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the specified section.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/SectionResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/sections/{section_gid}/addTask\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/section_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add task to section\",\n        \"description\": \"Add a task to a specific, existing section. This will remove the task from other sections of the project.\\n\\nThe task will be inserted at the top of a section unless an insert_before or insert_after parameter is declared.\\n\\nThis does not work for separators (tasks with the resource_subtype of section).\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"addTaskForSection\",\n        \"requestBody\": {\n          \"description\": \"The task and optionally the insert location.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/SectionTaskInsertRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/sections/insert\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Move or Insert sections\",\n        \"description\": \"Move sections relative to each other. One of\\n`before_section` or `after_section` is required.\\n\\nSections cannot be moved between projects.\\n\\nReturns an empty data block.\",\n        \"tags\": [\"Sections\"],\n        \"operationId\": \"insertSectionForProject\",\n        \"requestBody\": {\n          \"description\": \"The section's move action.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ProjectSectionInsertRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully moved the specified section.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/stories/{story_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/story_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a story\",\n        \"description\": \"Returns the full record for a single story.\",\n        \"tags\": [\"Stories\"],\n        \"operationId\": \"getStory\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified story.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/StoryResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a story\",\n        \"description\": \"Updates the story and returns the full record for the updated story. Only comment stories can have their text updated, and only comment stories and attachment stories can be pinned. Only one of `text` and `html_text` can be specified.\",\n        \"tags\": [\"Stories\"],\n        \"operationId\": \"updateStory\",\n        \"requestBody\": {\n          \"description\": \"The comment story to update.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/StoryRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified story.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/StoryResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a story\",\n        \"description\": \"Deletes a story. A user can only delete stories they have created.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Stories\"],\n        \"operationId\": \"deleteStory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified story.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/stories\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get stories from a task\",\n        \"description\": \"Returns the compact records for all stories on the task.\",\n        \"tags\": [\"Stories\"],\n        \"operationId\": \"getStoriesForTask\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified task's stories.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"items\": { \"$ref\": \"#/components/schemas/StoryCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a story on a task\",\n        \"description\": \"Adds a story to a task. This endpoint currently only allows for comment\\nstories to be created. The comment will be authored by the currently\\nauthenticated user, and timestamped when the server receives the request.\\n\\nReturns the full record for the new story added to the task.\",\n        \"tags\": [\"Stories\"],\n        \"operationId\": \"createStoryForTask\",\n        \"requestBody\": {\n          \"description\": \"The story to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/StoryRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new story.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/StoryResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tags\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple tags\",\n        \"description\": \"Returns the compact tag records for some filtered set of tags. Use one or more of the parameters provided to filter the tags returned.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"getTags\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"description\": \"The workspace to filter tags on.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"1331\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified set of tags.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TagCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a tag\",\n        \"description\": \"Creates a new tag in a workspace or organization.\\n\\nEvery tag is required to be created in a specific workspace or\\norganization, and this cannot be changed once set. Note that you can use\\nthe workspace parameter regardless of whether or not it is an\\norganization.\\n\\nReturns the full record of the newly created tag.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"createTag\",\n        \"requestBody\": {\n          \"description\": \"The tag to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TagRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the newly specified tag.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TagResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tags/{tag_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/tag_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a tag\",\n        \"description\": \"Returns the complete tag record for a single tag.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"getTag\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified tag.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TagResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a tag\",\n        \"description\": \"Updates the properties of a tag. Only the fields provided in the `data`\\nblock will be updated; any unspecified fields will remain unchanged.\\n\\nWhen using this method, it is best to specify only those fields you wish\\nto change, or else you may overwrite changes made by another user since\\nyou last retrieved the tag.\\n\\nReturns the complete updated tag record.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"updateTag\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the specified tag.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TagResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a tag\",\n        \"description\": \"A specific, existing tag can be deleted by making a DELETE request on\\nthe URL for that tag.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"deleteTag\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified tag.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/tags\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a task's tags\",\n        \"description\": \"Get a compact representation of all of the tags the task has.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"getTagsForTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the tags for the given task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TagCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/tags\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get tags in a workspace\",\n        \"description\": \"Returns the compact tag records for some filtered set of tags. Use one or more of the parameters provided to filter the tags returned.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"getTagsForWorkspace\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified set of tags.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TagCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a tag in a workspace\",\n        \"description\": \"Creates a new tag in a workspace or organization.\\n\\nEvery tag is required to be created in a specific workspace or\\norganization, and this cannot be changed once set. Note that you can use\\nthe workspace parameter regardless of whether or not it is an\\norganization.\\n\\nReturns the full record of the newly created tag.\",\n        \"tags\": [\"Tags\"],\n        \"operationId\": \"createTagForWorkspace\",\n        \"requestBody\": {\n          \"description\": \"The tag to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TagResponse\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the newly specified tag.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TagResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple tasks\",\n        \"description\": \"Returns the compact task records for some filtered set of tasks. Use one or more of the parameters provided to filter the tasks returned. You must specify a `project` or `tag` if you do not specify `assignee` and `workspace`.\\n\\nFor more complex task retrieval, use [workspaces/{workspace_gid}/tasks/search](/docs/search-tasks-in-a-workspace).\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getTasks\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          {\n            \"name\": \"assignee\",\n            \"in\": \"query\",\n            \"description\": \"The assignee to filter tasks on.\\n*Note: If you specify `assignee`, you must also specify the `workspace` to filter on.*\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"14641\"\n          },\n          {\n            \"name\": \"project\",\n            \"in\": \"query\",\n            \"description\": \"The project to filter tasks on.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"321654\"\n          },\n          {\n            \"name\": \"section\",\n            \"in\": \"query\",\n            \"description\": \"The section to filter tasks on.\\n*Note: Currently, this is only supported in board views.*\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"321654\"\n          },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"description\": \"The workspace to filter tasks on.\\n*Note: If you specify `workspace`, you must also specify the `assignee` to filter on.*\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"321654\"\n          },\n          {\n            \"name\": \"completed_since\",\n            \"in\": \"query\",\n            \"description\": \"Only return tasks that are either incomplete or that have been completed since this time.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"example\": \"2012-02-22T02:06:58.158Z\"\n            }\n          },\n          {\n            \"name\": \"modified_since\",\n            \"in\": \"query\",\n            \"description\": \"Only return tasks that have been modified since the given time.\\n\\n*Note: A task is considered “modified” if any of its properties\\nchange, or associations between it and other objects are modified\\n(e.g.  a task being added to a project). A task is not considered\\nmodified just because another object it is associated with (e.g. a\\nsubtask) is modified. Actions that count as modifying the task\\ninclude assigning, renaming, completing, and adding stories.*\",\n            \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n            \"example\": \"2012-02-22T02:06:58.158Z\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved requested tasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a task\",\n        \"description\": \"Creating a new task is as easy as POSTing to the `/tasks` endpoint with a\\ndata block containing the fields you’d like to set on the task. Any\\nunspecified fields will take on default values.\\n\\nEvery task is required to be created in a specific workspace, and this\\nworkspace cannot be changed once set. The workspace need not be set\\nexplicitly if you specify `projects` or a `parent` task instead.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"createTask\",\n        \"requestBody\": {\n          \"description\": \"The task to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TaskRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TaskResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a task\",\n        \"description\": \"Returns the complete task record for a single task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TaskResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a task\",\n        \"description\": \"A specific, existing task can be updated by making a PUT request on the\\nURL for that task. Only the fields provided in the `data` block will be\\nupdated; any unspecified fields will remain unchanged.\\n\\nWhen using this method, it is best to specify only those fields you wish\\nto change, or else you may overwrite changes made by another user since\\nyou last retrieved the task.\\n\\nReturns the complete updated task record.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"updateTask\",\n        \"requestBody\": {\n          \"description\": \"The task to update.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TaskRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the specified task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TaskResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a task\",\n        \"description\": \"A specific, existing task can be deleted by making a DELETE request on\\nthe URL for that task. Deleted tasks go into the “trash” of the user\\nmaking the delete request. Tasks can be recovered from the trash within a\\nperiod of 30 days; afterward they are completely removed from the system.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"deleteTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/duplicate\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Duplicate a task\",\n        \"description\": \"Creates and returns a job that will asynchronously handle the duplication.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"duplicateTask\",\n        \"requestBody\": {\n          \"description\": \"Describes the duplicate's name and the fields that will be duplicated.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskDuplicateRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the job to handle duplication.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/JobResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/tasks\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get tasks from a project\",\n        \"description\": \"Returns the compact task records for all tasks within the given project, ordered by their priority within the project. Tasks can exist in more than one project at a time.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getTasksForProject\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested project's tasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/sections/{section_gid}/tasks\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/section_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get tasks from a section\",\n        \"description\": \"*Board view only*: Returns the compact section records for all tasks within the given section.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getTasksForSection\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the section's tasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tags/{tag_gid}/tasks\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/tag_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get tasks from a tag\",\n        \"description\": \"Returns the compact task records for all tasks with the given tag. Tasks can have more than one tag at a time.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getTasksForTag\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the tasks associated with the specified tag.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/user_task_lists/{user_task_list_gid}/tasks\": {\n      \"parameters\": [\n        {\n          \"name\": \"completed_since\",\n          \"in\": \"query\",\n          \"required\": false,\n          \"description\": \"Only return tasks that are either incomplete or that have been completed since this time. Accepts a date-time string or the keyword *now*.\\n\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"2012-02-22T02:06:58.158Z\",\n          \"$ref\": \"#/components/parameters/completed_since\"\n        },\n        { \"$ref\": \"#/components/parameters/user_task_list_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get tasks from a user task list\",\n        \"description\": \"Returns the compact list of tasks in a user’s My Tasks list. The returned tasks will be in order within each assignee status group of `Inbox`, `Today`, and `Upcoming`.\\n*Note: tasks in `Later` have a different ordering in the Asana web app than the other assignee status groups; this endpoint will still return them in list order in `Later` (differently than they show up in Asana, but the same order as in Asana’s mobile apps).*\\n*Note: Access control is enforced for this endpoint as with all Asana API endpoints, meaning a user’s private tasks will be filtered out if the API-authenticated user does not have access to them.*\\n*Note: Both complete and incomplete tasks are returned by default unless they are filtered out (for example, setting `completed_since=now` will return only incomplete tasks, which is the default view for “My Tasks” in Asana.)*\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getTasksForUserTaskList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the user task list's tasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/subtasks\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get subtasks from a task\",\n        \"description\": \"Returns a compact representation of all of the subtasks of a task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getSubtasksForTask\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified task's subtasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a subtask\",\n        \"description\": \"Creates a new subtask and adds it to the parent task. Returns the full record for the newly created subtask.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"createSubtaskForTask\",\n        \"requestBody\": {\n          \"description\": \"The new subtask to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TaskRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the specified subtask.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TaskResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/setParent\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Set the parent of a task\",\n        \"description\": \"parent, or no parent task at all. Returns an empty data block. When using `insert_before` and `insert_after`, at most one of those two options can be specified, and they must already be subtasks of the parent.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"setParentForTask\",\n        \"requestBody\": {\n          \"description\": \"The new parent of the subtask.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskSetParentRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully changed the parent of the specified subtask.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TaskResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/dependencies\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get dependencies from a task\",\n        \"description\": \"Returns the compact representations of all of the dependencies of a task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getDependenciesForTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified task's dependencies.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/addDependencies\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Set dependencies for a task\",\n        \"description\": \"Marks a set of tasks as dependencies of this task, if they are not already dependencies. *A task can have at most 15 dependencies*.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"addDependenciesForTask\",\n        \"requestBody\": {\n          \"description\": \"The list of tasks to set as dependencies.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ModifyDependenciesRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully set the specified dependencies on the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/removeDependencies\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Unlink dependencies from a task\",\n        \"description\": \"Unlinks a set of dependencies from this task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"removeDependenciesForTask\",\n        \"requestBody\": {\n          \"description\": \"The list of tasks to unlink as dependencies.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ModifyDependenciesRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully unlinked the dependencies from the specified task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/EmptyResponse\" },\n                      \"$ref\": \"#/components/schemas/EmptyResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/dependents\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get dependents from a task\",\n        \"description\": \"Returns the compact representations of all of the dependents of a task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"getDependentsForTask\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified dependents of the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/addDependents\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Set dependents for a task\",\n        \"description\": \"Marks a set of tasks as dependents of this task, if they are not already dependents. *A task can have at most 30 dependents*.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"addDependentsForTask\",\n        \"requestBody\": {\n          \"description\": \"The list of tasks to add as dependents.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ModifyDependentsRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully set the specified dependents on the given task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" },\n                      \"$ref\": \"#/components/schemas/EmptyResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/removeDependents\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Unlink dependents from a task\",\n        \"description\": \"Unlinks a set of dependents from this task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"removeDependentsForTask\",\n        \"requestBody\": {\n          \"description\": \"The list of tasks to remove as dependents.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ModifyDependentsRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully unlinked the specified tasks as dependents.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/EmptyResponse\" },\n                      \"$ref\": \"#/components/schemas/EmptyResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/addProject\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a project to a task\",\n        \"description\": \"Adds the task to the specified project, in the optional location\\nspecified. If no location arguments are given, the task will be added to\\nthe end of the project.\\n\\n`addProject` can also be used to reorder a task within a project or\\nsection that already contains it.\\n\\nAt most one of `insert_before`, `insert_after`, or `section` should be\\nspecified. Inserting into a section in an non-order-dependent way can be\\ndone by specifying section, otherwise, to insert within a section in a\\nparticular place, specify `insert_before` or `insert_after` and a task\\nwithin the section to anchor the position of this task.\\n\\nReturns an empty data block.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"addProjectForTask\",\n        \"requestBody\": {\n          \"description\": \"The project to add the task to.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskAddProjectRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the specified project to the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/removeProject\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a project from a task\",\n        \"description\": \"Removes the task from the specified project. The task will still exist in\\nthe system, but it will not be in the project anymore.\\n\\nReturns an empty data block.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"removeProjectForTask\",\n        \"requestBody\": {\n          \"description\": \"The project to remove the task from.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskRemoveProjectRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the specified project from the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/addTag\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a tag to a task\",\n        \"description\": \"Adds a tag to a task. Returns an empty data block.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"addTagForTask\",\n        \"requestBody\": {\n          \"description\": \"The tag to add to the task.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TaskAddTagRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the specified tag to the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/removeTag\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a tag from a task\",\n        \"description\": \"Removes a tag from a task. Returns an empty data block.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"removeTagForTask\",\n        \"requestBody\": {\n          \"description\": \"The tag to remove from the task.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskRemoveTagRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the specified tag from the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/addFollowers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add followers to a task\",\n        \"description\": \"Adds followers to a task. Returns an empty data block.\\nEach task can be associated with zero or more followers in the system.\\nRequests to add/remove followers, if successful, will return the complete updated task record, described above.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"addFollowersForTask\",\n        \"requestBody\": {\n          \"description\": \"The followers to add to the task.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskAddFollowersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added the specified followers to the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/tasks/{task_gid}/removeFollowers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/task_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove followers from a task\",\n        \"description\": \"Removes each of the specified followers from the task if they are following. Returns the complete, updated record for the affected task.\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"removeFollowerForTask\",\n        \"requestBody\": {\n          \"description\": \"The followers to remove from the task.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskRemoveFollowersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the specified followers from the task.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/tasks/search\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        {\n          \"name\": \"text\",\n          \"in\": \"query\",\n          \"description\": \"Performs full-text search on both task name and description\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"Bug\"\n        },\n        {\n          \"name\": \"resource_subtype\",\n          \"in\": \"query\",\n          \"description\": \"Filters results by the task's resource_subtype\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\"default_task\", \"milestone\"],\n            \"default\": \"milestone\"\n          }\n        },\n        {\n          \"name\": \"assignee.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"assignee.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"assignee_status\",\n          \"in\": \"query\",\n          \"description\": \"One of `inbox`, `today`, `upcoming`, or `later`\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\"inbox\", \"today\", \"upcoming\", \"later\"]\n          },\n          \"example\": \"later\"\n        },\n        {\n          \"name\": \"portfolios.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of portfolio IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"projects.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of project IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"projects.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of project IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"projects.all\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of project IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"sections.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of section or column IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"sections.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of section or column IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"sections.all\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of section or column IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"tags.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of tag IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"tags.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of tag IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"tags.all\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of tag IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"teams.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of team IDs\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"followers.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"followers.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"created_by.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"created_by.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"assigned_by.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"assigned_by.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"liked_by.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"liked_by.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"commented_on_by.any\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"commented_on_by.not\",\n          \"in\": \"query\",\n          \"description\": \"Comma-separated list of user identifiers\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"example\": \"12345,23456,34567\"\n        },\n        {\n          \"name\": \"due_on.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"due_on.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"due_on\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string or `null`\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"due_at.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"due_at.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"start_on.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"start_on.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"start_on\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string or `null`\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"created_on.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"created_on.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"created_on\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string or `null`\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"created_at.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"created_at.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"completed_on.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"completed_on.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"completed_on\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string or `null`\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"completed_at.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"completed_at.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"modified_on.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"modified_on.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"modified_on\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 date string or `null`\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date\", \"nullable\": true },\n          \"example\": \"2019-09-15\"\n        },\n        {\n          \"name\": \"modified_at.before\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"modified_at.after\",\n          \"in\": \"query\",\n          \"description\": \"ISO 8601 datetime string\",\n          \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n          \"example\": \"2019-04-15T01:01:46.055Z\"\n        },\n        {\n          \"name\": \"is_blocking\",\n          \"in\": \"query\",\n          \"description\": \"Filter to incomplete tasks with dependents\",\n          \"schema\": { \"type\": \"boolean\" },\n          \"example\": false\n        },\n        {\n          \"name\": \"is_blocked\",\n          \"in\": \"query\",\n          \"description\": \"Filter to tasks with incomplete dependencies\",\n          \"schema\": {\n            \"type\": \"boolean\",\n            \"enum\": [\n              \"due_date\",\n              \"created_at\",\n              \"completed_at\",\n              \"likes\",\n              \"modified_at\"\n            ],\n            \"default\": \"modified_at\"\n          },\n          \"example\": false\n        },\n        {\n          \"name\": \"has_attachment\",\n          \"in\": \"query\",\n          \"description\": \"Filter to tasks with attachments\",\n          \"schema\": { \"type\": \"boolean\", \"default\": false },\n          \"example\": false\n        },\n        {\n          \"name\": \"completed\",\n          \"in\": \"query\",\n          \"description\": \"Filter to completed tasks\",\n          \"schema\": { \"type\": \"boolean\" },\n          \"example\": false\n        },\n        {\n          \"name\": \"is_subtask\",\n          \"in\": \"query\",\n          \"description\": \"Filter to subtasks\",\n          \"schema\": { \"type\": \"boolean\" },\n          \"example\": false\n        },\n        {\n          \"name\": \"sort_by\",\n          \"in\": \"query\",\n          \"description\": \"One of `due_date`, `created_at`, `completed_at`, `likes`, or `modified_at`, defaults to `modified_at`\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"due_date\",\n              \"created_at\",\n              \"completed_at\",\n              \"likes\",\n              \"modified_at\"\n            ],\n            \"default\": \"modified_at\"\n          },\n          \"example\": \"likes\"\n        },\n        {\n          \"name\": \"sort_ascending\",\n          \"in\": \"query\",\n          \"description\": \"Default `false`\",\n          \"schema\": { \"type\": \"boolean\", \"default\": false },\n          \"example\": true\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Search tasks in a workspace\",\n        \"description\": \"To mirror the functionality of the Asana web app's advanced search feature, the Asana API has a task search endpoint that allows you to build complex filters to find and retrieve the exact data you need.\\n#### Premium access\\nLike the Asana web product's advance search feature, this search endpoint will only be available to premium Asana users. A user is premium if any of the following is true:\\n\\n- The workspace in which the search is being performed is a premium workspace - The user is a member of a premium team inside the workspace\\n\\nEven if a user is only a member of a premium team inside a non-premium workspace, search will allow them to find data anywhere in the workspace, not just inside the premium team. Making a search request using credentials of a non-premium user will result in a `402 Payment Required` error.\\n#### Pagination\\nSearch results are not stable; repeating the same query multiple times may return the data in a different order, even if the data do not change. Because of this, the traditional [pagination](https://developers.asana.com/docs/#pagination) available elsewhere in the Asana API is not available here. However, you can paginate manually by sorting the search results by their creation time and then modifying each subsequent query to exclude data you have already seen. Page sizes are limited to a maximum of 100 items, and can be specified by the `limit` query parameter.\\n#### Eventual consistency\\nChanges in Asana (regardless of whether they’re made though the web product or the API) are forwarded to our search infrastructure to be indexed. This process can take between 10 and 60 seconds to complete under normal operation, and longer during some production incidents. Making a change to a task that would alter its presence in a particular search query will not be reflected immediately. This is also true of the advanced search feature in the web product.\\n#### Rate limits\\nYou may receive a `429 Too Many Requests` response if you hit any of our [rate limits](https://developers.asana.com/docs/#rate-limits).\\n#### Custom field parameters\\n| Parameter name | Custom field type | Accepted type |\\n|---|---|---|\\n| custom_fields.{gid}.is_set | All | Boolean |\\n| custom_fields.{gid}.value | Text | String |\\n| custom_fields.{gid}.value | Number | Number |\\n| custom_fields.{gid}.value | Enum | Enum option ID |\\n| custom_fields.{gid}.starts_with | Text only | String |\\n| custom_fields.{gid}.ends_with | Text only | String |\\n| custom_fields.{gid}.contains | Text only | String |\\n| custom_fields.{gid}.less_than | Number only | Number |\\n| custom_fields.{gid}.greater_than | Number only | Number |\\n\\n\\nFor example, if the gid of the custom field is 12345, these query parameter to find tasks where it is set would be `custom_fields.12345.is_set=true`. To match an exact value for an enum custom field, use the gid of the desired enum option and not the name of the enum option: `custom_fields.12345.value=67890`.\\n\\nSearching for multiple exact matches of a custom field is not supported.\\n\\n*Note: If you specify `projects.any` and `sections.any`, you will receive tasks for the project **and** tasks for the section. If you're looking for only tasks in a section, omit the `projects.any` from the request.*\",\n        \"tags\": [\"Tasks\"],\n        \"operationId\": \"searchTasksForWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the section's tasks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TaskCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/team_memberships/{team_membership_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_membership_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a team membership\",\n        \"description\": \"Returns the complete team membership record for a single team membership.\",\n        \"tags\": [\"Team Memberships\"],\n        \"operationId\": \"getTeamMembership\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested team membership.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/TeamMembershipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/team_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get team memberships\",\n        \"description\": \"Returns compact team membership records.\",\n        \"tags\": [\"Team Memberships\"],\n        \"operationId\": \"getTeamMemberships\",\n        \"parameters\": [\n          {\n            \"name\": \"team\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for the team.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"159874\"\n          },\n          {\n            \"name\": \"user\",\n            \"in\": \"query\",\n            \"description\": \"A string identifying a user. This can either be the string \\\"me\\\", an email, or the gid of a user. This parameter must be used with the workspace parameter.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"512241\"\n          },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for the workspace. This parameter must be used with the user parameter.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"31326\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested team memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/TeamMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}/team_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get memberships from a team\",\n        \"description\": \"Returns the compact team memberships for the team.\",\n        \"tags\": [\"Team Memberships\"],\n        \"operationId\": \"getTeamMembershipsForTeam\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested team's memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/TeamMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users/{user_gid}/team_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get memberships from a user\",\n        \"description\": \"Returns the compact team membership records for the user.\",\n        \"tags\": [\"Team Memberships\"],\n        \"operationId\": \"getTeamMembershipsForUser\",\n        \"parameters\": [\n          {\n            \"name\": \"workspace\",\n            \"description\": \"Globally unique identifier for the workspace.\",\n            \"in\": \"query\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"31326\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested users's memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/TeamMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a team\",\n        \"description\": \"Returns the full record for a single team.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"getTeam\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successsfully retrieved the record for a single team.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TeamResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/organizations/{workspace_gid}/teams\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get teams in an organization\",\n        \"description\": \"Returns the compact records for all teams in the organization visible to the authorized user.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"getTeamsForOrganization\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the team records for all teams in the organization or workspace accessible to the authenticated user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TeamCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users/{user_gid}/teams\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" },\n        {\n          \"name\": \"organization\",\n          \"in\": \"query\",\n          \"description\": \"The workspace or organization to filter teams on.\",\n          \"required\": true,\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"1331\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get teams for a user\",\n        \"description\": \"Returns the compact records for all teams to which the given user is assigned.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"getTeamsForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the team records for all teams in the organization or workspace to which the given user is assigned.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TeamCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}/addUser\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a user to a team\",\n        \"description\": \"The user making this call must be a member of the team in order to add others. The user being added must exist in the same organization as the team.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"addUserForTeam\",\n        \"requestBody\": {\n          \"description\": \"The user to add to the team.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TeamAddUserRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the full user record for the added user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/UserResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}/removeUser\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a user from a team\",\n        \"description\": \"The user making this call must be a member of the team in order to remove themselves or others.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"removeUserForTeam\",\n        \"requestBody\": {\n          \"description\": \"The user to remove from the team.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TeamRemoveUserRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Returns an empty data record\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/typeahead\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        {\n          \"name\": \"resource_type\",\n          \"in\": \"query\",\n          \"description\": \"The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `project`, `portfolio`, `tag`, `task`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"custom_field\",\n              \"portfolio\",\n              \"project\",\n              \"tag\",\n              \"task\",\n              \"user\",\n              \"user\"\n            ],\n            \"default\": \"user\"\n          }\n        },\n        {\n          \"name\": \"type\",\n          \"in\": \"query\",\n          \"description\": \"*Deprecated: new integrations should prefer the resource_type field.*\",\n          \"required\": false,\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"custom_field\",\n              \"portfolio\",\n              \"project\",\n              \"tag\",\n              \"task\",\n              \"user\"\n            ],\n            \"default\": \"user\"\n          }\n        },\n        {\n          \"name\": \"query\",\n          \"in\": \"query\",\n          \"description\": \"The string that will be used to search for relevant objects. If an empty string is passed in, the API will currently return an empty result set.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"Greg\"\n        },\n        {\n          \"name\": \"count\",\n          \"in\": \"query\",\n          \"description\": \"The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned.\",\n          \"schema\": { \"type\": \"integer\" },\n          \"example\": 20\n        },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get objects via typeahead\",\n        \"description\": \"Retrieves objects in the workspace based via an auto-completion/typeahead\\nsearch algorithm. This feature is meant to provide results quickly, so do\\nnot rely on this API to provide extremely accurate search results. The\\nresult set is limited to a single page of results with a maximum size, so\\nyou won’t be able to fetch large numbers of results.\\n\\nThe typeahead search API provides search for objects from a single\\nworkspace. This endpoint should be used to query for objects when\\ncreating an auto-completion/typeahead search feature. This API is meant\\nto provide results quickly and should not be relied upon for accurate or\\nexhaustive search results. The results sets are limited in size and\\ncannot be paginated.\\n\\nQueries return a compact representation of each object which is typically\\nthe gid and name fields. Interested in a specific set of fields or all of\\nthe fields?! Of course you are. Use field selectors to manipulate what\\ndata is included in a response.\\n\\nResources with type `user` are returned in order of most contacted to\\nleast contacted. This is determined by task assignments, adding the user\\nto projects, and adding the user as a follower to tasks, conversations,\\netc.\\n\\nResources with type `project` are returned in order of recency. This is\\ndetermined when the user visits the project, is added to the project, and\\ncompletes tasks in the project.\\n\\nResources with type `task` are returned with priority placed on tasks\\nthe user is following, but no guarantee on the order of those tasks.\\n\\nLeaving the `query` string empty or omitted will give you results, still\\nfollowing the resource ordering above. This could be used to list users or\\nprojects that are relevant for the requesting user's api token.\",\n        \"tags\": [\"Typeahead\"],\n        \"operationId\": \"typeaheadForWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved objects via a typeahead search algorithm.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"description\": \"A generic list of objects, such as those returned by the typeahead search endpoint.\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/AsanaNamedResource\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/user_task_lists/{user_task_list_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_task_list_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a user task list\",\n        \"description\": \"Returns the full record for a user task list.\",\n        \"tags\": [\"User Task Lists\"],\n        \"operationId\": \"getUserTaskList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the user task list.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserTaskListResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users/{user_gid}/user_task_list\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        {\n          \"name\": \"workspace\",\n          \"in\": \"query\",\n          \"required\": true,\n          \"description\": \"The workspace in which to get the user task list.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"1234\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a user's task list\",\n        \"description\": \"Returns the full record for a user's task list.\",\n        \"tags\": [\"User Task Lists\"],\n        \"operationId\": \"getUserTaskListForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the user's task list.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserTaskListResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users\": {\n      \"parameters\": [\n        {\n          \"name\": \"workspace\",\n          \"in\": \"query\",\n          \"description\": \"The workspace or organization ID to filter users on.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"1331\"\n        },\n        {\n          \"$ref\": \"#/components/parameters/pretty\",\n          \"name\": \"team\",\n          \"in\": \"query\",\n          \"description\": \"The team ID to filter users on.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"15627\"\n        },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple users\",\n        \"description\": \"Returns the user records for all users in all workspaces and organizations accessible to the authenticated user. Accepts an optional workspace ID parameter.\\nResults are sorted by user ID.\",\n        \"tags\": [\"Users\"],\n        \"operationId\": \"getUsers\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested user records.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users/{user_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a user\",\n        \"description\": \"Returns the full user record for the single user with the provided ID.\\nResults are sorted by user ID.\",\n        \"tags\": [\"Users\"],\n        \"operationId\": \"getUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the user specified.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/UserResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users/{user_gid}/favorites\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        {\n          \"name\": \"resource_type\",\n          \"in\": \"query\",\n          \"required\": true,\n          \"description\": \"The resource type of favorites to be returned.\",\n          \"schema\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"portfolio\",\n              \"project\",\n              \"tag\",\n              \"task\",\n              \"user\",\n              \"project_template\"\n            ],\n            \"default\": \"project\"\n          }\n        },\n        {\n          \"name\": \"workspace\",\n          \"in\": \"query\",\n          \"required\": true,\n          \"description\": \"The workspace in which to get favorites.\",\n          \"schema\": { \"type\": \"string\" },\n          \"example\": \"1234\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"Get a user's favorites\",\n        \"description\": \"Returns all of a user's favorites in the given workspace, of the given type.\\nResults are given in order (The same order as Asana's sidebar).\",\n        \"tags\": [\"Users\"],\n        \"operationId\": \"getFavoritesForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the specified user's favorites.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/AsanaNamedResource\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}/users\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get users in a team\",\n        \"description\": \"Returns the compact records for all users that are members of the team.\",\n        \"tags\": [\"Users\"],\n        \"operationId\": \"getUsersForTeam\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the user records for all the members of the team, including guests and limited access users\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/users\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get users in a workspace or organization\",\n        \"description\": \"Returns the user records for all users in the specified workspace or organization.\\nResults are sorted alphabetically by user names.\",\n        \"tags\": [\"Users\"],\n        \"operationId\": \"getUsersForWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return the users in the specified workspace or org.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/UserCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/webhooks\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple webhooks\",\n        \"description\": \"Get the compact representation of all webhooks your app has registered for the authenticated user in the given workspace.\",\n        \"tags\": [\"Webhooks\"],\n        \"operationId\": \"getWebhooks\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"The workspace to query for webhooks in.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"1331\"\n          },\n          {\n            \"name\": \"resource\",\n            \"in\": \"query\",\n            \"description\": \"Only return webhooks for the given resource.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"51648\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested webhooks.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/WebhookResponse\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Establish a webhook\",\n        \"description\": \"Establishing a webhook is a two-part process. First, a simple HTTP POST\\nrequest initiates the creation similar to creating any other resource.\\n\\nNext, in the middle of this request comes the confirmation handshake.\\nWhen a webhook is created, we will send a test POST to the target with an\\n`X-Hook-Secret` header. The target must respond with a `200 OK` or `204\\nNo Content` and a matching `X-Hook-Secret` header to confirm that this\\nwebhook subscription is indeed expected. We strongly recommend storing\\nthis secret to be used to verify future webhook event signatures.\\n\\nThe POST request to create the webhook will then return with the status\\nof the request. If you do not acknowledge the webhook’s confirmation\\nhandshake it will fail to setup, and you will receive an error in\\nresponse to your attempt to create it. This means you need to be able to\\nreceive and complete the webhook *while* the POST request is in-flight\\n(in other words, have a server that can handle requests asynchronously).\\n\\n```\\n# Request\\ncurl -H \\\"Authorization: Bearer \u003cpersonal_access_token\u003e\\\" \\\\\\n-X POST https://app.asana.com/api/1.0/webhooks \\\\\\n-d \\\"resource=8675309\\\" \\\\\\n-d \\\"target=https://example.com/receive-webhook/7654\\\"\\n```\\n\\n```\\n# Handshake sent to https://example.com/\\nPOST /receive-webhook/7654\\nX-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81\\n```\\n\\n```\\n# Handshake response sent by example.com\\nHTTP/1.1 200\\nX-Hook-Secret: b537207f20cbfa02357cf448134da559e8bd39d61597dcd5631b8012eae53e81\\n```\\n\\n```\\n# Response\\nHTTP/1.1 201\\n{\\n  \\\"data\\\": {\\n    \\\"gid\\\": \\\"43214\\\",\\n    \\\"resource\\\": {\\n      \\\"gid\\\": \\\"8675309\\\",\\n      \\\"name\\\": \\\"Bugs\\\"\\n    },\\n    \\\"target\\\": \\\"https://example.com/receive-webhook/7654\\\",\\n    \\\"active\\\": false,\\n    \\\"last_success_at\\\": null,\\n    \\\"last_failure_at\\\": null,\\n    \\\"last_failure_content\\\": null\\n  }\\n}\\n```\",\n        \"tags\": [\"Webhooks\"],\n        \"operationId\": \"createWebhook\",\n        \"requestBody\": {\n          \"description\": \"The webhook workspace and target.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/WebhookRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the requested webhook.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/WebhookResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/webhooks/{webhook_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/webhook_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a webhook\",\n        \"description\": \"Returns the full record for the given webhook.\",\n        \"tags\": [\"Webhooks\"],\n        \"operationId\": \"getWebhook\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested webhook.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/WebhookResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a webhook\",\n        \"description\": \"This method *permanently* removes a webhook. Note that it may be possible to receive a request that was already in flight after deleting the webhook, but no further requests will be issued.\",\n        \"tags\": [\"Webhooks\"],\n        \"operationId\": \"deleteWebhook\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested webhook.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a webhook\",\n        \"description\": \"An existing webhook's filters can be updated by making a PUT request on the URL for that webhook. Note that the webhook's previous `filters` array will be completely overwritten by the `filters` sent in the PUT request. \",\n        \"tags\": [\"Webhooks\"],\n        \"operationId\": \"updateWebhook\",\n        \"requestBody\": {\n          \"description\": \"The updated filters for the webhook.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/WebhookUpdateRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the webhook.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/WebhookResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspace_memberships/{workspace_membership_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_membership_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a workspace membership\",\n        \"description\": \"Returns the complete workspace record for a single workspace membership.\",\n        \"tags\": [\"Workspace Memberships\"],\n        \"operationId\": \"getWorkspaceMembership\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested workspace membership.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/WorkspaceMembershipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/users/{user_gid}/workspace_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/user_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get workspace memberships for a user\",\n        \"description\": \"Returns the compact workspace membership records for the user.\",\n        \"tags\": [\"Workspace Memberships\"],\n        \"operationId\": \"getWorkspaceMembershipsForUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested user's workspace memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/WorkspaceMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/workspace_memberships\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/user_query_param\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get the workspace memberships for a workspace\",\n        \"description\": \"Returns the compact workspace membership records for the workspace.\",\n        \"tags\": [\"Workspace Memberships\"],\n        \"operationId\": \"getWorkspaceMembershipsForWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested workspace's memberships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/WorkspaceMembershipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/workspaces\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple workspaces\",\n        \"description\": \"Returns the compact records for all workspaces visible to the authorized user.\",\n        \"tags\": [\"Workspaces\"],\n        \"operationId\": \"getWorkspaces\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return all workspaces visible to the authorized user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/WorkspaceCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a workspace\",\n        \"description\": \"Returns the full workspace record for a single workspace.\",\n        \"tags\": [\"Workspaces\"],\n        \"operationId\": \"getWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return the full workspace record.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/WorkspaceResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a workspace\",\n        \"description\": \"A specific, existing workspace can be updated by making a PUT request on the URL for that workspace. Only the fields provided in the data block will be updated; any unspecified fields will remain unchanged.\\nCurrently the only field that can be modified for a workspace is its name.\\nReturns the complete, updated workspace record.\",\n        \"tags\": [\"Workspaces\"],\n        \"operationId\": \"updateWorkspace\",\n        \"requestBody\": {\n          \"description\": \"The workspace object with all updated properties.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/WorkspaceRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Update for the workspace was successful.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/WorkspaceResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/addUser\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a user to a workspace or organization\",\n        \"description\": \"Add a user to a workspace or organization.\\nThe user can be referenced by their globally unique user ID or their email address. Returns the full user record for the invited user.\",\n        \"tags\": [\"Workspaces\"],\n        \"operationId\": \"addUserForWorkspace\",\n        \"requestBody\": {\n          \"description\": \"The user to add to the workspace.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/WorkspaceAddUserRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The user was added successfully to the workspace or organization.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/UserResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/removeUser\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a user from a workspace or organization\",\n        \"description\": \"Remove a user from a workspace or organization.\\nThe user making this call must be an admin in the workspace. The user can be referenced by their globally unique user ID or their email address.\\nReturns an empty data record.\",\n        \"tags\": [\"Workspaces\"],\n        \"operationId\": \"removeUserForWorkspace\",\n        \"requestBody\": {\n          \"description\": \"The user to remove from the workspace.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/WorkspaceRemoveUserRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The user was removed successfully to the workspace or organization.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/attachments\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get attachments from an object\",\n        \"description\": \"Returns the compact records for all attachments on the object.\",\n        \"tags\": [\"Attachments\"],\n        \"operationId\": \"getAttachmentsForObject\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" },\n          {\n            \"name\": \"parent\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for object to fetch statuses from. Must be a GID for a task or project_brief.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"159874\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified object's attachments.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/AttachmentCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Upload an attachment\",\n        \"description\": \"Upload an attachment.\\n\\nThis method uploads an attachment on an object and returns the compact\\nrecord for the created attachment object. This is possible by either:\\n\\n- Providing the URL of the external resource being attached, or\\n- Downloading the file content first and then uploading it as any other attachment. Note that it is not possible to attach\\nfiles from third party services such as Dropbox, Box, Vimeo \u0026 Google Drive via the API\\n\\nThe 100MB size limit on attachments in Asana is enforced on this endpoint.\\n\\nThis endpoint expects a multipart/form-data encoded request containing\\nthe full contents of the file to be uploaded.\\n\\nRequests made should follow the HTTP/1.1 specification that line\\nterminators are of the form `CRLF` or `\\\\r\\\\n` outlined\\n[here](http://www.w3.org/Protocols/HTTP/1.1/draft-ietf-http-v11-spec-01#Basic-Rules)\\nin order for the server to reliably and properly handle the request.\",\n        \"tags\": [\"Attachments\"],\n        \"operationId\": \"createAttachmentForTask\",\n        \"requestBody\": {\n          \"description\": \"The file you want to upload.\\n\\n*Note when using curl:*\\n\\nBe sure to add an `‘@’` before the file path, and use the `--form`\\noption instead of the `-d` option.\\n\\nWhen uploading PDFs with curl, force the content-type to be pdf by\\nappending the content type to the file path: `--form\\n\\\"file=@file.pdf;type=application/pdf\\\"`.\",\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/AttachmentRequest\" }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully uploaded the attachment to the parent object.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/AttachmentResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/audit_log_events\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/audit_log_start_at\" },\n        { \"$ref\": \"#/components/parameters/audit_log_end_at\" },\n        { \"$ref\": \"#/components/parameters/audit_log_event_type\" },\n        { \"$ref\": \"#/components/parameters/audit_log_actor_type\" },\n        { \"$ref\": \"#/components/parameters/audit_log_actor_gid\" },\n        { \"$ref\": \"#/components/parameters/audit_log_resource_gid\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get audit log events\",\n        \"description\": \"Retrieve the audit log events that have been captured in your domain.\\n\\nThis endpoint will return a list of [AuditLogEvent](/docs/audit-log-event) objects, sorted by creation time in ascending order. Note that the Audit Log API captures events from October 8th, 2021 and later. Queries for events before this date will not return results.\\n\\nThere are a number of query parameters (below) that can be used to filter the set of [AuditLogEvent](/docs/audit-log-event) objects that are returned in the response. Any combination of query parameters is valid. When no filters are provided, all of the events that have been captured in your domain will match.\\n\\nThe list of events will always be [paginated](/docs/pagination). The default limit is 1000 events. The next set of events can be retrieved using the `offset` from the previous response. If there are no events that match the provided filters in your domain, the endpoint will return `null` for the `next_page` field. Querying again with the same filters may return new events if they were captured after the last request. Once a response includes a `next_page` with an `offset`, subsequent requests can be made with the latest `offset` to poll for new events that match the provided filters.\\n\\nWhen no `offset` is provided, the response will begin with the oldest events that match the provided filters. It is important to note that [AuditLogEvent](/docs/audit-log-event) objects will be permanently deleted from our systems after 90 days. If you wish to keep a permanent record of these events, we recommend using a SIEM tool to ingest and store these logs.\",\n        \"tags\": [\"Audit Log API\"],\n        \"operationId\": \"getAuditLogEvents\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"AuditLogEvents were successfully retrieved.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/AuditLogEvent\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a goal\",\n        \"description\": \"Returns the complete goal record for a single goal.\",\n        \"operationId\": \"getGoal\",\n        \"tags\": [\"Goals\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the record for a single goal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a goal\",\n        \"description\": \"An existing goal can be updated by making a PUT request on the URL for\\nthat goal. Only the fields provided in the `data` block will be updated;\\nany unspecified fields will remain unchanged.\\n\\nReturns the complete updated goal record.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"updateGoal\",\n        \"requestBody\": {\n          \"description\": \"The updated fields for the goal.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/GoalRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the goal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a goal\",\n        \"description\": \"A specific, existing goal can be deleted by making a DELETE request on the URL for that goal.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"deleteGoal\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified goal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get goals\",\n        \"description\": \"Returns compact goal records.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"getGoals\",\n        \"parameters\": [\n          {\n            \"name\": \"portfolio\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for supporting portfolio.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"159874\"\n          },\n          {\n            \"name\": \"project\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for supporting project.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"512241\"\n          },\n          {\n            \"name\": \"is_workspace_level\",\n            \"in\": \"query\",\n            \"description\": \"Filter to goals with is_workspace_level set to query value. Must be used with the workspace parameter.\",\n            \"schema\": { \"type\": \"boolean\" },\n            \"example\": false\n          },\n          {\n            \"name\": \"team\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for the team.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"31326\"\n          },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for the workspace.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"31326\"\n          },\n          {\n            \"name\": \"time_periods\",\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifiers for the time periods.\",\n            \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n            \"example\": \"221693,506165\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested goals.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/GoalCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a goal\",\n        \"description\": \"Creates a new goal in a workspace or team.\\n\\nReturns the full record of the newly created goal.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"createGoal\",\n        \"requestBody\": {\n          \"description\": \"The goal to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/GoalRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new goal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/setMetric\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create a goal metric\",\n        \"description\": \"Creates and adds a goal metric to a specified goal. Note that this replaces an existing goal metric if one already exists.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"createGoalMetric\",\n        \"requestBody\": {\n          \"description\": \"The goal metric to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/GoalMetricRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully created a new goal metric.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/setMetricCurrentValue\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Update a goal metric\",\n        \"description\": \"Updates a goal's existing metric's `current_number_value` if one exists,\\notherwise responds with a 400 status code.\\n\\nReturns the complete updated goal metric record.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"updateGoalMetric\",\n        \"requestBody\": {\n          \"description\": \"The updated fields for the goal metric.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalMetricCurrentValueRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the goal metric.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/addSubgoal\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a subgoal to a parent goal\",\n        \"description\": \"Adds a subgoal to a parent goal. *A goal can have at most 100 subgoals, and a subgoal can have at most 4 parent goals.\\n\\nReturns an empty data block.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"addSubgoal\",\n        \"requestBody\": {\n          \"description\": \"The goal to add as a subgoal\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalAddSubgoalRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added goal as subgoal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/removeSubgoal\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a subgoal from a goal\",\n        \"description\": \"Removes a goal as a subgoal of a specified parent goal.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"removeSubgoal\",\n        \"requestBody\": {\n          \"description\": \"The goal to be removed as a subgoal\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalRemoveSubgoalRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed subgoal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/addFollowers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a collaborator to a goal\",\n        \"description\": \"Adds followers to a goal. Returns the goal the followers were added to.\\nEach goal can be associated with zero or more followers in the system.\\nRequests to add/remove followers, if successful, will return the complete updated goal record, described above.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"addFollowers\",\n        \"requestBody\": {\n          \"description\": \"The followers to be added as collaborators\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskAddFollowersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully added users as collaborators.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/removeFollowers\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a collaborator from a goal\",\n        \"description\": \"Removes followers from a goal. Returns the goal the followers were removed from.\\nEach goal can be associated with zero or more followers in the system.\\nRequests to add/remove followers, if successful, will return the complete updated goal record, described above.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"removeFollowers\",\n        \"requestBody\": {\n          \"description\": \"The followers to be removed as collaborators\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/TaskAddFollowersRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed users as collaborators.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/GoalResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/addSupportingWork\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a project/portfolio as supporting work for a goal.\",\n        \"description\": \"Adds a project or portfolio as supporting work for a goal. *A goal can have at most 10 supporting projects/portfolios, and a project/portfolio can support at most 10 goals*.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"addSupportingWorkForGoal\",\n        \"requestBody\": {\n          \"description\": \"The project/portfolio to set as supporting work\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalAddSupportingWorkRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully set specified project/portfolio as supporting work on the given goal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/removeSupportingWork\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Remove a project/portfolio as supporting work for a goal.\",\n        \"description\": \"Removes a project or portfolio as supporting work for a goal.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"removeSupportingWorkForGoal\",\n        \"requestBody\": {\n          \"description\": \"The project/portfolio to remove as supporting work\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalAddSupportingWorkRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed specified project/portfolio as supporting work on the given goal.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/subgoals\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get subgoals from a goal\",\n        \"description\": \"Returns a compact representation of all of the subgoals of a goal.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"getSubgoalsForGoal\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified goal's subgoals.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/GoalCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/supportingWork\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get supporting work from a goal\",\n        \"description\": \"Returns any portfolios or projects associated with specified goal.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"supportingWork\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully returned supporting work.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/ProjectCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/parentGoals\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get parent goals from a goal\",\n        \"description\": \"Returns a compact representation of all of the parent goals of a goal.\",\n        \"tags\": [\"Goals\"],\n        \"operationId\": \"getParentGoalsForGoal\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified goal's parent goals.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/GoalCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/project_briefs/{project_brief_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_brief_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a project brief\",\n        \"description\": \"Get the full record for a project brief.\",\n        \"tags\": [\"Project Briefs\"],\n        \"operationId\": \"getProjectBrief\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the record for a project brief.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectBriefResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"424\": { \"$ref\": \"#/components/responses/TooManyRequests\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" },\n          \"501\": { \"$ref\": \"#/components/responses/BadGateway\" },\n          \"503\": { \"$ref\": \"#/components/responses/ServiceUnavailable\" },\n          \"504\": { \"$ref\": \"#/components/responses/GatewayTimeout\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a project brief\",\n        \"description\": \"An existing project brief can be updated by making a PUT request on the URL for\\nthat project brief. Only the fields provided in the `data` block will be updated;\\nany unspecified fields will remain unchanged.\\n\\nReturns the complete updated project brief record.\",\n        \"tags\": [\"Project Briefs\"],\n        \"operationId\": \"updateProjectBrief\",\n        \"requestBody\": {\n          \"description\": \"The updated fields for the project brief.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/ProjectBriefRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the project brief.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectBriefResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a project brief\",\n        \"description\": \"Deletes a specific, existing project brief.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Project Briefs\"],\n        \"operationId\": \"deleteProjectBrief\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified project brief.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/project_briefs\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create a project brief\",\n        \"description\": \"Creates a new project brief.\\n\\nReturns the full record of the newly created project brief.\",\n        \"tags\": [\"Project Briefs\"],\n        \"operationId\": \"createProjectBrief\",\n        \"requestBody\": {\n          \"description\": \"The project brief to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/ProjectBriefRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new project brief.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectBriefResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"402\": { \"$ref\": \"#/components/responses/PaymentRequired\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/project_templates/{project_template_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_template_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a project template\",\n        \"description\": \"Returns the complete project template record for a single project template.\",\n        \"tags\": [\"Project Templates\"],\n        \"operationId\": \"getProjectTemplate\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested project template.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/ProjectTemplateResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/project_templates\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get multiple project templates\",\n        \"description\": \"Returns the compact project template records for all project templates in the given team or workspace.\",\n        \"tags\": [\"Project Templates\"],\n        \"operationId\": \"getProjectTemplates\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/workspace_query_param\" },\n          { \"$ref\": \"#/components/parameters/team_query_param\" },\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested team's or workspace's project templates.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ProjectTemplateCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams/{team_gid}/project_templates\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/team_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a team's project templates\",\n        \"description\": \"Returns the compact project template records for all project templates in the team.\",\n        \"tags\": [\"Project Templates\"],\n        \"operationId\": \"getProjectTemplatesForTeam\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/limit\" },\n          { \"$ref\": \"#/components/parameters/offset\" }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested team's project templates.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/ProjectTemplateCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/project_templates/{project_template_gid}/instantiateProject\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_template_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Instantiate a project from a project template\",\n        \"description\": \"Creates and returns a job that will asynchronously handle the project instantiation.\\n\\n_Note: The body of this request will differ if your workspace is an organization. To determine if your workspace is an organization, use the [is_organization](/docs/workspace) parameter._\",\n        \"tags\": [\"Project Templates\"],\n        \"operationId\": \"instantiateProject\",\n        \"requestBody\": {\n          \"description\": \"Describes the inputs used for instantiating a project, such as the resulting project's name, which team it should be created in, and values for date variables.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ProjectTemplateInstantiateProjectRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the job to handle project instantiation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/JobResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/projects/{project_gid}/saveAsTemplate\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/project_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create a project template from a project\",\n        \"description\": \"Creates and returns a job that will asynchronously handle the project template creation. Note that\\nwhile the resulting project template can be accessed with the API, it won't be visible in the Asana\\nUI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).\",\n        \"tags\": [\"Projects\"],\n        \"operationId\": \"projectSaveAsTemplate\",\n        \"requestBody\": {\n          \"description\": \"Describes the inputs used for creating a project template, such as the resulting project template's name, which team it should be created in.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/ProjectSaveAsTemplateRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created the job to handle project template creation.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/JobResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/status_updates/{status_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/status_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a status update\",\n        \"description\": \"Returns the complete record for a single status update.\",\n        \"tags\": [\"Status Updates\"],\n        \"operationId\": \"getStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified object's status updates.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/StatusUpdateResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a status update\",\n        \"description\": \"Deletes a specific, existing status update.\\n\\nReturns an empty data record.\",\n        \"tags\": [\"Status Updates\"],\n        \"operationId\": \"deleteStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted the specified status.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/status_updates\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get status updates from an object\",\n        \"description\": \"Returns the compact status update records for all updates on the object.\",\n        \"tags\": [\"Status Updates\"],\n        \"operationId\": \"getStatusesForObject\",\n        \"parameters\": [\n          {\n            \"name\": \"parent\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for object to fetch statuses from. Must be a GID for a project, portfolio, or goal.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"159874\"\n          },\n          {\n            \"name\": \"created_since\",\n            \"in\": \"query\",\n            \"description\": \"Only return statuses that have been created since the given time.\",\n            \"schema\": { \"type\": \"string\", \"format\": \"date-time\" },\n            \"example\": \"2012-02-22T02:06:58.158Z\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the specified object's status updates.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/StatusUpdateCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a status update\",\n        \"description\": \"Creates a new status update on an object.\\nReturns the full record of the newly created status update.\",\n        \"tags\": [\"Status Updates\"],\n        \"operationId\": \"createStatusForObject\",\n        \"requestBody\": {\n          \"description\": \"The status update to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/StatusUpdateRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new status update.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/StatusUpdateResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/teams\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"post\": {\n        \"summary\": \"Create a team\",\n        \"description\": \"Creates a team within the current workspace.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"createTeam\",\n        \"requestBody\": {\n          \"description\": \"The team to create.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TeamRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfully created a new team.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TeamResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a team\",\n        \"description\": \"Updates a team within the current workspace.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"updateTeam\",\n        \"requestBody\": {\n          \"description\": \"The team to update.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": { \"$ref\": \"#/components/schemas/TeamRequest\" }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the team.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/TeamResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/workspaces/{workspace_gid}/teams\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/workspace_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get teams in a workspace\",\n        \"description\": \"Returns the compact records for all teams in the workspace visible to the authorized user.\",\n        \"tags\": [\"Teams\"],\n        \"operationId\": \"getTeamsForWorkspace\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Returns the team records for all teams in the organization or workspace accessible to the authenticated user.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": { \"$ref\": \"#/components/schemas/TeamCompact\" }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/time_periods/{time_period_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/time_period_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a time period\",\n        \"description\": \"Returns the full record for a single time period.\",\n        \"operationId\": \"getTimePeriod\",\n        \"tags\": [\"Time Periods\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the record for a single time period.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/TimePeriodResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/time_periods\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" },\n        { \"$ref\": \"#/components/parameters/limit\" },\n        { \"$ref\": \"#/components/parameters/offset\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get time periods\",\n        \"description\": \"Returns compact time period records.\",\n        \"tags\": [\"Time Periods\"],\n        \"operationId\": \"getTimePeriods\",\n        \"parameters\": [\n          {\n            \"name\": \"start_on\",\n            \"in\": \"query\",\n            \"description\": \"ISO 8601 date string\",\n            \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n            \"example\": \"2019-09-15\"\n          },\n          {\n            \"name\": \"end_on\",\n            \"in\": \"query\",\n            \"description\": \"ISO 8601 date string\",\n            \"schema\": { \"type\": \"string\", \"format\": \"date\" },\n            \"example\": \"2019-09-15\"\n          },\n          {\n            \"name\": \"workspace\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"Globally unique identifier for the workspace.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"31326\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested time periods.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/TimePeriodCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goal_relationships/{goal_relationship_gid}\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_relationship_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"get\": {\n        \"summary\": \"Get a goal relationship\",\n        \"description\": \"Returns the complete updated goal relationship record for a single goal relationship.\",\n        \"tags\": [\"Goal Relationships\"],\n        \"operationId\": \"getGoalRelationship\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the record for the goal relationship.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/GoalRelationshipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a goal relationship\",\n        \"description\": \"An existing goal relationship can be updated by making a PUT request on the URL for\\nthat goal relationship. Only the fields provided in the `data` block will be updated;\\nany unspecified fields will remain unchanged.\\n\\nReturns the complete updated goal relationship record.\",\n        \"tags\": [\"Goal Relationships\"],\n        \"operationId\": \"updateGoalRelationship\",\n        \"requestBody\": {\n          \"description\": \"The updated fields for the goal relationship.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalRelationshipRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated the goal relationship.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/GoalRelationshipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goal_relationships\": {\n      \"get\": {\n        \"summary\": \"Get goal relationships\",\n        \"description\": \"Returns compact goal relationship records.\",\n        \"tags\": [\"Goal Relationships\"],\n        \"operationId\": \"getGoalRelationships\",\n        \"parameters\": [\n          { \"$ref\": \"#/components/parameters/pretty\" },\n          { \"$ref\": \"#/components/parameters/fields\" },\n          {\n            \"name\": \"supported_goal\",\n            \"required\": true,\n            \"in\": \"query\",\n            \"description\": \"Globally unique identifier for the supported goal in the goal relationship.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"12345\"\n          },\n          {\n            \"name\": \"resource_subtype\",\n            \"in\": \"query\",\n            \"description\": \"If provided, filter to goal relationships with a given resource_subtype.\",\n            \"schema\": { \"type\": \"string\" },\n            \"example\": \"subgoal\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully retrieved the requested goal relationships.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/GoalRelationshipCompact\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/addSupportingRelationship\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Add a supporting goal relationship\",\n        \"description\": \"Creates a goal relationship by adding a supporting resource to a given goal.\\n\\nReturns the newly created goal relationship record.\",\n        \"tags\": [\"Goal Relationships\"],\n        \"operationId\": \"addSupportingRelationship\",\n        \"requestBody\": {\n          \"description\": \"The supporting resource to be added to the goal\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalAddSupportingRelationshipRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully created the goal relationship.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/GoalRelationshipResponse\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    },\n    \"/goals/{goal_gid}/removeSupportingRelationship\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/goal_path_gid\" },\n        { \"$ref\": \"#/components/parameters/pretty\" },\n        { \"$ref\": \"#/components/parameters/fields\" }\n      ],\n      \"post\": {\n        \"summary\": \"Removes a supporting goal relationship\",\n        \"description\": \"Removes a goal relationship for a given parent goal.\",\n        \"tags\": [\"Goal Relationships\"],\n        \"operationId\": \"removeSupportingRelationship\",\n        \"requestBody\": {\n          \"description\": \"The supporting resource to be removed from the goal\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"$ref\": \"#/components/schemas/GoalRemoveSupportingRelationshipRequest\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully removed the goal relationship.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": { \"$ref\": \"#/components/schemas/EmptyResponse\" }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": { \"$ref\": \"#/components/responses/BadRequest\" },\n          \"401\": { \"$ref\": \"#/components/responses/Unauthorized\" },\n          \"403\": { \"$ref\": \"#/components/responses/Forbidden\" },\n          \"404\": { \"$ref\": \"#/components/responses/NotFound\" },\n          \"500\": { \"$ref\": \"#/components/responses/InternalServerError\" }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/asana-1.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/asana-1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CustomFieldResponse\": parse schema: parse schema: parse schema: parse schema: parse schema: parse schema: property \"resource_subtype\": at 926:42: duplicate enum value: \"\\\"number\\\"\""
}