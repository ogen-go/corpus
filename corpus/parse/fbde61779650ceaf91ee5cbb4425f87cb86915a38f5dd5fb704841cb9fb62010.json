{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-mediastore-2017-09-01-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-mediastore-2017-09-01-swagger.yaml",
			"byteSize": 53025,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2017-09-01\n  x-release: v4\n  title: AWS Elemental MediaStore\n  description: \"An AWS Elemental MediaStore container is a namespace that holds folders and\n    objects. You use a container endpoint to create, read, and delete objects. \"\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: mediastore\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediastore-2017-09-01.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/mediastore/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=MediaStore_20170901.CreateContainer:\n    post:\n      operationId: CreateContainer\n      description: Creates a storage container to hold objects. A container is similar to a\n        bucket in the Amazon S3 service.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateContainerOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.CreateContainer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateContainerInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.DeleteContainer:\n    post:\n      operationId: DeleteContainer\n      description: \"Deletes the specified container. Before you make a\n        \u003ccode\u003eDeleteContainer\u003c/code\u003e request, delete any objects in the\n        container or in any folders in the container. You can delete only empty\n        containers. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteContainerOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.DeleteContainer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteContainerInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.DeleteContainerPolicy:\n    post:\n      operationId: DeleteContainerPolicy\n      description: Deletes the access policy that is associated with the specified\n        container.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteContainerPolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: PolicyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyNotFoundException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.DeleteContainerPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteContainerPolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.DeleteCorsPolicy:\n    post:\n      operationId: DeleteCorsPolicy\n      description: \u003cp\u003eDeletes the cross-origin resource sharing (CORS) configuration\n        information that is set for the container.\u003c/p\u003e \u003cp\u003eTo use this operation,\n        you must have permission to perform the\n        \u003ccode\u003eMediaStore:DeleteCorsPolicy\u003c/code\u003e action. The container owner has\n        this permission by default and can grant this permission to others.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteCorsPolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: CorsPolicyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CorsPolicyNotFoundException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.DeleteCorsPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteCorsPolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.DeleteLifecyclePolicy:\n    post:\n      operationId: DeleteLifecyclePolicy\n      description: Removes an object lifecycle policy from a container. It takes up to 20\n        minutes for the change to take effect.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteLifecyclePolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: PolicyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyNotFoundException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.DeleteLifecyclePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteLifecyclePolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.DescribeContainer:\n    post:\n      operationId: DescribeContainer\n      description: Retrieves the properties of the requested container. This request is\n        commonly used to retrieve the endpoint of a container. An endpoint is a\n        value assigned by the service when a new container is created. A\n        container's endpoint does not change after it has been assigned. The\n        \u003ccode\u003eDescribeContainer\u003c/code\u003e request returns a single\n        \u003ccode\u003eContainer\u003c/code\u003e object based on \u003ccode\u003eContainerName\u003c/code\u003e. To\n        return all \u003ccode\u003eContainer\u003c/code\u003e objects that are associated with a\n        specified AWS account, use \u003ca\u003eListContainers\u003c/a\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeContainerOutput\"\n        \"480\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"481\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.DescribeContainer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeContainerInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.GetContainerPolicy:\n    post:\n      operationId: GetContainerPolicy\n      description: Retrieves the access policy for the specified container. For information\n        about the data that is included in an access policy, see the \u003ca\n        href=\"https://aws.amazon.com/documentation/iam/\"\u003eAWS Identity and Access\n        Management User Guide\u003c/a\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetContainerPolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: PolicyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyNotFoundException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.GetContainerPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetContainerPolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.GetCorsPolicy:\n    post:\n      operationId: GetCorsPolicy\n      description: \u003cp\u003eReturns the cross-origin resource sharing (CORS) configuration\n        information that is set for the container.\u003c/p\u003e \u003cp\u003eTo use this operation,\n        you must have permission to perform the\n        \u003ccode\u003eMediaStore:GetCorsPolicy\u003c/code\u003e action. By default, the container\n        owner has this permission and can grant it to others.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetCorsPolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: CorsPolicyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CorsPolicyNotFoundException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.GetCorsPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetCorsPolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.GetLifecyclePolicy:\n    post:\n      operationId: GetLifecyclePolicy\n      description: Retrieves the object lifecycle policy that is assigned to a container.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetLifecyclePolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: PolicyNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyNotFoundException\"\n        \"483\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.GetLifecyclePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GetLifecyclePolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.ListContainers:\n    post:\n      operationId: ListContainers\n      description: \u003cp\u003eLists the properties of all containers in AWS Elemental MediaStore.\n        \u003c/p\u003e \u003cp\u003eYou can query to receive all the containers in one response. Or\n        you can include the \u003ccode\u003eMaxResults\u003c/code\u003e parameter to receive a\n        limited number of containers in each response. In this case, the\n        response includes a token. To get the next set of containers, send the\n        command again, this time with the \u003ccode\u003eNextToken\u003c/code\u003e parameter (with\n        the returned token as its value). The next set of responses appears,\n        with a token if there are still more containers to receive. \u003c/p\u003e \u003cp\u003eSee\n        also \u003ca\u003eDescribeContainer\u003c/a\u003e, which gets the properties of one\n        container. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListContainersOutput\"\n        \"480\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: MaxResults\n          in: query\n          description: Pagination limit\n          required: false\n          schema:\n            type: string\n        - name: NextToken\n          in: query\n          description: Pagination token\n          required: false\n          schema:\n            type: string\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.ListContainers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListContainersInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: \"Returns a list of the tags assigned to the specified container. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.ListTagsForResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTagsForResourceInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.PutContainerPolicy:\n    post:\n      operationId: PutContainerPolicy\n      description: \u003cp\u003eCreates an access policy for the specified container to restrict the\n        users and clients that can access it. For information about the data\n        that is included in an access policy, see the \u003ca\n        href=\"https://aws.amazon.com/documentation/iam/\"\u003eAWS Identity and Access\n        Management User Guide\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor this release of the REST API, you\n        can create only one policy for a container. If you enter\n        \u003ccode\u003ePutContainerPolicy\u003c/code\u003e twice, the second command modifies the\n        existing policy. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutContainerPolicyOutput\"\n        \"480\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"481\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.PutContainerPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutContainerPolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.PutCorsPolicy:\n    post:\n      operationId: PutCorsPolicy\n      description: \u003cp\u003eSets the cross-origin resource sharing (CORS) configuration on a\n        container so that the container can service cross-origin requests. For\n        example, you might want to enable a request whose origin is\n        http://www.example.com to access your AWS Elemental MediaStore container\n        at my.example.container.com by using the browser's XMLHttpRequest\n        capability.\u003c/p\u003e \u003cp\u003eTo enable CORS on a container, you attach a CORS\n        policy to the container. In the CORS policy, you configure rules that\n        identify origins and the HTTP methods that can be executed on your\n        container. The policy can contain up to 398,000 characters. You can add\n        up to 100 rules to a CORS policy. If more than one rule applies, the\n        service uses the first applicable rule listed.\u003c/p\u003e \u003cp\u003eTo learn more\n        about CORS, see \u003ca\n        href=\"https://docs.aws.amazon.com/mediastore/latest/ug/cors-policy.html\"\u003eCross-Origin\n        Resource Sharing (CORS) in AWS Elemental MediaStore\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutCorsPolicyOutput\"\n        \"480\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"481\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.PutCorsPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutCorsPolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.PutLifecyclePolicy:\n    post:\n      operationId: PutLifecyclePolicy\n      description: \u003cp\u003eWrites an object lifecycle policy to a container. If the container\n        already has an object lifecycle policy, the service replaces the\n        existing policy with the new policy. It takes up to 20 minutes for the\n        change to take effect.\u003c/p\u003e \u003cp\u003eFor information about how to construct an\n        object lifecycle policy, see \u003ca\n        href=\"https://docs.aws.amazon.com/mediastore/latest/ug/policies-object-lifecycle-components.html\"\u003eComponents\n        of an Object Lifecycle Policy\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutLifecyclePolicyOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.PutLifecyclePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutLifecyclePolicyInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.StartAccessLogging:\n    post:\n      operationId: StartAccessLogging\n      description: Starts access logging on the specified container. When you enable access\n        logging on a container, MediaStore delivers access logs for objects\n        stored in that container to Amazon CloudWatch Logs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartAccessLoggingOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.StartAccessLogging\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartAccessLoggingInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.StopAccessLogging:\n    post:\n      operationId: StopAccessLogging\n      description: Stops access logging on the specified container. When you stop access\n        logging on a container, MediaStore stops sending access logs to Amazon\n        CloudWatch Logs. These access logs are not saved and are not\n        retrievable.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StopAccessLoggingOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.StopAccessLogging\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StopAccessLoggingInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.TagResource:\n    post:\n      operationId: TagResource\n      description: Adds tags to the specified AWS Elemental MediaStore container. Tags are\n        key:value pairs that you can associate with AWS resources. For example,\n        the tag key might be \"customer\" and the tag value might be \"companyA.\"\n        You can specify one or more tags to add to each container. You can add\n        up to 50 tags to each container. For more information about tagging,\n        including naming and usage conventions, see \u003ca\n        href=\"https://aws.amazon.com/documentation/mediastore/tagging\"\u003eTagging\n        Resources in MediaStore\u003c/a\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.TagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagResourceInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=MediaStore_20170901.UntagResource:\n    post:\n      operationId: UntagResource\n      description: \"Removes tags from the specified container. You can specify one or more\n        tags to remove. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceOutput\"\n        \"480\":\n          description: ContainerInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerInUseException\"\n        \"481\":\n          description: ContainerNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ContainerNotFoundException\"\n        \"482\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServerError\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - MediaStore_20170901.UntagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UntagResourceInput\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://mediastore.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The MediaStore multi-region endpoint\n  - url: https://mediastore.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The MediaStore multi-region endpoint\n  - url: http://mediastore.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The MediaStore endpoint for China (Beijing) and China (Ningxia)\n  - url: https://mediastore.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The MediaStore endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateContainerOutput:\n      type: object\n      required:\n        - Container\n      properties:\n        Container:\n          $ref: \"#/components/schemas/Container\"\n    CreateContainerInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    ContainerInUseException: {}\n    LimitExceededException: {}\n    InternalServerError: {}\n    DeleteContainerOutput:\n      type: object\n      properties: {}\n    DeleteContainerInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    ContainerNotFoundException: {}\n    DeleteContainerPolicyOutput:\n      type: object\n      properties: {}\n    DeleteContainerPolicyInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    PolicyNotFoundException: {}\n    DeleteCorsPolicyOutput:\n      type: object\n      properties: {}\n    DeleteCorsPolicyInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    CorsPolicyNotFoundException: {}\n    DeleteLifecyclePolicyOutput:\n      type: object\n      properties: {}\n    DeleteLifecyclePolicyInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    DescribeContainerOutput:\n      type: object\n      properties:\n        Container:\n          $ref: \"#/components/schemas/Container\"\n    DescribeContainerInput:\n      type: object\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    GetContainerPolicyOutput:\n      type: object\n      required:\n        - Policy\n      properties:\n        Policy:\n          $ref: \"#/components/schemas/ContainerPolicy\"\n    GetContainerPolicyInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    GetCorsPolicyOutput:\n      type: object\n      required:\n        - CorsPolicy\n      properties:\n        CorsPolicy:\n          $ref: \"#/components/schemas/CorsPolicy\"\n    GetCorsPolicyInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    GetLifecyclePolicyOutput:\n      type: object\n      required:\n        - LifecyclePolicy\n      properties:\n        LifecyclePolicy:\n          $ref: \"#/components/schemas/LifecyclePolicy\"\n    GetLifecyclePolicyInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    ListContainersOutput:\n      type: object\n      required:\n        - Containers\n      properties:\n        Containers:\n          $ref: \"#/components/schemas/ContainerList\"\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListContainersInput:\n      type: object\n      properties:\n        NextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n        MaxResults:\n          $ref: \"#/components/schemas/ContainerListLimit\"\n    ListTagsForResourceOutput:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    ListTagsForResourceInput:\n      type: object\n      required:\n        - Resource\n      properties:\n        Resource:\n          $ref: \"#/components/schemas/ContainerARN\"\n    PutContainerPolicyOutput:\n      type: object\n      properties: {}\n    PutContainerPolicyInput:\n      type: object\n      required:\n        - ContainerName\n        - Policy\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n        Policy:\n          $ref: \"#/components/schemas/ContainerPolicy\"\n    PutCorsPolicyOutput:\n      type: object\n      properties: {}\n    PutCorsPolicyInput:\n      type: object\n      required:\n        - ContainerName\n        - CorsPolicy\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n        CorsPolicy:\n          $ref: \"#/components/schemas/CorsPolicy\"\n    PutLifecyclePolicyOutput:\n      type: object\n      properties: {}\n    PutLifecyclePolicyInput:\n      type: object\n      required:\n        - ContainerName\n        - LifecyclePolicy\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n        LifecyclePolicy:\n          $ref: \"#/components/schemas/LifecyclePolicy\"\n    StartAccessLoggingOutput:\n      type: object\n      properties: {}\n    StartAccessLoggingInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    StopAccessLoggingOutput:\n      type: object\n      properties: {}\n    StopAccessLoggingInput:\n      type: object\n      required:\n        - ContainerName\n      properties:\n        ContainerName:\n          $ref: \"#/components/schemas/ContainerName\"\n    TagResourceOutput:\n      type: object\n      properties: {}\n    TagResourceInput:\n      type: object\n      required:\n        - Resource\n        - Tags\n      properties:\n        Resource:\n          $ref: \"#/components/schemas/ContainerARN\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    UntagResourceOutput:\n      type: object\n      properties: {}\n    UntagResourceInput:\n      type: object\n      required:\n        - Resource\n        - TagKeys\n      properties:\n        Resource:\n          $ref: \"#/components/schemas/ContainerARN\"\n        TagKeys:\n          $ref: \"#/components/schemas/TagKeyList\"\n    Header:\n      type: string\n      pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n      minLength: 1\n      maxLength: 8192\n    AllowedHeaders:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Header\"\n      minItems: 0\n      maxItems: 100\n    MethodName:\n      type: string\n      enum:\n        - PUT\n        - GET\n        - DELETE\n        - HEAD\n    AllowedMethods:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MethodName\"\n      minItems: 1\n      maxItems: 4\n    Origin:\n      type: string\n      pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n      minLength: 1\n      maxLength: 2048\n    AllowedOrigins:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Origin\"\n      minItems: 1\n      maxItems: 100\n    Endpoint:\n      type: string\n      minLength: 1\n      maxLength: 255\n    TimeStamp:\n      type: string\n      format: date-time\n    ContainerARN:\n      type: string\n      pattern: arn:aws:mediastore:[a-z]+-[a-z]+-\\d:\\d{12}:container/[\\w-]{1,255}\n      minLength: 1\n      maxLength: 1024\n    ContainerName:\n      type: string\n      pattern: \"[\\\\w-]+\"\n      minLength: 1\n      maxLength: 255\n    ContainerStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - CREATING\n        - DELETING\n      minLength: 1\n      maxLength: 16\n    ContainerAccessLoggingEnabled:\n      type: boolean\n    Container:\n      type: object\n      properties:\n        Endpoint:\n          $ref: \"#/components/schemas/Endpoint\"\n        CreationTime:\n          $ref: \"#/components/schemas/TimeStamp\"\n        ARN:\n          $ref: \"#/components/schemas/ContainerARN\"\n        Name:\n          $ref: \"#/components/schemas/ContainerName\"\n        Status:\n          $ref: \"#/components/schemas/ContainerStatus\"\n        AccessLoggingEnabled:\n          $ref: \"#/components/schemas/ContainerAccessLoggingEnabled\"\n      description: This section describes operations that you can perform on an AWS\n        Elemental MediaStore container.\n    ContainerList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Container\"\n    ContainerListLimit:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ContainerPolicy:\n      type: string\n      pattern: \"[\\\\x00-\\\\x7F]+\"\n      minLength: 1\n      maxLength: 8192\n    CorsRule:\n      type: object\n      required:\n        - AllowedOrigins\n        - AllowedHeaders\n      properties:\n        AllowedOrigins:\n          $ref: \"#/components/schemas/AllowedOrigins\"\n        AllowedMethods:\n          $ref: \"#/components/schemas/AllowedMethods\"\n        AllowedHeaders:\n          $ref: \"#/components/schemas/AllowedHeaders\"\n        MaxAgeSeconds:\n          $ref: \"#/components/schemas/MaxAgeSeconds\"\n        ExposeHeaders:\n          $ref: \"#/components/schemas/ExposeHeaders\"\n      description: A rule for a CORS policy. You can add up to 100 rules to a CORS policy.\n        If more than one rule applies, the service uses the first applicable\n        rule listed.\n    CorsPolicy:\n      type: array\n      description: \"The CORS policy of the container. \"\n      items:\n        $ref: \"#/components/schemas/CorsRule\"\n      minItems: 1\n      maxItems: 100\n    MaxAgeSeconds:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    ExposeHeaders:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Header\"\n      minItems: 0\n      maxItems: 100\n    TagList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n    LifecyclePolicy:\n      type: string\n      pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n      minLength: 0\n      maxLength: 8192\n    PaginationToken:\n      type: string\n      pattern: \"[0-9A-Za-z=/+]+\"\n      minLength: 1\n      maxLength: 1024\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      properties:\n        Key:\n          $ref: \"#/components/schemas/TagKey\"\n        Value:\n          $ref: \"#/components/schemas/TagValue\"\n      description: A collection of tags associated with a container. Each tag consists of a\n        key:value pair, which can be anything you define. Typically, the tag key\n        represents a category (such as \"environment\") and the tag value\n        represents a specific value within that category (such as \"test,\"\n        \"development,\" or \"production\"). You can add up to 50 tags to each\n        container. For more information about tagging, including naming and\n        usage conventions, see \u003ca\n        href=\"https://aws.amazon.com/documentation/mediastore/tagging\"\u003eTagging\n        Resources in MediaStore\u003c/a\u003e.\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-mediastore-2017-09-01-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-mediastore-2017-09-01-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:19150: duplicate path: \"/#X-Amz-Target=MediaStore_20170901.DescribeContainer\""
}