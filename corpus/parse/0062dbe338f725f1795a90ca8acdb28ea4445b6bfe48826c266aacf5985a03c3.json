{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "cs_v1.0.0.yaml",
			"size": 0,
			"path": "cs/v1/cs_v1.0.0.yaml",
			"byteSize": 10301,
			"content": "openapi: 3.0.3\ninfo:\n  version: 1.0.0\n  title: DCSA OpenAPI specification for Commercial Schedules\n  description: |\n    API specification issued by DCSA.org.\n    \n    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/cs/v1#v100). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\n\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Digital Container Shipping Association (DCSA)\n    url: https://dcsa.org\n    email: info@dcsa.org\npaths:\n  /v1/point-to-point-schedules:\n    get:\n      summary: Get Point-Point schedules\n      description: |\n        Retrieves the Point-Point schedules\n      parameters:\n        - $ref: '#/components/parameters/placeOfReceiptQueryParam'\n        - $ref: '#/components/parameters/portOfLoadQueryParam'\n        - $ref: '#/components/parameters/placeOfDeliveryQueryParam'\n        - $ref: '#/components/parameters/portOfDischargeQueryParam'\n        - $ref: '#/components/parameters/departureStartDateTimeQueryParam'\n        - $ref: '#/components/parameters/departureEndDateTimeQueryParam'\n        - $ref: '#/components/parameters/arrivalStartDateTimeQueryParam'\n        - $ref: '#/components/parameters/arrivalEndDateTimeQueryParam'\n        - $ref: '#/components/parameters/useDirectRoutingQueryParam'\n        - $ref: '#/components/parameters/vesselFlagQueryParam'\n\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/limit'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/cursor'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/sort'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/Api-Version-Major'\n      responses:\n        '200':\n          description: Request successful\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/API-Version'\n            Current-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Current-Page'\n            Next-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Next-Page'\n            Prev-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Prev-Page'\n            Last-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Last-Page'\n            First-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/First-Page'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/pointToPoint'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\ncomponents:\n  schemas:\n    dateTime:\n      type: string\n      format: date-time\n      example: '2021-01-09T14:12:56+01:00'      \n    pointToPoint:\n      type: string\n      maxLength: 3\n      description: |\n        The code to identify the type of information `documentID` points to. Can be one of the following values\n        - CBR (Carrier Booking Request Reference)\n        - BKG (Booking)\n\n        More details can be found on \u003ca href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/documenttypecodes.csv\"\u003eGitHub\u003c/a\u003e. Be aware that the list provided here is a subset of the possible values.\n      example: CBR\n      enum:\n        - CBR\n        - BKG\n\n  parameters:\n  \n    ##############\n    # Query params\n    ##############\n    \n    placeOfReceiptQueryParam:\n      in: query\n      name: placeOfReceipt\n      description: |\n        `Place Of Receipt` defined as a UnLocationCode. Cannot be used in combination with `portOfLoad`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    portOfLoadQueryParam:\n      in: query\n      name: portOfLoad\n      description: |\n        `Port Of Load` defined as a UnLocationCode. Cannot be used in combination with `placeOfReceipt`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    placeOfDeliveryQueryParam:\n      in: query\n      name: placeOffDelivery\n      description: |\n        `Place Of fDelivery` defined as a UnLocationCode. Cannot be used in combination with `portOfDischarge`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    portOfDischargeQueryParam:\n      in: query\n      name: portOfDischarge\n      description: |\n        `Port Of Discharge` defined as a UnLocationCode. Cannot be used in combination with `placeOffDelivery`\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'\n      required: false\n    departureStartDateTimeQueryParam:\n      in: query\n      name: departureStartDateTime\n      description: |\n        Limit the result based on the departure start DateTime. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the =)\n        \n        \u003ci\u003edepartureStartDateTime\u003cb\u003e\u0026#58;gte\u003c/b\u003e=2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\u003c/i\u003e\n        \n        would result in all events created \u0026#8805; 2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\n        \n        The following operators are supported\n        - \u0026#58;gte (\u0026#8805; Greater than or equal)\n        - \u0026#58;gt (\u0026#62; Greater than)\n        - \u0026#58;lte (\u0026#8804; Less than or equal)\n        - \u0026#58;lt (\u0026#60; Less than)\n        - \u0026#58;eq (\u0026#61; Equal to)\n        \n        If no operator is provided, a \u003cb\u003estrictly equal\u003c/b\u003e is used (this is equivalent to \u003cb\u003e\u0026#58;eq\u003c/b\u003e operator).\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    departureEndDateTimeQueryParam:\n      in: query\n      name: departureEndDateTime\n      description: |\n        Limit the result based on the departure end DateTime. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the =)\n        \n        \u003ci\u003edepartureEndDateTime\u003cb\u003e\u0026#58;gte\u003c/b\u003e=2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\u003c/i\u003e\n        \n        would result in all events created \u0026#8805; 2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\n        \n        The following operators are supported\n        - \u0026#58;gte (\u0026#8805; Greater than or equal)\n        - \u0026#58;gt (\u0026#62; Greater than)\n        - \u0026#58;lte (\u0026#8804; Less than or equal)\n        - \u0026#58;lt (\u0026#60; Less than)\n        - \u0026#58;eq (\u0026#61; Equal to)\n        \n        If no operator is provided, a \u003cb\u003estrictly equal\u003c/b\u003e is used (this is equivalent to \u003cb\u003e\u0026#58;eq\u003c/b\u003e operator).\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    arrivalStartDateTimeQueryParam:\n      in: query\n      name: arrivalStartDateTime\n      description: |\n        Limit the result based on the arrival start DateTime. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the =)\n        \n        \u003ci\u003edepartureStartDateTime\u003cb\u003e\u0026#58;gte\u003c/b\u003e=2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\u003c/i\u003e\n        \n        would result in all events created \u0026#8805; 2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\n        \n        The following operators are supported\n        - \u0026#58;gte (\u0026#8805; Greater than or equal)\n        - \u0026#58;gt (\u0026#62; Greater than)\n        - \u0026#58;lte (\u0026#8804; Less than or equal)\n        - \u0026#58;lt (\u0026#60; Less than)\n        - \u0026#58;eq (\u0026#61; Equal to)\n        \n        If no operator is provided, a \u003cb\u003estrictly equal\u003c/b\u003e is used (this is equivalent to \u003cb\u003e\u0026#58;eq\u003c/b\u003e operator).\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    arrivalEndDateTimeQueryParam:\n      in: query\n      name: arrivalEndDateTime\n      description: |\n        Limit the result based on the arrival end DateTime. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the =)\n        \n        \u003ci\u003edepartureEndDateTime\u003cb\u003e\u0026#58;gte\u003c/b\u003e=2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\u003c/i\u003e\n        \n        would result in all events created \u0026#8805; 2021-04-01T14\u0026#58;12\u0026#58;56+01\u0026#58;00\n        \n        The following operators are supported\n        - \u0026#58;gte (\u0026#8805; Greater than or equal)\n        - \u0026#58;gt (\u0026#62; Greater than)\n        - \u0026#58;lte (\u0026#8804; Less than or equal)\n        - \u0026#58;lt (\u0026#60; Less than)\n        - \u0026#58;eq (\u0026#61; Equal to)\n        \n        If no operator is provided, a \u003cb\u003estrictly equal\u003c/b\u003e is used (this is equivalent to \u003cb\u003e\u0026#58;eq\u003c/b\u003e operator).\n      required: false\n      example: 2021-04-01T14:12:56+01:00\n      schema:\n        $ref: '#/components/schemas/dateTime'\n    vesselFlagQueryParam:\n      in: query\n      name: vesselFlag\n      description: |\n        The flag of the vessel. All Vessels in the results will belong to the specified flag\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselFlag'\n      required: false\n    useDirectRoutingQueryParam:\n      in: query\n      name: useDirectRouting\n      description: |\n        Whether to use Direct-routing (`True`) or Indirect-routing (`False`)\n      schema:\n        type: boolean\n      required: false"
		}
	},
	"Error": "parse: parse spec: paths: /v1/point-to-point-schedules: get: operation \"\": parameters: parse parameter \"\": resolve \"#/components/parameters/placeOfReceiptQueryParam\" reference: schema: parse schema: reference \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode\": resolve reference \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode\": invalid schema reference \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode\""
}