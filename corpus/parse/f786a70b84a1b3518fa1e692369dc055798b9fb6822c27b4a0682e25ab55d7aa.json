{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/realsee-developer/realsee-developer.github.com"
		},
		"file": {
			"name": "openapi-en.yaml",
			"size": 0,
			"path": "static/openapi-en.yaml",
			"byteSize": 58259,
			"content": "openapi: 3.0.2\ninfo:\n  title: \"Open API Explorer\"\n  description: |\n    # Ready to build\n\n    **REALSEE** relies on mature technologies such as **3D reconstruction** / **depth prediction** / **WebGL** , and uses standard and easy-to-use SDK and supporting OpenAPI to realize online space and immersive user experience. Since the user terminal is implemented using 'HTML5', the cross-platform feature is advantageous. Today, we are exporting these capabilities as an open platform that enables industry practitioners to quickly build a vibrant and interesting stream of 3D/VR applications.\n\n    ## Flow of interaction\n    The core pattern is shown below, where '*' is not necessary.\n\n    ![interaction process](https://files.readme.io/45593d8-Screen_Shot_2022-03-07_at_12.29.42_AM.png)\n    ## For whom\n\n    **Server Engineer** (aka backend/server engineer, including NodeJS Stack).\n\n    So the current documentation is in the form of the **API Explorer** . Client and JavaScript SDK please [**walks here**](https://realsee.js.org/docs/front/3d-space/intro).\n\n    # Get started\n\n    \u003e Make sure to follow the order of the text, or you may have unexpected problems. Steps 1-2 in the **Know Before You Build** section are very important and are the core part of building your test data.\n\n    ## What to Know Before Developing\n\n    |   serial number   | matters need attention                                                                                                                                                                                                                                                         | explain                                                                                    |\n    | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------------- |\n    | 1       | Download the **Realsee VR** acquisition app,[iOS Click here to download](https://apps.apple.com/cn/app/%E5%A6%82%E8%A7%86vr-%E6%89%8B%E6%9C%BA%E6%8B%8Dvr%E5%85%A8%E6%99%AF%E6%A8%A1%E5%9E%8B/id1502262095) / [Android Click here to download](https://a.app.qq.com/o/simple.jsp?pkgname=com.realsee.dimensionplus)。 | -                                                                                       |\n    | 2       | Follow the operation guidance to shoot.                                                                                                                                                                                                                                         | -                                                                                       |\n    | 3       | **Log in with the same phone number**[Developer Center website - top right corner - Console](https://developers.realsee.com/console)。                                                                                                                                                                   | Not logged in will automatically jump                                                                |\n    | 4       | Find `Application Id(AK)/Application Secret(SK)` and keep it safe.                                                                                                                                                                                                      | -                                                                                       |\n    | **5-1** | Call the fetch `access token` interface.                                                                                                                                                                                                                               | [gain access_token](/paths/auth-access_token/post) |\n    | **5-2** | It is recommended to call the corresponding API according to the API call method in this article [**tabular data**](/paths/open-v1-entity-vr-list/get) Get the first taste.                  | -                                                                                       |\n\n    ## API call flow\n\n    As shown in the figure below, there are two things you need to do before you can call the server-side interface:\n\n    ![Preparations for](https://files.readme.io/808c84c-8793c330d081798e93f3bd03865a263e_vlQYWpsY5S.png)\n\n    1. Apply for the permissions required for the API call\n\n    **For user convenience, almost all apis except the 'dump service' will be available for the time being, until further notice**.\n\n    2. Get the credentials needed for the API call\n\n    API calls are made by putting credentials in the Header and using the syntax 'Authorization: \u003ccredentials\u003e'. Refer to [**Get access_token**](/paths/auth-access_token/post) for obtaining and using credentials.\n\n    ## API calls\n\n    When calling the server interface, you need to use the HTTPS protocol, JSON data format, and UTF8 encoding. The request needs to put the access credential **access_token** in the Authorization Header.\n\n    Examples:\n\n    ```\n    $curl 'https://app-gateway.realsee.com/open/v1/entity/vr?vr_code=80eQOd3g2V4NZDm2Yy' -H 'Authorization: \u003cRequest temporary credentials for acquisition access_token\u003e'\n    ```\n\n    ## Explanation of API response results\n\n    Most API response bodies have 'code', 'status', and' data 'sections.\n\n    code is the error code, status is the error message, and data is the result of the API call. By default, the code is 0 and status is' success 'when the request is successful. data may not be present in the return of some action class apis.\n\n    For example:\n\n    ```success\n    {\n      \"request_id\": \"23f4356ef0c3f47dae60af547d581c69\",\n      \"code\": 0,\n      \"status\": \"success\",\n      \"data\": {} // Specific data content of the response\n    }\n    ```\n\n    ```error\n    {\n      \"request_id\": \"23f4356ef0c3f47dae60af547d581c69\",\n      \"code\": -3,\n      \"status\": \"miss authorization\",\n      \"data\": {} // Specific data content of the response\n    }\n    ```\n\n    \u003e **Note**: When a request fails, refer to the code in the error handling section of this chapter. The status is a summary of the error. Do not rely on the status to determine whether a request failed or not. The request_id in the Body returned from the request identifies the unique request, and you can use this value to report an API call issue.\n\n    ## Frequency control\n\n    For example, the frequency limit of the server is used to ensure that our API is highly available and performant, while ensuring data security. Our OpenAPI currently has two default strategies for this:\n\n    - A single API Key **256**per minute\n    - **500**times per minute per IP\n    # Explanation of nouns\n\n    ## Key nouns\n\n    - **VR code**: i.e. **vr_code**, the only global code that is generated after VR is released. VR code, namely vr_code, is the core input parameter for interaction with the open platform, and it can be said that 80% of API interactions are based on this parameter.\n    - **project**: The **project**, the entity that is generated at the beginning of the VR shoot, and is uniquely identified **before the reconstruction is successful**.\n    - **Work**: A unique identifier **after the rebuild**, the smallest unit used in the frontend JS/TS SDK. In most cases, VR/Work are equivalent concepts, i.e. **vr_code**is the only global encoding for Work.\n\n    ## Expand the noun\n\n    | name   | code | paraphrase                                                                        |\n    | ------ | ---------- | --------------------------------------------------------------------------- |\n    | panorama | panorama   |For example, the current 'cube' mode is used to implement the panorama, so for display: **6** images in total |\n    | observation point | observer   | **Point position** in panoramic walkthrough mode, i.e. the position of the camera                                |\n\n    # Error handling\n\n    \u003e Error code summary and quick troubleshooting guide, specific error business processes need to be designed by yourself.\n\n    | error code | explain         | Suggestions for troubleshooting                   |\n    | ------ | ------------ | -------------------------- |\n    | -3     | service error     | not available                       |\n    | -1     | Authentication verification error | Check if the access token has expired |\n  version: v1\nservers:\n  - url: https://app-gateway.realsee.com\ntags:\n  - name: authentication\n  - name: core entity\n    externalDocs:\n      description: Find out more\n      url: https://realsee.js.org\n  - name: extended entity\n    description: Floor plan, cover image.\n  - name: Live service\n    description: A standard service of **full-duplex communication capability**provided by Ruishi open platform.\n  - name: dump service\n    description: dump service.\n  - name: production service\n    description: production services.\n  - name: toolbox\n    description: toolbox.\n  - name: asynchronous task\n    description: Asynchronous tasks.\npaths:\n  /auth/access_token:\n    post:\n      requestBody:\n        content:\n          \"application/x-www-form-urlencoded\":\n            schema:\n              type: object\n              required: [\"app_key\", \"app_secret\"]\n              properties:\n                app_key:\n                  description: Application Id in console\n                  type: string\n                  default: \"KmAknx7zqqVNpWg8\"\n                app_secret:\n                  description: Application Secret in console\n                  type: string\n                  default: \"AVE4VGWGBI713YJ1JFVQSNFFCUJSEH7E\"\n      tags:\n        - authentication\n      summary: |\n        get access_token\n      description: |\n        # Why authentication\n\n        is the same as most APIs, in order to ensure the security of data, such as the open platform API requires an authentication process when accessing. The currently supported authentication process includes two types of：\n        - 1 ~~parameter signature~~. That is, the request parameters (`Header/Body`) are encoded by a specific algorithm, which contains Unix timestamps as random factors (**RANDOM FACTORS**) to increase the difficulty of data capture and ensure data security. However, due to the complexity of the algorithm implementation, it is temporarily abandoned for the convenience of quick access/application, and will be reopened when all language SDKs support it later. **Connected business parties will not be affected**.\n        - 2 **access_token mechanism**. That is, when any API call is initiated, a temporary access_token (default **5 minutes**) is obtained first, and subsequent requests carry it. The business side can consider setting a cache of about `3min` to reduce the response time of the overall server-side API.\n\n        \u003e The AK / SK demonstrated below are all for testing and demonstration purposes, please use the AK / SK at the time of application for real debugging.\n\n        access_token has a default validity period of **5min**. It is recommended to obtain it from the cache of the business end first before calling it, instead of obtaining it every time**, so as to reduce the network interaction of the server.\n\n        #### return field description\n        |name|example|type|description|required|\n        |-|-|-|-|-|\n        |access_token|`your-access-token`|`string`|temporary Credentials|YES|\n        |expire_at|`1645735400`|`integer`|expiration timestamp, **default 5min**|YES|\n      responses:\n        200:\n          description: Obtain access_token, which is a temporary credential, for subsequent authentication\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/AuthAccessToken\"\n  /open/v1/entity/vr/list:\n    get:\n      tags:\n        - core entity\n      summary: list data\n      description: |\n        \u003e Only successfully published projects can be obtained from this interface, that is, projects in shooting and editing are not exposed.\n\n        #### return field description\n\n        |name|example|type|description|required|\n        |-|-|-|-|-|\n        |list|`[]`|`array`|VR list|YES |\n        |total|`20`|`integer`|total|YES|\n        |page_size|`10`|`integer`|page size|YES|\n        |current_page|`1`|`integer`|current page number|YES |\n\n        ##### VR\n        |Name|Example|Type|Description|Required|\n        |-|-|-|-|-|\n        |vr_code|`80yAJrMWbqLBeDlvV1`|`string`|VR code|YES|\n        |create_time|`2021-07-13 11:27:10`|`string`|Create time|YES|\n        |name|`My space`|`string`|VR name|YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n        - name: page_size\n          in: query\n          description: \"Page capacity, the default is 10\"\n          schema:\n            type: integer\n            default: 10\n            minimum: 1\n            maximum: 1000\n        - name: page\n          in: query\n          description: \"current page, default is 1\"\n          required: true\n          schema:\n            type: integer\n            default: 1\n            minimum: 1\n      responses:\n        200:\n          description: Get the VR list to which the current application (Application) belongs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1EntityVRList\"\n  /open/v1/entity/vr:\n    get:\n      tags:\n        - core entity\n      summary: Basic data\n      description: |\n        \u003e The basic metadata is provided to the rendering SDK, and the basic VR roaming function can be easily completed.\n\n        corresponds to the front-end quick start [**move here**](https://realsee.js.org/docs/front/3d-space/intro), `server engineer` running through DEMO **is not difficult* *.\n\n        The current API has many data fields, and it is almost unnecessary to understand **direct transparent transmission**to the SDK.\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n        - name: vr_code\n          in: query\n          description: \"VR coding\"\n          required: true\n          schema:\n            type: string\n            default: \"80drj5DRZejY2Dq8Oe\"\n      responses:\n        200:\n          description: Get the basic metadata of the current VR code (vr_code)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1EntityVR\"\n  /open/v1/entity/floorplan:\n    get:\n      tags:\n        - extended entity\n      summary: floor plan\n      description: |\n        #### Return Field Description\n        |Name|Example|Type|Description|Required|\n        |-|-|-|\n        |-| |NO|\n        |outlines|`[]`|`array of outline`|list of outline outlines, including SVG and JPEG|YES|\n\n        ##### outline outlines\n        |name|example|type|description |must have|\n        |-|-|-|-|-|\n        |checksum|-|`string`|checksum|YES|\n        |index|`0`|`integer`|point index|YES|\n        |svg_url|-|`string`|SVG public address|YES|\n        |url|-|`string`|JPEG public address|YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n        - name: vr_code\n          in: query\n          description: \"VR coding\"\n          required: true\n          schema:\n            type: string\n            default: \"80drj5DRZejY2Dq8Oe\"\n      responses:\n        200:\n          description: Rushi self-developed structured floor plan data, serialized in JSON form\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1EntityFloorplan\"\n  /open/v1/entity/roompicture:\n    get:\n      tags:\n        - extended entity\n      summary: Partition diagram\n      description: |\n        #### Return Field Description\n\n        |Name|Example|Type|Description|Required|\n        |-|-|-|-|-|\n        |capture_data|`{}`|`object`|Screenshot structured data| YES|\n        |cell_name|`living room`|`string`|partition name|YES|\n        |url|-|`string`|screenshot address|YES|\n        |checksum|-|`string`|screenshot checksum| YES\n        |height|`1080`|`integer`|image width|YES|\n        |width|`1440`|`integer`|image width|YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n        - name: vr_code\n          in: query\n          description: \"VR coding\"\n          required: true\n          schema:\n            type: string\n            default: \"80drj5DRZejY2Dq8Oe\"\n      responses:\n        200:\n          description: Subdivision refers to a single room determined based on the floor plan, and the screenshot of the room in panoramic mode is the subdivision diagram.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1EntityRoompicture\"\n  /open/v1/entity/tag/list:\n    get:\n      tags:\n        - extended entity\n      summary: label list\n      description: |\n        #### Return Field Description\n\n        |Name|Example|Type|Description|Required|\n        |-|-|-|-|-|\n        |name|`North-South Transparent`|`string`|Tag Name|YES |\n        |description|-|`string`|label description|YES|\n        |type|`0`|`string`|label type|YES\n        |position|-|`array`|three-dimensional coordinates|YES|\n        |target_url |`1080`|`integer`|Hyperlink under the jump type tag|NO|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n        - name: vr_code\n          in: query\n          description: \"VR coding\"\n          required: true\n          schema:\n            type: string\n            default: \"80drj5DRZejY2Dq8Oe\"\n      responses:\n        200:\n          description: Structured tags in VR/3D space, including multiple types, the current API returns all tags at once.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1EntityTagList\"\n  /open/v1/live/entrance:\n    post:\n      requestBody:\n        content:\n          \"application/json\":\n            schema:\n              type: object\n              required:\n                - \"app_id\"\n                - \"create_user_id\"\n                - \"create_user_role\"\n                - \"members\"\n              properties:\n                app_id:\n                  description: Application Id in console\n                  type: string\n                  default: \"KmAknx7zqqVNpWg8\"\n                create_user_id:\n                  description: Create the user ID of the live room, and pass in the unique identifier of the business system user to distinguish different users\n                  type: string\n                  default: \"7e7b5a43f74142b7bab2021bb54c6d3e\"\n                create_user_role:\n                  description: Create the role of the live room user, this role must be in the list of roles you created in the background\n                  type: string\n                  default: \"audience\"\n                members:\n                  description: The list after JSON serialization, the user list (member) in the room, when not uploaded, the default live broadcast room is only the creator\n                  type: string\n                  default: \"[]\"\n                additive:\n                  description: The object after JSON serialization, the extension information of the room is created, and the callback of various event messages will carry part of the extension information\n                  type: string\n                  default: \"{}\"\n      tags:\n        - Live service\n      summary: create room\n      description: |\n        # What is live broadcast\n\n        Live broadcast service is a standard service of **full-duplex communication capability**provided by Rushi open platform, which is compatible with [**Tencent Cloud TRTC**](https://cloud.tencent.com/ product/trtc) is similar but can be closely integrated with the Ruoshi basic SDK long link channel, users can easily build a variety of innovative applications：\n\n        - VR real-time barrage\n        - VR roaming synchronization\n        - VR voice chat room\n\n        corresponds to the front-end development manual [**Please move here**](https://realsee.js.org/docs/front/3d-space/intro).\n\n        #### Description of request fields\n        ##### member (data structure embedded in `members` field)\n        |Name|Example|Type|Description|Required|\n        |-|-|-|-|- |\n        |user_id|`7e7b5a43f74142b7bab2021bb54c6d3e`|`string`|user ID of business system|YES|\n        |user_role|`audience`|`string`|user role|YES|\n        |extension|`{}`|`object` |Extended information of the user, after entering the live broadcast room, this information will be pushed|YES|\n\n        #### return field description\n\n        |Name|Example|Type|Description|Required|\n        |-|-|-|-|- |\n        |room_code|`R3LzwQmEb9OQxdJl`|`string`|live room number|YES|\n        |room_link|`wss://ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121`|`integer`| The long link (WebSocket) address of the room|YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n      responses:\n        200:\n          description: Create live room\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1LiveRoomDetail\"\n  /open/v1/live/apply/ticket:\n    post:\n      requestBody:\n        content:\n          \"application/json\":\n            schema:\n              type: object\n              required:\n                - \"app_id\"\n                - \"user_id\"\n                - \"user_role\"\n                - \"room_code\"\n              properties:\n                app_id:\n                  description: Application Id in console\n                  type: string\n                  default: \"KmAknx7zqqVNpWg8\"\n                user_id:\n                  description: Add the user ID of the live broadcast room, and pass in the unique identifier of the business system user, which is used to distinguish different users\n                  type: string\n                  default: \"7e7b5a43f74142b7bab2021bb54c6d3e\"\n                user_role:\n                  description: Add the role of the live room user, this role must be in the role list you created in the background\n                  type: string\n                  default: \"audience\"\n                room_code:\n                  description: Room ID to join\n                  type: string\n                  default: \"yw7Pz65mrX68A4oa\"\n                extension:\n                  description: The object after JSON serialization is used to store the user's extended information\n                  type: string\n                  default: \"{}\"\n      tags:\n        - Live service\n      summary: join the room\n      description: |\n        #### Return Field Description\n\n        |Name|Example|Type|Description|Required|\n        |-|-|-|\n        |-| The pass is valid within five minutes, once used, it will be invalid immediately**|YES|\n        |room_link|`wss://ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121`|`integer`|live room The long link (WebSocket) address of |YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n      responses:\n        200:\n          description: Apply for a room pass\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1LiveApplyTicket\"\n  /open/v1/live/voice/sign:\n    post:\n      requestBody:\n        content:\n          \"application/json\":\n            schema:\n              type: object\n              required: [\"app_id\", \"user_identifier\", \"user_role\", \"room_code\"]\n              properties:\n                app_id:\n                  description: Application Id in console\n                  type: string\n                  default: \"KmAknx7zqqVNpWg8\"\n                user_identifier:\n                  description: User ID, set it to the user's unique ID\n                  type: string\n                  default: \"7e7b5a43f74142b7bab2021bb54c6d3e\"\n                room_code:\n                  description: Room ID to join\n                  type: string\n                  default: \"yw7Pz65mrX68A4oa\"\n                voice_id:\n                  description: voice room number\n                  type: string\n                  default: \"\"\n      tags:\n        - Live service\n      summary: voice signature\n      description: |\n        #### Return field description\n\n        |name|example|type|description|required|\n        |-|-|-|-|-|\n        |voice_app_id|`1024`|`string`|Voice room AppID for SDK Use |YES|\n        |user_identifier|`7e7b5a43f74142b7bab2021bb54c6d3e`|`string`| user ID, set it as the unique ID of the user. |YES|\n        |sign|`bar`|`string`| corresponds to the signature data of the voice provider, for SDK usage |YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n      responses:\n        200:\n          description: Obtain the voice room signature, which is equivalent to \"join the room\" of the voice room branch line\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1LiveVoiceSign\"\n  /open/v1/live/room/detail:\n    get:\n      tags:\n        - Live service\n      summary: room details\n      description: |\n        #### Return Field Description\n\n        |Name|Example|Type|Description|Required|\n        |-|-|-|\n        |-|\n        |room_link|`wss://ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121`|`integer`|Long link (WebSocket) address of live room|YES|\n      parameters:\n        - name: Authorization\n          in: header\n          description: access_token obtained by authentication\n          required: true\n          schema:\n            type: string\n            default: your_access_token\n        - name: app_id\n          in: query\n          description: Application Id in console\n          required: true\n          schema:\n            type: string\n            default: \"KmAknx7zqqVNpWg8\"\n        - name: room_code\n          in: query\n          description: Query room code\n          required: true\n          schema:\n            type: string\n            default: \"yw7Pz65mrX68A4oa\"\n      responses:\n        200:\n          description: Query live room data\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  request_id:\n                    type: string\n                    description: \"Identifies a unique request\"\n                  trace_id:\n                    type: string\n                    description: \"Identifies a unique request, similar to request_id, but mainly used for request traceability scenarios\"\n                  code:\n                    type: integer\n                    description: \"Error code, the default is 0 when the request is successful\"\n                  status:\n                    type: string\n                    description: \"Error message, if the request is successful, the default is success\"\n                  cost:\n                    type: integer\n                    description: \"Time-consuming calculation of the server, in ms\"\n                  data:\n                    $ref: \"#/components/schemas/V1LiveRoomDetail\"\n  /open/v1/produce/project/apply/ticket:\n    $ref: \"./api-en/produce/apply_ticket.yaml\"\n  /open/v1/produce/project/create:\n    $ref: \"./api-en/produce/create.yaml\"\n  /open/v1/produce/project/list:\n    $ref: \"./api-en/produce/list.yaml\"\n  /open/v1/produce/project/detail:\n    $ref: \"./api-en/produce/detail.yaml\"\n  /open/v1/url/space:\n    $ref: \"./api-en/tool/url_toolbox.yaml\"\n  /open/v1/shepherd/task/create:\n    $ref: \"./api-en/task/shepherd_task.yaml\"\n  /open/v1/work/download:\n    $ref: \"./api-en/transfer/fetch_download_url.yaml\"\n  /open/v1/work/sign:\n    $ref: \"./api-en/transfer/work_sign.yaml\"\n  /open/v1/plugin/PangRulerPlugin:\n    $ref: \"./api-en/plugin/pano_ruler.yaml\"\n  /open/v1/plugin/CruisePlugin:\n    $ref: \"./api-en/plugin/cruise.yaml\"\n  /open/v1/data/vector:\n    $ref: \"./api-en/data/vector.yaml\"\n  /open/v1/entity/meta:\n    $ref: \"./api-en/entity/meta.yaml\"\n  /realsee-data/custom/detail.json:\n    $ref: \"./api-en/editor/custom/detail.yaml\"\n  /realsee-data/custom/route/list.json:\n    $ref: \"./api-en/editor/custom/route/list.yaml\"\n  /realsee-data/custom/card/info.json:\n    $ref: \"./api-en/editor/custom/card/info.yaml\"\n  /open/v1/city/list:\n    $ref: \"./api-en/city/list.yaml\"\n  /open/v1/resblock/suggest:\n    $ref: \"./api-en/resblock/suggest.yaml\"\n  /open/v1/floorplan/search:\n    $ref: \"./api-en/floorplan/search.yaml\"\n  /open/v1/shepherd/virtual/render/ai/submit:\n    $ref: \"./api-en/task/shepherd_virtual_render_ai_submit.yaml\"\n  /open/v1/shepherd/virtual/render/ai/style:\n    $ref: \"./api-en/task/shepherd_virtual_render_ai_style.yaml\"\n  /open/v1/entity/observer/guide:\n    $ref: \"./api-en/observer/guide.yaml\"\ncomponents:\n  schemas:\n    AuthAccessToken:\n      type: object\n      properties:\n        access_token:\n          type: string\n          description: \"temporary credentials\"\n        expire_at:\n          type: integer\n          description: \"Expiration timestamp, default 5min\"\n    V1EntityVRList:\n      type: object\n      properties:\n        list:\n          type: array\n          description: \"VR list\"\n          items:\n            type: object\n            properties:\n              create_time:\n                type: string\n                description: \"creation time\"\n              name:\n                type: string\n                description: \"VR name\"\n              vr_code:\n                type: string\n                description: \"VR coding\"\n        page_size:\n          type: integer\n          description: \"page size\"\n        total:\n          type: integer\n          description: \"total\"\n        current_page:\n          type: integer\n          description: \"current page number\"\n    V1EntityVR:\n      type: object\n      properties:\n        _signature:\n          type: string\n          description: \"Signature data for verifying data integrity\"\n        allow_hosts:\n          type: array\n          description: \"domain name allowed\"\n        base_url:\n          type: string\n          description: \"Relative base paths for static resources\"\n        certificate:\n          type: string\n          description: \"certificate data\"\n        create_time:\n          type: string\n          description: \"Work creation time\"\n        expire_at:\n          type: string\n          description: \"Expiration time in Unix timestamp format\"\n        floor_plan_type:\n          type: integer\n          description: \"floor plan type\"\n        initial:\n          type: object\n          description: \"initial point data\"\n          properties:\n            fov:\n              type: integer\n              description: \"angle of view\"\n            heading:\n              type: integer\n              description: \"direction\"\n            latitude:\n              type: integer\n              description: \"latitude\"\n            longitude:\n              type: number\n              description: \"longitude\"\n            pano:\n              type: integer\n              description: \"Panorama\"\n            pano_index:\n              type: integer\n              description: \"panorama index\"\n        model:\n          type: object\n          description: \"3D model data\"\n          properties:\n            file_url:\n              type: string\n              description: \"Model file address\"\n            material_base_url:\n              type: string\n              description: \"Model map base path\"\n            material_textures:\n              type: array\n              description: \"model texture data, array\"\n              items:\n                type: string\n                description: \"Model texture address\"\n            modify_time:\n              type: string\n              description: \"Model modification time\"\n            type:\n              type: integer\n              description: \"model type\"\n        observers:\n          type: array\n          description: \"observer list\"\n          items:\n            type: object\n            properties:\n              accessible_nodes:\n                type: array\n                description: \"list of visible nodes\"\n                items:\n                  type: integer\n              floor_index:\n                type: integer\n                description: \"floor directory\"\n              index:\n                type: integer\n                description: \"observer index\"\n              offset_point_count:\n                type: integer\n                description: \"Number of offset points\"\n              position:\n                type: array\n                description: \"location coordinate data\"\n                items:\n                  type: number\n              quaternion:\n                type: object\n                description: \"Quaternion data\"\n                properties:\n                  w:\n                    type: number\n                  x:\n                    type: number\n                  \"y\":\n                    type: number\n                  z:\n                    type: number\n              standing_position:\n                type: array\n                description: \"standing position\"\n                items:\n                  type: number\n              visible_nodes:\n                type: array\n                items:\n                  type: integer\n        panorama:\n          type: object\n          description: \"panorama data\"\n          properties:\n            count:\n              type: integer\n              description: \"Number of panoramas\"\n            list:\n              type: array\n              description: \"panorama list\"\n              items:\n                type: object\n                properties:\n                  back:\n                    type: string\n                  down:\n                    type: string\n                  front:\n                    type: string\n                  index:\n                    type: integer\n                  left:\n                    type: string\n                  right:\n                    type: string\n                  up:\n                    type: string\n        picture_url:\n          type: string\n          description: \"VR image address\"\n        title_picture_url:\n          type: string\n          description: \"VR Title Image Address\"\n        vr_code:\n          type: string\n          description: \"VR coding\"\n        vr_type:\n          type: string\n          description: \"VR type: 80 real scenes/ 81 virtual\"\n    V1EntityFloorplan:\n      type: object\n      properties:\n        computed_data:\n          type: object\n          description: \"Calculated floor plan data\"\n          properties:\n            bounding:\n              type: object\n              properties:\n                max:\n                  type: object\n                  properties:\n                    x:\n                      type: number\n                    \"y\":\n                      type: number\n                min:\n                  type: object\n                  properties:\n                    x:\n                      type: number\n                    \"y\":\n                      type: number\n                origin:\n                  type: object\n                  properties:\n                    x:\n                      type: integer\n                    \"y\":\n                      type: integer\n            entrance:\n              type: string\n              nullable: true\n            floor_datas:\n              type: array\n              items:\n                type: object\n                properties:\n                  floor_index:\n                    type: integer\n                  rooms:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        floor_type:\n                          type: integer\n                        id:\n                          type: string\n                        name:\n                          type: string\n                        observer_indexs:\n                          type: array\n                          items:\n                            type: integer\n                        path:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              x:\n                                type: number\n                              \"y\":\n                                type: number\n                        room_label:\n                          type: object\n                          properties:\n                            position:\n                              type: object\n                              properties:\n                                x:\n                                  type: number\n                                \"y\":\n                                  type: integer\n                            position_in_image:\n                              type: object\n                              properties:\n                                x:\n                                  type: number\n                                \"y\":\n                                  type: number\n                        room_type:\n                          type: string\n                        size:\n                          type: number\n                  rules:\n                    type: object\n                    properties:\n                      bottom:\n                        type: array\n                        items:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              x:\n                                type: integer\n                              \"y\":\n                                type: integer\n                      left:\n                        type: array\n                        items:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              x:\n                                type: integer\n                              \"y\":\n                                type: integer\n                      right:\n                        type: array\n                        items:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              x:\n                                type: integer\n                              \"y\":\n                                type: integer\n                      top:\n                        type: array\n                        items:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              x:\n                                type: integer\n                              \"y\":\n                                type: integer\n            observers:\n              type: array\n              items:\n                type: object\n                properties:\n                  floor_index:\n                    type: integer\n                  index:\n                    type: integer\n                  position:\n                    type: object\n                    properties:\n                      x:\n                        type: number\n                      \"y\":\n                        type: number\n                  position_in_image:\n                    type: object\n                    properties:\n                      x:\n                        type: number\n                      \"y\":\n                        type: number\n        format_data:\n          type: object\n          description: \"Formatted floor plan data, according to `computed_data`\"\n          properties:\n            bounding:\n              type: object\n              description: \"boundary data\"\n              properties:\n                max:\n                  type: object\n                  properties:\n                    x:\n                      type: number\n                      description: \"max x coordinate\"\n                    \"y\":\n                      type: number\n                      description: \"max y coordinate\"\n                min:\n                  type: object\n                  properties:\n                    x:\n                      type: number\n                      description: \"minimum x coordinate\"\n                    \"y\":\n                      type: number\n                      description: \"minimum y coordinate\"\n                origin:\n                  type: object\n                  properties:\n                    x:\n                      type: integer\n                      description: \"origin x coordinate\"\n                    \"y\":\n                      type: integer\n                      description: \"origin y coordinate\"\n            entrance:\n              type: string\n              nullable: true\n              description: \"entry point\"\n            floor_names:\n              type: array\n              description: \"floor name\"\n              items:\n                type: string\n                nullable: true\n            room_labels:\n              type: array\n              description: \"room label\"\n              items:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      description: \"room tag id\"\n                    name:\n                      type: string\n                      description: \"room name\"\n                    room_id:\n                      type: string\n                      description: \"room id\"\n                    size:\n                      type: number\n                      description: \"room size\"\n                    x:\n                      type: number\n                      description: \"room x coordinate\"\n                    \"y\":\n                      type: integer\n                      description: \"room y coordinate\"\n            room_observers:\n              type: array\n              description: \"room observation point\"\n              items:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    description: \"Room observation point id\"\n                  name:\n                    type: string\n                    description: \"Room Observation Point Name\"\n                  pano_index:\n                    type: integer\n                    description: \"panorama index\"\n                  room_id:\n                    type: string\n                    description: \"room id\"\n                  size:\n                    type: number\n                    description: \"room size\"\n            rooms:\n              type: array\n              description: \"Room\"\n              items:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    floor_type:\n                      type: integer\n                      description: \"floor type\"\n                    id:\n                      type: string\n                      description: \"room id\"\n                    path:\n                      type: array\n                      description: \"room path\"\n                      items:\n                        type: object\n                        properties:\n                          x:\n                            type: number\n                            description: \"room x coordinate\"\n                          \"y\":\n                            type: number\n                            description: \"room y coordinate\"\n                    room_type:\n                      type: string\n                      description: \"Room type\"\n        outlines:\n          type: array\n          description: \"outline A list of frame diagrams, including SVG and JPEG\"\n          items:\n            type: object\n            properties:\n              checksum:\n                type: string\n                description: \"Room Wireframe Checksum\"\n              index:\n                type: integer\n                description: \"Room Wireframe Index\"\n              svg_url:\n                type: string\n                description: \"room wireframe svg address\"\n              url:\n                type: string\n                description: \"Room wireframe image address\"\n    V1EntityRoompicture:\n      type: array\n      items:\n        type: object\n        properties:\n          capture_data:\n            type: object\n            description: \"screenshot structured data\"\n            properties:\n              derived_id:\n                type: integer\n                description: \"Panorama global unique index, based on timestamp\"\n              filter:\n                type: integer\n                description: \"filter\"\n              fov:\n                type: integer\n                description: \"angle of view\"\n              fromFE:\n                type: boolean\n                description: \"Is it from FE (front end)\"\n              latitude:\n                type: integer\n                description: \"latitude\"\n              longitude:\n                type: number\n                description: \"longitude\"\n              original_image_checksum:\n                type: string\n                description: \"Original image checksum\"\n              original_image_url:\n                type: string\n                description: \"Original picture address\"\n              pano_index:\n                type: integer\n                description: \"panorama index\"\n              sizes:\n                type: array\n                description: \"screenshot size\"\n                items:\n                  type: object\n                  properties:\n                    height:\n                      type: integer\n                      description: \"high\"\n                    width:\n                      type: integer\n                      description: \"width\"\n          cell_name:\n            type: string\n            description: \"room name\"\n          cell_name_type:\n            type: integer\n            description: \"room name type\"\n          cell_type:\n            type: integer\n            description: \"Room type\"\n          checksum:\n            type: string\n            description: \"screenshot checksum\"\n          height:\n            type: integer\n            description: \"screenshot height\"\n          url:\n            type: string\n            description: \"screenshot address\"\n          width:\n            type: integer\n            description: \"screenshot width\"\n    V1EntityTagList:\n      type: array\n      description: \"label list\"\n      items:\n        type: object\n        properties:\n          description:\n            type: string\n            description: \"label description\"\n          id:\n            type: integer\n            description: \"label id\"\n          media_data:\n            type: string\n            nullable: true\n            description: \"label multimedia type\"\n          name:\n            type: string\n            description: \"label name\"\n          position:\n            type: array\n            description: \"label coordinates\"\n            items:\n              type: number\n              description: \"label coordinate type\"\n          target_url:\n            type: string\n            description: \"tag link\"\n          type:\n            type: string\n            description: \"label type\"\n          typed_target_url:\n            type: string\n            description: \"Label type link\"\n    V1LiveRoomDetail:\n      type: object\n      properties:\n        room_code:\n          type: string\n          description: \"live room number\"\n          default: \"R3LzwQmEb9OQxdJl\"\n        room_link:\n          type: string\n          description: \"The long link (WebSocket) address of the live room\"\n          default: \"wss://sandbox-ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121\"\n    V1LiveApplyTicket:\n      type: object\n      properties:\n        ticket:\n          type: string\n          description: \"The pass issued by the server is valid within five minutes, and once used, it will be invalid immediately\"\n          default: \"99317955e49e0221d593f0330150b9df\"\n        room_link:\n          type: string\n          description: \"The long link (WebSocket) address of the live room\"\n          default: \"wss://sandbox-ws-access.realsee.com/open/R3LzwQmEb9OQxdJl?open_app_id=2121\"\n    V1LiveVoiceSign:\n      type: object\n      properties:\n        voice_app_id:\n          type: string\n          description: \"Voice room AppID, used by SDK\"\n          default: \"1024\"\n        user_identifier:\n          type: string\n          description: \"User ID, set it to the user's unique ID\"\n          default: \"7e7b5a43f74142b7bab2021bb54c6d3e\"\n        sign:\n          type: string\n          description: \"Corresponding to the signature data of the voice provider, used by the SDK\"\n          default: \"bar\"\n  securitySchemes:\n    api_key:\n      type: http\n      scheme: bearer\n      bearerFormat: jwt\n",
			"canonicalURL": "/github.com/realsee-developer/realsee-developer.github.com@55784b4e887e7d5c4bdb8880f0b1059ac7e7a25f/-/blob/static/openapi-en.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/realsee-developer/realsee-developer.github.com/blob/55784b4e887e7d5c4bdb8880f0b1059ac7e7a25f/static/openapi-en.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/open/v1/entity/meta\": get: responses: 200: content: application/json: schema: parse schema: property \"data\": property \"status\": at https://raw.githubusercontent.com/realsee-developer/realsee-developer.github.com/55784b4e887e7d5c4bdb8880f0b1059ac7e7a25f/static/api-en/entity/meta.yaml:57:27: type: unexpected schema type: \"enums\""
}