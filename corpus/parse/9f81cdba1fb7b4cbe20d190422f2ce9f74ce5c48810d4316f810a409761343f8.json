{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kornicameister/axion"
		},
		"file": {
			"name": "complex.yml",
			"size": 0,
			"path": "tests/specifications/complex.yml",
			"byteSize": 8547,
			"content": "---\nopenapi: \"3.0.0\"\ninfo:\n  version: 3.0.0\n  title: LargeAPI\n  description: Large API\nservers:\n  - url: \"http://lotr-service\"\n    description: Frodo LOTR API\npaths:\n  /rings:\n    parameters:\n      - $ref: \"#/components/parameters/TraceId\"\n    post:\n      operationId: frodo.lotr.rings.make_one\n      summary: Creates a ring for specified race\n      parameters:\n        - $ref: \"#/components/parameters/RaceId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Ring\"\n      responses:\n        \"201\":\n          description: A created ring\n          headers:\n            X-Custom-A:\n              schema:\n                type: integer\n                default: 1\n            X-Custom-B:\n              $ref: \"#/components/headers/X-Custom-B\"\n            X-Custom-C:\n              content:\n                text/plain:\n                  schema:\n                    type: boolean\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ring\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: frodo.lotr.rings.get_all\n      summary: Lists all rings for specified reace\n      parameters:\n        - $ref: \"#/components/parameters/RaceId\"\n        - $ref: \"#/components/parameters/RingName\"\n      responses:\n        \"200\":\n          description: A list of rings\n          content:\n            application/json:\n              schema:\n                type: array\n                uniqueItems: true\n                items:\n                  $ref: \"#/components/schemas/Ring\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\n  /rings/{ring_id}:\n    parameters:\n      - $ref: \"#/components/parameters/TraceId\"\n    put:\n      operationId: frodo.lotr.rings.put_one\n      deprecated: true\n      summary: Modified a single ring\n      parameters:\n        - $ref: \"#/components/parameters/RingId\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/Ring\"\n                - $ref: \"#/components/schemas/OneRing\"\n      responses:\n        \"201\":\n          description: A modified ring\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ring\"\n        \"204\":\n          description: A response indificating that no changes were made\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n    get:\n      operationId: frodo.lotr.rings.get_one\n      summary: Gets a single ring by id\n      parameters:\n        - $ref: \"#/components/parameters/RaceId\"\n        - $ref: \"#/components/parameters/RingId\"\n        - name: debug\n          in: cookie\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: Single public image\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ring\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"408\":\n          $ref: \"#/components/responses/Timeout\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"503\":\n          $ref: \"#/components/responses/ServiceUnavailable\"\n        default:\n          $ref: \"#/components/responses/UnexpectedError\"\ncomponents:\n  parameters:\n    TraceId:\n      name: X-Trace-Id\n      in: header\n      required: true\n      example: 8c515d52-9678-4dde-8db2-6db63f3b5498\n      schema:\n        type: string\n        format: uuid\n    RaceName:\n      name: raceName\n      in: query\n      description: A name of the race\n      required: false\n      schema:\n        $ref: \"#/components/schemas/RaceName\"\n    RaceNames:\n      name: raceNames\n      in: query\n      description: A names of the race\n      required: false\n      schema:\n        $ref: \"#/components/schemas/RaceNames\"\n      style: spaceDelimited\n      explode: true\n    RaceId:\n      name: raceId\n      in: query\n      description: ID of race\n      required: true\n      schema:\n        $ref: \"#/components/schemas/RaceId\"\n    RingId:\n      name: ring_id\n      in: path\n      description: ID of a ring\n      required: true\n      schema:\n        $ref: \"#/components/schemas/RingId\"\n    RingName:\n      name: name\n      in: query\n      description: Full/partial name of an image to look for\n      required: false\n      schema:\n        type: string\n        minLength: 1\n  schemas:\n    Messages:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/Message\"\n    Message:\n      type: object\n      properties:\n        code:\n          type: integer\n        text:\n          type: string\n    RaceId:\n      type: string\n      format: uuid\n      example: 75e0fc6a-1675-4e90-9d5e-3d004dc3e4ff\n    RaceName:\n      type: string\n      format: foobar\n      enum:\n        - elf\n        - dwarf\n        - man\n        - wizard\n    RaceNames:\n      type: array\n      uniqueItems: true\n      items:\n        $ref: \"#/components/schemas/RaceName\"\n    RingId:\n      type: string\n      example: \"elf:ring_1\"\n      minLength: 1\n    OneRing:\n      $ref: \"#/components/schemas/Ring\"\n    Ring:\n      type: object\n      description: A ring that can be used to rule a race\n      required:\n        - id\n        - name\n        - power\n        - isUpgraded\n        - oneOf\n        - allOf\n        - anyOf\n      properties:\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/RingId\"\n            - readOnly: true\n        name:\n          type: integer\n          example: 2\n          minLength: 1\n          maxLength: 10\n          default: 2\n        power:\n          type: integer\n          example: 128\n          minimum: 1\n        isUpgraded:\n          type: boolean\n          example: false\n        allOf:\n          writeOnly: true\n          allOf:\n            - type: object\n              properties:\n                foo:\n                  type: string\n            - type: object\n              properties:\n                bar:\n                  type: string\n            - type: object\n              nullable: false\n        anyOf:\n          writeOnly: true\n          anyOf:\n            - type: string\n              nullable: true\n            - type: number\n              nullable: true\n            - type: boolean\n              nullable: true\n            - type: object\n              nullable: true\n              additionalProperties: true\n        oneOf:\n          writeOnly: true\n          oneOf:\n            - type: string\n            - type: number\n            - not:\n                type: boolean\n    Error:\n      type: object\n      description: An error response\n      required:\n        - messages\n      properties:\n        messages:\n          $ref: \"#/components/schemas/Messages\"\n  headers:\n    X-Custom-B:\n      schema:\n        type: string\n        default: \"Custom-B\"\n  responses:\n    Timeout:\n      description: There was a timeout when processing the request\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: Object was not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Conflict:\n      description: Resource is not in desired state\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    UnprocessableEntity:\n      description: |\n        Server was able to read the request but the instructions are not correct\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    ServiceUnavailable:\n      description: Service is unavailable\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    UnexpectedError:\n      description: Service encountered an error it does not know how to handle\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    BadRequest:\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"RaceNames\": style: unexpected style: \"spaceDelimited\""
}