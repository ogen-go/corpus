{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/backbase-openapi-tools"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "boat-engine/src/test/resources/openapi/bundler-examples-test-api/openapi.yaml",
			"byteSize": 6172,
			"content": "openapi: 3.0.3\ninfo:\n  title: Exampled API\n  description: No description available\n  version: v1\nservers:\n  - url: /serviceName/client-api/v1\n    description: The server\ntags:\n  - name: examples\npaths:\n  /users:\n    summary: Requests and responses have a singe example - 'all' operations\n    get:\n      summary: Get, does not support request body.\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPostResponse'\n              example:\n                $ref: ./examples/user-post-response.json\n    post:\n      summary: Single example\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPostRequest'\n            example:\n              $ref: ./examples/user-post-request.json\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPostResponse'\n              example:\n                $ref: ./examples/user-post-response.json\n        '400':\n          $ref: ./schemas/components.yaml#/components/schemas/BadRequestResponse\n    put:\n      summary: Single example\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPostRequest'\n            example:\n              $ref: ./examples/user-post-request.json\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPostResponse'\n              example:\n                $ref: ./examples/user-post-response.json\n        '400':\n          description: Fixing an invalid example reference\n          content:\n            application/json:\n              schema:\n                $ref: ./lib/schema/bad-request-error.yaml\n              example:\n                value:\n                  $ref: ./examples/user-post-response.json\n        '401':\n          description: Fixing an invalid example reference\n          content:\n            application/json:\n              schema:\n                $ref: ./lib/schema/bad-request-error.yaml\n              examples:\n                named-bad-example:\n                  value:\n                    $ref: ./examples/user-post-response.json\n        '403':\n          $ref: ./lib/common-types.yaml#/components/responses/400BadRequest\n        '404':\n          description: Refering to a simple-type alias\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AliasForString'\n    patch:\n      summary: Single example\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPostRequest'\n            example:\n              $ref: ./examples/user-post-request.json\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPostResponse'\n              example:\n                $ref: ./examples/user-post-response.json\n  /multi-users:\n    summary: An endpoint that has multiple examples for both request and response bodies. Also, multiple media types\n    post:\n      summary: Multiple examples\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserPostRequest'\n            examples:\n              example-number-one:\n                $ref: ./examples/user-post-request.json\n              example-number-two:\n                $ref: ./examples/user-post-request-2.json\n              example-number-three:\n                value:\n                  $ref: ./examples/user-post-request-3.json\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPostResponse'\n              examples:\n                example-number-one:\n                  $ref: './examples/user-post-request-response.json#/response'\n                example-number-two:\n                  $ref: ./examples/user-post-response-2.json\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserPostResponse'\n              examples:\n                example-number-one:\n                  $ref: ./examples/user-post-response.xml\n  /example-in-component:\n    post:\n      summary: Examples in schema cannot contain a ref\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WithExampleRequest'\n      responses:\n        '200':\n          description: A user object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithExampleResponse'\n              examples:\n                in-component:\n                  $ref: '#/components/examples/example-in-components'\n                in-component-1:\n                  $ref: '#/components/examples/example-in-components-1'\ncomponents:\n  schemas:\n    UserPostRequest:\n      $ref: 'schemas/post-user-request.json'\n    UserPostResponse:\n      $ref: 'schemas/post-user-response.json'\n    WithExampleRequest:\n      $ref: 'schemas/post-user-request.json'\n      example:\n        name: \"Eddie\"\n        rank: 99\n    WithExampleResponse:\n      $ref: 'schemas/post-user-response.json'\n    AliasForString:\n      type: string\n      pattern: ^[0-9].*$\n      minLength: 1\n      maxLength: 30\n  examples:\n    example-in-components:\n      $ref: './examples/user-post-response.json'\n    example-in-components-1:\n      summary: component-examples with example - should be left alone\n      value:\n        id: \"1\"\n        name: \"Michel\"\n        rank: 22\n    example-number-one:\n      summary: component-examples with reference, matching the name of a path examples - also, summary ignored.\n      $ref: ./examples/user-post-request.json\n"
		}
	},
	"Error": "parse: parse spec: paths: /example-in-component: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/WithExampleRequest\": parse schema: reference \"schemas/post-user-request.json\": resolve reference \"schemas/post-user-request.json\": invalid schema reference \"schemas/post-user-request.json\""
}