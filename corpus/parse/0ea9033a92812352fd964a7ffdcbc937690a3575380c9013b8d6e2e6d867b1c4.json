{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "policygraph.json",
			"size": 0,
			"path": "openapi3_autogen/policygraph.json",
			"byteSize": 3355,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"policygraph\": {\n        \"description\": \"Returns a data structure representing the policy graph of all selected\\nprocessing units and their possible connectivity based on the current policies\\nassociated with the namespace. Users can define a selector of processing units\\nin which they are interested or define the identity tags of a virtual processing\\nunit that is not yet activated.\",\n        \"properties\": {\n          \"PUIdentity\": {\n            \"description\": \"The set of tags that a future-activated processing unit will have for which\\nthe user wants to evaluate policies and understand its connectivity options.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"dependencyMap\": {\n            \"$ref\": \"./dependencymap#/components/schemas/dependencymap\"\n          },\n          \"policyType\": {\n            \"default\": \"Authorization\",\n            \"description\": \"Identifies the type of policy that should be analyzed: `Authorization`(default),\\n`Infrastructure`, or `Combined`.\",\n            \"enum\": [\n              \"Authorization\",\n              \"Infrastructure\",\n              \"Combined\"\n            ]\n          },\n          \"selectors\": {\n            \"description\": \"Contains the tag expression that a processing unit must match in order\\nto evaluate policy for it.\",\n            \"example\": [\n              [\n                \"$identity=processingunit\"\n              ]\n            ],\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"policygraph\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/policygraphs\": {\n      \"post\": {\n        \"description\": \"Retrieve a policy graph.\",\n        \"operationId\": \"create-a-new-policygraph\",\n        \"parameters\": [\n          {\n            \"description\": \"Set the view query for grouping the dependency map.\",\n            \"example\": \"$namespace then app\",\n            \"in\": \"query\",\n            \"name\": \"view\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/policygraph\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/policygraph\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"visualization/depmaps\",\n          \"yeul\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'visualization/depmaps'\",\n      \"name\": \"visualization/depmaps\"\n    },\n    {\n      \"description\": \"This tag is for package 'yeul'\",\n      \"name\": \"yeul\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"policygraph\": parse schema: property \"dependencyMap\": parse schema: resolve \"./dependencymap#/components/schemas/dependencymap\": external \"./dependencymap\": file: local file reference is not allowed"
}