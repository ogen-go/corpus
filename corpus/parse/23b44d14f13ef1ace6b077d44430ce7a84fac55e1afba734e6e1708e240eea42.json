{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "handwrytten.com-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/handwrytten.com-1.0.0-swagger.yaml",
			"byteSize": 50047,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: contact@handwrytten.com\n    x-twitter: Handwrytten\n  description: \u003e\n    This is the Handwrytten API for sending cards written in the handwriting of\n    your choice.\n\n    Using this api, you can send cards to users.  You can also customize cards with logos, which\n\n    can be saved and then used like any other card in the system.\n\n    For a \"sandbox\" account, please contact contact@handwrytten.com\n\n    To move from credit card per-transaction to monthly invoicing, also contact us.\n\n    [https://www.handwrytten.com](https://www.handwrytten.com)\n  termsOfService: https://www.handwrytten.com/terms/\n  title: Handwrytten\n  version: 1.0.0\n  x-apisguru-categories:\n    - text\n  x-logo:\n    url: https://twitter.com/Handwrytten/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://api.swaggerhub.com/apis/Handwrytten/handwrytten/1.0.0\n      version: \"2.0\"\n  x-providerName: handwrytten.com\ntags:\n  - description: Commands for creating and registering accounts and logging in/out\n    externalDocs:\n      description: Find out more\n      url: https://www.handwrytten.com\n    name: auth\n  - description: access information on cards and card categories\n    name: cards\n  - description: access information on gift cards\n    name: giftCards\n  - description: access information on saved message templates\n    name: templates\n  - description: Operations about user\n    externalDocs:\n      description: Find out more about our service\n      url: https://www.handwrytten.com\n    name: user\npaths:\n  /auth/authorization:\n    post:\n      operationId: login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Login\"\n        description: Login to account\n        required: true\n      responses:\n        \"200\":\n          description: successful login\n          content:\n            application/json:\n              schema:\n                properties:\n                  anet_customer_id:\n                    description: used internally by Handwrytten\n                    example: hfekjh\n                    type: string\n                  free_cards:\n                    description: number of free cards in account\n                    example: 1\n                    type: integer\n                  status:\n                    example: OK\n                    type: string\n                  uid:\n                    description: token for future authorized calls\n                    example: fhqwfuihuifqwhiuwqfhiqwfh124\n                    type: string\n                  user_id:\n                    example: 979877\n                    type: integer\n                type: object\n        \"400\":\n          description: auth error\n      summary: Logs in to an existing account\n      tags:\n        - auth\n  /auth/changePassword:\n    post:\n      operationId: changePassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                new_password:\n                  description: the new password\n                  example: myn3wp455w0rd!\n                  type: string\n                old_password:\n                  description: the existing password\n                  example: myoldpassword1234!\n                  type: string\n                uid:\n                  description: the authorized UID of the session\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: Change password\n        required: true\n      responses:\n        \"200\":\n          description: successful password change\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    example: OK\n                    type: string\n                type: object\n        \"405\":\n          description: Invalid input\n      summary: changes a user's password\n      tags:\n        - auth\n  /auth/logout:\n    post:\n      operationId: logout\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                uid:\n                  description: the authorized UID of the session\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: logout session\n        required: true\n      responses:\n        \"200\":\n          description: successful logout\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    example: OK\n                    type: string\n                type: object\n        \"405\":\n          description: Invalid input\n      summary: logs out a session uid\n      tags:\n        - auth\n  /auth/register:\n    post:\n      operationId: register\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Registration\"\n        description: New user account information\n        required: true\n      responses:\n        \"200\":\n          description: successful registration\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    example: OK\n                    type: string\n                  user_id:\n                    example: 979877\n                    type: integer\n                type: object\n        \"405\":\n          description: Invalid input\n      summary: Registers a new account\n      tags:\n        - auth\n  /auth/resetPasswordRequest:\n    post:\n      operationId: resetPasswordRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                login:\n                  description: the email address of the user\n                  example: joe@bloggs.com\n                  type: string\n              type: object\n        description: Reset password\n        required: true\n      responses:\n        \"200\":\n          description: successful reset request\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    example: OK\n                    type: string\n                type: object\n        \"405\":\n          description: Invalid input\n      summary: resets a user's password\n      tags:\n        - auth\n  /cards/createCustomCard:\n    post:\n      operationId: CreateCustomCard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                card_id:\n                  description: the card id of the card template you're starting with.  You\n                    can find this by logging into Handwrytten, clicking\n                    \"customize\" next to any customizable card, and pulling the\n                    card ID from the end of the URL\n                  example: 243\n                  type: integer\n                cover_id:\n                  description: the id of the image you want to use for the \"cover\".  The\n                    cover is the large image on the front of the flat card.\n                  example: 42\n                  type: integer\n                cover_size_percent:\n                  description: the size of the image to use as the cover.\n                  example: 100\n                  type: integer\n                footer_align:\n                  description: set to \"left\", \"center\", or \"right\" to align the footer\n                    appropriately\n                  example: center\n                  type: string\n                footer_font_id:\n                  description: font ID of the text in the footer, found by using\n                    ListFontForCustomizer\n                  example: 1\n                  type: integer\n                footer_font_size:\n                  description: Font size of the text in the footer\n                  example: 16\n                  type: integer\n                footer_text:\n                  description: optional text for the footer of the customizable card\n                  example: Sample text for the footer\n                  type: string\n                header_align:\n                  description: set to \"left\", \"center\", or \"right\" to align the header\n                    appropriately\n                  example: center\n                  type: string\n                header_auto_size:\n                  description: if set to true, the header will be maximized to fill the\n                    header area\n                  type: boolean\n                header_font_id:\n                  description: font ID of the text in the header, found by using\n                    ListFontForCustomizer\n                  example: 8\n                  type: integer\n                header_font_size:\n                  description: font size of the text in the header of the card\n                  example: 20\n                  type: integer\n                header_text:\n                  description: text in the header, if type is set to \"text\"\n                  example: Sample text for the header\n                  type: string\n                logo_id:\n                  description: Optional.  If setting \"type\" to \"logo\", set the id of the\n                    logo here.\n                  example: 20\n                  type: integer\n                logo_size_percent:\n                  description: set to the desired scaling of the logo on the header\n                  example: 100\n                  type: integer\n                name:\n                  description: the name of the new card\n                  example: my custom card design\n                  type: string\n                type:\n                  description: Defines the top of the back of the card. Set to either\n                    \"logo\" or \"text\".\n                  example: logo\n                  type: string\n                uid:\n                  description: authorized UID of the session.\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Card\"\n                type: object\n      summary: Create a new custom card\n      tags:\n        - customizer\n  /cards/list:\n    get:\n      description: Filterable card list.  If called with UID will also provide\n        user-specific cards.\n      operationId: simpleListCards\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Card\"\n                type: object\n        \"400\":\n          description: Invalid status value\n      summary: Lists information on cards\n      tags:\n        - cards\n    post:\n      description: Simple listing of cards.  No filters can be applied.\n      operationId: listCards\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                category_id:\n                  description: optional category id filter\n                  example: 14\n                  type: integer\n                uid:\n                  description: optional authorized UID of the session.  By providing this,\n                    the card list will include user-specific cards.\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Card\"\n                type: array\n        \"400\":\n          description: Invalid status value\n      summary: Lists information on cards\n      tags:\n        - cards\n  /cards/uploadCustomLogo:\n    post:\n      operationId: uploadCustomLogo\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: upload images for customc cards\n                  type: string\n                  format: binary\n                type:\n                  description: set to cover or header\n                  type: string\n                uid:\n                  description: uid of the user\n                  type: string\n              required:\n                - file\n                - type\n                - uid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    description: image id\n                    example: 23124\n                    type: integer\n                  status:\n                    example: OK\n                    type: string\n      summary: upload logo or cover image for card\n      tags:\n        - customizer\n  /cards/view:\n    post:\n      description: Full card details\n      operationId: filterableCardDetails\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                card_id:\n                  description: the card id to view\n                  example: 14\n                  type: integer\n                uid:\n                  description: optional authorized UID of the session.  By providing this,\n                    the card details can provide user-specific cards\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardDetails\"\n      summary: Provides full information on a specific card\n      tags:\n        - cards\n  /countries/list:\n    get:\n      description: Lists the countries to which Handwritten can mail, their associated\n        country ID and any costs\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            \"*/*\":\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Country\"\n                type: array\n      tags:\n        - countries\n  /fonts/list:\n    get:\n      operationId: fontsList\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Font\"\n                type: array\n      summary: Lists Handwryting styles available for use\n      tags:\n        - fonts\n  /fonts/listForCustomizer:\n    get:\n      operationId: fontsListForCustomizer\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/FontForCustomizer\"\n                type: array\n      summary: Lists fonts available for use with the card customizer\n      tags:\n        - customizer\n  /giftCards/view:\n    get:\n      description: Returns images and details (and associated denominations) of all gift\n        cards\n      operationId: getGiftCardDetails\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/GiftCard\"\n                type: array\n      summary: Lists information on gift cards\n      tags:\n        - giftCards\n    post:\n      description: Returns images and details (and associated denominations) of all gift\n        cards\n      operationId: giftCardDetails\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/GiftCard\"\n                type: array\n      summary: Lists information on gift cards\n      tags:\n        - giftCards\n  /orders/singleStepOrder:\n    post:\n      description: Sends an order in one step.  No need to create then process\n        order.  Optionally include a gift card.\n      operationId: singleStepOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                card_id:\n                  description: the id of the card you want to send\n                  example: 3404\n                  type: integer\n                credit_card_id:\n                  description: the credit card id to charge for the order.  Currently this\n                    is required, even for invoiced accounts, it just won't be\n                    charged.\n                  example: 34124\n                  type: integer\n                denomination_id:\n                  description: Optional.  Use if sending a gift card\n                  example: 12\n                  type: integer\n                font_label:\n                  description: the colloquial name of the font, such as 'Fancy Jenna' or\n                    'Casual David'\n                  example: Chill Charity\n                  type: string\n                message:\n                  description: the full message body.  Use '\\n' for new lines\n                  example: |-\n                    Dear Frank,\n                    Thank you so much for your interest in our services.\n                    Yours,\n                    Joe\n                  type: string\n                recipient_address1:\n                  description: the first address line of the return address\n                  example: 123 E Main Street\n                  type: string\n                recipient_address2:\n                  description: the second line of the address, such as suite, apartment,\n                    building, etc. Optional\n                  example: Second Floor\n                  type: string\n                recipient_business_name:\n                  description: the second line of the recipient address.  Optional.\n                  example: Spacely Space Sprockets\n                  type: string\n                recipient_city:\n                  description: the city of the recipient, to appear in the address\n                  example: Burlington\n                  type: string\n                recipient_country:\n                  description: the country of the recipient.  Optional and defaults to usa\n                  example: Canada\n                  type: string\n                recipient_country_id:\n                  description: alternate way to specify country.  Optional and defaults to 1\n                  example: 2\n                  type: integer\n                recipient_name:\n                  description: the name on the recipient address\n                  example: Cosmo Spacely\n                  type: string\n                recipient_state:\n                  description: the ABBREVIATED state or province of the recipient.  This is\n                    required for US and Canada addresses and optional for all\n                    other countries\n                  example: ON\n                  type: string\n                recipient_zip:\n                  description: the zip code or postal code of the recipient\n                  example: L7L 0E9\n                  type: string\n                sender_address1:\n                  description: the first address line of the return address\n                  example: 1430 E Indian School Road\n                  type: string\n                sender_address2:\n                  description: the second line of the address, such as suite, apartment,\n                    building, etc. Optional\n                  example: Suite 100\n                  type: string\n                sender_business_name:\n                  description: the second line of the return address.  Optional.\n                  example: Handwrytten\n                  type: string\n                sender_city:\n                  description: the city of the sender, to appear in the return address\n                  example: Phoenix\n                  type: string\n                sender_country:\n                  description: the country of the recipient.  Optional and defaults to usa\n                  example: United States\n                  type: string\n                sender_country_id:\n                  description: alternate way to specify country.  Optional and defaults to 1\n                  example: 1\n                  type: integer\n                sender_name:\n                  description: the name on the return address\n                  example: Joe Sender\n                  type: string\n                sender_state:\n                  description: the ABBREVIATED state or province of the sender.  This is\n                    required for US and Canada addresses and optional for all\n                    other countries\n                  example: AZ\n                  type: string\n                sender_zip:\n                  description: The postal code or zip code of the sender.\n                  example: \"12345\"\n                  type: string\n                uid:\n                  description: The UID of the logged-in user\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              required:\n                - uid\n                - card_id\n                - message\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful order placement\n          content:\n            application/json:\n              schema:\n                properties:\n                  response:\n                    $ref: \"#/components/schemas/Order\"\n                  status:\n                    example: OK\n                    type: string\n                type: object\n      summary: sends an order in a single step.  This is much easier than using other\n        order commands\n      tags:\n        - orders\n  /profile/address:\n    post:\n      operationId: userAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                uid:\n                  description: authorized UID of the session.  By providing this, the card\n                    list will include user-specific cards.\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  response:\n                    $ref: \"#/components/schemas/Address\"\n                  status:\n                    example: ok\n                    type: string\n                type: object\n      summary: gets the user's return address information\n      tags:\n        - profile\n  /profile/deleteRecipient:\n    post:\n      operationId: deleteRecipient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address_id:\n                  description: the id of the address to delete\n                  example: 549494\n                  type: integer\n                uid:\n                  description: authorized UID of the session.\n                  example: 33ce76fede1a31d5ee823179f78d9882\n                  type: string\n              required:\n                - uid\n                - address_id\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    example: ok\n                    type: string\n                type: object\n      summary: deletes an existing recipient address\n      tags:\n        - address\n  /profile/profileAddRecipient:\n    post:\n      operationId: addRecipientAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address1:\n                  description: the first line of the address\n                  example: 1430 E Indian School Rd\n                  type: string\n                address2:\n                  description: the second (optional) line of the address\n                  example: Suite 100\n                  type: string\n                business_name:\n                  description: the optional business name on the address\n                  example: Handwrytten LLC\n                  type: string\n                city:\n                  description: the city of the address\n                  example: Phoenix\n                  type: string\n                country:\n                  description: the name of the country of the address, or use country_id\n                  example: United States\n                  type: string\n                country_id:\n                  description: the country id code of the recipient\n                  type: integer\n                name:\n                  description: the name on the address\n                  example: Joe Smith\n                  type: string\n                state:\n                  description: the abbreviated state or province of the address\n                  example: AZ\n                  type: string\n                uid:\n                  description: authorized UID of the session.\n                  example: 33ce76fede1a31d5ee823179f78d9882\n                  type: string\n                zip:\n                  description: the zip or postal code of the address\n                  example: 85014\n                  type: string\n              type: object\n        description: additional parameters\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  response:\n                    $ref: \"#/components/schemas/recipientAddress\"\n                  status:\n                    example: ok\n                    type: string\n                type: object\n      summary: add a new recipient address\n      tags:\n        - address\n  /profile/recipientsList:\n    post:\n      operationId: recipientsList\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                uid:\n                  description: authorized UID of the session.\n                  example: 33ce76fede1a31d5ee823179f78d9882\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/recipientAddress\"\n                type: array\n      summary: list the addresses in the user's account\n      tags:\n        - address\n  /profile/updateAddress:\n    post:\n      operationId: updateUserAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address1:\n                  description: the first line of the address\n                  example: 1430 E Indian School Rd\n                  type: string\n                address2:\n                  description: the second (optional) line of the address\n                  example: Suite 100\n                  type: string\n                address_id:\n                  description: the address you are updating\n                  example: 42\n                  type: integer\n                business_name:\n                  description: the optional business name on the address\n                  example: Handwrytten LLC\n                  type: string\n                city:\n                  description: the city of the address\n                  example: Phoenix\n                  type: string\n                country:\n                  description: the name of the country of the address\n                  example: United States\n                  type: string\n                country_id:\n                  description: the id of the country of the address. do not use with\n                    \"country\" parameter\n                  example: 2\n                  type: integer\n                name:\n                  description: the name on the address\n                  example: Joe Smith\n                  type: string\n                state:\n                  description: the abbreviated state or province of the address\n                  example: AZ\n                  type: string\n                uid:\n                  description: authorized UID of the session.\n                  example: 33ce76fede1a31d5ee823179f78d9882\n                  type: string\n                zip:\n                  description: the zip or postal code of the address\n                  example: 85014\n                  type: string\n              required:\n                - uid\n                - address_id\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  response:\n                    $ref: \"#/components/schemas/Address\"\n                  status:\n                    example: ok\n                    type: string\n                type: object\n      summary: update the user's return address information\n      tags:\n        - profile\n  /profile/updateRecipient:\n    post:\n      operationId: updateRecipient\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address1:\n                  description: the updated first line of the address\n                  example: 1430 E Indian School Rd\n                  type: string\n                address2:\n                  description: the updated second (optional) line of the address\n                  example: Suite 100\n                  type: string\n                business_name:\n                  description: the updated optional business name on the address\n                  example: Handwrytten LLC\n                  type: string\n                city:\n                  description: the updated city of the address\n                  example: Phoenix\n                  type: string\n                country:\n                  description: the updated name of the country of the address, or use\n                    country_id\n                  example: United States\n                  type: string\n                country_id:\n                  description: the country id of the address\n                  type: integer\n                id:\n                  description: the id of the address to update\n                  example: 549494\n                  type: integer\n                name:\n                  description: the updated name on the address\n                  example: Joe Smith\n                  type: string\n                state:\n                  description: the updated abbreviated state or province of the address\n                  example: AZ\n                  type: string\n                uid:\n                  description: authorized UID of the session.\n                  example: 33ce76fede1a31d5ee823179f78d9882\n                  type: string\n                zip:\n                  description: the updated zip or postal code of the address\n                  example: 85014\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  response:\n                    $ref: \"#/components/schemas/recipientAddress\"\n                  status:\n                    example: ok\n                    type: string\n                type: object\n      summary: updates an existing new recipient address\n      tags:\n        - address\n  /templateCategories/list:\n    get:\n      description: Lists the common template categories of all users. As you are not logged\n        in, this is what you are limited to.\n      operationId: getTemplateCategories\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TemplateCategory\"\n                type: array\n      summary: List template categories\n      tags:\n        - templates\n    post:\n      description: Lists the template categories of all users. By passing the optional UID,\n        any custom template categories are also available.\n      operationId: getTemplateCategoriesAuthorized\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                uid:\n                  description: optional authorized UID of the session.  By providing this,\n                    the template list will include user-specific template\n                    categories\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TemplateCategory\"\n                type: array\n      summary: List template categories\n      tags:\n        - templates\n  /templates/create:\n    post:\n      description: Creates a new Template in the User’s Account\n      operationId: createTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  example: How do I love thee?  Let me count the ways\n                  type: string\n                name:\n                  description: the new name of the template\n                  example: My custom template\n                  type: string\n                uid:\n                  description: The UID of the logged-in user\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Template\"\n                type: array\n      summary: Creates a New Template in the User’s Account\n      tags:\n        - templates\n  /templates/delete:\n    post:\n      description: Deletes a template in the User’s Account\n      operationId: deleteTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                template_id:\n                  description: the ID of the template to delete\n                  example: 12\n                  type: integer\n                uid:\n                  description: The UID of the logged-in user\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful deletion\n          content:\n            application/json:\n              schema:\n                properties:\n                  status:\n                    example: OK\n                    type: string\n                type: object\n      summary: Deletes a users template\n      tags:\n        - templates\n  /templates/list:\n    get:\n      description: Lists the common template categories of all users. As you are not logged\n        in, this is what you are limited to.\n      operationId: getTemplates\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Template\"\n                type: array\n      summary: List template categories\n      tags:\n        - templates\n    post:\n      description: Lists the template categories of all users. By passing the optional UID,\n        any custom template categories are also available.\n      operationId: getTemplatessAuthorized\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                category_id:\n                  description: optional category to filter the templates\n                  example: 12\n                  type: integer\n                uid:\n                  description: optional authorized UID of the session.  By providing this,\n                    the template list will include user-specific template\n                    categories\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Template\"\n                type: array\n      summary: List template categories\n      tags:\n        - templates\n  /templates/update:\n    post:\n      description: Updates an Existing Template in the User’s Account\n      operationId: updateTemplate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  example: How do I love thee?  Let me count the ways\n                  type: string\n                name:\n                  description: the new name of the template\n                  example: My custom template\n                  type: string\n                template_id:\n                  description: the ID of the template to update\n                  example: 12\n                  type: integer\n                uid:\n                  description: The UID of the logged-in user\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Template\"\n                type: array\n      summary: Updates an Existing Template in the User’s Account\n      tags:\n        - templates\n  /templates/view:\n    post:\n      description: Provides all details on a template\n      operationId: getTemplateDetail\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                template_id:\n                  description: the ID of the template to view\n                  example: 12\n                  type: integer\n                uid:\n                  description: optional authorized UID of the session.  By providing this,\n                    the user can specify user-sepecific templates\n                  example: fhqwfuihuifqwhiuwqfhiqwfh124\n                  type: string\n              type: object\n        description: additional parameters\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Template\"\n      summary: Get all info on a template\n      tags:\n        - templates\nservers:\n  - url: https://api.handwrytten.com/v1\ncomponents:\n  schemas:\n    Address:\n      properties:\n        address1:\n          description: the first line of the address\n          example: 1430 E Indian School Rd\n          type: string\n        address2:\n          description: the second (optional) line of the address\n          example: Suite 100\n          type: string\n        business_name:\n          description: the optional business name on the address\n          example: Handwrytten LLC\n          type: string\n        city:\n          description: the city of the address\n          example: Phoenix\n          type: string\n        country:\n          description: the name of the country of the address\n          example: United States\n          type: string\n        id:\n          description: the internal id of the address at Handwrytten\n          example: 978214798\n          type: integer\n        name:\n          description: the name on the address\n          example: Joe Smith\n          type: string\n        state:\n          description: the abbreviated state or province of the address\n          example: AZ\n          type: string\n        zip:\n          description: the zip or postal code of the address\n          example: 85014\n          type: string\n      type: object\n    Card:\n      properties:\n        available_free:\n          description: 1 for cards that are available free\n          example: 1\n          maximum: 1\n          minimum: 0\n          type: integer\n        category_id:\n          description: the associated category id\n          example: 33\n          type: integer\n        cover:\n          description: cover image of card\n          type: string\n        cover_height:\n          description: the height in px of the cover image\n          type: string\n        cover_width:\n          description: the width in px of the cover image\n          type: string\n        id:\n          example: 42\n          type: integer\n        name:\n          type: string\n        price:\n          description: the base price of a card (in USD)\n          example: 3.5\n          type: number\n      type: object\n      xml:\n        name: Tag\n    CardDetails:\n      properties:\n        available_free:\n          description: 1 for cards that are available free\n          example: 1\n          maximum: 1\n          minimum: 0\n          type: integer\n        category_id:\n          description: the associated category id\n          example: 33\n          type: integer\n        cover:\n          description: cover image of card\n          type: string\n        cover_height:\n          description: the height in px of the cover image\n          type: string\n        cover_width:\n          description: the width in px of the cover image\n          type: string\n        id:\n          example: 42\n          type: integer\n        images:\n          description: common return value includes items for front, back, inside and\n            envelope\n          items:\n            $ref: \"#/components/schemas/ImageArray\"\n          type: array\n        name:\n          type: string\n        orientation:\n          description: landscape or portrait\n          type: string\n        price:\n          description: the base price of a card (in USD)\n          example: 3.5\n          type: number\n      type: object\n    Country:\n      properties:\n        aliases:\n          description: Other names for the country, separated by new lines\n          example: USA\\nU.S.A.\\nUnited States of America\n          type: string\n        delivery_cost:\n          description: the postage fee of delivering to a specific country\n          example: 1\n          type: number\n        id:\n          description: the internal id of the country\n          example: 3\n          type: integer\n        states:\n          description: Optional states or provinces in country\n          items:\n            $ref: \"#/components/schemas/State\"\n          type: array\n      type: object\n    Denomination:\n      properties:\n        id:\n          type: integer\n        nominal:\n          type: number\n        price:\n          type: number\n      type: object\n    Font:\n      properties:\n        id:\n          description: name used internally at Handwrytten\n          example: astBecca\n          type: string\n        image:\n          description: url to sample of font\n          type: string\n        label:\n          description: Common name\n          example: Chill Charity\n          type: string\n      type: object\n      xml:\n        name: Tag\n    FontForCustomizer:\n      properties:\n        id:\n          description: font id for customizer\n          example: 1\n          type: integer\n        label:\n          description: Common name\n          example: Open Sans\n          type: string\n      type: object\n      xml:\n        name: Tag\n    GiftCard:\n      properties:\n        denominations:\n          items:\n            $ref: \"#/components/schemas/Denomination\"\n          type: array\n        id:\n          type: integer\n        image:\n          type: string\n        name:\n          type: string\n      type: object\n    ImageArray:\n      properties:\n        array:\n          items:\n            description: filename\n            type: string\n          type: array\n        name:\n          type: string\n      type: object\n    Login:\n      properties:\n        login:\n          description: email address\n          example: john@jjf.com\n          type: string\n        password:\n          example: 8yfqwiuy@!$\n          type: string\n      required:\n        - login\n        - password\n      type: object\n      xml:\n        name: login\n    Order:\n      properties:\n        address_from:\n          $ref: \"#/components/schemas/Address\"\n        card:\n          $ref: \"#/components/schemas/Card\"\n        date_created:\n          description: the date the order was created\n          type: string\n        for_free:\n          description: if the order was free\n          example: true\n          type: boolean\n        id:\n          description: the unique ID of the order\n          example: 42\n          type: integer\n        message:\n          description: The actual message of the template\n          example: How do I love thee?  Let me count the ways\n          type: string\n      type: object\n    Registration:\n      properties:\n        discount_code:\n          description: optional discount code\n          type: string\n        fname:\n          description: first name\n          example: John\n          type: string\n        lname:\n          description: last name\n          example: Smith\n          type: string\n        login:\n          description: email address\n          example: john@jjf.com\n          type: string\n        password:\n          example: 8yfqwiuy@!$\n          type: string\n      required:\n        - login\n        - password\n        - fname\n        - lname\n      type: object\n      xml:\n        name: registration\n    State:\n      properties:\n        name:\n          description: the name of the state or province\n          example: Arizona\n          type: string\n        short_name:\n          description: the two or three character abbreviation for a state or provinnee\n          example: AZ\n          type: string\n      type: object\n    Template:\n      properties:\n        category_id:\n          description: the ID of the category to which this template belongs\n          example: 33\n          type: integer\n        id:\n          description: the unique ID of the Template\n          example: 42\n          type: integer\n        message:\n          description: The actual message of the template\n          example: How do I love thee?  Let me count the ways\n          type: string\n        name:\n          description: The name of the Template\n          example: Love Letter to Sandy\n          type: string\n      type: object\n    TemplateCategory:\n      properties:\n        id:\n          description: the id of the Template Category\n          example: 42\n          type: integer\n        name:\n          description: The name of the Template Category\n          example: Love Letters\n          type: string\n        price:\n          type: number\n      type: object\n    recipientAddress:\n      properties:\n        address1:\n          description: the first line of the address\n          example: 1430 E Indian School Rd\n          type: string\n        address2:\n          description: the second (optional) line of the address\n          example: Suite 100\n          type: string\n        business_name:\n          description: the optional business name on the address\n          example: Handwrytten LLC\n          type: string\n        city:\n          description: the city of the address\n          example: Phoenix\n          type: string\n        country:\n          description: the name of the country of the address\n          example: United States\n          type: string\n        id:\n          description: the internal id of the address at Handwrytten\n          example: 978214798\n          type: integer\n        name:\n          description: the name on the address\n          example: Joe Smith\n          type: string\n        state:\n          description: the abbreviated state or province of the address\n          example: AZ\n          type: string\n        zip:\n          description: the zip or postal code of the address\n          example: 85014\n          type: string\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/handwrytten.com-1.0.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/handwrytten.com-1.0.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/cards/createCustomCard\": post: operation \"CreateCustomCard\": responses: 200: content: application/json: schema: parse schema: at benchmark-repository/openapi/handwrytten.com-1.0.0-swagger.yaml:316:19: items: object cannot contain 'items' field"
}