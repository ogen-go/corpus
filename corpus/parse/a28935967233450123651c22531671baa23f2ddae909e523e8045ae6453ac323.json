{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "widgets.v3.yml",
			"size": 0,
			"path": "reference/widgets.v3.yml",
			"byteSize": 84860,
			"content": "openapi: 3.0.1\ninfo:\n  title: Widgets\n  version: ''\n  description: |-\n    Create and manage widget templates, widgets, regions, and placements.\n\n    ## Authentication\n\n    [Authenticate](/api-docs/getting-started/authentication/rest-api-authentication) requests by including an OAuth `access_token` in the request header.\n\n    ```http\n    GET https://api.bigcommerce.com/stores/{{STORE_HASH}}/v3/{{ENDPOINT}}\n    Content-Type: application/json\n    X-Auth-Token: {{ACCESS_TOKEN}}\n    ```\n\n    ### OAuth scopes\n    |  **UI Name** | **Permission** | **Parameter** |\n    | --- | --- | --- |\n    |  Content | modify | `store_v2_content` |\n    |  Content | read-only | `store_v2_content_read_only` |\n\n    For more information on OAuth scopes, see [Authenticating BigCommerce's REST APIs](/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes).\n\n    ## Subresources\n\n    ### Widget templates\n    [Widget templates](/api-reference/store-management/widgets/widget-template/getwidgettemplates) are reusable Handlebars-enabled HTML templates that define the structure of the widget on a page.\n\n    ### Widgets\n    [Widgets](/api-reference/store-management/widgets/widget/getwidgets) are units of content placed on specific pages in a Stencil theme. Widgets consist of a widget configuration and a widget template UUID and render as part of the storefrontâ€™s HTML.\n\n    ### Regions\n    [Regions](/api-reference/store-management/widgets/regions/getcontentregions) are specific locations in the Stencil theme template files where you can place a widget.\n\n    ### Placements\n    [Placements](/api-reference/store-management/widgets/placement/getplacements) determine the region where you place widgets and in what order.\n\n    ## Additional Information\n\n    * [Widgets API Overview](/api-docs/store-management/widgets/overview)\n    * [Widget UI Schema](/stencil-docs/page-builder/widget-ui-schema)\n    * [Widget UI Input Types](/stencil-docs/page-builder/schema-settings)\ntags:\n  - name: Regions\n  - name: Widget Template\n    description: BigCommerce Widget Templates API Definition.\n  - name: Widget\n    description: BigCommerce Widgets API Definition.\n  - name: Placement\n    description: BigCommerce Placements API Definition.\n  - name: Layout\n    description: BigCommerce Layouts API Definition.\npaths:\n  '/stores/{store_hash}/v3/content/widget-templates':\n    post:\n      tags:\n        - Widget Template\n      summary: Create a Widget Template\n      operationId: createWidgetTemplate\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/widgetTemplate_Post'\n        required: true\n        x-examples:\n          application/json: |-\n            {\n              \"name\": \"Header Images\",\n              \"template\": \"{{#each images}}{{/each}}\"\n            }\n          Custom Configuration Widget: |-\n            {\n              \"name\":\"Header Images\",\n              \"template\":\"{{#each images}}{{/each}}\",\n              \"schema\":[\n                {\n                  \"type\":\"array\",\n                  \"label\":\"Images\",\n                  \"id\":\"images\",\n                  \"defaultCount\":3,\n                  \"entryLabel\":\"Image\",\n                  \"thumbnail\":\"imageUrl.src\",\n                  \"schema\":[\n                    {\n                      \"type\":\"tab\",\n                      \"label\":\"Content\",\n                      \"sections\":[\n                        {\n                          \"settings\":[\n                            {\n                              \"type\":\"imageManager\",\n                              \"id\":\"imageUrl\",\n                              \"default\":{\n                                \"src\":\"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on\",\n                                \"type\":\"IMAGE_MANAGER\"\n                                }\n                                },\n                                {\n                                  \"label\":\"Link\",\n                                  \"type\":\"input\",\n                                  \"id\":\"link\",\n                                  \"default\":\"#\"\n                                  }\n                                ]\n                              }\n                            ]\n                          }\n                        ]\n                      }\n                    ]\n                  }\n      responses:\n        '200':\n          $ref: '#/components/responses/WidgetTemplate_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: |-\n        Creates a **Widget Template**.\n\n        ***Note:*** *There is a limit of 100 custom widget templates per store.*\n\n        **Required Fields**\n        * name\n        * template\n    get:\n      tags:\n        - Widget Template\n      operationId: getWidgetTemplates\n      parameters:\n        - name: page\n          description: |\n            Specifies the page number in a limited (paginated) list of products.\n          required: false\n          in: query\n          schema:\n            type: integer\n        - name: limit\n          description: |\n            Controls the number of items per page in a limited (paginated) list of products.\n          required: false\n          in: query\n          schema:\n            type: integer\n        - in: query\n          name: widget_template_kind\n          description: The kind of widget template.\n          required: false\n          schema:\n            type: string\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n        - in: query\n          name: channel_id\n          description: Filter items by channel_id.\n          schema:\n            type: integer\n      responses:\n        '200':\n          $ref: '#/components/responses/WidgetTemplateCollection_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Returns a list of **Widget Templates**.\n      summary: Get All Widget Templates\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n  '/stores/{store_hash}/v3/content/widgets/search':\n    get:\n      tags:\n        - Widget\n      summary: Get All Widgets by Search\n      description: Returns a list of widgets by search.\n      operationId: searchWidgets\n      parameters:\n        - in: query\n          name: limit\n          description: Controls the number of items per page in a limited (paginated) list of products.\n          schema:\n            type: integer\n        - in: query\n          name: page\n          description: Specifies the page number in a limited (paginated) list of products.\n          schema:\n            type: integer\n        - in: query\n          name: query\n          description: The query string associated with a widget's name and description.\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/WidgetCollection_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n    parameters:\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/store/{store_hash}/v3/content/widget-templates/{uuid}/preview':\n    post:\n      tags:\n        - Widget Template\n      summary: Render a Widget Template\n      description: Render a widget template and return the widget html.\n      operationId: previewWidget\n      parameters:\n        - $ref: '#/components/parameters/TemplateUUID'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WidgetTemplatePreview'\n        required: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WidgetTemplatePreviewResponse'\n        '404':\n          description: Not Found\n        '422':\n          description: Unprocessable Entity\n    parameters:\n      - schema:\n          type: string\n        name: uuid\n        in: path\n        required: true\n        description: The identifier for a specific widget.\n      - schema:\n          type: string\n        name: store_hash\n        in: path\n        required: true\n  '/stores/{store_hash}/v3/content/widget-templates/{uuid}':\n    get:\n      tags:\n        - Widget Template\n      summary: Get a Widget Template\n      operationId: getWidgetTemplate\n      parameters:\n        - name: uuid\n          description: The identifier for a specific template.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n        - schema:\n            type: string\n          in: query\n          name: version_uuid\n          description: This is an optional query parmeter used to attempt to fetch a specific Widget Template version.\n      responses:\n        '200':\n          $ref: '#/components/responses/WidgetTemplate_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Returns a single **Widget Template**.\n    put:\n      tags:\n        - Widget Template\n      summary: Update a Widget Template\n      operationId: updateWidgetTemplate\n      parameters:\n        - name: uuid\n          description: The identifier for a specific template.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/widgetTemplate_Put'\n        required: true\n        x-examples:\n          application/json:\n            name: Header Images\n            template: '{{#each images}}{{/each}}'\n            create_new_version: true\n      responses:\n        '200':\n          $ref: '#/components/responses/WidgetTemplate_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Updates a **Widget Template**.\n    delete:\n      tags:\n        - Widget Template\n      summary: Delete A Widget Template\n      operationId: deleteWidgetTemplate\n      parameters:\n        - name: uuid\n          description: The identifier for a specific template.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '204':\n          description: An empty response.\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Deletes a **Widget Template**.\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: uuid\n        in: path\n        required: true\n        schema:\n          type: string\n  '/stores/{store_hash}/v3/content/widgets':\n    post:\n      tags:\n        - Widget\n      summary: Create a Widget\n      operationId: createWidget\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/widget_Post'\n        required: true\n        x-examples:\n          application/json:\n            name: Header Images\n            template: '{{#each images}}{{/each}}'\n            widget_configuration:\n              images:\n                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2\u0026imbypass=on'\n                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n            widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n      responses:\n        '200':\n          $ref: '#/components/responses/Widget_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: |-\n        Creates a **Widget**.\n\n        **Note:** There is a limit of 10,000 widgets per store and 150 widgets per page. For more information, see [Store Limits](https://support.bigcommerce.com/s/article/Platform-Limits#storelimits).\n    get:\n      tags:\n        - Widget\n      summary: Get All Widgets\n      operationId: getWidgets\n      parameters:\n        - name: page\n          description: |\n            Specifies the page number in a limited (paginated) list of products.\n          required: false\n          in: query\n          schema:\n            type: integer\n        - name: limit\n          description: |\n            Controls the number of items per page in a limited (paginated) list of products.\n          required: false\n          in: query\n          schema:\n            type: integer\n        - in: query\n          name: widget_template_kind\n          description: The kind of widget template.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: widget_template_uuid\n          description: The identifier for a specific widget template.\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n        - in: query\n          name: name\n          description: The URL encoded name of the widget.\n          schema:\n            type: string\n        - in: query\n          name: 'name:in'\n          description: 'Use to pass in comma-separated list of widget names. Example: `/widgets?name:in=test-widget-name,header%20images`'\n          schema:\n            type: array\n            items: {}\n        - in: query\n          name: channel_id\n          description: Filter items by channel_id.\n          schema:\n            type: integer\n        - schema:\n            type: string\n          in: query\n          name: 'site_id:in'\n          description: A comma-separated list of site ids to filter the results by.\n      responses:\n        '200':\n          $ref: '#/components/responses/WidgetCollection_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Returns a list of **Widgets**. Optional parameters can be passed in.\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n  '/stores/{store_hash}/v3/content/widgets/{uuid}':\n    get:\n      tags:\n        - Widget\n      summary: Get a Widget\n      operationId: getWidget\n      parameters:\n        - name: uuid\n          description: The identifier for a specific widget.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '200':\n          $ref: '#/components/responses/Widget_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Returns a single **Widget**.\n    put:\n      tags:\n        - Widget\n      summary: Update a Widget\n      operationId: updateWidget\n      parameters:\n        - name: uuid\n          description: The identifier for a specific widget.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/widget_Put'\n        required: true\n        x-examples:\n          application/json:\n            name: Header Images\n            widget_configuration:\n              images:\n                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2\u0026imbypass=on'\n                - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n            widget_template_uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n      responses:\n        '200':\n          $ref: '#/components/responses/Widget_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Updates a **Widget**.\n    delete:\n      tags:\n        - Widget\n      summary: Delete a Widget\n      operationId: deleteWidget\n      parameters:\n        - name: uuid\n          description: The identifier for a specific widget.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '204':\n          description: An empty response.\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Deletes a **Widget**.\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: uuid\n        in: path\n        required: true\n        schema:\n          type: string\n        description: The identifier for a specific widget.\n  '/stores/{store_hash}/v3/content/placements':\n    post:\n      tags:\n        - Placement\n      summary: Create a Placement\n      operationId: createPlacement\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/placement_Post'\n        required: true\n        x-examples:\n          application/json:\n            widget_uuid: a8940709-5655-4401-a341-62c44e3180b2\n            entity_id: '21'\n            template_file: pages/category\n            status: active\n            sort_order: 1\n            region: category_header_banner\n      responses:\n        '200':\n          $ref: '#/components/responses/Placement_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: |-\n        Creates a **Placement**.\n\n        **Template Files**\n\n        To view the list of values accepted by the `template_file` property, including **custom** templates, see [Placements](/api-docs/store-management/widgets/overview#placements).\n    get:\n      tags:\n        - Placement\n      summary: Get All Placements\n      operationId: getPlacements\n      parameters:\n        - name: page\n          description: |\n            Specifies the page number in a limited (paginated) list of products.\n          required: false\n          in: query\n          schema:\n            type: integer\n        - name: limit\n          description: |\n            Controls the number of items per page in a limited (paginated) list of products.\n          required: false\n          in: query\n          schema:\n            type: integer\n        - in: query\n          name: widget_template_kind\n          description: The kind of widget template.\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: template_file\n          description: 'The template file, for example: `pages/home`.'\n          required: false\n          schema:\n            type: string\n        - name: widget_uuid\n          description: The identifier for a specific widget.\n          in: query\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: widget_template_uuid\n          description: The identifier for a specific widget template.\n          required: false\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n        - $ref: '#/components/parameters/ChannelIDInParam'\n        - $ref: '#/components/parameters/SiteIDInParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/PlacementsCollection_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Returns a list of **Placements**.\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n  '/stores/{store_hash}/v3/content/placements/{uuid}':\n    get:\n      tags:\n        - Placement\n      summary: Get a Placement\n      operationId: getPlacement\n      parameters:\n        - name: uuid\n          description: The identifier for a specific placement.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '200':\n          $ref: '#/components/responses/Placement_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Returns a single **Placement**.\n    put:\n      tags:\n        - Placement\n      summary: Update a Placement\n      operationId: updatePlacement\n      parameters:\n        - name: uuid\n          description: The identifier for a specific placement.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/placement_Put'\n        required: true\n        x-examples:\n          application/json:\n            sort_order: 1\n            region: home_header_image\n            template_file: pages/home\n            status: active\n      responses:\n        '200':\n          $ref: '#/components/responses/Placement_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Updates a **Placement**.\n    delete:\n      tags:\n        - Placement\n      summary: Delete a Placement\n      operationId: deletePlacement\n      parameters:\n        - name: uuid\n          description: The identifier for a specific placement.\n          required: true\n          in: path\n          schema:\n            type: string\n            format: uuid\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n      responses:\n        '204':\n          description: An empty response.\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      description: Deletes a **Placement**.\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: uuid\n        in: path\n        required: true\n        schema:\n          type: string\n  '/stores/{store_hash}/v3/content/regions':\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/ThemeRegions_Resp'\n        '404':\n          $ref: '#/components/responses/Error404_Resp'\n        '422':\n          $ref: '#/components/responses/Error422_Resp'\n      summary: Get Theme Regions\n      description: Returns a list of unique **Theme Regions** in a file.\n      operationId: getContentRegions\n      tags:\n        - Regions\n      parameters:\n        - name: Accept\n          in: header\n          schema:\n            type: string\n            default: application/json\n        - in: header\n          name: Content-Type\n          schema:\n            type: string\n            default: application/json\n        - in: query\n          name: template_file\n          description: 'The template file, for example: `templateFile=pages/home`.'\n          required: true\n          schema:\n            type: string\n    parameters:\n      - name: store_hash\n        in: path\n        required: true\n        schema:\n          type: string\nsecurity:\n  - X-Auth-Token: []\nservers:\n  - url: 'https://api.bigcommerce.com'\ncomponents:\n  parameters:\n    TemplateUUID:\n      name: uuid\n      description: The identifier for a specific template.\n      required: true\n      in: path\n      schema:\n        type: string\n        format: uuid\n    FilterWidgetTemplateUUIDParam:\n      in: query\n      name: widget_template_uuid\n      description: The identifier for a specific widget template.\n      required: false\n      schema:\n        type: string\n        format: uuid\n    FilterWidgetTemplateKindParam:\n      in: query\n      name: widget_template_kind\n      description: The kind of widget template.\n      required: false\n      schema:\n        type: string\n    FilterTemplateFileParam:\n      in: query\n      name: template_file\n      description: 'The template file, for example: `pages/home`.'\n      required: false\n      schema:\n        type: string\n    RequiredTemplateFile:\n      in: query\n      name: templateFile\n      description: 'The template file, for example: `templateFile=pages/home`.'\n      required: true\n      schema:\n        type: string\n    LayoutUUID:\n      name: uuid\n      description: The identifier for a specific layout.\n      required: true\n      in: path\n      schema:\n        type: string\n        format: uuid\n    PlacementUUID:\n      name: uuid\n      description: The identifier for a specific placement.\n      required: true\n      in: path\n      schema:\n        type: string\n        format: uuid\n    WidgetUUID:\n      name: uuid\n      description: The identifier for a specific widget.\n      required: true\n      in: path\n      schema:\n        type: string\n        format: uuid\n    FilterWidgetUUIDParam:\n      name: widget_uuid\n      description: The identifier for a specific widget.\n      in: query\n      required: false\n      schema:\n        type: string\n        format: uuid\n    PageParam:\n      name: page\n      description: |\n        Specifies the page number in a limited (paginated) list of products.\n      required: false\n      in: query\n      schema:\n        type: integer\n    LimitParam:\n      name: limit\n      description: |\n        Controls the number of items per page in a limited (paginated) list of products.\n      required: false\n      in: query\n      schema:\n        type: integer\n    QueryWidgetsParam:\n      name: query\n      in: query\n      description: |\n        The query string associated with a widget's name and description.\n      schema:\n        type: string\n    Accept:\n      name: Accept\n      in: header\n      schema:\n        type: string\n        default: application/json\n    Content-Type:\n      in: header\n      name: Content-Type\n      schema:\n        type: string\n        default: application/json\n    ChannelIDInParam:\n      name: 'channel_id:in'\n      in: query\n      required: false\n      schema:\n        type: string\n      description: A comma-separated list of channel ids to filter the results by.\n    SiteIDInParam:\n      name: 'site_id:in'\n      in: query\n      required: false\n      schema:\n        type: string\n      description: A comma-separated list of site IDs to filter the results by.\n  responses:\n    ThemeRegions_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/themeRegion'\n              meta:\n                type: object\n                description: Empty meta object; may be used later.\n          examples:\n            response:\n              value:\n                data:\n                  - name: header_bottom\n                  - name: category_header_banner\n                meta: {}\n    LayoutCollectionResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  properties:\n                    uuid:\n                      type: string\n                      format: uuid\n                      description: The primary identifier.\n                    entity_id:\n                      type: string\n                      description: The specific instance of a page\n                    template_file:\n                      type: string\n                      description: The page template name.\n                    region:\n                      type: string\n                      description: The name of the region defined in the stencil theme file.\n                    markup:\n                      type: string\n                      description: The HTML layout which defines complex poisitoning for placements.\n                    date_created:\n                      type: string\n                      format: datetime\n                      description: The date on which this object was initially created.\n                    date_modified:\n                      type: string\n                      format: datetime\n                      description: The date on which this object was last updated.\n                  title: Layout\n              meta:\n                type: object\n                description: 'Data about the response, including pagination and collection totals.'\n                properties:\n                  pagination:\n                    type: object\n                    description: |\n                      Data about the response, including pagination and collection totals.\n                    properties:\n                      total:\n                        type: integer\n                        description: |\n                          Total number of items in the result set.\n                      count:\n                        type: integer\n                        description: |\n                          Total number of items in the collection response.\n                      per_page:\n                        type: integer\n                        description: |\n                          The amount of items returned in the collection per page, controlled by the limit parameter.\n                      current_page:\n                        type: integer\n                        description: |\n                          The page you are currently on within the collection.\n                      total_pages:\n                        type: integer\n                        description: |\n                          The total number of pages in the collection.\n                      links:\n                        type: object\n                        description: |\n                          Pagination links for the previous and next parts of the whole collection.\n                        properties:\n                          previous:\n                            type: string\n                            description: |\n                              Link to the previous page returned in the response.\n                          current:\n                            type: string\n                            description: |\n                              Link to the current page returned in the response.\n                          next:\n                            type: string\n                            description: |\n                              Link to the next page returned in the response.\n                title: Collection Meta\n          examples:\n            response:\n              value:\n                data:\n                  - uuid: cacdadcf-07ec-43f3-aec4-f8e3382d7618\n                    template_file: pages/category\n                    entity_id: '21'\n                    region: category_header_banner\n                    markup: ' '\n                    date_created: '2019-02-25T18:38:08.455Z'\n                    date_modified: '2019-02-25T18:38:08.455Z'\n                meta:\n                  pagination:\n                    total: 1\n                    count: 1\n                    per_page: 50\n                    current_page: 1\n                    total_pages: 1\n    LayoutResponse:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  properties:\n                    uuid:\n                      type: string\n                      format: uuid\n                      description: The primary identifier.\n                    entity_id:\n                      type: string\n                      description: The specific instance of a page\n                    template_file:\n                      type: string\n                      description: The page template name.\n                    region:\n                      type: string\n                      description: The name of the region defined in the stencil theme file.\n                    markup:\n                      type: string\n                      description: The HTML layout which defines complex poisitoning for placements.\n                    date_created:\n                      type: string\n                      format: datetime\n                      description: The date on which this object was initially created.\n                    date_modified:\n                      type: string\n                      format: datetime\n                      description: The date on which this object was last updated.\n                  title: Layout\n    PlacementsCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/placement_Full'\n              meta:\n                $ref: '#/components/schemas/metaCollection'\n          examples:\n            response:\n              value:\n                data:\n                  - channel_id: 1\n                    date_created: '2020-12-21T20:43:16.796Z'\n                    date_modified: '2020-12-21T20:43:16.796Z'\n                    entity_id: '21'\n                    region: category_header_banner\n                    sort_order: 1\n                    status: active\n                    template_file: pages/category\n                    uuid: 89eac5b3-91d7-48e5-92e7-ff53ecf07f8c\n                    widget:\n                      channel_id: 1\n                      date_created: '2020-12-21T19:54:16.406Z'\n                      date_modified: '2020-12-21T20:40:45.173Z'\n                      description: ''\n                      name: Header Images\n                      storefront_api_query_params: {}\n                      uuid: 1f05183e-dfa4-4583-af28-250b47e177b2\n                      version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                      widget_configuration:\n                        _:\n                          id: 1f05183e-dfa4-4583-af28-250b47e177b2\n                        images:\n                          - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                          - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2\u0026imbypass=on'\n                          - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                      widget_template:\n                        channel_id: 1\n                        client_rerender: false\n                        current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                        date_created: '2020-12-21T19:49:29.110Z'\n                        date_modified: '2020-12-21T19:49:29.110Z'\n                        icon_name: default\n                        kind: custom\n                        name: Header Images\n                        schema: []\n                        storefront_api_query: ''\n                        template: '{{#each images}}{{/each}}'\n                        template_engine: handlebars_v3\n                        uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n                meta:\n                  pagination:\n                    count: 1\n                    current_page: 1\n                    per_page: 50\n                    total: 1\n                    total_pages: 1\n    Placement_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/placement_Full'\n              meta:\n                type: object\n          examples:\n            response:\n              value:\n                data:\n                  channel_id: 1\n                  date_created: '2020-12-21T20:43:16.796Z'\n                  date_modified: '2020-12-21T20:43:16.796Z'\n                  entity_id: '21'\n                  region: category_header_banner\n                  sort_order: 1\n                  status: active\n                  template_file: pages/category\n                  uuid: 89eac5b3-91d7-48e5-92e7-ff53ecf07f8c\n                  widget:\n                    channel_id: 1\n                    date_created: '2020-12-21T19:54:16.406Z'\n                    date_modified: '2020-12-21T20:40:45.173Z'\n                    description: ''\n                    name: Header Images\n                    storefront_api_query_params: {}\n                    uuid: 1f05183e-dfa4-4583-af28-250b47e177b2\n                    version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                    widget_configuration:\n                      _:\n                        id: 1f05183e-dfa4-4583-af28-250b47e177b2\n                      images:\n                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2\u0026imbypass=on'\n                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                    widget_template:\n                      channel_id: 1\n                      client_rerender: false\n                      current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                      date_created: '2020-12-21T19:49:29.110Z'\n                      date_modified: '2020-12-21T19:49:29.110Z'\n                      icon_name: default\n                      kind: custom\n                      name: Header Images\n                      schema: []\n                      storefront_api_query: ''\n                      template: '{{#each images}}{{/each}}'\n                      template_engine: handlebars_v3\n                      uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n                meta: {}\n    WidgetTemplateCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/widgetTemplate_Full'\n              meta:\n                $ref: '#/components/schemas/pagination'\n          examples:\n            response:\n              value:\n                data:\n                  - channel_id: 1\n                    client_rerender: false\n                    current_version_uuid: 4bd7619e-7992-4454-8610-84fb16449761\n                    date_created: '2020-12-21T19:36:16.896Z'\n                    date_modified: '2020-12-21T19:36:16.896Z'\n                    icon_name: default\n                    kind: custom\n                    name: Header Images\n                    schema: []\n                    storefront_api_query: ''\n                    template: '{{#each images}}{{/each}}'\n                    template_engine: handlebars_v3\n                    uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n                  - channel_id: 1\n                    client_rerender: false\n                    current_version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e\n                    date_created: '2020-12-21T19:36:59.384Z'\n                    date_modified: '2020-12-21T19:36:59.384Z'\n                    icon_name: default\n                    kind: custom\n                    name: Simple List\n                    schema: []\n                    storefront_api_query: ''\n                    template: '\u003cul\u003e{{#each list_items}}\u003cli style=''color:{{color}};''\u003e{{text}}\u003c/li\u003e{{/each}}\u003c/ul\u003e'\n                    template_engine: handlebars_v3\n                    uuid: 42b42cbb-e2d8-4f2a-97ea-06755032115a\n                  - channel_id: 1\n                    client_rerender: false\n                    current_version_uuid: bc820372-368e-4a96-a6d6-f313edba5617\n                    date_created: '2020-12-21T19:38:08.036Z'\n                    date_modified: '2020-12-21T19:38:08.036Z'\n                    icon_name: default\n                    kind: custom\n                    name: Simple Text with Styling\n                    schema: []\n                    storefront_api_query: ''\n                    template: |\n                      {{text}}\n                    template_engine: handlebars_v3\n                    uuid: 17dcc919-982a-4cc0-8ede-a5b49f9ab6dc\n                  - channel_id: 1\n                    client_rerender: false\n                    current_version_uuid: 873b0a03-b219-46ec-8f06-c3c4522ef25d\n                    date_created: '2020-12-21T19:38:30.223Z'\n                    date_modified: '2020-12-21T19:38:30.223Z'\n                    icon_name: default\n                    kind: custom\n                    name: YouTube Embed\n                    schema: []\n                    storefront_api_query: ''\n                    template: ''\n                    template_engine: handlebars_v3\n                    uuid: d9e7fd0e-d5c2-45c9-8919-ce68a5590c12\n                  - channel_id: 1\n                    client_rerender: false\n                    current_version_uuid: 8fa7ff13-fcfb-4106-9c32-5a084224a444\n                    date_created: '2020-12-21T19:38:46.557Z'\n                    date_modified: '2020-12-21T19:38:46.557Z'\n                    icon_name: default\n                    kind: custom\n                    name: Slider Template\n                    schema: []\n                    storefront_api_query: ''\n                    template: |-\n                      {{#each slides}}\n                      {{/each}}\n                    template_engine: handlebars_v3\n                    uuid: 30714957-0e01-4c4e-8551-25591261d0d0\n                  - channel_id: 0\n                    client_rerender: false\n                    current_version_uuid: 7494d009-c695-43ce-a1eb-ba75ef663ba2\n                    date_created: '2020-06-23T18:07:12.110Z'\n                    date_modified: '2020-06-23T18:07:12.110Z'\n                    icon_name: default\n                    kind: pp-cartpage-fullbanner\n                    name: PayPal Credit Banner - Cart Page (728x90)\n                    schema: []\n                    storefront_api_query: ''\n                    template: ''\n                    template_engine: handlebars_v3\n                    uuid: 2ff24732-6848-47ba-9a7f-c8b1d444f270\n                  - channel_id: 0\n                    client_rerender: false\n                    current_version_uuid: ee4978a6-31f9-47e2-ab38-810dd1c78e34\n                    date_created: '2020-06-23T18:07:12.136Z'\n                    date_modified: '2020-06-23T18:07:12.136Z'\n                    icon_name: default\n                    kind: pp-homepage-fullbanner\n                    name: PayPal Credit Banner - Home Page (728x90)\n                    schema: []\n                    storefront_api_query: ''\n                    template: ''\n                    template_engine: handlebars_v3\n                    uuid: 3002bf5b-5eca-4ac2-8f1f-5240c2b74712\n                meta:\n                  pagination:\n                    total: 7\n                    count: 7\n                    per_page: 50\n                    current_page: 1\n                    total_pages: 1\n    WidgetTemplate_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            allOf:\n              - properties:\n                  data:\n                    $ref: '#/components/schemas/widgetTemplate_Full'\n              - properties:\n                  meta:\n                    type: object\n            type: object\n          examples:\n            response:\n              value:\n                data:\n                  channel_id: 1\n                  client_rerender: false\n                  current_version_uuid: 4bd7619e-7992-4454-8610-84fb16449761\n                  date_created: '2020-12-21T19:36:16.896Z'\n                  date_modified: '2020-12-21T19:36:16.896Z'\n                  icon_name: default\n                  kind: custom\n                  name: Header Images\n                  schema: []\n                  storefront_api_query: ''\n                  template: '{{#each images}}{{/each}}'\n                  template_engine: handlebars_v3\n                  uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n                meta: {}\n    WidgetCollection_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/widget_Full'\n              meta:\n                $ref: '#/components/schemas/metaCollection'\n          examples:\n            response:\n              value:\n                data:\n                  - channel_id: 1\n                    date_created: '2020-12-21T19:54:16.406Z'\n                    date_modified: '2020-12-21T19:54:16.406Z'\n                    description: ''\n                    name: Header Images\n                    storefront_api_query_params: {}\n                    uuid: 1f05183e-dfa4-4583-af28-250b47e177b2\n                    version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                    widget_configuration:\n                      _:\n                        id: 1f05183e-dfa4-4583-af28-250b47e177b2\n                      images:\n                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2\u0026imbypass=on'\n                        - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                    widget_template:\n                      channel_id: 1\n                      client_rerender: false\n                      current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                      date_created: '2020-12-21T19:49:29.110Z'\n                      date_modified: '2020-12-21T19:49:29.110Z'\n                      icon_name: default\n                      kind: custom\n                      name: Header Images\n                      schema: []\n                      storefront_api_query: ''\n                      template: '{{#each images}}{{/each}}'\n                      template_engine: handlebars_v3\n                      uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n                  - channel_id: 1\n                    date_created: '2020-12-21T20:26:18.557Z'\n                    date_modified: '2020-12-21T20:26:18.557Z'\n                    description: ''\n                    name: Simple List\n                    storefront_api_query_params: {}\n                    uuid: 7a842254-96ad-475f-9fe5-a59695e9685f\n                    version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e\n                    widget_configuration:\n                      _:\n                        id: 7a842254-96ad-475f-9fe5-a59695e9685f\n                      list_items:\n                        - color: blue\n                          text: The color is blue\n                        - color: green\n                          text: The color is green\n                        - color: red\n                          text: The color is red\n                    widget_template:\n                      channel_id: 1\n                      client_rerender: false\n                      current_version_uuid: c23dd66b-fa3f-451d-88ef-9f4082c6051e\n                      date_created: '2020-12-21T19:36:59.384Z'\n                      date_modified: '2020-12-21T19:36:59.384Z'\n                      icon_name: default\n                      kind: custom\n                      name: Simple List\n                      schema: []\n                      storefront_api_query: ''\n                      template: '\u003cul\u003e{{#each list_items}}\u003cli style=''color:{{color}};''\u003e{{text}}\u003c/li\u003e{{/each}}\u003c/ul\u003e'\n                      template_engine: handlebars_v3\n                      uuid: 42b42cbb-e2d8-4f2a-97ea-06755032115a\n                meta:\n                  pagination:\n                    count: 2\n                    current_page: 1\n                    per_page: 50\n                    total: 2\n                    total_pages: 1\n    Widget_Resp:\n      description: ''\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/widget_Full'\n              meta:\n                type: object\n          examples:\n            response:\n              value:\n                data:\n                  channel_id: 1\n                  date_created: '2020-12-21T19:54:16.406Z'\n                  date_modified: '2020-12-21T19:54:16.406Z'\n                  description: ''\n                  name: Header Images\n                  storefront_api_query_params: {}\n                  uuid: 1f05183e-dfa4-4583-af28-250b47e177b2\n                  version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                  widget_configuration:\n                    _:\n                      id: 1f05183e-dfa4-4583-af28-250b47e177b2\n                    images:\n                      - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                      - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2\u0026imbypass=on'\n                      - image_source: 'https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2\u0026imbypass=on'\n                  widget_template:\n                    channel_id: 1\n                    client_rerender: false\n                    current_version_uuid: c863f77b-e5b4-4462-a9ed-2aff9005140e\n                    date_created: '2020-12-21T19:49:29.110Z'\n                    date_modified: '2020-12-21T19:49:29.110Z'\n                    icon_name: default\n                    kind: custom\n                    name: Header Images\n                    schema: []\n                    storefront_api_query: ''\n                    template: '{{#each images}}{{/each}}'\n                    template_engine: handlebars_v3\n                    uuid: f8459145-da8f-4d98-93e4-83aa47da61c6\n                meta: {}\n    Error422_Resp:\n      description: |\n        This is the result of missing required fields, or of invalid data. See the response for more details.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Base'\n    Error404_Resp:\n      description: The resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_Base'\n          examples:\n            example-1:\n              value:\n                status: 0\n                title: string\n                type: string\n                instance: string\n                errors: {}\n    new:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            properties:\n              id:\n                type: string\n  securitySchemes:\n    X-Auth-Token:\n      type: apiKey\n      name: X-Auth-Token\n      in: header\n      description: |-\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Content | modify | `store_v2_content` |\n        |  Content | read-only | `store_v2_content_read_only` |\n\n        ### Headers\n\n        |Header|Parameter|Description|\n        |-|-|-|\n        |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n        ### Example\n\n        ```http\n        GET /stores/{store_hash}/v3/catalog/summary\n        host: api.bigcommerce.com\n        Content-Type: application/json\n        X-Auth-Token: {access_token}\n        ```\n\n        * For more information on Authenticating BigCommerce APIs, see: [Authentication](/api-docs/getting-started/authentication).\n  schemas:\n    WidgetTemplatePreview:\n      properties:\n        widget_configuration:\n          type: object\n          description: The JSON data that populates the template.\n          format: json\n      x-tags:\n        - Models\n    WidgetTemplatePreviewResponse:\n      type: object\n      properties:\n        data:\n          properties:\n            html:\n              type: string\n              description: The HTML render of the widget template.\n              format: html\n      x-tags:\n        - Models\n    widgetTemplate_Put:\n      allOf:\n        - $ref: '#/components/schemas/widgetTemplate_Base'\n        - type: object\n          properties:\n            create_new_version:\n              type: boolean\n              description: Can be added to create a new widget template version instead of updating the current one.\n            channel_id:\n              type: integer\n              description: The id of the channel on which to place this template.\n      title: widgetTemplate_Put\n      x-internal: false\n    widgetTemplate_Post:\n      title: widgetTemplate_Post\n      type: object\n      description: ''\n      x-internal: false\n      properties:\n        name:\n          type: string\n          description: User-friendly name.\n        schema:\n          $ref: '#/components/schemas/widgetSchema'\n        template:\n          type: string\n          description: Handlebars HTML content. Also has access to Stencil Paper helpers.\n          format: html\n        storefront_api_query:\n          type: string\n          description: The GraphQL Storefront API query that provides widget data.\n        channel_id:\n          type: integer\n          description: The id of the channel on which to create this template. Defaults to the first channel created on the store.\n      required:\n        - name\n        - template\n    widgetTemplate_Full:\n      allOf:\n        - $ref: '#/components/schemas/widgetTemplate_Base'\n        - type: object\n          properties:\n            uuid:\n              type: string\n              format: uuid\n              description: The primary identifier.\n            kind:\n              type: string\n              description: The kind of widget template.\n            date_created:\n              type: string\n              format: datetime\n              description: The date on which this object was initially created.\n            date_modified:\n              type: string\n              format: datetime\n              description: The date on which this object was last updated.\n            current_version_uuid:\n              type: string\n              description: The identifier to the current version of this widget template.\n            icon_name:\n              type: string\n              default: default\n              description: A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.\n      title: widgetTemplate_Full\n      description: ''\n      x-internal: false\n    widget_Full:\n      title: widget_Full\n      allOf:\n        - $ref: '#/components/schemas/widget_Base'\n        - type: object\n          properties:\n            uuid:\n              type: string\n              format: uuid\n              description: The primary identifier.\n            widget_template:\n              $ref: '#/components/schemas/widgetTemplate_Full'\n            date_created:\n              type: string\n              format: datetime\n              description: The date on which this object was initially created.\n            date_modified:\n              type: string\n              format: datetime\n              description: The date on which this object was last updated.\n            version_uuid:\n              type: string\n              description: The identifier of the widget template version associated with this widget.\n            channel_id:\n              type: integer\n              description: The ID of the channel on which this widget exists.\n      x-internal: false\n    widget_Post:\n      title: widget_Post\n      x-internal: false\n      type: object\n      properties:\n        name:\n          type: string\n          description: User friendly name.\n        description:\n          type: string\n          description: The user-friendly description.\n        widget_configuration:\n          type: object\n          description: The JSON data that populates the template.\n          format: json\n        widget_template_uuid:\n          type: string\n          description: The widget template UUID.\n        channel_id:\n          type: integer\n          description: The ID of the channel on which to create this widget. Defaults to the first channel created on the store.\n      required:\n        - name\n        - widget_template_uuid\n    widget_Put:\n      title: widget_Put\n      allOf:\n        - $ref: '#/components/schemas/widget_Base'\n        - type: object\n          properties:\n            widget_template_uuid:\n              type: string\n              description: The widget template UUID.\n            channel_id:\n              type: integer\n            upgrade:\n              type: boolean\n              description: Upgrade the Widget to latest version of the WidgetTemplate.\n      x-internal: false\n    placement_Post:\n      title: placement_Post\n      allOf:\n        - type: object\n          properties:\n            widget_uuid:\n              type: string\n              description: A widget identifier.\n            template_file:\n              type: string\n              description: The template file that you would like to target.\n            channel_id:\n              type: integer\n              description: The id of the channel on which to create this placement. Defaults to the first channel created on the store.\n              example: 1\n          required:\n            - widget_uuid\n            - template_file\n        - $ref: '#/components/schemas/placement_Base'\n      x-internal: false\n    placement_Put:\n      title: placement_Put\n      allOf:\n        - type: object\n          properties:\n            template_file:\n              type: string\n              description: The template file that you would like to target.\n            widget_uuid:\n              type: string\n              description: A widget identifier.\n            channel_id:\n              type: integer\n              description: The ID of the channel on which this placement exists.\n        - $ref: '#/components/schemas/placement_Base'\n      x-internal: false\n    placement_Full:\n      title: placement_Full\n      allOf:\n        - type: object\n          properties:\n            uuid:\n              type: string\n              format: uuid\n              description: The primary identifier.\n            template_file:\n              type: string\n              description: The template file that you would like to target.\n            date_created:\n              type: string\n              format: datetime\n              description: The date on which this object was initially created.\n            date_modified:\n              type: string\n              format: datetime\n              description: The date on which this object was last updated.\n            channel_id:\n              type: integer\n              description: The ID of the channel on which this placement exists.\n        - $ref: '#/components/schemas/placement_Base'\n        - type: object\n          properties:\n            widget:\n              $ref: '#/components/schemas/widget_Full'\n      x-internal: false\n    metaCollection:\n      type: object\n      description: 'Data about the response, including pagination and collection totals.'\n      title: metaCollection\n      properties:\n        pagination:\n          $ref: '#/components/schemas/pagination'\n      x-internal: false\n    pagination:\n      type: object\n      description: |\n        Data about the response, including pagination and collection totals.\n      properties:\n        total:\n          type: integer\n          description: |\n            Total number of items in the result set.\n        count:\n          type: integer\n          description: |\n            Total number of items in the collection response.\n        per_page:\n          type: integer\n          description: |\n            The amount of items returned in the collection per page, controlled by the limit parameter.\n        current_page:\n          type: integer\n          description: |\n            The page you are currently on within the collection.\n        total_pages:\n          type: integer\n          description: |\n            The total number of pages in the collection.\n        links:\n          type: object\n          description: |\n            Pagination links for the previous and next parts of the whole collection.\n          properties:\n            previous:\n              type: string\n              description: |\n                Link to the previous page returned in the response.\n            current:\n              type: string\n              description: |\n                Link to the current page returned in the response.\n            next:\n              type: string\n              description: |\n                Link to the next page returned in the response.\n      title: pagination\n      x-internal: false\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseError'\n        - type: object\n          properties:\n            errors:\n              $ref: '#/components/schemas/DetailedErrors'\n      x-tags:\n        - Models\n    error_Base:\n      type: object\n      description: Error payload for the BigCommerce API.\n      properties:\n        status:\n          description: The HTTP status code.\n          type: integer\n        title:\n          description: The error title describing the particular error.\n          type: string\n        type:\n          type: string\n        instance:\n          type: string\n        errors:\n          type: object\n      x-internal: false\n      title: error_Base\n    BaseError:\n      type: object\n      description: |\n        Error payload for the BigCommerce API.\n      properties:\n        status:\n          description: |\n            The HTTP status code.\n          type: integer\n        title:\n          description: |\n            The error title describing the particular error.\n          type: string\n        type:\n          type: string\n        instance:\n          type: string\n      x-tags:\n        - Models\n    DetailedErrors:\n      type: object\n      additionalProperties:\n        type: string\n      x-tags:\n        - Models\n    themeRegion:\n      properties:\n        name:\n          type: string\n          description: The region name.\n      title: themeRegion\n      x-internal: false\n    Meta:\n      type: object\n      description: Empty meta object; may be used later.\n      x-internal: false\n    placement_Base:\n      type: object\n      title: placement_Base\n      properties:\n        entity_id:\n          type: string\n          description: 'The identifier of a page you would like to target. For product pages, choose product ID. For category pages, choose category ID. Home page does not support `entity_id`.'\n        sort_order:\n          type: integer\n          description: The sort order to control the position of a content widget in a region.\n        region:\n          type: string\n          description: The name of the region in which to insert content widgets.\n        status:\n          type: string\n          enum:\n            - inactive\n            - active\n          description: Sets the placement as either inactive or active.\n          default: inactive\n      x-internal: false\n    widgetTemplate_Base:\n      type: object\n      title: widgetTemplate_Base\n      properties:\n        name:\n          type: string\n          description: The user-friendly name.\n        schema:\n          $ref: '#/components/schemas/widgetSchema'\n        template:\n          type: string\n          format: html\n          description: The widget template HTML. Supports Handlebars and Paper helpers.\n        storefront_api_query:\n          type: string\n          description: The GraphQL Storefront API query that provides widget data.\n      description: ''\n      x-internal: false\n    widget_Base:\n      type: object\n      title: widget_Base\n      properties:\n        name:\n          type: string\n          description: The user-friendly name.\n        description:\n          type: string\n          description: The user-friendly description.\n        widget_configuration:\n          type: object\n          format: json\n          description: The JSON data that populates the template.\n      x-internal: false\n    new-model:\n      type: array\n      items:\n        type: object\n        properties:\n          type:\n            type: string\n          label:\n            type: string\n          id:\n            type: string\n          default:\n            type: integer\n          typeMeta:\n            type: string\n          conditional:\n            $ref: '#/components/schemas/widgetSchemaConditional'\n      x-internal: false\n    widgetSchemaTab:\n      type: object\n      title: widgetSchemaTab\n      description: '**Tab.** Use the **tab** settings type to create settings visible in Page Builder.'\n      enum:\n        - tab\n      properties:\n        type:\n          type: string\n          description: The type of setting component to display.\n          enum:\n            - tab\n        label:\n          type: string\n          example: Content\n          description: The user-friendly message to inform the user how this setting will be used.\n        sections:\n          type: array\n          description: Groups of related settings.\n          items:\n            type: object\n            title: widgetSchemaTabSections\n            properties:\n              label:\n                type: string\n                description: The user-friendly message to inform the user how this setting will be used.\n                example: Product\n              settings:\n                type: array\n                description: 'For examples of schema settings, see [Widget UI Input Types](/stencil-docs/page-builder/schema-settings).'\n                items:\n                  type: object\n                  title: widgetSchemaSetting_Base\n                  description: 'For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'\n                  properties:\n                    type:\n                      type: string\n                      description: |-\n                        The type of setting component to display. You can view the list of elements below to discover which are available to use.\n\n                        For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.\n                      enum:\n                        - alignment\n                        - boolean\n                        - boxModel\n                        - code\n                        - color\n                        - imageManager\n                        - input\n                        - number\n                        - productId\n                        - productImage\n                        - range\n                        - regexInput\n                        - select\n                        - text\n                        - toggle\n                    label:\n                      type: string\n                      description: The user friendly message to inform the user how this setting will be used.\n                    id:\n                      type: string\n                      description: The variable name where the setting value will be available in the widget template.\n                    default:\n                      type: string\n                      description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.\n                    typeMeta:\n                      type: object\n                      description: Additional information needed based on the selected setting type.\n                      properties:\n                        selectOptions:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              label:\n                                type: string\n                                example: Image\n                              value:\n                                type: string\n                                example: image\n                    conditional:\n                      type: object\n                      title: widgetSchemaConditional\n                      description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'\n                      x-examples:\n                        Conditional attribute:\n                          key: backgroundType\n                          operator: IN\n                          value:\n                            - color\n                      properties:\n                        key:\n                          type: string\n                          description: The ID of the `setting` object the conditional attribute is related to.\n                          example: backgroundType\n                        operator:\n                          type: string\n                          description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditionalâ€™s `value` property is equal to the selected value of the `selectOptions`. '\n                          example: IN\n                        value:\n                          type: array\n                          description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.\n                          items: {}\n      x-internal: false\n    widgetSchemaTabSections:\n      type: object\n      title: widgetSchemaTabSections\n      properties:\n        label:\n          type: string\n        settings:\n          type: array\n          description: 'For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'\n          items:\n            $ref: '#/components/schemas/widgetSchemaSetting_Base'\n      x-internal: false\n    widgetSchemaArray:\n      type: object\n      title: widgetSchemaArray\n      description: '**Array.** Use the **array** settings type to build collections of elements within the widget. Each element in the array can contain tabs, sections, and an entire schema.'\n      properties:\n        type:\n          type: string\n          enum:\n            - array\n        label:\n          type: string\n        id:\n          type: string\n        defaultCount:\n          type: integer\n          description: number of elements in the list to display by default.\n        entryLabel:\n          type: string\n          description: name for each element in the list\n        thumbnail:\n          type: object\n          description: used to display an image stored at the specified attribute name\n          properties:\n            type:\n              type: string\n              example: image\n            valueKey:\n              type: string\n              example: imageUrl.src\n        schema:\n          description: The schema used for each element in the array.\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/widgetSchemaHidden'\n              - $ref: '#/components/schemas/widgetSchemaTab'\n      x-internal: false\n    widgetSchemaSetting_Base:\n      type: object\n      title: widgetSchemaSetting_Base\n      description: 'For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'\n      properties:\n        type:\n          type: string\n          description: |-\n            The type of setting component to display. You can view the list of elements below to discover which are available to use.\n\n            For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.\n          enum:\n            - alignment\n            - boolean\n            - boxModel\n            - code\n            - color\n            - imageManager\n            - input\n            - number\n            - productId\n            - productImage\n            - range\n            - regexInput\n            - select\n            - text\n            - toggle\n        label:\n          type: string\n          description: The user friendly message to inform the user how this setting will be used.\n        id:\n          type: string\n          description: The variable name where the setting value will be available in the widget template.\n        default:\n          type: string\n          description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.\n        typeMeta:\n          type: object\n          description: Additional information needed based on the selected setting type.\n          properties:\n            selectOptions:\n              type: array\n              items:\n                type: object\n                properties:\n                  label:\n                    type: string\n                    example: Image\n                  value:\n                    type: string\n                    example: image\n        conditional:\n          $ref: '#/components/schemas/widgetSchemaConditional'\n      x-internal: false\n    widgetSchema:\n      type: array\n      description: 'The schema for the widgetâ€™s merchant-facing UI. For more information on the available schema settings, see [Widget UI Schema](/stencil-docs/page-builder/widget-ui-schema). '\n      title: ''\n      items:\n        anyOf:\n          - $ref: '#/components/schemas/widgetSchemaTab'\n          - $ref: '#/components/schemas/widgetSchemaArray'\n          - $ref: '#/components/schemas/widgetSchemaHidden'\n      x-internal: false\n    widgetSchemaHidden:\n      type: object\n      title: widgetSchemaHidden\n      description: '**Hidden.** Use the **hidden** settings type to create controls that have no user interface drawn in Page Builder. Hidden settings are not grouped into any other tabs or arrays.'\n      enum:\n        - hidden\n      properties:\n        type:\n          type: string\n        settings:\n          type: array\n          items:\n            type: object\n            title: widgetSchemaSetting_Base\n            description: 'For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.'\n            properties:\n              type:\n                type: string\n                description: |-\n                  The type of setting component to display. You can view the list of elements below to discover which are available to use.\n\n                  For examples of each type of setting, see [Page Builder \u003e Schema Settings](/stencil-docs/page-builder/schema-settings/alignment) in Theme Docs.\n                enum:\n                  - alignment\n                  - boolean\n                  - boxModel\n                  - code\n                  - color\n                  - imageManager\n                  - input\n                  - number\n                  - productId\n                  - productImage\n                  - range\n                  - regexInput\n                  - select\n                  - text\n                  - toggle\n              label:\n                type: string\n                description: The user friendly message to inform the user how this setting will be used.\n              id:\n                type: string\n                description: The variable name where the setting value will be available in the widget template.\n              default:\n                type: string\n                description: The default value to use when rendering the widget for the first time. Make sure to set sensible defaults to make your widget easier to use.\n              typeMeta:\n                type: object\n                description: Additional information needed based on the selected setting type.\n                properties:\n                  selectOptions:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        label:\n                          type: string\n                          example: Image\n                        value:\n                          type: string\n                          example: image\n              conditional:\n                type: object\n                title: widgetSchemaConditional\n                description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'\n                x-examples:\n                  Conditional attribute:\n                    key: backgroundType\n                    operator: IN\n                    value:\n                      - color\n                properties:\n                  key:\n                    type: string\n                    description: The ID of the `setting` object the conditional attribute is related to.\n                    example: backgroundType\n                  operator:\n                    type: string\n                    description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditionalâ€™s `value` property is equal to the selected value of the `selectOptions`. '\n                    example: IN\n                  value:\n                    type: array\n                    description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.\n                    items: {}\n      x-internal: false\n    widgetSchemaTabSectionsSettings:\n      type: object\n      properties: {}\n      title: widgetSchemaTabSectionsSettings\n      x-internal: false\n    widgetSchemaConditional:\n      type: object\n      title: widgetSchemaConditional\n      description: 'An optional property that can be added to each setting to control whether it should be displayed to the user while editing in Page Builder. This does not clear the value in the setting, just controls the display of the setting.'\n      x-examples:\n        Conditional attribute:\n          key: backgroundType\n          operator: IN\n          value:\n            - color\n      properties:\n        key:\n          type: string\n          description: The ID of the `setting` object the conditional attribute is related to.\n          example: backgroundType\n        operator:\n          type: string\n          description: 'Specifies the operation used to determine whether to display the setting. The `IN` operator is currently the only supported operator. The setting will be displayed if the conditionalâ€™s `value` property is equal to the selected value of the `selectOptions`. '\n          example: IN\n        value:\n          type: array\n          description: A single-object array containing a value from the `typeMeta`'s `selectOptions`.\n          items: {}\n      x-internal: false\n",
			"canonicalURL": "/github.com/bigcommerce/api-specs@3d4f475bfa35fa63397a69165530f47d4d8b3703/-/blob/reference/widgets.v3.yml",
			"externalURLs": [
				{
					"url": "https://github.com/bigcommerce/api-specs/blob/3d4f475bfa35fa63397a69165530f47d4d8b3703/reference/widgets.v3.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"widgetSchema\": parse schema: item: parse schema: anyOf: [0]: parse schema: resolve \"#/components/schemas/widgetSchemaTab\": parse enum values: parse value \"\\\"tab\\\"\": unexpected type: \"object\""
}