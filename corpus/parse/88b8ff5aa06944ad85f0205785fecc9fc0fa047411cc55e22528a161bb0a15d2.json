{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "fileaccesspolicy.json",
			"size": 0,
			"path": "openapi3_autogen/fileaccesspolicy.json",
			"byteSize": 11908,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"fileaccesspolicy\": {\n        \"description\": \"A file access policy allows processing units to access various folder and files.\\nIt will use the tags of a file path to know what is the path of the file or\\nfolder to allow access to. You can allow the processing unit to have any\\ncombination of read, write, or execute.\\n\\nWhen a processing unit is a Docker container, then it will police the volumes.\\nMount and execute won't have any effect.\\n\\nFile paths are not supported yet for standard Linux processes.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"activeDuration\": {\n            \"description\": \"Defines for how long the policy will be active according to the\\n`activeSchedule`.\",\n            \"type\": \"string\"\n          },\n          \"activeSchedule\": {\n            \"description\": \"Defines when the policy should be active using the cron notation.\\nThe policy will be active for the given `activeDuration`.\",\n            \"type\": \"string\"\n          },\n          \"allowsExecute\": {\n            \"description\": \"Allows files to be executed.\",\n            \"type\": \"boolean\"\n          },\n          \"allowsRead\": {\n            \"description\": \"Allows files to be read.\",\n            \"type\": \"boolean\"\n          },\n          \"allowsWrite\": {\n            \"description\": \"Allows files to be written.\",\n            \"type\": \"boolean\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Stores additional information about an entity.\",\n            \"type\": \"object\"\n          },\n          \"associatedTags\": {\n            \"description\": \"List of tags attached to an entity.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"createTime\": {\n            \"description\": \"Creation date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Description of the object.\",\n            \"type\": \"string\"\n          },\n          \"disabled\": {\n            \"description\": \"Defines if the property is disabled.\",\n            \"type\": \"boolean\"\n          },\n          \"encryptionEnabled\": {\n            \"description\": \"Set to `true` to enable automatic encryption.\",\n            \"type\": \"boolean\"\n          },\n          \"expirationTime\": {\n            \"description\": \"If set the policy will be automatically deleted after the given time.\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"fallback\": {\n            \"description\": \"Indicates that this is fallback policy. It will only be\\napplied if no other policies have been resolved. If the policy is also\\npropagated it will become a fallback for children namespaces.\",\n            \"type\": \"boolean\"\n          },\n          \"logsEnabled\": {\n            \"description\": \"A value of `true` enables logging.\",\n            \"type\": \"boolean\"\n          },\n          \"metadata\": {\n            \"description\": \"Contains tags that can only be set during creation, must all start\\nwith the '@' prefix, and should only be used by external systems.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"Name of the entity.\",\n            \"example\": \"the name\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"normalizedTags\": {\n            \"description\": \"Contains the list of normalized tags of the entities.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"object\": {\n            \"description\": \"The object of the policy.\",\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"propagate\": {\n            \"description\": \"Propagates the policy to all of its children.\",\n            \"type\": \"boolean\"\n          },\n          \"protected\": {\n            \"description\": \"Defines if the object is protected.\",\n            \"type\": \"boolean\"\n          },\n          \"subject\": {\n            \"description\": \"The subject of the policy.\",\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"updateTime\": {\n            \"description\": \"Last update date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"fileaccesspolicy\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/fileaccesspolicies\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of file access policies.\",\n        \"operationId\": \"get-all-fileaccesspolicies\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/files\",\n          \"squall\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new file access policies.\",\n        \"operationId\": \"create-a-new-fileaccesspolicy\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/files\",\n          \"squall\"\n        ]\n      }\n    },\n    \"/fileaccesspolicies/{id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the policy with the given ID.\",\n        \"operationId\": \"delete-fileaccesspolicy-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/files\",\n          \"squall\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieves the policy with the given ID.\",\n        \"operationId\": \"get-fileaccesspolicy-by-ID\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/files\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"put\": {\n        \"description\": \"Updates the policy with the given ID.\",\n        \"operationId\": \"update-fileaccesspolicy-by-ID\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/fileaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/files\",\n          \"squall\"\n        ]\n      }\n    },\n    \"/fileaccesspolicies/{id}/filepaths\": {\n      \"get\": {\n        \"description\": \"Returns the list of file paths that match the policy.\",\n        \"operationId\": \"get-all-filepaths-for-a-given-fileaccesspolicy\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./filepath#/components/schemas/filepath\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/files\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/fileaccesspolicies/{id}/processingunits\": {\n      \"get\": {\n        \"description\": \"Returns the list of processing units that match the policy.\",\n        \"operationId\": \"get-all-processingunits-for-a-given-fileaccesspolicy\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./processingunit#/components/schemas/processingunit\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"core/processingunit\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'policy/files'\",\n      \"name\": \"policy/files\"\n    },\n    {\n      \"description\": \"This tag is for package 'squall'\",\n      \"name\": \"squall\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/gaia@df2a8b26f99710e7a7ddaf87ca4898570dd669f6/-/blob/openapi3_autogen/fileaccesspolicy.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/gaia/blob/df2a8b26f99710e7a7ddaf87ca4898570dd669f6/openapi3_autogen/fileaccesspolicy.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/fileaccesspolicies/{id}/filepaths\": get: operation \"get-all-filepaths-for-a-given-fileaccesspolicy\": responses: 200: content: application/json: schema: parse schema: parse schema: at 337:29: external \"./filepath\": get: file: local file reference is not allowed"
}