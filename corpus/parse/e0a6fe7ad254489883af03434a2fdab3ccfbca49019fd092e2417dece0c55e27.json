{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/luizalabs/dev.magalu.com-docs"
		},
		"file": {
			"name": "maestro.openapi.yaml",
			"size": 0,
			"path": "api-reference/maestro.openapi.yaml",
			"byteSize": 123181,
			"content": "info:\n    title: Maestro OMS\n    description: \"Venda, pague e acompanhe pedidos feitos nos canais Magalu e Netshoes. \\nDo momento da compra até a entrega final, a API Maestro te fornece toda\\na informação necessária para processar pedidos e despachar produtos para todo o Brasil\\n\"\n    contact:\n        name: Magalu\n        url: github.com/luizalabs\n        email: suporte@dev.magalu.com\n    version: 0.0.1\nservers:\n    - url: https://alpha.api.magalu.com/maestro\n      description: Descrição do server\ncomponents:\n    schemas:\n        AddressResponseDto:\n            properties:\n                city:\n                    description: City of the address\n                    example: Franca\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                complement:\n                    description: Complement of the address\n                    example: Apartamento 56\n                    maxLength: 100\n                    type: string\n                district:\n                    description: District of the address\n                    example: Centro\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                number:\n                    description: Number of the address\n                    example: 156A\n                    maxLength: 6\n                    minLength: 1\n                    type: string\n                reference:\n                    description: Reference of the address\n                    example: 'Perto do bar do zé '\n                    maxLength: 100\n                    type: string\n                state:\n                    description: State of the address\n                    example: SP\n                    maxLength: 2\n                    minLength: 2\n                    type: string\n                street:\n                    description: Street of the address\n                    example: Rua Coronel Antonio\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                zip_code:\n                    description: Zip Code of the address\n                    example: \"123456789\"\n                    maxLength: 9\n                    minLength: 9\n                    type: string\n            required:\n                - city\n                - district\n                - number\n                - state\n                - street\n                - zip_code\n            type: object\n        Bank account:\n            description: The Optional cancellation bank account\n            properties:\n                account:\n                    description: The account number\n                    type: string\n                account_type:\n                    description: The account type\n                    enum:\n                        - checking_account\n                        - saving_account\n                    type: string\n                agency:\n                    description: The agency number\n                    type: string\n                bankCode:\n                    description: The bank code\n                    type: string\n                customer_name:\n                    description: Customer Name\n                    type: string\n                digit:\n                    description: The account digit\n                    type: string\n                document_id:\n                    description: CNPJ number\n                    type: string\n            required:\n                - account\n                - account_type\n                - agency\n                - bankCode\n                - customer_name\n                - digit\n            type: object\n        BenefitResponseDto:\n            description: Products benefits only visible for customers\n            properties:\n                amount:\n                    description: Total value of the benefits\n                    example: \"33.0\"\n                    minLength: 1\n                    type: string\n                description:\n                    description: Description of the benefits\n                    example: R$33,00\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n                type:\n                    description: Type of the benefits\n                    example: cashback\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n            required:\n                - amount\n                - description\n                - type\n            type: object\n        BundleResponseDto:\n            description: Products bundles only visible for customers\n            properties:\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                product:\n                    $ref: '#/components/schemas/ProductResponseDto'\n                quantity:\n                    description: Quantity of an bundle item in the package\n                    example: 2\n                    format: int32\n                    minimum: 1\n                    type: integer\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of an bundle item in the package\n                    example: 8caa3d05-d801-4021-a1d9-b94d5306b091\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - product\n                - quantity\n                - updated_at\n                - uuid\n            type: object\n        Customer:\n            description: The customer information\n            properties:\n                email:\n                    description: The customer email\n                    type: string\n                name:\n                    description: The customer name\n                    type: string\n                uuid:\n                    description: The customer UUID\n                    format: uuid\n                    type: string\n            type: object\n        CustomerResponseDto:\n            properties:\n                name:\n                    description: Name of the customer\n                    example: Joe User\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                uuid:\n                    description: Identifier of the customer\n                    example: 5b02cdaf-9a93-4cfe-959a-ec989bd414e5\n                    format: uuid\n                    type: string\n            required:\n                - name\n                - uuid\n            type: object\n        DeadlineDatesResponseDto:\n            properties:\n                max:\n                    description: Maximum expected date for delivery, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-27T15:36:19Z\n                    format: date-time\n                    type: string\n                min:\n                    description: Minimum expected date for delivery, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n            type: object\n        DeadlineResponseDto:\n            properties:\n                dates:\n                    $ref: '#/components/schemas/DeadlineDatesResponseDto'\n                period:\n                    description: Deadline period\n                    example: morning\n                    maxLength: 10\n                    type: string\n                precision:\n                    description: Deadline precision\n                    enum:\n                        - hours\n                        - days\n                        - minutes\n                    example: hours\n                    maxLength: 10\n                    type: string\n                values:\n                    $ref: '#/components/schemas/DeadlineValuesResponseDto'\n            required:\n                - values\n            type: object\n        DeadlineValuesResponseDto:\n            properties:\n                max:\n                    description: Maximum expected value for delivery\n                    example: 2\n                    format: int32\n                    minimum: 0\n                    type: integer\n                min:\n                    description: Minimum expected value for delivery\n                    example: 1\n                    format: int32\n                    minimum: 0\n                    type: integer\n            required:\n                - max\n                - min\n            type: object\n        ErrorDetailDto:\n            properties:\n                description:\n                    type: string\n                field:\n                    type: string\n                issue:\n                    type: string\n                location:\n                    type: string\n                value:\n                    type: string\n            type: object\n        ErrorDto:\n            properties:\n                details:\n                    items:\n                        $ref: '#/components/schemas/ErrorDetailDto'\n                    type: array\n                errorCode:\n                    type: string\n                links:\n                    items:\n                        $ref: '#/components/schemas/ErrorLinkDto'\n                    type: array\n                message:\n                    type: string\n            type: object\n        ErrorLinkDto:\n            properties:\n                href:\n                    type: string\n            type: object\n        ErrorResponseDetailsJson:\n            properties:\n                description:\n                    type: string\n                field:\n                    type: string\n                issue:\n                    type: string\n                location:\n                    type: string\n                value:\n                    type: string\n            type: object\n        ErrorResponseJson:\n            properties:\n                details:\n                    items:\n                        $ref: '#/components/schemas/ErrorResponseDetailsJson'\n                    type: array\n                error_code:\n                    type: string\n                links:\n                    items:\n                        $ref: '#/components/schemas/ErrorResponseLinksJson'\n                    type: array\n                    uniqueItems: true\n                message:\n                    type: string\n            type: object\n        ErrorResponseLinksJson:\n            properties:\n                href:\n                    type: string\n            type: object\n        EventRequestDto:\n            properties:\n                date:\n                    description: Datetime when the event actually happened, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                status:\n                    $ref: '#/components/schemas/EventStatusRequestDto'\n            required:\n                - date\n                - status\n            type: object\n        EventResponseDto:\n            properties:\n                created_at:\n                    description: Datetime the Order Manager received the event, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                current:\n                    description: Current event\n                    example: true\n                    type: boolean\n                date:\n                    description: Datetime when the event actually happened, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                status:\n                    $ref: '#/components/schemas/EventStatusResponseDto'\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of the event\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - current\n                - date\n                - updated_at\n                - uuid\n            type: object\n        EventStatusRequestDto:\n            properties:\n                id:\n                    description: Event status Identifier\n                    example: 7\n                    format: int32\n                    minimum: 1\n                    type: integer\n            required:\n                - id\n            type: object\n        EventStatusResponseDto:\n            properties:\n                customer:\n                    $ref: '#/components/schemas/StatusCustomerResponseDto'\n                description:\n                    description: Description status event\n                    example: Pedido Recebido\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                finisher:\n                    description: Finisher status event\n                    example: false\n                    type: boolean\n                id:\n                    description: Identifier status event\n                    example: 1\n                    format: int32\n                    minimum: 1\n                    type: integer\n            required:\n                - description\n                - finisher\n                - id\n            type: object\n        GiftResponseDto:\n            description: Products gifts only visible for customers\n            properties:\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                product:\n                    $ref: '#/components/schemas/ProductGiftResponseDto'\n                quantity:\n                    description: Quantity of an gift item in the package\n                    example: 2\n                    format: int32\n                    minimum: 1\n                    type: integer\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of an gift item in the package\n                    example: 8caa3d05-d801-4021-a1d9-b94d5306b091\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - product\n                - quantity\n                - updated_at\n                - uuid\n            type: object\n        IdentificationResponseDto:\n            properties:\n                document:\n                    description: Document the person who will pick up at the store\n                    example: \"12345678910\"\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n            required:\n                - document\n            type: object\n        InvoiceEmitterResponseDto:\n            properties:\n                cnpj:\n                    description: Cnpj emitter of the invoice\n                    example: \"12345678910123\"\n                    maxLength: 14\n                    minLength: 14\n                    type: string\n            required:\n                - cnpj\n            type: object\n        InvoiceResponseDto:\n            properties:\n                amount:\n                    description: Total value of the invoice\n                    example: \"95.0\"\n                    minLength: 1\n                    type: string\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                emitter:\n                    $ref: '#/components/schemas/InvoiceEmitterResponseDto'\n                issue_date:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                key:\n                    description: Key of the invoice\n                    example: \"35100448900950089785550240008887791046448054\"\n                    maxLength: 200\n                    minLength: 1\n                    type: string\n                number:\n                    description: Number of the invoice\n                    example: 123445\n                    format: int64\n                    minimum: 1\n                    type: integer\n                serie:\n                    description: Total value of the invoice\n                    example: \"1\"\n                    maxLength: 10\n                    minLength: 1\n                    type: string\n                status:\n                    $ref: '#/components/schemas/InvoiceStatusResponseDto'\n                type:\n                    $ref: '#/components/schemas/InvoiceTypeResponseDto'\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of the invoice\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - issue_date\n                - key\n                - number\n                - serie\n                - type\n                - updated_at\n                - uuid\n            type: object\n        InvoiceStatusResponseDto:\n            properties:\n                description:\n                    description: Description of the status invoice\n                    example: Nota fiscal autorizada online\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                id:\n                    description: Identifier of the status invoice\n                    example: 3\n                    format: int32\n                    minimum: 1\n                    type: integer\n            required:\n                - description\n                - id\n            type: object\n        InvoiceTypeResponseDto:\n            properties:\n                description:\n                    description: Description of the type invoice\n                    example: VENDA MERCADORIA  ADQUIR/RECEB TERCEIROS\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                id:\n                    description: Identifier of the type invoice\n                    example: 51\n                    format: int32\n                    minimum: 1\n                    type: integer\n            required:\n                - description\n                - id\n            type: object\n        Item:\n            description: The list of package items\n            properties:\n                product:\n                    $ref: '#/components/schemas/Product'\n                quantity:\n                    description: The item quantity\n                    format: int32\n                    type: integer\n                uuid:\n                    description: The item UUID\n                    format: uuid\n                    type: string\n            type: object\n        ItemRequest:\n            properties:\n                quantity:\n                    description: The item quantity\n                    format: int32\n                    type: integer\n                uuid:\n                    description: The item identification\n                    format: uuid\n                    type: string\n            required:\n                - quantity\n                - uuid\n            type: object\n        ItemResponseDto:\n            properties:\n                benefits:\n                    description: Products benefits only visible for customers\n                    items:\n                        $ref: '#/components/schemas/BenefitResponseDto'\n                    type: array\n                bundles:\n                    description: Products bundles only visible for customers\n                    items:\n                        $ref: '#/components/schemas/BundleResponseDto'\n                    type: array\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                gifts:\n                    description: Products gifts only visible for customers\n                    items:\n                        $ref: '#/components/schemas/GiftResponseDto'\n                    type: array\n                product:\n                    $ref: '#/components/schemas/ProductResponseDto'\n                quantity:\n                    description: Quantity of an item in the package\n                    example: 2\n                    format: int32\n                    minimum: 1\n                    type: integer\n                services:\n                    description: Products services only visible for customers\n                    items:\n                        $ref: '#/components/schemas/ServiceResponseDto'\n                    type: array\n                total:\n                    description: Total value of the package item with Freight ((Product + Interest + Freight - Discount) * Quantity)\n                    example: \"64.0\"\n                    minLength: 1\n                    type: string\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of an item in the package\n                    example: 8caa3d05-d801-4021-a1d9-b94d5306b091\n                    format: uuid\n                    type: string\n                value:\n                    description: Total value of the package item without Freight ((Product + Interest - Discount) * Quantity)\n                    example: \"34.0\"\n                    minLength: 1\n                    type: string\n            required:\n                - created_at\n                - product\n                - quantity\n                - total\n                - updated_at\n                - uuid\n                - value\n            type: object\n        LocalizationResponseDto:\n            properties:\n                latitude:\n                    description: Latitude of the Store\n                    example: -20.584946\n                    format: float\n                    type: number\n                longitude:\n                    description: Longitude of the Store\n                    example: -46.919163\n                    format: float\n                    type: number\n            required:\n                - latitude\n                - longitude\n            type: object\n        MessageRequest:\n            properties:\n                message:\n                    description: Message content\n                    maxLength: 255\n                    type: string\n                private:\n                    description: Field for exchanging exclusive messages between MAGALU and SELLER. Customers cannot send or view private messages.\n                    type: boolean\n            required:\n                - message\n                - private\n            type: object\n        MessageResponse:\n            properties:\n                created_at:\n                    description: The message creation date\n                    format: date-time\n                    type: string\n                created_by:\n                    description: The user who sent the message\n                    type: string\n                message:\n                    description: Message content\n                    type: string\n                private:\n                    description: Field for exchanging exclusive messages between MAGALU and SELLER. Customers cannot send or view private messages.\n                    type: boolean\n                role:\n                    description: The user type who sent the message\n                    type: string\n            type: object\n        MethodResponseDto:\n            properties:\n                code:\n                    description: Code of payment method\n                    enum:\n                        - account_balance\n                        - amex\n                        - aura\n                        - banesecard\n                        - bank_slip\n                        - banrisul_debit\n                        - bonus\n                        - carnet\n                        - carrefourcard\n                        - carta_credito\n                        - cash\n                        - check\n                        - conta_digital_magalu\n                        - credishop\n                        - diners\n                        - dinners\n                        - elo\n                        - hipercard\n                        - luizacard\n                        - luizacard_gold\n                        - magalu_card\n                        - marisa\n                        - mastercard\n                        - minha_casa_melhor_debit\n                        - on_time\n                        - paypal\n                        - pix\n                        - redeshop_debit\n                        - sodexo_debit\n                        - sorocred\n                        - vale_compra\n                        - virtual_debit_elo\n                        - visa\n                        - visa_debit\n                    example: magalu_card\n                    maxLength: 32\n                    type: string\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                description:\n                    description: Description of payment method\n                    example: Magalu Card\n                    maxLength: 32\n                    type: string\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of payment method\n                    example: c5cf487d-aaa0-4b41-86aa-376bb2108832\n                    format: uuid\n                    type: string\n            required:\n                - code\n                - created_at\n                - description\n                - updated_at\n                - uuid\n            type: object\n        OpeningHourResponseDto:\n            properties:\n                closing:\n                    description: We expect partial-time in ISO 8601 format of hh:mm:ss\n                    example: \"18:30:00\"\n                    format: partial-time\n                    type: string\n                opening:\n                    description: We expect partial-time in ISO 8601 format of hh:mm:ss\n                    example: \"09:00:00\"\n                    format: partial-time\n                    type: string\n                weekday:\n                    description: Weekday opening hour store\n                    enum:\n                        - MONDAY\n                        - TUESDAY\n                        - WEDNESDAY\n                        - THURSDAY\n                        - FRIDAY\n                        - SATURDAY\n                        - SUNDAY\n                    example: MONDAY\n                    type: string\n            required:\n                - closing\n                - opening\n                - weekday\n            type: object\n        Order:\n            description: The order information\n            properties:\n                number:\n                    description: The order number\n                    type: string\n                packages:\n                    description: The list of order packages\n                    items:\n                        $ref: '#/components/schemas/Package'\n                    type: array\n                uuid:\n                    description: The order UUID\n                    format: uuid\n                    type: string\n            type: object\n        OrderPackageResponseDto:\n            properties:\n                amount:\n                    description: Total package value, ((product + freight + interest - discount) * quantity) of all items\n                    example: \"75.9\"\n                    minLength: 1\n                    type: string\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                items:\n                    items:\n                        $ref: '#/components/schemas/ItemResponseDto'\n                    type: array\n                seller:\n                    $ref: '#/components/schemas/SellerResponseDto'\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of the package\n                    example: a6dce737-fe37-4444-8c51-a021d10051b7\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - seller\n                - updated_at\n                - uuid\n            type: object\n        OrderResponseDto:\n            properties:\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                customer:\n                    $ref: '#/components/schemas/CustomerResponseDto'\n                number:\n                    description: Order number at checkout\n                    example: \"8954650874610585\"\n                    maxLength: 255\n                    minLength: 3\n                    type: string\n                packages:\n                    items:\n                        $ref: '#/components/schemas/OrderPackageResponseDto'\n                    type: array\n                payment:\n                    $ref: '#/components/schemas/PaymentResponseDto'\n                sales_channel:\n                    $ref: '#/components/schemas/SalesChannelResponseDto'\n                uuid:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - customer\n                - number\n                - packages\n                - sales_channel\n                - uuid\n            type: object\n        OrganizationResponseDto:\n            properties:\n                code:\n                    description: Code of the organization\n                    example: magazine_luiza\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                description:\n                    description: Description of the organization\n                    example: Magazine Luiza\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                uuid:\n                    description: Identifier of the organization\n                    example: 4da25f48-4193-45de-b4ed-9b8c93b7f987\n                    format: uuid\n                    type: string\n            required:\n                - code\n                - description\n                - uuid\n            type: object\n        Package:\n            description: The list of order packages\n            properties:\n                items:\n                    description: The list of package items\n                    items:\n                        $ref: '#/components/schemas/Item'\n                    type: array\n                seller:\n                    $ref: '#/components/schemas/Seller'\n                uuid:\n                    description: The package UUID\n                    format: uuid\n                    type: string\n            type: object\n        PaymentResponseDto:\n            properties:\n                currency:\n                    description: Type of payment currency\n                    example: BRL\n                    maxLength: 3\n                    minLength: 3\n                    type: string\n                methods:\n                    items:\n                        $ref: '#/components/schemas/MethodResponseDto'\n                    type: array\n                status:\n                    $ref: '#/components/schemas/PaymentStatusResponseDto'\n                uuid:\n                    description: Identifier of the payment\n                    example: 1809e932-1734-4a67-b938-8dc2acf650a7\n                    format: uuid\n                    type: string\n            required:\n                - currency\n                - methods\n                - status\n                - uuid\n            type: object\n        PaymentStatusResponseDto:\n            properties:\n                code:\n                    description: Code of the payment status\n                    enum:\n                        - authorized\n                        - canceled\n                        - canceled_by_divergent_data\n                        - divergent_data\n                        - in_risk_analysis\n                        - in_risk_reanalysis\n                        - not_paid\n                        - paid\n                        - partially_authorized\n                        - partially_paid\n                        - processing\n                        - refunded\n                        - refused\n                        - refused_by_fraud\n                        - waiting_payment\n                    example: paid\n                    maxLength: 36\n                    minLength: 1\n                    type: string\n            required:\n                - code\n            type: object\n        PhoneResponseDto:\n            properties:\n                area_Code:\n                    description: Area Code of the phone\n                    example: 99\n                    format: int32\n                    minimum: 1\n                    type: integer\n                number:\n                    description: Number of the phone\n                    example: 999999999\n                    format: int32\n                    minimum: 1\n                    type: integer\n                type:\n                    description: Type of the phone\n                    enum:\n                        - home\n                        - mobile\n                        - business\n                    example: moblie\n                    maxLength: 20\n                    minLength: 1\n                    type: string\n            required:\n                - area_Code\n                - number\n                - type\n            type: object\n        PickupRecipientResponseDto:\n            properties:\n                identification:\n                    $ref: '#/components/schemas/IdentificationResponseDto'\n                name:\n                    description: Name of the person who will pick up at the store\n                    example: Joe User\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n            required:\n                - identification\n                - name\n            type: object\n        PickupResponseDto:\n            description: Pickup only visible for customers\n            properties:\n                recipient:\n                    $ref: '#/components/schemas/PickupRecipientResponseDto'\n                store:\n                    $ref: '#/components/schemas/StoreResponseDto'\n                uuid:\n                    description: Identifier of the Pickup\n                    example: bc64e6e0-dc82-48c0-b7fb-466bfc820d32\n                    format: uuid\n                    type: string\n            required:\n                - recipient\n                - store\n                - uuid\n            type: object\n        Product:\n            description: The item product\n            properties:\n                code:\n                    description: The product code\n                    type: string\n                description:\n                    description: The product description\n                    type: string\n                reference:\n                    description: The product reference\n                    type: string\n                seller:\n                    $ref: '#/components/schemas/ProductSeller'\n            type: object\n        ProductCategoryResponseDto:\n            properties:\n                id:\n                    description: Category of the product\n                    example: EP\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n                sub_category:\n                    $ref: '#/components/schemas/ProductSubCategoryResponseDto'\n            required:\n                - id\n            type: object\n        ProductFreightCostResponseDto:\n            properties:\n                customer:\n                    description: Unit freight of the Product paid for by the Customer\n                    example: \"15.0\"\n                    minLength: 1\n                    type: string\n            required:\n                - customer\n            type: object\n        ProductFreightResponseDto:\n            properties:\n                cost:\n                    $ref: '#/components/schemas/ProductFreightCostResponseDto'\n            required:\n                - cost\n            type: object\n        ProductGiftResponseDto:\n            properties:\n                brand:\n                    description: Brand of the product\n                    example: Britânia\n                    maxLength: 50\n                    minLength: 1\n                    type: string\n                code:\n                    description: Code of the product magalu\n                    example: \"204434800\"\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                description:\n                    description: Description of the product\n                    example: Cafeteira Elétrica Britânia CP30 Preta\n                    maxLength: 255\n                    minLength: 1\n                    type: string\n                reference:\n                    description: Reference of the product\n                    example: 30 Xícaras\n                    maxLength: 128\n                    minLength: 1\n                    type: string\n            required:\n                - code\n            type: object\n        ProductResponseDto:\n            properties:\n                brand:\n                    description: Brand of the product\n                    example: Britânia\n                    maxLength: 50\n                    minLength: 1\n                    type: string\n                category:\n                    $ref: '#/components/schemas/ProductCategoryResponseDto'\n                code:\n                    description: Code of the product magalu\n                    example: \"204434800\"\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                description:\n                    description: Description of the product\n                    example: Cafeteira Elétrica Britânia CP30 Preta\n                    maxLength: 255\n                    minLength: 1\n                    type: string\n                discount:\n                    description: Product unit discount\n                    example: \"10.0\"\n                    minLength: 1\n                    type: string\n                freight:\n                    $ref: '#/components/schemas/ProductFreightResponseDto'\n                image_url:\n                    description: Image Url of the product\n                    example: https://a-static.mlcdn.com.br/{w}x{h}/cafeteira-eletrica-britania-cp30-preta-30-xicaras/magazineluiza/204434800/0e39912e6dce7e3935561f857edf14c4.jpg\n                    maxLength: 512\n                    minLength: 1\n                    type: string\n                interest:\n                    description: Product unit interest\n                    example: \"2.0\"\n                    minLength: 1\n                    type: string\n                price:\n                    description: Product unit price\n                    example: \"25.0\"\n                    minLength: 1\n                    type: string\n                reference:\n                    description: Reference of the product\n                    example: 30 Xícaras\n                    maxLength: 128\n                    minLength: 1\n                    type: string\n                seller:\n                    $ref: '#/components/schemas/ProductSellerResponseDto'\n                total:\n                    description: Total unit product value with freight (Product + Interest + Freight - Discount)\n                    example: \"32.0\"\n                    minLength: 1\n                    type: string\n                value:\n                    description: Total unit product value without freight (Product + Interest - Discount)\n                    example: \"17.0\"\n                    minLength: 1\n                    type: string\n            required:\n                - code\n                - discount\n                - freight\n                - interest\n                - price\n                - total\n                - value\n            type: object\n        ProductSeller:\n            description: The product seller\n            properties:\n                sku:\n                    description: The seller sku\n                    type: string\n            type: object\n        ProductSellerResponseDto:\n            properties:\n                sku:\n                    description: Code of the product seller\n                    example: sdk1234\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n            required:\n                - sku\n            type: object\n        ProductServiceResponseDto:\n            properties:\n                code:\n                    description: Code of the product magalu\n                    example: \"204434800\"\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                description:\n                    description: Description of the product\n                    example: Cafeteira Elétrica Britânia CP30 Preta\n                    maxLength: 255\n                    minLength: 1\n                    type: string\n                price:\n                    description: Product unit price\n                    example: \"25.0\"\n                    minLength: 1\n                    type: string\n            required:\n                - code\n                - price\n            type: object\n        ProductSubCategoryResponseDto:\n            properties:\n                id:\n                    description: Sub Category of the product\n                    example: CEAC\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n            required:\n                - id\n            type: object\n        Rating:\n            properties:\n                comment:\n                    description: any additional comments\n                    type: string\n                csat:\n                    description: customer satisfaction rating from 1 (very unsatisfied) to 5 (very satisfied)\n                    format: int32\n                    maximum: 5\n                    minimum: 1\n                    type: integer\n            required:\n                - comment\n                - csat\n            type: object\n        RecipientResponseDto:\n            properties:\n                address:\n                    $ref: '#/components/schemas/AddressResponseDto'\n                cnpj:\n                    description: Cnpj of the customer recipient\n                    example: \"12345678910124\"\n                    maxLength: 14\n                    type: string\n                cpf:\n                    description: Cpf of the customer recipient\n                    example: \"12345678910\"\n                    maxLength: 11\n                    type: string\n                name:\n                    description: Name of the customer recipient\n                    example: Joe User\n                    maxLength: 100\n                    type: string\n                uuid:\n                    description: Identifier of the customer recipient\n                    example: de0c19f6-c1c5-4f4c-85a4-c97dd43d341c\n                    format: uuid\n                    type: string\n            required:\n                - address\n                - name\n                - uuid\n            type: object\n        SalesChannelResponseDto:\n            properties:\n                code:\n                    description: Identifier of the sale channel\n                    example: 53\n                    format: int32\n                    minimum: 1\n                    type: integer\n                description:\n                    description: Description of the sale channel\n                    example: ML-APP Android\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                organization:\n                    $ref: '#/components/schemas/OrganizationResponseDto'\n            required:\n                - code\n                - description\n                - organization\n            type: object\n        Seller:\n            description: The package seller\n            properties:\n                code:\n                    description: The seller code\n                    type: string\n                description:\n                    description: The seller description\n                    type: string\n            type: object\n        SellerResponseDto:\n            properties:\n                code:\n                    description: Code of the seller\n                    example: seller-abcd\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                description:\n                    description: Description of the seller\n                    example: Seller ABCD\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n            required:\n                - code\n                - description\n            type: object\n        ServiceResponseDto:\n            description: Products services only visible for customers\n            properties:\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                product:\n                    $ref: '#/components/schemas/ProductServiceResponseDto'\n                quantity:\n                    description: Quantity of an service item in the package\n                    example: 2\n                    format: int32\n                    minimum: 1\n                    type: integer\n                slug:\n                    description: 'Name short service '\n                    example: GE\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n                total:\n                    description: Total value of the service (Product Price * Quantity)\n                    example: \"100.0\"\n                    minLength: 1\n                    type: string\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of a service item in the package\n                    example: 8caa3d05-d801-4021-a1d9-b94d5306b091\n                    format: uuid\n                    type: string\n                validity:\n                    $ref: '#/components/schemas/ValidityResponseDto'\n            required:\n                - created_at\n                - product\n                - quantity\n                - slug\n                - total\n                - updated_at\n                - uuid\n                - validity\n            type: object\n        ShipmentModalityResponseDto:\n            properties:\n                description:\n                    description: Description of the delivery Modality\n                    example: Convencional\n                    maxLength: 32\n                    type: string\n                type:\n                    description: Type of the delivery Modality\n                    enum:\n                        - conventional\n                        - store_pickup\n                        - scheduled\n                    example: conventional\n                    maxLength: 32\n                    type: string\n            required:\n                - description\n                - type\n            type: object\n        ShipmentRequestDto:\n            properties:\n                tracking:\n                    $ref: '#/components/schemas/TrackingRequestDto'\n            required:\n                - tracking\n            type: object\n        ShipmentResponseDto:\n            properties:\n                cost:\n                    description: Freight cost paid by the customer for a Package\n                    example: \"30.0\"\n                    minLength: 1\n                    type: string\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                deadline:\n                    $ref: '#/components/schemas/DeadlineResponseDto'\n                modality:\n                    $ref: '#/components/schemas/ShipmentModalityResponseDto'\n                pickup:\n                    $ref: '#/components/schemas/PickupResponseDto'\n                recipient:\n                    $ref: '#/components/schemas/RecipientResponseDto'\n                service:\n                    $ref: '#/components/schemas/ShipmentServiceResponseDto'\n                tracking:\n                    $ref: '#/components/schemas/TrackingResponseDto'\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                uuid:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n            required:\n                - cost\n                - created_at\n                - deadline\n                - modality\n                - recipient\n                - updated_at\n                - uuid\n            type: object\n        ShipmentServiceResponseDto:\n            properties:\n                id:\n                    description: Identifier of the delivery Service\n                    example: 1\n                    format: int32\n                    minimum: 1\n                    type: integer\n                name:\n                    description: Description of the delivery Service\n                    example: courrier\n                    maxLength: 36\n                    minLength: 1\n                    type: string\n            required:\n                - id\n                - name\n            type: object\n        StatusCustomerResponseDto:\n            description: Status Customer Only visible for sellers\n            properties:\n                description:\n                    description: Recebemos seu Pedido\n                    example: \"true\"\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                visible:\n                    description: Visible status for customer\n                    example: true\n                    type: boolean\n            required:\n                - description\n                - visible\n            type: object\n        StoreResponseDto:\n            properties:\n                address:\n                    $ref: '#/components/schemas/AddressResponseDto'\n                code:\n                    description: Code of the Store\n                    example: \"1\"\n                    type: string\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n                localization:\n                    $ref: '#/components/schemas/LocalizationResponseDto'\n                opening_hours:\n                    items:\n                        $ref: '#/components/schemas/OpeningHourResponseDto'\n                    type: array\n                phones:\n                    items:\n                        $ref: '#/components/schemas/PhoneResponseDto'\n                    type: array\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-05-26T15:36:19Z\n                    format: date-time\n                    type: string\n            required:\n                - code\n                - created_at\n                - updated_at\n            type: object\n        TechnicalDetailsResponseDto:\n            properties:\n                height_unit:\n                    maxLength: 4\n                    minLength: 1\n                    type: string\n                height_value:\n                    exclusiveMinimum: true\n                    minLength: 1\n                    type: string\n                length_unit:\n                    maxLength: 4\n                    minLength: 1\n                    type: string\n                length_value:\n                    exclusiveMinimum: true\n                    minLength: 1\n                    type: string\n                weight_unit:\n                    maxLength: 4\n                    minLength: 1\n                    type: string\n                weight_value:\n                    exclusiveMinimum: true\n                    minLength: 1\n                    type: string\n                width_unit:\n                    maxLength: 4\n                    minLength: 1\n                    type: string\n                width_value:\n                    exclusiveMinimum: true\n                    minLength: 1\n                    type: string\n            required:\n                - height_unit\n                - height_value\n                - length_unit\n                - length_value\n                - weight_unit\n                - weight_value\n                - width_unit\n                - width_value\n            type: object\n        Ticket:\n            properties:\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    format: date-time\n                    type: string\n                created_by:\n                    description: The user who created the ticket\n                    type: string\n                customer:\n                    $ref: '#/components/schemas/Customer'\n                due_date:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    format: date-time\n                    type: string\n                order:\n                    $ref: '#/components/schemas/Order'\n                origin:\n                    description: The ticket origin\n                    type: string\n                protocol:\n                    description: The protocol number\n                    format: int64\n                    type: integer\n                status:\n                    $ref: '#/components/schemas/TicketStatus'\n                type:\n                    $ref: '#/components/schemas/TicketType'\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    format: date-time\n                    type: string\n                uuid:\n                    description: The ticket UUID\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - due_date\n                - updated_at\n            type: object\n        TicketRequest:\n            properties:\n                bank_account:\n                    $ref: '#/components/schemas/Bank account'\n                cancellation_reason:\n                    description: The reason to cancellation ticket\n                    enum:\n                        - nao-preciso\n                        - preco-melhor\n                        - nao-recebi\n                        - produto-avariado\n                        - produto-diferente\n                        - faltam-pecas\n                        - comprei-errado\n                    maxLength: 30\n                    type: string\n                items:\n                    items:\n                        $ref: '#/components/schemas/ItemRequest'\n                    type: array\n                message:\n                    description: The message is required for customers\n                    maxLength: 255\n                    type: string\n                order_uuid:\n                    description: The order identification\n                    format: uuid\n                    type: string\n                package_uuid:\n                    description: The order package identification\n                    format: uuid\n                    type: string\n                type_code:\n                    description: The ticket type code\n                    enum:\n                        - mktplace-duvidas-gerais\n                        - mktplace-reclamacao\n                        - mktplace-pagamento\n                        - mktplace-produto\n                        - mktplace-entrega\n                        - mktplace-cancelamento-de-pedido\n                    type: string\n            required:\n                - items\n                - order_uuid\n                - package_uuid\n                - type_code\n            type: object\n        TicketStatus:\n            description: The ticket public status\n            properties:\n                code:\n                    description: The status code\n                    type: string\n                description:\n                    description: The status description\n                    type: string\n            required:\n                - description\n            type: object\n        TicketType:\n            description: The ticket type\n            properties:\n                code:\n                    description: The ticket type code\n                    type: string\n                description:\n                    description: The ticket type description\n                    type: string\n            required:\n                - code\n                - description\n            type: object\n        TrackingRequestDto:\n            properties:\n                code:\n                    description: Code of the tracking\n                    example: OI273447BR\n                    maxLength: 50\n                    minLength: 1\n                    type: string\n                url:\n                    description: Url of the tracking\n                    example: http://sro.luizalabs.com/tracking?id=OI273447BR\n                    maxLength: 255\n                    minLength: 0\n                    type: string\n            type: object\n        TrackingResponseDto:\n            properties:\n                code:\n                    description: Code of the tracking\n                    example: OI273447BR\n                    maxLength: 50\n                    type: string\n                url:\n                    description: Url of the tracking\n                    example: http://sro.luizalabs.com/tracking?id=OI273447BR\n                    maxLength: 255\n                    type: string\n            type: object\n        ValidityResponseDto:\n            properties:\n                type:\n                    description: Type of the Validity\n                    example: month\n                    maxLength: 32\n                    minLength: 1\n                    type: string\n                value:\n                    description: Value of the Validity\n                    example: 12\n                    format: int32\n                    maximum: 999\n                    minimum: 1\n                    type: integer\n            required:\n                - type\n                - value\n            type: object\n        VolumeResponseDto:\n            properties:\n                created_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    format: date-time\n                    type: string\n                current:\n                    format: int32\n                    maxLength: 2\n                    minLength: 1\n                    type: integer\n                tag:\n                    maxLength: 100\n                    minLength: 1\n                    type: string\n                technical_details:\n                    $ref: '#/components/schemas/TechnicalDetailsResponseDto'\n                total_volumes:\n                    format: int32\n                    maxLength: 2\n                    minLength: 1\n                    type: integer\n                updated_at:\n                    description: We expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    format: date-time\n                    type: string\n                url:\n                    maxLength: 255\n                    type: string\n                uuid:\n                    description: Identifier of a volume in the shipping\n                    example: 8caa3d05-d801-4021-a1d9-b94d5306b091\n                    format: uuid\n                    type: string\n            required:\n                - created_at\n                - current\n                - tag\n                - technical_details\n                - total_volumes\n                - updated_at\n            type: object\npaths:\n    /v1/orders:\n        get:\n            operationId: getOrders\n            parameters:\n                - in: query\n                  name: number\n                  schema:\n                    description: order number at checkout\n                    example: \"8954650874610585\"\n                    maxLength: 255\n                    minLength: 3\n                    type: string\n                - in: query\n                  name: _limit\n                  schema:\n                    default: 10\n                    description: Limit of records that will be returned\n                    example: 1\n                    exclusiveMaximum: true\n                    exclusiveMinimum: true\n                    format: int32\n                    maximum: 50\n                    minimum: 1\n                    type: integer\n                - in: query\n                  name: _offset\n                  schema:\n                    default: 0\n                    description: Starting this page will be returned records\n                    example: 0\n                    format: int32\n                    type: integer\n                - in: query\n                  name: _sort\n                  schema:\n                    default: -created_at\n                    description: Ordering of records\n                    enum:\n                        - -created_at\n                        - +created_at\n                    example: -created_at\n                    type: string\n                - in: query\n                  name: created_at\n                  schema:\n                    description: Datetime when the order was created, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC. If not informed, it will default to today minus three months\n                    example: 2021-01-01T15:36:19Z\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_gt\n                  schema:\n                    description: Datetime greater than the order creation, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-01-01T15:36:19Z\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_gte\n                  schema:\n                    description: Datetime greater than or equals the order creation, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-01-01T15:36:19Z\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_lt\n                  schema:\n                    description: Datetime lesser than the order creation, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-03-01T09:22:12Z\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_lte\n                  schema:\n                    description: Datetime lesser than or equals the order creation, we expect date in ISO 8601 format of YYYY-MM-DDThh:mm:ss.SSSZ in UTC\n                    example: 2021-03-01T09:22:12Z\n                    format: date-time\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/OrderResponseDto'\n                                type: array\n                    description: Orders list\n                    headers:\n                        _content-range:\n                            description: Total elements in array\n                            required: true\n                            style: simple\n                        _limit:\n                            description: Query parameter sent on request\n                            style: simple\n                        _offset:\n                            description: Query parameter sent on request\n                            style: simple\n                        _sort:\n                            description: Query parameter sent on request\n                            style: simple\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Records not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get order by number, created_at or paged orders\n    /v1/orders/{order_uuid}:\n        get:\n            operationId: getOrderByUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OrderResponseDto'\n                    description: Order entity\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get order by uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}:\n        get:\n            operationId: getOrderPackageByOrderUuidAndPackageUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n                - in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the package\n                    example: 722254a4-ed0e-4e1d-9aa2-92c1bb57ff9d\n                    format: uuid\n                    type: string\n            responses:\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n                default:\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/OrderResponseDto'\n                                type: array\n                    description: The package\n            summary: Get package by order_uuid and package_uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}/events:\n        get:\n            operationId: getEventsByPackageUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n                - in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the package\n                    example: a6dce737-fe37-4444-8c51-a021d10051b7\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/EventResponseDto'\n                                type: array\n                    description: Events list\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get events by param order_uuid and package_uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}/invoices:\n        get:\n            operationId: getInvoicesByOrderAndPackageUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n                - in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the package\n                    example: a6dce737-fe37-4444-8c51-a021d10051b7\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/InvoiceResponseDto'\n                                type: array\n                    description: Invoices list\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get invoices by param order_uuid and package_uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}/items:\n        get:\n            operationId: getOrderByOrderIdPackageUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n                - in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the package\n                    example: a6dce737-fe37-4444-8c51-a021d10051b7\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ItemResponseDto'\n                                type: array\n                    description: Items list\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get package items by param order_uuid and package_uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}/shipment:\n        get:\n            operationId: getShipmentByPackageUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n                - in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the package\n                    example: a6dce737-fe37-4444-8c51-a021d10051b7\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ShipmentResponseDto'\n                    description: Shipment entity\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get shipment by param order_uuid and package_uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}/shipment/{shipment_uuid}/volumes:\n        get:\n            operationId: getVolumes\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n                - in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n                - in: path\n                  name: shipment_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/VolumeResponseDto'\n                                type: array\n                    description: Volumes list\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get volumes by param order_uuid, package_uuid and shipment_uuid\n    /v1/orders/{order_uuid}/packages/{package_uuid}/tickets:\n        get:\n            operationId: findTickets\n            parameters:\n                - description: Order uuid\n                  in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    type: string\n                - description: Package uuid\n                  in: path\n                  name: package_uuid\n                  required: true\n                  schema:\n                    type: string\n                - in: query\n                  name: _offset\n                  required: false\n                  schema:\n                    description: Position of the reference record, from which the next N records will be returned\n                    format: int32\n                    minimum: 0\n                    type: integer\n                - in: query\n                  name: _limit\n                  required: false\n                  schema:\n                    description: The size of request per page\n                    format: int32\n                    maximum: 50\n                    minimum: 1\n                    type: integer\n                - in: query\n                  name: _sort\n                  required: false\n                  schema:\n                    description: The request sorting\n                    example: +domainAttribute1,-domainAttribute2\n                    items:\n                        description: The request sorting\n                        example: +domainAttribute1,-domainAttribute2\n                        type: string\n                    type: array\n                - in: query\n                  name: protocol\n                  required: false\n                  schema:\n                    description: the protocol number\n                    items:\n                        description: the protocol number\n                        type: string\n                    type: array\n                - in: query\n                  name: status_code\n                  required: false\n                  schema:\n                    description: the ticket status code\n                    type: string\n                - in: query\n                  name: type_code\n                  required: false\n                  schema:\n                    description: the ticket type code\n                    type: string\n                - in: query\n                  name: cpf\n                  required: false\n                  schema:\n                    description: the customer document\n                    type: string\n                - in: query\n                  name: cnpj\n                  required: false\n                  schema:\n                    description: the customer document\n                    type: string\n                - in: query\n                  name: due_date\n                  required: false\n                  schema:\n                    default: all\n                    description: the ticket public due date expiration\n                    enum:\n                        - all\n                        - expired\n                        - not_expired\n                    type: string\n                - in: query\n                  name: created_at_gt\n                  required: false\n                  schema:\n                    description: Created date greater than\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_gte\n                  required: false\n                  schema:\n                    description: Created date greater than or equals to\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_lt\n                  required: false\n                  schema:\n                    description: Created date less than\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_lte\n                  required: false\n                  schema:\n                    description: Created date less than or equals to\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/Ticket'\n                                type: array\n                    description: Tickets\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Internal server error\n            summary: List tickets by order and package\n    /v1/orders/{order_uuid}/payment:\n        get:\n            operationId: getPaymentByOrderUuid\n            parameters:\n                - in: path\n                  name: order_uuid\n                  required: true\n                  schema:\n                    description: Identifier of the order\n                    example: 13bdb3e3-8fad-4f9b-a6c3-2fa99786289f\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/PaymentResponseDto'\n                    description: Payment entity\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get payment by order_uuid\n    /v1/orders/packages/events/status:\n        get:\n            operationId: getAllowedStatus\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/EventStatusResponseDto'\n                                type: array\n                    description: Event Status list\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Bad request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unauthorized\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorDto'\n                                type: array\n                    description: Internal server error\n            summary: Get allowed status\n    /v1/tickets:\n        get:\n            operationId: listMyTickets\n            parameters:\n                - in: query\n                  name: _offset\n                  required: false\n                  schema:\n                    description: Position of the reference record, from which the next N records will be returned\n                    format: int32\n                    minimum: 0\n                    type: integer\n                - in: query\n                  name: _limit\n                  required: false\n                  schema:\n                    description: The size of request per page\n                    format: int32\n                    maximum: 50\n                    minimum: 1\n                    type: integer\n                - in: query\n                  name: _sort\n                  required: false\n                  schema:\n                    description: The request sorting\n                    example: +domainAttribute1,-domainAttribute2\n                    items:\n                        description: The request sorting\n                        example: +domainAttribute1,-domainAttribute2\n                        type: string\n                    type: array\n                - in: query\n                  name: protocol\n                  required: false\n                  schema:\n                    description: the protocol number\n                    items:\n                        description: the protocol number\n                        type: string\n                    type: array\n                - in: query\n                  name: status_code\n                  required: false\n                  schema:\n                    description: the ticket status code\n                    type: string\n                - in: query\n                  name: type_code\n                  required: false\n                  schema:\n                    description: the ticket type code\n                    type: string\n                - in: query\n                  name: cpf\n                  required: false\n                  schema:\n                    description: the customer document\n                    type: string\n                - in: query\n                  name: cnpj\n                  required: false\n                  schema:\n                    description: the customer document\n                    type: string\n                - in: query\n                  name: due_date\n                  required: false\n                  schema:\n                    default: all\n                    description: the ticket public due date expiration\n                    enum:\n                        - all\n                        - expired\n                        - not_expired\n                    type: string\n                - in: query\n                  name: created_at_gt\n                  required: false\n                  schema:\n                    description: Created date greater than\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_gte\n                  required: false\n                  schema:\n                    description: Created date greater than or equals to\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_lt\n                  required: false\n                  schema:\n                    description: Created date less than\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n                - in: query\n                  name: created_at_lte\n                  required: false\n                  schema:\n                    description: Created date less than or equals to\n                    example: \"2021-05-26T15:36:19Z\"\n                    format: date-time\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/Ticket'\n                                type: array\n                    description: Tickets\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Internal server error\n            summary: List tickets\n        post:\n            operationId: createTicket\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/TicketRequest'\n                required: true\n            responses:\n                \"201\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Ticket'\n                    description: Ticket\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Unprocessable entity\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Internal server error\n            summary: Create ticket\n    /v1/tickets/{ticket_uuid}:\n        get:\n            operationId: findTicketByUuid\n            parameters:\n                - in: path\n                  name: ticket_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/Ticket'\n                                type: array\n                    description: Tickets\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Internal server error\n            summary: Get ticket by UUID\n    /v1/tickets/{ticket_uuid}/close:\n        post:\n            operationId: closeTicket\n            parameters:\n                - in: path\n                  name: ticket_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Ticket'\n                    description: Ticket\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Internal server error\n            summary: Close ticket\n    /v1/tickets/{ticket_uuid}/messages:\n        get:\n            operationId: listMyMessages\n            parameters:\n                - in: path\n                  name: ticket_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/MessageResponse'\n                                type: array\n                    description: Messages\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n            summary: List messages by ticket UUID\n        post:\n            operationId: saveMessage\n            parameters:\n                - in: path\n                  name: ticket_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/MessageRequest'\n                required: true\n            responses:\n                \"201\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/MessageResponse'\n                                type: array\n                    description: Messages\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"422\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Unprocessable entity\n            summary: Save ticket message\n    /v1/tickets/{ticket_uuid}/rating:\n        post:\n            operationId: ratingTicket\n            parameters:\n                - in: path\n                  name: ticket_uuid\n                  required: true\n                  schema:\n                    format: uuid\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Rating'\n                required: true\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Ticket'\n                    description: Ticket\n                \"400\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Invalid request\n                \"401\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Not Authorized\n                \"403\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Forbidden\n                \"404\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Entity not found\n                \"500\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: '#/components/schemas/ErrorResponseJson'\n                                type: array\n                    description: Internal server error\n            summary: Rate ticket\nopenapi: 3.0.2\n\n",
			"canonicalURL": "/github.com/luizalabs/dev.magalu.com-docs@cc4ec86e9e85557a8ef81c6e5d7e0cd5451ee7a1/-/blob/api-reference/maestro.openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/luizalabs/dev.magalu.com-docs/blob/cc4ec86e9e85557a8ef81c6e5d7e0cd5451ee7a1/api-reference/maestro.openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v1/orders\": at 1:37617: get: operation \"getOrders\": at 1:37624: responses: 200: at 1:39715: headers: header \"_sort\": at 1:40124: parameter MUST contain either a schema property, or a content property"
}