{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "service_instance.yaml",
			"size": 0,
			"path": "providers/src/netlify/v0.2.0/services/service_instance.yaml",
			"byteSize": 7869,
			"content": "paths:\n  /sites/{site_id}/service-instances:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/serviceInstance'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: listServiceInstancesForSite\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n  /sites/{site_id}/services/{addon}/instances:\n    post:\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/serviceInstance'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: createServiceInstance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      parameters:\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: addon\n          required: true\n          schema:\n            type: string\n  /sites/{site_id}/services/{addon}/instances/{instance_id}:\n    delete:\n      responses:\n        '204':\n          description: Deleted\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: deleteServiceInstance\n      parameters: \u0026ref_0\n        - in: path\n          name: site_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: addon\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: instance_id\n          required: true\n          schema:\n            type: string\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/serviceInstance'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: showServiceInstance\n      parameters: *ref_0\n    put:\n      responses:\n        '204':\n          description: No Content\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - serviceInstance\n      operationId: updateServiceInstance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      parameters: *ref_0\ncomponents:\n  schemas:\n    serviceInstance:\n      properties:\n        auth_url:\n          type: string\n        config:\n          type: object\n        created_at:\n          format: dateTime\n          type: string\n        env:\n          type: object\n        external_attributes:\n          type: object\n        id:\n          type: string\n        service_name:\n          type: string\n        service_path:\n          type: string\n        service_slug:\n          type: string\n        snippets:\n          items:\n            type: object\n          type: array\n        updated_at:\n          format: dateTime\n          type: string\n        url:\n          type: string\n      type: object\n    error:\n      properties:\n        code:\n          format: int64\n          type: integer\n        message:\n          nullable: false\n          type: string\n      required:\n        - message\n      type: object\n  parameters: {}\n  responses:\n    error:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: error\n  securitySchemes: {}\n  callbacks: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    sites_service_instances:\n      id: netlify.service_instance.sites_service_instances\n      name: sites_service_instances\n      title: Sites_service_instances\n      methods:\n        listServiceInstancesForSite:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1service-instances/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/sites_service_instances/methods/listServiceInstancesForSite'\n        insert: []\n        update: []\n        delete: []\n    sites_services_instances:\n      id: netlify.service_instance.sites_services_instances\n      name: sites_services_instances\n      title: Sites_services_instances\n      methods:\n        createServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        deleteServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances~1{instance_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        showServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances~1{instance_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateServiceInstance:\n          operation:\n            $ref: '#/paths/~1sites~1{site_id}~1services~1{addon}~1instances~1{instance_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select: []\n        insert:\n          - $ref: '#/components/x-stackQL-resources/sites_services_instances/methods/createServiceInstance'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/sites_services_instances/methods/deleteServiceInstance'\nopenapi: 3.0.0\nservers:\n  - url: https://api.netlify.com/api/v1\nsecurity:\n  - netlifyAuth: []\ntags:\n  - name: ticket\n    x-displayName: Ticket\n  - name: accessToken\n    x-displayName: Access token\n  - name: user\n    x-displayName: User\n  - name: accountMembership\n    x-displayName: Accounts\n  - name: member\n    x-displayName: Member\n  - name: accountType\n    x-displayName: Access type\n  - name: paymentMethod\n    x-displayName: Payment method\n  - name: auditLog\n    x-displayName: Audit log\n  - name: site\n    x-displayName: Site\n  - name: file\n    x-displayName: File\n  - name: metadata\n    x-displayName: Metadata\n  - name: snippet\n    x-displayName: Snippet\n  - name: dnsZone\n    x-displayName: DNS zone\n  - name: sniCertificate\n    x-displayName: SNI certificate\n  - name: deploy\n    x-displayName: Deploy\n  - name: deployedBranch\n    x-displayName: Deployed branch\n  - name: deployKey\n    x-displayName: Deploy key\n  - name: build\n    x-displayName: Build\n  - name: buildLogMsg\n    x-displayName: Build log message\n  - name: hook\n    x-displayName: Hook\n  - name: hookType\n    x-displayName: Hook type\n  - name: buildHook\n    x-displayName: Build hook\n  - name: service\n    x-displayName: Service\n  - name: serviceInstance\n    x-displayName: Service instance\n  - name: function\n    x-displayName: Function\n  - name: form\n    x-displayName: Form\n  - name: submission\n    x-displayName: Form submission\n  - name: splitTest\n    x-displayName: Split test\n  - name: asset\n    x-displayName: Asset\n  - name: assetPublicSignature\n    x-displayName: Asset public signature\nexternalDocs:\n  description: Online documentation\n  url: https://www.netlify.com/docs/api/\ninfo:\n  description: serviceInstance\n  termsOfService: https://www.netlify.com/legal/terms-of-use/\n  title: Netlify's API documentation - service_instance\n  version: 2.9.0\n  x-logo:\n    altText: Netlify\n    href: https://www.netlify.com/docs/\n    url: netlify-logo.png\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@aec3f5191481ea6b7a1fcfc712b281964a7813e0/-/blob/providers/src/netlify/v0.2.0/services/service_instance.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/aec3f5191481ea6b7a1fcfc712b281964a7813e0/providers/src/netlify/v0.2.0/services/service_instance.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/sites/{site_id}/service-instances\": get: operation \"listServiceInstancesForSite\": security: at 1:5438: unknown security schema \"netlifyAuth\""
}