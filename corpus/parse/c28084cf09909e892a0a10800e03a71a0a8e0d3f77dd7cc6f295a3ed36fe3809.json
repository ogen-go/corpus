{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-events-2015-10-07-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-events-2015-10-07-swagger.yaml",
			"byteSize": 109340,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2015-10-07\n  x-release: v4\n  title: Amazon CloudWatch Events\n  description: \u003cp\u003eAmazon EventBridge helps you to respond to state changes in your AWS\n    resources. When your resources change state, they automatically send events\n    into an event stream. You can create rules that match selected events in the\n    stream and route them to targets to take action. You can also use rules to\n    take action on a predetermined schedule. For example, you can configure\n    rules to:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAutomatically invoke an AWS Lambda function to\n    update DNS entries when an event notifies you that Amazon EC2 instance\n    enters the running state\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eDirect specific API records from\n    AWS CloudTrail to an Amazon Kinesis data stream for detailed analysis of\n    potential security or availability risks\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePeriodically\n    invoke a built-in target to create a snapshot of an Amazon EBS volume\u003c/p\u003e\n    \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information about the features of Amazon\n    EventBridge, see the \u003ca\n    href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/\"\u003eAmazon\n    EventBridge User Guide\u003c/a\u003e.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: events\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/events-2015-10-07.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/events/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=AWSEvents.ActivateEventSource:\n    post:\n      operationId: ActivateEventSource\n      description: \u003cp\u003eActivates a partner event source that has been deactivated. Once\n        activated, your matching event bus will start receiving events from the\n        event source.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is performed by AWS\n        customers, not by SaaS partners.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidStateException\"\n        \"482\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ActivateEventSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActivateEventSourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.CreateEventBus:\n    post:\n      operationId: CreateEventBus\n      description: \u003cp\u003eCreates a new event bus within your account. This can be a custom\n        event bus which you can use to receive events from your own custom\n        applications and services, or it can be a partner event bus which can be\n        matched to a partner event source.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is used\n        by AWS customers, not by SaaS partners.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateEventBusResponse\"\n        \"480\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidStateException\"\n        \"483\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"484\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.CreateEventBus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateEventBusRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.CreatePartnerEventSource:\n    post:\n      operationId: CreatePartnerEventSource\n      description: \u003cp\u003eCalled by an SaaS partner to create a partner event source.\u003c/p\u003e\n        \u003cnote\u003e \u003cp\u003eThis operation is not used by AWS customers.\u003c/p\u003e \u003c/note\u003e\n        \u003cp\u003eEach partner event source can be used by one AWS account to create a\n        matching partner event bus in that AWS account. A SaaS partner must\n        create one partner event source for each AWS account that wants to\n        receive those event types. \u003c/p\u003e \u003cp\u003eA partner event source creates events\n        based on resources in the SaaS partner's service or application.\u003c/p\u003e\n        \u003cp\u003eAn AWS account that creates a partner event bus that matches the\n        partner event source can use that event bus to receive events from the\n        partner, and then process them using AWS Events rules and targets.\u003c/p\u003e\n        \u003cp\u003ePartner event source names follow this format:\u003c/p\u003e \u003cp\u003e\n        \u003ccode\u003eaws.partner/\u003ci\u003epartner_name\u003c/i\u003e/\u003ci\u003eevent_namespace\u003c/i\u003e/\u003ci\u003eevent_name\u003c/i\u003e\n        \u003c/code\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ci\u003epartner_name\u003c/i\u003e is determined during\n        partner registration and identifies the partner to AWS customers.\u003c/p\u003e\n        \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor \u003ci\u003eevent_namespace\u003c/i\u003e, we recommend that partners use\n        a string that identifies the AWS customer within the partner's system.\n        This should not be the customer's AWS account ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n        \u003ci\u003eevent_name\u003c/i\u003e is determined by the partner, and should uniquely\n        identify an event-generating resource within the partner system. This\n        should help AWS customers decide whether to create an event bus to\n        receive these events.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreatePartnerEventSourceResponse\"\n        \"480\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.CreatePartnerEventSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePartnerEventSourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DeactivateEventSource:\n    post:\n      operationId: DeactivateEventSource\n      description: \u003cp\u003eAn AWS customer uses this operation to temporarily stop receiving\n        events from the specified partner event source. The matching event bus\n        isn't deleted. \u003c/p\u003e \u003cp\u003eWhen you deactivate a partner event source, the\n        source goes into \u003ccode\u003ePENDING\u003c/code\u003e state. If it remains in\n        \u003ccode\u003ePENDING\u003c/code\u003e state for more than two weeks, it's deleted.\u003c/p\u003e\n        \u003cp\u003eTo activate a deactivated partner event source, use\n        \u003ca\u003eActivateEventSource\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidStateException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidStateException\"\n        \"482\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DeactivateEventSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeactivateEventSourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DeleteEventBus:\n    post:\n      operationId: DeleteEventBus\n      description: \u003cp\u003eDeletes the specified custom event bus or partner event bus. All\n        rules associated with this event bus are also deleted. You can't delete\n        your account's default event bus.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is\n        performed by AWS customers, not by SaaS partners.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DeleteEventBus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteEventBusRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DeletePartnerEventSource:\n    post:\n      operationId: DeletePartnerEventSource\n      description: \u003cp\u003eThis operation is used by SaaS partners to delete a partner event\n        source. AWS customers don't use this operation.\u003c/p\u003e \u003cp\u003eWhen you delete\n        an event source, the status of the corresponding partner event bus in\n        the AWS customer account becomes \u003ccode\u003eDELETED\u003c/code\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DeletePartnerEventSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeletePartnerEventSourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DeleteRule:\n    post:\n      operationId: DeleteRule\n      description: \u003cp\u003eDeletes the specified rule.\u003c/p\u003e \u003cp\u003eBefore you can delete the rule,\n        you must remove all targets, using \u003ca\u003eRemoveTargets\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eWhen you\n        delete a rule, incoming events might continue to match to the deleted\n        rule. Allow a short period of time for changes to take effect.\u003c/p\u003e\n        \u003cp\u003eManaged rules are rules created and managed by another AWS service on\n        your behalf. These rules are created by those other AWS services to\n        support functionality in those services. You can delete these rules\n        using the \u003ccode\u003eForce\u003c/code\u003e option, but you should do so only if you're\n        sure that the other service isn't still using that rule.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n        \"482\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"483\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DeleteRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeleteRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DescribeEventBus:\n    post:\n      operationId: DescribeEventBus\n      description: \u003cp\u003eDisplays details about an event bus in your account. This can include\n        the external AWS accounts that are permitted to write events to your\n        default event bus, and the associated policy. For custom event buses and\n        partner event buses, it displays the name, ARN, policy, state, and\n        creation time.\u003c/p\u003e \u003cp\u003e To enable your account to receive events from\n        other accounts on its default event bus, use \u003ca\u003ePutPermission\u003c/a\u003e.\u003c/p\u003e\n        \u003cp\u003eFor more information about partner event buses, see\n        \u003ca\u003eCreateEventBus\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeEventBusResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DescribeEventBus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeEventBusRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DescribeEventSource:\n    post:\n      operationId: DescribeEventSource\n      description: \u003cp\u003eThis operation lists details about a partner event source that is\n        shared with your account.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is run by AWS\n        customers, not by SaaS partners.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeEventSourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DescribeEventSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeEventSourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DescribePartnerEventSource:\n    post:\n      operationId: DescribePartnerEventSource\n      description: \u003cp\u003eAn SaaS partner can use this operation to list details about a\n        partner event source that they have created.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAWS customers\n        do not use this operation. Instead, AWS customers can use\n        \u003ca\u003eDescribeEventSource\u003c/a\u003e to see details about a partner event source\n        that is shared with them.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribePartnerEventSourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DescribePartnerEventSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribePartnerEventSourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DescribeRule:\n    post:\n      operationId: DescribeRule\n      description: \u003cp\u003eDescribes the specified rule.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eDescribeRule\u003c/code\u003e\n        doesn't list the targets of a rule. To see the targets associated with a\n        rule, use \u003ca\u003eListTargetsByRule\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeRuleResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DescribeRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DescribeRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.DisableRule:\n    post:\n      operationId: DisableRule\n      description: \u003cp\u003eDisables the specified rule. A disabled rule won't match any events\n        and won't self-trigger if it has a schedule expression.\u003c/p\u003e \u003cp\u003eWhen you\n        disable a rule, incoming events might continue to match to the disabled\n        rule. Allow a short period of time for changes to take effect.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n        \"483\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.DisableRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DisableRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.EnableRule:\n    post:\n      operationId: EnableRule\n      description: \u003cp\u003eEnables the specified rule. If the rule doesn't exist, the operation\n        fails.\u003c/p\u003e \u003cp\u003eWhen you enable a rule, incoming events might not\n        immediately start matching to a newly enabled rule. Allow a short period\n        of time for changes to take effect.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n        \"483\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.EnableRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnableRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListEventBuses:\n    post:\n      operationId: ListEventBuses\n      description: \u003cp\u003eLists all the event buses in your account, including the default\n        event bus, custom event buses, and partner event buses.\u003c/p\u003e \u003cnote\u003e\n        \u003cp\u003eThis operation is run by AWS customers, not by SaaS partners.\u003c/p\u003e\n        \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListEventBusesResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListEventBuses\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListEventBusesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListEventSources:\n    post:\n      operationId: ListEventSources\n      description: \u003cp\u003eYou can use this to see all the partner event sources that have been\n        shared with your AWS account. For more information about partner event\n        sources, see \u003ca\u003eCreateEventBus\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is run\n        by AWS customers, not by SaaS partners.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListEventSourcesResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListEventSources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListEventSourcesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListPartnerEventSourceAccounts:\n    post:\n      operationId: ListPartnerEventSourceAccounts\n      description: \u003cp\u003eAn SaaS partner can use this operation to display the AWS account ID\n        that a particular partner event source name is associated with.\u003c/p\u003e\n        \u003cnote\u003e \u003cp\u003eThis operation is used by SaaS partners, not by AWS\n        customers.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListPartnerEventSourceAccountsResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListPartnerEventSourceAccounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListPartnerEventSourceAccountsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListPartnerEventSources:\n    post:\n      operationId: ListPartnerEventSources\n      description: \u003cp\u003eAn SaaS partner can use this operation to list all the partner event\n        source names that they have created.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation is not\n        used by AWS customers.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListPartnerEventSourcesResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListPartnerEventSources\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListPartnerEventSourcesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListRuleNamesByTarget:\n    post:\n      operationId: ListRuleNamesByTarget\n      description: Lists the rules for the specified target. You can see which rules can\n        invoke a specific target in your account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListRuleNamesByTargetResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListRuleNamesByTarget\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListRuleNamesByTargetRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListRules:\n    post:\n      operationId: ListRules\n      description: \u003cp\u003eLists your EventBridge rules. You can either list all the rules or\n        provide a prefix to match to the rule names.\u003c/p\u003e \u003cp\u003e\n        \u003ccode\u003eListRules\u003c/code\u003e doesn't list the targets of a rule. To see the\n        targets associated with a rule, use \u003ca\u003eListTargetsByRule\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListRulesResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListRules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListRulesRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: Displays the tags associated with an EventBridge resource. In\n        EventBridge, rules can be tagged.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListTagsForResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTagsForResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.ListTargetsByRule:\n    post:\n      operationId: ListTargetsByRule\n      description: Lists the targets assigned to the specified rule.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTargetsByRuleResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.ListTargetsByRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ListTargetsByRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.PutEvents:\n    post:\n      operationId: PutEvents\n      description: Sends custom events to EventBridge so that they can be matched to rules.\n        These events can be from your custom applications and services.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutEventsResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.PutEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutEventsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.PutPartnerEvents:\n    post:\n      operationId: PutPartnerEvents\n      description: \u003cp\u003eThis is used by SaaS partners to write events to a customer's partner\n        event bus.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAWS customers do not use this operation.\n        Instead, AWS customers can use \u003ca\u003ePutEvents\u003c/a\u003e to write custom events\n        from their own applications to an event bus.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutPartnerEventsResponse\"\n        \"480\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.PutPartnerEvents\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutPartnerEventsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.PutPermission:\n    post:\n      operationId: PutPermission\n      description: \u003cp\u003eRunning \u003ccode\u003ePutPermission\u003c/code\u003e permits the specified AWS account\n        or AWS organization to put events to the specified \u003ci\u003eevent bus\u003c/i\u003e.\n        Rules in your account are triggered by these events arriving to an event\n        bus in your account. \u003c/p\u003e \u003cp\u003eFor another account to send events to your\n        account, that external account must have a rule with your account's\n        event bus as a target.\u003c/p\u003e \u003cp\u003eTo enable multiple AWS accounts to put\n        events to an event bus, run \u003ccode\u003ePutPermission\u003c/code\u003e once for each of\n        these accounts. Or, if all the accounts are members of the same AWS\n        organization, you can run \u003ccode\u003ePutPermission\u003c/code\u003e once specifying\n        \u003ccode\u003ePrincipal\u003c/code\u003e as \"*\" and specifying the AWS organization ID in\n        \u003ccode\u003eCondition\u003c/code\u003e, to grant permissions to all accounts in that\n        organization.\u003c/p\u003e \u003cp\u003eIf you grant permissions using an organization,\n        then accounts in that organization must specify a \u003ccode\u003eRoleArn\u003c/code\u003e\n        with proper permissions when they use \u003ccode\u003ePutTarget\u003c/code\u003e to add your\n        account's event bus as a target. For more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\"\u003eSending\n        and Receiving Events Between AWS Accounts\u003c/a\u003e in the \u003ci\u003eAmazon\n        EventBridge User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe permission policy on an event bus\n        can't exceed 10 KB in size.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: PolicyLengthExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PolicyLengthExceededException\"\n        \"482\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"483\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.PutPermission\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutPermissionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.PutRule:\n    post:\n      operationId: PutRule\n      description: \u003cp\u003eCreates or updates the specified rule. Rules are enabled by default\n        or based on value of the state. You can disable a rule using\n        \u003ca\u003eDisableRule\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eA single rule watches for events from a\n        single event bus. Events generated by AWS services go to your account's\n        default event bus. Events generated by SaaS partner services or\n        applications go to the matching partner event bus. If you have custom\n        applications or services, you can specify whether their events go to\n        your default event bus or a custom event bus that you have created. For\n        more information, see \u003ca\u003eCreateEventBus\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you're updating\n        an existing rule, the rule is replaced with what you specify in this\n        \u003ccode\u003ePutRule\u003c/code\u003e command. If you omit arguments in\n        \u003ccode\u003ePutRule\u003c/code\u003e, the old values for those arguments aren't kept.\n        Instead, they're replaced with null values.\u003c/p\u003e \u003cp\u003eWhen you create or\n        update a rule, incoming events might not immediately start matching to\n        new or updated rules. Allow a short period of time for changes to take\n        effect.\u003c/p\u003e \u003cp\u003eA rule must contain at least an \u003ccode\u003eEventPattern\u003c/code\u003e\n        or \u003ccode\u003eScheduleExpression\u003c/code\u003e. Rules with\n        \u003ccode\u003eEventPatterns\u003c/code\u003e are triggered when a matching event is\n        observed. Rules with \u003ccode\u003eScheduleExpressions\u003c/code\u003e self-trigger based\n        on the given schedule. A rule can have both an \u003ccode\u003eEventPattern\u003c/code\u003e\n        and a \u003ccode\u003eScheduleExpression\u003c/code\u003e, in which case the rule triggers\n        on matching events as well as on a schedule.\u003c/p\u003e \u003cp\u003eWhen you initially\n        create a rule, you can optionally assign one or more tags to the rule.\n        Tags can help you organize and categorize your resources. You can also\n        use them to scope user permissions, by granting a user permission to\n        access or change only rules with certain tag values. To use the\n        \u003ccode\u003ePutRule\u003c/code\u003e operation and assign tags, you must have both the\n        \u003ccode\u003eevents:PutRule\u003c/code\u003e and \u003ccode\u003eevents:TagResource\u003c/code\u003e\n        permissions.\u003c/p\u003e \u003cp\u003eIf you are updating an existing rule, any tags you\n        specify in the \u003ccode\u003ePutRule\u003c/code\u003e operation are ignored. To update the\n        tags of an existing rule, use \u003ca\u003eTagResource\u003c/a\u003e and\n        \u003ca\u003eUntagResource\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eMost services in AWS treat \u003ccode\u003e:\u003c/code\u003e\n        or \u003ccode\u003e/\u003c/code\u003e as the same character in Amazon Resource Names (ARNs).\n        However, EventBridge uses an exact match in event patterns and rules. Be\n        sure to use the correct ARN characters when creating event patterns so\n        that they match the ARN syntax in the event that you want to match.\u003c/p\u003e\n        \u003cp\u003eIn EventBridge, you could create rules that lead to infinite loops,\n        where a rule is fired repeatedly. For example, a rule might detect that\n        ACLs have changed on an S3 bucket, and trigger software to change them\n        to the desired state. If you don't write the rule carefully, the\n        subsequent change to the ACLs fires the rule again, creating an infinite\n        loop.\u003c/p\u003e \u003cp\u003eTo prevent this, write the rules so that the triggered\n        actions don't refire the same rule. For example, your rule could fire\n        only if ACLs are found to be in a bad state, instead of after any\n        change. \u003c/p\u003e \u003cp\u003eAn infinite loop can quickly cause higher than expected\n        charges. We recommend that you use budgeting, which alerts you when\n        charges exceed your specified limit. For more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/budgets-managing-costs.html\"\u003eManaging\n        Your Costs with Budgets\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutRuleResponse\"\n        \"480\":\n          description: InvalidEventPatternException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEventPatternException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n        \"484\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.PutRule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutRuleRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.PutTargets:\n    post:\n      operationId: PutTargets\n      description: \u003cp\u003eAdds the specified targets to the specified rule, or updates the\n        targets if they're already associated with the rule.\u003c/p\u003e \u003cp\u003eTargets are\n        the resources that are invoked when a rule is triggered.\u003c/p\u003e \u003cp\u003eYou can\n        configure the following as targets in EventBridge:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eEC2\n        instances\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSSM Run Command\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSSM\n        Automation\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAWS Lambda functions\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eData\n        streams in Amazon Kinesis Data Streams\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eData delivery\n        streams in Amazon Kinesis Data Firehose\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAmazon ECS\n        tasks\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAWS Step Functions state machines\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n        \u003cp\u003eAWS Batch jobs\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAWS CodeBuild projects\u003c/p\u003e \u003c/li\u003e\n        \u003cli\u003e \u003cp\u003ePipelines in AWS CodePipeline\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAmazon Inspector\n        assessment templates\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAmazon SNS topics\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n        \u003cp\u003eAmazon SQS queues, including FIFO queues\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe\n        default event bus of another AWS account\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eCreating\n        rules with built-in targets is supported only on the AWS Management\n        Console. The built-in targets are \u003ccode\u003eEC2 CreateSnapshot API\n        call\u003c/code\u003e, \u003ccode\u003eEC2 RebootInstances API call\u003c/code\u003e, \u003ccode\u003eEC2\n        StopInstances API call\u003c/code\u003e, and \u003ccode\u003eEC2 TerminateInstances API\n        call\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eFor some target types, \u003ccode\u003ePutTargets\u003c/code\u003e\n        provides target-specific parameters. If the target is a Kinesis data\n        stream, you can optionally specify which shard the event goes to by\n        using the \u003ccode\u003eKinesisParameters\u003c/code\u003e argument. To invoke a command\n        on multiple EC2 instances with one rule, you can use the\n        \u003ccode\u003eRunCommandParameters\u003c/code\u003e field.\u003c/p\u003e \u003cp\u003eTo be able to make API\n        calls against the resources that you own, Amazon EventBridge needs the\n        appropriate permissions. For AWS Lambda and Amazon SNS resources,\n        EventBridge relies on resource-based policies. For EC2 instances,\n        Kinesis data streams, and AWS Step Functions state machines, EventBridge\n        relies on IAM roles that you specify in the \u003ccode\u003eRoleARN\u003c/code\u003e\n        argument in \u003ccode\u003ePutTargets\u003c/code\u003e. For more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/auth-and-access-control-eventbridge.html\"\u003eAuthentication\n        and Access Control\u003c/a\u003e in the \u003ci\u003eAmazon EventBridge User Guide\u003c/i\u003e.\u003c/p\u003e\n        \u003cp\u003eIf another AWS account is in the same Region and has granted you\n        permission (using \u003ccode\u003ePutPermission\u003c/code\u003e), you can send events to\n        that account. Set that account's event bus as a target of the rules in\n        your account. To send the matched events to the other account, specify\n        that account's event bus as the \u003ccode\u003eArn\u003c/code\u003e value when you run\n        \u003ccode\u003ePutTargets\u003c/code\u003e. If your account sends events to another\n        account, your account is charged for each sent event. Each event sent to\n        another account is charged as a custom event. The account receiving the\n        event isn't charged. For more information, see \u003ca\n        href=\"https://aws.amazon.com/eventbridge/pricing/\"\u003eAmazon EventBridge\n        Pricing\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you're setting an event bus in another account as\n        the target and that account granted permission to your account through\n        an organization instead of directly by the account ID, you must specify\n        a \u003ccode\u003eRoleArn\u003c/code\u003e with proper permissions in the\n        \u003ccode\u003eTarget\u003c/code\u003e structure. For more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\"\u003eSending\n        and Receiving Events Between AWS Accounts\u003c/a\u003e in the \u003ci\u003eAmazon\n        EventBridge User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information about enabling\n        cross-account events, see \u003ca\u003ePutPermission\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e\n        \u003ccode\u003eInput\u003c/code\u003e, \u003ccode\u003eInputPath\u003c/code\u003e, and\n        \u003ccode\u003eInputTransformer\u003c/code\u003e are mutually exclusive and optional\n        parameters of a target. When a rule is triggered due to a matched\n        event:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf none of the following arguments are specified\n        for a target, the entire event is passed to the target in JSON format\n        (unless the target is Amazon EC2 Run Command or Amazon ECS task, in\n        which case nothing from the event is passed to the target).\u003c/p\u003e \u003c/li\u003e\n        \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eInput\u003c/code\u003e is specified in the form of valid JSON,\n        then the matched event is overridden with this constant.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n        \u003cp\u003eIf \u003ccode\u003eInputPath\u003c/code\u003e is specified in the form of JSONPath (for\n        example, \u003ccode\u003e$.detail\u003c/code\u003e), only the part of the event specified in\n        the path is passed to the target (for example, only the detail part of\n        the event is passed).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eInputTransformer\u003c/code\u003e\n        is specified, one or more specified JSONPaths are extracted from the\n        event and used as values in a template that you specify as the input to\n        the target.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen you specify \u003ccode\u003eInputPath\u003c/code\u003e\n        or \u003ccode\u003eInputTransformer\u003c/code\u003e, you must use JSON dot notation, not\n        bracket notation.\u003c/p\u003e \u003cp\u003eWhen you add targets to a rule and the\n        associated rule triggers soon after, new or updated targets might not be\n        immediately invoked. Allow a short period of time for changes to take\n        effect.\u003c/p\u003e \u003cp\u003eThis action can partially fail if too many requests are\n        made at the same time. If that happens, \u003ccode\u003eFailedEntryCount\u003c/code\u003e is\n        nonzero in the response, and each entry in \u003ccode\u003eFailedEntries\u003c/code\u003e\n        provides the ID of the failed target and the error code.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutTargetsResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n        \"484\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.PutTargets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PutTargetsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.RemovePermission:\n    post:\n      operationId: RemovePermission\n      description: Revokes the permission of another AWS account to be able to put events\n        to the specified event bus. Specify the account to revoke by the\n        \u003ccode\u003eStatementId\u003c/code\u003e value that you associated with the account when\n        you granted it permission with \u003ccode\u003ePutPermission\u003c/code\u003e. You can find\n        the \u003ccode\u003eStatementId\u003c/code\u003e by using \u003ca\u003eDescribeEventBus\u003c/a\u003e.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.RemovePermission\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RemovePermissionRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.RemoveTargets:\n    post:\n      operationId: RemoveTargets\n      description: \u003cp\u003eRemoves the specified targets from the specified rule. When the rule\n        is triggered, those targets are no longer be invoked.\u003c/p\u003e \u003cp\u003eWhen you\n        remove a target, when the associated rule triggers, removed targets\n        might continue to be invoked. Allow a short period of time for changes\n        to take effect.\u003c/p\u003e \u003cp\u003eThis action can partially fail if too many\n        requests are made at the same time. If that happens,\n        \u003ccode\u003eFailedEntryCount\u003c/code\u003e is non-zero in the response and each entry\n        in \u003ccode\u003eFailedEntries\u003c/code\u003e provides the ID of the failed target and\n        the error code.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RemoveTargetsResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n        \"483\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.RemoveTargets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RemoveTargetsRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.TagResource:\n    post:\n      operationId: TagResource\n      description: \u003cp\u003eAssigns one or more tags (key-value pairs) to the specified\n        EventBridge resource. Tags can help you organize and categorize your\n        resources. You can also use them to scope user permissions by granting a\n        user permission to access or change only resources with certain tag\n        values. In EventBridge, rules can be tagged.\u003c/p\u003e \u003cp\u003eTags don't have any\n        semantic meaning to AWS and are interpreted strictly as strings of\n        characters.\u003c/p\u003e \u003cp\u003eYou can use the \u003ccode\u003eTagResource\u003c/code\u003e action with\n        a rule that already has tags. If you specify a new tag key for the rule,\n        this tag is appended to the list of tags associated with the rule. If\n        you specify a tag key that is already associated with the rule, the new\n        tag value that you specify replaces the previous value for that tag.\u003c/p\u003e\n        \u003cp\u003eYou can associate as many as 50 tags with a resource.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"483\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.TagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TagResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.TestEventPattern:\n    post:\n      operationId: TestEventPattern\n      description: \u003cp\u003eTests whether the specified event pattern matches the provided\n        event.\u003c/p\u003e \u003cp\u003eMost services in AWS treat \u003ccode\u003e:\u003c/code\u003e or\n        \u003ccode\u003e/\u003c/code\u003e as the same character in Amazon Resource Names (ARNs).\n        However, EventBridge uses an exact match in event patterns and rules. Be\n        sure to use the correct ARN characters when creating event patterns so\n        that they match the ARN syntax in the event that you want to match.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TestEventPatternResponse\"\n        \"480\":\n          description: InvalidEventPatternException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEventPatternException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.TestEventPattern\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TestEventPatternRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSEvents.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Removes one or more tags from the specified EventBridge resource. In\n        EventBridge, rules can be tagged.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InternalException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: ManagedRuleException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ManagedRuleException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSEvents.UntagResource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UntagResourceRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://events.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon CloudWatch Events multi-region endpoint\n  - url: https://events.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon CloudWatch Events multi-region endpoint\n  - url: http://events.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon CloudWatch Events endpoint for China (Beijing) and China\n      (Ningxia)\n  - url: https://events.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon CloudWatch Events endpoint for China (Beijing) and China\n      (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    ActivateEventSourceRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventSourceName\"\n    ResourceNotFoundException: {}\n    InvalidStateException: {}\n    InternalException: {}\n    CreateEventBusResponse:\n      type: object\n      properties:\n        EventBusArn:\n          $ref: \"#/components/schemas/String\"\n    CreateEventBusRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventBusName\"\n        EventSourceName:\n          $ref: \"#/components/schemas/EventSourceName\"\n    ResourceAlreadyExistsException: {}\n    ConcurrentModificationException: {}\n    LimitExceededException: {}\n    CreatePartnerEventSourceResponse:\n      type: object\n      properties:\n        EventSourceArn:\n          $ref: \"#/components/schemas/String\"\n    CreatePartnerEventSourceRequest:\n      type: object\n      required:\n        - Name\n        - Account\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventSourceName\"\n        Account:\n          $ref: \"#/components/schemas/AccountId\"\n    DeactivateEventSourceRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventSourceName\"\n    DeleteEventBusRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventBusName\"\n    DeletePartnerEventSourceRequest:\n      type: object\n      required:\n        - Name\n        - Account\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventSourceName\"\n        Account:\n          $ref: \"#/components/schemas/AccountId\"\n    DeleteRuleRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n        Force:\n          $ref: \"#/components/schemas/Boolean\"\n    ManagedRuleException: {}\n    DescribeEventBusResponse:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/String\"\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        Policy:\n          $ref: \"#/components/schemas/String\"\n    DescribeEventBusRequest:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventBusName\"\n    DescribeEventSourceResponse:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        CreatedBy:\n          $ref: \"#/components/schemas/String\"\n        CreationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        ExpirationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n        State:\n          $ref: \"#/components/schemas/EventSourceState\"\n    DescribeEventSourceRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventSourceName\"\n    DescribePartnerEventSourceResponse:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n    DescribePartnerEventSourceRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/EventSourceName\"\n    DescribeRuleResponse:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        Arn:\n          $ref: \"#/components/schemas/RuleArn\"\n        EventPattern:\n          $ref: \"#/components/schemas/EventPattern\"\n        ScheduleExpression:\n          $ref: \"#/components/schemas/ScheduleExpression\"\n        State:\n          $ref: \"#/components/schemas/RuleState\"\n        Description:\n          $ref: \"#/components/schemas/RuleDescription\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        ManagedBy:\n          $ref: \"#/components/schemas/ManagedBy\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n    DescribeRuleRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n    DisableRuleRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n    EnableRuleRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n    ListEventBusesResponse:\n      type: object\n      properties:\n        EventBuses:\n          $ref: \"#/components/schemas/EventBusList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListEventBusesRequest:\n      type: object\n      properties:\n        NamePrefix:\n          $ref: \"#/components/schemas/EventBusName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    ListEventSourcesResponse:\n      type: object\n      properties:\n        EventSources:\n          $ref: \"#/components/schemas/EventSourceList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListEventSourcesRequest:\n      type: object\n      properties:\n        NamePrefix:\n          $ref: \"#/components/schemas/EventSourceNamePrefix\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    ListPartnerEventSourceAccountsResponse:\n      type: object\n      properties:\n        PartnerEventSourceAccounts:\n          $ref: \"#/components/schemas/PartnerEventSourceAccountList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListPartnerEventSourceAccountsRequest:\n      type: object\n      required:\n        - EventSourceName\n      properties:\n        EventSourceName:\n          $ref: \"#/components/schemas/EventSourceName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    ListPartnerEventSourcesResponse:\n      type: object\n      properties:\n        PartnerEventSources:\n          $ref: \"#/components/schemas/PartnerEventSourceList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListPartnerEventSourcesRequest:\n      type: object\n      required:\n        - NamePrefix\n      properties:\n        NamePrefix:\n          $ref: \"#/components/schemas/PartnerEventSourceNamePrefix\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    ListRuleNamesByTargetResponse:\n      type: object\n      properties:\n        RuleNames:\n          $ref: \"#/components/schemas/RuleNameList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListRuleNamesByTargetRequest:\n      type: object\n      required:\n        - TargetArn\n      properties:\n        TargetArn:\n          $ref: \"#/components/schemas/TargetArn\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    ListRulesResponse:\n      type: object\n      properties:\n        Rules:\n          $ref: \"#/components/schemas/RuleResponseList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListRulesRequest:\n      type: object\n      properties:\n        NamePrefix:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - ResourceARN\n      properties:\n        ResourceARN:\n          $ref: \"#/components/schemas/Arn\"\n    ListTargetsByRuleResponse:\n      type: object\n      properties:\n        Targets:\n          $ref: \"#/components/schemas/TargetList\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListTargetsByRuleRequest:\n      type: object\n      required:\n        - Rule\n      properties:\n        Rule:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n        Limit:\n          $ref: \"#/components/schemas/LimitMax100\"\n    PutEventsResponse:\n      type: object\n      properties:\n        FailedEntryCount:\n          $ref: \"#/components/schemas/Integer\"\n        Entries:\n          $ref: \"#/components/schemas/PutEventsResultEntryList\"\n    PutEventsRequest:\n      type: object\n      required:\n        - Entries\n      properties:\n        Entries:\n          $ref: \"#/components/schemas/PutEventsRequestEntryList\"\n    PutPartnerEventsResponse:\n      type: object\n      properties:\n        FailedEntryCount:\n          $ref: \"#/components/schemas/Integer\"\n        Entries:\n          $ref: \"#/components/schemas/PutPartnerEventsResultEntryList\"\n    PutPartnerEventsRequest:\n      type: object\n      required:\n        - Entries\n      properties:\n        Entries:\n          $ref: \"#/components/schemas/PutPartnerEventsRequestEntryList\"\n    PutPermissionRequest:\n      type: object\n      required:\n        - Action\n        - Principal\n        - StatementId\n      properties:\n        EventBusName:\n          $ref: \"#/components/schemas/NonPartnerEventBusName\"\n        Action:\n          $ref: \"#/components/schemas/Action\"\n        Principal:\n          $ref: \"#/components/schemas/Principal\"\n        StatementId:\n          $ref: \"#/components/schemas/StatementId\"\n        Condition:\n          $ref: \"#/components/schemas/Condition\"\n    PolicyLengthExceededException: {}\n    PutRuleResponse:\n      type: object\n      properties:\n        RuleArn:\n          $ref: \"#/components/schemas/RuleArn\"\n    PutRuleRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        ScheduleExpression:\n          $ref: \"#/components/schemas/ScheduleExpression\"\n        EventPattern:\n          $ref: \"#/components/schemas/EventPattern\"\n        State:\n          $ref: \"#/components/schemas/RuleState\"\n        Description:\n          $ref: \"#/components/schemas/RuleDescription\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n    InvalidEventPatternException: {}\n    PutTargetsResponse:\n      type: object\n      properties:\n        FailedEntryCount:\n          $ref: \"#/components/schemas/Integer\"\n        FailedEntries:\n          $ref: \"#/components/schemas/PutTargetsResultEntryList\"\n    PutTargetsRequest:\n      type: object\n      required:\n        - Rule\n        - Targets\n      properties:\n        Rule:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n        Targets:\n          $ref: \"#/components/schemas/TargetList\"\n    RemovePermissionRequest:\n      type: object\n      required:\n        - StatementId\n      properties:\n        StatementId:\n          $ref: \"#/components/schemas/StatementId\"\n        EventBusName:\n          $ref: \"#/components/schemas/NonPartnerEventBusName\"\n    RemoveTargetsResponse:\n      type: object\n      properties:\n        FailedEntryCount:\n          $ref: \"#/components/schemas/Integer\"\n        FailedEntries:\n          $ref: \"#/components/schemas/RemoveTargetsResultEntryList\"\n    RemoveTargetsRequest:\n      type: object\n      required:\n        - Rule\n        - Ids\n      properties:\n        Rule:\n          $ref: \"#/components/schemas/RuleName\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n        Ids:\n          $ref: \"#/components/schemas/TargetIdList\"\n        Force:\n          $ref: \"#/components/schemas/Boolean\"\n    TagResourceResponse:\n      type: object\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - ResourceARN\n        - Tags\n      properties:\n        ResourceARN:\n          $ref: \"#/components/schemas/Arn\"\n        Tags:\n          $ref: \"#/components/schemas/TagList\"\n    TestEventPatternResponse:\n      type: object\n      properties:\n        Result:\n          $ref: \"#/components/schemas/Boolean\"\n    TestEventPatternRequest:\n      type: object\n      required:\n        - EventPattern\n        - Event\n      properties:\n        EventPattern:\n          $ref: \"#/components/schemas/EventPattern\"\n        Event:\n          $ref: \"#/components/schemas/String\"\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      required:\n        - ResourceARN\n        - TagKeys\n      properties:\n        ResourceARN:\n          $ref: \"#/components/schemas/Arn\"\n        TagKeys:\n          $ref: \"#/components/schemas/TagKeyList\"\n    AccountId:\n      type: string\n      pattern: \\d{12}\n      minLength: 12\n      maxLength: 12\n    Action:\n      type: string\n      pattern: events:[a-zA-Z]+\n      minLength: 1\n      maxLength: 64\n    EventSourceName:\n      type: string\n      pattern: aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}\n      minLength: 1\n      maxLength: 256\n    Arn:\n      type: string\n      minLength: 1\n      maxLength: 1600\n    AssignPublicIp:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    StringList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    AwsVpcConfiguration:\n      type: object\n      required:\n        - Subnets\n      properties:\n        Subnets:\n          $ref: \"#/components/schemas/StringList\"\n        SecurityGroups:\n          $ref: \"#/components/schemas/StringList\"\n        AssignPublicIp:\n          $ref: \"#/components/schemas/AssignPublicIp\"\n      description: This structure specifies the VPC subnets and security groups for the\n        task and whether a public IP address is to be used. This structure is\n        relevant only for ECS tasks that use the \u003ccode\u003eawsvpc\u003c/code\u003e network\n        mode.\n    Integer:\n      type: integer\n    BatchArrayProperties:\n      type: object\n      properties:\n        Size:\n          $ref: \"#/components/schemas/Integer\"\n      description: The array properties for the submitted job, such as the size of the\n        array. The array size can be between 2 and 10,000. If you specify array\n        properties for a job, it becomes an array job. This parameter is used\n        only if the target is an AWS Batch job.\n    String:\n      type: string\n    BatchRetryStrategy:\n      type: object\n      properties:\n        Attempts:\n          $ref: \"#/components/schemas/Integer\"\n      description: The retry strategy to use for failed jobs if the target is an AWS Batch\n        job. If you specify a retry strategy here, it overrides the retry\n        strategy defined in the job definition.\n    BatchParameters:\n      type: object\n      required:\n        - JobDefinition\n        - JobName\n      properties:\n        JobDefinition:\n          $ref: \"#/components/schemas/String\"\n        JobName:\n          $ref: \"#/components/schemas/String\"\n        ArrayProperties:\n          $ref: \"#/components/schemas/BatchArrayProperties\"\n        RetryStrategy:\n          $ref: \"#/components/schemas/BatchRetryStrategy\"\n      description: The custom parameters to be used when the target is an AWS Batch job.\n    Boolean:\n      type: boolean\n    Condition:\n      type: object\n      required:\n        - Type\n        - Key\n        - Value\n      properties:\n        Type:\n          $ref: \"#/components/schemas/String\"\n        Key:\n          $ref: \"#/components/schemas/String\"\n        Value:\n          $ref: \"#/components/schemas/String\"\n      description: \"\u003cp\u003eA JSON string that you can use to limit the event bus permissions\n        that you're granting to only accounts that fulfill the condition.\n        Currently, the only supported condition is membership in a certain AWS\n        organization. The string must contain \u003ccode\u003eType\u003c/code\u003e,\n        \u003ccode\u003eKey\u003c/code\u003e, and \u003ccode\u003eValue\u003c/code\u003e fields. The \u003ccode\u003eValue\u003c/code\u003e\n        field specifies the ID of the AWS organization. The following is an\n        example value for \u003ccode\u003eCondition\u003c/code\u003e:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e'{\\\"Type\\\" :\n        \\\"StringEquals\\\", \\\"Key\\\": \\\"aws:PrincipalOrgID\\\", \\\"Value\\\":\n        \\\"o-1234567890\\\"}'\u003c/code\u003e \u003c/p\u003e\"\n    EventBusName:\n      type: string\n      pattern: \"[/\\\\.\\\\-_A-Za-z0-9]+\"\n      minLength: 1\n      maxLength: 256\n    RuleName:\n      type: string\n      pattern: \"[\\\\.\\\\-_A-Za-z0-9]+\"\n      minLength: 1\n      maxLength: 64\n    Timestamp:\n      type: string\n      format: date-time\n    EventSourceState:\n      type: string\n      enum:\n        - PENDING\n        - ACTIVE\n        - DELETED\n    RuleArn:\n      type: string\n      minLength: 1\n      maxLength: 1600\n    EventPattern:\n      type: string\n    ScheduleExpression:\n      type: string\n      maxLength: 256\n    RuleState:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    RuleDescription:\n      type: string\n      maxLength: 512\n    RoleArn:\n      type: string\n      minLength: 1\n      maxLength: 1600\n    ManagedBy:\n      type: string\n      minLength: 1\n      maxLength: 128\n    LimitMin1:\n      type: integer\n      minimum: 1\n    LaunchType:\n      type: string\n      enum:\n        - EC2\n        - FARGATE\n    NetworkConfiguration:\n      type: object\n      properties:\n        awsvpcConfiguration:\n          $ref: \"#/components/schemas/AwsVpcConfiguration\"\n      description: This structure specifies the network configuration for an ECS task.\n    EcsParameters:\n      type: object\n      required:\n        - TaskDefinitionArn\n      properties:\n        TaskDefinitionArn:\n          $ref: \"#/components/schemas/Arn\"\n        TaskCount:\n          $ref: \"#/components/schemas/LimitMin1\"\n        LaunchType:\n          $ref: \"#/components/schemas/LaunchType\"\n        NetworkConfiguration:\n          $ref: \"#/components/schemas/NetworkConfiguration\"\n        PlatformVersion:\n          $ref: \"#/components/schemas/String\"\n        Group:\n          $ref: \"#/components/schemas/String\"\n      description: The custom parameters to be used when the target is an Amazon ECS task.\n    ErrorCode:\n      type: string\n    ErrorMessage:\n      type: string\n    EventBus:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/String\"\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        Policy:\n          $ref: \"#/components/schemas/String\"\n      description: An event bus receives events from a source and routes them to rules\n        associated with that event bus. Your account's default event bus\n        receives rules from AWS services. A custom event bus can receive rules\n        from AWS services as well as your custom applications and services. A\n        partner event bus receives events from an event source created by an\n        SaaS partner. These events come from the partners services or\n        applications.\n    EventBusList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EventBus\"\n    EventId:\n      type: string\n    EventResource:\n      type: string\n    EventResourceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EventResource\"\n    EventSource:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        CreatedBy:\n          $ref: \"#/components/schemas/String\"\n        CreationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        ExpirationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n        State:\n          $ref: \"#/components/schemas/EventSourceState\"\n      description: A partner event source is created by an SaaS partner. If a customer\n        creates a partner event bus that matches this event source, that AWS\n        account can receive events from the partner's applications or services.\n    EventSourceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EventSource\"\n    EventSourceNamePrefix:\n      type: string\n      pattern: \"[/\\\\.\\\\-_A-Za-z0-9]+\"\n      minLength: 1\n      maxLength: 256\n    EventTime:\n      type: string\n      format: date-time\n    TransformerPaths:\n      type: object\n      maxProperties: 10\n      additionalProperties:\n        $ref: \"#/components/schemas/TargetInputPath\"\n    TransformerInput:\n      type: string\n      minLength: 1\n      maxLength: 8192\n    InputTransformer:\n      type: object\n      required:\n        - InputTemplate\n      properties:\n        InputPathsMap:\n          $ref: \"#/components/schemas/TransformerPaths\"\n        InputTemplate:\n          $ref: \"#/components/schemas/TransformerInput\"\n      description: Contains the parameters needed for you to provide custom input to a\n        target based on one or more pieces of data extracted from the event.\n    InputTransformerPathKey:\n      type: string\n      pattern: \"[A-Za-z0-9\\\\_\\\\-]+\"\n      minLength: 1\n      maxLength: 256\n    TargetPartitionKeyPath:\n      type: string\n      maxLength: 256\n    KinesisParameters:\n      type: object\n      required:\n        - PartitionKeyPath\n      properties:\n        PartitionKeyPath:\n          $ref: \"#/components/schemas/TargetPartitionKeyPath\"\n      description: This object enables you to specify a JSON path to extract from the event\n        and use as the partition key for the Amazon Kinesis data stream so that\n        you can control the shard that the event goes to. If you don't include\n        this parameter, the default is to use the \u003ccode\u003eeventId\u003c/code\u003e as the\n        partition key.\n    LimitMax100:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    PartnerEventSourceAccountList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PartnerEventSourceAccount\"\n    PartnerEventSourceNamePrefix:\n      type: string\n      pattern: aws\\.partner/[\\.\\-_A-Za-z0-9]+/[/\\.\\-_A-Za-z0-9]*\n      minLength: 1\n      maxLength: 256\n    PartnerEventSourceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PartnerEventSource\"\n    TargetArn:\n      type: string\n      minLength: 1\n      maxLength: 1600\n    RuleNameList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RuleName\"\n    RuleResponseList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Rule\"\n    TagList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n    TargetList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Target\"\n      minItems: 1\n      maxItems: 100\n    MessageGroupId:\n      type: string\n    NonPartnerEventBusName:\n      type: string\n      pattern: \"[\\\\.\\\\-_A-Za-z0-9]+\"\n      minLength: 1\n      maxLength: 256\n    PartnerEventSource:\n      type: object\n      properties:\n        Arn:\n          $ref: \"#/components/schemas/String\"\n        Name:\n          $ref: \"#/components/schemas/String\"\n      description: A partner event source is created by an SaaS partner. If a customer\n        creates a partner event bus that matches this event source, that AWS\n        account can receive events from the partner's applications or services.\n    PartnerEventSourceAccount:\n      type: object\n      properties:\n        Account:\n          $ref: \"#/components/schemas/AccountId\"\n        CreationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        ExpirationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        State:\n          $ref: \"#/components/schemas/EventSourceState\"\n      description: The AWS account that a partner event source has been offered to.\n    Principal:\n      type: string\n      pattern: (\\d{12}|\\*)\n      minLength: 1\n      maxLength: 12\n    PutEventsRequestEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutEventsRequestEntry\"\n      minItems: 1\n      maxItems: 10\n    PutEventsRequestEntry:\n      type: object\n      properties:\n        Time:\n          $ref: \"#/components/schemas/EventTime\"\n        Source:\n          $ref: \"#/components/schemas/String\"\n        Resources:\n          $ref: \"#/components/schemas/EventResourceList\"\n        DetailType:\n          $ref: \"#/components/schemas/String\"\n        Detail:\n          $ref: \"#/components/schemas/String\"\n        EventBusName:\n          $ref: \"#/components/schemas/NonPartnerEventBusName\"\n      description: Represents an event to be submitted.\n    PutEventsResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutEventsResultEntry\"\n    PutEventsResultEntry:\n      type: object\n      properties:\n        EventId:\n          $ref: \"#/components/schemas/EventId\"\n        ErrorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        ErrorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Represents an event that failed to be submitted.\n    PutPartnerEventsRequestEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutPartnerEventsRequestEntry\"\n      minItems: 1\n      maxItems: 20\n    PutPartnerEventsRequestEntry:\n      type: object\n      properties:\n        Time:\n          $ref: \"#/components/schemas/EventTime\"\n        Source:\n          $ref: \"#/components/schemas/String\"\n        Resources:\n          $ref: \"#/components/schemas/EventResourceList\"\n        DetailType:\n          $ref: \"#/components/schemas/String\"\n        Detail:\n          $ref: \"#/components/schemas/String\"\n      description: The details about an event generated by an SaaS partner.\n    PutPartnerEventsResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutPartnerEventsResultEntry\"\n    PutPartnerEventsResultEntry:\n      type: object\n      properties:\n        EventId:\n          $ref: \"#/components/schemas/EventId\"\n        ErrorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        ErrorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Represents an event that a partner tried to generate but failed.\n    StatementId:\n      type: string\n      pattern: \"[a-zA-Z0-9-_]+\"\n      minLength: 1\n      maxLength: 64\n    PutTargetsResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PutTargetsResultEntry\"\n    TargetId:\n      type: string\n      pattern: \"[\\\\.\\\\-_A-Za-z0-9]+\"\n      minLength: 1\n      maxLength: 64\n    PutTargetsResultEntry:\n      type: object\n      properties:\n        TargetId:\n          $ref: \"#/components/schemas/TargetId\"\n        ErrorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        ErrorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Represents a target that failed to be added to a rule.\n    TargetIdList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TargetId\"\n      minItems: 1\n      maxItems: 100\n    RemoveTargetsResultEntryList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RemoveTargetsResultEntry\"\n    RemoveTargetsResultEntry:\n      type: object\n      properties:\n        TargetId:\n          $ref: \"#/components/schemas/TargetId\"\n        ErrorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        ErrorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Represents a target that failed to be removed from a rule.\n    Rule:\n      type: object\n      properties:\n        Name:\n          $ref: \"#/components/schemas/RuleName\"\n        Arn:\n          $ref: \"#/components/schemas/RuleArn\"\n        EventPattern:\n          $ref: \"#/components/schemas/EventPattern\"\n        State:\n          $ref: \"#/components/schemas/RuleState\"\n        Description:\n          $ref: \"#/components/schemas/RuleDescription\"\n        ScheduleExpression:\n          $ref: \"#/components/schemas/ScheduleExpression\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        ManagedBy:\n          $ref: \"#/components/schemas/ManagedBy\"\n        EventBusName:\n          $ref: \"#/components/schemas/EventBusName\"\n      description: Contains information about a rule in Amazon EventBridge.\n    RunCommandTargets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RunCommandTarget\"\n      minItems: 1\n      maxItems: 5\n    RunCommandParameters:\n      type: object\n      required:\n        - RunCommandTargets\n      properties:\n        RunCommandTargets:\n          $ref: \"#/components/schemas/RunCommandTargets\"\n      description: \"This parameter contains the criteria (either \u003ccode\u003eInstanceIds\u003c/code\u003e\n        or a tag) used to specify which EC2 instances are to be sent the\n        command. \"\n    RunCommandTargetKey:\n      type: string\n      pattern: ^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$\n      minLength: 1\n      maxLength: 128\n    RunCommandTargetValues:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RunCommandTargetValue\"\n      minItems: 1\n      maxItems: 50\n    RunCommandTarget:\n      type: object\n      required:\n        - Key\n        - Values\n      properties:\n        Key:\n          $ref: \"#/components/schemas/RunCommandTargetKey\"\n        Values:\n          $ref: \"#/components/schemas/RunCommandTargetValues\"\n      description: Information about the EC2 instances that are to be sent the command,\n        specified as key-value pairs. Each \u003ccode\u003eRunCommandTarget\u003c/code\u003e block\n        can include only one key, but this key can specify multiple values.\n    RunCommandTargetValue:\n      type: string\n      minLength: 1\n      maxLength: 256\n    SqsParameters:\n      type: object\n      properties:\n        MessageGroupId:\n          $ref: \"#/components/schemas/MessageGroupId\"\n      description: This structure includes the custom parameter to be used when the target\n        is an SQS FIFO queue.\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      required:\n        - Key\n        - Value\n      properties:\n        Key:\n          $ref: \"#/components/schemas/TagKey\"\n        Value:\n          $ref: \"#/components/schemas/TagValue\"\n      description: A key-value pair associated with an AWS resource. In EventBridge, rules\n        support tagging.\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n    TargetInput:\n      type: string\n      maxLength: 8192\n    TargetInputPath:\n      type: string\n      maxLength: 256\n    Target:\n      type: object\n      required:\n        - Id\n        - Arn\n      properties:\n        Id:\n          $ref: \"#/components/schemas/TargetId\"\n        Arn:\n          $ref: \"#/components/schemas/TargetArn\"\n        RoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        Input:\n          $ref: \"#/components/schemas/TargetInput\"\n        InputPath:\n          $ref: \"#/components/schemas/TargetInputPath\"\n        InputTransformer:\n          $ref: \"#/components/schemas/InputTransformer\"\n        KinesisParameters:\n          $ref: \"#/components/schemas/KinesisParameters\"\n        RunCommandParameters:\n          $ref: \"#/components/schemas/RunCommandParameters\"\n        EcsParameters:\n          $ref: \"#/components/schemas/EcsParameters\"\n        BatchParameters:\n          $ref: \"#/components/schemas/BatchParameters\"\n        SqsParameters:\n          $ref: \"#/components/schemas/SqsParameters\"\n      description: \u003cp\u003eTargets are the resources to be invoked when a rule is triggered. For\n        a complete list of services and resources that can be set as a target,\n        see \u003ca\u003ePutTargets\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you're setting the event bus of another\n        account as the target and that account granted permission to your\n        account through an organization instead of directly by the account ID,\n        you must specify a \u003ccode\u003eRoleArn\u003c/code\u003e with proper permissions in the\n        \u003ccode\u003eTarget\u003c/code\u003e structure. For more information, see \u003ca\n        href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html\"\u003eSending\n        and Receiving Events Between AWS Accounts\u003c/a\u003e in the \u003ci\u003eAmazon\n        EventBridge User Guide\u003c/i\u003e.\u003c/p\u003e\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-events-2015-10-07-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-events-2015-10-07-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /#X-Amz-Target=AWSEvents.ListEventBuses: post: operation \"ListEventBuses\": parse path \"/#X-Amz-Target=AWSEvents.ListEventBuses\": path MUST NOT contain a fragment"
}