{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "svc-nifid.yml",
			"size": 0,
			"path": "src/svc-nifid.yml",
			"byteSize": 1220,
			"content": "openapi: 3.0.0\ninfo:\n  title: nifid\n  version: 1.0.0\nservers:\n  - url: /\npaths:\n  /broker/subs:\n    $ref: './svc/nifid/paths/broker_subs.yml'\n  /broker/subs/{id}:\n    $ref: './svc/nifid/paths/broker_subs_id.yml'\n  /broker/subs/{id}/status:\n    $ref: './svc/nifid/paths/broker_subs_id_status.yml'\ncomponents:\n  requestBodies:\n    SubscriptionParams:\n      $ref: './svc/nifid/requestBodies/SubscriptionParams.yml'\n    SubscriptionStatus:\n      $ref: \"./svc/nifid/requestBodies/SubscriptionStatus.yml\"\n  schemas:\n    JsonSpec:\n      $ref: './svc/nifid/schemas/JsonSpec.yml'\n    StringObjectParams:\n      $ref: './svc/nifid/schemas/StringObject.yml'\n    SubscriptionParams:\n      $ref: './svc/nifid/schemas/SubscriptionParams.yml'\n    Subscription:\n      $ref: './svc/nifid/schemas/Subscription.yml'\n    SubscriptionArray:\n      $ref: './svc/nifid/schemas/SubscriptionArray.yml'\n    Subscriptions:\n      $ref: './svc/nifid/schemas/Subscriptions.yml'\n    SubscriptionStatus:\n      $ref: './svc/nifid/schemas/SubscriptionStatus.yml'\n    Error:\n      $ref: './common/schemas/Error.yml'\n  responses:\n    NoContent:\n      $ref: './common/responses/NoContent.yml'\n    ServerError:\n      $ref: './common/responses/ServerError.yml'\n",
			"canonicalURL": "/github.com/influxdata/openapi@08b0a56cb105ab58f22820ecdd8f93cb4dd8203d/-/blob/src/svc-nifid.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/08b0a56cb105ab58f22820ecdd8f93cb4dd8203d/src/svc-nifid.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Subscriptions\": parse schema: resolve \"./svc/nifid/schemas/Subscriptions.yml\": external \"./svc/nifid/schemas/Subscriptions.yml\": get: file: local file reference is not allowed"
}