{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EskiMojo14/keycaplendar"
		},
		"file": {
			"name": "KeycapLendar-API.v1.yaml",
			"size": 0,
			"path": "reference/KeycapLendar-API.v1.yaml",
			"byteSize": 7193,
			"content": "openapi: 3.0.0\ninfo:\n  title: KeycapLendar API\n  version: '1.0'\n  contact:\n    name: Ben Durrant\n    email: keycaplendar@gmail.com\n    url: 'https://discord.gg/zrcN3qF'\n  termsOfService: 'https://keycaplendar.firebaseapp.com/terms'\n  description: 'This is an API for https://keycaplendar.firebaseapp.com/'\nservers:\n  - url: 'https://us-central1-keycaplendar.cloudfunctions.net'\n    description: Production\npaths:\n  /apiAuth:\n    post:\n      summary: Generate Token\n      tags:\n        - authentication\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  token:\n                    type: string\n                    minLength: 1\n                required:\n                  - token\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      operationId: post-apiAuth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                key:\n                  type: string\n                  minLength: 1\n                secret:\n                  type: string\n                  minLength: 1\n              required:\n                - key\n                - secret\n      description: 'Using your API key and secret, generate a session token that will be used in any other subsequent API requests.'\n  /getAllKeysets:\n    get:\n      summary: Get All Keysets\n      tags:\n        - query\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Keyset'\n              examples: {}\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      operationId: get-getAllKeysets\n      description: Return all the keysets in the database\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - icDate\n              - gbLaunch\n              - gbEnd\n          in: query\n          name: dateFilter\n          description: Type of date to filter by.\n        - schema:\n            type: string\n            format: date\n          in: query\n          name: after\n          description: Filter sets by dateFilter property to after date.\n        - schema:\n            type: string\n            format: date\n          in: query\n          name: before\n          description: Filter sets by dateFilter property to before date.\n      security:\n        - Bearer Token: []\n    parameters: []\n  /getKeysetById:\n    get:\n      summary: Get Keyset by ID\n      tags:\n        - query\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Keyset'\n              examples: {}\n            application/xml:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      operationId: get-getKeysetById\n      description: 'Retrieve one keyset from the database, by its ID.'\n      security:\n        - Bearer Token: []\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: id\n          description: 'The ID of the keyset you want to retrieve '\n          required: true\n    parameters: []\n  '/getKeysetsByPage/{page}':\n    get:\n      summary: Get Keysets by Page\n      tags:\n        - query\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Keyset'\n              examples: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      operationId: get-getKeysetsByPage\n      parameters: []\n      security:\n        - Bearer Token: []\n    parameters:\n      - schema:\n          type: string\n          enum:\n            - calendar\n            - live\n            - ic\n            - previous\n            - timeline\n            - archive\n        name: page\n        in: path\n        required: true\ncomponents:\n  schemas:\n    Keyset:\n      description: ''\n      type: object\n      x-examples: {}\n      properties:\n        id:\n          type: string\n        profile:\n          type: string\n        gbMonth:\n          type: boolean\n        sales:\n          oneOf:\n            - type: object\n              properties:\n                img:\n                  type: string\n                thirdParty:\n                  type: boolean\n            - type: string\n        details:\n          type: string\n        notes:\n          type: string\n        icDate:\n          type: string\n        shipped:\n          type: boolean\n        gbEnd:\n          type: string\n        designer:\n          type: array\n          items:\n            type: string\n        gbLaunch:\n          type: string\n        vendors:\n          type: array\n          uniqueItems: true\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n              region:\n                type: string\n              name:\n                type: string\n              storeLink:\n                type: string\n              endDate:\n                type: string\n            required:\n              - region\n              - name\n        image:\n          type: string\n        colorway:\n          type: string\n        alias:\n          type: string\n      required:\n        - id\n        - profile\n        - details\n        - icDate\n        - gbEnd\n        - designer\n        - gbLaunch\n        - vendors\n        - image\n        - colorway\n  securitySchemes:\n    Bearer Token:\n      type: http\n      scheme: bearer\n      description: Token used to authenticate all endpoints.\nsecurity:\n  - API Key - 1: []\n",
			"canonicalURL": "/github.com/EskiMojo14/keycaplendar@3db91c2a927e96fb621dd2e2d851233e1e4b442a/-/blob/reference/KeycapLendar-API.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/EskiMojo14/keycaplendar/blob/3db91c2a927e96fb621dd2e2d851233e1e4b442a/reference/KeycapLendar-API.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/apiAuth\": at 1:1419: post: operation \"post-apiAuth\": at 1:1427: security: unknown security schema \"API Key - 1\""
}