{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sultanfariz/Pinjem"
		},
		"file": {
			"name": "swagger.yaml",
			"path": "swagger.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Pinjem RESTful API\n  version: 1.0.0\n  description: Pinjem RESTful API Documentation\n  contact:\n    name: Sultan Fariz\n    email: sultanfariz00@gmail.com\nservers:\n  - url: https://api.server/api/v1\npaths:\n  # user\n  /register:\n    description: Register user\n    post:\n      tags:\n        - User\n        - Authentication\n      description: Register new user\n      requestBody:\n        required: true\n        description: Request body for register\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/register\"\n            examples:\n              register:\n                $ref: \"#/components/examples/register\"\n      responses:\n        \"201\":\n          description: Create user success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                messages: Success\n                data:\n                  $ref: \"#/components/examples/user\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n  /login:\n    description: Login user\n    post:\n      tags:\n        - User\n        - Authentication\n      description: Login user\n      requestBody:\n        required: true\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/login\"\n            examples:\n              login:\n                $ref: \"#/components/examples/login\"\n      responses:\n        \"200\":\n          description: Login success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyLCJyb2xlIjoidXNlciIsImV4cCI6MTY0MjEyMjc5Nn0.CN2J3FCBUSImJzfJyT-RH3Sf_B-ri-MXdMJUyDJZNBI\n        \"401\":\n          $ref: \"#/components/responses/invalidCredentials\"\n  /users:\n    description: Get all user\n    get:\n      tags:\n        - User\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get all user success\n          content:\n            application/json:\n              examples:\n                users:\n                  $ref: \"#/components/examples/users\"\n        \"401\":\n          $ref: \"#/components/responses/unauthorized\"\n  /users/{userId}:\n    description: Get user detail\n    parameters:\n      - name: userId\n        in: path\n        description: user id\n        required: true\n        allowEmptyValue: false\n        schema:\n          type: integer\n    get:\n      tags:\n        - User\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get specific user success\n          content:\n            application/json:\n              examples:\n                user:\n                  $ref: \"#/components/examples/user\"\n        \"401\":\n          $ref: \"#/components/responses/unauthorized\"\n  /users/my:\n    description: Get user detail\n    get:\n      tags:\n        - User\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get user detail success\n          content:\n            application/json:\n              examples:\n                user:\n                  $ref: \"#/components/examples/my-profile\"\n        \"500\":\n          $ref: \"#/components/responses/internalServerError\"\n  /uploads/{file}:\n    description: Get uploaded file\n    parameters:\n      - name: file\n        in: path\n        description: file name\n        required: true\n        allowEmptyValue: false\n        schema:\n          type: string\n    get:\n      tags:\n        - Upload\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get uploaded file success\n          content:\n            application/json:\n              example:\n                file\n        \"404\": \n          $ref: \"#/components/responses/fileNotFound\"\n  /books:\n    get:\n      description: Get all books\n      tags:\n        - Book\n      responses:\n        \"200\":\n          description: Get all books success\n          content:\n            application/json:\n              examples:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  books:\n                    $ref: \"#/components/examples/books\"\n    post:\n      description: Insert new book\n      tags:\n        - Book\n      security:\n        - cookieToken: []\n      requestBody:\n        required: true\n        description: Request body for create book\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/create-book\"\n            examples:\n              create-book:\n                $ref: \"#/components/examples/create-book\"\n      responses:\n        \"200\":\n          description: Create book success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  book:\n                    $ref: \"#/components/examples/book\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n    description: Get book detail\n    parameters:\n      - name: bookId\n        in: path\n        description: book id\n        required: true\n        allowEmptyValue: false\n        schema:\n          type: string\n    get:\n      tags:\n        - Book\n      responses:\n        \"200\":\n          description: Get book detail success\n          content:\n            application/json:\n              examples:\n                book:\n                  $ref: \"#/components/examples/book\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n    description: Get all deposits\n    get:\n      tags:\n        - Deposit\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get all deposits success\n          content:\n            application/json:\n              examples:\n                deposits:\n                  $ref: \"#/components/examples/deposits\"\n  /deposits/{userId}:\n    description: Get deposit by user id\n    parameters:\n      - name: userId\n        in: path\n        description: user id\n        required: true\n        allowEmptyValue: false\n        schema:\n          type: integer\n    get:\n      tags:\n        - Deposit\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get deposit detail success\n          content:\n            application/json:\n              examples:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  deposits:\n                    $ref: \"#/components/examples/deposits\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n    description: Top up my deposit balance\n    post:\n      tags:\n        - Deposit\n      security:\n        - cookieToken: []\n      requestBody:\n        required: true\n        description: Request body for top up deposit\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/top-up-deposit\"\n            examples:\n              top-up-deposit:\n                $ref: \"#/components/examples/top-up-deposit\"\n      responses:\n        \"200\":\n          description: Top up deposit success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  deposit:\n                    $ref: \"#/components/examples/deposit\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n    description: Get all orders\n    get:\n      tags:\n        - Order\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get all orders success\n          content:\n            application/json:\n              examples:\n                orders:\n                  $ref: \"#/components/examples/orders\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n      tags:\n        - Order\n      security:\n        - cookieToken: []\n      requestBody:\n        required: true\n        description: Request body for create order\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/create-order\"\n            examples:\n              create-order:\n                $ref: \"#/components/examples/create-order\"\n      responses:\n        \"200\":\n          description: Create order success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  status: 200\n                  success: true\n                  message: Success\n                  data:\n                    order:\n                      $ref: \"#/components/examples/order\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n    description: Get my orders\n    get:\n      tags:\n        - Order\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get my orders success\n          content:\n            application/json:\n              examples:\n                orders:\n                  $ref: \"#/components/examples/orders\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n    description: Get order detail\n    parameters:\n      - name: orderId\n        in: path\n        description: order id\n        required: true\n        allowEmptyValue: false\n        schema:\n          type: integer\n    get:\n      tags:\n        - Order\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Get order detail success\n          content:\n            application/json:\n              examples:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  order:\n                    $ref: \"#/components/examples/order\"\n        \"400\":\n          description: Order not found\n          content:\n            application/json:\n              examples:\n                status: 400\n                success: false\n                message: Order not found\n                data: null\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n      tags:\n        - Order\n      security:\n        - cookieToken: []\n      requestBody:\n        required: true\n        description: Request body for update order\n        content:\n          \"application/json\":\n            schema:\n              $ref: \"#/components/schemas/update-order\"\n            examples:\n              update-order:\n                $ref: \"#/components/examples/update-order\"\n      responses:\n        \"200\":\n          description: Update order success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                message: Success\n                data:\n                  order:\n                    $ref: \"#/components/examples/order\"\n        \"400\":\n          description: Order not found\n          content:\n            application/json:\n              examples:\n                status: 400\n                success: false\n                message: Order not found\n                data: null\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n      tags:\n        - Order\n      security:\n        - cookieToken: []\n      responses:\n        \"200\":\n          description: Delete order success\n          content:\n            application/json:\n              example:\n                status: 200\n                success: true\n                message: Success\n                data: null\n        \"400\":\n          description: Order not found\n          content:\n            application/json:\n              examples:\n                status: 400\n                success: false\n                message: Order not found\n                data: null\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              examples:\n                $ref: \"#/components/responses/internalServerError\"\n# components\ncomponents:\n  securitySchemes:\n    cookieToken:\n      type: apiKey\n      in: cookie\n      description: Authentication user security\n      name: token\n  schemas:\n    register:\n      type: object\n      properties:\n        fullname:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        nik:\n          type: string\n        phoneNumber:\n          type: string\n        birthdate:\n          type: string\n        address:\n          type: string\n        provinsi:\n          type: string\n        kota: \n          type: string\n        kecamatan: \n          type: string\n        desa: \n          type: string\n        postalCode: \n          type: string\n        role: \n          type: string\n        status: \n          type: boolean\n        ktp: \n          type: object\n      required:\n        - fullname\n        - email\n        - password\n        - nik\n        - phoneNumber\n        - birthdate\n        - address\n        - provinsi\n        - kota\n        - kecamatan\n        - desa\n        - postalCode\n        - role\n        - status\n        - ktp\n    login:\n      type: object\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n      required:\n        - email\n        - password\n  examples:\n    register:\n      value:\n        email: sultan@gmail.com\n        password: sultanpwd\n        fullname: Sultan Fariz\n        nik: 1234567890112233\n        phoneNumber: 08123456789\n        birthdate: 2001-01-01\n        address: Jl. Kebon Jeruk No. 1\n        provinsi: Jawa Barat\n        kota: Bandung\n        kecamatan: Kebon Jeruk\n        desa: Kebon Jeruk\n        postalCode: 40132\n        role: user\n        status: 1\n        ktp: file\n    login:\n      value:\n        email: sultan@gmail.com\n        password: sultanpwd\n    # userRegistered:\n    #   description: User already register\n    #   value:\n    #     statusCode: 400\n    #     message: Invalid email or password\n    #     errors:\n    #       email: invalid email\n    # userNotRegistered:\n    #   description: User not register\n    #   value:\n    #     statusCode: 400\n    #     message: Email is not registered\n    #     errors:\n    #       email: email is not registered\n    # user:\n    #   value:\n    #     data:\n    #       id: 1\n    #       name: budi\n    #       birthday: 17/08/1945\n    #       phone_number: 08932387\n    #       createdAt: 348294\n    #       updatedAt: 348238\n    # requestMembershipAproved:\n    #   value:\n    #     message: Request approved\n    #     data:\n    #       id: 1\n    #       status: Refused\n    # requestMembershipRefused:\n    #   value:\n    #     message: Request refused\n    #     data:\n    #       id: 1\n          # status: Refused\n    users:\n      value:\n        type: array\n        items:\n          id: 1\n          email: sultan@gmail.com\n          fullname: Sultan Fariz\n          nik: 1234567890112233\n          phoneNumber: 08123456789\n          birthdate: 2001-01-01\n          address: Jl. Kebon Jeruk No. 1\n          provinsi: Jawa Barat\n          kota: Bandung\n          kecamatan: Kebon Jeruk\n          desa: Kebon Jeruk\n          postalCode: 40132\n          role: user\n          status: 1\n          linkKTP: http://localhost:8080/api/v1/uploads/KTP/KTP_Sultan_20210929161247.jpg\n          createdAt: 2020-01-01T00:00:00.000Z\n          updatedAt: 2020-01-01T00:00:00.000Z\n  # response\n  responses:\n    internalServerError:\n      description: Internal server error\n      content:\n        \"application/json\":\n          example:\n            statusCode: 500\n            message: internal server error\n    invalidCredentials:\n      description: Invalid credentials\n      content:\n        \"application/json\":\n          example:\n            statusCode: 401\n            message: invalid credentials\n    unauthorized:\n      description: Unauthorized\n      content:\n        \"application/json\":\n          example:\n            statusCode: 401\n            message: unauthorized\n    fileNotFound:\n      description: File not found\n      content:\n        \"application/json\":\n          example:\n            statusCode: 400\n            message: File not found\n    globalNotFound:\n      description: Global not found error\n      content:\n        application/json:\n          example:\n            statusCode: 404\n            message: Not found error\n"
		}
	},
	"Error": "json: cannot unmarshal string into Go struct field Media.paths.post.responses.content.examples of type ogen.Example"
}