{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/sap.successfactors.litmos/openapi.yml",
			"byteSize": 359388,
			"content": "openapi: 3.0.1\ninfo:\n  title: SAP SuccessFactors Litmos\n  description: \n    This is a generated connector for [SAP SuccessFactors Litmos API v1.0](https://api.sap.com/api/ScreeningHits/resource) OpenAPI specification. \n\n    Litmos is a cloud-based solution that unifies virtual, classroom, mobile,\n    and social learning. Our solutions empower training departments, sales and service\n    leaders, safety and compliance managers, and HR teams to collaborate, author,\n    globally distribute, and track web-based training courses, as well as schedule\n    and track instructor-led courses. It automates formerly burdensome tasks so that\n    teams can focus their energy on aligning training with the company's strategic\n    agenda.\n\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n    Create and configure an API key credentials by following [this guide](https://support.litmos.com/hc/en-us/articles/227734667-Overview-Developer-API).\n  x-ballerina-display:\n    label: SAP SuccessFactors Litmos\n    iconPath: \"icon.png\"\n  termsOfService: https://www.litmos.com/terms\n  version: \"1.0\"\nexternalDocs:\n  description: Overview of SAP Litmos Developer API\n  url: https://litmos.zendesk.com/hc/en-us/articles/227734667-Overview-Developer-API\n# servers:\n# - url: https://hostname/v1.svc\nsecurity:\n- ApiKeyAuth: []\ntags:\n- name: Achievements\n- name: Activity Logs\n- name: Bulk Imports\n- name: Collections \u0026 Collection Listings\n- name: Courses\n- name: Course Custom Fields\n- name: Date Range API's\n- name: Ecommerce\n- name: Gamification\n- name: Instructor Led Training (ILT)\n- name: Learning Paths\n- name: Modules\n- name: SCORM \u0026 Tin Can eLearning Files\n- name: Self Signup Tokens\n- name: Teams\n- name: Team Users\n- name: Team Administrators\n- name: Team Leaders\n- name: Team Courses\n- name: Team Learning Paths\n- name: Users\n- name: Users Custom Fields\n- name: Users Courses\n- name: Users Learning Paths\n- name: Users Teams\n- name: xAPI\npaths:\n  /achievements:\n    get:\n      tags:\n      - Achievements\n      summary: Get Achievements\n      description: Get user achievements. Achievement records are generated for each\n        course completion.\n      operationId: Get Achievements\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: sort\n        in: query\n        description: Field used to sort the records\n        schema:\n          type: string\n      - name: dir\n        in: query\n        description: Direction to sort the records\n        schema:\n          type: string\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: since\n        in: query\n        description: Date-time\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Achievements'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Achievements'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /bulkimports:\n    get:\n      tags:\n      - Bulk Imports\n      summary: Get a list of recent user import jobs\n      description: Get a list of recent user import jobs processed for an organization.\n        User import jobs can create and update user records.\n      operationId: GetaListofRecentUserImportJobs\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserBulkImports'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserBulkImports'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        500:\n          description: Get Bulk Imports Failed.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n    post:\n      tags:\n      - Bulk Imports\n      summary: Bulk import user records\n      description: Import users to create and/or update user records. 2000 KB can\n        be processed in a single import through the API.\n      operationId: BulkImportUsers\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: sendmessage\n        in: query\n        description: set to \"True\" to send login emails to new users\n        schema:\n          type: boolean\n      - name: skipfirstlogin\n        in: query\n        description: set to \"True\" to have users skip setting a password after logging\n          in\n        schema:\n          type: boolean\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/UserImports'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserImports'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserBulkImport'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserBulkImport'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        500:\n          description: Create Bulk Import Failed.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n      x-codegen-request-body-name: Body\n  /bulkimports/{bulkImportId}:\n    get:\n      tags:\n      - Bulk Imports\n      summary: Get the status of a user record import\n      description: Get the details and status of a user import job.\n      operationId: GettheStatusofaUserImportJob\n      parameters:\n      - name: bulkImportId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserBulkImport'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserBulkImport'\n        400:\n          description: Bulk Import Id was not found.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        500:\n          description: Get Bulk Import Failed.\n          content: {}\n      deprecated: false\n  /bulkimports/{bulkImportId}/usererrors:\n    get:\n      tags:\n      - Bulk Imports\n      summary: Get the list of user errors for an import\n      description: Get the user processiong error details for a particular import\n        job.\n      operationId: GettheUserImportErrors\n      parameters:\n      - name: bulkImportId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: IsAPI\n        in: query\n        description: Set to \"false\" to fetch import errors for an import performed\n          from the user interface. Do not include the parameter unless the value is\n          set to \"false\".\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200'\n        400:\n          description: Bulk Import Id was not found.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        500:\n          description: Get Bulk Import Failed.\n          content: {}\n      deprecated: false\n  /bulkimports/courses:\n    post:\n      tags:\n      - Bulk Imports\n      summary: Bulk import course records\n      description: Import courses to create and/or update course records. 100 records\n        can be processed in a single import through the API.\n      operationId: BulkImportCourses\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/CourseImports'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CourseImports'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CourseBulkImport'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CourseBulkImport'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        500:\n          description: Create Course Bulk Import Failed.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n      x-codegen-request-body-name: Body\n  /collections:\n    get:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Get a list of collection records\n      description: Get a list of collection records.\n      operationId: GetaListofCollections\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Collections'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collections'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: Collections do not exist.\n          content: {}\n    post:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Create a Collection\n      description: Create one or more collection records.\n      operationId: CreateaCollection\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Collection'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Collection'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Collections'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Collections'\n        400:\n          description: Please provide a downloadable link for Image URL Or Invalid\n            File Type For Collection Image Or Collection Image file too large.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or Failed to upload file\n            image or you do not have the proper permissions for this call.\n          content: {}\n      x-codegen-request-body-name: Body\n  /collectionlistings:\n    post:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Create a Collection Listing\n      description: Create listing entitlement records within a collection.\n      operationId: CreateaCollectionListing\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Listing'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Listing'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Listing'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Listing'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or Listing Name is required\n            Or DurationType dynamic requires DurationDays Or DurationType Fixed requires\n            FixedDate Or You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: Collection Id does not exist.\n          content: {}\n      x-codegen-request-body-name: Body\n  /collectionlistings/{collectionId}:\n    get:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Get Collection Listings\n      description: Get a list of collection listing entitlement records that belong\n        to a collection.\n      operationId: GetCollectionListings\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Listings'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Listings'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: Listings for collection - collectionId does not exist.\n          content: {}\n  /collectionlistings/{listingId}/users:\n    get:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Get users added to a Listing\n      description: Get the list of user records that have been added to a collection\n        listing entitlement.\n      operationId: GetUsersAddedtoaListing\n      parameters:\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ListingUsers'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListingUsers'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or You do not have the proper\n            permissions for this call.\n          content: {}\n        404:\n          description: Users do not exist in list.\n          content: {}\n    post:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Add users to a Listing\n      description: Add a list of user records to a collection listing entitlement.\n      operationId: PostUserstoaListing\n      parameters:\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Users'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Users'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or You do not have the proper\n            permissions for this call.\n          content: {}\n        404:\n          description: Exceeds Listing User Limit - listingid Or No listing with this\n            id - listingid exists in your organization, or the user list is empty.\n          content: {}\n        500:\n          description: Listing has expired.\n          content: {}\n      x-codegen-request-body-name: Body\n  /collectionlistings/{listingId}/users/{userId}:\n    delete:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Delete a User from a Listing\n      description: Remove a user record from a collection listing entitlement.\n      operationId: DeleteaUserfromaListing\n      parameters:\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or You do not have the proper\n            permissions for this call.\n          content: {}\n        404:\n          description: Delete User from Listing Failed.\n          content: {}\n  /collectionlistings/{listingId}/teams:\n    get:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Get Teams Added to a Listing\n      description: Get a list of team records that have been added to a collection\n        listing entitlement.\n      operationId: GetTeamsAddedtoaListing\n      parameters:\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Teams'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Teams'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: Teams are not attached to list.\n          content: {}\n  /collectionlistings/{listingId}/team/{teamId}:\n    post:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Add a Team to a Listing\n      description: Add a team record to a collection listing entitlement.\n      operationId: PostaTeamtoaListing\n      parameters:\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or You do not have the proper\n            permissions for this call.\n          content: {}\n        404:\n          description: Listing is limited cannot add team Or Invalid Listing ids.\n          content: {}\n    delete:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Remove a Team from a Listing\n      description: Remove a team record from a collection listing entitlement.\n      operationId: RemoveATeamFromListing\n      parameters:\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Collection feature is not enabled Or You do not have the proper\n            permissions for this call.\n          content: {}\n        404:\n          description: Listing is limited cannot add team Or Invalid Listing ids.\n          content: {}\n  /collections/{collectionId}/courses:\n    post:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Add Courses to a Collection\n      description: Add course records into the content set of a collection record.\n      operationId: AddCoursestoaCollection\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body'\n        required: true\n      responses:\n        200:\n          description: Created.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Please provide maximum 25 courses in the xml/json body! Or\n            You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The collectionId - collectionId does not exist or no courses\n            were included in the xml/json body or courses that you requested does\n            not exist Or Not Found - The courses do not exist.\n          content: {}\n        409:\n          description: Conflict - Duplicate courses in the request Or One or more\n            of these records are invalid, inactive or do not exist Or Conflict - One\n            or more courses have already been added to the Collection.\n          content: {}\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Remove a Course from a Collection\n      description: Remove a course record from the content set of a collection.\n      operationId: RemoveaCoursefromaCollection\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Courses must be deleted one by one Or You do not have the proper\n            permissions for this call.\n          content: {}\n        404:\n          description: The collectionId - collectionId does not exist or no courses\n            were included in the xml/json body or courses that you requested does\n            not exist Or The collection does not exist Or The course does not exist\n            Or The collection does not have the course assigned to it.\n          content: {}\n      x-codegen-request-body-name: Body\n  /collections/{collectionId}/learningpaths:\n    post:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Add LearningPaths to a Collection\n      description: Add learning path records into the content set of a collection\n        record.\n      operationId: AddLearningPathstoaCollection\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_2'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_2'\n        required: true\n      responses:\n        201:\n          description: Created.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Please provide maximum 25 learningpaths in the xml/json body!\n            Or You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The collectionId - collectionId does not exist or no learningpaths\n            were included in the xml/json body or learningpaths that you requested\n            does not exist Or Not Found - The learningpaths do not exist.\n          content: {}\n        409:\n          description: Conflict - Duplicate learningpaths in the request Or One or\n            more of these records are invalid, inactive or do not exist Or Conflict\n            - One or more learningpaths have already been added to the Collection.\n          content: {}\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Remove a Learning Path from a Collection\n      description: Remove a learning path record from the content set of a collection.\n      operationId: RemoveaLearningPathfromaCollection\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Learningpaths must be deleted one by one Or You do not have\n            the proper permissions for this call.\n          content: {}\n        404:\n          description: The collectionId - collectionId does not exist or no learningpaths\n            were included in the xml/json body or learningpaths that you requested\n            does not exist Or The collection does not exist Or The learningpath does\n            not exist Or The collection does not have the learningpath assigned to\n            it.\n          content: {}\n      x-codegen-request-body-name: Body\n  /collection/{collectionId}:\n    delete:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Delete Collection\n      description: Delete a collection record. This can only be done once all collection\n        listings are deleted.\n      operationId: DeleteCollection\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: One or more Listings Exists Or Invalid CollectionID Or You\n            do not have the proper permissions for this call.\n          content: {}\n        409:\n          description: The Collection Id do not match. Please check the XML/json request\n            and the URL.\n          content: {}\n  /collectionlistings/{collectionId}/{listingId}:\n    delete:\n      tags:\n      - Collections \u0026 Collection Listings\n      summary: Delete a Collection Listing\n      description: Delete a collection listing entitlement record. This can only be\n        done once all users and teams are removed from the collection listing entitlement.\n      operationId: DeleteCollectionListing\n      parameters:\n      - name: collectionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: listingId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Invalid CollectionID Or Invalid ListingID Or One or more Users\n            exists in the listing Or You do not have the proper permissions for this\n            call.\n          content: {}\n        409:\n          description: The Listing Id or Collection Id do not match. Please check\n            the XML/json request and the URL.\n          content: {}\n  /courses:\n    get:\n      tags:\n      - Courses\n      summary: Get a List of Courses\n      description: Get a list of all course records.\n      operationId: GetaListofCourses\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Courses'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Courses'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n  /courses/{courseId}:\n    get:\n      tags:\n      - Courses\n      summary: Get Course\n      description: Get the basic information for a course record.\n      operationId: GetCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Course'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Course'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. or You do not have the proper permissions for this\n            call\n          content: {}\n        404:\n          description: The course courseId does not exist.\n          content: {}\n    delete:\n      tags:\n      - Courses\n      summary: Delete Course\n      description: Delete a course record.\n      operationId: DeleteCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Invalid ProgramID or You do not have the proper permissions\n            for this call.\n          content: {}\n        409:\n          description: The Course Id do not match. Please check the XML/json request\n            and the URL.\n          content: {}\n  /courses/{courseId}/details:\n    get:\n      tags:\n      - Courses\n      summary: Get Course Details\n      description: Get all the details of a course record.\n      operationId: GetCourseDetails\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_1'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The Course  courseId  is invalid or does not exist!\n          content: {}\n        409:\n          description: The Course Id do not match. Please check the XML/json request\n            and the URL.\n          content: {}\n        500:\n          description: Error while processing request\n          content: {}\n  /courses/{courseId}/users:\n    get:\n      tags:\n      - Courses\n      summary: List All Users Assigned to a Course\n      description: Get a list of all user records assigned to a course.\n      operationId: ListAllUsersAssignedtoaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_2'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n  /courses/{courseId}/modules:\n    get:\n      tags:\n      - Courses\n      summary: List all Modules in a Course\n      description: Get a list of all module records added to a course.\n      operationId: ListAllModulesInaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Modules'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Modules'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n  /results/details:\n    get:\n      tags:\n      - Courses\n      summary: List All Course Results for All Users Since a Specific Date\n      description: Get a list of all course results for all user records since a specific\n        date.\n      operationId: ListAllCourseResultsforAllUsersSinceaSpecificDate\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_3'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        406:\n          description: The maxminum number of records to return is 1000. You can use\n            paging parameters to return records in groups of 1000 or Please provide\n            a valid 'since=' query string parameter. Valid formats are 'yyyy-MM-dd\n            HH:mm:ss' or 'yyyy-MM-dd HH:mm' or 'yyyy-MM-dd'\n          content: {}\n  /courses/{courseId}/coursecustomfields:\n    get:\n      tags:\n      - Courses\n      summary: Get Custom Fields for a Course\n      description: Get the values of the custom fields for a course record.\n      operationId: GetCustomFieldsforaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_4'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_4'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /coursecustomfields:\n    get:\n      tags:\n      - Course Custom Fields\n      summary: Get Course Custom Fields\n      description: Get all custom field details including attributes and values.\n      operationId: GetCourseCustomFields\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CourseCustomFields'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CourseCustomFields'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /coursecustomfields/{customFieldId}:\n    get:\n      tags:\n      - Course Custom Fields\n      summary: Get Value for Custom Field Id Across All Courses\n      description: Get the details of a custom field record including attributes and\n        values.\n      operationId: GetCourseCustomFieldValueonAllCourses\n      parameters:\n      - name: customFieldId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/CourseCustomField'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CourseCustomField'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /org/modules:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Modules\n      description: Get all the module records in an organization that was created/\n        updated within a given date range.\n      operationId: GetModules\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_5'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_5'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /org/courses:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Courses\n      description: Get all the course records in your organization that were created\n        or updated within a given date range.\n      operationId: GetCourses\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_6'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_6'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /org/learningpaths:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Learning Paths\n      description: Get all learning path records that were created/updated within\n        a given date range.\n      operationId: GetLearningPaths\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_7'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_7'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /org/modules/results:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Modules Results\n      description: Get a list of all user module result records that have changed\n        within a given date range. parameters you can use.\n      operationId: GetModulesResults\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_8'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_8'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /org/results/details:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Course Results\n      description: Get a list of all user course result records that have changed\n        within a given date range.\n      operationId: GetCourseResults\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_9'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_9'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Forbidden. Please check your API key, content-type, parameters,\n            etc.\n          content: {}\n        404:\n          description: Not Found. The record you requested does not exist.\n          content: {}\n        503:\n          description: Service Unavailable. The API rating limit has been exceeded.\n          content: {}\n  /org/learningpaths/results:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Learning Path Results\n      description: Get a list of all user learning paths result records that have\n        changed within a given date range.\n      operationId: GetLearningPathResults\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_10'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_10'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/achievements:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Achievements\n      description: Get a list of all user records that have earned achievements within\n        a given date range.\n      operationId: GetAchievements1\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_11'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_11'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/courses/modules:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Course Modules\n      description: Get all module records added or removed from a course within a\n        given date range.\n      operationId: GetCourseModules\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_12'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_12'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/learningpaths/courses:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Learning Path Courses\n      description: Get all course records added or removed from a learning path within\n        a given date range.\n      operationId: GetLearningPathCourses\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_13'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_13'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/users/courses:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get User Course Assignments\n      description: Get all course records assigned to users within a given date range.\n      operationId: GetUserCourseAssignments\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_14'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_14'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/learningpaths/users:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get User Learning Path Assignments\n      description: Get all learning path records assigned to users within a given\n        date range.\n      operationId: GetUserLearningPathAssignments\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_15'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_15'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/teams:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Teams\n      description: Get all team records that were created or modified within a given\n        date range.\n      operationId: GetTeams\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_16'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_16'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/teams/users:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get  Team Users\n      description: Get all user team assignment records that were created or modified\n        within a given date range. \n      operationId: GetTeamUsers\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_17'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_17'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/teams/courses:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get Team Courses\n      description: Get all team course assignment recors that were created or modified\n        within a given date range.\n      operationId: GetTeamCourses\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_18'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_18'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/teams/learningpaths:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get  Team Learning Paths\n      description: Get all team learning path assignment records that were created\n        or modified within a given date range.\n      operationId: GetTeamLearningPaths\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_19'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_19'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/users/logins:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get User Logins\n      description: Get a list of user records including 'active' and 'inactive' that\n        have logged into the application within a given date range.\n      operationId: GetUserLogins\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_20'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_20'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/users/details:\n    get:\n      tags:\n      - Date Range API's\n      summary: Get User Details\n      description: Get a list of user records including 'active' and 'inactive' that\n        have been created or updated within a given date range.\n      operationId: GetUserDetails\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_20'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_20'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/ecommerce/coursesessions:\n    get:\n      tags:\n      - Ecommerce\n      summary: Get a List of Future ILT Sessions within Courses Enabled for Ecommerce\n      description: Get a list of course records enabled for ecommerce that contain\n        future dated ILT sessions that have been created or updated within a given\n        date range.\n      operationId: GetaListofFutureILTSessionswithinCoursesEnabledforEcommerce\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/ecommerce/courses:\n    get:\n      tags:\n      - Ecommerce\n      summary: Get a List of Courses Enabled for Ecommerce\n      description: Get a list of course records enabled for ecommerce that have been\n        created or updated within a given date range.\n      operationId: GetaListofCoursesEnabledforEcommerce\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_21'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_21'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/ecommerce/learningpaths:\n    get:\n      tags:\n      - Ecommerce\n      summary: Get a List of Learning Paths Enabled for Ecommerce\n      description: Get a list of learning path records enabled for ecommerce that\n        have been created or updated within a given date range.\n      operationId: GetaListofLearningPathsEnabledforEcommerce\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_22'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_22'\n        400:\n          description: Bad Request. Please check that your URI and request body are\n            properly formed.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /users/{userId}/gamificationsummary:\n    get:\n      tags:\n      - Gamification\n      summary: Get Total Badges and Points For User\n      description: Get the number of badges and total points for a user record.\n      operationId: GetTotalBadgesandPointsForUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_23'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_23'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Gamification is not enabled in the organisation or You do not\n            have the proper permissions for this call.\n          content: {}\n        404:\n          description: The user in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /users/{userId}/badges:\n    get:\n      tags:\n      - Gamification\n      summary: Get Total Badges Earned By a User\n      description: Get the number of badges earned by a user\n      operationId: GetTotalBadgesForUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_24'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_24'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Gamification is not enabled in the organisation or You do not\n            have the proper permissions for this call.\n          content: {}\n        404:\n          description: The user in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /users/{userId}/gamificationdetails:\n    get:\n      tags:\n      - Gamification\n      summary: Get Badges and Points Earned By User\n      description: Get the badge and point details for each course record or learning\n        path record completed by a user.\n      operationId: GetBadgesandPointsEarnedByUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The user in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /teams/{teamId}/gamificationdetails:\n    get:\n      tags:\n      - Gamification\n      summary: Get Badges and Points Earned by a Team\n      description: Get the badge and point details for each course record or learning\n        path record completed by a user belonging to a team record.\n      operationId: GetBadgesandPointsEarnedbyaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The team in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /users/{userId}/gamificationreset:\n    put:\n      tags:\n      - Gamification\n      summary: Reset Badges and Points For  a User\n      description: Resets the gamification badge records and point records earned\n        by a user.\n      operationId: ResetBadgesandPointsForaUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The user does not exist.\n          content: {}\n        500:\n          description: Reset Gamification for user failed\n          content: {}\n      deprecated: false\n  /sessions/future:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a List of Future Sessions for an ILT Module\n      description: Get a list of future dated live session event records from all\n        ILT modules.\n      operationId: GetaListofFutureSessionsforanILTModule\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: sort\n        in: query\n        description: Field used to sort the records\n        schema:\n          type: string\n      - name: dir\n        in: query\n        description: Direction to sort the records\n        schema:\n          type: string\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: since\n        in: query\n        description: Date-time\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /sessions/past:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a List of Past Sessions for an ILT Module\n      description: Get a list of live session event records from the past across all\n        ILT modules.\n      operationId: GetaListofPastSessionsforanILTModule\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: sort\n        in: query\n        description: Field used to sort the records\n        schema:\n          type: string\n      - name: dir\n        in: query\n        description: Direction to sort the records\n        schema:\n          type: string\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: since\n        in: query\n        description: Date-time\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /courses/{courseId}/modules/ILT:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a List of all ILT Modules in a Course\n      description: Get a list of ILT Module records in a course.\n      operationId: GetaListofallILTModulesinaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n  /courses/{courseId}/modules/{moduleId}/sessions:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a List of Sessions in an ILT Module\n      description: Get a list of live session event records in an ILT module.\n      operationId: GetaListofSessionsinanILTModule\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Create a New ILT Session for a Module\n      description: Creates a new live session event record in an ILT module that belongs\n        to a course.  Class Room, Webinar, Webex Training, GoToTraining and Zoom live\n        session events can be created.\n      operationId: CreateaNewILTSessionforaModule\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Session'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Session'\n        required: true\n      responses:\n        201:\n          description: Created.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call. or Instructor\n            is not valid. please cross check once and try again. or Your WebEx account\n            is not authorized.\n          content: {}\n        404:\n          description: The session in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/{moduleId}/sessions/{sessionId}:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a Specific Session in an ILT Module\n      description: Get the details for a live session event record in an ILT module\n        in a course.\n      operationId: GetaSpecificSessioninanILTModule\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The  sessionId does not exist. or The session in the xml/json\n            request does not exist\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Update a Session in an ILT Module\n      description: Update the details of a live session event record belonging to\n        an ILT module in a course.\n      operationId: UpdateaSessioninanILTModule\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Session'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Session'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call. or Instructor\n            is not valid. please cross check once and try again.\n          content: {}\n        404:\n          description: The session Ids do not match. Please check the XML/json request\n            and the URL. or The session in the xml/json request does not exist.\n          content: {}\n        409:\n          description: Conflict\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Delete a Session in an ILT Module.\n      description: Delete a live session event record from an ILT module in a course.\n      operationId: DeleteaSessioninanILTModule.\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: \"\"\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No session with this id exists in your organization\n          content: {}\n        409:\n          description: The session Ids do not match. Please check the XML/json request\n            and the URL.\n          content: {}\n      deprecated: false\n  /instructors:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a List of All Instructors\n      description: Get a list of all instructors for live session events.\n      operationId: GetaListofAllInstructors\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n  /instructors/{instructorId}/sessions:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a List of Sessions for a Specific Instructor\n      description: Get a list of the live session events for an instructor.\n      operationId: GetaListofSessionsforaSpecificInstructor\n      parameters:\n      - name: instructorId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The instructor in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /courses/{courseId}/modules/{moduleId}/sessions/{sessionId}/rollcall:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get Session Roll Call for a Session\n      description: Get a list of users that are registered to a live session event\n        belonging to an ILT module in a course.\n      operationId: GetSessionRollCallforaSession\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The session in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Mark an ILT Session Complete and Add Score\n      description: Update the scores and completions for a list of users registered\n        to a live session event belonging to an ILT module in a course.\n      operationId: MarkanILTSessionCompleteandAddScore\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/EventUsers'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventUsers'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No session with this id exists in your organization. or The\n            session in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/{moduleId}/registration:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get a list of Users Registered to a Session\n      description: Get a list of users registered to a live session event belonging\n        to an ILT module in a course.\n      operationId: GetalistofUsersRegisteredtoaSession\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The module in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /courses/{courseId}/modules/{moduleId}/sessions/{sessionId}/users/{userId}/register:\n    post:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Register a User to a Session\n      description: Register a user record to a live session event belonging to an\n        ILT module in a course.\n      operationId: RegisteraUsertoaSession\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No session with this id exists in your organization or The\n            module in the xml/json request does not exist.\n          content: {}\n        409:\n          description: The email is required to register at GoToTraining. Register\n            failed at GoToTraining. or Please reauthorize instructor and try again.\n            or The email is required to register at Webex. Register failed at Webex.or\n            The email is required to register at Zoom. Register failed at Zoom.or\n            The user is not assigned to the course. Please assign the user to this\n            course first and then register the user for this session.\n          content: {}\n      deprecated: false\n  /courses/{courseId}/modules/{moduleId}/sessions/{sessionId}/users/register:\n    post:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Register a List of Users to a Session\n      description: Register a list of users to a live training session event.\n      operationId: RegisteraListofUserstoaSession\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Users'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Users'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserSessionRegistrationStatus'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSessionRegistrationStatus'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No session with this id exists in your organization or The\n            module in the xml/json request does not exist.\n          content: {}\n        409:\n          description: The email is required to register at GoToTraining. Register\n            failed at GoToTraining. or Please reauthorize instructor and try again.\n            or The email is required to register at Webex. Register failed at Webex.or\n            The email is required to register at Zoom. Register failed at Zoom.or\n            The user is not assigned to the course. Please assign the user to this\n            course first and then register the user for this session.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/{moduleId}/sessions/{sessionId}/attendance:\n    get:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Get user Attendance for a Session\n      description: Get a list of user records that attended a live session event belonging\n        to an ILT module in a course.\n      operationId: GetuserAttendanceforaSession\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessionId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call or Please\n            reauthorize instructor and try again.\n          content: {}\n        404:\n          description: The session in the xml/json request does not exist\n          content: {}\n      deprecated: false\n  /courses/{courseId}/modules/{moduleId}/sessiondays/{sessiondayId}/users/{userId}/attended/{attended}:\n    post:\n      tags:\n      - Instructor Led Training (ILT)\n      summary: Mark Attendance for a User Registered to a Session\n      description: Mark attendance for a user registered to a live session event belonging\n        to an ILT module in a course.\n      operationId: MarkAttendanceforUsersRegisteredtoaSession\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: sessiondayId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: attended\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The session in the xml/json request does not exist.\n          content: {}\n      deprecated: false\n  /learningpaths:\n    get:\n      tags:\n      - Learning Paths\n      summary: Get All Learning Paths\n      description: Get a list of all learning paths records.\n      operationId: GetAllLearningPaths\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LearningPaths'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LearningPaths'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n  /learningpaths/{learningpathId}:\n    get:\n      tags:\n      - Learning Paths\n      summary: Get a learning path\n      description: Get a learning path record. Returns a Single Learning Path. Access\n        Level - Account Owners \u0026 Administrators\n      operationId: GetaSpecificLearningPath\n      parameters:\n      - name: learningpathId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LearningPath'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LearningPath'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The learning path does not exist.\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - Learning Paths\n      summary: Delete Learning Path\n      description: Delete a learning path record.\n      operationId: DeleteLearningPath\n      parameters:\n      - name: learningpathId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        409:\n          description: The Learning Path Id do not match. Please check the XML/json\n            request and the URL.\n          content: {}\n      deprecated: false\n  /learningpaths/{learningpathId}/courses:\n    get:\n      tags:\n      - Learning Paths\n      summary: Get a List of Courses in a Learning Path\n      description: Get a list of course records that belong to a learning path. Returns\n        a list of Courses that have been added to a Learning Path. Access Level -\n        Account Owners \u0026 Administrators\n      operationId: GetaListofCoursesinaLearningPath\n      parameters:\n      - name: learningpathId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: \"\"\n          content: {}\n      deprecated: false\n  /learningpaths/{learningpathId}/users:\n    get:\n      tags:\n      - Learning Paths\n      summary: Get a List of Users Assigned to a Learning Path\n      description: Get a list of user records that are assigned to a learning path.\n      operationId: GetaListofUsersAssignedtoaLearningPath\n      parameters:\n      - name: learningpathId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The learning path does not exist.\n          content: {}\n      deprecated: false\n  /teams/{teamId}/learningpaths:\n    get:\n      tags:\n      - Team Learning Paths\n      summary: Get Learning Paths Assigned to a Team\n      description: Get a list of all learning path records that are assigned to the\n        team.\n      operationId: GetLearningPathsAssignedtoaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LearningPaths'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LearningPaths'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The team  teamId   does not exist\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Team Learning Paths\n      summary: Assign a List of Learning Paths to Team\n      description: Assign a list of learning path records to a team. These learning\n        paths will appear on the \"to-do\" list for users that belong to the team.\n      operationId: AssignaListofLearningPathstoTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_4'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_4'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No team with this id exists in your organization, or there\n            was no valid Learning Path Id in the body of the request.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Team Learning Paths\n      summary: Unassign a List of Learning Paths from Team\n      description: Remove a list of learning path records assigned to a Team. These\n        learning paths will no longer appear on the \"to-do\" list for users that belong\n        to the team.\n      operationId: UnassignaListofLearningPathsfromTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No team with this id exists in your organization or there was\n            no valid Learning Path Id in the body of the request.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /modules/{moduleId}:\n    get:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Get a Module\n      description: Get the content and details of a SCORM, Tin Can or AICC file.\n      operationId: GetaModule\n      parameters:\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Module'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Module'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Update a SCORM/Tin Can Module\n      description: Update the content and details of SCORM, Tin Can or AICC file.\n      operationId: UpdateaSCORM/TinCanModule\n      parameters:\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Module'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Module'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Modules\n      summary: Delete Module\n      description: Delete the content and details of a SCORM, Tin Can or AICC file.\n      operationId: DeleteModule\n      parameters:\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n  /results/modules/{moduleId}:\n    put:\n      tags:\n      - Modules\n      summary: Mark a Module Complete\n      description: Mark a module record complete for a user.\n      operationId: MarkaModuleComplete\n      parameters:\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/ModuleResult'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModuleResult'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /modules:\n    post:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Create a SCORM/Tin Can Module\n      description: Upload the content and create the details for an elearning file.\n      operationId: CreateaSCORM/TinCanModule\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Module'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Module'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/copy:\n    post:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Copy SCORM/Tin Can Module to a Course\n      description: Copy an elearning module into a course record.\n      operationId: CopySCORM/TinCanModuletoaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Modules'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Modules'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/link:\n    post:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Link SCORM/Tin Can Module to a Course\n      description: Link an elearning module into a course record.\n      operationId: LinkSCORM/TinCanModuletoaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Modules'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Modules'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/mirror:\n    post:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Mirror SCORM/Tin Can Module to a Course\n      description: Mirror an elearning module into a course record.\n      operationId: MirrorSCORM/TinCanModuletoaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Modules'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Modules'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /courses/{courseId}/modules/{moduleId}:\n    delete:\n      tags:\n      - SCORM \u0026 Tin Can eLearning Files\n      summary: Remove SCORM/Tin Can Module from a Course\n      description: Remove an eLearning module from a course record.\n      operationId: RemoveSCORM/TinCanModulefromaCourse\n      parameters:\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: moduleId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n  /tokens/{tokenId}:\n    get:\n      tags:\n      - Self Signup Tokens\n      summary: Get a Token\n      description: Get a self signup token record.\n      operationId: GetaToken\n      parameters:\n      - name: tokenId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Token'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Token'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Self Sign Up feature is not enabled. or You do not have the\n            proper permissions for this call. or The token in the xml/json request\n            does not exist.\n          content: {}\n      deprecated: false\n  /tokens:\n    get:\n      tags:\n      - Self Signup Tokens\n      summary: Get A List of Tokens\n      description: Get a list of self signup token records.\n      operationId: GetAListofTokens\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Tokens'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tokens'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Self Sign Up feature is not enabled or You do not have the\n            proper permissions for this call.\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - Self Signup Tokens\n      summary: Update a Token\n      description: Update the settings of a self signup token record.\n      operationId: UpdateaToken\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Tokens'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tokens'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Self Sign Up feature is not enabled or System doesn't support\n            creation or updation of more than 100 tokens in a single bulk import or  You\n            do not have the proper permissions for this call\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    post:\n      tags:\n      - Self Signup Tokens\n      summary: Create a Token\n      description: Create a new self signup token record.\n      operationId: CreateaToken\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Tokens'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tokens'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: Self Sign Up feature is not enabled or System doesn't support\n            creation or updation of more than 100 tokens in a single bulk import or  You\n            do not have the proper permissions for this call\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /org/activities/actions:\n    get:\n      tags:\n      - Activity Logs\n      summary: Get Actions Activity\n      description: Get the recent system activity logs for user actions.\n      operationId: GetActionsActivity\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ActionActivitys'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActionActivitys'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid 'since' and 'to' query string parameters\n          content: {}\n      deprecated: false\n  /org/activities/assignments:\n    get:\n      tags:\n      - Activity Logs\n      summary: Get Assignments Activity\n      description: Get the recent system activity logs for user assignments.\n      operationId: GetAssignmentsActivity\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/AssignmentActivitys'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssignmentActivitys'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\"\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/activities/content:\n    get:\n      tags:\n      - Activity Logs\n      summary: Get Content Activity\n      description: Get the recent system activity logs for content updates.\n      operationId: GetContentActivity\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/ContentActivitys'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentActivitys'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/activities/logins:\n    get:\n      tags:\n      - Activity Logs\n      summary: Get Login Activity\n      description: Get the recent system activity logs for user logins.\n      operationId: GetLoginActivity\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/LoginActivitys'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginActivitys'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /org/activities/settings:\n    get:\n      tags:\n      - Activity Logs\n      summary: Get Settings Activity\n      description: Get the recent system activity logs for settings updates.\n      operationId: GetSettingsActivity\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: since\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      - name: to\n        in: query\n        required: true\n        schema:\n          type: string\n          format: date-time\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/SettingsActivitys'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsActivitys'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please provide a valid since and to query string parameters\n          content: {}\n      deprecated: false\n  /users:\n    get:\n      tags:\n      - Users\n      summary: List of Users\n      description: Get a list of all user records.\n      operationId: ListofUsers\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: sort\n        in: query\n        description: Field used to sort the records\n        schema:\n          type: string\n      - name: dir\n        in: query\n        description: Direction to sort the records\n        schema:\n          type: string\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: showInactive\n        in: query\n        description: boolean value used to the filter active/inactive records\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_25'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_25'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Users\n      summary: Create User\n      description: Creates a new user record. By default, no emails will be sent when\n        the user is created and the user will be prompted to set a password on the\n        first login to the application. There are a mandatory list of fields that\n        must be passed in order to create a user, and that list is order sensitive.\n      operationId: CreateUser\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: sendmessage\n        in: query\n        description: set to \"True\" to send login emails to new users\n        schema:\n          type: boolean\n      - name: skipfirstlogin\n        in: query\n        description: set to \"True\" to have users skip setting a password after logging\n          in\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Please check the xml/json in the body of the request. OR Mobile\n            Number required to enable text message notifications OR Invalid Phone\n            Number. The mobile phone should be in this format +15554443333. Be sure\n            to include your country code.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        409:\n          description: UserName already exists OR Username must be greater than 3\n            characters. OR Invalid special character's in the username. OR Invalid\n            email address. OR Culture is invalid OR Job Role is invalid\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /users/paginated:\n    get:\n      tags:\n      - Users\n      summary: List of Users With Summary of User Pagination Details\n      description: Get a list of all user records with summarized pagination information\n      operationId: ListofUsersPaginated\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: sort\n        in: query\n        description: Field used to sort the records\n        schema:\n          type: string\n      - name: dir\n        in: query\n        description: Direction to sort the records\n        schema:\n          type: string\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: showInactive\n        in: query\n        description: boolean value used to the filter active/inactive records\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/UserCollection'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCollection'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n  /users/{userId}:\n    get:\n      tags:\n      - Users\n      summary: Get User by User Id\n      description: Get the details of a single user record.\n      operationId: GetUserbyUserId\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: User - userId was not found in Salesforce OR User - userId\n            was not found\n          content: {}\n      deprecated: false\n    put:\n      tags:\n      - Users\n      summary: Update User\n      description: Update a user record.  There are a mandatory list of fields that\n        must be passed in order to update a user, and that list is order sensitive.\n      operationId: UpdateUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Please check the xml/json in the body of the request OR Mobile\n            Number required to enable text message notifications OR Invalid Phone\n            Number. The mobile phone should be in this format +15554443333. Be sure\n            to include your country code.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: Please check the userid in the xml/json and the userid in the\n            URL. They must match. OR The manager Id in the xml/json is not valid.\n          content: {}\n        409:\n          description: UserName already exists OR Invalid special character's in the\n            username. OR Culture is invalid OR Job Role is invalid OR Invalid email\n            address\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Users\n      summary: Delete a User\n      description: Delete a user record.  This is a hard delete so the user record\n        cannot be recovered.\n      operationId: DeleteaUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: No user with this id exists in your organization OR You do\n            not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No user with this id exists in your organization\n          content: {}\n      deprecated: false\n  /users/details:\n    get:\n      tags:\n      - Users\n      summary: Get a List of Users with Details\n      description: Get a list of all user records with user record details. By default\n        only the first 100 people are returned. The list can be filtered on first\n        or last name, paged using the optional paging parameters, and created date.\\r\\n\\r\\nTo\n        return users with a Created Date after a specific date add \"\u0026since=YYYY-MM-DD\"\n        to the end of the request.  For example -  \\r\\n\\r\\nGET https://api.litmos.com/v1.svc/users/details?source=MY-APP\u0026since=2015-12-09\\r\\n\\r\\nAccess\n        Level - Account Owners Only\n      operationId: GetaListofUserswithDetails\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: sort\n        in: query\n        description: Field used to sort the records\n        schema:\n          type: string\n      - name: dir\n        in: query\n        description: Direction to sort the records\n        schema:\n          type: string\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      - name: since\n        in: query\n        description: Date-time\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_26'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_26'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        406:\n          description: Please enter a valid date in the 'since' parameter OR Please\n            provide a valid since parameter. Valid formats are  - \"yyyy-MM-dd HH:mm:ss\"\n            or \"yyyy-MM-dd HH:mm\" or \"yyyy-MM-dd\"\n          content: {}\n      deprecated: false\n  /users/{userId}/usercustomfields:\n    get:\n      tags:\n      - Users Custom Fields\n      summary: Get Advanced Custom Fields for User\n      description: Get a list of the user custom fields configured for the organization.\n      operationId: GetAdvancedCustomFieldsforUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_27'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_27'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The user does not exist.\n          content: {}\n        500:\n          description: Reset Gamification for user failed\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Users Custom Fields\n      summary: Add Advanced Custom Fields for User\n      description: Update the user custom field values for a user record.\n      operationId: AddAdvancedCustomFieldsforUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_5'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_5'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Please check the xml/json in the body of the request.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: A value for custom field is required or User   was not found\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /users/{userId}/courses:\n    get:\n      tags:\n      - Users Courses\n      summary: List All Courses Assigned to a User\n      description: Get a list of courses assigned to a user record with each course\n        status.\n      operationId: ListAllCoursesAssignedtoaUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_28'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_28'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n    post:\n      tags:\n      - Users Courses\n      summary: Assign Courses to User\n      description: Assign a list of course records to a User. By default, emails will\n        be sent when the user when the courses are assigned.\n      operationId: AssignCoursestoUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: sendmessage\n        in: query\n        schema:\n          type: boolean\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_6'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_6'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        500:\n          description: Create Course Bulk Import Failed\n          content: {}\n      x-codegen-request-body-name: Body\n  /users/{userId}/courses/{courseId}/reset:\n    put:\n      tags:\n      - Users Courses\n      summary: Reset Course Results\n      description: Reset a user's course result record. This will revert the course\n        to incomplete with 0% completion status and move the course back to the learners\n        \"to-do\" list.\n      operationId: ResetCourseResults\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n  /users/{userId}/courses/{courseId}:\n    delete:\n      tags:\n      - Users Courses\n      summary: Unassign Course from User\n      description: Unassign a course record from a user.\n      operationId: UnassignCoursefromUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: courseId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        406:\n          description: The course - courseId can't be removed from userId because\n            it is part of a learning path. Remove the user from the learning path\n            or remove the course from the learning path.\n          content: {}\n  /users/courses:\n    post:\n      tags:\n      - Users Courses\n      summary: Get Courses Assigned For a List of Users\n      description: Get the course assignments for a specific list of users (no greater\n        than a list of 25 users).\n      operationId: GetCourseAssignmentsForListOfUsers\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_7'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_7'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        406:\n          description: The course - courseId can't be removed from userId because\n            it is part of a learning path. Remove the user from the learning path\n            or remove the course from the learning path.\n          content: {}\n      x-codegen-request-body-name: Body\n  /users/{userId}/learningpaths:\n    get:\n      tags:\n      - Users Learning Paths\n      summary: Get a List of Learning Paths Assigned to a User\n      description: Get a list of learning path records assigned to a user.\n      operationId: GetaListofLearningPathsAssignedtoaUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_29'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_29'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Users Learning Paths\n      summary: Assign Learning Paths to User\n      description: Assigns a list learning path records to a user.\n      operationId: AssignLearningPathsToUser\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_8'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_8'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: The LearningPath Id can't be null. Check the body for the proper\n            format.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The userid does not exist or no valid learning paths were included\n            in the request. Check the body for the proper format.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /users/{userId}/learningpaths/{learningpathId}:\n    delete:\n      tags:\n      - Users Learning Paths\n      summary: Un-Assign Users from a Learning Path\n      description: Unassign a learning path record from a user.\n      operationId: Un-AssignUsersfromaLearningPath\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: learningpathId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The Learning Path  does not exist.\n          content: {}\n        406:\n          description: The Learning Path  can't be removed because it was assigned\n            via a Team. Remove the user from the team or remove the learning path\n            from the team.\n          content: {}\n      deprecated: false\n  /users/{userId}/teams:\n    get:\n      tags:\n      - Users Teams\n      summary: Get a list of All Teams a User is Assigned to\n      description: Get a list of all team records a user is assigned to.\n      operationId: GetalistofAllTeamsaUserisAssignedto\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Teams'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Teams'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Users Teams\n      summary: Assign a User to a List of Teams\n      description: Assign a user record to a list of teams.\n      operationId: AssignaUsertoaListofTeams\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: sendmessage\n        in: query\n        description: set to \"True\" to send login emails to new users\n        schema:\n          type: boolean\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Teams'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Teams'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: Invalid Team Id found in the list or Maximum TeamIds is 25\n          content: {}\n        409:\n          description: The user already belongs to one or more of the teams\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Users Teams\n      summary: Unassign a User from All Teams\n      description: Unassign a user record from all teams the user is assigned to.\n      operationId: UnassignaUserfromAllTeams\n      parameters:\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: The userid does not exist.\n          content: {}\n      deprecated: false\n  /{LitmosDomain}/{DBinstance}/statements:\n    post:\n      tags:\n      - xAPI\n      summary: Add a Statement\n      operationId: AddaStatement\n      parameters:\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      - name: LitmosDomain\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: DBinstance\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example: \"{ \\\"version\\\": \\\"1.0.0\\\",\\r\\n    \\\"id\\\": \\\"01c01e01-b123-4567-b890-01ce011fe1af\\\"\\\n                ,\\r\\n    \\\"actor\\\": {\\r\\n        \\\"objectType\\\": \\\"Agent\\\",\\r\\n  \\\n                \\      \\\"name\\\": \\\"Lt. Pete\\\",\\r\\n        \\\"mbox\\\": \\\"mailto:Maverick@topgun.com\\\"\\\n                \\r\\n    },\\r\\n    \\\"verb\\\": {\\r\\n        \\\"id\\\": \\\"http://activitystrea.ms/schema/1.0/experience\\\"\\\n                ,\\r\\n        \\\"display\\\": {\\r\\n            \\\"en-US\\\": \\\"completed\\\"\\\n                \\r\\n        }\\r\\n    },\\r\\n    \\\"object\\\": {\\r\\n        \\\"objectType\\\"\\\n                : \\\"Activity\\\",\\r\\n        \\\"id\\\": \\\"http://example.com/activities/figher-pilot-combat-TopGun\\\"\\\n                ,\\r\\n        \\\"definition\\\": {\\r\\n            \\\"name\\\": {\\r\\n    \\\n                \\            \\\"en-US\\\": \\\"Top Gun Simulation\\\"\\r\\n            },\\r\\\n                \\n            \\\"description\\\": {\\r\\n                \\\"en-US\\\": \\\"\\\n                The Top Gun Naval Fighter Weapons School is where the best of the\\\n                \\ best train to refine their elite flying skills.\\\"\\r\\n          \\\n                \\  },\\r\\n            \\\"type\\\": \\\"http://adlnet.gov/expapi/activities/simulation\\\"\\\n                ,\\r\\n            \\\"extensions\\\": {\\r\\n                \\\"http://example.com/gliderClubId\\\"\\\n                : \\\"Sim-101\\\"\\r\\n            }\\r\\n        }\\r\\n    },\\r\\n    \\\"result\\\"\\\n                : {\\r\\n        \\\"score\\\": {\\r\\n            \\\"scaled\\\": 0.95\\r\\n  \\\n                \\      },\\r\\n        \\\"success\\\": true,\\r\\n        \\\"completion\\\"\\\n                : true,\\r\\n        \\\"extensions\\\": {\\r\\n            \\\"http://example.com/flight/averagePitch\\\"\\\n                : 0.25\\r\\n        }\\r\\n    },\\r\\n    \\\"timestamp\\\": \\\"2020-01-01T14:00:00.000Z\\\"\\\n                ,\\r\\n    \\\"stored\\\": \\\"2020-01-01T14:05:25.000Z\\\",\\r\\n    \\\"authority\\\"\\\n                : {\\r\\n        \\\"objectType\\\": \\\"Agent\\\",\\r\\n        \\\"account\\\":\\\n                \\ {\\r\\n            \\\"homePage\\\": \\\"https://www.topgunmovie.com/\\\"\\\n                ,\\r\\n            \\\"name\\\": \\\"cb4b1842-d251-4a4c-b9f0-c8b4a9004d18\\\"\\\n                \\r\\n        }\\r\\n    }\\r\\n}\"\n        required: true\n      responses:\n        200:\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: object\n                example:\n                - 01c01e01-b123-4567-b890-01ce011fe1af\n        400:\n          description: Bad Request\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /{LitmosDomain}/{DBinstance}/statements/statementID={statementId}:\n    put:\n      tags:\n      - xAPI\n      summary: Update a Statement\n      operationId: UpdateaStatement\n      parameters:\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      - name: LitmosDomain\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: DBinstance\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: statementId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: string\n              example: \"{ \\\"version\\\": \\\"1.0.0\\\",\\r\\n    \\\"id\\\": \\\"01c01e01-b123-4567-b890-01ce011fe1af\\\"\\\n                ,\\r\\n    \\\"actor\\\": {\\r\\n        \\\"objectType\\\": \\\"Agent\\\",\\r\\n  \\\n                \\      \\\"name\\\": \\\"Lt. Pete\\\",\\r\\n        \\\"mbox\\\": \\\"mailto:Maverick@topgun.com\\\"\\\n                \\r\\n    },\\r\\n    \\\"verb\\\": {\\r\\n        \\\"id\\\": \\\"http://activitystrea.ms/schema/1.0/experience\\\"\\\n                ,\\r\\n        \\\"display\\\": {\\r\\n            \\\"en-US\\\": \\\"completed\\\"\\\n                \\r\\n        }\\r\\n    },\\r\\n    \\\"object\\\": {\\r\\n        \\\"objectType\\\"\\\n                : \\\"Activity\\\",\\r\\n        \\\"id\\\": \\\"http://example.com/activities/figher-pilot-combat-TopGun\\\"\\\n                ,\\r\\n        \\\"definition\\\": {\\r\\n            \\\"name\\\": {\\r\\n    \\\n                \\            \\\"en-US\\\": \\\"Top Gun Simulation\\\"\\r\\n            },\\r\\\n                \\n            \\\"description\\\": {\\r\\n                \\\"en-US\\\": \\\"\\\n                The Top Gun Naval Fighter Weapons School is where the best of the\\\n                \\ best train to refine their elite flying skills.\\\"\\r\\n          \\\n                \\  },\\r\\n            \\\"type\\\": \\\"http://adlnet.gov/expapi/activities/simulation\\\"\\\n                ,\\r\\n            \\\"extensions\\\": {\\r\\n                \\\"http://example.com/gliderClubId\\\"\\\n                : \\\"Sim-101\\\"\\r\\n            }\\r\\n        }\\r\\n    },\\r\\n    \\\"result\\\"\\\n                : {\\r\\n        \\\"score\\\": {\\r\\n            \\\"scaled\\\": 0.95\\r\\n  \\\n                \\      },\\r\\n        \\\"success\\\": true,\\r\\n        \\\"completion\\\"\\\n                : true,\\r\\n        \\\"extensions\\\": {\\r\\n            \\\"http://example.com/flight/averagePitch\\\"\\\n                : 0.25\\r\\n        }\\r\\n    },\\r\\n    \\\"timestamp\\\": \\\"2020-01-01T14:00:00.000Z\\\"\\\n                ,\\r\\n    \\\"stored\\\": \\\"2020-01-01T14:05:25.000Z\\\",\\r\\n    \\\"authority\\\"\\\n                : {\\r\\n        \\\"objectType\\\": \\\"Agent\\\",\\r\\n        \\\"account\\\":\\\n                \\ {\\r\\n            \\\"homePage\\\": \\\"https://www.topgunmovie.com/\\\"\\\n                ,\\r\\n            \\\"name\\\": \\\"cb4b1842-d251-4a4c-b9f0-c8b4a9004d18\\\"\\\n                \\r\\n        }\\r\\n    }\\r\\n}\"\n        required: true\n      responses:\n        204:\n          description: No Content\n          content: {}\n        400:\n          description: Bad Request\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /{LitmosDomain}/{DBinstance}/statementID={statementId}:\n    get:\n      tags:\n      - xAPI\n      summary: Get a Statement\n      operationId: GetaStatement\n      parameters:\n      - name: LitmosDomain\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: DBinstance\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: statementId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                example: \"{ \\\"version\\\": \\\"1.0.0\\\",\\r\\n    \\\"id\\\": \\\"01c01e01-b123-4567-b890-01ce011fe1af\\\"\\\n                  ,\\r\\n    \\\"actor\\\": {\\r\\n        \\\"objectType\\\": \\\"Agent\\\",\\r\\n\\\n                  \\        \\\"name\\\": \\\"Lt. Pete\\\",\\r\\n        \\\"mbox\\\": \\\"mailto:Maverick@topgun.com\\\"\\\n                  \\r\\n    },\\r\\n    \\\"verb\\\": {\\r\\n        \\\"id\\\": \\\"http://activitystrea.ms/schema/1.0/experience\\\"\\\n                  ,\\r\\n        \\\"display\\\": {\\r\\n            \\\"en-US\\\": \\\"completed\\\"\\\n                  \\r\\n        }\\r\\n    },\\r\\n    \\\"object\\\": {\\r\\n        \\\"objectType\\\"\\\n                  : \\\"Activity\\\",\\r\\n        \\\"id\\\": \\\"http://example.com/activities/figher-pilot-combat-TopGun\\\"\\\n                  ,\\r\\n        \\\"definition\\\": {\\r\\n            \\\"name\\\": {\\r\\n  \\\n                  \\              \\\"en-US\\\": \\\"Top Gun Simulation\\\"\\r\\n           \\\n                  \\ },\\r\\n            \\\"description\\\": {\\r\\n                \\\"en-US\\\"\\\n                  : \\\"The Top Gun Naval Fighter Weapons School is where the best of\\\n                  \\ the best train to refine their elite flying skills.\\\"\\r\\n    \\\n                  \\        },\\r\\n            \\\"type\\\": \\\"http://adlnet.gov/expapi/activities/simulation\\\"\\\n                  ,\\r\\n            \\\"extensions\\\": {\\r\\n                \\\"http://example.com/gliderClubId\\\"\\\n                  : \\\"Sim-101\\\"\\r\\n            }\\r\\n        }\\r\\n    },\\r\\n    \\\"\\\n                  result\\\": {\\r\\n        \\\"score\\\": {\\r\\n            \\\"scaled\\\": 0.95\\r\\\n                  \\n        },\\r\\n        \\\"success\\\": true,\\r\\n        \\\"completion\\\"\\\n                  : true,\\r\\n        \\\"extensions\\\": {\\r\\n            \\\"http://example.com/flight/averagePitch\\\"\\\n                  : 0.25\\r\\n        }\\r\\n    },\\r\\n    \\\"timestamp\\\": \\\"2020-01-01T14:00:00.000Z\\\"\\\n                  ,\\r\\n    \\\"stored\\\": \\\"2020-01-01T14:05:25.000Z\\\",\\r\\n    \\\"authority\\\"\\\n                  : {\\r\\n        \\\"objectType\\\": \\\"Agent\\\",\\r\\n        \\\"account\\\"\\\n                  : {\\r\\n            \\\"homePage\\\": \\\"https://www.topgunmovie.com/\\\"\\\n                  ,\\r\\n            \\\"name\\\": \\\"cb4b1842-d251-4a4c-b9f0-c8b4a9004d18\\\"\\\n                  \\r\\n        }\\r\\n    }\\r\\n}\"\n      deprecated: false\n  # /{LitmosDomain}{DBinstance}/statements:\n  #   get:\n  #     tags:\n  #     - xAPI\n  #     summary: Get Statements\n  #     operationId: GetStatements\n  #     parameters:\n  #     - name: LitmosDomain\n  #       in: path\n  #       required: true\n  #       schema:\n  #         type: string\n  #     - name: DBinstance\n  #       in: path\n  #       required: true\n  #       schema:\n  #         type: string\n  #     responses:\n  #       200:\n  #         description: \"\"\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               example:\n  #                 statements:\n  #                 - version: 1.0.0\n  #                   id: 01c01e01-b123-4567-b890-01ce011fe1af\n  #                   actor:\n  #                     objectType: Agent\n  #                     name: Lt. Pete\n  #                     mbox: mailto:Maverick@topgun.com\n  #                   verb:\n  #                     id: http://activitystrea.ms/schema/1.0/experience\n  #                     display:\n  #                       en-US: completed\n  #                   object:\n  #                     objectType: Activity\n  #                     id: http://example.com/activities/figher-pilot-combat-TopGun\n  #                     definition:\n  #                       name:\n  #                         en-US: Top Gun Simulation\n  #                       description:\n  #                         en-US: The Top Gun Naval Fighter Weapons School is where\n  #                           the best of the best train to refine their elite flying\n  #                           skills.\n  #                       type: http://adlnet.gov/expapi/activities/simulation\n  #                       extensions:\n  #                         http://example.com/gliderClubId: Sim-101\n  #                   result:\n  #                     score:\n  #                       scaled: 0.95\n  #                     success: true\n  #                     completion: true\n  #                     extensions:\n  #                       http://example.com/flight/averagePitch: 0.25\n  #                   timestamp: 2020-01-01T14:00:00.000Z\n  #                   stored: 2021-08-11T23:19:03.735Z\n  #                   authority:\n  #                     objectType: Agent\n  #                     account:\n  #                       homePage: https://apibushub\n  #                       name: 22e28ef6-720f-4a88-938b-434730d9694a\n  #                 more: \"\"\n  #     deprecated: false\n  /teams/{teamId}/courses:\n    get:\n      tags:\n      - Team Courses\n      summary: Get a List of all Courses Assigned to Team\n      description: Get a list of all course records that are assigned to the team.\n      operationId: GetaListofallCoursesAssignedtoTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Courses'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Courses'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n        404:\n          description: The team teamId  does not exist.\"\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Team Courses\n      summary: Assign a List of Courses to Team\n      description: Assign a list of course records to a team. These courses will appear\n        on the \"to-do\" list for users that belong to the team.\n      operationId: AssignaListofCoursestoTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: includesubteams\n        in: query\n        schema:\n          type: boolean\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_9'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_9'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n        404:\n          description: No team with this id  teamId exists in your organization, or\n            you did not send any courses in your request\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n    delete:\n      tags:\n      - Team Courses\n      summary: Unassign a List of Courses from Team\n      description: Remove a list of course records assigned to a Team. These courses\n        will no longer appear on the \"to-do\" list for users that belong to the team.\n      operationId: UnassignaListofCoursesfromTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call or Course\n            is assigned via Learning Path. Remove the team from the Learning Path\n            to unassign from team\n          content: {}\n        404:\n          description: No team with this id  exists in your organization\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /teams/{teamId}/admins:\n    get:\n      tags:\n      - Team Administrators\n      summary: Get Team Administrators for a Team\n      description: Get a list of user records promoted to Team Administrator for a\n        team.\n      operationId: GetTeamAdministratorsforaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_30'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_30'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n      deprecated: false\n  /teams/{teamId}/admins/{userId}:\n    put:\n      tags:\n      - Team Administrators\n      summary: Promote a User to Team Admin for a Team\n      description: Promote a user record to team administrator access level for a\n        team.\n      operationId: PromoteaUsertoTeamAdminforaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: BadRequest.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: 'User: userId does not exist on the team: teamId.'\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - Team Administrators\n      summary: Demote a Team Administrator on a Team\n      description: Demote a user record from team administrator access level for a\n        team.\n      operationId: DemoteaTeamAdministratoronaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: BadRequest.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n        404:\n          description: 'User: userId does not exist on the team: teamId'\n          content: {}\n      deprecated: false\n  /teams/{teamId}/leaders:\n    get:\n      tags:\n      - Team Leaders\n      summary: Get Team Leaders for a Team\n      description: Get a list of user records promoted to Team Leader for a team.\n      operationId: GetTeamLeadersforaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_31'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_31'\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n      deprecated: false\n  /teams/{teamId}/leaders/{userId}:\n    put:\n      tags:\n      - Team Leaders\n      summary: Promote a User to Team Leader for a Team\n      description: Promote a user record to team leader access level for a team.\n      operationId: PromoteaUsertoTeamLeaderforaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: BadRequest.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: 'User: userId does not exist on the team: teamId.'\n          content: {}\n      deprecated: false\n    delete:\n      tags:\n      - Team Leaders\n      summary: Demote a Team Leader on a Team\n      description: Demote a user record from team leader access level for a team.\n      operationId: DemoteaTeamLeaderonaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: BadRequest.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n        404:\n          description: 'User: userId does not exist on the team: teamId'\n          content: {}\n      deprecated: false\n  /teams/{teamId}/users:\n    get:\n      tags:\n      - Team Users\n      summary: Get Users in a Team\n      description: Get a list of active users assigned to a Team.\n      operationId: GetUsersinaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_30'\n            application/teams/{teamid}/users/json:\n              schema:\n                $ref: '#/components/schemas/inline_response_200_30'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        404:\n          description: Not Found\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Team Users\n      summary: Assign Users to a Team\n      description: Add a list of user records to a Team.\n      operationId: AssignUserstoaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: sendmessage\n        in: query\n        description: set to \"True\" to send login emails to new users\n        schema:\n          type: boolean\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Body_10'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Body_10'\n        required: true\n      responses:\n        201:\n          description: Created.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No team with this id exists in your organization, or the user\n            list is empty.\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /teams/{teamId}/users/{userId}:\n    delete:\n      tags:\n      - Team Users\n      summary: Unassign Users from a Team\n      description: Remove a user record from a team.\n      operationId: UnassignUsersfromaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No team with this id  exists in your organization, or no user\n            exists with this id\n          content: {}\n      deprecated: false\n  /teams:\n    get:\n      tags:\n      - Teams\n      summary: Get a List of All Teams\n      description: Returns a list of all team records in the organisation.\n      operationId: GetaListofAllTeams\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: start\n        in: query\n        description: Record number where paging starts\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Teams'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Teams'\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Teams\n      summary: Create a Team\n      description: Create a new team record.\n      operationId: CreateaTeam\n      parameters:\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Team'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Team'\n        required: true\n      responses:\n        201:\n          description: Created.\n          content: {}\n        400:\n          description: Please check the xml/json included with this call\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n        409:\n          description: Team name already exists\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\n  /teams/{teamId}:\n    get:\n      tags:\n      - Teams\n      summary: Get a Team\n      description: Get a team record\n      operationId: GetaTeam\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Team'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Team'\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call.\n          content: {}\n        404:\n          description: No team with this  teamId exists in your organization\n          content: {}\n      deprecated: false\n  /teams/{teamId}/teams:\n    get:\n      tags:\n      - Teams\n      summary: Get SubTeam Id\n      description: Get a list of subteam records for a team.\n      operationId: GetSubTeamId\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Total records to return (max 1000)\n        schema:\n          type: integer\n      - name: search\n        in: query\n        description: String value used to the filter the records\n        schema:\n          type: string\n      responses:\n        200:\n          description: Success.\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n      deprecated: false\n    post:\n      tags:\n      - Teams\n      summary: Create a Sub-Team\n      description: Create a new sub-team record within a team.\n      operationId: CreateaSub-Team\n      parameters:\n      - name: teamId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: source\n        in: query\n        description: Custom identifier used to identify an API user, API program,\n          etc.\n        required: true\n        schema:\n          type: string\n      - name: format\n        in: query\n        description: set to \"json\" if the response body is to be formatted in JavaScript\n          Object Notation\n        schema:\n          type: string\n      - name: Content-Type\n        in: header\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Team'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Team'\n        required: true\n      responses:\n        200:\n          description: Success.\n          content: {}\n        400:\n          description: Please check the xml/json included with this call\n          content: {}\n        401:\n          description: The API key that you have used for this request is either not\n            valid or your account is not enabled for API access.\n          content: {}\n        403:\n          description: You do not have the proper permissions for this call\n          content: {}\n        409:\n          description: Team name already exists\n          content: {}\n      deprecated: false\n      x-codegen-request-body-name: Body\ncomponents:\n  schemas:\n    Achievement:\n      title: Achievement\n      type: object\n      properties:\n        UserId:\n          type: string\n          format: EncryptedId\n        Title:\n          type: string\n        Description:\n          type: string\n        AchievementDate:\n          type: string\n          format: date-time\n        CourseId:\n          type: string\n          format: EncryptedId\n        ComplaintTillDate:\n          type: string\n          format: date-time\n        Score:\n          maximum: 1E+2\n          minimum: 1\n          type: integer\n          format: int32\n        Result:\n          type: string\n        Type:\n          type: string\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        AchievementId:\n          type: string\n          format: EncryptedId\n        CertificateId:\n          type: string\n          format: EncryptedId\n      example:\n        UserId: Oe4zZK7ZntpWn8FLGZTxuw2\n        Title: 0 - Getting Started with Litmos\n        AchievementDate: 2021-05-11T18:27:24.763+0000\n        CourseId: gqYHrApPYuQ1\n        Result: Complete\n        Type: Course Completed\n        FirstName: SAP\n        LastName: Litmos\n        AchievementId: 91450502\n    Achievements:\n      title: Achievements\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/Achievement'\n    ActionActivity:\n      title: ActionActivity\n      type: object\n      properties:\n        ActivityType:\n          type: string\n        ObjectType:\n          type: string\n        ObjectId:\n          type: string\n          format: EncryptedId\n        OriginalObjectId:\n          type: string\n          format: Originalid\n        ObjectName:\n          type: string\n        TargetObjectType:\n          type: string\n        TargetObjectId:\n          type: string\n          format: EncryptedId\n        OriginalTargetObjectId:\n          type: string\n          format: Originalid\n        TargetObjectName:\n          type: string\n        ActivityBy:\n          type: string\n          format: OriginalId\n        ActivityByUserName:\n          type: string\n          format: Username\n        ActivityDate:\n          type: string\n          format: date-time\n      example:\n        ActivityType: Collection Created\n        ObjectType: Collection\n        ObjectId: n_76_KM7SEs1\n        OriginalObjectId: \"3172\"\n        ObjectName: Example Collection\n        TargetObjectId: 0\n        OriginalTargetObjectId: 0\n        ActivityBy: 22584109\n        ActivityByUsername: LitmosIntegrations\n        ActivityDate: 2021-07-13T16:56:00.943\n    ActionActivitys:\n      title: ActionActivitys\n      required:\n      - ActionActivity\n      type: object\n      properties:\n        ActionActivity:\n          type: array\n          items:\n            $ref: '#/components/schemas/ActionActivity'\n    AssignmentActivity:\n      title: AssignmentActivity\n      type: object\n      properties:\n        ActivityType:\n          type: string\n        ObjectType:\n          type: string\n        ObjectId:\n          type: string\n          format: EncryptedId\n        OriginalObjectId:\n          type: string\n          format: Originalid\n        ObjectName:\n          type: string\n        TargetObjectType:\n          type: string\n        TargetObjectId:\n          type: string\n          format: EncryptedId\n        OriginalTargetObjectId:\n          type: string\n          format: Originalid\n        TargetObjectName:\n          type: string\n        ActivityBy:\n          type: string\n          format: OriginalId\n        ActivityByUserName:\n          type: string\n          format: Username\n        ActivityDate:\n          type: string\n          format: date-time\n      example:\n        ActivityType: User Added To Course\n        ObjectType: User\n        ObjectId: -bA-I8jb-tXUrvqglbdc1A2\n        OriginalObjectId: \"23180609\"\n        ObjectName: Leonard Somtil\n        TargteObjectType: Course\n        TargetObjectId: gqYHrApPYuQ1\n        OriginalTargetObjectId: \"5857921\"\n        TargetObjectName: 0 - Getting Started with Litmos\n        ActivityBy: 22584109\n        ActivityByUsername: LitmosIntegrations\n        ActivityDate: 2021-07-09T17:14:38.657\n    AssignmentActivitys:\n      title: AssignmentActivitys\n      required:\n      - AssignmentActivity\n      type: object\n      properties:\n        AssignmentActivity:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssignmentActivity'\n    ContentActivity:\n      title: ContentActivity\n      type: object\n      properties:\n        ActivityType:\n          type: string\n        ObjectType:\n          type: string\n        ObjectId:\n          type: string\n          format: EncryptedId\n        OriginalObjectId:\n          type: string\n          format: Originalid\n        ObjectName:\n          type: string\n        TargetObjectType:\n          type: string\n        TargetObjectId:\n          type: string\n          format: EncryptedId\n        OriginalTargetObjectId:\n          type: string\n          format: Originalid\n        TargetObjectName:\n          type: string\n        ActivityBy:\n          type: string\n          format: OriginalId\n        ActivityByUserName:\n          type: string\n          format: Username\n        ActivityDate:\n          type: string\n          format: date-time\n      example:\n        ActivityType: Module Added To Course\n        ObjectType: Module\n        ObjectId: FOkl7r-pv5lMuOz2x2dlgQ2\n        OriginalObjectId: \"10644730\"\n        ObjectName: Example Assessment Title\n        TargteObjectType: Course\n        TargetObjectId: glLI883QNYk1\n        OriginalTargetObjectId: \"6064810\"\n        TargetObjectName: Example Course Title\n        ActivityBy: 22584109\n        ActivityByUsername: LitmosIntegrations\n        ActivityDate: 2021-07-12T22:53:30.647\n    ContentActivitys:\n      title: ContentActivitys\n      required:\n      - ContentActivity\n      type: object\n      properties:\n        ContentActivity:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContentActivity'\n    LoginActivity:\n      title: LoginActivity\n      type: object\n      properties:\n        ActivityType:\n          type: string\n        UserId:\n          type: string\n          format: EncryptedId\n        OriginalUserId:\n          type: string\n          format: Originalid\n        UserName:\n          type: string\n          format: Username\n        IPAddress:\n          type: string\n          format: ipv4\n        LoginDate:\n          type: string\n          format: date-time\n      example:\n        ActivityType: Login\n        UserId: Oe4zZK7ZntpWn8FLGZTxuw2\n        OriginalUserId: 22584109\n        UserName: LitmosIntegrations\n        IPAddress: 169.145.42.41\n        LoginDate: 2021-07-12T23:20:16.1\n    LoginActivitys:\n      title: LoginActivitys\n      required:\n      - LoginActivity\n      type: object\n      properties:\n        LoginActivity:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoginActivity'\n    SettingsActivity:\n      title: SettingsActivity\n      type: object\n      properties:\n        ActivityType:\n          type: string\n        Category:\n          type: string\n        ObjectType:\n          type: string\n        ObjectId:\n          type: string\n          format: EncryptedId\n        OriginalObjectId:\n          type: string\n          format: Originalid\n        ObjectName:\n          type: string\n        TargetObjectType:\n          type: string\n        TargetObjectId:\n          type: string\n          format: EncryptedId\n        OriginalTargetObjectId:\n          type: string\n          format: Originalid\n        TargetObjectName:\n          type: string\n        OldValue:\n          type: string\n        NewValue:\n          type: string\n        ActivityBy:\n          type: string\n          format: OriginalId\n        ActivityByUserName:\n          type: string\n          format: Username\n        ActivityDate:\n          type: string\n          format: date-time\n      example:\n        ActivityType: ILT Calendar Type (Google) Updated\n        Category: Account Profile\n        ObjectType: Organisation\n        ObjectId: Ixhe-wbasAQ1\n        OriginalObjectId: \"146205\"\n        TargetObjectId: 0\n        OriginalTargetObjectId: 0\n        OldValue: Disabled\n        NewValue: Enabled\n        ActivityBy: 22584109\n        ActivityByUsername: LitmosIntegrations\n        ActivityDate: 2021-07-12T23:32:42.903+0000\n    SettingsActivitys:\n      title: SettingsActivitys\n      required:\n      - SettingsActivity\n      type: object\n      properties:\n        SettingsActivity:\n          type: array\n          items:\n            $ref: '#/components/schemas/SettingsActivity'\n    UserBulkImport:\n      title: UserBulkImport\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        ImportDate:\n          type: string\n          format: date-time\n        Status:\n          type: string\n        TotalRecords:\n          type: integer\n          format: int32\n        TotalUsersCreated:\n          type: integer\n          format: int32\n        Failed:\n          type: integer\n          format: int32\n        Duplicate:\n          type: integer\n          format: int32\n        InvalidEmail:\n          type: integer\n          format: int32\n        SendEmails:\n          type: boolean\n        SkipFirstLogin:\n          type: boolean\n      example:\n        Id: AICcqH8OZiw1\n        ImportDate: 2021-07-15T15:44:46.84\n        Status: Completed\n        TotalRecords: 1\n        TotalUsersCreated: 1\n        Failed: 0\n        Duplicate: 0\n        InvalidEmail: 0\n        SendEmails: false\n        SkipFirstLogin: false\n    UserBulkImports:\n      title: UserBulkImports\n      required:\n      - UserBulkImport\n      type: object\n      properties:\n        UserBulkImport:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserBulkImport'\n    CourseBulkImport:\n      title: CourseBulkImport\n      type: object\n      properties:\n        ImportId:\n          type: string\n          format: EncryptedId\n        ImportDate:\n          type: string\n          format: date-time\n        Status:\n          type: string\n        TotalRecords:\n          type: integer\n          format: int32\n        TotalCoursesCreated:\n          type: integer\n          format: int32\n        Failed:\n          type: integer\n          format: int32\n      example:\n        ImportId: xG4zpKeF8-U1\n        ImportDate: 2021-07-15T16:54:33.817\n        Status: Completed\n        TotalRecords: 1\n        TotalCoursesCreated: 0\n        Failed: 1\n    CourseCustomField:\n      title: CourseCustomField\n      type: object\n      properties:\n        CustomFieldId:\n          type: string\n          format: EncryptedId\n        Label:\n          type: string\n        DefaultValue:\n          type: string\n        Mandatory:\n          type: boolean\n        VisibleToLearner:\n          type: boolean\n        Type:\n          type: string\n        Dropdown:\n          type: array\n          items:\n            type: object\n      example:\n        CustomFieldId: B2qAKPjx3Tc1\n        Label: Continuing Education Units\n        DefaultValue: 4\n        Mandatory: false\n        VisibleToLearner: true\n        Type: Number\n    CourseCustomFields:\n      title: CourseCustomFields\n      required:\n      - CourseCustomField\n      type: object\n      properties:\n        CourseCustomField:\n          type: array\n          items:\n            $ref: '#/components/schemas/CourseCustomField'\n      example:\n        CustomFieldId: B2qAKPjx3Tc1\n        Label: Continuing Education Units\n        DefaultValue: 4\n        Mandatory: false\n        VisibleToLearner: true\n        Type: Number\n    User:\n      title: User\n      required:\n      - AccessLevel\n      - Active\n      - DisableMessages\n      - Email\n      - Id\n      - IsCustomUsername\n      - LastName\n      - SkipFirstLogin\n      - TimeZone\n      - UserName\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserName:\n          type: string\n          format: Username\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        FullName:\n          type: string\n        Email:\n          type: string\n          format: Email address\n        AccessLevel:\n          type: string\n        DisableMessages:\n          type: boolean\n        Active:\n          type: boolean\n        Skype:\n          type: string\n        PhoneWork:\n          type: string\n        PhoneMobile:\n          type: string\n        LastLogin:\n          type: string\n          readOnly: true\n        LoginKey:\n          type: string\n          readOnly: true\n        IsCustomUsername:\n          type: boolean\n        Password:\n          type: string\n          format: password\n        SkipFirstLogin:\n          type: boolean\n        TimeZone:\n          type: string\n        SalesforceId:\n          type: string\n          format: SalesforceId\n        OriginalId:\n          type: string\n          format: id\n          readOnly: true\n        Street1:\n          type: string\n        Street2:\n          type: string\n        City:\n          type: string\n        State:\n          type: string\n        PostalCode:\n          type: string\n        Country:\n          type: string\n        SalesforceContactId:\n          type: string\n          format: SalesforceId\n        SalesforceAccountId:\n          type: string\n          format: SalesforceId\n        CreatedDate:\n          type: string\n          format: date-time\n          readOnly: true\n        Points:\n          type: integer\n        CompanyName:\n          type: string\n        JobTitle:\n          type: string\n        CustomField1:\n          type: string\n        CustomField2:\n          type: string\n        CustomField3:\n          type: string\n        CustomField4:\n          type: string\n        CustomField5:\n          type: string\n        CustomField6:\n          type: string\n        CustomField7:\n          type: string\n        CustomField8:\n          type: string\n        CustomField9:\n          type: string\n        CustomField10:\n          type: string\n        Culture:\n          type: string\n        Brand:\n          type: string\n        ManagerId:\n          type: string\n          format: EncryptedId\n        ManagerName:\n          type: string\n          format: Username\n        EnableTextNotification:\n          type: boolean\n        Website:\n          type: string\n        Twitter:\n          type: string\n        ExpirationDate:\n          type: string\n          format: date-time\n        JobRole:\n          type: string\n        ExternalEmployeeId:\n          type: string\n        ProfileType:\n          pattern: internal, external\n          type: string\n      example:\n        Id: -bA-I8jb-tXUrvqglbdc1A2\n        UserName: LennyLitmos\n        FirstName: Leonard\n        LastName: Somtil\n        FullName: LeondardMSomtil\n        Email: LeonardSomtil@sap.com\n        AccessLevel: Learner\n        DisableMessages: \"false\"\n        Active: \"true\"\n        Skype: LeoMSomtil_Skype\n        PhoneWork: 925-251-0000\n        PhoneMobile: 925-251-0000\n        IsCustomUsername: \"true\"\n        SkipFirstLogin: \"true\"\n        TimeZone: Pacific Standard Time\n        Street1: 2700 Camino Ramon\n        Street2: Suite 400\n        City: San Ramon\n        State: California\n        PostalCode: 94521\n        Country: United States of America\n        CompanyName: SAP SE\n        JobTitle: Mascot\n        CustomField1: CustomField1\n        CustomField2: CustomField2\n        CustomField3: CustomField3\n        CustomField4: CustomField4\n        CustomField5: CustomField5\n        CustomField6: CustomField6\n        CustomField7: CustomField7\n        CustomField8: CustomField8\n        CustomField9: CustomField9\n        CustomField10: CustomField10\n        Culture: en-Us\n        Brand: Default\n        EnableTextNotification: \"false\"\n        Website: https://www.litmos.com\n        Twitter: '@Litmos'\n        JobRole: Mascot\n        ExternalEmployeeId: 4161\n        ProfileType: Internal\n    Users:\n      title: Users\n      required:\n      - User\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n      example:\n        User:\n          Id: -bA-I8jb-tXUrvqglbdc1A2\n    UserCollection:\n      required:\n      - Pagination\n      type: object\n      properties:\n        Pagination:\n          type: object\n          properties: {}\n          example:\n            BatchParam: Limit\n            BatchSize: 100\n            Start: 0\n            TotalCount: 150000\n        Item:\n          type: array\n          items:\n            $ref: '#/components/schemas/Users'\n    UserImport:\n      title: User Import\n      required:\n      - Email\n      - FirstName\n      - LastName\n      type: object\n      properties:\n        Username:\n          type: string\n          format: Username\n        Email:\n          type: string\n          format: email\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Password:\n          type: string\n          format: password\n        Phone:\n          type: string\n        Mobile:\n          type: string\n        Skype:\n          type: string\n        Title:\n          type: string\n        CompanyName:\n          type: string\n        WebSite:\n          type: string\n        Twitter:\n          type: string\n        Team1:\n          type: string\n        Team2:\n          type: string\n        Team3:\n          type: string\n        Team4:\n          type: string\n        Team5:\n          type: string\n        Course1:\n          type: string\n        Course2:\n          type: string\n        Course3:\n          type: string\n        Address1:\n          type: string\n        Address2:\n          type: string\n        City:\n          type: string\n        State:\n          type: string\n        Zip:\n          type: string\n        Country:\n          type: string\n        CustomField1:\n          type: string\n        CustomField2:\n          type: string\n        CustomField3:\n          type: string\n        CustomField4:\n          type: string\n        CustomField5:\n          type: string\n        CustomField6:\n          type: string\n        CustomField7:\n          type: string\n        CustomField8:\n          type: string\n        CustomField9:\n          type: string\n        CustomField10:\n          type: string\n        SalesforceId:\n          type: string\n          format: SalesforceId\n        SalesforceContactId:\n          type: string\n          format: SalesforceId\n        SalesforceAccountId:\n          type: string\n          format: SalesforceId\n        Active:\n          type: boolean\n        InActiveDate:\n          type: string\n          format: date-time\n        AccessLevel:\n          maximum: 5\n          minimum: 2\n          type: integer\n        Brand:\n          type: string\n        Culture:\n          type: string\n        Manager:\n          type: string\n          format: Username or Id\n        UserCustomField1:\n          type: string\n        UserCustomField2:\n          type: string\n        UserCustomField3:\n          type: string\n        UserCustomField4:\n          type: string\n        UserCustomField5:\n          type: string\n        UserCustomField6:\n          type: string\n        UserCustomField7:\n          type: string\n        UserCustomField8:\n          type: string\n        UserCustomField9:\n          type: string\n        UserCustomField10:\n          type: string\n        UserCustomField11:\n          type: string\n        UserCustomField12:\n          type: string\n        UserCustomField13:\n          type: string\n        UserCustomField14:\n          type: string\n        UserCustomField15:\n          type: string\n        UserCustomField16:\n          type: string\n        UserCustomField17:\n          type: string\n        UserCustomField18:\n          type: string\n        UserCustomField19:\n          type: string\n        UserCustomField20:\n          type: string\n        UserCustomField21:\n          type: string\n        UserCustomField22:\n          type: string\n        UserCustomField23:\n          type: string\n        UserCustomField24:\n          type: string\n        UserCustomField25:\n          type: string\n        JobRole:\n          type: string\n        ExternalEmployeeId:\n          type: string\n      example:\n        Username: LennyLitmos\n        Email: Leonard.Somtil@sap.com\n        FirstName: Leonard\n        LastName: Somtil\n        Phone: 9252512220\n        Title: Mascot\n        CompanyName: SAP Litmos\n        WebSite: www.litmos.com\n        Twitter: '@litmos'\n        Team1: 9eJGkqnHg041\n        Course1: gqYHrApPYuQ1\n        Address1: 2700 Camino Ramon\n        Address2: Suite 400\n        City: San Ramon\n        State: California\n        Zip: 94583\n        Country: United States of America\n        CustomField1: CustomField1_ExampleValue\n        CustomField2: CustomField2_ExampleValue\n        CustomField3: CustomField3_ExampleValue\n        CustomField4: CustomField4_ExampleValue\n        CustomField5: CustomField5_ExampleValue\n        CustomField6: \"\"\n        CustomField7: \"\"\n        CustomField8: \"\"\n        CustomField9: \"\"\n        CustomField10: \"\"\n        Active: true\n        AccessLevel: 5\n        Brand: Default\n        Culture: en-US\n        Manager: Oe4zZK7ZntpWn8FLGZTxuw2\n        UserCustomField1: \"\"\n        UserCustomField2: \"\"\n        UserCustomField3: \"\"\n        UserCustomField4: \"\"\n        UserCustomField5: \"\"\n        UserCustomField6: \"\"\n        UserCustomField7: \"\"\n        UserCustomField8: \"\"\n        UserCustomField9: \"\"\n        UserCustomField10: \"\"\n        UserCustomField11: \"\"\n        UserCustomField12: \"\"\n        UserCustomField13: \"\"\n        UserCustomField14: \"\"\n        UserCustomField15: \"\"\n        UserCustomField16: \"\"\n        UserCustomField17: \"\"\n        UserCustomField18: \"\"\n        UserCustomField19: \"\"\n        UserCustomField20: \"\"\n        UserCustomField21: \"\"\n        UserCustomField22: \"\"\n        UserCustomField23: \"\"\n        UserCustomField24: \"\"\n        UserCustomField25: \"\"\n        JobRole: Mascot\n        ExternalEmployeeId: 17043521\n    UserImports:\n      title: User Imports\n      required:\n      - UserImport\n      type: object\n      properties:\n        UserImport:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserImport'\n    Module:\n      title: Module\n      required:\n      - Active\n      - ContentURL\n      - Id\n      - ModuleType\n      - Name\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Description:\n          type: string\n        ModuleType:\n          type: integer\n          format: int32\n        Active:\n          type: boolean\n        Code:\n          type: string\n        HideDescription:\n          type: boolean\n        NewWindow:\n          type: boolean\n        ReviewMode:\n          type: boolean\n        ContentURL:\n          type: string\n          format: URL\n      example:\n        Id: \"\"\n        Name: Example eLearning file\n        Description: Example module description\n        ModuleType: 9\n        Active: true\n        Code: eLearn-Sco-TinCan\n        HideDescription: false\n        NewWindow: true\n        ReviewMode: true\n        ContentURL: https://sitename-my.sharepoint.com/personal/JohnDoe/Documents/SomeElearning.zip?Web=0\n    Modules:\n      title: Modules\n      required:\n      - Module\n      type: object\n      properties:\n        Module:\n          type: array\n          items:\n            $ref: '#/components/schemas/Module'\n    ModuleResult:\n      title: Module Result\n      required:\n      - Attempts\n      - Completed\n      - CourseId\n      - Note\n      - Score\n      - UpdatedAt\n      - UserId\n      type: object\n      properties:\n        CourseId:\n          type: string\n          format: EncryptedId\n        UserId:\n          type: string\n          format: EncryptedId\n        Score:\n          type: integer\n        Completed:\n          type: boolean\n        UpdatedAt:\n          type: string\n          format: date-time\n        Note:\n          type: string\n        Attempts:\n          type: integer\n      example:\n        CourseId: glLI883QNYk1\n        UserId: -bA-I8jb-tXUrvqglbdc1A2\n        Score: 100\n        Completed: true\n        UpdatedAt: 2021-07-01T14:15:30\n        Note: Completed the test with a perfect score\n        Attempts: 1\n    Session:\n      title: Session\n      required:\n      - Days\n      - Id\n      - InstructorUserId\n      - Location\n      - LocationId\n      - Name\n      - SessionType\n      - TimeZone\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        InstructorUserId:\n          type: string\n          format: EncryptedId\n        SessionType:\n          maximum: 4\n          minimum: 1\n          type: integer\n          format: int32\n        Days:\n          type: array\n          items:\n            $ref: '#/components/schemas/Day'\n        TimeZone:\n          type: string\n        Location:\n          type: string\n        LocationId:\n          type: integer\n          format: int32\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        Slots:\n          type: integer\n          format: int32\n        Accepted:\n          type: string\n          format: Username\n        EnableWaitList:\n          type: boolean\n      example:\n        Id: \"\"\n        Name: Example Session\n        InstructorUserId: CpfgqzpUCdcE8hK3xaZb0A2\n        SessionType: 1\n        Days:\n        - Id: \"\"\n          StartDate: 2022-01-16T09:00:00.000+0000\n          EndDate: 2022-01-16T12:00:00.000+0000\n          StartTime: 9:00AM\n          EndTime: 12:00PM\n          SendReminder: false\n          ReminderValue: 1\n          ReminderMetric: hours\n        - Id: \"\"\n          StartDate: 2022-01-17T09:00:00.000+0000\n          EndDate: 2022-01-17T12:00:00.000+0000\n          StartTime: 9:00AM\n          EndTime: 12:00PM\n          SendReminder: false\n          ReminderValue: 1\n          ReminderMetric: days\n        TimeZone: Pacific Standard Time\n        Location: Example Session Location:(Virtual)\n        LocationId: 6400\n    Day:\n      title: Day\n      required:\n      - EndDate\n      - EndTime\n      - Id\n      - ReminderMetric\n      - ReminderValue\n      - SendReminder\n      - StartDate\n      - StartTime\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        StartDate:\n          type: string\n          format: date-time\n        EndDate:\n          type: string\n          format: date-time\n        StartTime:\n          type: string\n          format: H:MM AM/PM\n        EndTime:\n          type: string\n          format: H:MM AM/PM\n        SendReminder:\n          type: boolean\n        ReminderValue:\n          minimum: 1\n          type: integer\n          format: int32\n        ReminderMetric:\n          type: string\n      example:\n        Id: vJ_00E2fmn81\n        StartDate: 2021-12-01T09:00:00Z\n        EndDate: 2021-12-01T12:00:00Z\n        StartTime: 9:00AM\n        EndTime: 12:00PM\n        SendReminder: false\n        ReminderValue: 1\n        ReminderMetric: minutes\n    UserSessionRegistrationStatus:\n      title: UserSessionRegistrationStatus\n      type: object\n      properties:\n        TotalUsersRegistered:\n          type: integer\n          format: int32\n        Failed:\n          type: integer\n          format: int32\n      example:\n        TotalUsersRegistered: 8\n        Failed: 2\n    EventUser:\n      title: Mark an ILT Session Complete \u0026 Add Score\n      required:\n      - CompanyName\n      - Completed\n      - Email\n      - EventStatus\n      - FirstName\n      - Id\n      - LastName\n      - Score\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        EventStatus:\n          type: integer\n          format: int32\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Email:\n          type: string\n          format: email\n        CompanyName:\n          type: string\n        Score:\n          maximum: 1E+2\n          minimum: 1\n          type: integer\n          format: int32\n        Completed:\n          type: boolean\n      example:\n        Id: -bA-I8jb-tXUrvqglbdc1A2\n        EventStatus: 1\n        FirstName: Leonard\n        LastName: Somtil\n        Email: LeonardSomtil@sap.com\n        CompanyName: SAP Litmos\n        Score: 95\n        Completed: true\n    EventUsers:\n      title: Event User\n      type: object\n      properties:\n        Team:\n          type: array\n          items:\n            $ref: '#/components/schemas/EventUser'\n    Course:\n      title: Course\n      required:\n      - Id\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Code:\n          type: string\n        Name:\n          type: string\n        Active:\n          type: boolean\n        ForSale:\n          type: boolean\n        OriginalId:\n          type: string\n          format: id\n        Description:\n          type: string\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        CourseCodeForBulkImport:\n          type: string\n          format: Course-code\n        Price:\n          type: integer\n          format: int32\n        AccessTillDate:\n          type: string\n          format: date\n        AccessTillDays:\n          type: integer\n        CourseTeamLibrary:\n          type: boolean\n        CreatedBy:\n          type: string\n          format: Username\n        Tags:\n          type: string\n      example:\n        Id: gqYHrApPYuQ1\n        Code: DOJO104\n        Name: 0 - Getting Started with Litmos\n        Active: true\n        ForSale: false\n        OriginalId: 5857921\n        Description: This course will provide a brief introduction to all the cool\n          features of Litmos.   Within minutes, you will be creating your own courses,\n          adding users, and even customizing the look and feel of the learner experience.  See\n          how easy it is to get up and running.  With SAP Litmos Training, you will\n          love your LMS!\n        CourseCodeForBulkImport: 5857921-DOJO104\n        CourseTeamLibrary: false\n        Tags: Beginner\n    Courses:\n      title: Courses\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/Course'\n    CourseImport:\n      title: Course Import\n      required:\n      - Active\n      - CourseTitle\n      type: object\n      properties:\n        CourseTitle:\n          type: string\n        Description:\n          type: string\n        CourseCode:\n          type: string\n          format: Course-code\n        Active:\n          type: boolean\n        ContentLibrary:\n          type: boolean\n        Notifications:\n          type: string\n          format: Username\n        ModuleOrder:\n          type: boolean\n        CourseInactivationDate:\n          type: string\n          format: date\n        CourseAccessExpirationDate:\n          type: string\n          format: date\n        CourseAccessExpirationDateSpan:\n          maximum: 1E+2\n          type: integer\n          format: int32\n        DueDate:\n          type: string\n          format: date\n        DueDateSpan:\n          maximum: 1E+2\n          type: integer\n          format: int32\n        ComplianceDateSpan:\n          maximum: 1E+2\n          type: integer\n          format: int32\n        ComplianceRetake:\n          type: boolean\n        Topic1:\n          type: string\n        Topic2:\n          type: string\n        Topic3:\n          type: string\n        Social:\n          type: string\n        DiscussionForum:\n          type: boolean\n        CoursePrerequisite1:\n          type: string\n          format: Course-Code\n        CoursePrerequisite2:\n          type: string\n          format: Course-Code\n        CoursePrerequisite3:\n          type: string\n          format: Course-Code\n        LearningPathPrerequisite1:\n          type: string\n          format: LearningPath-Code\n        LearningPathPrerequisite2:\n          type: string\n          format: LearningPath-Code\n        LearningPathPrerequisite3:\n          type: string\n          format: LearningPath-Code\n        Language:\n          type: string\n          format: Culture-code\n        Tags:\n          type: string\n        AdvCourseCustomField1:\n          type: string\n        AdvCourseCustomField2:\n          type: string\n        AdvCourseCustomField3:\n          type: string\n        AdvCourseCustomField4:\n          type: string\n        AdvCourseCustomField5:\n          type: string\n        AdvCourseCustomField6:\n          type: string\n        AdvCourseCustomField7:\n          type: string\n        AdvCourseCustomField8:\n          type: string\n        AdvCourseCustomField9:\n          type: string\n        AdvCourseCustomField10:\n          type: string\n        ReferenceCode:\n          type: string\n      example:\n      - CourseTitle: Example Course\n        Description: Example Course Description\n        CourseCode: 6064810-A\n        Active: true\n        ContentLibrary: false\n        Notifications: LitmosIntegrations\n        ModuleOrder: true\n        CourseInactivationDate: \"\"\n        CourseAccessExpirationDate: \"\"\n        CourseAccessExpirationDateSpan: \"\"\n        DueDate: \"\"\n        DueDateSpan: \"\"\n        ComplianceDateSpan: \"\"\n        ComplianceRetake: \"\"\n        Topic1: Example topic\n        Topic2: \"\"\n        Topic3: \"\"\n        Social: false\n        DiscussionForum: false\n        CoursePrerequisite1: \"\"\n        CoursePrerequisite2: \"\"\n        CoursePrerequisite3: \"\"\n        LearningPathPrerequisite1: \"\"\n        LearningPathPrerequisite2: \"\"\n        LearningPathPrerequisite3: \"\"\n        Language: en-US\n        Tags: ExampleContentTag\n        AdvCourseCustomField1: \"\"\n        AdvCourseCustomField2: \"\"\n        AdvCourseCustomField3: \"\"\n        AdvCourseCustomField4: \"\"\n        AdvCourseCustomField5: \"\"\n        AdvCourseCustomField6: \"\"\n        AdvCourseCustomField7: \"\"\n        AdvCourseCustomField8: \"\"\n        AdvCourseCustomField9: \"\"\n        AdvCourseCustomField10: \"\"\n        ReferenceCode: Example-101\n    CourseImports:\n      title: Course Imports\n      type: object\n      properties:\n        CourseImport:\n          type: array\n          items:\n            $ref: '#/components/schemas/CourseImport'\n      example:\n        CourseImport:\n        - CourseTitle: Example Course\n          Description: Example Course Description\n          CourseCode: 6064810-A\n          Active: true\n          ContentLibrary: false\n          Notifications: LitmosIntegrations\n          ModuleOrder: true\n          CourseInactivationDate: \"\"\n          CourseAccessExpirationDate: \"\"\n          CourseAccessExpirationDateSpan: \"\"\n          DueDate: \"\"\n          DueDateSpan: \"\"\n          ComplianceDateSpan: \"\"\n          ComplianceRetake: \"\"\n          Topic1: Example topic\n          Topic2: \"\"\n          Topic3: \"\"\n          Social: false\n          DiscussionForum: false\n          CoursePrerequisite1: \"\"\n          CoursePrerequisite2: \"\"\n          CoursePrerequisite3: \"\"\n          LearningPathPrerequisite1: \"\"\n          LearningPathPrerequisite2: \"\"\n          LearningPathPrerequisite3: \"\"\n          Language: en-US\n          Tags: ExampleContentTag\n          AdvCourseCustomField1: \"\"\n          AdvCourseCustomField2: \"\"\n          AdvCourseCustomField3: \"\"\n          AdvCourseCustomField4: \"\"\n          AdvCourseCustomField5: \"\"\n          AdvCourseCustomField6: \"\"\n          AdvCourseCustomField7: \"\"\n          AdvCourseCustomField8: \"\"\n          AdvCourseCustomField9: \"\"\n          AdvCourseCustomField10: \"\"\n          ReferenceCode: Example-101\n    LearningPath:\n      title: Learning Path\n      required:\n      - Id\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Description:\n          type: string\n        Active:\n          type: boolean\n        OriginalId:\n          type: string\n          format: Id\n        ForSale:\n          type: boolean\n        Price:\n          type: integer\n          format: int32\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        AccessTillDate:\n          type: string\n          format: date-time\n        AccessTillDays:\n          type: integer\n          format: int32\n        IsEquivalency:\n          type: boolean\n        LearningPathTeamLibrary:\n          type: boolean\n      example:\n        Id: ahi_5n5C02E1\n        Name: Core Discipline\n        Active: true\n        OriginalId: 148263\n        ForSale: false\n        Proie: 0\n        IsEquivalency: false\n        LearningPathTeamLibrary: false\n    LearningPaths:\n      title: Learning Paths\n      required:\n      - LearningPath\n      type: object\n      properties:\n        LearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/LearningPath'\n      example:\n        LearningPath:\n          Id: ahi_5n5C02E1\n          Name: Core Discipline\n          Active: true\n          OriginalId: 148263\n          ForSale: false\n          Price: 0\n          IsEquivalency: false\n          LearningPathTeamLibrary: false\n    Team:\n      title: Team\n      required:\n      - Id\n      - Name\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Description:\n          type: string\n        TeamCodeForBulkImport:\n          type: string\n          format: id\n          readOnly: true\n        ParentTeamId:\n          type: string\n          format: EncryptedId\n      example:\n        Id: 9Tx5gErG1z81\n        Name: Example Team name\n        Description: Example Team description\n        TeamCodeForBulkImport: 1912337-ExampleTeamname\n        ParentTeamId: \"\"\n    Teams:\n      title: Teams\n      required:\n      - Team\n      type: object\n      properties:\n        Team:\n          type: array\n          items:\n            $ref: '#/components/schemas/Team'\n      example:\n        Team:\n          Id: BXdsX_WIdgc1\n          Name: Example Sub Team Name\n          Description: Example Sub Team description\n          ParentTeamId: 9Tx5gErG1z81\n    Collection:\n      title: Collection\n      required:\n      - Description\n      - Name\n      type: object\n      properties:\n        Name:\n          type: string\n        Description:\n          type: string\n        DefaultListing:\n          type: boolean\n        ImageURL:\n          type: string\n          format: URL\n      example:\n        Name: Example Collection Name\n        Description: Example Collection Description\n        DefaultListing: true\n        ImageURL: \"\"\n    Collections:\n      title: Collections\n      type: object\n      properties:\n        ListingUser:\n          type: array\n          items:\n            $ref: '#/components/schemas/Collection'\n      example:\n        Name: Example Collection Name\n        Description: Example Collection Description\n        DefaultListing: true\n        ImageURL: \"\"\n    Listing:\n      title: Listing\n      required:\n      - Active\n      - CollectionId\n      - DurationDays\n      - DurationType\n      - FixedDate\n      - Id\n      - MaxUsers\n      - Name\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Active:\n          type: boolean\n        DurationType:\n          type: string\n        MaxUsers:\n          type: string\n        DurationDays:\n          type: integer\n        FixedDate:\n          type: string\n          format: date-time\n        CollectionId:\n          type: string\n          format: EncryptedId\n      example:\n        Id: W0r2PoyIxSw1\n        Name: Example Collection Listing\n        Active: \"true\"\n        DurationType: Unlimited\n        MaxUsers: unlimited\n        DurationDays: 0\n        FixedDate: 1/1/2100 12:00:00 AM\n        CollectionId: n_76_KM7SEs1\n    Listings:\n      title: Listings\n      required:\n      - Listings\n      type: object\n      properties:\n        Listings:\n          type: array\n          items:\n            $ref: '#/components/schemas/Listing'\n      example:\n        Id: W0r2PoyIxSw1\n        Name: Example Collection Listing\n        Active: \"true\"\n        DurationType: Unlimited\n        MaxUsers: unlimited\n        DurationDays: 0\n        FixedDate: 1/1/2100 12:00:00 AM\n        CollectionId: n_76_KM7SEs1\n    ListingUsers:\n      title: Listing Users\n      required:\n      - ListingUser\n      type: object\n      properties:\n        ListingUser:\n          type: array\n          items:\n            $ref: '#/components/schemas/ListingUser'\n      example:\n        ListingUser:\n          Id: -bA-I8jb-tXUrvqglbdc1A2\n          UserName: LennyLitmos\n          FirstName: Leonard\n          LastName: Somtil\n          Active: \"true\"\n          Email: Leonard.Somtil@sap.com\n          AccessLevel: Learner\n          Brand: Default\n    ListingUser:\n      title: Assign Users To a Listing\n      required:\n      - AccessLevel\n      - Brand\n      - Email\n      - FirstName\n      - Id\n      - LastName\n      - UserName\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserName:\n          type: string\n          format: Username\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Active:\n          type: boolean\n        Email:\n          type: string\n          format: Username\n        AccessLevel:\n          type: string\n        Brand:\n          type: string\n      example:\n        Id: -bA-I8jb-tXUrvqglbdc1A2\n        UserName: LennyLitmos\n        FirstName: Leonard\n        LastName: Somtil\n        Active: \"true\"\n        Email: Leonard.Somtil@sap.com\n        AccessLevel: Learner\n        Brand: Default\n    Token:\n      title: Token\n      required:\n      - Active\n      - MaximumActivations\n      - TokenCode\n      - TokenExpiration\n      - TokenId\n      - TokenType\n      - TokenTypeId\n      type: object\n      properties:\n        TokenId:\n          type: string\n          format: EncryptedId\n        TokenCode:\n          type: string\n          format: Token-code\n        TokenType:\n          maximum: 4\n          minimum: 1\n          type: integer\n          format: int32\n        TokenTypeId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        MaximumActivations:\n          type: integer\n        TokenExpiration:\n          type: string\n          format: date-time\n      example:\n        TokenId: HexcrCPIt-o1\n        TokenCode: Dojo Core Discipline\n        TokenType: 3\n        TokenTypeId: ahi_5n5C02E1\n        Active: true\n        MaximumActivations: 1000\n        TokenExpiration: 12/31/2025 12:00:00 AM\n    Tokens:\n      title: Tokens\n      required:\n      - Token\n      type: object\n      properties:\n        Token:\n          type: array\n          items:\n            $ref: '#/components/schemas/Token'\n    inline_response_200:\n      type: object\n      properties:\n        Username:\n          type: string\n        ImporStatus:\n          type: string\n      example: '{Username=LitmosLearner, ImportStatus=Failed - Unknown Error}'\n    collectionscollectionIdcourses_Course:\n      type: object\n      properties:\n        CourseId:\n          type: string\n          format: EncryptedId\n        SeqId:\n          type: integer\n          format: int32\n    Body:\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/collectionscollectionIdcourses_Course'\n      example:\n        Course:\n          CourseId: gqYHrApPYuQ1\n          SeqId: 1\n      xml:\n        name: Courses\n    Body_1:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n      example:\n        Id: gqYHrApPYuQ1\n      xml:\n        name: Courses\n    collectionscollectionIdlearningpaths_LearningPath:\n      type: object\n      properties:\n        LearnigPathId:\n          type: string\n          format: EncryptedId\n        SeqId:\n          type: integer\n          format: int32\n    Body_2:\n      type: object\n      properties:\n        LearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/collectionscollectionIdlearningpaths_LearningPath'\n      example:\n        LearningPath:\n          LearningPathId: 9Tx5gErG1z81\n          SeqId: 2\n      xml:\n        name: LearningPaths\n    Body_3:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n      example:\n        Id: 9Tx5gErG1z81\n      xml:\n        name: LearningPaths\n    inline_response_200_1:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalId:\n          type: string\n          format: Id\n        Code:\n          type: string\n        Name:\n          type: string\n        Description:\n          type: string\n        CourseCode:\n          type: string\n          format: Id\n        Active:\n          type: boolean\n        IncludeInLibrary:\n          type: boolean\n        CompleteInOrder:\n          type: boolean\n        CourseImageURL:\n          type: string\n          format: url\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: EncryptedId\n        UpdatedBy:\n          type: string\n          format: EncryptedId\n        ForSale:\n          type: boolean\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        Price:\n          type: string\n          format: integer\n        AccessTillDate:\n          type: string\n          format: date-time\n        AccessTillDays:\n          type: string\n          format: date-time\n        DueDate:\n          type: string\n          format: date-time\n        DueDateSpan:\n          type: string\n          format: integer\n        ComplianceDate:\n          type: string\n          format: date-time\n        ComplianceDateSpan:\n          type: string\n          format: integer\n        ComplianceRetake:\n          type: string\n          format: integer\n        Languages:\n          type: array\n          items:\n            type: string\n        Topics:\n          type: string\n        Tags:\n          type: string\n        CoursePreRequisites:\n          type: string\n          format: EncryptedId\n        LearningPathPreRequisites:\n          type: string\n          format: EncryptedId\n        Skills:\n          type: string\n        Social:\n          type: boolean\n        DiscussionForum:\n          type: boolean\n        AdvCourseCustomField1:\n          type: string\n        AdvCourseCustomField2:\n          type: string\n        AdvCourseCustomField3:\n          type: string\n        AdvCourseCustomField4:\n          type: string\n        AdvCourseCustomField5:\n          type: string\n        AdvCourseCustomField6:\n          type: string\n        AdvCourseCustomField7:\n          type: string\n        AdvCourseCustomField8:\n          type: string\n        AdvCourseCustomField9:\n          type: string\n        AdvCourseCustomField10:\n          type: string\n        AllModulesNewWindow:\n          type: boolean\n        Certificate:\n          type: boolean\n        BoostsReleased:\n          type: integer\n          format: int32\n        BoostsFrequency:\n          type: integer\n          format: int32\n      example: '{Id=gqYHrApPYuQ1, OriginalId=5857921, Code=DOJO104, Name=0 - Getting\n        Started with Litmos, Description=This course will provide a brief introduction\n        to all the cool features of Litmos.   Within minutes, you will be creating\n        your own courses, adding users, and even customizing the look and feel of\n        the learner experience.  See how easy it is to get up and running.  With SAP\n        Litmos Training, you will love your LMS!, CourseCode=5857921-DOJO104, Active=true,\n        IncludeInLibrary=true, CompleteInOrder=false, CourseImageURL=https://d16smq18f8amlc.cloudfront.net/53209/CourseImages/5051839-58707278-0307-4098-8590-5e371466f1b4.png?Expires=1632246724\u0026amp;Signature=UZ-1EoFxcctq-zchQjotYcNVrlIQ8S8anCqQedzWJPycac0fR8IbsvIYYok5BG98s7p5M6DRhZxSUIVdkDsWF8tYssnysz4U~a8ECHUkiYEvg7p25mCZulXz7l2NIPyUW8T8ks1Hwh7LOgLTYbkzkCstknLJc2q84OEGpCa0OJU_\u0026amp;Key-Pair-Id=APKAIQKC33KEMABEYE6A,\n        CreateDate=2021-05-10T16:14:38.093+0000, UpdatedDate=2021-05-10T23:55:32.817+0000,\n        CreatedBy=zanYrq_eO1c1, UpdatedBy=Oe4zZK7ZntpWn8FLGZTxuw2, ForSale=false,\n        Tags=Beginner, Social=false, DiscussionForum=false, AdvCourseCustomField1=4,\n        AllModulesNewWindow=false, Certificate=false, BoostsReleased=0, BoostFrequency=2}'\n    inline_response_200_2:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserName:\n          type: string\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Completed:\n          type: boolean\n        PercentageComplete:\n          type: string\n          format: integer\n        CompliantTill:\n          type: string\n          format: date-time\n        DueDate:\n          type: string\n          format: date-time\n      example: '{Id=-bA-I8jb-tXUrvqglbdc1A2, Username=LennyLitmos, FirstName=Leonard,\n        LastName=Somtil, Completed=false, PercentageComplete=0.0}'\n    inline_response_200_3:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserOriginalId:\n          type: string\n          format: Id\n        UserName:\n          type: string\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Active:\n          type: boolean\n        Email:\n          type: string\n        AccessLevel:\n          type: string\n        LoginKey:\n          type: string\n        CourseId:\n          type: string\n          format: EncryptedId\n        CourseOriginalId:\n          type: string\n          format: Id\n        UpdatedDate:\n          type: string\n          format: date-time\n        Code:\n          type: string\n        CourseName:\n          type: string\n        Complete:\n          type: boolean\n        PercentageComplete:\n          type: string\n          format: integer\n        CompletedDate:\n          type: string\n          format: date-time\n        UpToDate:\n          type: boolean\n        Overdue:\n          type: boolean\n        CompliantTillDate:\n          type: string\n          format: date-time\n      example: '{Id=Oe4zZK7ZntpWn8FLGZTxuw2, UserOriginalId=22584109, UserName=LitmosIntegrations,\n        FirstName=SAP, LastName=Litmos, Active=true, Email=Litmos_integrations@SAP.com,\n        AccesLevel=Account_Owner, LoginKey=https://apibushub.litmos.com/login.aspx?loginkey=49791dec-e090-48cf-bd5c-55af364fc9c3,\n        CourseId=gqYHrApPYuQ1, CourseOriginalId=5857921, UpdatedDate=2021-09-20T19:19:58.097+0000,\n        Code=DOJO104, CourseName=0 - Getting Started with Litmos, Complete=false,\n        PercentageComplete=50.0, UpToDate=true, Overdue=fale}'\n    inline_response_200_4:\n      type: object\n      properties:\n        parameter:\n          type: string\n      example: '{parameter=Continuing Education Units}'\n    inline_response_200_5_Module:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalId:\n          type: string\n          format: Id\n        Name:\n          type: string\n        Description:\n          type: string\n        Active:\n          type: boolean\n        Passmark:\n          type: integer\n          format: decimal\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        ModuleType:\n          type: string\n      example: '{\"Id\":\"FOkl7r-pv5lMuOz2x2dlgQ2\",\"OriginalId\":10644730,\"Name\":\"Example\n        Assessment Title\",\"Description\":\"Example Assessment Description\",\"Active\":true,\"Passmark\":100,\"CreatedDate\":\"2021-07-12T22:53:30.583\",\"UpdatedDate\":\"2021-07-12T22:53:30.583\",\"CreatedBy\":22584109,\"ModuleType\":\"Assessment\"}'\n    inline_response_200_5:\n      type: object\n      properties:\n        Module:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_5_Module'\n    inline_response_200_6_Course:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Code:\n          type: string\n        Name:\n          type: string\n        Active:\n          type: boolean\n        ForSale:\n          type: boolean\n        OriginalCourseId:\n          type: string\n          format: Id\n        Description:\n          type: string\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        CourseCodeForBulkImport:\n          type: string\n        Price:\n          type: integer\n          format: decimal\n        AccessTillDate:\n          type: string\n          format: date-time\n        AccessTillDays:\n          type: integer\n          format: int32\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        UpdatedBy:\n          type: string\n          format: Id\n        CompliantTillDays:\n          type: integer\n          format: int32\n        TimeLimitDate:\n          type: string\n          format: date-time\n        TimeLimitDays:\n          type: integer\n          format: int32\n        DisplayOrder:\n          type: integer\n          format: int32\n        IncludeInLibrary:\n          type: boolean\n        CourseImageURL:\n          type: string\n          format: URL\n      example: '{\"Id\":\"glLI883QNYk1\",\"Code\":\"Example-101\",\"Name\":\"Example Course\",\"Active\":true,\"ForSale\":true,\"OriginalCourseId\":6064810,\"Description\":\"Example\n        Course Description\",\"EcommerceShortDescription\":\"Example short description\n        for ecommerce shopping cart checkout\",\"EcommerceLongDescription\":\"Example\n        long description for ecommerce shopping cart checkout\",\"CourseCodeForBulkImport\":\"6064810-A\",\"Price\":100.0,\"CreatedDate\":\"2021-07-09T14:54:38.197+0000\",\"UpdatedDate\":\"2021-09-21T21:26:13.000+0000\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109,\"TimeLimitDays\":0,\"DisplayOrder\":0,\"IncludeInLibrary\":false}'\n    inline_response_200_6:\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_6_Course'\n    inline_response_200_7_LearningPath:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Description:\n          type: string\n        Active:\n          type: boolean\n        OriginalId:\n          type: string\n          format: Id\n        ForSale:\n          type: boolean\n        Price:\n          type: integer\n          format: decimal\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        AccessTillDate:\n          type: string\n          format: date-time\n        AccessTillDays:\n          type: integer\n          format: int32\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        DisplayOrder:\n          type: integer\n          format: int32\n        IncludeInLibrary:\n          type: boolean\n        IsCourseOptionalOrder:\n          type: boolean\n        ImageURL:\n          type: string\n          format: URL\n      example: '{\"Id\":\"tI5Elw83pIU1\",\"Name\":\"Example Learning Path\",\"Active\":true,\"OriginalId\":153369,\"ForSale\":true,\"Price\":200.0,\"EcommerceShortDescription\":\"Example\n        short description for ecommerce shopping cart checkout\",\"EcommerceLongDescription\":\"Example\n        long description for ecommerce shopping cart checkout\",\"CreatedDate\":\"2021-07-13T16:38:54.537\",\"UpdatedDate\":\"2021-09-21T21:26:13.033\",\"CreatedBy\":22584109,\"DisplayOrder\":0,\"IncludeInLibrary\":false,\"IsCourseOptionalOrder\":false}'\n    inline_response_200_7:\n      type: object\n      properties:\n        LearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_7_LearningPath'\n    inline_response_200_8_ModuleResult:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserId:\n          type: string\n          format: EncryptedId\n        OriginalModuleId:\n          type: string\n          format: EncryptedId\n        OriginalUserId:\n          type: string\n          format: EncryptedId\n        ModuleResultId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        Name:\n          type: string\n        Passmark:\n          type: integer\n          format: decimal\n        Score:\n          type: integer\n          format: int32\n        UserName:\n          type: string\n          format: Username\n        Completed:\n          type: boolean\n        AttemptNumber:\n          type: integer\n          format: int32\n        CreatedBy:\n          type: string\n          format: EncryptedId\n        FinishedDate:\n          type: string\n          format: date-time\n        CreatedDate:\n          type: string\n          format: date-time\n        StartedDate:\n          type: string\n          format: date-time\n        TimeTaken:\n          type: string\n          format: time\n        UpdatedDate:\n          type: string\n          format: date-time\n        Code:\n          type: string\n      example: '{\"Id\":\"7jGr3vKYlweyjWqzaypWXQ2\",\"UserId\":\"Oe4zZK7ZntpWn8FLGZTxuw2\",\"OriginalModuleId\":10323350,\"OriginalUserId\":22584109,\"ModuleResultId\":371938307,\"Active\":true,\"Name\":\"0\n        - Getting Started with Litmos\",\"Passmark\":0,\"Score\":0,\"UserName\":\"LitmosIntegrations\",\"Completed\":true,\"AttemptNumber\":1,\"CreatedBy\":-1,\"FinishedDate\":\"2021-09-20T00:00:00\",\"CreatedDate\":\"2021-09-20T19:19:58.08\",\"StartedDate\":\"2021-09-20T00:00:00\",\"TimeTaken\":\"00:00:39\",\"UpdatedDate\":\"2021-09-20T23:25:47.590+0000\"}'\n    inline_response_200_8:\n      type: object\n      properties:\n        ModuleResult:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_8_ModuleResult'\n    inline_response_200_9_UserResult:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserId:\n          type: string\n          format: EncryptedId\n        OriginalCourseId:\n          type: string\n          format: EncryptedId\n        OriginalUserId:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Active:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        StartedDate:\n          type: string\n          format: date-time\n        Completed:\n          type: boolean\n        PercentageComplete:\n          type: integer\n          format: decimal\n        CompletedDate:\n          type: string\n          format: date-time\n        UpToDate:\n          type: string\n          format: date-time\n        Overdue:\n          type: boolean\n        CompliantTillDate:\n          type: string\n          format: date-time\n        DueDate:\n          type: string\n          format: date-time\n        LastAttemptDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: EncryptedId\n        UpdatedBy:\n          type: string\n          format: EncryptedId\n        Code:\n          type: string\n        UserName:\n          type: string\n          format: Username\n        LearningPathAssignment:\n          type: boolean\n        TeamAssignment:\n          type: boolean\n      example: '{\"Id\":\"gqYHrApPYuQ1\",\"UserId\":\"Oe4zZK7ZntpWn8FLGZTxuw2\",\"OriginalCourseId\":5857921,\"OriginalUserId\":22584109,\"Name\":\"0\n        - Getting Started with Litmos\",\"Active\":true,\"CreatedDate\":\"2021-09-20T19:19:55.847\",\"UpdatedDate\":\"2021-09-20T23:25:47.603\",\"StartedDate\":\"2021-05-11T18:27:24.577\",\"Completed\":true,\"PercentageComplete\":100.0,\"CompletedDate\":\"2021-09-20T23:25:47.603\",\"UpToDate\":true,\"Overdue\":false,\"LastAttemptDate\":\"2021-09-20T23:25:47.603\",\"CreatedBy\":\"-1\",\"UpdatedBy\":22584109,\"Code\":\"DOJO104\",\"UserName\":\"LitmosIntegrations\"}'\n    inline_response_200_9:\n      type: object\n      properties:\n        UserResult:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_9_UserResult'\n    inline_response_200_10_LearningPathResult:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserId:\n          type: string\n          format: EncryptedId\n        OriginalLearningPathId:\n          type: string\n          format: EncryptedId\n        OriginalUserId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        Name:\n          type: string\n        PercentageComplete:\n          type: integer\n          format: decimal\n        Completed:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CompliantTillDate:\n          type: string\n          format: date-time\n        StartDate:\n          type: string\n          format: date-time\n        FinishDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n      example: '{\"Id\":\"tI5Elw83pIU1\",\"UserId\":\"-bA-I8jb-tXUrvqglbdc1A2\",\"OriginalLearningPathId\":153369,\"OriginalUserId\":23180609,\"Active\":true,\"Name\":\"Example\n        Learning Path\",\"PercentageComplete\":0.0,\"Completed\":false,\"CreatedDate\":\"2021-09-21T18:44:28.500+0000\",\"UpdatedDate\":\"2021-09-21T21:26:13.017+0000\",\"CreatedBy\":22584109}'\n    inline_response_200_10:\n      type: object\n      properties:\n        LearningPathResult:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_10_LearningPathResult'\n    inline_response_200_11_Achievement:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserId:\n          type: string\n          format: EncryptedId\n        CourseId:\n          type: string\n          format: EncryptedId\n        LearningPathId:\n          type: string\n          format: EncryptedId\n        OriginalAchievementId:\n          type: string\n          format: EncryptedId\n        OriginalUserId:\n          type: string\n          format: EncryptedId\n        OriginalCourseId:\n          type: string\n          format: EncryptedId\n        OriginalLearningPathId:\n          type: string\n          format: EncryptedId\n        ComplaintTillDate:\n          type: string\n          format: date-time\n        Title:\n          type: string\n        AchievementDate:\n          type: string\n          format: date-time\n        Type:\n          type: string\n        CertificateId:\n          type: string\n          format: EncryptedId\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: date-time\n        UpdatedBy:\n          type: string\n          format: date-time\n      example: '{\"Id\":\"kBI2vqBRa-0-d0bKnQoICg2\",\"UserId\":\"Oe4zZK7ZntpWn8FLGZTxuw2\",\"CourseId\":91450502,\"OriginalAchievementId\":91450502,\"OriginalUserId\":22584109,\"OriginalCourseId\":5857921,\"Title\":\"2021-05-11T18:27:24.763\",\"AchievementDate\":\"2021-05-11T18:27:24.763\",\"Type\":\"Course\n        Completed\",\"CreatedDate\":\"2021-05-11T18:27:24.793\",\"UpdatedDate\":\"2021-09-20T23:25:47.603\",\"CreatedBy\":222584109,\"UpdatedBy\":-1}'\n    inline_response_200_11:\n      type: object\n      properties:\n        Achievement:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_11_Achievement'\n    inline_response_200_12_CourseModule:\n      type: object\n      properties:\n        CourseId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalCourseId:\n          type: string\n          format: EncryptedId\n        OriginalModuleId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: id\n        UpdatedBy:\n          type: string\n          format: id\n      example: '{\"CourseId\":\"glLI883QNYk1\",\"Id\":\"moHEukI6umGTYBcFqKcppw2\",\"OriginalCourseId\":606481,\"OriginalModuleId\":11064556,\"Active\":true,\"CreatedDate\":\"2021-09-21T21:26:13\",\"UpdatedDate\":\"2021-09-21T21:26:13\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109}'\n    inline_response_200_12:\n      type: object\n      properties:\n        CourseModule:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_12_CourseModule'\n    inline_response_200_13_LearningPathCourse:\n      type: object\n      properties:\n        LearningPathId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalLearningPathId:\n          type: string\n          format: EncryptedId\n        OriginalCourseId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: id\n        UpdatedBy:\n          type: string\n          format: id\n      example: '{\"LearningPathId\":\"tI5Elw83pIU1\",\"Id\":\"5b0yGqjL4Qs1\",\"OriginalLearningPathId\":153369,\"OriginalCourseId\":5857904,\"Active\":true,\"CreatedDate\":\"2021-09-21T22:48:24.593\",\"UpdatedDate\":\"2021-09-21T22:48:24.593\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109}'\n    inline_response_200_13:\n      type: object\n      properties:\n        LearningPathCourse:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_13_LearningPathCourse'\n    inline_response_200_14_UserCourse:\n      type: object\n      properties:\n        UserId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalUserId:\n          type: string\n          format: EncryptedId\n        OriginalCourseId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: id\n        UpdatedBy:\n          type: string\n          format: id\n      example: '{\"UserId\":\"Oe4zZK7ZntpWn8FLGZTxuw2\",\"Id\":\"gqYHrApPYuQ1\",\"OriginalUserId\":22584109,\"OriginalCourseId\":5857921,\"Active\":true,\"CreatedDate\":\"2021-09-20T19:19:55.847\",\"UpdatedDate\":\"2021-09-20T19:19:55.847\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109}'\n    inline_response_200_14:\n      type: object\n      properties:\n        UserCourse:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_14_UserCourse'\n    inline_response_200_15_LearningPathUser:\n      type: object\n      properties:\n        LearningPathId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalLearningPathId:\n          type: string\n          format: EncryptedId\n        Active:\n          type: boolean\n        OriginalUserId:\n          type: string\n          format: EncryptedId\n        CreatedBy:\n          type: string\n          format: id\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedBy:\n          type: string\n          format: id\n        UpdatedDate:\n          type: string\n          format: date-time\n      example: '{\"LearningPathId\":\"tI5Elw83pIU1\",\"Id\":\"-bA-I8jb-tXUrvqglbdc1A2\",\"OriginalLearningPathId\":153369,\"Active\":true,\"OriginalUserId\":23180609,\"CreatedBy\":22584109,\"CreatedDate\":\"2021-09-21T18:44:28.49\",\"UpdatedBy\":0}'\n    inline_response_200_15:\n      type: object\n      properties:\n        LearningPathUser:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_15_LearningPathUser'\n    inline_response_200_16_Team:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        OriginalTeamId:\n          type: string\n          format: Id\n        Active:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        UpdatedBy:\n          type: string\n          format: Id\n        ParentTeamId:\n          type: string\n          format: EncryptedId\n        TeamCodeForBulkImport:\n          type: string\n      example: '{\"Id\":\"Qx-gekjRqbA1\",\"Name\":1988719,\"OriginalTeamId\":1988719,\"CreatedDate\":\"2021-09-21T23:05:25.903\",\"UpdatedDate\":\"2021-09-21T23:05:25.903\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109,\"ParentTeamId\":\"9Tx5gErG1z81\",\"TeamCodeForBulkImport\":\"1988719-Example3SubTeamName\"}'\n    inline_response_200_16:\n      type: object\n      properties:\n        Team:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_16_Team'\n    inline_response_200_17_TeamUser:\n      type: object\n      properties:\n        TeamId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalTeamId:\n          type: string\n          format: Id\n        OriginalUserId:\n          type: string\n          format: Id\n        Active:\n          type: boolean\n        IsTeamLeader:\n          type: boolean\n        IsTeamAdmin:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        UpdatedBy:\n          type: string\n          format: Id\n      example: '{\"TeamId\":\"9eJGkqnHg041\",\"Id\":\"Oe4zZK7ZntpWn8FLGZTxuw2\",\"OriginalTeamId\":191220,\"OriginalUserId\":22584109,\"Active\":true,\"IsTeamLeader\":false,\"IsTeamAdmin\":true,\"CreatedDate\":\"2021-09-21T00:23:46.967\",\"UpdatedDate\":\"2021-09-21T00:23:58.627\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109}'\n    inline_response_200_17:\n      type: object\n      properties:\n        TeamUser:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_17_TeamUser'\n    inline_response_200_18_TeamCourse:\n      type: object\n      properties:\n        TeamId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalCourseId:\n          type: string\n          format: Id\n        OriginalTeamId:\n          type: string\n          format: Id\n        Active:\n          type: boolean\n        IsInTeamLibrary:\n          type: boolean\n        LearningPathAssignment:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        UpdatedBy:\n          type: string\n          format: Id\n      example: '{\"TeamId\":\"j9RyG2ICy_M1\",\"Id\":\"uxLhfIng9YY1\",\"OriginalCourseId\":5857899,\"OriginalTeamId\":1869991,\"Active\":true,\"IsInTeamLibrary\":false,\"LearningPathAssignment\":false,\"CreatedDate\":\"2021-09-21T23:18:39.18\",\"UpdatedDate\":\"2021-09-21T23:18:39.18\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109}'\n    inline_response_200_18:\n      type: object\n      properties:\n        TeamCourse:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_18_TeamCourse'\n    inline_response_200_19_TeamLearningPath:\n      type: object\n      properties:\n        TeamId:\n          type: string\n          format: EncryptedId\n        Id:\n          type: string\n          format: EncryptedId\n        OriginalLearningPathId:\n          type: string\n          format: Id\n        OriginalTeamId:\n          type: string\n          format: Id\n        Active:\n          type: boolean\n        IsInTeamLibrary:\n          type: boolean\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        UpdatedBy:\n          type: string\n          format: Id\n      example: '{\"TeamId\":\"mDbE1cS3dZY1\",\"Id\":\"ahi_5n5C02E1\",\"OriginalLearningPathId\":148263,\"OriginalTeamId\":1870009,\"Active\":true,\"IsInTeamLibrary\":false,\"CreatedDate\":\"2021-09-21T23:24:05.437\",\"UpdatedDate\":\"2021-09-21T23:24:05.437\",\"CreatedBy\":22584109,\"UpdatedBy\":22584109}'\n    inline_response_200_19:\n      type: object\n      properties:\n        TeamLearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_19_TeamLearningPath'\n    inline_response_200_20_User:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserName:\n          type: string\n          format: Username\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        FullName:\n          type: string\n        Email:\n          type: string\n          format: Email address\n        AccessLevel:\n          type: string\n        DisableMessages:\n          type: boolean\n        Active:\n          type: boolean\n        Skype:\n          type: string\n        PhoneWork:\n          type: string\n        PhoneMobile:\n          type: string\n        LastLogin:\n          type: string\n          readOnly: true\n        LoginKey:\n          type: string\n          readOnly: true\n        IsCustomUsername:\n          type: boolean\n        TimeZone:\n          type: string\n        SalesforceId:\n          type: string\n          format: SalesforceId\n        OriginalUserId:\n          type: string\n          format: id\n          readOnly: true\n        Street1:\n          type: string\n        Street2:\n          type: string\n        City:\n          type: string\n        State:\n          type: string\n        PostalCode:\n          type: string\n        Country:\n          type: string\n        CompanyName:\n          type: string\n        JobTitle:\n          type: string\n        CustomField1:\n          type: string\n        CustomField2:\n          type: string\n        CustomField3:\n          type: string\n        CustomField4:\n          type: string\n        CustomField5:\n          type: string\n        CustomField6:\n          type: string\n        CustomField7:\n          type: string\n        CustomField8:\n          type: string\n        CustomField9:\n          type: string\n        CustomField10:\n          type: string\n        SalesforceContactId:\n          type: string\n          format: SalesforceId\n        SalesforceAccountId:\n          type: string\n          format: SalesforceId\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: Id\n        UpdatedBy:\n          type: string\n          format: Id\n        Brand:\n          type: string\n        ManagerId:\n          type: string\n          format: EncryptedId\n        ManagerName:\n          type: string\n          format: Username\n        EnableTextNotification:\n          type: boolean\n        Website:\n          type: string\n        Twitter:\n          type: string\n        ExpirationDate:\n          type: string\n          format: date-time\n        ExternalEmployeeId:\n          type: string\n        ProfileType:\n          pattern: internal, external\n          type: string\n      example: '{\"Id\":\"-bA-I8jb-tXUrvqglbdc1A2\",\"UserName\":\"LennyLitmos\",\"FirstName\":\"Leonard\",\"LastName\":\"Somtil\",\"FullName\":\"LeondardMSomtil\",\"Email\":\"LeonardSomtil@sap.com\",\"AccessLevel\":\"Learner\",\"DisableMessages\":\"false\",\"Active\":\"true\",\"Skype\":\"LeoMSomtil_Skype\",\"PhoneWork\":\"925-251-0000\",\"PhoneMobile\":\"925-251-0000\",\"LastLogin\":\"2021-09-20T20:50:36Z\",\"LoginKey\":\"/login.aspx?loginkey=\",\"IsCustomUsername\":\"false\",\"TimeZone\":\"Pacific\n        Standard Time\",\"Street1\":\"2700 Camino Ramon\",\"Street2\":\"Suite 400\",\"City\":\"San\n        Ramon\",\"State\":\"California\",\"PostalCode\":94521,\"Country\":\"United States of\n        America\",\"CompanyName\":\"SAP Litmos\",\"JobTitle\":\"Mascot\",\"CustomField1\":\"CustomField1\",\"CustomField2\":\"CustomField2\",\"CustomField3\":\"CustomField3\",\"CustomField4\":\"CustomField4\",\"CustomField5\":\"CustomField5\",\"CustomField6\":\"CustomField6\",\"CustomField7\":\"CustomField7\",\"CustomField8\":\"CustomField8\",\"CustomField9\":\"CustomField9\",\"CustomField10\":\"CustomField10\",\"CreatedBy\":0,\"UpdatedBy\":0,\"Brand\":\"Default\",\"EnableTextNotification\":\"false\",\"Website\":\"https://www.litmos.com\",\"Twitter\":\"@Litmos\",\"ExternalEmployeeId\":17043521,\"ProfileType\":\"Internal\"}'\n    inline_response_200_20:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_20_User'\n    inline_response_200_21_Course:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Code:\n          type: string\n        Name:\n          type: string\n        Active:\n          type: boolean\n        UpdatedBy:\n          type: string\n          format: EncryptedId\n        OriginalId:\n          type: string\n          format: Id\n        Description:\n          type: string\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        Skills:\n          type: string\n        Price:\n          type: integer\n          format: int32\n        AccessTillDate:\n          type: string\n          format: date-tinme\n        AccessTillDays:\n          type: integer\n          format: int32\n        CoursePreRequisites:\n          type: string\n          format: EncryptedId\n        LearningPathPreRequisites:\n          type: string\n          format: EncryptedId\n        Currency:\n          type: string\n        Languages:\n          type: string\n        Topics:\n          type: string\n        Tags:\n          type: string\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: EncryptedId\n    inline_response_200_21_Courses:\n      type: object\n      properties:\n        Course:\n          $ref: '#/components/schemas/inline_response_200_21_Course'\n    inline_response_200_21:\n      type: object\n      properties:\n        Courses:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_21_Courses'\n      example: '{Courses={Course={Id=LitmosLearner, Code=6064810-A, Name=Example Course,\n        Active=true, UpdatedBy=22584109, OriginalId=6064810, Description=Example Course\n        Description, EcommerceShortDescription=Example short description for ecommerce\n        shopping cart checkout, EcommerceLongDescription=Example long description\n        for ecommerce shopping cart checkout, Price=100.0, CoursePreRequisites=5857921,\n        LearningPathPreRequisites=148263, Currency=USD, Languages=English (United\n        States), Topics=Example Topic, Tags=examplecontenttag, CreatedDate=2021-07-09T14:54:38.197+0000,\n        UpdatedDate=2021-09-20T20:59:29.210+0000, CreatedBy=22584109}}}'\n    inline_response_200_22_LearningPath:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Description:\n          type: string\n        Active:\n          type: boolean\n        OriginalId:\n          type: string\n          format: Id\n        Price:\n          type: integer\n          format: int32\n        EcommerceShortDescription:\n          type: string\n        EcommerceLongDescription:\n          type: string\n        AccessTillDate:\n          type: string\n          format: date-tinme\n        AccessTillDays:\n          type: integer\n          format: int32\n        CreatedDate:\n          type: string\n          format: date-time\n        UpdatedDate:\n          type: string\n          format: date-time\n        CreatedBy:\n          type: string\n          format: EncryptedId\n        Code:\n          type: string\n        Currency:\n          type: string\n        Languages:\n          type: string\n        Topics:\n          type: string\n        Tags:\n          type: string\n        CoursePreRequisites:\n          type: string\n          format: EncryptedId\n        LearningPathPreRequisites:\n          type: string\n          format: EncryptedId\n        Skills:\n          type: string\n        UpdatedBy:\n          type: string\n          format: EncryptedId\n    inline_response_200_22_LearningPaths:\n      type: object\n      properties:\n        LearningPath:\n          $ref: '#/components/schemas/inline_response_200_22_LearningPath'\n    inline_response_200_22:\n      type: object\n      properties:\n        LearningPaths:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_22_LearningPaths'\n      example: '{LearningPaths={LearningPath={Id=LitmosLearner, Code=6064810-A, Name=Example\n        Course, Active=true, UpdatedBy=22584109, OriginalId=6064810, Description=Example\n        Course Description, EcommerceShortDescription=Example short description for\n        ecommerce shopping cart checkout, EcommerceLongDescription=Example long description\n        for ecommerce shopping cart checkout, Price=100.0, CoursePreRequisites=5857921,\n        LearningPathPreRequisites=148263, Currency=USD, Languages=English (United\n        States), Topics=Example Topic, Tags=examplecontenttag, CreatedDate=2021-07-09T14:54:38.197+0000,\n        UpdatedDate=2021-09-20T20:59:29.210+0000, CreatedBy=22584109}}}'\n    inline_response_200_23:\n      type: object\n      properties:\n        TotalBadgesEarned:\n          type: integer\n          format: int32\n        TotalPointsEarned:\n          type: integer\n          format: int32\n      example: '{TotalBadgessEarned=0.0, TotalPointsEarned=0.0}'\n    inline_response_200_24:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Title:\n          type: string\n        Description:\n          type: string\n        Icon:\n          type: string\n          format: URL\n        IconBadgeColor:\n          type: string\n      example: '{Id=XRBgquwAvjw1, Title=DOJO101, Description=Litmos Dojo - WHITE BELT,\n        Icon=https://cdn1.litmos.com/146205/Badges/44975-LitmosDojoWhiteBelt.png?Expires=1632266802\u0026amp;Signature=N~U8eK~OVZKkiUNr7rEYlDqxL8NfzLCUW4GHOJ8AabiTiAicC0saurVfogMVXp3VCtXdTvGmBbIf61Z-pVcff~ozIGzqv3tO~SBElFht-A79ObFCqzv1lfjOyy9zZeHdAOYQ592xuipTDAw0QnXVclNxVq4h7SzmEH2FVgSFCBI_\u0026amp;Key-Pair-Id=APKAIQKC33KEMABEYE6A}'\n    teamsteamIdlearningpaths_LearningPath:\n      type: object\n      properties:\n        LearningPathId:\n          type: string\n          format: EncryptedId\n      example: '{\"LearnigPathId\":\"ahi_5n5C02E1\"}'\n    Body_4:\n      type: object\n      properties:\n        LearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/teamsteamIdlearningpaths_LearningPath'\n      xml:\n        name: LearningPaths\n    inline_response_200_25_User:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Username:\n          type: string\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Active:\n          type: boolean\n        Email:\n          type: string\n          format: email address\n        AccessLevel:\n          type: string\n        Brand:\n          type: string\n    inline_response_200_25:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_25_User'\n      example: '{User={Id=pDRdxm9uiQLSbzewkldUsA2, UserName=LitmosLearner, FirstName=Jane,\n        LastName=Doe, Active=true, Email=Litmos_JaneDoe@litmos.com, AccessLevel=Learner,\n        Brand=Default}}'\n    inline_response_200_26_User:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserName:\n          type: string\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        FullName:\n          type: string\n        Email:\n          type: string\n        AccessLevel:\n          type: string\n        DisableMessages:\n          type: boolean\n        Active:\n          type: boolean\n        Skype:\n          type: string\n        PhoneWork:\n          type: string\n        PhoneMobile:\n          type: string\n        LastLogin:\n          type: string\n          format: date-time\n        LoginKey:\n          type: string\n          format: URL\n        IsCustomUsername:\n          type: boolean\n        SkipFirstLogin:\n          type: boolean\n        TimeZone:\n          type: string\n        SalesforceId:\n          type: string\n          format: salesforceId\n        OriginalId:\n          type: string\n          format: Id\n        Street1:\n          type: string\n        Street2:\n          type: string\n        City:\n          type: string\n        State:\n          type: string\n        PostalCode:\n          type: string\n        Country:\n          type: string\n        CompanyName:\n          type: string\n        JobTitle:\n          type: string\n        CustomField1:\n          type: string\n        CustomField2:\n          type: string\n        CustomField3:\n          type: string\n        CustomField4:\n          type: string\n        CustomField5:\n          type: string\n        CustomField6:\n          type: string\n        CustomField7:\n          type: string\n        CustomField8:\n          type: string\n        CustomField9:\n          type: string\n        CustomField10:\n          type: string\n        SalesforcecontactId:\n          type: string\n          format: salesforceId\n        SalesforceAccountId:\n          type: string\n          format: salesforceId\n        CreatedDate:\n          type: string\n          format: date-time\n        Points:\n          type: integer\n          format: int32\n        Brand:\n          type: string\n        ManagerId:\n          type: string\n          format: EncryptedId\n        ManagerName:\n          type: string\n          format: Username\n        EnableTextNotifications:\n          type: boolean\n        Website:\n          type: string\n        Twitter:\n          type: string\n        ExpirationDate:\n          type: string\n          format: date-time\n        JobRole:\n          type: string\n        ExternalEmployeeId:\n          type: string\n        ProfileType:\n          type: string\n    inline_response_200_26:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_26_User'\n      example: '{User={Id=-bA-I8jb-tXUrvqglbdc1A2, UserName=LennyLitmos, FirstName=Leonard,\n        LastName=Somtil, FullName=Leonard Somtil, Email=LeonardSomtil@sap.com, AccessLevel=Learner,\n        DisableMessages=true, Active=true, PhoneWork=925-251-2220, LastLogin=2021-09-20T20:50:36.000+0000,\n        LoginKey=https://apibushub.litmos.com/login.aspx?loginkey=9e9f63bc-805f-4e58-8e5c-347f37cbcacf,\n        IsCustomUsername=false, SkipFirstLogin=false, TimeZone=Pacific Standard Time,\n        OriginalId=23180609, Street1=2700 Camino Ramon, Street2=Suite 400, City=San\n        Ramon, State=California, PostalCode=94583, Country=United States of America,\n        CompanyName=SAP Litmos, JobTitle=Mascot, Culture=en-US, CreatedDate=2021-07-09T14:52:06.000+0000,\n        Points=0, Brand=Default, ManagerId=Oe4zZK7ZntpWn8FLGZTxuw2, ManagerName=SAP\n        Litmos LitmosIntegrations, EnableTextNotifications=false, Website=Litmos.com,\n        JobRole=Mascot, ExternalEmployeeId=17043521, ProfileType=Internal}}'\n    inline_response_200_27:\n      type: object\n      properties:\n        parameter:\n          type: string\n      example: '{parameter=Department}'\n    Body_5:\n      type: object\n      properties:\n        parameter:\n          type: string\n      example:\n        parameter: Department\n      xml:\n        name: ArrayOfparameter\n    inline_response_200_28_Course:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Code:\n          type: string\n        Name:\n          type: string\n        Active:\n          type: boolean\n        Complete:\n          type: boolean\n        PercentageComplete:\n          type: integer\n          format: int32\n        AssignedDate:\n          type: string\n          format: date-time\n        StartDate:\n          type: string\n          format: date-time\n        CompletedDate:\n          type: string\n          format: date-time\n        UpToDate:\n          type: boolean\n        Overdue:\n          type: boolean\n        ComplaintTill:\n          type: string\n          format: date-time\n        IsLearningPath:\n          type: boolean\n        CourseCreatedDate:\n          type: string\n          format: date-time\n        CourseCreator:\n          type: string\n          format: EncryptedId\n        OriginalId:\n          type: string\n          format: Id\n        ResultId:\n          type: string\n          format: EncryptedId\n        AccessTillDate:\n          type: string\n          format: date-time\n    inline_response_200_28:\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_28_Course'\n      example: '{Course={Id=gqYHrApPYuQ1, Code=0 - Getting Started with Litmos, Name=0\n        - Getting Started with Litmos, Active=true, Complete=false, PercentageComplete=0.0,\n        AssignedDate=2021-07-09T17:14:38.643+0000, UpToDate=true, Overdue=false, IsLearningPath=false,\n        CourseCreatedDate=2021-07-09T17:14:38.643+0000, OriginalId=5857921, ResultId=338120142}}'\n    usersuserIdcourses_Course:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n    Body_6:\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/usersuserIdcourses_Course'\n      example:\n        Course:\n          Id: gqYHrApPYuQ1\n      xml:\n        name: Courses\n    userscourses_User:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n      example: '{\"Id\":\"-bA-I8jb-tXUrvqglbdc1A2\"}'\n    Body_7:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/userscourses_User'\n      xml:\n        name: Users\n    inline_response_200_29_LearningPath:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        Name:\n          type: string\n        Active:\n          type: boolean\n        OriginalId:\n          type: string\n          format: Id\n        Complete:\n          type: boolean\n        PercentageComplete:\n          type: integer\n          format: int32\n        AssignedDate:\n          type: string\n          format: date-time\n        StartDate:\n          type: string\n          format: date-time\n        CompletedDate:\n          type: string\n          format: date-time\n        ResultId:\n          type: string\n          format: EncryptedId\n        AccessTillDate:\n          type: string\n          format: date-time\n    inline_response_200_29:\n      type: object\n      properties:\n        LearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_29_LearningPath'\n      example: '{LearningPath={Id=tI5Elw83pIU1, Name=Example Learning Path, Active=true,\n        OriginalId=153369, Complete=false, PercentageComplete=0.0, AssignedDate=2021-07-09T17:14:38.643+0000,\n        ResultId=338120142}}'\n    Body_8:\n      type: object\n      properties:\n        LearningPath:\n          type: array\n          items:\n            $ref: '#/components/schemas/usersuserIdcourses_Course'\n      example:\n        LearningPath:\n          Id: ahi_5n5C02E1\n      xml:\n        name: LearningPaths\n    teamsteamIdcourses_Course:\n      type: object\n      properties:\n        CourseId:\n          type: string\n          format: EncryptedId\n      example: '{\"CourseId\":\"gqYHrApPYuQ1\"}'\n    Body_9:\n      type: object\n      properties:\n        Course:\n          type: array\n          items:\n            $ref: '#/components/schemas/teamsteamIdcourses_Course'\n      xml:\n        name: Courses\n    inline_response_200_30_User:\n      type: object\n      properties:\n        Id:\n          type: string\n          format: EncryptedId\n        UserName:\n          type: string\n          format: Username\n        FirstName:\n          type: string\n        LastName:\n          type: string\n        Active:\n          type: boolean\n        Email:\n          type: string\n          format: email address\n        AccessLevel:\n          type: string\n        Brand:\n          type: string\n    inline_response_200_30:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_30_User'\n      example: '{User={Id=Oe4zZK7ZntpWn8FLGZTxuw2, UserName=LitmosIntegrations, FirstName=Litmos,\n        LastName=Integrations, Active=true, Email=Litmos_integrations@sap.com, AccessLevel=Account_Owner,\n        Brand=Default}}'\n    inline_response_200_31:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_30_User'\n      example: '{User={Id=-bA-I8jb-tXUrvqglbdc1A2, UserName=LennyLitmos, FirstName=Leonard,\n        LastName=Somtil, Active=true, Email=LeondardSomtil@sap.com, AccessLevel=Team_Leader,\n        Brand=Default}}'\n    Body_10:\n      type: object\n      properties:\n        User:\n          type: array\n          items:\n            $ref: '#/components/schemas/inline_response_200_30_User'\n      example:\n        User:\n          Id: Oe4zZK7ZntpWn8FLGZTxuw2\n          UserName: LitmosIntegrations\n          FirstName: Litmos\n          LastName: Integrations\n          Active: true\n          Email: Litmos_integrations@sap.com\n          AccessLevel: Account_Owner\n          Brand: Default\n      xml:\n        name: Users\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      description: Every user in Litmos has a unique API key. Only Account Owners\n        are able to view user record API keys, and access to operations via API are\n        restricted by access levels.\n      name: APIKey\n      in: header\nx-sap-api-type: REST\nx-sap-shortText: Online learning for every segment of your business.\nx-sap-api-deprecated: false\nx-sap-ext-overview:\n- name: API package\n  values:\n  - text: v1\n    format: plain\nx-servers:\n- url: https://api.litmos.com/v1.svc\n  description: Region - United States of America\n- url: https://api.litmos.com.au/v1.svc\n  description: Region - Australia\n- url: https://api.litmoseu.com/v1.svc\n  description: Region - Europe\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/sap.successfactors.litmos/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/sap.successfactors.litmos/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/teams/{teamId}/users\": at 1:234751: get: operation \"GetUsersinaTeam\": at 1:234758: responses: 200: at 1:235523: at 1:235534: content: content type \"application/teams/{teamid}/users/json\": mime: unexpected content after media subtype"
}