{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EMResearch/EMB"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "js_npm/rest/spacex-api/em/openapi.yaml",
			"byteSize": 82399,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: SpaceX API\n  description: Open Source REST API for launch, rocket, core, capsule, starlink, launchpad, and landing pad data (the APIs are defined based on https://github.com/r-spacex/SpaceX-API/blob/master/docs/v4/README.md).\nservers:\n  - url: /v4\ntags:\n  - name: Admin\n  - name: User\n    description: Detailed info about users\n  - name: Capsule\n    description: Detailed info for serialized dragon capsules\n  - name: Company\n    description: Detailed info about SpaceX as a company\n  - name: Core\n    description: Detailed info for serialized first stage cores\n  - name: Crew\n    description: Detailed info on dragon crew members\n  - name: Dragon\n    description: Detailed info about dragon capsule versions\n  - name: Landpad\n    description: Detailed info about landing pads and ships\n  - name: Launch\n    description: Detailed info about launches\n  - name: Launchpad\n    description: Detailed info about launchpads\n  - name: Payload\n    description: Detailed info about launch payloads\n  - name: Fairing\n    description: Detailed info on SpaceX fairings\n  - name: Roadster\n    description: Detailed info about Elon's Tesla roadster's current position\n  - name: Rocket\n    description: Detailed info about rocket versions\n  - name: Ship\n    description: Detailed info about ships in the SpaceX fleet\n  - name: Starlink\n    description: Detailed info about Starlink satellites and orbits. Includes raw orbit data from Space Track, updated hourly. Space Track data adheres to the standard for Orbit Data Messages\n  - name: History\n    description: Detailed info on SpaceX historical events\npaths:\n  /users:\n    get:\n      tags:\n        - User\n      description: Get all users\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/User'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - User\n      security:\n        - spacexKeyAuth: []\n      description: Create a user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /users/{id}:\n    get:\n      tags:\n        - User\n      description: Get a user\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the user to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/User'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - User\n      security:\n        - spacexKeyAuth: []\n      description: update a user\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the user to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - User\n      security:\n        - spacexKeyAuth: []\n      description: delete a user\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the user to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /users/query:\n    post:\n      tags:\n        - User\n      description: Query users\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /admin/cache:\n    delete:\n      tags:\n        - Admin\n      security:\n        - spacexKeyAuth: []\n      description: The api makes use of response caching via Redis for all GET requests,\n        and POST requests on query endpoints.\n      responses:\n        '200':\n          description: delete successfully\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /capsules:\n    get:\n      tags:\n        - Capsule\n      description: Get all capsules\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Capsule'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Capsule\n      security:\n        - spacexKeyAuth: []\n      description: Create a capsule\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Capsule'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /capsules/{id}:\n    get:\n      tags:\n        - Capsule\n      description: Get a capsule\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the capsule to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Capsule'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Capsule\n      security:\n        - spacexKeyAuth: []\n      description: update a capsules\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the capsule to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Capsule\n      security:\n        - spacexKeyAuth: []\n      description: delete a capsule\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the capsule to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /capsules/query:\n    post:\n      tags:\n        - Capsule\n      description: Query capsules\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /company:\n    get:\n      tags:\n        - Company\n      description: Get company info\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Company'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /company/{id}:\n    patch:\n      tags:\n        - Company\n      security:\n        - spacexKeyAuth: []\n      description: update a company\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the company to update\n      responses:\n        '200':\n          description: update successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /cores:\n    get:\n      tags:\n        - Core\n      description: Get all cores\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Core'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Core\n      security:\n        - spacexKeyAuth: []\n      description: Create a core\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Core'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /cores/{id}:\n    get:\n      tags:\n        - Core\n      description: Get a core\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the core to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Core'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Core\n      security:\n        - spacexKeyAuth: []\n      description: update a core\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the capsule to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Core\n      security:\n        - spacexKeyAuth: []\n      description: delete a core\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the capsule to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /cores/query:\n    post:\n      tags:\n        - Core\n      description: Query cores\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /crew:\n    get:\n      tags:\n        - Crew\n      description: Get all crew\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Crew'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Crew\n      security:\n        - spacexKeyAuth: []\n      description: Create a core\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Crew'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /crew/{id}:\n    get:\n      tags:\n        - Crew\n      description: Get a crew\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the crew to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Crew'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Crew\n      security:\n        - spacexKeyAuth: []\n      description: update a crew\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the crew to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Crew\n      security:\n        - spacexKeyAuth: []\n      description: delete a crew\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the crew to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /crew/query:\n    post:\n      tags:\n        - Core\n      description: Query crew\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /dragons:\n    get:\n      tags:\n        - Dragon\n      description: Get all dragons\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Dragon'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Dragon\n      security:\n        - spacexKeyAuth: []\n      description: Create a dragon\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dragon'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /dragons/{id}:\n    get:\n      tags:\n        - Dragon\n      description: Get a dragon\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the dragon to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Dragon'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Dragon\n      security:\n        - spacexKeyAuth: []\n      description: update a dragon\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the dragon to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Dragon\n      security:\n        - spacexKeyAuth: []\n      description: delete a dragon\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the dragon to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /dragons/query:\n    post:\n      tags:\n        - Dragon\n      description: Query dragon\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /landpads:\n    get:\n      tags:\n        - Landpad\n      description: Get all landpads\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/LandingPad'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Landpad\n      security:\n        - spacexKeyAuth: []\n      description: Create a landpad\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LandingPad'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /landpads/{id}:\n    get:\n      tags:\n        - Landpad\n      description: Get a landpad\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the landpad to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/LandingPad'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Landpad\n      security:\n        - spacexKeyAuth: []\n      description: update a landpad\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the landpad to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Landpad\n      security:\n        - spacexKeyAuth: []\n      description: delete a landpad\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the landpad to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /landpads/query:\n    post:\n      tags:\n        - Landpad\n      description: Query landpads\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches:\n    get:\n      tags:\n        - Launch\n      description: Get all launches\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Launch'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Launch\n      security:\n        - spacexKeyAuth: []\n      description: Create a launch\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Launch'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches/{id}:\n    get:\n      tags:\n        - Launch\n      description: Get a launch\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the launch to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Launch'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Launch\n      security:\n        - spacexKeyAuth: []\n      description: update a launch\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the launch to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Launch\n      security:\n        - spacexKeyAuth: []\n      description: delete a launch\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the launch to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches/query:\n    post:\n      tags:\n        - Launch\n      description: Query launch\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches/past:\n    get:\n      tags:\n        - Launch\n      description: Get past launches\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Launch'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches/upcoming:\n    get:\n      tags:\n        - Launch\n      description: Get upcoming launches\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Launch'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches/latest:\n    get:\n      tags:\n        - Launch\n      description: Get latest launch\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Launch'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launches/next:\n    get:\n      tags:\n        - Launch\n      description: Get next launch\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Launch'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launchpads:\n    get:\n      tags:\n        - Launchpad\n      description: Get all launchpads\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Launchpad'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Launchpad\n      security:\n        - spacexKeyAuth: []\n      description: Create a launchpad\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Launchpad'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launchpads/{id}:\n    get:\n      tags:\n        - Launchpad\n      description: Get a launchpad\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the launchpad to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Launchpad'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Launchpad\n      security:\n        - spacexKeyAuth: []\n      description: update a launchpad\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the launchpad to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Launchpad\n      security:\n        - spacexKeyAuth: []\n      description: delete a launchpad\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the launchpad to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /launchpads/query:\n    post:\n      tags:\n        - Launchpad\n      description: Query launchpads\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /payloads:\n    get:\n      tags:\n        - Payload\n      description: Get all payloads\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Payload'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Payload\n      security:\n        - spacexKeyAuth: []\n      description: Create a launchpad\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Payload'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /payloads/{id}:\n    get:\n      tags:\n        - Payload\n      description: Get a payload\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the payload to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Payload'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Payload\n      security:\n        - spacexKeyAuth: []\n      description: update a payload\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the payload to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Payload\n      security:\n        - spacexKeyAuth: []\n      description: delete a payload\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the payload to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /payloads/query:\n    post:\n      tags:\n        - Payload\n      description: Query payloads\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /fairings:\n    get:\n      tags:\n        - Fairing\n      description: Get all fairings\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Fairing'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Fairing\n      security:\n        - spacexKeyAuth: []\n      description: Create a fairing\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Fairing'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /fairings/{id}:\n    get:\n      tags:\n        - Fairing\n      description: Get a fairing\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the fairing to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Fairing'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Fairing\n      security:\n        - spacexKeyAuth: []\n      description: update a fairing\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the fairing to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Fairing\n      security:\n        - spacexKeyAuth: []\n      description: delete a fairing\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the fairing to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /fairings/query:\n    post:\n      tags:\n        - Fairing\n      description: Query fairings\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /roadster:\n    get:\n      tags:\n        - Roadster\n      description: Get roadster info\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fairing'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /roadster/{id}:\n    patch:\n      tags:\n        - Roadster\n      security:\n        - spacexKeyAuth: []\n      description: update a roadster\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the roadster to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /roadster/query:\n    post:\n      tags:\n        - Roadster\n      description: Query roadster\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /rockets:\n    get:\n      tags:\n        - Rocket\n      description: Get all rockets\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Rocket'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Rocket\n      security:\n        - spacexKeyAuth: []\n      description: Create a core\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Rocket'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /rockets/{id}:\n    get:\n      tags:\n        - Rocket\n      description: Get a rocket\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the rocket to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Rocket'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Rocket\n      security:\n        - spacexKeyAuth: []\n      description: update a rocket\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the rocket to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Rocket\n      security:\n        - spacexKeyAuth: []\n      description: delete a rocket\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the rocket to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /rockets/query:\n    post:\n      tags:\n        - Rocket\n      description: Query rockets\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /ships:\n    get:\n      tags:\n        - Ship\n      description: Get all ships\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Ship'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Ship\n      security:\n        - spacexKeyAuth: []\n      description: Create a ship\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Ship'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /ships/{id}:\n    get:\n      tags:\n        - Ship\n      description: Get a ship\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the ship to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Ship'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Ship\n      security:\n        - spacexKeyAuth: []\n      description: update a ship\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the ship to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Ship\n      security:\n        - spacexKeyAuth: []\n      description: delete a ship\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the ship to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /ships/query:\n    post:\n      tags:\n        - Ship\n      description: Query ships\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /starlink:\n    get:\n      tags:\n        - Starlink\n      description: Get all starlink\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Starlink'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - Starlink\n      security:\n        - spacexKeyAuth: []\n      description: Create a starlink\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Starlink'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /starlink/{id}:\n    get:\n      tags:\n        - Starlink\n      description: Get a starlink\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the starlink to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/Starlink'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - Starlink\n      security:\n        - spacexKeyAuth: []\n      description: update a starlink\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the starlink to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - Starlink\n      security:\n        - spacexKeyAuth: []\n      description: delete a starlink\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the starlink to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /starlink/query:\n    post:\n      tags:\n        - Starlink\n      description: Query starlink\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /history:\n    get:\n      tags:\n        - History\n      description: Get all historical events\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/History'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    post:\n      tags:\n        - History\n      security:\n        - spacexKeyAuth: []\n      description: Create a historical event\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/History'\n      responses:\n        '201':\n          description: Created\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /history/{id}:\n    get:\n      tags:\n        - History\n      description: Get a historical event\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the historical event to get\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                    $ref: '#/components/schemas/History'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    patch:\n      tags:\n        - History\n      security:\n        - spacexKeyAuth: []\n      description: update a historical event\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the historical event to update\n      responses:\n        '200':\n          description: update successfully\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status: \n                    type: string\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n    delete:\n      tags:\n        - History\n      security:\n        - spacexKeyAuth: []\n      description: delete a historical event\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: ID of the historical event to delete\n      responses:\n        '200':\n          description: delete successfully\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\n  /history/query:\n    post:\n      tags:\n        - History\n      description: Query historical events\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: get successfully\n          content:\n            application/json:\n              schema:\n                type: object\n        '400':\n          $ref: '#/components/responses/InvalidRequest'\ncomponents:\n  securitySchemes:\n    spacexKeyAuth:\n      type: http\n      scheme: spacex-key\n  responses:\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidRequest:\n      description: Invaild request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n    Query:\n      type: object\n      properties:\n        query:\n          type: object\n        options:\n          type: object\n    User:\n      type: object\n      required:\n        - key\n        - role\n      properties:\n        name:\n          type: string\n          default: null\n        key:\n          type: string\n        role:\n          type: string\n          enum: [\"superuser\", \"user\", \"create\", \"update\", \"delete\"]\n    Capsule:\n      type: object\n      required:\n        - serial\n        - status\n        - type\n      properties:\n        serial:\n          type: string\n        status:\n          type: string\n          enum: [\"unknown\", \"active\", \"retired\", \"destroyed\"]\n        type:\n          type: string\n          enum: [\"Dragon 1.0\", \"Dragon 1.1\", \"Dragon 2.0\"]\n        dragon:\n          type: string\n          format: uuid\n        reuse_count:\n          type: integer\n          format: int64\n          default: 0\n        water_landings:\n          type: integer\n          format: int64\n          default: 0\n        land_landings:\n          type: integer\n          format: int64\n          default: 0\n        last_update:\n          type: string\n          default: null\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Company:\n      type: object\n      properties:\n        name:\n          type: string\n        founder:\n          type: string\n        founded:\n          type: integer\n          format: int64\n        employees:\n          type: integer\n          format: int64\n        vehicles:\n          type: integer\n          format: int64\n        launch_sites:\n          type: integer\n          format: int64\n        test_sites:\n          type: integer\n          format: int64\n        ceo:\n          type: string\n        cto:\n          type: string\n        coo:\n          type: string\n        cto_propulsion:\n          type: string\n        valuation:\n          type: integer\n          format: int64\n        headquarters:\n          $ref: '#/components/schemas/Headquarter'\n        links:\n          $ref: '#/components/schemas/Link'\n        summary:\n          $ref: '#/components/schemas/Summary'\n    Headquarter:\n      type: object\n      properties:\n        address:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n    Link:\n      type: object\n      properties:\n        website:\n          type: string\n        flickr:\n          type: string\n        twitter:\n          type: string\n        elon_twitter:\n          type: string\n    Summary:\n      type: object\n      properties:\n        type:\n          type: string\n    Core:\n      type: object\n      required:\n        - serial\n        - status\n      properties:\n        serial:\n          type: string\n          format: uuid\n        block:\n          type: integer\n          format: int64\n          default: null\n        status:\n          type: string\n          enum: [\"active\", \"inactive\", \"unknown\", \"expended\", \"lost\", \"retired\"]\n        reuse_count:\n          type: integer\n          format: int64\n          default: 0\n        rtls_attempts:\n          type: integer\n          format: int64\n          default: 0\n        rtls_landings:\n          type: integer\n          format: int64\n          default: 0\n        asds_attempts:\n          type: integer\n          format: int64\n          default: 0\n        asds_landings:\n          type: integer\n          format: int64\n          default: 0\n        last_update:\n          type: string\n          default: null\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Crew:\n      type: object\n      required:\n        - status\n      properties:\n        name:\n          type: string\n          default: null \n        status:\n          type: string\n          enum: [\"active\", \"inactive\", \"retired\", \"unknown\"]\n        agency:\n          type: string\n          default: null\n        image:\n          type: string\n          default: null\n        wikipedia:\n          type: string\n          default: null\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Dragon:\n      type: object\n      required:\n        - name\n        - type\n        - active\n        - crew_capacity\n        - sidewall_angle_deg\n        - orbit_duration_yr\n        - dry_mass_kg\n        - dry_mass_lb\n      properties:\n        name:\n          type: string\n          format: uuid\n        type:\n          type: string\n        active:\n          type: boolean\n        crew_capacity:\n          type: integer\n          format: int64\n        sidewall_angle_deg:\n          type: integer\n          format: int64\n        orbit_duration_yr:\n          type: integer\n          format: int64\n        dry_mass_kg:\n          type: integer\n          format: int64\n        dry_mass_lb:\n          type: integer\n          format: int64\n        first_flight:\n          type: string\n          default: null\n        heat_shield:\n          $ref: '#/components/schemas/HeatShield'\n        thrusters:\n          type: object\n        launch_payload_mass:\n          $ref: '#/components/schemas/Mass'\n        launch_payload_vol:\n          $ref: '#/components/schemas/CubicVolume'\n        return_payload_mass:\n          $ref: '#/components/schemas/Mass'\n        return_payload_vol:\n          $ref: '#/components/schemas/CubicVolume'\n        pressurized_capsule:\n          $ref: '#/components/schemas/PressurizedCapsule'\n        trunk:\n          $ref: '#/components/schemas/Trunk'\n        height_w_trunk:\n          $ref: '#/components/schemas/Length'\n        diameter:\n          $ref: '#/components/schemas/Length'\n        flickr_images:\n          type: array\n          items: \n            type: string\n        wikipedia:\n          type: string\n        description:\n          type: string\n    HeatShield:\n      type: object\n      required:\n        - material\n        - size_meters\n      properties:\n        material:\n          type: string\n        size_meters:\n          type: integer\n          format: int64\n        temp_degrees:\n          type: integer\n          format: int64\n        dev_partner:\n          type: string\n    Mass:\n      type: object\n      properties:\n        kg:\n          type: integer\n          format: int64\n        lb:\n          type: integer\n          format: int64\n    CubicVolume:\n      type: object\n      properties:\n        cubic_meters:\n          type: integer\n          format: int64\n        cubic_feet:\n          type: integer\n          format: int64\n    PressurizedCapsule:\n      type: object\n      properties:\n        payload_volume:\n          $ref: '#/components/schemas/CubicVolume'\n    Trunk:\n      type: object\n      properties:\n        trunk_volume:\n          $ref: '#/components/schemas/CubicVolume'\n        cargo:\n          $ref: '#/components/schemas/Cargo'\n    Cargo:\n      type: object\n      properties:\n        solar_array:\n          type: integer\n          format: int64\n        unpressurized_cargo:\n          type: boolean\n    Length:\n      type: object\n      properties:\n        meters:\n          type: integer\n          format: int64\n        feet:\n          type: integer\n          format: int64\n    LandingPad:\n      type: object\n      required:\n        - status\n      properties:\n        name:\n          type: string\n          default: null\n        full_name:\n          type: string\n          default: null \n        status:\n          type: string\n          enum: [\"active\", \"inactive\",\"unknown\", \"retired\", \"lost\", \"under construction\"]\n        type:\n          type: string\n          default: null\n        locality:\n          type: string\n          default: null\n        region:\n          type: string\n          default: null\n        latitude:\n          type: integer\n          format: int64\n        longitude:\n          type: integer\n          format: int64\n        landing_attempts:\n          type: integer\n          format: int64\n          default: 0\n        landing_successes:\n          type: integer\n          format: int64\n          default: 0\n        wikipedia:\n          type: string\n          default: null\n        details:\n          type: string\n          default: null\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Launch:\n      type: object\n      required:\n        - flight_number\n        - name\n        - date_utc\n        - date_unix\n        - date_local\n        - date_precision\n        - upcoming\n      properties:\n        flight_number:\n          type: integer\n          format: int64\n        name:\n          type: string\n          default: null\n        date_utc:\n          type: string\n        date_unix:\n          type: integer\n          format: int64\n        date_local:\n          type: string\n        date_precision:\n          type: string\n          enum: [\"half\", \"quarter\", \"year\", \"month\", \"day\", \"hour\"]\n        static_fire_date_utc:\n          type: string\n          default: null\n        static_fire_date_unix:\n          type: integer\n          format: int64\n        tbd:\n          type: boolean\n          default: false\n        net:\n          type: boolean\n          default: false\n        window:\n          type: integer\n          format: int64\n          default: null\n        rocket:\n          type: string\n          format: uuid\n          default: null\n        success:\n          type: boolean\n          default: null\n        failures:\n          $ref: '#/components/schemas/Failure'  \n        upcoming:\n          type: boolean\n          default: true\n        details:\n          type: string\n          default: null\n        fairings:\n          type: object\n          properties:\n            reused:\n              type: boolean\n              default: null\n            recovery_attempt:\n              type: boolean\n              default: null\n            recovered:\n              type: boolean\n              default: null\n            ships:\n              type: array\n              items:\n                type: string\n                format: uuid \n        crew:\n          type: array\n          items:\n            type: string\n            format: uuid\n        ships:\n          type: array\n          items:\n            type: string\n            format: uuid\n        capsules:\n          type: array\n          items:\n            type: string\n            format: uuid\n        payloads:\n          type: array\n          items:\n            type: string\n            format: uuid\n        launchpad:\n          type: string\n          format: uuid\n          default: null\n        cores:\n          type: array\n          items:\n            $ref: '#/components/schemas/LaunchCore'\n        links:\n          type: object\n          properties:\n            patch:\n              type: object\n              properties:\n                small:\n                  type: string\n                  default: null\n                large:\n                  type: string\n                  default: null\n            reddit:\n              type: object\n              properties:\n                campaign:\n                  type: string\n                  default: null\n                launch:\n                  type: string\n                  default: null\n                media:\n                  type: string\n                  default: null\n                recovery:\n                  type: string\n                  default: null\n            flicker:\n              type: object\n              properties:\n                small:\n                  type: array\n                  items:\n                    type: string\n                original:\n                  type: array\n                  items:\n                    type: string\n            presskit:\n              type: string\n              default: null\n            webcast:\n              type: string\n              default: null\n            youtube_id:\n              type: string\n              default: null\n            article:\n              type: string\n              default: null\n            wikipedia:\n              type: string\n              default: null\n        auto_update:\n          type: boolean\n          default: true\n    Failure:\n      type: object\n      properties:\n        time:\n          type: integer\n          format: int64\n        altitude:\n          type: integer\n          format: int64\n        reason:\n          type: string\n    Fairing:\n      type: object\n      required:\n        - serial\n        - status\n      properties:\n        serial:\n          type: string\n        version:\n          type: string\n          enum: [\"1.0\", \"2.0\", \"2.1\"]\n          default: null\n        status:\n          type: string\n          enum: [\"active\", \"inactive\", \"unknown\", \"expended\", \"lost\", \"retired\"]\n        reuse_count:\n          type: integer\n          format: int64\n          default: 0\n        net_landing_attempts:\n          type: integer\n          format: int64\n          default: 0\n        net_landing:\n          type: integer\n          format: int64\n          default: 0\n        water_landing_attempts:\n          type: integer\n          format: int64\n          default: 0\n        water_landing:\n          type: integer\n          format: int64\n          default: 0\n        last_update:\n          type: string\n          default: null\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    LaunchCore:\n      type: object\n      properties:\n        core:\n          type: string\n          format: uuid\n          default: null\n        flight:\n          type: integer\n          format: int64\n          default: null\n        gridfins:\n          type: boolean\n          default: null\n        legs:\n          type: boolean\n          default: null\n        reused:\n          type: boolean\n          default: null\n        landing_attempt:\n          type: boolean\n          default: null\n        landing_success:\n          type: boolean\n          default: null\n        landing_type:\n          type: string\n          default: null\n        landpad:\n          type: string\n          format: uuid\n          default: null\n    Launchpad:\n      type: object\n      required:\n        - status\n      properties:\n        name:\n          type: string\n          default: null\n        full_name:\n          type: string\n          default: null\n        status:\n          type: string\n          enum: [\"active\", \"inactive\", \"unknown\",  \"retired\", \"lost\",  \"under construction\"]\n        locality:\n          type: string\n          default: null\n        region:\n          type: string\n          default: null\n        timezone:\n          type: string\n          default: null\n        latitude:\n          type: integer\n          format: int64\n          default: null\n        longitude:\n          type: integer\n          format: int64\n          default: null\n        landing_attempts:\n          type: integer\n          format: int64\n          default: 0\n        landing_successes:\n          type: integer\n          format: int64\n          default: 0\n        rockets:\n          type: array\n          items:\n            type: string\n            format: uuid\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Payload:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          default: null\n        type:\n          type: string\n          default: null\n        reused:\n          type: boolean\n          default: false\n        launch:\n          type: string\n          format: uuid\n          default: null\n        customers:\n          type: array\n          items:\n            type: string\n        norad_ids:\n          type: array\n          items:\n            type: integer\n            format: int64\n        nationalities:\n          type: array\n          items:\n            type: string\n        manufacturers:\n          type: array\n          items:\n            type: string\n        mass_kg:\n          type: integer\n          format: int64\n          default: null\n        mass_lbs:\n          type: integer\n          format: int64\n          default: null\n        orbit:\n          type: string\n          default: null\n        reference_system:\n          type: string\n          default: null\n        regime:\n          type: string\n          default: null\n        longitude:\n          type: integer\n          format: int64\n          default: null\n        semi_major_axis_km:\n          type: integer\n          format: int64\n          default: null\n        eccentricity:\n          type: integer\n          format: int64\n          default: null\n        periapsis_km:\n          type: integer\n          format: int64\n          default: null\n        apoapsis_km:\n          type: integer\n          format: int64\n          default: null\n        inclination_deg:\n          type: integer\n          format: int64\n          default: null\n        period_min:\n          type: integer\n          format: int64\n          default: null\n        lifespan_years:\n          type: integer\n          format: int64\n          default: null\n        epoch:\n          type: string\n          default: null\n        mean_motion:\n          type: integer\n          format: int64\n          default: null\n        raan:\n          type: integer\n          format: int64\n          default: null\n        arg_of_pericenter:\n          type: integer\n          format: int64\n          default: null\n        mean_anomaly:\n          type: integer\n          format: int64\n          default: null\n        dragon:\n          type: object\n          properties:\n            capsule:\n              type: string\n              format: uuid\n              default: null\n            mass_returned_kg:\n              type: integer\n              format: int64\n              default: null\n            mass_returned_lbs:\n              type: integer\n              format: int64\n              default: null\n            flight_time_sec:\n              type: integer\n              format: int64\n              default: null\n            manifest:\n              type: string\n              default: null\n            water_landing:\n              type: boolean\n              default: null\n            land_landing:\n              type: boolean\n              default: null\n    Roadster:\n      type: object\n      properties:\n        name:\n          type: string\n        launch_date_utc:\n          type: string\n        launch_date_unix:\n          type: integer\n          format: int64\n        launch_mass_kg:\n          type: integer\n          format: int64\n        launch_mass_lbs:\n          type: integer\n          format: int64\n        norad_id:\n          type: integer\n          format: int64\n        epoch_jd:\n          type: integer\n          format: int64\n        orbit_type:\n          type: string\n        apoapsis_au:\n          type: integer\n          format: int64\n        periapsis_au:\n          type: integer\n          format: int64\n        semi_major_axis_au:\n          type: integer\n          format: int64\n        eccentricity:\n          type: integer\n          format: int64\n        inclination:\n          type: integer\n          format: int64\n        longitude:\n          type: integer\n          format: int64\n        periapsis_arg:\n          type: integer\n          format: int64\n        period_days:\n          type: integer\n          format: int64\n        speed_kph:\n          type: integer\n          format: int64\n        speed_mph:\n          type: integer\n          format: int64\n        earth_distance_km:\n          type: integer\n          format: int64\n        earth_distance_mi:\n          type: integer\n          format: int64\n        mars_distance_km:\n          type: integer\n          format: int64\n        mars_distance_mi:\n          type: integer\n          format: int64\n        flickr_images:\n          type: array\n          items:\n            type: string\n        wikipedia:\n          type: string\n        video:\n          type: string\n        details:\n          type: string\n    Rocket:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        active:\n          type: boolean\n        stages:\n          type: integer\n          format: int64\n        boosters:\n          type: integer\n          format: int64\n        cost_per_launch:\n          type: integer\n          format: int64\n        success_rate_pct:\n          type: integer\n          format: int64\n        first_flight:\n          type: string\n        country:\n          type: string\n        company:\n          type: string\n        height:\n          $ref: '#/components/schemas/Length' \n        diameter:\n          $ref: '#/components/schemas/Length' \n        mass:\n          $ref: '#/components/schemas/Mass' \n        payload_weights:\n          type: array\n          items:\n            type: object\n        first_stage:\n          type: object\n          properties:\n            reusable:\n              type: boolean\n            engines:\n              type: integer\n              format: int64\n            fuel_amount_tons:\n              type: integer\n              format: int64\n            burn_time_sec:\n              type: integer\n              format: int64\n            thrust_sea_level:\n              $ref: '#/components/schemas/Force' \n            thrust_vacuum:\n              $ref: '#/components/schemas/Force'\n        second_stage:\n          type: object\n          properties:\n            reusable:\n              type: boolean\n            engines:\n              type: integer\n              format: int64\n            fuel_amount_tons:\n              type: integer\n              format: int64\n            burn_time_sec:\n              type: integer\n              format: int64\n            thrust_sea_level:\n              $ref: '#/components/schemas/Force' \n            thrust_vacuum:\n              $ref: '#/components/schemas/Force'\n            payloads:\n              type: object\n              properties:\n                option_1:\n                  type: string\n                composite_fairing:\n                  type: object\n                  properties:\n                    height:\n                      $ref: '#/components/schemas/Length'\n                    diameter:\n                      $ref: '#/components/schemas/Length'\n        engines:\n          type: object\n          properties:\n            number:\n              type: integer\n              format: int64\n            type:\n              type: string\n            version:\n              type: string\n            layout:\n              type: string\n            isp:\n              type: object\n              properties:\n                sea_level:\n                  type: integer\n                  format: int64\n                vacuum:\n                  type: integer\n                  format: int64\n            engine_loss_max:\n              type: integer\n              format: int64\n            propellant_1:\n              type: string\n            propellant_2:\n              type: string\n            thrust_sea_level:\n              $ref: '#/components/schemas/Force'\n            thrust_vacuum:\n              $ref: '#/components/schemas/Force'\n            thrust_to_weight:\n              type: integer\n              format: int64\n        landing_legs:\n          type: object\n          properties:\n            number:\n              type: integer\n              format: int64\n            material:\n              type: object\n        flickr_images:\n          type: array\n          items:\n            type: string\n        wikipedia:\n          type: string\n        description:\n          type: string\n    Force:\n      type: object\n      properties:\n        kN:\n          type: integer\n          format: int64\n        lbf:\n          type: integer\n          format: int64\n    Ship:\n      type: object\n      required:\n        - name\n        - active\n      properties:\n        name:\n          type: string\n        legacy_id:\n          type: string\n          default: null\n        model:\n          type: string\n          default: null\n        type:\n          type: string\n          default: null\n        roles:\n          type: array\n          items:\n            type: string\n        active:\n          type: boolean\n        imo:\n          type: integer\n          format: int64\n          default: null\n        mmsi:\n          type: integer\n          format: int64\n          default: null\n        abs:\n          type: integer\n          format: int64\n          default: null\n        class:\n          type: integer\n          format: int64\n          default: null\n        mass_kg:\n          type: integer\n          format: int64\n          default: null\n        mass_lbs:\n          type: integer\n          format: int64\n          default: null\n        year_built:\n          type: integer\n          format: int64\n          default: null\n        home_port:\n          type: string\n          default: null\n        status:\n          type: string\n          default: null\n        speed_kn:\n          type: integer\n          format: int64\n          default: null\n        course_deg:\n          type: integer\n          format: int64\n          default: null\n        latitude:\n          type: integer\n          format: int64\n          default: null\n        longitude:\n          type: integer\n          format: int64\n          default: null\n        last_ais_update:\n          type: string\n          default: null\n        link:\n          type: string\n          default: null\n        image:\n          type: string\n          default: null\n        launches:\n          type: array\n          items:\n            type: string\n            format: uuid\n    Starlink:\n      type: object\n      properties:\n        version:\n          type: string\n          default: null\n        launch:\n          type: string\n          format: uuid\n        longitude:\n          type: integer\n          format: int64\n          default: null\n        latitude:\n          type: integer\n          format: int64\n          default: null\n        height_km:\n          type: integer\n          format: int64\n          default: null\n        velocity_kms:\n          type: integer\n          format: int64\n          default: null\n        spaceTrack:\n          type: object\n          properties:\n            CCSDS_OMM_VERS:\n              type: string\n              default: null\n            COMMENT:\n              type: string\n              default: null\n            CREATION_DATE:\n              type: string\n              default: null\n            ORIGINATOR:\n              type: string\n              default: null\n            OBJECT_NAME:\n              type: string\n              default: null\n            OBJECT_ID:\n              type: string\n              default: null\n            CENTER_NAME:\n              type: string\n              default: null\n            REF_FRAME:\n              type: string\n              default: null\n            TIME_SYSTEM:\n              type: string\n              default: null\n            MEAN_ELEMENT_THEORY:\n              type: string\n              default: null\n            EPOCH:\n              type: string\n              default: null\n            MEAN_MOTION:\n              type: string\n              default: null\n            ECCENTRICITY:\n              type: string\n              default: null\n            INCLINATION:\n              type: string\n              default: null\n            RA_OF_ASC_NODE:\n              type: string\n              default: null\n            ARG_OF_PERICENTER:\n              type: string\n              default: null\n            MEAN_ANOMALY:\n              type: string\n              default: null\n            EPHEMERIS_TYPE:\n              type: string\n              default: null\n            CLASSIFICATION_TYPE:\n              type: string\n              default: null\n            NORAD_CAT_ID:\n              type: integer\n              format: int64\n              default: null\n            ELEMENT_SET_NO:\n              type: integer\n              format: int64\n              default: null\n            REV_AT_EPOCH:\n              type: integer\n              format: int64\n              default: null\n            BSTAR:\n              type: integer\n              format: int64\n              default: null\n            MEAN_MOTION_DOT:\n              type: integer\n              format: int64\n              default: null\n            MEAN_MOTION_DDOT:\n              type: integer\n              format: int64\n              default: null\n            SEMIMAJOR_AXIS:\n              type: integer\n              format: int64\n              default: null\n            PERIOD:\n              type: integer\n              format: int64\n              default: null\n            APOAPSIS:\n              type: integer\n              format: int64\n              default: null\n            PERIAPSIS:\n              type: integer\n              format: int64\n              default: null\n            OBJECT_TYPE:\n              type: string\n              default: null\n            RCS_SIZE:\n              type: string\n              default: null\n            COUNTRY_CODE:\n              type: string\n              default: null\n            LAUNCH_DATE:\n              type: string\n              default: null\n            SITE:\n              type: string\n              default: null\n            DECAY_DATE:\n              type: string\n              default: null\n            DECAYED:\n              type: integer\n              format: int64\n              default: null\n            FILE:\n              type: integer\n              format: int64\n              default: null\n            GP_ID:\n              type: integer\n              format: int64\n              default: null\n            TLE_LINE0:\n              type: string\n              default: null\n            TLE_LINE1:\n              type: string\n              default: null\n            TLE_LINE2:\n              type: string\n              default: null\n    History:\n      type: object\n      properties:\n        title:\n          type: string\n          default: null\n        event_date_utc:\n          type: string\n          default: null\n        event_date_unix:\n          type: integer\n          format: int64\n          default: null\n        details:\n          type: string\n          default: null\n        links:\n          type: object\n          properties:\n            article:\n              type: string\n              default: null\n        \n        \n  "
		}
	},
	"Error": "parse: parse spec: paths: /starlink: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/Starlink\": parse schema: height_km: unexpected default \"null\" value"
}