{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubeshop/tracetest"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 8915,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.2.1\n  title: TraceTest\n  description: OpenAPI definition for TraceTest endpoint and resources\nservers:\n  - url: /api\npaths:\n  /tests:\n    get:\n      tags:\n        - api\n      summary: \"Get tests\"\n      description: \"get tests\"\n      operationId: getTests\n      parameters:\n        - in: query\n          name: take\n          description: \"indicates how many tests can be returned by each page\"\n          schema:\n            type: integer\n            default: 20\n        - in: query\n          name: skip\n          description: \"indicates how many tests will be skipped when paginating\"\n          schema:\n            type: integer\n            default: 0\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"./tests.yaml#/components/schemas/Test\"\n        500:\n          description: \"problem with getting tests\"\n    post:\n      tags:\n        - api\n      summary: \"Create new test\"\n      description: \"Create new test action\"\n      operationId: createTest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./tests.yaml#/components/schemas/Test\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"./tests.yaml#/components/schemas/Test\"\n        500:\n          description: \"problem with creating test\"\n  /tests/{testId}:\n    get:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"get test\"\n      description: \"get test\"\n      operationId: getTest\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"./tests.yaml#/components/schemas/Test\"\n        500:\n          description: \"problem with getting a test\"\n    put:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"update test\"\n      description: \"update test action\"\n      operationId: updateTest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./tests.yaml#/components/schemas/Test\"\n      responses:\n        204:\n          description: successful operation\n        500:\n          description: \"problem with updating test\"\n    delete:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"delete a test\"\n      description: \"delete a test\"\n      operationId: deleteTest\n      responses:\n        \"204\":\n          description: OK\n  /tests/{testId}/run:\n    post:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"run test\"\n      description: \"run a particular test\"\n      operationId: runTest\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"./tests.yaml#/components/schemas/TestRun\"\n    get:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: query\n          name: take\n          description: \"indicates how many results can be returned by each page\"\n          schema:\n            type: integer\n            default: 20\n        - in: query\n          name: skip\n          description: \"indicates how many results will be skipped when paginating\"\n          schema:\n            type: integer\n            default: 0\n      summary: \"get the runs for a test\"\n      description: \"get the runs from a particular test\"\n      operationId: getTestRuns\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"./tests.yaml#/components/schemas/TestRun\"\n  /tests/{testId}/run/{runId}/select:\n    get:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: path\n          name: runId\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: query\n          name: query\n          schema:\n            type: string\n      summary: \"retrieve spans that will be selected by selector\"\n      description: \"get the spans ids that would be selected by a specific selector query\"\n      operationId: getTestResultSelectedSpans\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /tests/{testId}/run/{runId}/dry-run:\n    put:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: path\n          name: runId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"run given assertions against the traces from the given run without persisting anything\"\n      description: \"use this method to test a definition against an actual trace without creating a new version or persisting anything\"\n      operationId: dryRunAssertion\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./tests.yaml#/components/schemas/TestDefinition\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"./tests.yaml#/components/schemas/AssertionResults\"\n  /tests/{testId}/run/{runId}/rerun:\n    post:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: path\n          name: runId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"rerun a test run\"\n      description: \"rerun a test run\"\n      operationId: rerunTestRun\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"./tests.yaml#/components/schemas/TestRun\"\n  /tests/{testId}/run/{runId}:\n    get:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: path\n          name: runId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"get test Run\"\n      description: \"get a particular test Run\"\n      operationId: getTestRun\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"./tests.yaml#/components/schemas/TestRun\"\n  /tests/{testId}/definition:\n    get:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      operationId: getTestDefinition\n      summary: \"Get definition for a test\"\n      description: \"Gets definition for a test\"\n      responses:\n        201:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"./tests.yaml#/components/schemas/TestDefinition\"\n    put:\n      tags:\n        - api\n      parameters:\n        - in: path\n          name: testId\n          schema:\n            type: string\n            format: uuid\n          required: true\n      summary: \"Set testDefinition for a test\"\n      description: \"Set testDefinition for a particular test\"\n      operationId: setTestDefinition\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./tests.yaml#/components/schemas/TestDefinition\"\n      responses:\n        204:\n          description: OK\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /tests: get: operation \"getTests\": responses: 200: content: application/json: schema: parse schema: item: parse schema: resolve \"./tests.yaml#/components/schemas/Test\": find schema: external base \"./tests.yaml\" is not supported"
}