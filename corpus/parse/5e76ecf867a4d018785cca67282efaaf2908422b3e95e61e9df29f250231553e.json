{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/egovernments/municipal-services"
		},
		"file": {
			"name": "Vehicle_Registry_Contract.yaml",
			"size": 0,
			"path": "docs/fsm/Vehicle_Registry_Contract.yaml",
			"byteSize": 21911,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Vehicle Registry\n  description: |\n    ### API specs to capture Vehicle details###\n    * Allow to add the new Vehicle details\n    * Allow to update the existing Vehicle details\n    * Search the Vehicle by unique no\n    *\n  contact:\n    name: Egovernments Foundation\n    email: contact@egovernments.org\nx-module: FSM\nx-common-path: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml'\npaths:\n  /vehicle/v1/_search:\n    post:\n      summary: Get the Vehicle details\n      description: |\n        Gets the list of Vehicle for a particular ULB based on search criteria.\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/parameters/tenantId'\n        - name: registrationNumber\n          in: query\n          description: Allows search for service type - comma separated list\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: ids\n          in: query\n          description: Search by list of UUID\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: mobileNumber\n          in: query\n          description: Search by mobile number of service requester\n          schema:\n            type: string\n        - name: ownerId\n          in: query\n          description: Search by uuid  of service requester\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: type\n          in: query\n          description: Search by type of the vehicle\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: model\n          in: query\n          description: Search by model of the vehicle\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: tankCapacity\n          in: query\n          description: Search by tankCapacity of the vehicle\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: sort the search results by fields\n          schema:\n           type: string\n           enum:\n            - type\n            - model\n            - suctionType\n            - pollutionCertiValidTill\n            - InsuranceCertValidTill\n            - fitnessValidTill\n            - roadTaxPaidTill\n            - tankCapicity\n            - createdTime\n        - name: sortOrder\n          in: query\n          description: sorting order of the search resulsts\n          schema:\n            type: string\n        - name: suctionType\n          in: query\n          description: Search by model of the vehicle\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: limit on the resulsts\n          schema:\n            type: string\n        - name: offset\n          in: query\n          description: offset index of the overall search resulsts\n          schema:\n            type: string\n      responses:\n        '202':\n          description: Successful response sorted by reverse chrnological order of creation\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/VehicleResponse'\n        '400':\n          description: Invalid input.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n      tags:\n        - Vehicle\n  /vehicle/v1/_create:\n    post:\n      summary: Add new vehicle  \n      description: Add the vehicle details into the system\n      tags:\n        - Vehicle\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VehicleRequest'\n        description: Request schema.\n        required: true\n      responses:\n        '202':\n          description: Request submitted successfully\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/VehicleResponse'\n        '400':\n          description: Failed to process the Request\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n  /vehicle/v1/_update:\n    post:\n      summary: Update existing vehicle details\n      description: Updates the details of the vehicle \n      tags:\n        - Vehicle\n      responses:\n        '202':\n          description: Request submitted successfully\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/VehicleResponse'\n        '400':\n          description: Failed to process the application\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VehicleRequest'\n        description: Request schema.\n        required: true\n  /vehicle/trip/v1/_search:\n    post:\n      summary: Get the VehicleTrip details\n      description: |\n        Gets the list of VehicleLog for a particular ULB based on search criteria.\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/parameters/tenantId'\n        - name: registrationNumber\n          in: query\n          description: Allows search for service type - comma separated list\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: ids\n          in: query\n          description: Search by list of UUID of vehicleLog\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: tripOwnerIds\n          in: query\n          description: Search by list of UUID of of the trip owners\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: driverIds\n          in: query\n          description: Search by list of UUID of of the drivers\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: vehicleIds\n          in: query\n          description: Search by list of UUID of vehicle(s)\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: referenceNos\n          in: query\n          description: Search by the referenceNo(s)\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: applicationNos\n          in: query\n          description: Search by the applicationNo(s)\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name: businessService\n          in: query\n          description: search by the businessService of the vehicleLog\n          schema:\n            type: string\n        - name: applicationStatus\n          in: query\n          description: search by the list of applicationStatus of the vehicleLog\n          schema:\n            type: array\n            items:\n              type: string\n              maxItems: 10\n        - name : offset\n          in: query\n          description: offset for the pagination results\n          schema:\n            type: integer\n        - name: limit\n          in: query\n          description: limit for the pagination results\n          schema:\n           type: integer\n        - name: sortOrder\n          in: query\n          description: sort the search results in Ascending or descending order\n          schema:\n           type: string\n           enum:\n            - ASC\n            - DESC\n        - name: sortBy\n          in: query\n          description: sort the search results by fields\n          schema:\n           type: string\n           enum: \n            - applicationStatus\n            - applicationiNo\n            - referenceNo\n            - vehicle\n            - tripStartTime\n            - tripEndTime\n            - createdTime\n      responses:\n        '202':\n          description: Successful response sorted by reverse chrnological order of creation\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/VehicleTripResponse'\n        '400':\n          description: Invalid input.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n      tags:\n        - VehicleTrip\n  /vehicle/trip/v1/_create:\n    post:\n      summary: Add new vehicleLog  \n      description: Add the vehicleLog details into the system\n      tags:\n        - VehicleTrip\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VehicleTripRequest'\n        description: Request schema.\n        required: true\n      responses:\n        '202':\n          description: Request submitted successfully\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/VehicleTripResponse'\n        '400':\n          description: Failed to process the Request\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n  /vehicle/trip/v1/_update:\n    post:\n      summary: Update existing vehicleLog details\n      description: Updates the details of the vehicleLog\n      tags:\n        - VehicleTrip\n      responses:\n        '202':\n          description: Request submitted successfully\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/VehicleTripResponse'\n        '400':\n          description: Failed to process the application\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/ErrorRes'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VehicleTripRequest'\n        description: Request schema.\n        required: true\ncomponents:\n  schemas:\n    Vehicle:\n      type: object\n      description: |\n        Instance of Service request raised for a particular service. As per extension propsed in the Service definition \"attributes\" carry the input values requried by metadata definition in the structure as described by the corresponding schema.\n\n        * Any one of 'address' or '(lat and lang)' or 'addressid' is mandatory\n      properties:\n        vehicleOwner:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/UserInfo'\n        id:\n          type: string\n          readOnly: true\n          description: The server generated unique ID(UUID).\n          minLength: 2\n          maxLength: 64\n        tenantId:\n          type: string\n          description: Unique identifier of the tenant.\n          minLength: 2\n          maxLength: 64\n        registrationNumber: \n          type: string\n          description: Unique Vehicle registration number.\n          minLength: 2\n          maxLength: 128\n        model:\n          type: string\n          description: Vehicle model number(this the master data defined in MDMS).\n          minLength: 2\n          maxLength: 256\n        type:\n          type: string\n          description: Vehicle Type master, defined in MDMS. \n          minLength: 2\n          maxLength: 64\n        tankCapicity:\n          type: integer\n          format: int64\n          description: Tank capacity in liters. \n          minLength: 2\n          maxLength: 64\n        suctionType:\n          type: string\n          description: This is the mdms master data. \n          minLength: 2\n          maxLength: 64\n        pollutionCertiValidTill:\n          type: integer\n          format: int64\n          description: Pollution certificate valid till for vehicle(epoc date). \n          minLength: 2\n          maxLength: 64\n        InsuranceCertValidTill:\n          type: integer\n          format: int64\n          description: Vehicle insurance valid till(epoc date). \n          minLength: 2\n          maxLength: 64\n        fitnessValidTill:\n          type: integer\n          format: int64\n          description: Vehicle fitness valid till(epoc date). \n          minLength: 2\n          maxLength: 64\n        roadTaxPaidTill:\n          type: integer\n          format: int64\n          description: Road tax paid for the Vehicle. \n          minLength: 2\n          maxLength: 64\n        gpsEnabled:\n          type: boolean\n          description: Whether Vehicle equipped with GPS device. \n        additionalDetail:\n          type: object\n          description: This is the json object that will carry the actual input (whereever the metadata requries input). Structure should be same as the schema definition provided in the metadata of the service (schema compliance check to be performed at client/server)\n        source:\n          type: string\n          description: 'Source mdms master data. Which captures the source of the service request(ex:- whatsapp, ivr, Swachhata etc)'\n          minLength: 2\n          maxLength: 64\n          example: whatsapp, ivr etc\n        status:\n          type: string\n          description: Inactive records will be consider as soft deleted \n          enum:\n           - ACTIVE\n           - INACTIVE\n        auditDetails:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails'\n      required:\n        - tenantId\n        - registrationNumber\n        - model\n        - type\n        \n    VehicleRequest:\n      type: object\n      description: Request for vehicle details\n      properties:\n        requestInfo:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/RequestHeader'\n        vehicle:\n          $ref: '#/components/schemas/Vehicle'\n      required:\n        - RequestInfo\n        - services\n    VehicleResponse:\n      type: object\n      description: Response of vehicle detail\n      properties:\n        responseInfo:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/RequestHeader'\n        vehicle:\n          $ref: '#/components/schemas/Vehicle'\n        totalCount:\n          type: string\n          description: count of total records in the system meeting the search criteria\n      required:\n        - ResponseInfo\n        - services\n        \n    VehicleTrip:\n      type: object\n      description: |\n        vehicle Trip will be created for each trip for a specific service\n      \n      properties:\n        tripOwner:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/UserInfo'\n        driver:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/UserInfo'  \n        id:\n          type: string\n          readOnly: true\n          description: The server generated unique ID(UUID).\n          minLength: 2\n          maxLength: 64\n        tenantId:\n          type: string\n          description: Unique identifier of the tenant.\n          minLength: 2\n          maxLength: 64\n        vehicle:\n          $ref: '#/components/schemas/Vehicle'\n        applicationNo:\n          type: string\n          description: Unique identifier of the for the vehicleLog generated through idGen Service.\n          minLength: 2\n          maxLength: 64\n        additionalDetail:\n          type: object\n          description: This is the json object that will carry the actual input (whereever the metadata requries input). Structure should be same as the schema definition provided in the metadata of the service (schema compliance check to be performed at client/server)\n        status:\n          type: string\n          description: Inactive records will be consider as soft deleted \n          enum:\n           - ACTIVE\n           - INACTIVE\n        businessService:\n          type: string\n          description: business service name of the workflow to be applied for this vehicle. example in FSM Case it will FSM_VEHICLETRIP.\n        tripDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/VehicleTripDetail'\n            description: ApplicationNo of the applications like fsm or sw etc..\n        applicationStatus:\n          type: string\n          minLength: 2\n          maxLength: 64\n          description: status of the application driven by workflow\n        tripStartTime:\n          type: integer\n          format: int64\n          description: epoc of the time trip started\n        tripEndTime:\n          type: integer\n          format: int64\n          description: epoc of the time trip ended.\n        fstpEntryTime:\n          type: integer\n          format: int64\n          description: epoc of the time vehicle entry time at FSTP plant.\n        fstpExitTime:\n          type: integer\n          format: int64\n          description: epoc of the time vehicle exit time from FSTP plant.\n        volumeCarried:\n          type: integer\n          format: int64\n          description: volume of the material carried by the vehicle in this trip. With respect to FSM this can be maped to wasteDumped.\n        auditDetails:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails'\n      required:\n        - tenantId\n        - vehicleId\n        - businessService\n    VehicleTripDetail:\n      type: object\n      description:  Trip Item contains the items considered in the given trip.\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: The server generated unique ID(UUID).\n          minLength: 2\n          maxLength: 64\n        tenantId:\n          type: string\n          description: Unique identifier of the tenant.\n          minLength: 2\n          maxLength: 64\n        referenceNo:\n         type: string\n         description: Unique identifier of the tenant.\n         minLength: 2\n         maxLength: 64\n        referenceStatus:\n          type: string\n          description: this status of the application of FSM. \n        additionalDetail:\n          type: object\n          description: This is the json object that will carry the actual input (whereever the metadata requries input). Structure should be same as the schema definition provided in the metadata of the service (schema compliance check to be performed at client/server)\n        status:\n          type: string\n          description: Inactive records will be consider as soft deleted \n          enum:\n           - ACTIVE\n           - INACTIVE\n        itemStartTime:\n          type: integer\n          format: int64\n          description: epoc of the time trip started\n        itemEndTime:\n          type: integer\n          format: int64\n          description: epoc of the time trip ended.\n        volume:\n          type: integer\n          format: int64\n          description: volume of the material collected from the given reference application\n        auditDetails:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails'\n      required:\n        - tenantId\n        - referenceNo\n        \n    VehicleTripRequest:\n      type: object\n      description: Request for vehiclTrip details\n      properties:\n        requestInfo:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/RequestHeader'\n        VehicleTrip:\n          $ref: '#/components/schemas/VehicleTrip'\n      required:\n        - requestInfo\n        - VehicleTrip\n    VehicleTripResponse:\n      type: object\n      description: Response of VehicleTrip detail\n      properties:\n        responseInfo:\n          $ref: 'https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/RequestHeader'\n        VehicleTrip:\n          type: array\n          items:\n            $ref: '#/components/schemas/VehicleTrip'\n        totalCount:\n          type: string\n          description: count of total records in the system meeting the search criteria\n      required:\n        - responseInfo\n        - VehicleTrip\n          \nservers:\n  # Added by API Auto Mocking Plugin\n  - description: SwaggerHub API Auto Mocking\n    url: https://virtserver.swaggerhub.com/WalkingTreeDev/VehicleRegistry/1.0.0\n"
		}
	},
	"Error": "parse: parse spec: paths: /vehicle/trip/v1/_create: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/VehicleTripRequest\": parse schema: VehicleTrip: parse schema: reference \"#/components/schemas/VehicleTrip\": parse schema: auditDetails: parse schema: reference \"https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails\": resolve reference \"https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails\": invalid schema reference \"https://raw.githubusercontent.com/egovernments/municipal-services/common-contract/docs/common-contract-v2-0-0.yml#/components/schemas/AuditDetails\""
}