{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubeshop/tracetest"
		},
		"file": {
			"name": "tests.yaml",
			"size": 0,
			"path": "api/tests.yaml",
			"byteSize": 4165,
			"content": "openapi: 3.0.0\ncomponents:\n  schemas:\n    Test:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n        serviceUnderTest:\n          type: object\n          properties:\n            request:\n              $ref: \"./http.yaml#/components/schemas/HTTPRequest\"\n        definition:\n          type: object\n          $ref: \"#/components/schemas/TestDefinition\"\n          description: Definition of assertions that are going to be made\n        referenceTestRun:\n          $ref: \"#/components/schemas/TestRun\"\n\n    TestDefinition:\n      type: object\n      properties:\n        definitions:\n          type: array\n          items:\n            type: object\n            properties:\n              selector:\n                type: string\n              assertions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Assertion\"\n      example:\n        definitions:\n          - selector: 'span[tracetest.span.type=\"http\"]'\n            assertions:\n            - attr: tracetest.span.duration\n              comparator: \"\u003c\"\n              expected: \"2000\"\n            - attr: http.status_code\n              comparator: \"=\"\n              expected: \"200\"\n\n    Assertion:\n      type: object\n      properties:\n        attribute:\n          type: string\n        comparator:\n          type: string\n        expected:\n          type: string\n\n    TestRun:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        traceId:\n          type: string\n          readOnly: true\n        spanId:\n          type: string\n          readOnly: true\n        state:\n          type: string\n          enum: [CREATED, EXECUTING, AWAITING_TRACE, AWAITING_TEST_RESULTS, FINISHED, FAILED]\n          description: Current execution state\n        lastErrorState:\n          type: string\n          description: Details of the cause for the last `FAILED` state\n        createdAt:\n          type: string\n          format: date-time\n        completedAt:\n          type: string\n          format: date-time\n        request:\n          $ref: \"./http.yaml#/components/schemas/HTTPRequest\"\n        response:\n          $ref: \"./http.yaml#/components/schemas/HTTPResponse\"\n          description: TODO(pov) This is HTTP Response object for now, at some point it might be GRPC/SOAP/...\n        trace:\n          $ref: \"./trace.yaml#/components/schemas/Trace\"\n        result:\n          $ref: \"#/components/schemas/AssertionResults\"\n\n    AssertionResults:\n      type: object\n      properties:\n        allPassed:\n          type: bool\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              selector:\n                type: string\n              results:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AssertionResult\"\n      example:\n        allPassed: true\n        results:\n          - selector: 'span[tracetest.span.type=\"http\"]'\n            results:\n            - assertion:\n                attr: http.status_code\n                comparator: \"=\"\n                expected: \"200\"\n              spanResults:\n                spanId: \"123\"\n                observedValue: \"test\"\n                passed: true\n            - assertion:\n                attr: http.status_code\n                comparator: \"=\"\n                expected: \"200\"\n              spanResults:\n                spanId: \"123\"\n                observedValue: \"test\"\n                passed: true\n\n    AssertionResult:\n      type: object\n      properties:\n        assertion:\n          $ref: \"#/components/schemas/Assertion\"\n        allPassed:\n          type: bool\n        spanResults:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AssertionSpanResult\"\n\n    AssertionSpanResult:\n      type: object\n      properties:\n        spanId:\n          type: string\n        observedValue:\n          type: string\n        passed:\n          type: bool\n        error:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"AssertionSpanResult\": parse schema: property \"passed\": parse schema: unexpected schema type: \"bool\""
}