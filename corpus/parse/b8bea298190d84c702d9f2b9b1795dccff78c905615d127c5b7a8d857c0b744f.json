{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ground-x/caver-js-ext-kas"
		},
		"file": {
			"name": "2022-05-24-openapi-versioned.yaml",
			"size": 0,
			"path": "yamls/metadata/2022-05-24-openapi-versioned.yaml",
			"byteSize": 9183,
			"content": "openapi: 3.1.0\ninfo:\n  title: Metadata API\n  description: |\n    # Introduction\n\n    The Metadata API helps BApp (Blockchain Application) developers to manage assets and metadata for their tokens.\n    \n    Asset and metadata are used when you mint Klaytn's [KIP-17](https://kips.klaytn.com/KIPs/kip-17) Tokens (NFTs), [KIP-37](https://kips.klaytn.com/KIPs/kip-37) Tokens (MTs).\n\n    An asset refers to an image or a video file of an NFT or MT. When you mint an NFT or MT, you first have to upload the asset and include the returned asset URI in the metadata when minting the token.\n    Metadata originally refers to \"data of data\". In the context of NFTs or MTs, it refers to the properties (name, description, image URL etc.) of the tokens. It is stored in JSON format.\n\n    Metadata API enables you to do the following actions:\n    - upload assets\n    - upload metadata\n    - provide an externally accessible URI for the assets and metadata\n\n    # Error Code\n    This section contains the errors that might occur when using Metadata API. KAS uses [HTTP status codes](https://developer.mozilla.org/en/docs/Web/HTTP/Status). Error code tables can be found [here](#tag/err-400).\ntags:\n  - name: err-400\n    x-displayName: \"400: Bad Request\"\n    description: |\n      The request is not valid.\n\n      | Code | Messages | Description |\n      | --- | --- | --- |\n      | 1170050 | invalid request | Wrong request format. |\n      | 1174401 | invalid input | The data you entered is not valid. |\n      | 1174402 | invalid input : check json format | Wrong JSON format. |\n      | 1174403 | invalid input : you should check json format for metadata you should check json format for metadata | Wrong metadata JSON format. |\n      | 1174404 | invalid input : check your filename | Invalid file name. | \n      | 1174405 | invalid input : body size should not exceed 10MB | File size too large. |\n      | 1174406 | invalid input : check Content-Type Header | Wrong Content-Type in the header. |\n      | 1174407 | duplicate KRN name | KRN already exists. |\n      | 1175301 | duplicate key | File name already exists. |\n      | 1175602 | data doesn't exist | Nonexistent data. |\n  - name: data-upload\n    x-displayName: \"Data Upload\"\nx-tagGroups:\n  - name: API\n    tags:\n      - data-upload\n  - name: Error Codes\n    tags:\n      - err-400\nservers:\n  - url: 'https://metadata-api.klaytnapi.com'\npaths:\n  /v1/metadata/asset:\n    post:\n      summary: Upload Asset\n      tags:\n        - data-upload\n      operationId: uploadAsset\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: ../../models/UploadAssetResponse.yaml\n              examples:\n                Image upload sample:\n                  value:\n                    contentType: image/png\n                    filename: 4a85e6be-3215-93e6-d8a9-3a7d633584e7.png\n                    uri: 'https://metadata-store.klaytnapi.com/e2d83fbb-c123-811c-d5f3-69132v482c51/4a85e6be-3215-93e6-d8a9-3a7d633584e7.png'\n        '400':\n          description: The request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n              examples:\n                Invalid input:\n                  summary: Invalid input\n                  description: The data you entered is not valid.\n                  value:\n                    code: 1174401\n                    message: invalid input\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n      description: |-\n        Uploads an asset. Supported file types include jpg, png, and gif. After uploading the asset file, it returns a public URI to access the asset.\n\n          You can use curl to upload the file as shown below:\n        ```\n        curl --location --request POST 'https://metadata-api.klaytnapi.com/v1/metadata/asset' \\\n        --header 'x-chain-id: 8217' \\\n        --header 'Authorization: Basic S0FTS0U0Mjc5Q01VMVhLVDg1UTRBVkRBOlFEMENMam5XRW94TzZfQ3pYLV9oLWRrQkZnMDVxR1FnbWlYcDAwVno=' \\\n        --form 'file=@\"/Users/usernamed/Documents/files/1kbfile.jpg\"'\n        ```\n\n        \u003e **Note** \n        \u003e\n        \u003eThe URI in the response looks like this: \n        \u003e\n        \u003e`https://metadata-store.klaytnapi.com/{storage-id}/{assetID}.{extension}`.\n        \u003e- `{storage-id}`(UUID) is an identifier value automatically given to each user.\n        \u003e- {assetID} is a unique identifier given to the uploaded asset.\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: x-chain-id\n          description: Klaytn Network Chain ID (1001 or 8217)\n          required: true\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: ../../models/UploadAssetRequest.yaml\n            examples:\n              test:\n                value:\n                  file: '@\"/Users/username/Documents/files/1kbfile.jpg\"'\n        description: 'Attach a file you want to upload.'\n  /v1/metadata:\n    post:\n      summary: Upload Metadata\n      tags:\n        - data-upload\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              schema:\n                $ref: ../../models/UploadMetadataResponse.yaml\n              examples:\n                No Filename:\n                  value:\n                    filename: 4f9asvf2f5-02d0-5b86-4f99-50acds269c8a.json\n                    contentType: application/json\n                    uri: 'https://metadata-store.klaytnapi.com/e2d83vdb-c108-823c-d5f3-69vdf2d871c51/4f9asvf2f5-02d0-5b86-4f99-50acds269c8a.json'\n                With Filename:\n                  value:\n                    filename: haha.json\n                    contentType: application/json\n                    uri: 'https://metadata-store.klaytnapi.com/e2d83vdb-c108-823c-d5f3-69vdf2d871c51/haha.json'\n        '400':\n          description: The request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n              examples:\n                Invalid input:\n                  summary: Invalid input\n                  description: The data you entered is not valid.\n                  value:\n                    code: 1174401\n                    message: invalid input\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n      operationId: uploadMetadata\n      description: |\n        Uploads metadata. After uploading the metadata, it returns an externally accessible public URI for that metadata.\n\n        \u003e **Note** \n        \u003e\n        \u003eThe URI in the response looks like this: \n        \u003e\n        \u003e`https://metadata-store.klaytnapi.com/{storage-id}/{fileName}`.\n        \u003e- `{storage-id}`(UUID) is an identifer automatically given to each user.\n        \u003e- With no filename: .../{storage-id}/`{assetId}.json`\n        \u003e- With filename (example: `haha.json`): .../{storage-id}/haha.json\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: x-chain-id\n          description: Klaytn Network Chain ID (1001 or 8217)\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/UploadMetadataRequest.yaml\n            examples:\n              No filename:\n                value:\n                  metadata:\n                    name: Puppy Heaven NFT\n                    description: This is a sample description\n                    image: 'https://metadata-store.klaytnapi.com/e2d83vdb-c108-823c-d5f3-69vdf2d871c51/4a85e6be-3215-93e6-d8a9-3a7d633584e7.png'\n              With filename:\n                value:\n                  metadata:\n                    name: Kitty Heaven NFT\n                    description: This is a sample description\n                    image: 'https://metadata-store.klaytnapi.com/e2d83vdb-c108-823c-d5f3-69vdf2d871c51/4a85e6be-3215-93e6-d8a9-3a7d633584e7.png'\n                  filename: haha.json\n        description:\ncomponents:\n  securitySchemes:\n    basic:\n      description: |\n        KAS uses Basic HTTP Auth. All requests must have a correct Authorization header. You can create the Credential for Basic Auth by using `username` as AccessKey ID and `password` as SecretAccessKey obtained on KAS Console.\n\n        \u003e **NOTE**\n        \u003e\n        \u003e KAS Credential enables full access to KAS and the Klaytn accounts created using the Wallet API. It enables asset transfers of the Klaytn account's assets (like KLAY) as well as [Transaction Executions](https://docs.klaytnapi.com/v/en/tutorial/wallet-transaction-api). To keep your KAS/Klaytn accounts secure, do not share your KAS API Secret Access Key with others.  \n\n        **cURL**  \n        ```\n          curl --location --request GET 'https://kip7-api.klaytnapi.com/v1/contract' \\\n          -u ${your_accessKeyId}:${your_secretAccessKey} \\\n          --header 'x-chain-id: 1001' \\\n          --header 'Content-Type: application/json'\n        ```      \n      type: http\n      scheme: basic\nsecurity:\n  - basic: []\n",
			"canonicalURL": "/github.com/ground-x/caver-js-ext-kas@6c1ed703dfd1735190c3f40d01df717b5af1440f/-/blob/yamls/metadata/2022-05-24-openapi-versioned.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ground-x/caver-js-ext-kas/blob/6c1ed703dfd1735190c3f40d01df717b5af1440f/yamls/metadata/2022-05-24-openapi-versioned.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/metadata\": post: operation \"uploadMetadata\": requestBody: parse content: application/json: schema: parse schema: at yamls/metadata/2022-05-24-openapi-versioned.yaml:179:21: $ref: resolve \"../../models/UploadMetadataRequest.yaml\": get \"https://raw.githubusercontent.com/ground-x/caver-js-ext-kas/6c1ed703dfd1735190c3f40d01df717b5af1440f/models/UploadMetadataRequest.yaml\": https: bad HTTP code 404 (Not Found)"
}