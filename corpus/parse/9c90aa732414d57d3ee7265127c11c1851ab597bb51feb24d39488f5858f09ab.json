{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opendatadiscovery/odd-platform"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "odd-platform-specification/openapi.yaml",
			"byteSize": 81838,
			"content": "openapi: 3.0.3\ninfo:\n  title: ProspectLog data catalog HTTP API contract\n  description: ProspectLog data catalog HTTP API contract\n  contact:\n    email: ndementev@provectus.com\n    url: https://provectus.com\n    name: Nikita Dementev\n  version: 0.0.1\nservers:\n  - url: 'http://localhost'\n    description: stub\ntags:\n  - name: feature\n  - name: identity\n  - name: owner\n  - name: namespace\n  - name: title\n  - name: tag\n  - name: label\n  - name: dataSource\n  - name: search\n  - name: dataSet\n  - name: dataEntity\n  - name: dataEntityRun\n  - name: dataInput\n  - name: dataConsumer\n  - name: dataQuality\n  - name: metadata\n  - name: datasetField\n  - name: alert\n  - name: appInfo\n  - name: collector\n  - name: term\n  - name: activity\n  - name: ownerAssociationRequest\n  - name: dataCollaboration\n  - name: policy\n  - name: role\n  - name: permission\npaths:\n  /api/features/active:\n    get:\n      summary: Active features\n      description: Gets features that are currently enabled\n      operationId: getActiveFeatures\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/FeatureList'\n      tags:\n        - feature\n\n  /api/identity/whoami:\n    get:\n      summary: whoami\n      description: Get authed user identity\n      operationId: whoami\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AssociatedOwner'\n      tags:\n        - identity\n\n  /api/owners:\n    get:\n      summary: List of owners\n      description: Gets the list of existing owners\n      operationId: getOwnerList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/IdsParam'\n        - name: allowedForSync\n          in: query\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/OwnerList'\n        '500':\n          $ref: './components.yaml/#/components/responses/InternalError'\n      tags:\n        - owner\n    post:\n      summary: Create owner\n      operationId: createOwner\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnerFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Owner'\n        '403':\n          $ref: './components.yaml/#/components/responses/Forbidden'\n      tags:\n        - owner\n\n  /api/owners/{owner_id}:\n    put:\n      summary: Update owner\n      description: Updates existing owner\n      operationId: updateOwner\n      parameters:\n        - name: owner_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnerFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Owner'\n      tags:\n        - owner\n    delete:\n      summary: Delete owner\n      description: Deletes existing owner\n      operationId: deleteOwner\n      parameters:\n        - name: owner_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - owner\n\n  /api/namespaces:\n    get:\n      summary: List of namespaces\n      description: Gets the list of existing namespaces\n      operationId: getNamespaceList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/NamespaceList'\n      tags:\n        - namespace\n    post:\n      summary: Create a namespace\n      operationId: createNamespace\n      description: Creates a namespace\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/NamespaceFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Namespace'\n      tags:\n        - namespace\n\n  /api/namespaces/{namespace_id}:\n    get:\n      summary: Get Namespace details\n      description: Get Namespace details\n      operationId: getNamespaceDetails\n      parameters:\n        - name: namespace_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Namespace'\n      tags:\n        - namespace\n    put:\n      summary: Update namespace\n      description: Updates namespace\n      operationId: updateNamespace\n      parameters:\n        - name: namespace_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/NamespaceUpdateFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Namespace'\n      tags:\n        - namespace\n    delete:\n      summary: Delete namespace\n      description: Deletes existing namespace\n      operationId: deleteNamespace\n      parameters:\n        - name: namespace_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - namespace\n\n  /api/titles:\n    get:\n      summary: List of titles\n      description: Gets the list of existing titles\n      operationId: getTitleList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TitleList'\n      tags:\n        - title\n\n  /api/tags:\n    get:\n      summary: List of popular tags\n      description: Gets the list of existing tags sorted by popularity\n      operationId: getPopularTagList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n        - $ref: './components.yaml/#/components/parameters/IdsParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TagsResponse'\n      tags:\n        - tag\n    post:\n      summary: Create a tag\n      description: Creates a tag\n      operationId: createTag\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/BulkTagFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TagList'\n      tags:\n        - tag\n\n  /api/tags/{tag_id}:\n    put:\n      summary: Update tag\n      description: Updates existing tag\n      operationId: updateTag\n      parameters:\n        - name: tag_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TagFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Tag'\n      tags:\n        - tag\n    delete:\n      summary: Delete tag\n      description: Deletes existing tag\n      operationId: deleteTag\n      parameters:\n        - name: tag_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - tag\n\n  /api/labels:\n    get:\n      summary: List of structure field labels\n      description: Gets the list of existing labels\n      operationId: getLabelList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/LabelsResponse'\n      tags:\n        - label\n    post:\n      summary: Create a label\n      description: Creates a label\n      operationId: createLabel\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/BulkLabelFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/LabelList'\n      tags:\n        - label\n\n  /api/labels/{label_id}:\n    put:\n      summary: Update label\n      description: Updates existing label\n      operationId: updateLabel\n      parameters:\n        - name: label_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/LabelFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Label'\n      tags:\n        - label\n    delete:\n      summary: Delete label\n      description: Deletes existing label\n      operationId: deleteLabel\n      parameters:\n        - name: label_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - label\n\n  /api/datasources:\n    get:\n      summary: List of data sources\n      description: Gets the list of available data sources\n      operationId: getDataSourceList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSourceList'\n      tags:\n        - dataSource\n    post:\n      summary: Register a data source\n      description: Registers a data source\n      operationId: registerDataSource\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataSourceFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSource'\n      tags:\n        - dataSource\n\n  /api/datasources/{data_source_id}:\n    put:\n      summary: Update data source\n      description: Updates data source\n      operationId: updateDataSource\n      parameters:\n        - name: data_source_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataSourceUpdateFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSource'\n      tags:\n        - dataSource\n    delete:\n      summary: Delete data source\n      description: Deletes data source\n      operationId: deleteDataSource\n      parameters:\n        - name: data_source_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - dataSource\n\n  /api/datasources/{data_source_id}/token:\n    put:\n      summary: Regenerate data source token\n      description: Regenerate data source token\n      operationId: regenerateDataSourceToken\n      parameters:\n        - name: data_source_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSource'\n      tags:\n        - dataSource\n\n  /api/collectors:\n    get:\n      summary: List of collectors\n      description: Gets the list of available collectors\n      operationId: getCollectorsList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/CollectorList'\n      tags:\n        - collector\n    post:\n      summary: Register new collector\n      description: Registers a collector\n      operationId: registerCollector\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/CollectorFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Collector'\n      tags:\n        - collector\n\n  /api/collectors/{collector_id}:\n    put:\n      summary: Update collector\n      description: Updates collector\n      operationId: updateCollector\n      parameters:\n        - name: collector_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/CollectorFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Collector'\n      tags:\n        - collector\n    delete:\n      summary: Delete collector\n      description: Deletes collector\n      operationId: deleteCollector\n      parameters:\n        - name: collector_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - collector\n\n  /api/collectors/{collector_id}/token:\n    put:\n      summary: Regenerate collector token\n      description: Regenerate collector token\n      operationId: regenerateCollectorToken\n      parameters:\n        - name: collector_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Collector'\n      tags:\n        - collector\n\n  /api/search:\n    post:\n      summary: Search by query\n      description: Creates a new search of all the matching dataEntities in active data sources to given query and calculates the aggregation data for correspondent data slice\n      operationId: search\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/SearchFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/SearchFacetsData'\n      tags:\n        - search\n\n  /api/search/{search_id}:\n    get:\n      summary: Get search facets by search ID\n      description: Gets search facets by parameter which can be found in search endpoint response\n      operationId: getSearchFacetList\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/SearchFacetsData'\n      tags:\n        - search\n    put:\n      summary: Update search facets by search ID\n      description: Updates search facets of a certain search ID by provided search parameters\n      operationId: updateSearchFacets\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/SearchFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/SearchFacetsData'\n      tags:\n        - search\n\n  /api/search/{search_id}/facet/{facet_type}:\n    get:\n      summary: Get countable filters for chosen facet type\n      description: Gets countable filters for chosen facet type\n      operationId: getFiltersForFacet\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: facet_type\n          in: path\n          required: true\n          schema:\n            $ref: './components.yaml/#/components/schemas/MultipleFacetType'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './components.yaml/#/components/schemas/CountableSearchFilter'\n      tags:\n        - search\n\n  /api/search/{search_id}/results:\n    get:\n      summary: Get search results by search ID\n      description: Returns paginated list of search results for a given search ID\n      operationId: getSearchResults\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityList'\n      tags:\n        - search\n\n  /api/search/suggestions:\n    get:\n      summary: Get search suggestions by query\n      description: Returns top five search suggestions for a given query\n      operationId: getSearchSuggestions\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n        - name: entity_class_id\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: manually_created\n          in: query\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRefList'\n      tags:\n        - search\n\n  /api/dataentities/usage:\n    get:\n      summary: Get data entities usage info\n      description: Returns information about data entities split by classes\n      operationId: getDataEntitiesUsage\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityUsageInfo'\n      tags:\n        - dataEntity\n\n  /api/dataentities/my:\n    get:\n      summary: Get my objects\n      description: Returns list of data entities owned by current user\n      operationId: getMyObjects\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRefList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/my/upstream:\n    get:\n      summary: Get my objects with upstream dependencies\n      description: Returns list of data entities owned by current user with upstream dependencies\n      operationId: getMyObjectsWithUpstream\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRefList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/my/downstream:\n    get:\n      summary: Get my objects with downstream dependencies\n      description: Returns list of data entities owned by current user with downstream dependencies\n      operationId: getMyObjectsWithDownstream\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRefList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/popular:\n    get:\n      summary: Get popular entities\n      description: Returns list of the most popular data entities throughout the catalog\n      operationId: getPopular\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRefList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/classes:\n    get:\n      summary: Get Data Entity dictionary\n      description: Get Data Entity classes and types\n      operationId: getDataEntityClasses\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityClassAndTypeDictionary'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}:\n    get:\n      summary: Get DataEntity details\n      description: \"Gets DataEntity's detailed information such as metadata, description, etc\"\n      operationId: getDataEntityDetails\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityDetails'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/description:\n    put:\n      summary: Upsert DataEntity's internal description\n      description: Upserts DataEntity's internal description in markdown format\n      operationId: upsertDataEntityInternalDescription\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/InternalDescriptionFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/InternalDescription'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/name:\n    put:\n      summary: Upsert DataEntity's internal name\n      description: Upserts DataEntity's internal name\n      operationId: upsertDataEntityInternalName\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/InternalNameFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/InternalName'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/term:\n    post:\n      summary: Add term to data entity\n      description: Link existing term with data entity\n      operationId: addDataEntityTerm\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataEntityTermFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermRef'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/term/{term_id}:\n    delete:\n      summary: Delete term from Data entity\n      description: Delete term from current data entity terms list\n      operationId: deleteTermFromDataEntity\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/data_entity_group:\n    post:\n      summary: Add data entity to group\n      description: Adds data entity to manually created data entity group\n      operationId: addDataEntityDataEntityGroup\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataEntityDataEntityGroupFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRef'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/data_entity_group/{data_entity_group_id}:\n    delete:\n      summary: Delete data entity from DEG\n      description: Delete data entity from data entity group\n      operationId: deleteDataEntityFromDataEntityGroup\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/DataEntityGroupIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/ownership:\n    post:\n      summary: Create new ownership\n      description: Creates new ownership\n      operationId: createOwnership\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnershipFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Ownership'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/ownership/{ownership_id}:\n    put:\n      summary: Update existing ownership\n      description: Updates existing ownership\n      operationId: updateOwnership\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/OwnershipIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnershipUpdateFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Ownership'\n      tags:\n        - dataEntity\n    delete:\n      summary: Delete ownership\n      description: Deletes the ownership\n      operationId: deleteOwnership\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/OwnershipIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/tags:\n    put:\n      summary: Creates tags relations for DataEntity entity\n      description: Creates tags relations tags for DataEntity entity. Also creates corresponding tags in the system if they don't exist.\n      operationId: createDataEntityTagsRelations\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TagsFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TagList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/metadata:\n    post:\n      summary: Create DataEntity's metadata field value\n      description: Creates DataEntity's metadata field value\n      operationId: createDataEntityMetadataFieldValue\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/MetadataFieldValueFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MetadataFieldValueList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/metadata/{metadata_field_id}:\n    put:\n      summary: Upsert DataEntity's metadata field value\n      description: Upserts DataEntity's metadata field value\n      operationId: upsertDataEntityMetadataFieldValue\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/DataEntityMetadataFieldIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/MetadataFieldValueUpdateFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MetadataFieldValue'\n      tags:\n        - dataEntity\n    delete:\n      summary: \"Delete DataEntity's metadata field value\"\n      description: \"Delete DataEntity's metadata field value\"\n      operationId: deleteDataEntityMetadataFieldValue\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/DataEntityMetadataFieldIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/lineage/upstream:\n    get:\n      summary: Get DataEntity's upstream lineage graph\n      description: Gets DataEntity's upstream lineage graph which size depends on lineage_depth parameter\n      operationId: getDataEntityUpstreamLineage\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - name: lineage_depth\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - name: expanded_entity_ids\n          in: query\n          required: false\n          explode: false\n          description: 'List of DataEntity ids which were expanded in the lineage graph'\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityLineage'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/lineage/downstream:\n    get:\n      summary: Get DataEntity's downstream lineage graph\n      description: Gets DataEntity's downstream lineage graph which size depends on lineage_depth parameter\n      operationId: getDataEntityDownstreamLineage\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - name: lineage_depth\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 1\n        - name: expanded_entity_ids\n          in: query\n          required: false\n          explode: false\n          description: 'List of DataEntity ids which were expanded in the lineage graph'\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityLineage'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/alerts:\n    get:\n      summary: Get DataEntity's alerts\n      description: Gets DataEntity's alerts\n      operationId: getDataEntityAlerts\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AlertList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/alerts/counts:\n    get:\n      summary: Get DataEntity's alerts counts\n      description: Gets DataEntity's alerts counts\n      operationId: getDataEntityAlertsCounts\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - name: status\n          in: query\n          required: true\n          schema:\n            $ref: './components.yaml/#/components/schemas/AlertStatus'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: integer\n                format: int64\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/runs:\n    get:\n      summary: Get runs for DataTransformer or DataQualityTest\n      description: Gets runs for DataTransformer or DataQualityTest\n      operationId: getRuns\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - name: status\n          in: query\n          required: false\n          schema:\n            $ref: './components.yaml/#/components/schemas/DataEntityRunStatus'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRunList'\n      tags:\n        - dataEntityRun\n\n  /api/dataentities/{data_entity_id}/activity:\n    get:\n      summary: Get activity for data entity\n      description: Get activity list for particular data entity\n      operationId: getDataEntityActivity\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - name: begin_date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: user_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: event_type\n          in: query\n          schema:\n            $ref: './components.yaml/#/components/schemas/ActivityEventType'\n        - name: last_event_id\n          in: query\n          schema:\n            type: integer\n            format: int64\n        - name: last_event_date_time\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './components.yaml/#/components/schemas/Activity'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/messages:\n    get:\n      summary: Get messages by data entity id\n      operationId: getDataEntityMessages\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - name: channel_id\n          in: query\n          schema:\n            type: string\n        - name: last_message_id\n          in: query\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MessageList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/messages/{message_id}:\n    get:\n      summary: Get messages for data entity\n      operationId: getMessages\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - name: message_id\n          in: path\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - name: last_message_id\n          in: query\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MessageList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/channels:\n    get:\n      summary: Get top X channels in which there are messages about this data entity\n      operationId: getChannels\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - name: channel_name\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MessageChannelList'\n      tags:\n        - dataEntity\n\n  /api/dataentities/{data_entity_id}/alert_config:\n    get:\n      summary: Get alert config for data entity\n      operationId: getAlertConfig\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityAlertConfig'\n      tags:\n        - dataEntity\n    put:\n      summary: Updates data entity alert config\n      operationId: updateAlertConfig\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataEntityAlertConfig'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityAlertConfig'\n      tags:\n        - dataEntity\n\n  /api/messages/{message_id}/url:\n    get:\n      summary: Redirects user to correspondent message in the provider\n      operationId: redirect\n      parameters:\n        - name: message_id\n          in: path\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        '301':\n          description: Moved Permanently\n      tags:\n        - dataCollaboration\n\n  /api/datasets/{data_entity_id}/structure:\n    get:\n      summary: Get latest version's DataSet structure information\n      description: Gets DataSet's structure information of latest version such as column stats by DataSet's id\n      operationId: getDataSetStructureLatest\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSetStructure'\n      tags:\n        - dataSet\n\n  /api/datasets/{data_entity_id}/structure/{version_id}:\n    get:\n      summary: Get DataSet structure information\n      description: Gets DataSet's structure information such as column stats by DataSet's id and version\n      operationId: getDataSetStructureByVersionId\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - name: version_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSetStructure'\n      tags:\n        - dataSet\n\n  /api/datasets/{data_entity_id}/sla:\n    get:\n      summary: Get Dataset's SLA\n      description: Gets Dataset's SLA\n      operationId: getSLA\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n      tags:\n        - dataQuality\n\n  /api/datasets/{data_entity_id}/sla_report:\n    get:\n      summary: Get SLA report\n      description: Get detailed SLA statistics\n      operationId: getDatasetSLAReport\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSetSLAReport'\n      tags:\n        - dataQuality\n\n  /api/datasets/{data_entity_id}/test_report:\n    get:\n      summary: Get Dataset's test report\n      description: Gets Dataset's test report\n      operationId: getDatasetTestReport\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSetTestReport'\n      tags:\n        - dataQuality\n\n  /api/datasets/{data_entity_id}/dataqatests:\n    get:\n      summary: Get DataEntity's related DataQualityTests\n      description: Gets DataEntity's related DataQualityTests\n      operationId: getDataEntityDataQATests\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityList'\n      tags:\n        - dataQuality\n\n  /api/datasets/{data_entity_id}/dataqatests/{dataqa_test_id}/severity:\n    put:\n      summary: Set DataQA test severity\n      description: Sets DataQA test severity\n      operationId: setDataQATestSeverity\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityIdParam'\n        - $ref: './components.yaml/#/components/parameters/DataQATestIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataQualityTestSeverityForm'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntity'\n      tags:\n        - dataQuality\n\n  /api/dataentitygroups/{data_entity_group_id}/children:\n    get:\n      summary: Get DataEntityGroup children\n      description: Gets DataEntityGroup children\n      operationId: getDataEntityGroupsChildren\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityGroupIdParam'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityList'\n      tags:\n        - dataEntity\n\n  /api/dataentitygroups:\n    post:\n      summary: Create New DataEntityGroup\n      description: Create New DataEntityGroup\n      operationId: createDataEntityGroup\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataEntityGroupFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRef'\n      tags:\n        - dataEntity\n\n  /api/dataentitygroups/{data_entity_group_id}:\n    put:\n      summary: Update DataEntityGroup\n      description: Updates DataEntityGroup\n      operationId: updateDataEntityGroup\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityGroupIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DataEntityGroupFormData'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityRef'\n      tags:\n        - dataEntity\n    delete:\n      summary: Delete DataEntityGroup\n      description: Deletes DataEntityGroup\n      operationId: deleteDataEntityGroup\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityGroupIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - dataEntity\n\n  /api/dataentitygroups/{data_entity_group_id}/lineage:\n    get:\n      summary: Get DataEntityGroup lineage\n      description: Gets DataEntityGroup lineage graph, which shows lineage for DEG children\n      operationId: getDataEntityGroupsLineage\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DataEntityGroupIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityGroupLineageList'\n      tags:\n        - dataEntity\n  /api/metadata/fields:\n    get:\n      summary: Get custom metadata fields\n      description: Gets all available custom metadata fields\n      operationId: getMetadataFieldList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MetadataFieldList'\n\n      tags:\n        - metadata\n  /api/datasetfields/{dataset_field_id}:\n    put:\n      summary: Update DatasetField's labels and description\n      description: Updates DatasetField's labels and description\n      operationId: updateDatasetField\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DatasetFieldIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/DatasetFieldUpdateFormData'\n      responses:\n        '201':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataSetField'\n      tags:\n        - datasetField\n\n  /api/datasetfields/{dataset_field_id}/enum_values:\n    get:\n      summary: Get field's enum values\n      description: Get all posible values for this field with description\n      operationId: getEnumValues\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DatasetFieldIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/EnumValueList'\n      tags:\n        - datasetField\n    post:\n      summary: Enum Value CRUD\n      description: Creates/updates/deletes enum values with their description\n      operationId: createEnumValue\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/DatasetFieldIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/BulkEnumValueFormData'\n      responses:\n        '201':\n          description: The resource has been successfully modified\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/EnumValueList'\n      tags:\n        - datasetField\n\n  /api/alerts:\n    get:\n      summary: Get all alerts\n      description: Gets all alerts\n      operationId: getAllAlerts\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AlertList'\n      tags:\n        - alert\n\n  /api/alerts/my:\n    get:\n      summary: Get authenticated user's alerts\n      description: Gets authenticated user's alerts\n      operationId: getAssociatedUserAlerts\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AlertList'\n      tags:\n        - alert\n\n  /api/alerts/dependents:\n    get:\n      summary: Get dependent entities' alerts\n      description: Gets dependent entities' alerts\n      operationId: getDependentEntitiesAlerts\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AlertList'\n      tags:\n        - alert\n\n  /api/alerts/totals:\n    get:\n      summary: Get alerts' totals\n      description: Gets alerts' totals\n      operationId: getAlertTotals\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AlertTotals'\n      tags:\n        - alert\n\n  /api/alerts/{alert_id}/status:\n    put:\n      summary: Change alert status\n      description: Changes alert status\n      operationId: changeAlertStatus\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/AlertIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/AlertStatusFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Alert'\n      tags:\n        - alert\n\n  /api/appInfo:\n    get:\n      summary: Get application info\n      description: Gets application info\n      operationId: getAppInfo\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/AppInfo'\n      tags:\n        - appInfo\n\n  /api/terms:\n    get:\n      summary: List of terms\n      description: Gets the list of existing terms\n      operationId: getTermsList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermRefList'\n      tags:\n        - term\n    post:\n      summary: Create term\n      description: Create new term\n      operationId: createTerm\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TermFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermDetails'\n      tags:\n        - term\n\n  /api/terms/{term_id}:\n    get:\n      summary: Get term details\n      description: Get all information about term\n      operationId: getTermDetails\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermDetails'\n      tags:\n        - term\n    put:\n      summary: Update term\n      description: Update existing term\n      operationId: updateTerm\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TermFormData'\n      responses:\n        '201':\n          description: The resource has been successfully modified\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermDetails'\n      tags:\n        - term\n    delete:\n      summary: Delete term\n      description: Deletes term\n      operationId: deleteTerm\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - term\n\n  /api/terms/{term_id}/linked_items:\n    get:\n      summary: Get term linked items\n      description: Get data entities, which are using this term\n      operationId: getTermLinkedItems\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n        - name: entity_class_id\n          in: query\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/DataEntityList'\n      tags:\n        - term\n\n  /api/terms/search:\n    post:\n      summary: Terms search by query\n      description: Creates a new search of all the matching terms to given query and calculates the aggregation data for correspondent data slice\n      operationId: termSearch\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TermSearchFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermSearchFacetsData'\n      tags:\n        - term\n\n  /api/terms/search/{search_id}:\n    get:\n      summary: Get terms search facets by search ID\n      description: Gets term search facets by parameter which can be found in search endpoint response\n      operationId: getTermSearchFacetList\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermSearchFacetsData'\n      tags:\n        - term\n    put:\n      summary: Update term search facets by search ID\n      description: Updates term search facets of a certain search ID by provided search parameters\n      operationId: updateTermSearchFacets\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TermSearchFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermSearchFacetsData'\n      tags:\n        - term\n\n  /api/terms/search/{search_id}/facet/{facet_type}:\n    get:\n      summary: Get countable term filters for chosen facet type\n      description: Gets countable term filters for chosen facet type\n      operationId: getTermFiltersForFacet\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: facet_type\n          in: path\n          required: true\n          schema:\n            $ref: './components.yaml/#/components/schemas/MultipleFacetType'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './components.yaml/#/components/schemas/CountableSearchFilter'\n      tags:\n        - term\n\n  /api/terms/search/{search_id}/results:\n    get:\n      summary: Get terms search results by search ID\n      description: Returns paginated list of terms search results for a given search ID\n      operationId: getTermSearchResults\n      parameters:\n        - name: search_id\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermList'\n      tags:\n        - term\n\n  /api/terms/search/suggestions:\n    get:\n      summary: Get terms search suggestions by query\n      description: Returns top five search suggestions for a given query\n      operationId: getTermSearchSuggestions\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TermRefList'\n      tags:\n        - term\n\n  /api/terms/{term_id}/ownership:\n    post:\n      summary: Create new ownership for term\n      description: Creates new ownership for term\n      operationId: createTermOwnership\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnershipFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Ownership'\n      tags:\n        - term\n\n  /api/terms/{term_id}/ownership/{ownership_id}:\n    put:\n      summary: Update existing ownership\n      description: Updates existing ownership\n      operationId: updateTermOwnership\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n        - $ref: './components.yaml/#/components/parameters/OwnershipIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnershipUpdateFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Ownership'\n      tags:\n        - term\n    delete:\n      summary: Delete ownership\n      description: Deletes the ownership\n      operationId: deleteTermOwnership\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n        - $ref: './components.yaml/#/components/parameters/OwnershipIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - term\n\n  /api/terms/{term_id}/tags:\n    put:\n      summary: Creates tags relations for term\n      description: Creates tags relations for term. Also creates corresponding tags in the system if they don't exist.\n      operationId: createTermTagsRelations\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/TermIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/TagsFormData'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/TagList'\n      tags:\n        - term\n\n  /api/activity:\n    get:\n      summary: Get activity\n      description: Returns activity for dedicated period\n      operationId: getActivity\n      parameters:\n        - name: begin_date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: datasource_id\n          in: query\n          schema:\n            type: integer\n            format: int64\n        - name: namespace_id\n          in: query\n          schema:\n            type: integer\n            format: int64\n        - name: tag_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: owner_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: user_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: type\n          in: query\n          schema:\n            $ref: './components.yaml/#/components/schemas/ActivityType'\n        - name: event_type\n          in: query\n          schema:\n            $ref: './components.yaml/#/components/schemas/ActivityEventType'\n        - name: last_event_id\n          in: query\n          schema:\n            type: integer\n            format: int64\n        - name: last_event_date_time\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './components.yaml/#/components/schemas/Activity'\n      tags:\n        - activity\n\n  /api/activity/counts:\n    get:\n      summary: Get activity counts\n      description: Returns activity counts for dedicated period\n      operationId: getActivityCounts\n      parameters:\n        - name: begin_date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: end_date\n          in: query\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: datasource_id\n          in: query\n          schema:\n            type: integer\n            format: int64\n        - name: namespace_id\n          in: query\n          schema:\n            type: integer\n            format: int64\n        - name: tag_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: owner_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: user_ids\n          in: query\n          schema:\n            type: array\n            items:\n              type: integer\n              format: int64\n        - name: event_type\n          in: query\n          schema:\n            $ref: './components.yaml/#/components/schemas/ActivityEventType'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/ActivityCountInfo'\n      tags:\n        - activity\n\n  /api/owner_association_request:\n    get:\n      summary: List of pending owner association requests\n      description: Gets the list of pending owner association requests\n      operationId: getOwnerAssociationRequestList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n        - name: active\n          in: query\n          schema:\n            type: boolean\n          required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/OwnerAssociationRequestList'\n      tags:\n        - ownerAssociationRequest\n    post:\n      summary: Create owner association request\n      description: Creates request for associating current authed user with owner\n      operationId: createOwnerAssociationRequest\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnerFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/OwnerAssociationRequest'\n      tags:\n        - ownerAssociationRequest\n\n  /api/owner_association_request/{owner_association_request_id}:\n    put:\n      summary: Update owner association request\n      description: Approve or decline owner association request\n      operationId: updateOwnerAssociationRequest\n      parameters:\n        - name: owner_association_request_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/OwnerAssociationRequestStatusFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/OwnerAssociationRequest'\n      tags:\n        - ownerAssociationRequest\n\n  /api/policies:\n    get:\n      summary: List of policies\n      description: Gets the list of existing policies\n      operationId: getPolicyList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/PolicyList'\n      tags:\n        - policy\n    post:\n      summary: Create policy\n      description: Creates new policy\n      operationId: createPolicy\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/PolicyFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/PolicyDetails'\n      tags:\n        - policy\n\n  /api/policies/{policy_id}:\n    get:\n      summary: Get policy details\n      description: Get policy representation\n      operationId: getPolicyDetails\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PolicyIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/PolicyDetails'\n      tags:\n        - policy\n    put:\n      summary: Update policy\n      description: Update existing policy\n      operationId: updatePolicy\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PolicyIdParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/PolicyFormData'\n      responses:\n        '201':\n          description: The resource has been successfully modified\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/PolicyDetails'\n      tags:\n        - policy\n    delete:\n      summary: Delete policy\n      description: Deletes policy\n      operationId: deletePolicy\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PolicyIdParam'\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - policy\n\n  /api/policies/schema:\n    get:\n      summary: Get policy schema\n      description: Get policy schema\n      operationId: getPolicySchema\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n      tags:\n        - policy\n\n  /api/roles:\n    get:\n      summary: List of roles\n      description: Gets the list of existing roles\n      operationId: getRolesList\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/SearchParam'\n        - $ref: './components.yaml/#/components/parameters/PageParam'\n        - $ref: './components.yaml/#/components/parameters/SizeParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/RoleList'\n      tags:\n        - role\n    post:\n      summary: Create role\n      operationId: createRole\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/RoleFormData'\n      responses:\n        '201':\n          description: The resource has been successfully created\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Role'\n      tags:\n        - role\n  /api/roles/{role_id}:\n    put:\n      summary: Update role\n      description: Updates existing role\n      operationId: updateRole\n      parameters:\n        - name: role_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/RoleFormData'\n      responses:\n        '201':\n          description: The resource has been successfully updated\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Role'\n      tags:\n        - role\n    delete:\n      summary: Delete role\n      description: Deletes existing role\n      operationId: deleteRole\n      parameters:\n        - name: role_id\n          in: path\n          schema:\n            type: integer\n            format: int64\n          required: true\n      responses:\n        '204':\n          $ref: './components.yaml/#/components/responses/Deleted'\n      tags:\n        - role\n\n  /api/resource/{permission_resource_type}/{resource_id}/permissions:\n    get:\n      summary: Get resource permissions\n      description: \"Gets permissions for current user for given resource\"\n      operationId: getResourcePermissions\n      parameters:\n        - $ref: './components.yaml/#/components/parameters/PermissionResourceTypeParam'\n        - name: resource_id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/PermissionList'\n      tags:\n        - permission\n\n  /api/datacollaboration/providers/slack/channels:\n    get:\n      summary: Public Slack channels ready to be written to\n      description: Gets Slack active channels ready to be written to\n      operationId: getSlackChannels\n      parameters:\n        - name: channel_name\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/MessageChannelList'\n      tags:\n        - dataCollaboration\n\n  /api/datacollaboration/providers/slack/messages:\n    post:\n      summary: Post a message in Slack\n      description: Posts a message in Slack\n      operationId: postMessageInSlack\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './components.yaml/#/components/schemas/MessageRequest'\n      responses:\n        '202':\n          description: The message has been queued for posting\n          content:\n            application/json:\n              schema:\n                $ref: './components.yaml/#/components/schemas/Message'\n      tags:\n        - dataCollaboration",
			"canonicalURL": "/github.com/opendatadiscovery/odd-platform@33219f87d261c409c90ca59109b1371670d54a4c/-/blob/odd-platform-specification/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/opendatadiscovery/odd-platform/blob/33219f87d261c409c90ca59109b1371670d54a4c/odd-platform-specification/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/activity\": get: operation \"getActivity\": parameters: parse parameter \"type\": parse schema: at odd-platform-specification/openapi.yaml:2298:19: $ref: resolve \"./components.yaml/#/components/schemas/ActivityType\": get \"https://raw.githubusercontent.com/opendatadiscovery/odd-platform/33219f87d261c409c90ca59109b1371670d54a4c/odd-platform-specification/components.yaml/\": https: bad HTTP code 400 (Bad Request)"
}