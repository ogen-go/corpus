{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/devtron-labs/devtron"
		},
		"file": {
			"name": "applist.yaml",
			"size": 0,
			"path": "specs/external-app/applist.yaml",
			"byteSize": 24498,
			"content": "openapi: \"3.0.3\"\ninfo:\n  version: 1.0.0\n  title: Devtron Labs\npaths:\n  /orchestrator/application:\n    post:\n      description: this api gives all external application+ devtron helm chart applications.\n      requestBody:\n        description: json as request body\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HelmAppListRequest'\n      responses:\n        \"200\":\n          description: all application responces\n          content:\n            text/event-stream:\n              schema:\n                $ref: \"#/components/schemas/AppList\"\n  /orchestrator/application/release-info:\n    get:\n      description: deployment values.yaml/release-info\n      parameters:\n        - in: query\n          name: appId\n          example: \"12|helm-app|cluster1-ns1\"\n          description: project ids\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: release and installed app info\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReleaseAndInstalledAppInfo\"\n  /orchestrator/application/hibernate:\n    post:\n      description: hibernate the app\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HibernateRequest'\n      responses:\n        \"200\":\n          description: hibernate success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/HibernateStatus\"\n  /orchestrator/application/unhibernate:\n    post:\n      description: un hibernate the app\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HibernateRequest'\n      responses:\n        \"200\":\n          description: hibernate success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/HibernateStatus\"\n  /orchestrator/application/cluster-env-details: #TODO change url location, move to cluster\n    get:\n      description: \"returns cluster environment namespace mappings\"\n      responses:\n        \"200\":\n          description: all cluster-env mapping\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClusterEnvironmentDetailList\"\n  /orchestrator/app/list/:\n    get:\n      description: this api gives all devtron applications.\n      parameters:\n        - in: query\n          name: projectIds\n          example: [ 12, 13 ]\n          description: project ids\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - in: query\n          name: clusterIds\n          example: [ 16, 13 ]\n          description: cluster ids\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: array\n            items:\n              type: integer\n        - in: query\n          name: environmentIds\n          required: true\n          example: [ 56,45 ]\n          description: environment ids\n          allowEmptyValue: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - in: query\n          name: offset\n          example: 2\n          description: offser\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: integer\n        - in: query\n          name: size\n          example: 20\n          description: size\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: integer\n        - in: query\n          name: sortOrder\n          example: \"ASC\"\n          description: sortOrder\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: string\n            enum:\n              - \"ASC\"\n              - \"DESC\"\n        - in: query\n          name: sortBy\n          example: \"appNameSort\"\n          description: sortBy\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: string\n            enum:\n              - \"appNameSort\"\n      responses:\n        \"200\":\n          description: all application responces\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppList\"\n  /orchestrator/app-store/installed-apps/:\n    get:\n      description: this api gives all chart-store applications.\n      parameters:\n        - in: query\n          name: envIds\n          example: [ 1, 2 ]\n          description: environment ids\n          required: true\n          allowEmptyValue: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - in: query\n          name: clusterIds\n          example: [ 16, 13 ]\n          description: cluster ids\n          required: true\n          allowEmptyValue: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - in: query\n          name: onlyDeprecated\n          example: false\n          description: deprecated flag\n          required: true\n          allowEmptyValue: true\n          schema:\n            type: boolean\n        - in: query\n          name: chartRepoIds\n          example: [ 10, 12 ]\n          description: size\n          required: true\n          allowEmptyValue: true\n          schema:\n            type: integer\n        - in: query\n          name: offset\n          example: 2\n          description: offser\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: integer\n        - in: query\n          name: size\n          example: 20\n          description: size\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: integer\n        - in: query\n          name: appStoreName\n          example: \"appStoreName\"\n          description: app store name\n          required: true\n          allowEmptyValue: true\n          schema:\n            type: string\n        - in: query\n          name: sortBy\n          example: \"appName\"\n          description: app name\n          required: true\n          allowEmptyValue: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: all application responces\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppList\"\n  /orchestrator/application/desired-manifest:\n    get:\n      description: get desired manifest for an object\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DesiredManifestRequest'\n      responses:\n        \"200\":\n          description: desired manifest request success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/DesiredManifestResponse\"\n  /orchestrator/application/delete:\n    delete:\n      description: delete application\n      parameters:\n        - in: query\n          name: appId\n          example: \"12|helm-app|cluster1-ns1\"\n          description: application Id\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: delete application request response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UninstallReleaseResponse\"\n  /orchestrator/application/update:\n    put:\n      description: update the application\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateReleaseRequest'\n      responses:\n        \"200\":\n          description: application update success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/UpdateReleaseResponse\"\n  /orchestrator/app-store/deployment/application/helm/link-to-chart-store:\n    put:\n      description: update the helm EA application with chartstore linking\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateReleaseWithChartLinkingRequest'\n      responses:\n        \"200\":\n          description: application update success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateReleaseResponse\"\n  /orchestrator/application/deployment-history:\n    get:\n      description: deployment history of helm app\n      parameters:\n        - in: query\n          name: appId\n          example: \"12|helm-app|cluster1-ns1\"\n          description: project ids\n          required: false\n          allowEmptyValue: false\n          schema:\n            type: string\n        - in: query\n          name: installedAppId\n          example: \"100\"\n          description: devtron charts installed instance id\n          required: false\n          allowEmptyValue: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: deployment history\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeploymentHistoryAndInstalledAppInfo\"\n  /orchestrator/application/deployment-history/info:\n    get:\n      description: deployment history detail info, values\n      parameters:\n        - in: query\n          name: appId\n          example: \"12|helm-app|cluster1-ns1\"\n          description: project ids\n          required: false\n          allowEmptyValue: false\n          schema:\n            type: string\n        - in: query\n          name: installedAppId\n          example: \"100\"\n          description: devtron charts installed instance id\n          required: false\n          allowEmptyValue: false\n          schema:\n            type: string\n        - in: query\n          name: version\n          example: 1\n          description: installed app version id\n          required: true\n          allowEmptyValue: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: deployment history detail info response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HelmAppDeploymentManifestDetail\"\ncomponents:\n  schemas:\n    appListRequest:\n      type: object\n      properties:\n        projectIds:\n          type: array\n          description: project ids\n          items:\n            type: integer\n            format: int64\n          example: [ 1, 2, 3 ]\n        clusterIds:\n          type: array\n          description: cluster ids\n          items:\n            type: integer\n            format: int64\n          example: [ 1, 2, 3 ]\n        namespaces:\n          type: array\n          description: namespace ID\n          items:\n            type: string\n          example: [ \"devtroncd\", \"devtron-ci\" ]\n        environmentIds:\n          type: array\n          description: environemnt ids\n          items:\n            type: integer\n            format: int64\n          example: [ 1, 2, 3 ]\n    AppEnvironmentDetail:\n      allOf:\n        - $ref: \"#/components/schemas/EnvironmentDetail\"\n        - type: object\n          properties:\n            clusterName:\n              type: string\n              description: cluster corresponding to the environemt where application is deployed\n              example: \"qa-cluster\"\n            clusterId:\n              type: integer\n              description: clusterId corresponding to the environemt where application is deployed\n              example: \"12\"\n    EnvironmentDetail:\n      type: object\n      properties:\n        environmentName:\n          type: string\n          description: name of the environemnt\n          example: \"devtroncd\"\n        environmentId:\n          type: integer\n          description: \"id in which app is deployed\"\n          example: 56\n        namespace:\n          type: string\n          description: namespace corresponding to the environemnt\n          example: \"devtroncd\"\n        isPrduction:\n          type: boolean\n          description: if given environemnt is marked as production or not, nullable\n    ClusterEnvironmentDetail:\n      type: object\n      properties:\n        clusterName:\n          type: string\n          description: name of the cluster\n          example: \"demo cluster\"\n        clusterID:\n          type: integer\n          description: id of the cluster\n        environments:\n          type: array\n          description: \"environments in that cluster\"\n          items:\n            type: object\n            $ref: \"#/components/schemas/EnvironmentDetail\"\n    ClusterEnvironmentDetailList:\n      type: array\n      description: list of cluster env detail object\n      items:\n        type: object\n        $ref: \"#/components/schemas/ClusterEnvironmentDetail\"\n    HelmApp:\n      type: object\n      properties:\n        lastDeployedAt:\n          type: string\n          format: date-time\n          example: \"2021-12-15T05:44:05Z\"\n          description: time when this application was last deployed/updated\n        appName:\n          type: string\n          description: name of the helm application/helm release name\n          example: \"demo-app\"\n        appId:\n          type: string\n          description: unique identifier for app\n          example: \"12|helm-app|cluster1-ns1\"\n        chartName:\n          type: string\n          description: name of the chart\n          example: \"nginx, fluentd\"\n        chartAvatar:\n          type: string\n          description: url/location of the chart icon\n          example: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n        projectId:\n          type: integer\n          description: unique identifier for the project, APP with no project will have id `0`\n          example: \"12\"\n        chartVersion:\n          type: string\n          description: chart version\n          example: 1.2.3\n        environmentDetail:\n          type: object\n          $ref: \"#/components/schemas/AppEnvironmentDetail\"\n    AppList:\n      type: object\n      properties:\n        clusterIds:\n          type: array\n          description: clusters to which result corresponds\n          example: [ 1, 2 ]\n          items:\n            type: integer\n        applicationType:\n          description: application type inside the array\n          type: string\n          enum: [ DEVTRON-CHART-STORE, DEVTRON-APP ,HELM-APP ]\n        errored:\n          type: boolean\n          description: if data fetch for that cluster produced error\n          example: false\n        errorMsg:\n          type: string\n          description: error msg if client failed to fetch\n          example: cluster not rechable\n        helmApps:\n          type: array\n          description: all helm app list, EA+ devtronapp\n          items:\n            type: object\n            $ref: \"#/components/schemas/HelmApp\"\n        devtronApps:\n          type: array\n          description: all helm app list, EA+ devtronapp\n          items:\n            type: object\n            $ref: \"#/components/schemas/DevtronApp\"\n    DevtronApp:\n      type: object\n      properties:\n        appName:\n          type: string\n          description: name of the helm application/helm release name\n          example: \"demo-app\"\n        appId:\n          type: string\n          description: unique identifier for app\n          example: \"12,helm-app|cluster1-ns1\"\n        projectId:\n          type: integer\n          description: unique identifier for the project\n          example: \"12\"\n        environmentDetails:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AppEnvironmentDetail\"\n    HelmAppListRequest:\n      type: object\n      properties:\n        clusterIds:\n          type: array\n          description: cluster ids\n          items:\n            type: integer\n            format: int64\n          example: [ 1, 2, 3 ]\n    HibernateTargetObject:\n      type: object\n      properties:\n        group:\n          type: string\n          description: k8s resource group\n          example: apps\n        kind:\n          type: string\n          description: k8s resource kind\n          example: Deployment\n        version:\n          type: string\n          description: k8s resource version\n          example: v1\n        name:\n          type: string\n          description: k8s resource name\n          example: test-deployment\n        namespace:\n          type: string\n          description: k8s resource ns\n          example: devtron\n    HibernateRequest:\n      type: object\n      properties:\n        appId:\n          type: string\n          description: helm app id\n          example: \"1|test|testapp\"\n        resources:\n          type: array\n          items:\n            $ref: \"#/components/schemas/HibernateTargetObject\"\n    HibernateStatus:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: operation was success or not\n          example: true\n        errorMessage:\n          type: string\n          description: failure cause, empty is success\n          example: resource doesn't exists\n        targetObject:\n          type: object\n          $ref: \"#/components/schemas/HibernateTargetObject\"\n    ChartMetadata:\n      type: object\n      properties:\n        chartName:\n          type: string\n          description: name of the chart\n          example: envoy\n        chartVersion:\n          type: string\n          description: version of the helm chart\n          example: v1.2.3\n        home:\n          type: string\n          description: chart home\n          example: nginx.com\n        sources:\n          type: array\n          description: source of the helm chart\n          example: [ nginx.com ]\n          items:\n            type: string\n        description:\n          type: string\n          description: description of the helm chart\n          example: description of the helm chart\n        notes:\n          type: string\n          description: Contains the rendered templates/NOTES.txt\n          example: notes of the chart\n    HelmAppDeploymentDetail:\n      type: object\n      properties:\n        chartMetadata:\n          type: object\n          $ref: \"#/components/schemas/ChartMetadata\"\n          description: metadata of the chart\n        dockerImages:\n          type: array\n          description: docker images presrnt insise the chart\n          items:\n            type: string\n        version:\n          type: int\n          description: deployment version of the helm chart\n          example: 12\n        deployedAt:\n          type: string\n          format: date-time\n          example: \"2021-12-15T05:44:05Z\"\n    DeploymentHistoryAndInstalledAppInfo:\n      type: object\n      properties:\n        deploymentHistory:\n          type: array\n          description: deployment history\n          items:\n            $ref: \"#/components/schemas/HelmAppDeploymentDetail\"\n        installedAppInfo:\n          type: object\n          $ref: \"#/components/schemas/InstalledAppInfo\"\n          description: Installed app info\n    HelmAppDeploymentHistory:\n      type: array\n      description: deployment history\n      items:\n        $ref: \"#/components/schemas/HelmAppDeploymentDetail\"\n    InstalledAppInfo:\n      type: object\n      properties:\n        appId:\n          type: integer\n          description: appId\n        installedAppId:\n          type: integer\n          description: installedAppId\n        environmentName:\n          type: string\n          description: environment Name\n        appOfferingMode:\n          type: string\n          description: EA_ONLY/FULL\n        appStoreChartId:\n          type: number\n          description: App store chart Id\n        installedAppVersionId:\n          type: number\n          description: App store installed app version Id\n        clusterId:\n          type: number\n          description: Cluster Id\n        environmentId:\n          type: number\n          description: Environment Id\n        appStoreChartRepoName:\n          type: string\n          description: App store Chart Repo name\n        appStoreChartName:\n          type: string\n          description: App store Chart name\n    ReleaseAndInstalledAppInfo:\n      type: object\n      properties:\n        releaseInfo:\n          type: object\n          $ref: \"#/components/schemas/ReleaseInfo\"\n          description: release info\n        installedAppInfo:\n          type: object\n          $ref: \"#/components/schemas/InstalledAppInfo\"\n          description: Installed app info\n    ReleaseInfo:\n      type: object\n      properties:\n        deployedAppDetail:\n          type: object\n          $ref: \"#/components/schemas/HelmApp\"\n          description: deployment deils\n        defaultValues:\n          type: string\n          description: default chat values\n        overrideValues:\n          type: string\n          description: overrides passed by user\n        mergedValues:\n          type: string\n          description: merged values\n        readme:\n          type: string\n          description: readme of the chart\n        valuesSchemaJson:\n          type: string\n          description: content of the values.schema.json file of chart\n    DesiredManifestRequest:\n      type: object\n      properties:\n        appId:\n          type: string\n          description: helm app id\n          example: \"1|test|testapp\"\n        resource:\n          type: object\n          $ref: \"#/components/schemas/ResourceIdentifier\"\n    ResourceIdentifier:\n      type: object\n      properties:\n        group:\n          type: string\n          description: k8s resource group\n          example: apps\n        kind:\n          type: string\n          description: k8s resource kind\n          example: Deployment\n        version:\n          type: string\n          description: k8s resource version\n          example: v1\n        name:\n          type: string\n          description: k8s resource name\n          example: test-deployment\n        namespace:\n          type: string\n          description: k8s resource ns\n          example: devtron\n    DesiredManifestResponse:\n      type: object\n      properties:\n        manifest:\n          type: string\n          description: desired manifest\n          example: \"some manifest\"\n    UninstallReleaseResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: success or failure\n          example: true\n    UpdateReleaseRequest:\n      type: object\n      properties:\n        appId:\n          type: string\n          description: helm app id\n          example: \"1|test|testapp\"\n        valuesYaml:\n          type: string\n          description: updated values yaml string\n          example: \"\"\n    UpdateReleaseWithChartLinkingRequest:\n      type: object\n      properties:\n        appId:\n          type: string\n          description: helm app id\n          example: \"1|test|testapp\"\n        valuesYaml:\n          type: string\n          description: updated values yaml string\n          example: \"\"\n        appStoreApplicationVersionId:\n          type: number\n          description: app store application version Id\n          example: 1\n        referenceValueId:\n          type: number\n          description: Reference value Id of selected chart values\n          example: 1\n        referenceValueKind:\n          type: string\n          description: Reference value Kind of selected chart values \"oneof=DEFAULT TEMPLATE DEPLOYED EXISTING\" (can be null)\n          example: 1\n    UpdateReleaseResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: success or failure\n          example: true\n    HelmAppDeploymentManifestDetail:\n      type: object\n      properties:\n        manifest:\n          type: string\n          description: manifest of deployment\n          example: \"abcd\"\n        valuesYaml:\n          type: string\n          description: values YAML of deployment\n          example: \"abcd\"\n\n",
			"canonicalURL": "/github.com/devtron-labs/devtron@299b90b9322f40d84ebac23a9b43d0bbe23c56ca/-/blob/specs/external-app/applist.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/devtron-labs/devtron/blob/299b90b9322f40d84ebac23a9b43d0bbe23c56ca/specs/external-app/applist.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"HelmAppDeploymentHistory\": parse schema: parse schema: parse schema: property \"version\": parse schema: at 1:5497: unexpected schema type: \"int\""
}