{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/friflo/Friflo.Json.Fliox"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "Json.Tests/assets~/Schema/JSON/EntityIdStore/openapi.json",
			"byteSize": 74128,
			"content": "\n{\n  \"openapi\": \"3.0.0\",\n  \"x-generator\": \"Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema\",\n  \"info\": {\n    \"title\":        \"EntityIdStore\",\n    \"description\":  \"Generated by \u003ca href='https://github.com/friflo/Friflo.Json.Fliox#schema'\u003eJSON Fliox\u003c/a\u003e\",\n    \"version\":      \"0.0.0\"\n  },\n  \"servers\": [\n\n  ],\n  \"tags\": [\n    {\n      \"name\": \"database\",\n      \"description\": \"\u003ca target='EntityIdStore' href='html/schema.html'\u003eschema\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"commands\",\n      \"description\": \"database \u003ca target='EntityIdStore' href='html/schema.html#commands'\u003ecommands\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"guidEntities\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.GuidEntity'\u003eGuidEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"intEntities\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.IntEntity'\u003eIntEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"intEntitiesAuto\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.AutoIntEntity'\u003eAutoIntEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"longEntities\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.LongEntity'\u003eLongEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"shortEntities\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.ShortEntity'\u003eShortEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"byteEntities\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.ByteEntity'\u003eByteEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"customIdEntities\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.CustomIdEntity'\u003eCustomIdEntity\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"entityRefs\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.EntityRefs'\u003eEntityRefs\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"customIdEntities2\",\n      \"description\": \"entity type: \u003ca target='EntityIdStore' href='html/schema.html#Friflo.Json.Tests.Common.UnitTest.Fliox.Client.CustomIdEntity2'\u003eCustomIdEntity2\u003c/a\u003e\"\n    }],\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"summary\":    \"return all database containers\",\n        \"tags\":       [\"database\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Echo\": {\n      \"post\": {\n        \"summary\":    \"echos the given parameter to assure the database is working appropriately.\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                   \n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                   \n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Containers\": {\n      \"post\": {\n        \"summary\":    \"list all database containers\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Messages\": {\n      \"post\": {\n        \"summary\":    \"list all database commands and messages\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbMessages\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Schema\": {\n      \"post\": {\n        \"summary\":    \"return the Schema assigned to the database\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbSchema\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Stats\": {\n      \"post\": {\n        \"summary\":    \"return the number of entities of all containers (or the given container) of the database\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbStats\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Host\": {\n      \"post\": {\n        \"summary\":    \"returns general information about the Hub like version, host, project and environment name\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostParam\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostInfo\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Cluster\": {\n      \"post\": {\n        \"summary\":    \"list all databases and their containers hosted by the Hub\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostCluster\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.User\": {\n      \"post\": {\n        \"summary\":    \"return the groups of the current user. Optionally change the groups of the current user\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/UserParam\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/UserResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Client\": {\n      \"post\": {\n        \"summary\":    \"return client specific infos and adjust general client behavior like \u003cb\u003equeueEvents\u003c/b\u003e\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/ClientParam\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/ClientResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/guidEntities\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container guidEntities\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"guidEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.GuidEntity.json#/definitions/GuidEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container guidEntities\",\n        \"tags\":       [\"guidEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.GuidEntity.json#/definitions/GuidEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/guidEntities/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container guidEntities\",\n        \"tags\":       [\"guidEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.GuidEntity.json#/definitions/GuidEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container guidEntities\",\n        \"tags\":       [\"guidEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.GuidEntity.json#/definitions/GuidEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container guidEntities\",\n        \"tags\":       [\"guidEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container guidEntities by id\",\n        \"tags\":       [\"guidEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/guidEntities/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container guidEntities\",\n        \"tags\":       [\"guidEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.GuidEntity.json#/definitions/GuidEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/guidEntities/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container guidEntities\",\n        \"tags\":       [\"guidEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntities\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container intEntities\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"intEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.IntEntity.json#/definitions/IntEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container intEntities\",\n        \"tags\":       [\"intEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.IntEntity.json#/definitions/IntEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntities/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container intEntities\",\n        \"tags\":       [\"intEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.IntEntity.json#/definitions/IntEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container intEntities\",\n        \"tags\":       [\"intEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.IntEntity.json#/definitions/IntEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container intEntities\",\n        \"tags\":       [\"intEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container intEntities by id\",\n        \"tags\":       [\"intEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntities/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container intEntities\",\n        \"tags\":       [\"intEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.IntEntity.json#/definitions/IntEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntities/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container intEntities\",\n        \"tags\":       [\"intEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntitiesAuto\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container intEntitiesAuto\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.AutoIntEntity.json#/definitions/AutoIntEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container intEntitiesAuto\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.AutoIntEntity.json#/definitions/AutoIntEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntitiesAuto/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container intEntitiesAuto\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.AutoIntEntity.json#/definitions/AutoIntEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container intEntitiesAuto\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.AutoIntEntity.json#/definitions/AutoIntEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container intEntitiesAuto\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container intEntitiesAuto by id\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntitiesAuto/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container intEntitiesAuto\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.AutoIntEntity.json#/definitions/AutoIntEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/intEntitiesAuto/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container intEntitiesAuto\",\n        \"tags\":       [\"intEntitiesAuto\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/longEntities\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container longEntities\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"longEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.LongEntity.json#/definitions/LongEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container longEntities\",\n        \"tags\":       [\"longEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.LongEntity.json#/definitions/LongEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/longEntities/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container longEntities\",\n        \"tags\":       [\"longEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.LongEntity.json#/definitions/LongEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container longEntities\",\n        \"tags\":       [\"longEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.LongEntity.json#/definitions/LongEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container longEntities\",\n        \"tags\":       [\"longEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container longEntities by id\",\n        \"tags\":       [\"longEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/longEntities/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container longEntities\",\n        \"tags\":       [\"longEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.LongEntity.json#/definitions/LongEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/longEntities/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container longEntities\",\n        \"tags\":       [\"longEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/shortEntities\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container shortEntities\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"shortEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.ShortEntity.json#/definitions/ShortEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container shortEntities\",\n        \"tags\":       [\"shortEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.ShortEntity.json#/definitions/ShortEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/shortEntities/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container shortEntities\",\n        \"tags\":       [\"shortEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.ShortEntity.json#/definitions/ShortEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container shortEntities\",\n        \"tags\":       [\"shortEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.ShortEntity.json#/definitions/ShortEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container shortEntities\",\n        \"tags\":       [\"shortEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container shortEntities by id\",\n        \"tags\":       [\"shortEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/shortEntities/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container shortEntities\",\n        \"tags\":       [\"shortEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.ShortEntity.json#/definitions/ShortEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/shortEntities/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container shortEntities\",\n        \"tags\":       [\"shortEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/byteEntities\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container byteEntities\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"byteEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.ByteEntity.json#/definitions/ByteEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container byteEntities\",\n        \"tags\":       [\"byteEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.ByteEntity.json#/definitions/ByteEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/byteEntities/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container byteEntities\",\n        \"tags\":       [\"byteEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.ByteEntity.json#/definitions/ByteEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container byteEntities\",\n        \"tags\":       [\"byteEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.ByteEntity.json#/definitions/ByteEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container byteEntities\",\n        \"tags\":       [\"byteEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container byteEntities by id\",\n        \"tags\":       [\"byteEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/byteEntities/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container byteEntities\",\n        \"tags\":       [\"byteEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.ByteEntity.json#/definitions/ByteEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/byteEntities/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container byteEntities\",\n        \"tags\":       [\"byteEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container customIdEntities\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"customIdEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity.json#/definitions/CustomIdEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container customIdEntities\",\n        \"tags\":       [\"customIdEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity.json#/definitions/CustomIdEntity\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container customIdEntities\",\n        \"tags\":       [\"customIdEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity.json#/definitions/CustomIdEntity\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container customIdEntities\",\n        \"tags\":       [\"customIdEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity.json#/definitions/CustomIdEntity\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container customIdEntities\",\n        \"tags\":       [\"customIdEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container customIdEntities by id\",\n        \"tags\":       [\"customIdEntities\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container customIdEntities\",\n        \"tags\":       [\"customIdEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity.json#/definitions/CustomIdEntity\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container customIdEntities\",\n        \"tags\":       [\"customIdEntities\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/entityRefs\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container entityRefs\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"entityRefs\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.EntityRefs.json#/definitions/EntityRefs\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container entityRefs\",\n        \"tags\":       [\"entityRefs\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.EntityRefs.json#/definitions/EntityRefs\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/entityRefs/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container entityRefs\",\n        \"tags\":       [\"entityRefs\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.EntityRefs.json#/definitions/EntityRefs\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container entityRefs\",\n        \"tags\":       [\"entityRefs\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.EntityRefs.json#/definitions/EntityRefs\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container entityRefs\",\n        \"tags\":       [\"entityRefs\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container entityRefs by id\",\n        \"tags\":       [\"entityRefs\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/entityRefs/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container entityRefs\",\n        \"tags\":       [\"entityRefs\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.EntityRefs.json#/definitions/EntityRefs\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/entityRefs/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container entityRefs\",\n        \"tags\":       [\"entityRefs\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities2\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container customIdEntities2\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity2.json#/definitions/CustomIdEntity2\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container customIdEntities2\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity2.json#/definitions/CustomIdEntity2\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities2/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container customIdEntities2\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity2.json#/definitions/CustomIdEntity2\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container customIdEntities2\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity2.json#/definitions/CustomIdEntity2\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container customIdEntities2\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container customIdEntities2 by id\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities2/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container customIdEntities2\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"UnitTest.Fliox.Client.CustomIdEntity2.json#/definitions/CustomIdEntity2\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/customIdEntities2/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container customIdEntities2\",\n        \"tags\":       [\"customIdEntities2\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    }\n  }   \n}",
			"canonicalURL": "/github.com/friflo/Friflo.Json.Fliox@a8964b8ede2fcc7d6d63998905b6463229650180/-/blob/Json.Tests/assets~/Schema/JSON/EntityIdStore/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/friflo/Friflo.Json.Fliox/blob/a8964b8ede2fcc7d6d63998905b6463229650180/Json.Tests/assets~/Schema/JSON/EntityIdStore/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/\": get: responses: 200: content: application/json: schema: parse schema: at 69:27: external \"Friflo.Json.Fliox.Hub.DB.Cluster.json\": get: file: local file reference is not allowed"
}