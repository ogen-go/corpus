{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oxidecomputer/third-party-api-clients"
		},
		"file": {
			"name": "okta.json",
			"size": 0,
			"path": "specs/okta/okta.json",
			"byteSize": 765265,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"x-origin\": [\n        {\n            \"url\": \"https://raw.githubusercontent.com/okta/okta-management-openapi-spec/master/dist/spec.json\",\n            \"format\": \"swagger\",\n            \"version\": \"2.0\",\n            \"converter\": {\n                \"url\": \"https://github.com/mermade/oas-kit\",\n                \"version\": \"7.0.8\"\n            }\n        }\n    ],\n    \"info\": {\n        \"title\": \"Okta API\",\n        \"description\": \"Allows customers to easily access the Okta API\",\n        \"termsOfService\": \"http://developer.okta.com/terms/\",\n        \"contact\": {\n            \"name\": \"Okta Developer Team\",\n            \"email\": \"devex-public@okta.com\",\n            \"url\": \"http://developer.okta.com/\"\n        },\n        \"license\": {\n            \"name\": \"Apache-2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\": \"2.5.0\"\n    },\n    \"externalDocs\": {\n        \"description\": \"Find more info here\",\n        \"url\": \"http://developer.okta.com/docs/api/getting_started/design_principles.html\"\n    },\n    \"paths\": {\n        \"/api/v1/apps\": {\n            \"get\": {\n                \"description\": \"Enumerates apps added to your organization with pagination. A subset of apps can be returned that match a supported filter expression or query.\",\n                \"operationId\": \"listApplications\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of apps\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of results for a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    },\n                    {\n                        \"description\": \"Filters apps by status, user.id, group.id or credentials.signing.kid expression\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Traverses users link relationship and optionally embeds Application User resource\",\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"includeNonDeleted\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Application\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Applications\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Adds a new application to your Okta organization.\",\n                \"operationId\": \"createApplication\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Executes activation lifecycle operation when creating the app\",\n                        \"in\": \"query\",\n                        \"name\": \"activate\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    },\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"OktaAccessGateway-Agent\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/Application\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Application\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}\": {\n            \"delete\": {\n                \"description\": \"Removes an inactive application.\",\n                \"operationId\": \"deleteApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches an application from your Okta organization by `id`.\",\n                \"operationId\": \"getApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Application\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates an application in your organization.\",\n                \"operationId\": \"updateApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/Application\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Application\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/csrs\": {\n            \"get\": {\n                \"description\": \"Enumerates Certificate Signing Requests for an application\",\n                \"operationId\": \"listCsrsForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Csr\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Certificate Signing Requests for Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Generates a new key pair and returns the Certificate Signing Request for it.\",\n                \"operationId\": \"generateCsrForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/CsrMetadata\"\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Csr\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Generate Certificate Signing Request for Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/csrs/{csrId}\": {\n            \"delete\": {\n                \"operationId\": \"revokeCsrFromApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"csrId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"operationId\": \"getCsrForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"csrId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Csr\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/csrs/{csrId}/lifecycle/publish\": {\n            \"post\": {\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"csrId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ],\n                \"x-okta-multi-operation\": [\n                    {\n                        \"consumes\": [\n                            \"application/x-x509-ca-cert\"\n                        ],\n                        \"encoding\": \"base64\",\n                        \"operationId\": \"publishCerCert\",\n                        \"parameters\": [\n                            {\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/x-x509-ca-cert\"\n                        ],\n                        \"operationId\": \"publishBinaryCerCert\",\n                        \"parameters\": [\n                            {\n                                \"format\": \"binary\",\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/pkix-cert\"\n                        ],\n                        \"encoding\": \"base64\",\n                        \"operationId\": \"publishDerCert\",\n                        \"parameters\": [\n                            {\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/pkix-cert\"\n                        ],\n                        \"operationId\": \"publishBinaryDerCert\",\n                        \"parameters\": [\n                            {\n                                \"format\": \"binary\",\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/x-pem-file\"\n                        ],\n                        \"operationId\": \"publishBinaryPemCert\",\n                        \"parameters\": [\n                            {\n                                \"format\": \"binary\",\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/keys\": {\n            \"get\": {\n                \"description\": \"Enumerates key credentials for an application\",\n                \"operationId\": \"listApplicationKeys\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Key Credentials for Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/keys/generate\": {\n            \"post\": {\n                \"description\": \"Generates a new X.509 certificate for an application key credential\",\n                \"operationId\": \"generateApplicationKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"validityYears\",\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/keys/{keyId}\": {\n            \"get\": {\n                \"description\": \"Gets a specific application key credential by kid\",\n                \"operationId\": \"getApplicationKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"keyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Key Credential for Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/credentials/keys/{keyId}/clone\": {\n            \"post\": {\n                \"description\": \"Clones a X.509 certificate for an application key credential from a source application to target application.\",\n                \"operationId\": \"cloneApplicationKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"keyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Unique key of the target Application\",\n                        \"in\": \"query\",\n                        \"name\": \"targetAid\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Clone Application Key Credential\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/grants\": {\n            \"get\": {\n                \"description\": \"Lists all scope consent grants for the application\",\n                \"operationId\": \"listScopeConsentGrants\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Grants consent for the application to request an OAuth 2.0 Okta scope\",\n                \"operationId\": \"grantConsentToScope\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/grants/{grantId}\": {\n            \"delete\": {\n                \"description\": \"Revokes permission for the application to request the given scope\",\n                \"operationId\": \"revokeScopeConsentGrant\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"grantId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a single scope consent grant for the application\",\n                \"operationId\": \"getScopeConsentGrant\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"grantId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/groups\": {\n            \"get\": {\n                \"description\": \"Enumerates group assignments for an application.\",\n                \"operationId\": \"listApplicationGroupAssignments\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of assignments\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of results for a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ApplicationGroupAssignment\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Groups Assigned to Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/groups/{groupId}\": {\n            \"delete\": {\n                \"description\": \"Removes a group assignment from an application.\",\n                \"operationId\": \"deleteApplicationGroupAssignment\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove Group from Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches an application group assignment\",\n                \"operationId\": \"getApplicationGroupAssignment\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApplicationGroupAssignment\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Assigned Group for Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Assigns a group to an application\",\n                \"operationId\": \"createApplicationGroupAssignment\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ApplicationGroupAssignment\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApplicationGroupAssignment\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Assign Group to Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates an inactive application.\",\n                \"operationId\": \"activateApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Activate Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates an active application.\",\n                \"operationId\": \"deactivateApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Deactivate Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/tokens\": {\n            \"delete\": {\n                \"description\": \"Revokes all tokens for the specified application\",\n                \"operationId\": \"revokeOAuth2TokensForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Lists all tokens for the application\",\n                \"operationId\": \"listOAuth2TokensForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2Token\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/tokens/{tokenId}\": {\n            \"delete\": {\n                \"description\": \"Revokes the specified token for the specified application\",\n                \"operationId\": \"revokeOAuth2TokenForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"tokenId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a token for the specified application\",\n                \"operationId\": \"getOAuth2TokenForApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"tokenId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Token\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/users\": {\n            \"get\": {\n                \"description\": \"Enumerates all assigned [application users](#application-user-model) for an application.\",\n                \"operationId\": \"listApplicationUsers\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"query_scope\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"specifies the pagination cursor for the next page of assignments\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"specifies the number of results for a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/AppUser\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Users Assigned to Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Assigns an user to an application with [credentials](#application-user-credentials-object) and an app-specific [profile](#application-user-profile-object). Profile mappings defined for the application are first applied before applying any profile properties specified in the request.\",\n                \"operationId\": \"assignUserToApplication\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AppUser\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AppUser\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Assign User to Application for SSO \u0026 Provisioning\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/apps/{appId}/users/{userId}\": {\n            \"delete\": {\n                \"description\": \"Removes an assignment for a user from an application.\",\n                \"operationId\": \"deleteApplicationUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sendEmail\",\n                        \"x-okta-added-version\": \"1.5.0\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove User from Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a specific user assignment for application by `id`.\",\n                \"operationId\": \"getApplicationUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AppUser\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Assigned User for Application\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Updates a user's profile for an application\",\n                \"operationId\": \"updateApplicationUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AppUser\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AppUser\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update Application Profile for Assigned User\",\n                \"tags\": [\n                    \"Application\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listAuthorizationServers\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/AuthorizationServer\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createAuthorizationServer\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AuthorizationServer\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServer\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Created\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteAuthorizationServer\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getAuthorizationServer\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServer\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateAuthorizationServer\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AuthorizationServer\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServer\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/claims\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listOAuth2Claims\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2Claim\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createOAuth2Claim\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/OAuth2Claim\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Claim\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/claims/{claimId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteOAuth2Claim\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"claimId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getOAuth2Claim\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"claimId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Claim\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateOAuth2Claim\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"claimId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/OAuth2Claim\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Claim\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/clients\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listOAuth2ClientsForAuthorizationServer\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2Client\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"revokeRefreshTokensForAuthorizationServerAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listRefreshTokensForAuthorizationServerAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2RefreshToken\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/clients/{clientId}/tokens/{tokenId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"revokeRefreshTokenForAuthorizationServerAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"tokenId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getRefreshTokenForAuthorizationServerAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"tokenId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2RefreshToken\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/credentials/keys\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listAuthorizationServerKeys\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/credentials/lifecycle/keyRotate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"rotateAuthorizationServerKeys\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/JwkUse\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"activateAuthorizationServer\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deactivateAuthorizationServer\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listAuthorizationServerPolicies\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/AuthorizationServerPolicy\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createAuthorizationServerPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AuthorizationServerPolicy\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServerPolicy\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Created\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteAuthorizationServerPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getAuthorizationServerPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServerPolicy\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateAuthorizationServerPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AuthorizationServerPolicy\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServerPolicy\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activate Authorization Server Policy\",\n                \"operationId\": \"activateAuthorizationServerPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivate Authorization Server Policy\",\n                \"operationId\": \"deactivateAuthorizationServerPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules\": {\n            \"get\": {\n                \"description\": \"Enumerates all policy rules for the specified Custom Authorization Server and Policy.\",\n                \"operationId\": \"listAuthorizationServerPolicyRules\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRule\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a policy rule for the specified Custom Authorization Server and Policy.\",\n                \"operationId\": \"createAuthorizationServerPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AuthorizationServerPolicyRule\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}\": {\n            \"delete\": {\n                \"description\": \"Deletes a Policy Rule defined in the specified Custom Authorization Server and Policy.\",\n                \"operationId\": \"deleteAuthorizationServerPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Returns a Policy Rule by ID that is defined in the specified Custom Authorization Server and Policy.\",\n                \"operationId\": \"getAuthorizationServerPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates the configuration of the Policy Rule defined in the specified Custom Authorization Server and Policy.\",\n                \"operationId\": \"updateAuthorizationServerPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AuthorizationServerPolicyRule\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activate Authorization Server Policy Rule\",\n                \"operationId\": \"activateAuthorizationServerPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivate Authorization Server Policy Rule\",\n                \"operationId\": \"deactivateAuthorizationServerPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/scopes\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listOAuth2Scopes\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"cursor\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2Scope\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createOAuth2Scope\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/OAuth2Scope\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Scope\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/authorizationServers/{authServerId}/scopes/{scopeId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteOAuth2Scope\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"scopeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getOAuth2Scope\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"scopeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Scope\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateOAuth2Scope\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"authServerId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"scopeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/OAuth2Scope\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2Scope\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"AuthorizationServer\"\n                ]\n            }\n        },\n        \"/api/v1/domains\": {\n            \"get\": {\n                \"description\": \"List all verified custom Domains for the org.\",\n                \"operationId\": \"listDomains\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/DomainListResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Domains\",\n                \"tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates your domain.\",\n                \"operationId\": \"createDomain\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Domain\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Domain\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Create Domain\",\n                \"tags\": [\n                    \"Domain\"\n                ]\n            }\n        },\n        \"/api/v1/domains/{domainId}\": {\n            \"delete\": {\n                \"description\": \"Deletes a Domain by `id`.\",\n                \"operationId\": \"deleteDomain\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"domainId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete Domain\",\n                \"tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a Domain by `id`.\",\n                \"operationId\": \"getDomain\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"domainId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Domain\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Domain\",\n                \"tags\": [\n                    \"Domain\"\n                ]\n            }\n        },\n        \"/api/v1/domains/{domainId}/certificate\": {\n            \"put\": {\n                \"description\": \"Creates the Certificate for the Domain.\",\n                \"operationId\": \"createCertificate\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"domainId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/DomainCertificate\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Create Certificate\",\n                \"tags\": [\n                    \"Domain\"\n                ]\n            }\n        },\n        \"/api/v1/domains/{domainId}/verify\": {\n            \"post\": {\n                \"description\": \"Verifies the Domain by `id`.\",\n                \"operationId\": \"verifyDomain\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"domainId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Domain\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Verify Domain\",\n                \"tags\": [\n                    \"Domain\"\n                ]\n            }\n        },\n        \"/api/v1/eventHooks\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listEventHooks\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/EventHook\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createEventHook\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/EventHook\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            }\n        },\n        \"/api/v1/eventHooks/{eventHookId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteEventHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"eventHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getEventHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"eventHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateEventHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"eventHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/EventHook\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            }\n        },\n        \"/api/v1/eventHooks/{eventHookId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"activateEventHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"eventHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            }\n        },\n        \"/api/v1/eventHooks/{eventHookId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deactivateEventHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"eventHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            }\n        },\n        \"/api/v1/eventHooks/{eventHookId}/lifecycle/verify\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"verifyEventHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"eventHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EventHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"EventHook\"\n                ]\n            }\n        },\n        \"/api/v1/features\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listFeatures\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Feature\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Feature\"\n                ]\n            }\n        },\n        \"/api/v1/features/{featureId}\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getFeature\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"featureId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Feature\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Feature\"\n                ]\n            }\n        },\n        \"/api/v1/features/{featureId}/dependencies\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listFeatureDependencies\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"featureId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Feature\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Feature\"\n                ]\n            }\n        },\n        \"/api/v1/features/{featureId}/dependents\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listFeatureDependents\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"featureId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Feature\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Feature\"\n                ]\n            }\n        },\n        \"/api/v1/features/{featureId}/{lifecycle}\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateFeatureLifecycle\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"featureId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"lifecycle\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"mode\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Feature\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Feature\"\n                ]\n            }\n        },\n        \"/api/v1/groups\": {\n            \"get\": {\n                \"description\": \"Enumerates groups in your organization with pagination. A subset of groups can be returned that match a supported filter expression or query.\",\n                \"operationId\": \"listGroups\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Searches the name property of groups for matching value\",\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Filter expression for groups\",\n                        \"in\": \"query\",\n                        \"name\": \"search\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of groups\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of group results in a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 10000\n                        }\n                    },\n                    {\n                        \"description\": \"If specified, it causes additional metadata to be included in the response.\",\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Group\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Groups\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Adds a new group with `OKTA_GROUP` type to your organization.\",\n                \"operationId\": \"createGroup\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/Group\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Group\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/rules\": {\n            \"get\": {\n                \"description\": \"Lists all group rules for your organization.\",\n                \"operationId\": \"listGroupRules\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Specifies the number of rule results in a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 50\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of rules\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the keyword to search fules for\",\n                        \"in\": \"query\",\n                        \"name\": \"search\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"If specified as `groupIdToGroupNameMap`, then show group names\",\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"x-okta-added-version\": \"1.3.0\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/GroupRule\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Group Rules\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a group rule to dynamically add users to the specified group if they match the condition\",\n                \"operationId\": \"createGroupRule\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/GroupRule\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GroupRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Create Group Rule\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/rules/{ruleId}\": {\n            \"delete\": {\n                \"description\": \"Removes a specific group rule by id from your organization\",\n                \"operationId\": \"deleteGroupRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Indicates whether to keep or remove users from groups assigned by this rule.\",\n                        \"in\": \"query\",\n                        \"name\": \"removeUsers\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"Accepted\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete a group Rule\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a specific group rule by id from your organization\",\n                \"operationId\": \"getGroupRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GroupRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Group Rule\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates a group rule. Only `INACTIVE` rules can be updated.\",\n                \"operationId\": \"updateGroupRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/GroupRule\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/GroupRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/rules/{ruleId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates a specific group rule by id from your organization\",\n                \"operationId\": \"activateGroupRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Activate a group Rule\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/rules/{ruleId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates a specific group rule by id from your organization\",\n                \"operationId\": \"deactivateGroupRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Deactivate a group Rule\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}\": {\n            \"delete\": {\n                \"description\": \"Removes a group with `OKTA_GROUP` type from your organization.\",\n                \"operationId\": \"deleteGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Lists all group rules for your organization.\",\n                \"operationId\": \"getGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Group\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Group Rules\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates the profile for a group with `OKTA_GROUP` type from your organization.\",\n                \"operationId\": \"updateGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/Group\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Group\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/apps\": {\n            \"get\": {\n                \"description\": \"Enumerates all applications that are assigned to a group.\",\n                \"operationId\": \"listAssignedApplicationsForGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of apps\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of app results for a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Application\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Assigned Applications\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listGroupAssignedRoles\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Role\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Assigns a Role to a Group\",\n                \"operationId\": \"assignRoleToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"disableNotifications\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AssignRoleRequest\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Role\"\n                                }\n                            }\n                        }\n                    },\n                    \"201\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles/{roleId}\": {\n            \"delete\": {\n                \"description\": \"Unassigns a Role from a Group\",\n                \"operationId\": \"removeRoleFromGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getRole\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Role\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps\": {\n            \"get\": {\n                \"description\": \"Lists all App targets for an `APP_ADMIN` Role assigned to a Group. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.\",\n                \"operationId\": \"listApplicationTargetsForApplicationAdministratorRoleForGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/CatalogApplication\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"addApplicationTargetToAdminRoleGivenToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}\": {\n            \"delete\": {\n                \"description\": \"Remove App Instance Target to App Administrator Role given to a Group\",\n                \"operationId\": \"removeApplicationTargetFromAdministratorRoleGivenToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"applicationId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove App Instance Target to App Administrator Role given to a Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Add App Instance Target to App Administrator Role given to a Group\",\n                \"operationId\": \"addApplicationInstanceTargetToAppAdminRoleGivenToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"applicationId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add App Instance Target to App Administrator Role given to a Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles/{roleId}/targets/groups\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listGroupTargetsForGroupRole\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Group\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}\": {\n            \"delete\": {\n                \"description\": \"\",\n                \"operationId\": \"removeGroupTargetFromGroupAdministratorRoleGivenToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"targetGroupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"\",\n                \"operationId\": \"addGroupTargetToGroupAdministratorRoleForGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"targetGroupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/users\": {\n            \"get\": {\n                \"description\": \"Enumerates all users that are a member of a group.\",\n                \"operationId\": \"listGroupUsers\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of users\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of user results in a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 1000\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Group Members\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/groups/{groupId}/users/{userId}\": {\n            \"delete\": {\n                \"description\": \"Removes a user from a group with 'OKTA_GROUP' type.\",\n                \"operationId\": \"removeUserFromGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove User from Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Adds a user to a group with 'OKTA_GROUP' type.\",\n                \"operationId\": \"addUserToGroup\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add User to Group\",\n                \"tags\": [\n                    \"Group\"\n                ]\n            }\n        },\n        \"/api/v1/idps\": {\n            \"get\": {\n                \"description\": \"Enumerates IdPs in your organization with pagination. A subset of IdPs can be returned that match a supported filter expression or query.\",\n                \"operationId\": \"listIdentityProviders\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Searches the name property of IdPs for matching value\",\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of IdPs\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of IdP results in a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    },\n                    {\n                        \"description\": \"Filters IdPs by type\",\n                        \"in\": \"query\",\n                        \"name\": \"type\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Identity Providers\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Adds a new IdP to your organization.\",\n                \"operationId\": \"createIdentityProvider\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IdentityProvider\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add Identity Provider\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/credentials/keys\": {\n            \"get\": {\n                \"description\": \"Enumerates IdP key credentials.\",\n                \"operationId\": \"listIdentityProviderKeys\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of keys\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of key results in a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Keys\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Adds a new X.509 certificate credential to the IdP key store.\",\n                \"operationId\": \"createIdentityProviderKey\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/JsonWebKey\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add X.509 Certificate Public Key\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/credentials/keys/{keyId}\": {\n            \"delete\": {\n                \"description\": \"Deletes a specific IdP Key Credential by `kid` if it is not currently being used by an Active or Inactive IdP.\",\n                \"operationId\": \"deleteIdentityProviderKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"keyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete Key\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a specific IdP Key Credential by `kid`\",\n                \"operationId\": \"getIdentityProviderKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"keyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Key\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}\": {\n            \"delete\": {\n                \"description\": \"Removes an IdP from your organization.\",\n                \"operationId\": \"deleteIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete Identity Provider\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches an IdP by `id`.\",\n                \"operationId\": \"getIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Identity Provider\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates the configuration for an IdP.\",\n                \"operationId\": \"updateIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/IdentityProvider\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update Identity Provider\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/csrs\": {\n            \"get\": {\n                \"description\": \"Enumerates Certificate Signing Requests for an IdP\",\n                \"operationId\": \"listCsrsForIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Csr\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Certificate Signing Requests for IdP\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Generates a new key pair and returns a Certificate Signing Request for it.\",\n                \"operationId\": \"generateCsrForIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/CsrMetadata\"\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Csr\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Generate Certificate Signing Request for IdP\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/csrs/{csrId}\": {\n            \"delete\": {\n                \"description\": \"Revoke a Certificate Signing Request and delete the key pair from the IdP\",\n                \"operationId\": \"revokeCsrForIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"csrId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a specific Certificate Signing Request model by id\",\n                \"operationId\": \"getCsrForIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"csrId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Csr\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish\": {\n            \"post\": {\n                \"description\": \"Update the Certificate Signing Request with a signed X.509 certificate and add it into the signing key credentials for the IdP.\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"csrId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"IdentityProvider\"\n                ],\n                \"x-okta-multi-operation\": [\n                    {\n                        \"consumes\": [\n                            \"application/x-x509-ca-cert\"\n                        ],\n                        \"encoding\": \"base64\",\n                        \"operationId\": \"publishCerCertForIdentityProvider\",\n                        \"parameters\": [\n                            {\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/x-x509-ca-cert\"\n                        ],\n                        \"operationId\": \"publishBinaryCerCertForIdentityProvider\",\n                        \"parameters\": [\n                            {\n                                \"format\": \"binary\",\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/pkix-cert\"\n                        ],\n                        \"encoding\": \"base64\",\n                        \"operationId\": \"publishDerCertForIdentityProvider\",\n                        \"parameters\": [\n                            {\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/pkix-cert\"\n                        ],\n                        \"operationId\": \"publishBinaryDerCertForIdentityProvider\",\n                        \"parameters\": [\n                            {\n                                \"format\": \"binary\",\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    {\n                        \"consumes\": [\n                            \"application/x-pem-file\"\n                        ],\n                        \"operationId\": \"publishBinaryPemCertForIdentityProvider\",\n                        \"parameters\": [\n                            {\n                                \"format\": \"binary\",\n                                \"in\": \"body\",\n                                \"name\": \"certificate\",\n                                \"required\": true,\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/keys\": {\n            \"get\": {\n                \"description\": \"Enumerates signing key credentials for an IdP\",\n                \"operationId\": \"listIdentityProviderSigningKeys\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Signing Key Credentials for IdP\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/keys/generate\": {\n            \"post\": {\n                \"description\": \"Generates a new X.509 certificate for an IdP signing key credential to be used for signing assertions sent to the IdP\",\n                \"operationId\": \"generateIdentityProviderSigningKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"expiry of the IdP Key Credential\",\n                        \"in\": \"query\",\n                        \"name\": \"validityYears\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Generate New IdP Signing Key Credential\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/keys/{keyId}\": {\n            \"get\": {\n                \"description\": \"Gets a specific IdP Key Credential by `kid`\",\n                \"operationId\": \"getIdentityProviderSigningKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"keyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Signing Key Credential for IdP\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/credentials/keys/{keyId}/clone\": {\n            \"post\": {\n                \"description\": \"Clones a X.509 certificate for an IdP signing key credential from a source IdP to target IdP\",\n                \"operationId\": \"cloneIdentityProviderKey\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"keyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"targetIdpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/JsonWebKey\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Clone Signing Key Credential for IdP\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates an inactive IdP.\",\n                \"operationId\": \"activateIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Activate Identity Provider\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates an active IdP.\",\n                \"operationId\": \"deactivateIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Deactivate Identity Provider\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/users\": {\n            \"get\": {\n                \"description\": \"Find all the users linked to an identity provider\",\n                \"operationId\": \"listIdentityProviderApplicationUsers\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/IdentityProviderApplicationUser\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Find Users\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/users/{userId}\": {\n            \"delete\": {\n                \"description\": \"Removes the link between the Okta user and the IdP user.\",\n                \"operationId\": \"unlinkUserFromIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Unlink User from IdP\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a linked IdP user by ID\",\n                \"operationId\": \"getIdentityProviderApplicationUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProviderApplicationUser\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Links an Okta user to an existing Social Identity Provider. This does not support the SAML2 Identity Provider Type\",\n                \"operationId\": \"linkUserToIdentityProvider\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserIdentityProviderLinkRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/IdentityProviderApplicationUser\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Link a user to a Social IdP without a transaction\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/idps/{idpId}/users/{userId}/credentials/tokens\": {\n            \"get\": {\n                \"description\": \"Fetches the tokens minted by the Social Authentication Provider when the user authenticates with Okta via Social Auth.\",\n                \"operationId\": \"listSocialAuthTokens\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"idpId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/SocialAuthToken\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Social Authentication Token Operation\",\n                \"tags\": [\n                    \"IdentityProvider\"\n                ]\n            }\n        },\n        \"/api/v1/inlineHooks\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listInlineHooks\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"type\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/InlineHook\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createInlineHook\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/InlineHook\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InlineHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            }\n        },\n        \"/api/v1/inlineHooks/{inlineHookId}\": {\n            \"delete\": {\n                \"description\": \"Deletes the Inline Hook matching the provided id. Once deleted, the Inline Hook is unrecoverable. As a safety precaution, only Inline Hooks with a status of INACTIVE are eligible for deletion.\",\n                \"operationId\": \"deleteInlineHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"inlineHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets an inline hook by ID\",\n                \"operationId\": \"getInlineHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"inlineHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InlineHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates an inline hook by ID\",\n                \"operationId\": \"updateInlineHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"inlineHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/InlineHook\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InlineHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            }\n        },\n        \"/api/v1/inlineHooks/{inlineHookId}/execute\": {\n            \"post\": {\n                \"description\": \"Executes the Inline Hook matching the provided inlineHookId using the request body as the input. This will send the provided data through the Channel and return a response if it matches the correct data contract. This execution endpoint should only be used for testing purposes.\",\n                \"operationId\": \"executeInlineHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"inlineHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/InlineHookPayload\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InlineHookResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            }\n        },\n        \"/api/v1/inlineHooks/{inlineHookId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates the Inline Hook matching the provided id\",\n                \"operationId\": \"activateInlineHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"inlineHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InlineHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            }\n        },\n        \"/api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates the Inline Hook matching the provided id\",\n                \"operationId\": \"deactivateInlineHook\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"inlineHookId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/InlineHook\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"InlineHook\"\n                ]\n            }\n        },\n        \"/api/v1/logs\": {\n            \"get\": {\n                \"description\": \"The Okta System Log API provides read access to your organization’s system log. This API provides more functionality than the Events API\",\n                \"operationId\": \"getLogs\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"since\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"until\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 100\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sortOrder\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"ASCENDING\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/LogEvent\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Fetch a list of events from your Okta organization system log.\",\n                \"tags\": [\n                    \"Log\"\n                ]\n            }\n        },\n        \"/api/v1/mappings\": {\n            \"get\": {\n                \"description\": \"Enumerates Profile Mappings in your organization with pagination.\",\n                \"operationId\": \"listProfileMappings\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sourceId\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"targetId\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ProfileMapping\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"ProfileMapping\"\n                ]\n            }\n        },\n        \"/api/v1/mappings/{mappingId}\": {\n            \"get\": {\n                \"description\": \"Fetches a single Profile Mapping referenced by its ID.\",\n                \"operationId\": \"getProfileMapping\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"mappingId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProfileMapping\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Profile Mapping\",\n                \"tags\": [\n                    \"ProfileMapping\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Updates an existing Profile Mapping by adding, updating, or removing one or many Property Mappings.\",\n                \"operationId\": \"updateProfileMapping\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"mappingId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ProfileMapping\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ProfileMapping\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update Profile Mapping\",\n                \"tags\": [\n                    \"ProfileMapping\"\n                ]\n            }\n        },\n        \"/api/v1/meta/schemas/apps/{appInstanceId}/default\": {\n            \"get\": {\n                \"description\": \"Fetches the Schema for an App User\",\n                \"operationId\": \"getApplicationUserSchema\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appInstanceId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserSchema\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Fetches the Schema for an App User\",\n                \"tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Partial updates on the User Profile properties of the Application User Schema.\",\n                \"operationId\": \"updateApplicationUserProfile\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appInstanceId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserSchema\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserSchema\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Partial updates on the User Profile properties of the Application User Schema.\",\n                \"tags\": [\n                    \"UserSchema\"\n                ]\n            }\n        },\n        \"/api/v1/meta/schemas/user/linkedObjects\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listLinkedObjectDefinitions\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/LinkedObject\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"LinkedObject\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"addLinkedObjectDefinition\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/LinkedObject\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/LinkedObject\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"LinkedObject\"\n                ]\n            }\n        },\n        \"/api/v1/meta/schemas/user/linkedObjects/{linkedObjectName}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteLinkedObjectDefinition\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"linkedObjectName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"LinkedObject\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getLinkedObjectDefinition\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"linkedObjectName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/LinkedObject\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"LinkedObject\"\n                ]\n            }\n        },\n        \"/api/v1/meta/schemas/user/{schemaId}\": {\n            \"get\": {\n                \"description\": \"Fetches the schema for a Schema Id.\",\n                \"operationId\": \"getUserSchema\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"schemaId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserSchema\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Fetches the schema for a Schema Id.\",\n                \"tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Partial updates on the User Profile properties of the user schema.\",\n                \"operationId\": \"updateUserProfile\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"schemaId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserSchema\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserSchema\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserSchema\"\n                ]\n            }\n        },\n        \"/api/v1/meta/types/user\": {\n            \"get\": {\n                \"description\": \"Fetches all User Types in your org\",\n                \"operationId\": \"listUserTypes\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/UserType\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserType\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a new User Type. A default User Type is automatically created along with your org, and you may add another 9 User Types for a maximum of 10.\",\n                \"operationId\": \"createUserType\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/UserType\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserType\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserType\"\n                ]\n            }\n        },\n        \"/api/v1/meta/types/user/{typeId}\": {\n            \"delete\": {\n                \"description\": \"Deletes a User Type permanently. This operation is not permitted for the default type, nor for any User Type that has existing users\",\n                \"operationId\": \"deleteUserType\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"typeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserType\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a User Type by ID. The special identifier `default` may be used to fetch the default User Type.\",\n                \"operationId\": \"getUserType\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"typeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserType\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserType\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Updates an existing User Type\",\n                \"operationId\": \"updateUserType\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"typeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/UserType\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserType\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserType\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Replace an existing User Type\",\n                \"operationId\": \"replaceUserType\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"typeId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/UserType\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserType\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserType\"\n                ]\n            }\n        },\n        \"/api/v1/policies\": {\n            \"get\": {\n                \"description\": \"Gets all policies with the specified type.\",\n                \"operationId\": \"listPolicies\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"type\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"status\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Policy\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a policy.\",\n                \"operationId\": \"createPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"activate\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/Policy\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Policy\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}\": {\n            \"delete\": {\n                \"description\": \"Removes a policy.\",\n                \"operationId\": \"deletePolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a policy.\",\n                \"operationId\": \"getPolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Policy\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates a policy.\",\n                \"operationId\": \"updatePolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/Policy\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Policy\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates a policy.\",\n                \"operationId\": \"activatePolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates a policy.\",\n                \"operationId\": \"deactivatePolicy\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}/rules\": {\n            \"get\": {\n                \"description\": \"Enumerates all policy rules.\",\n                \"operationId\": \"listPolicyRules\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/PolicyRule\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a policy rule.\",\n                \"operationId\": \"createPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/PolicyRule\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PolicyRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}/rules/{ruleId}\": {\n            \"delete\": {\n                \"description\": \"Removes a policy rule.\",\n                \"operationId\": \"deletePolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a policy rule.\",\n                \"operationId\": \"getPolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PolicyRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates a policy rule.\",\n                \"operationId\": \"updatePolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/PolicyRule\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/PolicyRule\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates a policy rule.\",\n                \"operationId\": \"activatePolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates a policy rule.\",\n                \"operationId\": \"deactivatePolicyRule\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"policyId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"ruleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Policy\"\n                ]\n            }\n        },\n        \"/api/v1/sessions\": {\n            \"post\": {\n                \"description\": \"Creates a new session for a user with a valid session token. Use this API if, for example, you want to set the session cookie yourself instead of allowing Okta to set it, or want to hold the session ID in order to delete a session via the API instead of visiting the logout URL.\",\n                \"operationId\": \"createSession\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CreateSessionRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Session\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Create Session with Session Token\",\n                \"tags\": [\n                    \"Session\"\n                ]\n            }\n        },\n        \"/api/v1/sessions/{sessionId}\": {\n            \"delete\": {\n                \"description\": \"\",\n                \"operationId\": \"endSession\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"sessionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Close Session\",\n                \"tags\": [\n                    \"Session\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Get details about a session.\",\n                \"operationId\": \"getSession\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"sessionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Session\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"Session\"\n                ]\n            }\n        },\n        \"/api/v1/sessions/{sessionId}/lifecycle/refresh\": {\n            \"post\": {\n                \"description\": \"\",\n                \"operationId\": \"refreshSession\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"sessionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Session\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Refresh Session\",\n                \"tags\": [\n                    \"Session\"\n                ]\n            }\n        },\n        \"/api/v1/templates/sms\": {\n            \"get\": {\n                \"description\": \"Enumerates custom SMS templates in your organization. A subset of templates can be returned that match a template type.\",\n                \"operationId\": \"listSmsTemplates\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"templateType\",\n                        \"x-openapi-v3-schema-ref\": \"#/definitions/SmsTemplateType\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/SmsTemplate\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List SMS Templates\",\n                \"tags\": [\n                    \"Template\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Adds a new custom SMS template to your organization.\",\n                \"operationId\": \"createSmsTemplate\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/SmsTemplate\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SmsTemplate\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add SMS Template\",\n                \"tags\": [\n                    \"Template\"\n                ]\n            }\n        },\n        \"/api/v1/templates/sms/{templateId}\": {\n            \"delete\": {\n                \"description\": \"Removes an SMS template.\",\n                \"operationId\": \"deleteSmsTemplate\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"templateId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove SMS Template\",\n                \"tags\": [\n                    \"Template\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a specific template by `id`\",\n                \"operationId\": \"getSmsTemplate\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"templateId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SmsTemplate\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get SMS Template\",\n                \"tags\": [\n                    \"Template\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Updates only some of the SMS template properties:\",\n                \"operationId\": \"partialUpdateSmsTemplate\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"templateId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/SmsTemplate\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SmsTemplate\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Partial SMS Template Update\",\n                \"tags\": [\n                    \"Template\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates the SMS template.\",\n                \"operationId\": \"updateSmsTemplate\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"templateId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/SmsTemplate\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/SmsTemplate\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update SMS Template\",\n                \"tags\": [\n                    \"Template\"\n                ]\n            }\n        },\n        \"/api/v1/threats/configuration\": {\n            \"get\": {\n                \"description\": \"Gets current ThreatInsight configuration\",\n                \"operationId\": \"getCurrentConfiguration\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ThreatInsightConfiguration\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"ThreatInsight\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Updates ThreatInsight configuration\",\n                \"operationId\": \"updateConfiguration\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ThreatInsightConfiguration\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ThreatInsightConfiguration\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"ThreatInsight\"\n                ]\n            }\n        },\n        \"/api/v1/trustedOrigins\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listOrigins\",\n                \"parameters\": [\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"createOrigin\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/TrustedOrigin\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            }\n        },\n        \"/api/v1/trustedOrigins/{trustedOriginId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deleteOrigin\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"trustedOriginId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"getOrigin\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"trustedOriginId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"updateOrigin\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"trustedOriginId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/TrustedOrigin\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            }\n        },\n        \"/api/v1/trustedOrigins/{trustedOriginId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"activateOrigin\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"trustedOriginId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            }\n        },\n        \"/api/v1/trustedOrigins/{trustedOriginId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Success\",\n                \"operationId\": \"deactivateOrigin\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"trustedOriginId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"TrustedOrigin\"\n                ]\n            }\n        },\n        \"/api/v1/users\": {\n            \"get\": {\n                \"description\": \"Lists users in your organization with pagination in most cases.  A subset of users can be returned that match a supported filter expression or search criteria.\",\n                \"operationId\": \"listUsers\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Finds a user that matches firstName, lastName, and email properties\",\n                        \"in\": \"query\",\n                        \"name\": \"q\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of users\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of results returned\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 10\n                        }\n                    },\n                    {\n                        \"description\": \"Filters users with a supported expression for a subset of properties\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Searches for users with a supported filtering  expression for most properties\",\n                        \"in\": \"query\",\n                        \"name\": \"search\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sortBy\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sortOrder\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/User\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Users\",\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Creates a new user in your Okta organization with or without credentials.\",\n                \"operationId\": \"createUser\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Executes activation lifecycle operation when creating the user\",\n                        \"in\": \"query\",\n                        \"name\": \"activate\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    },\n                    {\n                        \"description\": \"Indicates whether to create a user with a specified authentication provider\",\n                        \"in\": \"query\",\n                        \"name\": \"provider\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    },\n                    {\n                        \"description\": \"With activate=true, set nextLogin to \\\"changePassword\\\" to have the password be EXPIRED, so user must change it the next time they log in.\",\n                        \"in\": \"query\",\n                        \"name\": \"nextLogin\",\n                        \"x-okta-added-version\": \"0.14.0\",\n                        \"x-openapi-v3-schema-ref\": \"#/definitions/UserNextLogin\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"default\": \"\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/CreateUserRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Create User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}\": {\n            \"put\": {\n                \"operationId\": \"setLinkedObjectForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"associatedUserId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"primaryRelationshipName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"primaryUserId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}\": {\n            \"delete\": {\n                \"description\": \"Deletes a user permanently.  This operation can only be performed on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**\",\n                \"operationId\": \"deactivateOrDeleteUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sendEmail\",\n                        \"x-okta-added-version\": \"1.5.0\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"202\": {\n                        \"description\": \"ACCEPTED\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a user from your Okta organization.\",\n                \"operationId\": \"getUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Fetch a user by `id`, `login`, or `login shortname` if the short name is unambiguous.\",\n                \"operationId\": \"partialUpdateUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"strict\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/User\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Update a user's profile and/or credentials using strict-update semantics.\",\n                \"operationId\": \"updateUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"strict\",\n                        \"x-okta-added-version\": \"1.10.0\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/User\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/appLinks\": {\n            \"get\": {\n                \"description\": \"Fetches appLinks for all direct or indirect (via group membership) assigned applications.\",\n                \"operationId\": \"listAppLinks\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/AppLink\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Assigned App Links\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/clients\": {\n            \"get\": {\n                \"description\": \"Lists all client resources for which the specified user has grants or tokens.\",\n                \"operationId\": \"listUserClients\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2Client\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/clients/{clientId}/grants\": {\n            \"delete\": {\n                \"description\": \"Revokes all grants for the specified user and client\",\n                \"operationId\": \"revokeGrantsForUserAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Lists all grants for a specified user and client\",\n                \"operationId\": \"listGrantsForUserAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/clients/{clientId}/tokens\": {\n            \"delete\": {\n                \"description\": \"Revokes all refresh tokens issued for the specified User and Client.\",\n                \"operationId\": \"revokeTokensForUserAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Lists all refresh tokens issued for the specified User and Client.\",\n                \"operationId\": \"listRefreshTokensForUserAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2RefreshToken\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}\": {\n            \"delete\": {\n                \"description\": \"Revokes the specified refresh token.\",\n                \"operationId\": \"revokeTokenForUserAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"tokenId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a refresh token issued for the specified User and Client.\",\n                \"operationId\": \"getRefreshTokenForUserAndClient\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"clientId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"tokenId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"default\": 20\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2RefreshToken\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/credentials/change_password\": {\n            \"post\": {\n                \"description\": \"Changes a user's password by validating the user's current password. This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid password credential\",\n                \"operationId\": \"changePassword\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"strict\",\n                        \"x-okta-added-version\": \"1.10.0\",\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ChangePasswordRequest\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserCredentials\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Change Password\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/credentials/change_recovery_question\": {\n            \"post\": {\n                \"description\": \"Changes a user's recovery question \u0026 answer credential by validating the user's current password.  This operation can only be performed on users in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password credential\",\n                \"operationId\": \"changeRecoveryQuestion\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserCredentials\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserCredentials\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Change Recovery Question\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/credentials/forgot_password\": {\n            \"post\": {\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ForgotPasswordResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Forgot Password\",\n                \"tags\": [\n                    \"User\"\n                ],\n                \"x-okta-multi-operation\": [\n                    {\n                        \"description\": \"Generates a one-time token (OTT) that can be used to reset a user's password\",\n                        \"operationId\": \"forgotPasswordGenerateOneTimeToken\",\n                        \"parameters\": [\n                            {\n                                \"default\": true,\n                                \"in\": \"query\",\n                                \"name\": \"sendEmail\",\n                                \"type\": \"boolean\"\n                            }\n                        ]\n                    },\n                    {\n                        \"description\": \"Sets a new password for a user by validating the user's answer to their current recovery question\",\n                        \"operationId\": \"forgotPasswordSetNewPassword\",\n                        \"parameters\": [\n                            {\n                                \"in\": \"body\",\n                                \"name\": \"user\",\n                                \"required\": true,\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserCredentials\"\n                                }\n                            },\n                            {\n                                \"default\": true,\n                                \"in\": \"query\",\n                                \"name\": \"sendEmail\",\n                                \"type\": \"boolean\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors\": {\n            \"get\": {\n                \"description\": \"Enumerates all the enrolled factors for the specified user\",\n                \"operationId\": \"listFactors\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/UserFactor\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Enrolls a user with a supported factor.\",\n                \"operationId\": \"enrollFactor\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"updatePhone\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    },\n                    {\n                        \"description\": \"id of SMS template (only for SMS factor)\",\n                        \"in\": \"query\",\n                        \"name\": \"templateId\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"tokenLifetimeSeconds\",\n                        \"x-okta-added-version\": \"1.3.0\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 300\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"activate\",\n                        \"x-okta-added-version\": \"1.3.0\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserFactor\"\n                            }\n                        }\n                    },\n                    \"description\": \"Factor\",\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserFactor\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Enroll Factor\",\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors/catalog\": {\n            \"get\": {\n                \"description\": \"Enumerates all the supported factors that can be enrolled for the specified user\",\n                \"operationId\": \"listSupportedFactors\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/UserFactor\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors/questions\": {\n            \"get\": {\n                \"description\": \"Enumerates all available security questions for a user's `question` factor\",\n                \"operationId\": \"listSupportedSecurityQuestions\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/SecurityQuestion\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors/{factorId}\": {\n            \"delete\": {\n                \"description\": \"Unenrolls an existing factor for the specified user, allowing the user to enroll a new factor.\",\n                \"operationId\": \"deleteFactor\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"factorId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a factor for the specified user\",\n                \"operationId\": \"getFactor\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"factorId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserFactor\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors/{factorId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"The `sms` and `token:software:totp` factor types require activation to complete the enrollment process.\",\n                \"operationId\": \"activateFactor\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"factorId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ActivateFactorRequest\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserFactor\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Activate Factor\",\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}\": {\n            \"get\": {\n                \"description\": \"Polls factors verification transaction for status.\",\n                \"operationId\": \"getFactorTransactionStatus\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"factorId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"transactionId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/VerifyUserFactorResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/factors/{factorId}/verify\": {\n            \"post\": {\n                \"description\": \"Verifies an OTP for a `token` or `token:hardware` factor\",\n                \"operationId\": \"verifyFactor\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"factorId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"templateId\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"tokenLifetimeSeconds\",\n                        \"x-okta-added-version\": \"1.3.0\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 300\n                        }\n                    },\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"X-Forwarded-For\",\n                        \"x-okta-added-version\": \"1.11.0\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"User-Agent\",\n                        \"x-okta-added-version\": \"1.11.0\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"header\",\n                        \"name\": \"Accept-Language\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/VerifyFactorRequest\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/VerifyUserFactorResponse\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Verify MFA Factor\",\n                \"tags\": [\n                    \"UserFactor\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/grants\": {\n            \"delete\": {\n                \"description\": \"Revokes all grants for a specified user\",\n                \"operationId\": \"revokeUserGrants\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Lists all grants for the specified user\",\n                \"operationId\": \"listUserGrants\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"scopeId\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/grants/{grantId}\": {\n            \"delete\": {\n                \"description\": \"Revokes one grant for a specified user\",\n                \"operationId\": \"revokeUserGrant\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"grantId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Gets a grant for the specified user\",\n                \"operationId\": \"getUserGrant\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"grantId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrant\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/groups\": {\n            \"get\": {\n                \"description\": \"Fetches the groups of which the user is a member.\",\n                \"operationId\": \"listUserGroups\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Group\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Member Groups\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/idps\": {\n            \"get\": {\n                \"description\": \"Lists the IdPs associated with the user.\",\n                \"operationId\": \"listUserIdentityProviders\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/IdentityProvider\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Listing IdPs associated with a user\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activates a user.  This operation can only be performed on users with a `STAGED` status.  Activation of a user is an asynchronous operation. The user will have the `transitioningToStatus` property with a value of `ACTIVE` during activation to indicate that the user hasn't completed the asynchronous operation.  The user will have a status of `ACTIVE` when the activation process is complete.\",\n                \"operationId\": \"activateUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Sends an activation email to the user if true\",\n                        \"in\": \"query\",\n                        \"name\": \"sendEmail\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserActivationToken\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Activate User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates a user.  This operation can only be performed on users that do not have a `DEPROVISIONED` status.  Deactivation of a user is an asynchronous operation.  The user will have the `transitioningToStatus` property with a value of `DEPROVISIONED` during deactivation to indicate that the user hasn't completed the asynchronous operation.  The user will have a status of `DEPROVISIONED` when the deactivation process is complete.\",\n                \"operationId\": \"deactivateUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sendEmail\",\n                        \"x-okta-added-version\": \"1.5.0\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Deactivate User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/expire_password?tempPassword=false\": {\n            \"post\": {\n                \"description\": \"This operation transitions the user to the status of `PASSWORD_EXPIRED` so that the user is required to change their password at their next login.\",\n                \"operationId\": \"expirePassword\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Expire Password\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/expire_password?tempPassword=true\": {\n            \"post\": {\n                \"description\": \"This operation transitions the user to the status of `PASSWORD_EXPIRED` and the user's password is reset to a temporary password that is returned.\",\n                \"operationId\": \"expirePasswordAndGetTemporaryPassword\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TempPassword\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Expire Password\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/reactivate\": {\n            \"post\": {\n                \"description\": \"Reactivates a user.  This operation can only be performed on users with a `PROVISIONED` status.  This operation restarts the activation workflow if for some reason the user activation was not completed when using the activationToken from [Activate User](#activate-user).\",\n                \"operationId\": \"reactivateUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Sends an activation email to the user if true\",\n                        \"in\": \"query\",\n                        \"name\": \"sendEmail\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserActivationToken\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Reactivate User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/reset_factors\": {\n            \"post\": {\n                \"description\": \"This operation resets all factors for the specified user. All MFA factor enrollments returned to the unenrolled state. The user's status remains ACTIVE. This link is present only if the user is currently enrolled in one or more MFA factors.\",\n                \"operationId\": \"resetFactors\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Reset Factors\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/reset_password\": {\n            \"post\": {\n                \"description\": \"Generates a one-time token (OTT) that can be used to reset a user's password.  The OTT link can be automatically emailed to the user or returned to the API caller and distributed using a custom flow.\",\n                \"operationId\": \"resetPassword\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"sendEmail\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"boolean\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ResetPasswordToken\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Reset Password\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/suspend\": {\n            \"post\": {\n                \"description\": \"Suspends a user.  This operation can only be performed on users with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when the process is complete.\",\n                \"operationId\": \"suspendUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Suspend User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/unlock\": {\n            \"post\": {\n                \"description\": \"Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE` status.  Users will be able to login with their current password.\",\n                \"operationId\": \"unlockUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Unlock User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/lifecycle/unsuspend\": {\n            \"post\": {\n                \"description\": \"Unsuspends a user and returns them to the `ACTIVE` state.  This operation can only be performed on users that have a `SUSPENDED` status.\",\n                \"operationId\": \"unsuspendUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Unsuspend User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/linkedObjects/{relationshipName}\": {\n            \"delete\": {\n                \"description\": \"Delete linked objects for a user, relationshipName can be ONLY a primary relationship name\",\n                \"operationId\": \"removeLinkedObjectForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"relationshipName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Get linked objects for a user, relationshipName can be a primary or associated relationship name\",\n                \"operationId\": \"getLinkedObjectsForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"relationshipName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/ResponseLinks\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles\": {\n            \"get\": {\n                \"description\": \"Lists all roles assigned to a user.\",\n                \"operationId\": \"listAssignedRolesForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"expand\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Role\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Assigns a role to a user.\",\n                \"operationId\": \"assignRoleToUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"disableNotifications\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/AssignRoleRequest\"\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Role\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles/{roleId}\": {\n            \"delete\": {\n                \"description\": \"Unassigns a role from a user.\",\n                \"operationId\": \"removeRoleFromUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps\": {\n            \"get\": {\n                \"description\": \"Lists all App targets for an `APP_ADMIN` Role assigned to a User. This methods return list may include full Applications or Instances. The response for an instance will have an `ID` value, while Application will not have an ID.\",\n                \"operationId\": \"listApplicationTargetsForApplicationAdministratorRoleForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/CatalogApplication\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"addAllAppsAsTargetToRole\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"removeApplicationTargetFromApplicationAdministratorRoleForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"addApplicationTargetToAdminRoleForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}\": {\n            \"delete\": {\n                \"description\": \"Remove App Instance Target to App Administrator Role given to a User\",\n                \"operationId\": \"removeApplicationTargetFromAdministratorRoleForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"applicationId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Remove App Instance Target to App Administrator Role given to a User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Add App Instance Target to App Administrator Role given to a User\",\n                \"operationId\": \"addApplicationTargetToAppAdminRoleForUser\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"appName\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"applicationId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add App Instance Target to App Administrator Role given to a User\",\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles/{roleId}/targets/groups\": {\n            \"get\": {\n                \"description\": \"Success\",\n                \"operationId\": \"listGroupTargetsForRole\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": 20\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Group\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}\": {\n            \"delete\": {\n                \"description\": \"Success\",\n                \"operationId\": \"removeGroupTargetFromRole\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Success\",\n                \"operationId\": \"addGroupTargetToRole\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"roleId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"groupId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}/sessions\": {\n            \"delete\": {\n                \"description\": \"Removes all active identity provider sessions. This forces the user to authenticate on the next operation. Optionally revokes OpenID Connect and OAuth refresh and access tokens issued to the user.\",\n                \"operationId\": \"clearUserSessions\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"userId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Revoke issued OpenID Connect and OAuth refresh and access tokens\",\n                        \"in\": \"query\",\n                        \"name\": \"oauthTokens\",\n                        \"schema\": {\n                            \"type\": \"boolean\",\n                            \"default\": false\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"No Content\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"tags\": [\n                    \"User\"\n                ]\n            }\n        },\n        \"/api/v1/zones\": {\n            \"get\": {\n                \"description\": \"Enumerates network zones added to your organization with pagination. A subset of zones can be returned that match a supported filter expression or query.\",\n                \"operationId\": \"listNetworkZones\",\n                \"parameters\": [\n                    {\n                        \"description\": \"Specifies the pagination cursor for the next page of network zones\",\n                        \"in\": \"query\",\n                        \"name\": \"after\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"description\": \"Specifies the number of results for a page\",\n                        \"in\": \"query\",\n                        \"name\": \"limit\",\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int32\",\n                            \"default\": -1\n                        }\n                    },\n                    {\n                        \"description\": \"Filters zones by usage or id expression\",\n                        \"in\": \"query\",\n                        \"name\": \"filter\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/NetworkZone\"\n                                    },\n                                    \"type\": \"array\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"List Network Zones\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"post\": {\n                \"description\": \"Adds a new network zone to your Okta organization.\",\n                \"operationId\": \"createNetworkZone\",\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/NetworkZone\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NetworkZone\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Add Network Zone\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            }\n        },\n        \"/api/v1/zones/{zoneId}\": {\n            \"delete\": {\n                \"description\": \"Removes network zone.\",\n                \"operationId\": \"deleteNetworkZone\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"zoneId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Delete Network Zone\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"get\": {\n                \"description\": \"Fetches a network zone from your Okta organization by `id`.\",\n                \"operationId\": \"getNetworkZone\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"zoneId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NetworkZone\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Get Network Zone\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"put\": {\n                \"description\": \"Updates a network zone in your organization.\",\n                \"operationId\": \"updateNetworkZone\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"zoneId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"$ref\": \"#/components/requestBodies/NetworkZone\"\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NetworkZone\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Update Network Zone\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            }\n        },\n        \"/api/v1/zones/{zoneId}/lifecycle/activate\": {\n            \"post\": {\n                \"description\": \"Activate Network Zone\",\n                \"operationId\": \"activateNetworkZone\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"zoneId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NetworkZone\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Activate Network Zone\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            }\n        },\n        \"/api/v1/zones/{zoneId}/lifecycle/deactivate\": {\n            \"post\": {\n                \"description\": \"Deactivates a network zone.\",\n                \"operationId\": \"deactivateNetworkZone\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"zoneId\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Success\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NetworkZone\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_token\": []\n                    }\n                ],\n                \"summary\": \"Deactivate Network Zone\",\n                \"tags\": [\n                    \"NetworkZone\"\n                ]\n            }\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"https://your-subdomain.okta.com\"\n        }\n    ],\n    \"components\": {\n        \"requestBodies\": {\n            \"AuthorizationServerPolicyRule\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRule\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"SmsTemplate\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/SmsTemplate\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"AuthorizationServerPolicy\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/AuthorizationServerPolicy\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"CsrMetadata\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/CsrMetadata\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"UserType\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/UserType\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"Policy\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Policy\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"AssignRoleRequest\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/AssignRoleRequest\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"InlineHook\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/InlineHook\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"Application\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Application\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"AppUser\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/AppUser\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"AuthorizationServer\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/AuthorizationServer\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"OAuth2Claim\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/OAuth2Claim\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"OAuth2Scope\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/OAuth2Scope\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"EventHook\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/EventHook\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"Group\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/Group\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"GroupRule\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/GroupRule\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"IdentityProvider\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/IdentityProvider\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"PolicyRule\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/PolicyRule\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"TrustedOrigin\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/TrustedOrigin\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"User\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/User\"\n                        }\n                    }\n                },\n                \"required\": true\n            },\n            \"NetworkZone\": {\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/NetworkZone\"\n                        }\n                    }\n                },\n                \"required\": true\n            }\n        },\n        \"securitySchemes\": {\n            \"api_token\": {\n                \"description\": \"SSWS {API Token}\",\n                \"in\": \"header\",\n                \"name\": \"Authorization\",\n                \"type\": \"apiKey\"\n            }\n        },\n        \"schemas\": {\n            \"AcsEndpoint\": {\n                \"properties\": {\n                    \"index\": {\n                        \"type\": \"integer\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ActivateFactorRequest\": {\n                \"properties\": {\n                    \"attestation\": {\n                        \"type\": \"string\"\n                    },\n                    \"clientData\": {\n                        \"type\": \"string\"\n                    },\n                    \"passCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"registrationData\": {\n                        \"type\": \"string\"\n                    },\n                    \"stateToken\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"AppAndInstanceConditionEvaluatorAppOrInstance\": {\n                \"properties\": {\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"APP_TYPE\",\n                            \"APP\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"AppAndInstancePolicyRuleCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"AppInstancePolicyRuleCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"AppLink\": {\n                \"properties\": {\n                    \"appAssignmentId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"appInstanceId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"appName\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"credentialsSetup\": {\n                        \"readOnly\": true,\n                        \"type\": \"boolean\"\n                    },\n                    \"hidden\": {\n                        \"readOnly\": true,\n                        \"type\": \"boolean\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"label\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"linkUrl\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"logoUrl\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"sortOrder\": {\n                        \"readOnly\": true,\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"AppUser\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/AppUserCredentials\"\n                    },\n                    \"externalId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastSync\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"passwordChanged\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"profile\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"scope\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"statusChanged\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"syncState\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"parentSrc\": \"appId\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"appUser\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateApplicationUser\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"parentSrc\": \"appId\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteApplicationUser\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"AppUserCredentials\": {\n                \"properties\": {\n                    \"password\": {\n                        \"$ref\": \"#/components/schemas/AppUserPasswordCredential\"\n                    },\n                    \"userName\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"AppUserPasswordCredential\": {\n                \"properties\": {\n                    \"value\": {\n                        \"format\": \"password\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"Application\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"accessibility\": {\n                        \"$ref\": \"#/components/schemas/ApplicationAccessibility\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentials\"\n                    },\n                    \"features\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"label\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"licensing\": {\n                        \"$ref\": \"#/components/schemas/ApplicationLicensing\"\n                    },\n                    \"name\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"profile\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/ApplicationSettings\"\n                    },\n                    \"signOnMode\": {\n                        \"$ref\": \"#/components/schemas/ApplicationSignOnMode\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\",\n                            \"DELETED\"\n                        ],\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"visibility\": {\n                        \"$ref\": \"#/components/schemas/ApplicationVisibility\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getApplication\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"application\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateApplication\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteApplication\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateApplication\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateApplication\"\n                    },\n                    {\n                        \"alias\": \"listApplicationUsers\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listApplicationUsers\"\n                    },\n                    {\n                        \"alias\": \"assignUserToApplication\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"assignUserToApplication\"\n                    },\n                    {\n                        \"alias\": \"getApplicationUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getApplicationUser\"\n                    },\n                    {\n                        \"alias\": \"createApplicationGroupAssignment\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"createApplicationGroupAssignment\"\n                    },\n                    {\n                        \"alias\": \"getApplicationGroupAssignment\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getApplicationGroupAssignment\"\n                    },\n                    {\n                        \"alias\": \"cloneApplicationKey\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"cloneApplicationKey\"\n                    },\n                    {\n                        \"alias\": \"getApplicationKey\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getApplicationKey\"\n                    },\n                    {\n                        \"alias\": \"listGroupAssignments\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listApplicationGroupAssignments\"\n                    },\n                    {\n                        \"alias\": \"listKeys\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listApplicationKeys\"\n                    },\n                    {\n                        \"alias\": \"generateKey\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"generateApplicationKey\"\n                    },\n                    {\n                        \"alias\": \"generateCsr\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"generateCsrForApplication\"\n                    },\n                    {\n                        \"alias\": \"getCsr\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getCsrForApplication\"\n                    },\n                    {\n                        \"alias\": \"revokeCsr\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeCsrFromApplication\"\n                    },\n                    {\n                        \"alias\": \"listCsrs\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listCsrsForApplication\"\n                    },\n                    {\n                        \"alias\": \"publishCerCert\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"publishCerCert\"\n                    },\n                    {\n                        \"alias\": \"publishBinaryCerCert\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"publishBinaryCerCert\"\n                    },\n                    {\n                        \"alias\": \"publishDerCert\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"publishDerCert\"\n                    },\n                    {\n                        \"alias\": \"publishBinaryDerCert\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"publishBinaryDerCert\"\n                    },\n                    {\n                        \"alias\": \"publishBinaryPemCert\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"publishBinaryPemCert\"\n                    },\n                    {\n                        \"alias\": \"listOAuth2Tokens\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listOAuth2TokensForApplication\"\n                    },\n                    {\n                        \"alias\": \"revokeOAuth2TokenForApplication\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeOAuth2TokenForApplication\"\n                    },\n                    {\n                        \"alias\": \"getOAuth2Token\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getOAuth2TokenForApplication\"\n                    },\n                    {\n                        \"alias\": \"revokeOAuth2Tokens\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeOAuth2TokensForApplication\"\n                    },\n                    {\n                        \"alias\": \"listScopeConsentGrants\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listScopeConsentGrants\"\n                    },\n                    {\n                        \"alias\": \"grantConsentToScope\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"grantConsentToScope\"\n                    },\n                    {\n                        \"alias\": \"revokeScopeConsentGrant\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeScopeConsentGrant\"\n                    },\n                    {\n                        \"alias\": \"getScopeConsentGrant\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getScopeConsentGrant\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Application\"\n                ],\n                \"x-openapi-v3-discriminator\": {\n                    \"mapping\": {\n                        \"AUTO_LOGIN\": \"#/definitions/AutoLoginApplication\",\n                        \"BASIC_AUTH\": \"#/definitions/BasicAuthApplication\",\n                        \"BOOKMARK\": \"#/definitions/BookmarkApplication\",\n                        \"BROWSER_PLUGIN\": \"#/definitions/BrowserPluginApplication\",\n                        \"OPENID_CONNECT\": \"#/definitions/OpenIdConnectApplication\",\n                        \"SAML_1_1\": \"#/definitions/SamlApplication\",\n                        \"SAML_2_0\": \"#/definitions/SamlApplication\",\n                        \"SECURE_PASSWORD_STORE\": \"#/definitions/SecurePasswordStoreApplication\",\n                        \"WS_FEDERATION\": \"#/definitions/WsFederationApplication\"\n                    },\n                    \"propertyName\": \"signOnMode\"\n                }\n            },\n            \"ApplicationAccessibility\": {\n                \"properties\": {\n                    \"errorRedirectUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"loginRedirectUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"selfService\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationCredentials\": {\n                \"properties\": {\n                    \"signing\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentialsSigning\"\n                    },\n                    \"userNameTemplate\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentialsUsernameTemplate\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationCredentialsOAuthClient\": {\n                \"properties\": {\n                    \"autoKeyRotation\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"client_id\": {\n                        \"type\": \"string\"\n                    },\n                    \"client_secret\": {\n                        \"type\": \"string\"\n                    },\n                    \"token_endpoint_auth_method\": {\n                        \"$ref\": \"#/components/schemas/OAuthEndpointAuthenticationMethod\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationCredentialsScheme\": {\n                \"enum\": [\n                    \"SHARED_USERNAME_AND_PASSWORD\",\n                    \"EXTERNAL_PASSWORD_SYNC\",\n                    \"EDIT_USERNAME_AND_PASSWORD\",\n                    \"EDIT_PASSWORD_ONLY\",\n                    \"ADMIN_SETS_CREDENTIALS\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationCredentialsSigning\": {\n                \"properties\": {\n                    \"kid\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastRotated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"nextRotation\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"rotationMode\": {\n                        \"type\": \"string\"\n                    },\n                    \"use\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentialsSigningUse\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationCredentialsSigningUse\": {\n                \"enum\": [\n                    \"sig\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"ApplicationCredentialsUsernameTemplate\": {\n                \"properties\": {\n                    \"suffix\": {\n                        \"type\": \"string\"\n                    },\n                    \"template\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationGroupAssignment\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"priority\": {\n                        \"type\": \"integer\"\n                    },\n                    \"profile\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"appId\",\n                                \"parentSrc\": \"appId\"\n                            },\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteApplicationGroupAssignment\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationLicensing\": {\n                \"properties\": {\n                    \"seatCount\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/ApplicationSettingsApplication\"\n                    },\n                    \"implicitAssignment\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"inlineHookId\": {\n                        \"type\": \"string\"\n                    },\n                    \"notifications\": {\n                        \"$ref\": \"#/components/schemas/ApplicationSettingsNotifications\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationSettingsApplication\": {\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationSettingsNotifications\": {\n                \"properties\": {\n                    \"vpn\": {\n                        \"$ref\": \"#/components/schemas/ApplicationSettingsNotificationsVpn\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationSettingsNotificationsVpn\": {\n                \"properties\": {\n                    \"helpUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\"\n                    },\n                    \"network\": {\n                        \"$ref\": \"#/components/schemas/ApplicationSettingsNotificationsVpnNetwork\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationSettingsNotificationsVpnNetwork\": {\n                \"properties\": {\n                    \"connection\": {\n                        \"type\": \"string\"\n                    },\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationSignOnMode\": {\n                \"enum\": [\n                    \"BOOKMARK\",\n                    \"BASIC_AUTH\",\n                    \"BROWSER_PLUGIN\",\n                    \"SECURE_PASSWORD_STORE\",\n                    \"AUTO_LOGIN\",\n                    \"WS_FEDERATION\",\n                    \"SAML_2_0\",\n                    \"OPENID_CONNECT\",\n                    \"SAML_1_1\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationVisibility\": {\n                \"properties\": {\n                    \"appLinks\": {\n                        \"additionalProperties\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"autoSubmitToolbar\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"hide\": {\n                        \"$ref\": \"#/components/schemas/ApplicationVisibilityHide\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ApplicationVisibilityHide\": {\n                \"properties\": {\n                    \"iOS\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"web\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"AssignRoleRequest\": {\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/RoleType\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"AuthenticationProvider\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/AuthenticationProviderType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"AuthenticationProviderType\": {\n                \"enum\": [\n                    \"ACTIVE_DIRECTORY\",\n                    \"FEDERATION\",\n                    \"LDAP\",\n                    \"OKTA\",\n                    \"SOCIAL\",\n                    \"IMPORT\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"AuthorizationServer\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"audiences\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/AuthorizationServerCredentials\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuerMode\": {\n                        \"enum\": [\n                            \"ORG_URL\",\n                            \"CUSTOM_URL\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authorizationServer\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createAuthorizationServer\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getAuthorizationServer\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"authorizationServer\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateAuthorizationServer\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"authorizationServer\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"deleteAuthorizationServer\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"listOAuth2Claims\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listOAuth2Claims\"\n                    },\n                    {\n                        \"alias\": \"createOAuth2Claim\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"createOAuth2Claim\"\n                    },\n                    {\n                        \"alias\": \"deleteOAuth2Claim\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteOAuth2Claim\"\n                    },\n                    {\n                        \"alias\": \"getOAuth2Claim\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getOAuth2Claim\"\n                    },\n                    {\n                        \"alias\": \"updateOAuth2Claim\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updateOAuth2Claim\"\n                    },\n                    {\n                        \"alias\": \"listOAuth2Clients\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listOAuth2ClientsForAuthorizationServer\"\n                    },\n                    {\n                        \"alias\": \"revokeRefreshTokensForClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeRefreshTokensForAuthorizationServerAndClient\"\n                    },\n                    {\n                        \"alias\": \"listRefreshTokensForClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listRefreshTokensForAuthorizationServerAndClient\"\n                    },\n                    {\n                        \"alias\": \"getRefreshTokenForClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getRefreshTokenForAuthorizationServerAndClient\"\n                    },\n                    {\n                        \"alias\": \"revokeRefreshTokenForClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeRefreshTokenForAuthorizationServerAndClient\"\n                    },\n                    {\n                        \"alias\": \"listKeys\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listAuthorizationServerKeys\"\n                    },\n                    {\n                        \"alias\": \"rotateKeys\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"rotateAuthorizationServerKeys\"\n                    },\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateAuthorizationServer\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateAuthorizationServer\"\n                    },\n                    {\n                        \"alias\": \"listPolicies\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listAuthorizationServerPolicies\"\n                    },\n                    {\n                        \"alias\": \"createPolicy\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"createAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"deletePolicy\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"getPolicy\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"updatePolicy\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updateAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"listOAuth2Scopes\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listOAuth2Scopes\"\n                    },\n                    {\n                        \"alias\": \"createOAuth2Scope\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"createOAuth2Scope\"\n                    },\n                    {\n                        \"alias\": \"deleteOAuth2Scope\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteOAuth2Scope\"\n                    },\n                    {\n                        \"alias\": \"getOAuth2Scope\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getOAuth2Scope\"\n                    },\n                    {\n                        \"alias\": \"updateOAuth2Scope\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"authServerId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updateOAuth2Scope\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"AuthorizationServerCredentials\": {\n                \"properties\": {\n                    \"signing\": {\n                        \"$ref\": \"#/components/schemas/AuthorizationServerCredentialsSigningConfig\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"AuthorizationServerCredentialsRotationMode\": {\n                \"enum\": [\n                    \"AUTO\",\n                    \"MANUAL\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"AuthorizationServerCredentialsSigningConfig\": {\n                \"properties\": {\n                    \"kid\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastRotated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"nextRotation\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"rotationMode\": {\n                        \"$ref\": \"#/components/schemas/AuthorizationServerCredentialsRotationMode\"\n                    },\n                    \"use\": {\n                        \"$ref\": \"#/components/schemas/AuthorizationServerCredentialsUse\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"AuthorizationServerCredentialsUse\": {\n                \"enum\": [\n                    \"sig\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"AuthorizationServerPolicy\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleConditions\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"priority\": {\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"system\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/PolicyType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policy\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteAuthorizationServerPolicy\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"listPolicyRules\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listAuthorizationServerPolicyRules\"\n                    },\n                    {\n                        \"alias\": \"createPolicyRule\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"createAuthorizationServerPolicyRule\"\n                    },\n                    {\n                        \"alias\": \"getPolicyRule\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getAuthorizationServerPolicyRule\"\n                    },\n                    {\n                        \"alias\": \"deletePolicyRule\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteAuthorizationServerPolicyRule\"\n                    },\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateAuthorizationServerPolicy\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateAuthorizationServerPolicy\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"AuthorizationServer\"\n                ]\n            },\n            \"AuthorizationServerPolicyRule\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRuleActions\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/AuthorizationServerPolicyRuleConditions\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"priority\": {\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"default\": \"ACTIVE\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"system\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"RESOURCE_ACCESS\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyRule\",\n                                \"self\": true\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updateAuthorizationServerPolicyRule\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"policyId\"\n                            }\n                        ],\n                        \"operationId\": \"deleteAuthorizationServerPolicyRule\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"policyId\"\n                            }\n                        ],\n                        \"operationId\": \"activateAuthorizationServerPolicyRule\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"policyId\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateAuthorizationServerPolicyRule\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"AuthorizationServerPolicy\"\n                ]\n            },\n            \"AuthorizationServerPolicyRuleActions\": {\n                \"properties\": {\n                    \"token\": {\n                        \"$ref\": \"#/components/schemas/TokenAuthorizationServerPolicyRuleAction\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServerPolicy\"\n                ]\n            },\n            \"AuthorizationServerPolicyRuleConditions\": {\n                \"properties\": {\n                    \"clients\": {\n                        \"$ref\": \"#/components/schemas/ClientPolicyCondition\"\n                    },\n                    \"grantTypes\": {\n                        \"$ref\": \"#/components/schemas/GrantTypePolicyRuleCondition\"\n                    },\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/PolicyPeopleCondition\"\n                    },\n                    \"scopes\": {\n                        \"$ref\": \"#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServerPolicy\"\n                ]\n            },\n            \"AutoLoginApplication\": {\n                \"properties\": {\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/SchemeApplicationCredentials\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/AutoLoginApplicationSettings\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"AutoLoginApplicationSettings\": {\n                \"properties\": {\n                    \"signOn\": {\n                        \"$ref\": \"#/components/schemas/AutoLoginApplicationSettingsSignOn\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"AutoLoginApplicationSettingsSignOn\": {\n                \"properties\": {\n                    \"loginUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"redirectUrl\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BasicApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/BasicApplicationSettingsApplication\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BasicApplicationSettingsApplication\": {\n                \"properties\": {\n                    \"authURL\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettingsApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BasicAuthApplication\": {\n                \"properties\": {\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/SchemeApplicationCredentials\"\n                    },\n                    \"name\": {\n                        \"default\": \"template_basic_auth\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/BasicApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"template_basic_auth\"\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BeforeScheduledActionPolicyRuleCondition\": {\n                \"properties\": {\n                    \"duration\": {\n                        \"$ref\": \"#/components/schemas/Duration\"\n                    },\n                    \"lifecycleAction\": {\n                        \"$ref\": \"#/components/schemas/ScheduledUserLifecycleAction\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"BookmarkApplication\": {\n                \"properties\": {\n                    \"name\": {\n                        \"default\": \"bookmark\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/BookmarkApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"bookmark\"\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BookmarkApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/BookmarkApplicationSettingsApplication\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BookmarkApplicationSettingsApplication\": {\n                \"properties\": {\n                    \"requestIntegration\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettingsApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"BrowserPluginApplication\": {\n                \"properties\": {\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/SchemeApplicationCredentials\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ],\n                \"x-openapi-v3-discriminator\": {\n                    \"mapping\": {\n                        \"template_swa\": \"#/definitions/SwaApplication\",\n                        \"template_swa3field\": \"#/definitions/SwaThreeFieldApplication\"\n                    },\n                    \"propertyName\": \"name\"\n                }\n            },\n            \"CallUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/CallUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"CallUserFactorProfile\": {\n                \"properties\": {\n                    \"phoneExtension\": {\n                        \"type\": \"string\"\n                    },\n                    \"phoneNumber\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"CatalogApplication\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"category\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\"\n                    },\n                    \"features\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"signOnModes\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/CatalogApplicationStatus\"\n                    },\n                    \"verificationStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"website\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"CatalogApplicationStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"INACTIVE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"ChangePasswordRequest\": {\n                \"properties\": {\n                    \"newPassword\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredential\"\n                    },\n                    \"oldPassword\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredential\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"ClientPolicyCondition\": {\n                \"properties\": {\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"ContextPolicyRuleCondition\": {\n                \"properties\": {\n                    \"expression\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"CreateSessionRequest\": {\n                \"properties\": {\n                    \"sessionToken\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Session\"\n                ]\n            },\n            \"CreateUserRequest\": {\n                \"properties\": {\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/UserCredentials\"\n                    },\n                    \"groupIds\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/UserProfile\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/UserType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"Csr\": {\n                \"properties\": {\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"csr\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"kty\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"CsrMetadata\": {\n                \"properties\": {\n                    \"subject\": {\n                        \"$ref\": \"#/components/schemas/CsrMetadataSubject\"\n                    },\n                    \"subjectAltNames\": {\n                        \"$ref\": \"#/components/schemas/CsrMetadataSubjectAltNames\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"CsrMetadataSubject\": {\n                \"properties\": {\n                    \"commonName\": {\n                        \"type\": \"string\"\n                    },\n                    \"countryName\": {\n                        \"type\": \"string\"\n                    },\n                    \"localityName\": {\n                        \"type\": \"string\"\n                    },\n                    \"organizationName\": {\n                        \"type\": \"string\"\n                    },\n                    \"organizationalUnitName\": {\n                        \"type\": \"string\"\n                    },\n                    \"stateOrProvinceName\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"CsrMetadataSubjectAltNames\": {\n                \"properties\": {\n                    \"dnsNames\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"CustomHotpUserFactor\": {\n                \"properties\": {\n                    \"factorProfileId\": {\n                        \"type\": \"string\"\n                    },\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/CustomHotpUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"CustomHotpUserFactorProfile\": {\n                \"properties\": {\n                    \"sharedSecret\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"DNSRecord\": {\n                \"properties\": {\n                    \"expiration\": {\n                        \"type\": \"string\"\n                    },\n                    \"fqdn\": {\n                        \"type\": \"string\"\n                    },\n                    \"recordType\": {\n                        \"$ref\": \"#/components/schemas/DNSRecordType\"\n                    },\n                    \"values\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DNSRecordType\": {\n                \"enum\": [\n                    \"TXT\",\n                    \"CNAME\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DevicePolicyRuleCondition\": {\n                \"properties\": {\n                    \"migrated\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"platform\": {\n                        \"$ref\": \"#/components/schemas/DevicePolicyRuleConditionPlatform\"\n                    },\n                    \"rooted\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"trustLevel\": {\n                        \"enum\": [\n                            \"ANY\",\n                            \"TRUSTED\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"DevicePolicyRuleConditionPlatform\": {\n                \"properties\": {\n                    \"supportedMDMFrameworks\": {\n                        \"items\": {\n                            \"enum\": [\n                                \"AFW\",\n                                \"SAFE\",\n                                \"NATIVE\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"types\": {\n                        \"items\": {\n                            \"enum\": [\n                                \"IOS\",\n                                \"ANDROID\",\n                                \"OSX\",\n                                \"WINDOWS\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"Domain\": {\n                \"properties\": {\n                    \"certificateSourceType\": {\n                        \"$ref\": \"#/components/schemas/DomainCertificateSourceType\"\n                    },\n                    \"dnsRecords\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DNSRecord\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"domain\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"publicCertificate\": {\n                        \"$ref\": \"#/components/schemas/DomainCertificateMetadata\"\n                    },\n                    \"validationStatus\": {\n                        \"$ref\": \"#/components/schemas/DomainValidationStatus\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DomainCertificate\": {\n                \"properties\": {\n                    \"certificate\": {\n                        \"type\": \"string\"\n                    },\n                    \"certificateChain\": {\n                        \"type\": \"string\"\n                    },\n                    \"privateKey\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/DomainCertificateType\"\n                    }\n                },\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"createCertificate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"certificate\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createCertificate\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DomainCertificateMetadata\": {\n                \"properties\": {\n                    \"expiration\": {\n                        \"type\": \"string\"\n                    },\n                    \"fingerprint\": {\n                        \"type\": \"string\"\n                    },\n                    \"subject\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DomainCertificateSourceType\": {\n                \"enum\": [\n                    \"MANUAL\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DomainCertificateType\": {\n                \"enum\": [\n                    \"PEM\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DomainListResponse\": {\n                \"properties\": {\n                    \"domains\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Domain\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"DomainValidationStatus\": {\n                \"enum\": [\n                    \"NOT_STARTED\",\n                    \"IN_PROGRESS\",\n                    \"VERIFIED\",\n                    \"COMPLETED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Domain\"\n                ]\n            },\n            \"Duration\": {\n                \"properties\": {\n                    \"number\": {\n                        \"type\": \"integer\"\n                    },\n                    \"unit\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"EmailUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/EmailUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"EmailUserFactorProfile\": {\n                \"properties\": {\n                    \"email\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"EnabledStatus\": {\n                \"enum\": [\n                    \"ENABLED\",\n                    \"DISABLED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Common\"\n                ]\n            },\n            \"EventHook\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"channel\": {\n                        \"$ref\": \"#/components/schemas/EventHookChannel\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"events\": {\n                        \"$ref\": \"#/components/schemas/EventSubscriptions\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"verificationStatus\": {\n                        \"enum\": [\n                            \"UNVERIFIED\",\n                            \"VERIFIED\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"eventHook\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createEventHook\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getEventHook\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"eventHookId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"eventHook\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateEventHook\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"eventHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteEventHook\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"eventHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateEventHook\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"eventHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateEventHook\"\n                    },\n                    {\n                        \"alias\": \"verify\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"eventHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"verifyEventHook\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"EventHookChannel\": {\n                \"properties\": {\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/EventHookChannelConfig\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"HTTP\"\n                        ],\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"EventHookChannelConfig\": {\n                \"properties\": {\n                    \"authScheme\": {\n                        \"$ref\": \"#/components/schemas/EventHookChannelConfigAuthScheme\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EventHookChannelConfigHeader\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"uri\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"EventHookChannelConfigAuthScheme\": {\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/EventHookChannelConfigAuthSchemeType\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"EventHookChannelConfigAuthSchemeType\": {\n                \"enum\": [\n                    \"HEADER\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"EventHookChannelConfigHeader\": {\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"EventSubscriptions\": {\n                \"discriminator\": {\n                    \"propertyName\": \"type\"\n                },\n                \"properties\": {\n                    \"items\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"EVENT_TYPE\",\n                            \"FLOW_EVENT\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"EventHook\"\n                ]\n            },\n            \"FactorProvider\": {\n                \"enum\": [\n                    \"OKTA\",\n                    \"RSA\",\n                    \"FIDO\",\n                    \"GOOGLE\",\n                    \"SYMANTEC\",\n                    \"DUO\",\n                    \"YUBICO\",\n                    \"CUSTOM\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"FactorResultType\": {\n                \"enum\": [\n                    \"SUCCESS\",\n                    \"CHALLENGE\",\n                    \"WAITING\",\n                    \"FAILED\",\n                    \"REJECTED\",\n                    \"TIMEOUT\",\n                    \"TIME_WINDOW_EXCEEDED\",\n                    \"PASSCODE_REPLAYED\",\n                    \"ERROR\",\n                    \"CANCELLED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"FactorStatus\": {\n                \"enum\": [\n                    \"PENDING_ACTIVATION\",\n                    \"ACTIVE\",\n                    \"INACTIVE\",\n                    \"NOT_SETUP\",\n                    \"ENROLLED\",\n                    \"DISABLED\",\n                    \"EXPIRED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"FactorType\": {\n                \"enum\": [\n                    \"call\",\n                    \"email\",\n                    \"hotp\",\n                    \"push\",\n                    \"question\",\n                    \"sms\",\n                    \"token:hardware\",\n                    \"token:hotp\",\n                    \"token:software:totp\",\n                    \"token\",\n                    \"u2f\",\n                    \"web\",\n                    \"webauthn\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"Feature\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"stage\": {\n                        \"$ref\": \"#/components/schemas/FeatureStage\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/EnabledStatus\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/FeatureType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getFeature\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"updateLifecycle\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"featureId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updateFeatureLifecycle\"\n                    },\n                    {\n                        \"alias\": \"getDependents\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"featureId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listFeatureDependents\"\n                    },\n                    {\n                        \"alias\": \"getDependencies\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"featureId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listFeatureDependencies\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Feature\"\n                ]\n            },\n            \"FeatureStage\": {\n                \"properties\": {\n                    \"state\": {\n                        \"$ref\": \"#/components/schemas/FeatureStageState\"\n                    },\n                    \"value\": {\n                        \"$ref\": \"#/components/schemas/FeatureStageValue\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Feature\"\n                ]\n            },\n            \"FeatureStageState\": {\n                \"enum\": [\n                    \"OPEN\",\n                    \"CLOSED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Feature\"\n                ]\n            },\n            \"FeatureStageValue\": {\n                \"enum\": [\n                    \"EA\",\n                    \"BETA\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Feature\"\n                ]\n            },\n            \"FeatureType\": {\n                \"enum\": [\n                    \"self-service\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Feature\"\n                ]\n            },\n            \"ForgotPasswordResponse\": {\n                \"properties\": {\n                    \"resetPasswordUrl\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"GrantTypePolicyRuleCondition\": {\n                \"properties\": {\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"Group\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastMembershipUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"objectClass\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"array\"\n                    },\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/GroupProfile\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/GroupType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"group\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateGroup\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteGroup\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"removeUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"removeUserFromGroup\"\n                    },\n                    {\n                        \"alias\": \"listUsers\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listGroupUsers\"\n                    },\n                    {\n                        \"alias\": \"listApplications\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listAssignedApplicationsForGroup\"\n                    },\n                    {\n                        \"alias\": \"assignRole\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"groupId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"assignRoleToGroup\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Group\"\n                ]\n            },\n            \"GroupCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"GroupPolicyRuleCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"GroupProfile\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Group\"\n                ]\n            },\n            \"GroupRule\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleAction\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleConditions\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleStatus\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"groupRule\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateGroupRule\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteGroupRule\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateGroupRule\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateGroupRule\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleAction\": {\n                \"properties\": {\n                    \"assignUserToGroups\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleGroupAssignment\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleConditions\": {\n                \"properties\": {\n                    \"expression\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleExpression\"\n                    },\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/GroupRulePeopleCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleExpression\": {\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleGroupAssignment\": {\n                \"properties\": {\n                    \"groupIds\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleGroupCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRulePeopleCondition\": {\n                \"properties\": {\n                    \"groups\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleGroupCondition\"\n                    },\n                    \"users\": {\n                        \"$ref\": \"#/components/schemas/GroupRuleUserCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"INACTIVE\",\n                    \"INVALID\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupRuleUserCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"GroupRule\"\n                ]\n            },\n            \"GroupType\": {\n                \"enum\": [\n                    \"OKTA_GROUP\",\n                    \"APP_GROUP\",\n                    \"BUILT_IN\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Group\"\n                ]\n            },\n            \"HardwareUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/HardwareUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"HardwareUserFactorProfile\": {\n                \"properties\": {\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"IdentityProvider\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"issuerMode\": {\n                        \"enum\": [\n                            \"ORG_URL\",\n                            \"CUSTOM_URL_DOMAIN\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"policy\": {\n                        \"$ref\": \"#/components/schemas/IdentityProviderPolicy\"\n                    },\n                    \"protocol\": {\n                        \"$ref\": \"#/components/schemas/Protocol\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"SAML2\",\n                            \"GOOGLE\",\n                            \"FACEBOOK\",\n                            \"LINKEDIN\",\n                            \"MICROSOFT\",\n                            \"OIDC\",\n                            \"OKTA\",\n                            \"IWA\",\n                            \"AgentlessDSSO\",\n                            \"X509\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpTrust\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"idpTrust\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteIdentityProvider\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"listSigningCsrs\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listCsrsForIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"generateCsr\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"generateCsrForIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"deleteSigningCsr\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeCsrForIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"getSigningCsr\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getCsrForIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"listSigningKeys\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listIdentityProviderSigningKeys\"\n                    },\n                    {\n                        \"alias\": \"generateSigningKey\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"generateIdentityProviderSigningKey\"\n                    },\n                    {\n                        \"alias\": \"getSigningKey\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getIdentityProviderSigningKey\"\n                    },\n                    {\n                        \"alias\": \"cloneKey\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"cloneIdentityProviderKey\"\n                    },\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"listUsers\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listIdentityProviderApplicationUsers\"\n                    },\n                    {\n                        \"alias\": \"unlinkUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"unlinkUserFromIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"getUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getIdentityProviderApplicationUser\"\n                    },\n                    {\n                        \"alias\": \"linkUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"linkUserToIdentityProvider\"\n                    },\n                    {\n                        \"alias\": \"listSocialAuthTokens\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"idpId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listSocialAuthTokens\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"IdentityProviderApplicationUser\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"type\": \"string\"\n                    },\n                    \"externalId\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"type\": \"string\"\n                    },\n                    \"profile\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"IdentityProviderCredentials\": {\n                \"properties\": {\n                    \"client\": {\n                        \"$ref\": \"#/components/schemas/IdentityProviderCredentialsClient\"\n                    },\n                    \"signing\": {\n                        \"$ref\": \"#/components/schemas/IdentityProviderCredentialsSigning\"\n                    },\n                    \"trust\": {\n                        \"$ref\": \"#/components/schemas/IdentityProviderCredentialsTrust\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"IdentityProviderCredentialsClient\": {\n                \"properties\": {\n                    \"client_id\": {\n                        \"type\": \"string\"\n                    },\n                    \"client_secret\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"IdentityProviderCredentialsSigning\": {\n                \"properties\": {\n                    \"kid\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"IdentityProviderCredentialsTrust\": {\n                \"properties\": {\n                    \"audience\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"kid\": {\n                        \"type\": \"string\"\n                    },\n                    \"revocation\": {\n                        \"enum\": [\n                            \"CRL\",\n                            \"DELTA_CRL\",\n                            \"OCSP\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"revocationCacheLifetime\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"IdentityProviderPolicy\": {\n                \"properties\": {\n                    \"accountLink\": {\n                        \"$ref\": \"#/components/schemas/PolicyAccountLink\"\n                    },\n                    \"maxClockSkew\": {\n                        \"type\": \"integer\"\n                    },\n                    \"provisioning\": {\n                        \"$ref\": \"#/components/schemas/Provisioning\"\n                    },\n                    \"subject\": {\n                        \"$ref\": \"#/components/schemas/PolicySubject\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-parent\": \"#/definitions/Policy\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"IdentityProviderPolicyRuleCondition\": {\n                \"properties\": {\n                    \"idpIds\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"provider\": {\n                        \"enum\": [\n                            \"ANY\",\n                            \"OKTA\",\n                            \"SPECIFIC_IDP\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"InactivityPolicyRuleCondition\": {\n                \"properties\": {\n                    \"number\": {\n                        \"type\": \"integer\"\n                    },\n                    \"unit\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"InlineHook\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"channel\": {\n                        \"$ref\": \"#/components/schemas/InlineHookChannel\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/InlineHookStatus\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/InlineHookType\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"inlineHook\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createInlineHook\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getInlineHook\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"inlineHookId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"inlineHook\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateInlineHook\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"inlineHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteInlineHook\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"inlineHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateInlineHook\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"inlineHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateInlineHook\"\n                    },\n                    {\n                        \"alias\": \"execute\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"inlineHookId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"executeInlineHook\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookChannel\": {\n                \"properties\": {\n                    \"config\": {\n                        \"$ref\": \"#/components/schemas/InlineHookChannelConfig\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"HTTP\"\n                        ],\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookChannelConfig\": {\n                \"properties\": {\n                    \"authScheme\": {\n                        \"$ref\": \"#/components/schemas/InlineHookChannelConfigAuthScheme\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/InlineHookChannelConfigHeaders\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"method\": {\n                        \"type\": \"string\"\n                    },\n                    \"uri\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookChannelConfigAuthScheme\": {\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookChannelConfigHeaders\": {\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookPayload\": {\n                \"type\": \"object\",\n                \"x-okta-extensible\": true,\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookResponse\": {\n                \"properties\": {\n                    \"commands\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/InlineHookResponseCommands\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookResponseCommandValue\": {\n                \"properties\": {\n                    \"op\": {\n                        \"type\": \"string\"\n                    },\n                    \"path\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookResponseCommands\": {\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/InlineHookResponseCommandValue\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"INACTIVE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"InlineHookType\": {\n                \"enum\": [\n                    \"com.okta.oauth2.tokens.transform\",\n                    \"com.okta.import.transform\",\n                    \"com.okta.saml.tokens.transform\",\n                    \"com.okta.user.pre-registration\",\n                    \"com.okta.user.credential.password.import\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"InlineHook\"\n                ]\n            },\n            \"IonField\": {\n                \"properties\": {\n                    \"form\": {\n                        \"$ref\": \"#/components/schemas/IonForm\"\n                    },\n                    \"label\": {\n                        \"type\": \"string\"\n                    },\n                    \"mutable\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"required\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"secret\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"visible\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Ion\"\n                ]\n            },\n            \"IonForm\": {\n                \"properties\": {\n                    \"accepts\": {\n                        \"type\": \"string\"\n                    },\n                    \"href\": {\n                        \"type\": \"string\"\n                    },\n                    \"method\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"produces\": {\n                        \"type\": \"string\"\n                    },\n                    \"refresh\": {\n                        \"type\": \"integer\"\n                    },\n                    \"rel\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"relatesTo\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"value\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/IonField\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Ion\"\n                ]\n            },\n            \"JsonWebKey\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"alg\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"e\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"key_ops\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"readOnly\": false,\n                        \"type\": \"array\"\n                    },\n                    \"kid\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"kty\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"n\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"use\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"x5c\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"readOnly\": false,\n                        \"type\": \"array\"\n                    },\n                    \"x5t\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"x5t#S256\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    },\n                    \"x5u\": {\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"JwkUse\": {\n                \"properties\": {\n                    \"use\": {\n                        \"enum\": [\n                            \"sig\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"LifecycleExpirationPolicyRuleCondition\": {\n                \"properties\": {\n                    \"lifecycleStatus\": {\n                        \"type\": \"string\"\n                    },\n                    \"number\": {\n                        \"type\": \"integer\"\n                    },\n                    \"unit\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"LinkedObject\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"associated\": {\n                        \"$ref\": \"#/components/schemas/LinkedObjectDetails\"\n                    },\n                    \"primary\": {\n                        \"$ref\": \"#/components/schemas/LinkedObjectDetails\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"linkedObjectDefinition\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"addLinkedObjectDefinition\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getLinkedObjectDefinition\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"linkedObjectName\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"deleteLinkedObjectDefinition\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"LinkedObject\"\n                ]\n            },\n            \"LinkedObjectDetails\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/LinkedObjectDetailsType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"LinkedObject\"\n                ]\n            },\n            \"LinkedObjectDetailsType\": {\n                \"enum\": [\n                    \"USER\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"LinkedObject\"\n                ]\n            },\n            \"LogActor\": {\n                \"properties\": {\n                    \"alternateId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"detail\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"displayName\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogAuthenticationContext\": {\n                \"properties\": {\n                    \"authenticationProvider\": {\n                        \"$ref\": \"#/components/schemas/LogAuthenticationProvider\"\n                    },\n                    \"authenticationStep\": {\n                        \"readOnly\": true,\n                        \"type\": \"integer\"\n                    },\n                    \"credentialProvider\": {\n                        \"$ref\": \"#/components/schemas/LogCredentialProvider\"\n                    },\n                    \"credentialType\": {\n                        \"$ref\": \"#/components/schemas/LogCredentialType\"\n                    },\n                    \"externalSessionId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"interface\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"$ref\": \"#/components/schemas/LogIssuer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogAuthenticationProvider\": {\n                \"enum\": [\n                    \"OKTA_AUTHENTICATION_PROVIDER\",\n                    \"ACTIVE_DIRECTORY\",\n                    \"LDAP\",\n                    \"FEDERATION\",\n                    \"SOCIAL\",\n                    \"FACTOR_PROVIDER\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogClient\": {\n                \"properties\": {\n                    \"device\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"geographicalContext\": {\n                        \"$ref\": \"#/components/schemas/LogGeographicalContext\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"ipAddress\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"userAgent\": {\n                        \"$ref\": \"#/components/schemas/LogUserAgent\"\n                    },\n                    \"zone\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogCredentialProvider\": {\n                \"enum\": [\n                    \"OKTA_AUTHENTICATION_PROVIDER\",\n                    \"OKTA_CREDENTIAL_PROVIDER\",\n                    \"RSA\",\n                    \"SYMANTEC\",\n                    \"GOOGLE\",\n                    \"DUO\",\n                    \"YUBIKEY\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogCredentialType\": {\n                \"enum\": [\n                    \"OTP\",\n                    \"SMS\",\n                    \"PASSWORD\",\n                    \"ASSERTION\",\n                    \"IWA\",\n                    \"EMAIL\",\n                    \"OAUTH2\",\n                    \"JWT\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogDebugContext\": {\n                \"properties\": {\n                    \"debugData\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogEvent\": {\n                \"properties\": {\n                    \"actor\": {\n                        \"$ref\": \"#/components/schemas/LogActor\"\n                    },\n                    \"authenticationContext\": {\n                        \"$ref\": \"#/components/schemas/LogAuthenticationContext\"\n                    },\n                    \"client\": {\n                        \"$ref\": \"#/components/schemas/LogClient\"\n                    },\n                    \"debugContext\": {\n                        \"$ref\": \"#/components/schemas/LogDebugContext\"\n                    },\n                    \"displayMessage\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"eventType\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"legacyEventType\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"outcome\": {\n                        \"$ref\": \"#/components/schemas/LogOutcome\"\n                    },\n                    \"published\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"request\": {\n                        \"$ref\": \"#/components/schemas/LogRequest\"\n                    },\n                    \"securityContext\": {\n                        \"$ref\": \"#/components/schemas/LogSecurityContext\"\n                    },\n                    \"severity\": {\n                        \"$ref\": \"#/components/schemas/LogSeverity\"\n                    },\n                    \"target\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/LogTarget\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"array\"\n                    },\n                    \"transaction\": {\n                        \"$ref\": \"#/components/schemas/LogTransaction\"\n                    },\n                    \"uuid\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogGeographicalContext\": {\n                \"properties\": {\n                    \"city\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"country\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"geolocation\": {\n                        \"$ref\": \"#/components/schemas/LogGeolocation\"\n                    },\n                    \"postalCode\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"state\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogGeolocation\": {\n                \"properties\": {\n                    \"lat\": {\n                        \"format\": \"double\",\n                        \"readOnly\": true,\n                        \"type\": \"number\"\n                    },\n                    \"lon\": {\n                        \"format\": \"double\",\n                        \"readOnly\": true,\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogIpAddress\": {\n                \"properties\": {\n                    \"geographicalContext\": {\n                        \"$ref\": \"#/components/schemas/LogGeographicalContext\"\n                    },\n                    \"ip\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"source\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogIssuer\": {\n                \"properties\": {\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogOutcome\": {\n                \"properties\": {\n                    \"reason\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"result\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogRequest\": {\n                \"properties\": {\n                    \"ipChain\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/LogIpAddress\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogSecurityContext\": {\n                \"properties\": {\n                    \"asNumber\": {\n                        \"readOnly\": true,\n                        \"type\": \"integer\"\n                    },\n                    \"asOrg\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"domain\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"isProxy\": {\n                        \"readOnly\": true,\n                        \"type\": \"boolean\"\n                    },\n                    \"isp\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogSeverity\": {\n                \"enum\": [\n                    \"DEBUG\",\n                    \"INFO\",\n                    \"WARN\",\n                    \"ERROR\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogTarget\": {\n                \"properties\": {\n                    \"alternateId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"detailEntry\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"displayName\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogTransaction\": {\n                \"properties\": {\n                    \"detail\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"LogUserAgent\": {\n                \"properties\": {\n                    \"browser\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"os\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"rawUserAgent\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Log\"\n                ]\n            },\n            \"MDMEnrollmentPolicyRuleCondition\": {\n                \"properties\": {\n                    \"blockNonSafeAndroid\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"enrollment\": {\n                        \"enum\": [\n                            \"OMM\",\n                            \"ANY_OR_NONE\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"NetworkZone\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"asns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"gateways\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/NetworkZoneAddress\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"locations\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/NetworkZoneLocation\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"proxies\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/NetworkZoneAddress\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"proxyType\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/NetworkZoneStatus\"\n                    },\n                    \"system\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/NetworkZoneType\"\n                    },\n                    \"usage\": {\n                        \"$ref\": \"#/components/schemas/NetworkZoneUsage\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"zoneId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getNetworkZone\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"zoneId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"zone\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateNetworkZone\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"zoneId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteNetworkZone\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"zoneId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateNetworkZone\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"zoneId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateNetworkZone\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"NetworkZoneAddress\": {\n                \"properties\": {\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/NetworkZoneAddressType\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"NetworkZoneAddressType\": {\n                \"enum\": [\n                    \"CIDR\",\n                    \"RANGE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"NetworkZoneLocation\": {\n                \"properties\": {\n                    \"country\": {\n                        \"type\": \"string\"\n                    },\n                    \"region\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"NetworkZoneStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"INACTIVE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"NetworkZoneType\": {\n                \"enum\": [\n                    \"IP\",\n                    \"DYNAMIC\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"NetworkZoneUsage\": {\n                \"enum\": [\n                    \"POLICY\",\n                    \"BLOCKLIST\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"NetworkZone\"\n                ]\n            },\n            \"OAuth2Actor\": {\n                \"properties\": {\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2Claim\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"alwaysIncludeInToken\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"claimType\": {\n                        \"enum\": [\n                            \"IDENTITY\",\n                            \"RESOURCE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/OAuth2ClaimConditions\"\n                    },\n                    \"group_filter_type\": {\n                        \"enum\": [\n                            \"STARTS_WITH\",\n                            \"EQUALS\",\n                            \"CONTAINS\",\n                            \"REGEX\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"system\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    },\n                    \"valueType\": {\n                        \"enum\": [\n                            \"EXPRESSION\",\n                            \"GROUPS\",\n                            \"SYSTEM\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2ClaimConditions\": {\n                \"properties\": {\n                    \"scopes\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2Client\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"client_id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"client_name\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"client_uri\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"logo_uri\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2RefreshToken\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"clientId\": {\n                        \"type\": \"string\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"$ref\": \"#/components/schemas/OAuth2Actor\"\n                    },\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"scopes\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"REVOKED\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"userId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2Scope\": {\n                \"properties\": {\n                    \"consent\": {\n                        \"enum\": [\n                            \"REQUIRED\",\n                            \"IMPLICIT\",\n                            \"ADMIN\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"default\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"metadataPublish\": {\n                        \"enum\": [\n                            \"ALL_CLIENTS\",\n                            \"NO_CLIENTS\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"system\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2ScopeConsentGrant\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"clientId\": {\n                        \"type\": \"string\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"$ref\": \"#/components/schemas/OAuth2Actor\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"scopeId\": {\n                        \"type\": \"string\"\n                    },\n                    \"source\": {\n                        \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrantSource\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/OAuth2ScopeConsentGrantStatus\"\n                    },\n                    \"userId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2ScopeConsentGrantSource\": {\n                \"enum\": [\n                    \"END_USER\",\n                    \"ADMIN\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2ScopeConsentGrantStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"REVOKED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2ScopesMediationPolicyRuleCondition\": {\n                \"properties\": {\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuth2Token\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"clientId\": {\n                        \"type\": \"string\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"scopes\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"REVOKED\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"userId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuthApplicationCredentials\": {\n                \"properties\": {\n                    \"oauthClient\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentialsOAuthClient\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationCredentials\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuthAuthorizationPolicy\": {\n                \"x-okta-parent\": \"#/definitions/Policy\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OAuthEndpointAuthenticationMethod\": {\n                \"enum\": [\n                    \"none\",\n                    \"client_secret_post\",\n                    \"client_secret_basic\",\n                    \"client_secret_jwt\",\n                    \"private_key_jwt\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuthGrantType\": {\n                \"enum\": [\n                    \"authorization_code\",\n                    \"implicit\",\n                    \"password\",\n                    \"refresh_token\",\n                    \"client_credentials\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OAuthResponseType\": {\n                \"enum\": [\n                    \"code\",\n                    \"token\",\n                    \"id_token\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OktaSignOnPolicy\": {\n                \"properties\": {\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/OktaSignOnPolicyConditions\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-parent\": \"#/definitions/Policy\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OktaSignOnPolicyConditions\": {\n                \"properties\": {\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/PolicyPeopleCondition\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRuleConditions\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OktaSignOnPolicyRule\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"$ref\": \"#/components/schemas/OktaSignOnPolicyRuleActions\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/OktaSignOnPolicyRuleConditions\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRule\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OktaSignOnPolicyRuleActions\": {\n                \"properties\": {\n                    \"signon\": {\n                        \"$ref\": \"#/components/schemas/OktaSignOnPolicyRuleSignonActions\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRuleActions\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OktaSignOnPolicyRuleConditions\": {\n                \"properties\": {\n                    \"authContext\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleAuthContextCondition\"\n                    },\n                    \"network\": {\n                        \"$ref\": \"#/components/schemas/PolicyNetworkCondition\"\n                    },\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/PolicyPeopleCondition\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRuleConditions\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OktaSignOnPolicyRuleSignonActions\": {\n                \"properties\": {\n                    \"access\": {\n                        \"enum\": [\n                            \"ALLOW\",\n                            \"DENY\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"factorLifetime\": {\n                        \"type\": \"integer\"\n                    },\n                    \"factorPromptMode\": {\n                        \"enum\": [\n                            \"ALWAYS\",\n                            \"DEVICE\",\n                            \"SESSION\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"rememberDeviceByDefault\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"requireFactor\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"session\": {\n                        \"$ref\": \"#/components/schemas/OktaSignOnPolicyRuleSignonSessionActions\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OktaSignOnPolicyRuleSignonSessionActions\": {\n                \"properties\": {\n                    \"maxSessionIdleMinutes\": {\n                        \"default\": 120,\n                        \"type\": \"integer\"\n                    },\n                    \"maxSessionLifetimeMinutes\": {\n                        \"default\": 0,\n                        \"type\": \"integer\"\n                    },\n                    \"usePersistentCookie\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"OpenIdConnectApplication\": {\n                \"properties\": {\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/OAuthApplicationCredentials\"\n                    },\n                    \"name\": {\n                        \"default\": \"oidc_client\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"oidc_client\"\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationConsentMethod\": {\n                \"enum\": [\n                    \"REQUIRED\",\n                    \"TRUSTED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationIdpInitiatedLogin\": {\n                \"properties\": {\n                    \"default_scope\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"mode\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationIssuerMode\": {\n                \"enum\": [\n                    \"CUSTOM_URL\",\n                    \"ORG_URL\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationSettings\": {\n                \"properties\": {\n                    \"oauthClient\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationSettingsClient\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationSettingsClient\": {\n                \"properties\": {\n                    \"application_type\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationType\"\n                    },\n                    \"client_uri\": {\n                        \"type\": \"string\"\n                    },\n                    \"consent_method\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationConsentMethod\"\n                    },\n                    \"grant_types\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/OAuthGrantType\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"idp_initiated_login\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin\"\n                    },\n                    \"initiate_login_uri\": {\n                        \"type\": \"string\"\n                    },\n                    \"issuer_mode\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationIssuerMode\"\n                    },\n                    \"jwks\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationSettingsClientKeys\"\n                    },\n                    \"logo_uri\": {\n                        \"type\": \"string\"\n                    },\n                    \"policy_uri\": {\n                        \"type\": \"string\"\n                    },\n                    \"post_logout_redirect_uris\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"redirect_uris\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"refresh_token\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken\"\n                    },\n                    \"response_types\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/OAuthResponseType\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"tos_uri\": {\n                        \"type\": \"string\"\n                    },\n                    \"wildcard_redirect\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationSettingsClientKeys\": {\n                \"properties\": {\n                    \"keys\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/JsonWebKey\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationSettingsRefreshToken\": {\n                \"properties\": {\n                    \"leeway\": {\n                        \"type\": \"integer\"\n                    },\n                    \"rotation_type\": {\n                        \"$ref\": \"#/components/schemas/OpenIdConnectRefreshTokenRotationType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectApplicationType\": {\n                \"enum\": [\n                    \"web\",\n                    \"native\",\n                    \"browser\",\n                    \"service\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"OpenIdConnectRefreshTokenRotationType\": {\n                \"enum\": [\n                    \"rotate\",\n                    \"static\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"PasswordCredential\": {\n                \"properties\": {\n                    \"hash\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredentialHash\"\n                    },\n                    \"hook\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredentialHook\"\n                    },\n                    \"value\": {\n                        \"format\": \"password\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"PasswordCredentialHash\": {\n                \"properties\": {\n                    \"algorithm\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredentialHashAlgorithm\"\n                    },\n                    \"salt\": {\n                        \"type\": \"string\"\n                    },\n                    \"saltOrder\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    },\n                    \"workFactor\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"PasswordCredentialHashAlgorithm\": {\n                \"enum\": [\n                    \"BCRYPT\",\n                    \"SHA-512\",\n                    \"SHA-256\",\n                    \"SHA-1\",\n                    \"MD5\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"PasswordCredentialHook\": {\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"PasswordDictionary\": {\n                \"properties\": {\n                    \"common\": {\n                        \"$ref\": \"#/components/schemas/PasswordDictionaryCommon\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordDictionaryCommon\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordExpirationPolicyRuleCondition\": {\n                \"properties\": {\n                    \"number\": {\n                        \"type\": \"integer\"\n                    },\n                    \"unit\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicy\": {\n                \"properties\": {\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyConditions\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicySettings\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-parent\": \"#/definitions/Policy\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyAuthenticationProviderCondition\": {\n                \"properties\": {\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"provider\": {\n                        \"enum\": [\n                            \"ACTIVE_DIRECTORY\",\n                            \"ANY\",\n                            \"LDAP\",\n                            \"OKTA\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyConditions\": {\n                \"properties\": {\n                    \"authProvider\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyAuthenticationProviderCondition\"\n                    },\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/PolicyPeopleCondition\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRuleConditions\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyDelegationSettings\": {\n                \"properties\": {\n                    \"options\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyDelegationSettingsOptions\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyDelegationSettingsOptions\": {\n                \"properties\": {\n                    \"skipUnlock\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyPasswordSettings\": {\n                \"properties\": {\n                    \"age\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyPasswordSettingsAge\"\n                    },\n                    \"complexity\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyPasswordSettingsComplexity\"\n                    },\n                    \"lockout\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyPasswordSettingsLockout\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyPasswordSettingsAge\": {\n                \"properties\": {\n                    \"expireWarnDays\": {\n                        \"default\": 0,\n                        \"type\": \"integer\"\n                    },\n                    \"historyCount\": {\n                        \"default\": 0,\n                        \"type\": \"integer\"\n                    },\n                    \"maxAgeDays\": {\n                        \"default\": 0,\n                        \"type\": \"integer\"\n                    },\n                    \"minAgeMinutes\": {\n                        \"default\": 0,\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyPasswordSettingsComplexity\": {\n                \"properties\": {\n                    \"dictionary\": {\n                        \"$ref\": \"#/components/schemas/PasswordDictionary\"\n                    },\n                    \"excludeAttributes\": {\n                        \"default\": 1,\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"excludeUsername\": {\n                        \"default\": true,\n                        \"type\": \"boolean\"\n                    },\n                    \"minLength\": {\n                        \"default\": 8,\n                        \"type\": \"integer\"\n                    },\n                    \"minLowerCase\": {\n                        \"default\": 1,\n                        \"type\": \"integer\"\n                    },\n                    \"minNumber\": {\n                        \"default\": 1,\n                        \"type\": \"integer\"\n                    },\n                    \"minSymbol\": {\n                        \"default\": 1,\n                        \"type\": \"integer\"\n                    },\n                    \"minUpperCase\": {\n                        \"default\": 1,\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyPasswordSettingsLockout\": {\n                \"properties\": {\n                    \"autoUnlockMinutes\": {\n                        \"type\": \"integer\"\n                    },\n                    \"maxAttempts\": {\n                        \"type\": \"integer\"\n                    },\n                    \"showLockoutFailures\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"userLockoutNotificationChannels\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryEmail\": {\n                \"properties\": {\n                    \"properties\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryEmailProperties\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryEmailProperties\": {\n                \"properties\": {\n                    \"recoveryToken\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryEmailRecoveryToken\": {\n                \"properties\": {\n                    \"tokenLifetimeMinutes\": {\n                        \"default\": 10080,\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryFactorSettings\": {\n                \"properties\": {\n                    \"status\": {\n                        \"default\": \"INACTIVE\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryFactors\": {\n                \"properties\": {\n                    \"okta_call\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryFactorSettings\"\n                    },\n                    \"okta_email\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryEmail\"\n                    },\n                    \"okta_sms\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryFactorSettings\"\n                    },\n                    \"recovery_question\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryQuestion\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryQuestion\": {\n                \"properties\": {\n                    \"properties\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryQuestionProperties\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryQuestionComplexity\": {\n                \"properties\": {\n                    \"minLength\": {\n                        \"readOnly\": true,\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoveryQuestionProperties\": {\n                \"properties\": {\n                    \"complexity\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryQuestionComplexity\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRecoverySettings\": {\n                \"properties\": {\n                    \"factors\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoveryFactors\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRule\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleActions\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleConditions\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-parent\": \"#/definitions/PolicyRule\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRuleAction\": {\n                \"properties\": {\n                    \"access\": {\n                        \"enum\": [\n                            \"ALLOW\",\n                            \"DENY\"\n                        ],\n                        \"readOnly\": false,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRuleActions\": {\n                \"properties\": {\n                    \"passwordChange\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleAction\"\n                    },\n                    \"selfServicePasswordReset\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleAction\"\n                    },\n                    \"selfServiceUnlock\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleAction\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRuleActions\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicyRuleConditions\": {\n                \"properties\": {\n                    \"network\": {\n                        \"$ref\": \"#/components/schemas/PolicyNetworkCondition\"\n                    },\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/PolicyPeopleCondition\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/PolicyRuleConditions\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PasswordPolicySettings\": {\n                \"properties\": {\n                    \"delegation\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyDelegationSettings\"\n                    },\n                    \"password\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyPasswordSettings\"\n                    },\n                    \"recovery\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRecoverySettings\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PlatformConditionEvaluatorPlatform\": {\n                \"properties\": {\n                    \"os\": {\n                        \"$ref\": \"#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"DESKTOP\",\n                            \"MOBILE\",\n                            \"OTHER\",\n                            \"ANY\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PlatformConditionEvaluatorPlatformOperatingSystem\": {\n                \"properties\": {\n                    \"expression\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"ANDROID\",\n                            \"IOS\",\n                            \"WINDOWS\",\n                            \"OSX\",\n                            \"OTHER\",\n                            \"ANY\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"$ref\": \"#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PlatformConditionEvaluatorPlatformOperatingSystemVersion\": {\n                \"properties\": {\n                    \"matchType\": {\n                        \"enum\": [\n                            \"EXPRESSION\",\n                            \"SEMVER\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PlatformPolicyRuleCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PlatformConditionEvaluatorPlatform\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PlatformConditionEvaluatorPlatform\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"Policy\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleConditions\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"priority\": {\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"system\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/PolicyType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getPolicy\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policy\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updatePolicy\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deletePolicy\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activatePolicy\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivatePolicy\"\n                    },\n                    {\n                        \"alias\": \"listPolicyRules\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listPolicyRules\"\n                    },\n                    {\n                        \"alias\": \"createRule\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"createPolicyRule\"\n                    },\n                    {\n                        \"alias\": \"getPolicyRule\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"policyId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getPolicyRule\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ],\n                \"x-openapi-v3-discriminator\": {\n                    \"mapping\": {\n                        \"IDP_DISCOVERY\": \"#/definitions/IdentityProviderPolicy\",\n                        \"OAUTH_AUTHORIZATION_POLICY\": \"#/definitions/OAuthAuthorizationPolicy\",\n                        \"OKTA_SIGN_ON\": \"#/definitions/OktaSignOnPolicy\",\n                        \"PASSWORD\": \"#/definitions/PasswordPolicy\"\n                    },\n                    \"propertyName\": \"type\"\n                }\n            },\n            \"PolicyAccountLink\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"AUTO\",\n                            \"DISABLED\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/PolicyAccountLinkFilter\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyAccountLinkFilter\": {\n                \"properties\": {\n                    \"groups\": {\n                        \"$ref\": \"#/components/schemas/PolicyAccountLinkFilterGroups\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyAccountLinkFilterGroups\": {\n                \"properties\": {\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyNetworkCondition\": {\n                \"properties\": {\n                    \"connection\": {\n                        \"enum\": [\n                            \"ANYWHERE\",\n                            \"ZONE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyPeopleCondition\": {\n                \"properties\": {\n                    \"groups\": {\n                        \"$ref\": \"#/components/schemas/GroupCondition\"\n                    },\n                    \"users\": {\n                        \"$ref\": \"#/components/schemas/UserCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyRule\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleActions\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleConditions\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"priority\": {\n                        \"type\": \"integer\"\n                    },\n                    \"status\": {\n                        \"default\": \"ACTIVE\",\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"system\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"SIGN_ON\",\n                            \"PASSWORD\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyRule\",\n                                \"self\": true\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updatePolicyRule\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"policyId\"\n                            }\n                        ],\n                        \"operationId\": \"deletePolicyRule\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"policyId\"\n                            }\n                        ],\n                        \"operationId\": \"activatePolicyRule\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"ruleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"policyId\",\n                                \"parentSrc\": \"policyId\"\n                            }\n                        ],\n                        \"operationId\": \"deactivatePolicyRule\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ],\n                \"x-openapi-v3-discriminator\": {\n                    \"mapping\": {\n                        \"PASSWORD\": \"#/definitions/PasswordPolicyRule\",\n                        \"SIGN_ON\": \"#/definitions/OktaSignOnPolicyRule\"\n                    },\n                    \"propertyName\": \"type\"\n                }\n            },\n            \"PolicyRuleActions\": {\n                \"properties\": {\n                    \"enroll\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleActionsEnroll\"\n                    },\n                    \"passwordChange\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleAction\"\n                    },\n                    \"selfServicePasswordReset\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleAction\"\n                    },\n                    \"selfServiceUnlock\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyRuleAction\"\n                    },\n                    \"signon\": {\n                        \"$ref\": \"#/components/schemas/OktaSignOnPolicyRuleSignonActions\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyRuleActionsEnroll\": {\n                \"properties\": {\n                    \"self\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleActionsEnrollSelf\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyRuleActionsEnrollSelf\": {\n                \"enum\": [\n                    \"CHALLENGE\",\n                    \"LOGIN\",\n                    \"NEVER\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyRuleAuthContextCondition\": {\n                \"properties\": {\n                    \"authType\": {\n                        \"enum\": [\n                            \"ANY\",\n                            \"RADIUS\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyRuleConditions\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/AppAndInstancePolicyRuleCondition\"\n                    },\n                    \"apps\": {\n                        \"$ref\": \"#/components/schemas/AppInstancePolicyRuleCondition\"\n                    },\n                    \"authContext\": {\n                        \"$ref\": \"#/components/schemas/PolicyRuleAuthContextCondition\"\n                    },\n                    \"authProvider\": {\n                        \"$ref\": \"#/components/schemas/PasswordPolicyAuthenticationProviderCondition\"\n                    },\n                    \"beforeScheduledAction\": {\n                        \"$ref\": \"#/components/schemas/BeforeScheduledActionPolicyRuleCondition\"\n                    },\n                    \"clients\": {\n                        \"$ref\": \"#/components/schemas/ClientPolicyCondition\"\n                    },\n                    \"context\": {\n                        \"$ref\": \"#/components/schemas/ContextPolicyRuleCondition\"\n                    },\n                    \"device\": {\n                        \"$ref\": \"#/components/schemas/DevicePolicyRuleCondition\"\n                    },\n                    \"grantTypes\": {\n                        \"$ref\": \"#/components/schemas/GrantTypePolicyRuleCondition\"\n                    },\n                    \"groups\": {\n                        \"$ref\": \"#/components/schemas/GroupPolicyRuleCondition\"\n                    },\n                    \"identityProvider\": {\n                        \"$ref\": \"#/components/schemas/IdentityProviderPolicyRuleCondition\"\n                    },\n                    \"mdmEnrollment\": {\n                        \"$ref\": \"#/components/schemas/MDMEnrollmentPolicyRuleCondition\"\n                    },\n                    \"network\": {\n                        \"$ref\": \"#/components/schemas/PolicyNetworkCondition\"\n                    },\n                    \"people\": {\n                        \"$ref\": \"#/components/schemas/PolicyPeopleCondition\"\n                    },\n                    \"platform\": {\n                        \"$ref\": \"#/components/schemas/PlatformPolicyRuleCondition\"\n                    },\n                    \"risk\": {\n                        \"$ref\": \"#/components/schemas/RiskPolicyRuleCondition\"\n                    },\n                    \"riskScore\": {\n                        \"$ref\": \"#/components/schemas/RiskScorePolicyRuleCondition\"\n                    },\n                    \"scopes\": {\n                        \"$ref\": \"#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition\"\n                    },\n                    \"userIdentifier\": {\n                        \"$ref\": \"#/components/schemas/UserIdentifierPolicyRuleCondition\"\n                    },\n                    \"userStatus\": {\n                        \"$ref\": \"#/components/schemas/UserStatusPolicyRuleCondition\"\n                    },\n                    \"users\": {\n                        \"$ref\": \"#/components/schemas/UserPolicyRuleCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicySubject\": {\n                \"properties\": {\n                    \"filter\": {\n                        \"type\": \"string\"\n                    },\n                    \"format\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"matchAttribute\": {\n                        \"type\": \"string\"\n                    },\n                    \"matchType\": {\n                        \"$ref\": \"#/components/schemas/PolicySubjectMatchType\"\n                    },\n                    \"userNameTemplate\": {\n                        \"$ref\": \"#/components/schemas/PolicyUserNameTemplate\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicySubjectMatchType\": {\n                \"enum\": [\n                    \"USERNAME\",\n                    \"EMAIL\",\n                    \"USERNAME_OR_EMAIL\",\n                    \"CUSTOM_ATTRIBUTE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyType\": {\n                \"enum\": [\n                    \"OAUTH_AUTHORIZATION_POLICY\",\n                    \"OKTA_SIGN_ON\",\n                    \"PASSWORD\",\n                    \"IDP_DISCOVERY\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"PolicyUserNameTemplate\": {\n                \"properties\": {\n                    \"template\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"ProfileMapping\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"properties\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ProfileMappingProperty\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"source\": {\n                        \"$ref\": \"#/components/schemas/ProfileMappingSource\"\n                    },\n                    \"target\": {\n                        \"$ref\": \"#/components/schemas/ProfileMappingSource\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"mappingId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getProfileMapping\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"mappingId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"updateProfileMapping\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"ProfileMapping\"\n                ]\n            },\n            \"ProfileMappingProperty\": {\n                \"properties\": {\n                    \"expression\": {\n                        \"type\": \"string\"\n                    },\n                    \"pushStatus\": {\n                        \"$ref\": \"#/components/schemas/ProfileMappingPropertyPushStatus\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"ProfileMapping\"\n                ]\n            },\n            \"ProfileMappingPropertyPushStatus\": {\n                \"enum\": [\n                    \"PUSH\",\n                    \"DONT_PUSH\"\n                ],\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"ProfileMapping\"\n                ]\n            },\n            \"ProfileMappingSource\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"ProfileMapping\"\n                ]\n            },\n            \"Protocol\": {\n                \"properties\": {\n                    \"algorithms\": {\n                        \"$ref\": \"#/components/schemas/ProtocolAlgorithms\"\n                    },\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/IdentityProviderCredentials\"\n                    },\n                    \"endpoints\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoints\"\n                    },\n                    \"issuer\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"relayState\": {\n                        \"$ref\": \"#/components/schemas/ProtocolRelayState\"\n                    },\n                    \"scopes\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/ProtocolSettings\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"SAML2\",\n                            \"OIDC\",\n                            \"OAUTH2\",\n                            \"MTLS\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolAlgorithmType\": {\n                \"properties\": {\n                    \"signature\": {\n                        \"$ref\": \"#/components/schemas/ProtocolAlgorithmTypeSignature\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolAlgorithmTypeSignature\": {\n                \"properties\": {\n                    \"algorithm\": {\n                        \"type\": \"string\"\n                    },\n                    \"scope\": {\n                        \"enum\": [\n                            \"RESPONSE\",\n                            \"TOKEN\",\n                            \"ANY\",\n                            \"REQUEST\",\n                            \"NONE\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolAlgorithms\": {\n                \"properties\": {\n                    \"request\": {\n                        \"$ref\": \"#/components/schemas/ProtocolAlgorithmType\"\n                    },\n                    \"response\": {\n                        \"$ref\": \"#/components/schemas/ProtocolAlgorithmType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolEndpoint\": {\n                \"properties\": {\n                    \"binding\": {\n                        \"enum\": [\n                            \"HTTP-POST\",\n                            \"HTTP-REDIRECT\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"destination\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"INSTANCE\",\n                            \"ORG\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolEndpoints\": {\n                \"properties\": {\n                    \"acs\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"authorization\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"jwks\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"metadata\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"slo\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"sso\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"token\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    },\n                    \"userInfo\": {\n                        \"$ref\": \"#/components/schemas/ProtocolEndpoint\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolRelayState\": {\n                \"properties\": {\n                    \"format\": {\n                        \"$ref\": \"#/components/schemas/ProtocolRelayStateFormat\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolRelayStateFormat\": {\n                \"enum\": [\n                    \"OPAQUE\",\n                    \"FROM_URL\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProtocolSettings\": {\n                \"properties\": {\n                    \"nameFormat\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"Provisioning\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"AUTO\",\n                            \"CALLOUT\",\n                            \"DISABLED\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"conditions\": {\n                        \"$ref\": \"#/components/schemas/ProvisioningConditions\"\n                    },\n                    \"groups\": {\n                        \"$ref\": \"#/components/schemas/ProvisioningGroups\"\n                    },\n                    \"profileMaster\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProvisioningConditions\": {\n                \"properties\": {\n                    \"deprovisioned\": {\n                        \"$ref\": \"#/components/schemas/ProvisioningDeprovisionedCondition\"\n                    },\n                    \"suspended\": {\n                        \"$ref\": \"#/components/schemas/ProvisioningSuspendedCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProvisioningDeprovisionedCondition\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"NONE\",\n                            \"REACTIVATE\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProvisioningGroups\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"NONE\",\n                            \"APPEND\",\n                            \"SYNC\",\n                            \"ASSIGN\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"assignments\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"sourceAttributeName\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"ProvisioningSuspendedCondition\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"NONE\",\n                            \"UNSUSPEND\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"PushUserFactor\": {\n                \"properties\": {\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"factorResult\": {\n                        \"$ref\": \"#/components/schemas/FactorResultType\"\n                    },\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/PushUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"PushUserFactorProfile\": {\n                \"properties\": {\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    },\n                    \"deviceToken\": {\n                        \"type\": \"string\"\n                    },\n                    \"deviceType\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"platform\": {\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"RecoveryQuestionCredential\": {\n                \"properties\": {\n                    \"answer\": {\n                        \"type\": \"string\"\n                    },\n                    \"question\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"ResetPasswordToken\": {\n                \"properties\": {\n                    \"resetPasswordUrl\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"ResponseLinks\": {\n                \"properties\": {},\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"RiskPolicyRuleCondition\": {\n                \"properties\": {\n                    \"behaviors\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\",\n                        \"uniqueItems\": true\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"RiskScorePolicyRuleCondition\": {\n                \"properties\": {\n                    \"level\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"Role\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"assignmentType\": {\n                        \"$ref\": \"#/components/schemas/RoleAssignmentType\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"label\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/RoleStatus\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/RoleType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"addAdminGroupTarget\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"groupId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addGroupTargetToGroupAdministratorRoleForGroup\"\n                    },\n                    {\n                        \"alias\": \"addAppInstanceTargetToAdminRole\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"groupId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addApplicationInstanceTargetToAppAdminRoleGivenToGroup\"\n                    },\n                    {\n                        \"alias\": \"addAppTargetToAdminRole\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"groupId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addApplicationTargetToAdminRoleGivenToGroup\"\n                    },\n                    {\n                        \"alias\": \"addAllAppsAsTargetToRole\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addAllAppsAsTargetToRole\"\n                    },\n                    {\n                        \"alias\": \"addAppTargetToAppAdminRoleForUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addApplicationTargetToAppAdminRoleForUser\"\n                    },\n                    {\n                        \"alias\": \"addAppTargetToAdminRoleForUser\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addApplicationTargetToAdminRoleForUser\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"RoleAssignmentType\": {\n                \"enum\": [\n                    \"GROUP\",\n                    \"USER\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"RoleStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"INACTIVE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"RoleType\": {\n                \"enum\": [\n                    \"SUPER_ADMIN\",\n                    \"ORG_ADMIN\",\n                    \"APP_ADMIN\",\n                    \"USER_ADMIN\",\n                    \"HELP_DESK_ADMIN\",\n                    \"READ_ONLY_ADMIN\",\n                    \"MOBILE_ADMIN\",\n                    \"API_ACCESS_MANAGEMENT_ADMIN\",\n                    \"REPORT_ADMIN\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"SamlApplication\": {\n                \"properties\": {\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/SamlApplicationSettings\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SamlApplicationSettings\": {\n                \"properties\": {\n                    \"signOn\": {\n                        \"$ref\": \"#/components/schemas/SamlApplicationSettingsSignOn\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SamlApplicationSettingsSignOn\": {\n                \"properties\": {\n                    \"acsEndpoints\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AcsEndpoint\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"allowMultipleAcsEndpoints\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"assertionSigned\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"attributeStatements\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SamlAttributeStatement\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"audience\": {\n                        \"type\": \"string\"\n                    },\n                    \"audienceOverride\": {\n                        \"type\": \"string\"\n                    },\n                    \"authnContextClassRef\": {\n                        \"type\": \"string\"\n                    },\n                    \"defaultRelayState\": {\n                        \"type\": \"string\"\n                    },\n                    \"destination\": {\n                        \"type\": \"string\"\n                    },\n                    \"destinationOverride\": {\n                        \"type\": \"string\"\n                    },\n                    \"digestAlgorithm\": {\n                        \"type\": \"string\"\n                    },\n                    \"honorForceAuthn\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"idpIssuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"inlineHooks\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SignOnInlineHook\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"recipient\": {\n                        \"type\": \"string\"\n                    },\n                    \"recipientOverride\": {\n                        \"type\": \"string\"\n                    },\n                    \"requestCompressed\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"responseSigned\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"signatureAlgorithm\": {\n                        \"type\": \"string\"\n                    },\n                    \"slo\": {\n                        \"$ref\": \"#/components/schemas/SingleLogout\"\n                    },\n                    \"spCertificate\": {\n                        \"$ref\": \"#/components/schemas/SpCertificate\"\n                    },\n                    \"spIssuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"ssoAcsUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"ssoAcsUrlOverride\": {\n                        \"type\": \"string\"\n                    },\n                    \"subjectNameIdFormat\": {\n                        \"type\": \"string\"\n                    },\n                    \"subjectNameIdTemplate\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SamlAttributeStatement\": {\n                \"properties\": {\n                    \"filterType\": {\n                        \"type\": \"string\"\n                    },\n                    \"filterValue\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"namespace\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"values\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"ScheduledUserLifecycleAction\": {\n                \"properties\": {\n                    \"status\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\",\n                            \"PENDING\",\n                            \"DELETED\",\n                            \"EXPIRED_PASSWORD\",\n                            \"ACTIVATING\",\n                            \"SUSPENDED\",\n                            \"DELETING\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"SchemeApplicationCredentials\": {\n                \"properties\": {\n                    \"password\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredential\"\n                    },\n                    \"revealPassword\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"scheme\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentialsScheme\"\n                    },\n                    \"signing\": {\n                        \"$ref\": \"#/components/schemas/ApplicationCredentialsSigning\"\n                    },\n                    \"userName\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationCredentials\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"Scope\": {\n                \"properties\": {\n                    \"stringValue\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ScopeType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"ScopeType\": {\n                \"enum\": [\n                    \"CORS\",\n                    \"REDIRECT\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Role\"\n                ]\n            },\n            \"SecurePasswordStoreApplication\": {\n                \"properties\": {\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/SchemeApplicationCredentials\"\n                    },\n                    \"name\": {\n                        \"default\": \"template_sps\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/SecurePasswordStoreApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"template_sps\"\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SecurePasswordStoreApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/SecurePasswordStoreApplicationSettingsApplication\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SecurePasswordStoreApplicationSettingsApplication\": {\n                \"properties\": {\n                    \"optionalField1\": {\n                        \"type\": \"string\"\n                    },\n                    \"optionalField1Value\": {\n                        \"type\": \"string\"\n                    },\n                    \"optionalField2\": {\n                        \"type\": \"string\"\n                    },\n                    \"optionalField2Value\": {\n                        \"type\": \"string\"\n                    },\n                    \"optionalField3\": {\n                        \"type\": \"string\"\n                    },\n                    \"optionalField3Value\": {\n                        \"type\": \"string\"\n                    },\n                    \"passwordField\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"usernameField\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettingsApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SecurityQuestion\": {\n                \"properties\": {\n                    \"answer\": {\n                        \"type\": \"string\"\n                    },\n                    \"question\": {\n                        \"type\": \"string\"\n                    },\n                    \"questionText\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"SecurityQuestionUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/SecurityQuestionUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"SecurityQuestionUserFactorProfile\": {\n                \"properties\": {\n                    \"answer\": {\n                        \"type\": \"string\"\n                    },\n                    \"question\": {\n                        \"type\": \"string\"\n                    },\n                    \"questionText\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"Session\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"amr\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SessionAuthenticationMethod\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"array\"\n                    },\n                    \"createdAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"idp\": {\n                        \"$ref\": \"#/components/schemas/SessionIdentityProvider\"\n                    },\n                    \"lastFactorVerification\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastPasswordVerification\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"login\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/SessionStatus\"\n                    },\n                    \"userId\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"sessionId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getSession\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"sessionId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"endSession\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"refresh\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"sessionId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"refreshSession\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Session\"\n                ]\n            },\n            \"SessionAuthenticationMethod\": {\n                \"enum\": [\n                    \"pwd\",\n                    \"swk\",\n                    \"hwk\",\n                    \"otp\",\n                    \"sms\",\n                    \"tel\",\n                    \"geo\",\n                    \"fpt\",\n                    \"kba\",\n                    \"mfa\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Session\"\n                ]\n            },\n            \"SessionIdentityProvider\": {\n                \"properties\": {\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/SessionIdentityProviderType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Session\"\n                ]\n            },\n            \"SessionIdentityProviderType\": {\n                \"enum\": [\n                    \"ACTIVE_DIRECTORY\",\n                    \"LDAP\",\n                    \"OKTA\",\n                    \"FEDERATION\",\n                    \"SOCIAL\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Session\"\n                ]\n            },\n            \"SessionStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"MFA_ENROLL\",\n                    \"MFA_REQUIRED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Session\"\n                ]\n            },\n            \"SignOnInlineHook\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SingleLogout\": {\n                \"properties\": {\n                    \"enabled\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"issuer\": {\n                        \"type\": \"string\"\n                    },\n                    \"logoutUrl\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SmsTemplate\": {\n                \"properties\": {\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"template\": {\n                        \"type\": \"string\"\n                    },\n                    \"translations\": {\n                        \"$ref\": \"#/components/schemas/SmsTemplateTranslations\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/SmsTemplateType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"smsTemplate\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createSmsTemplate\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getSmsTemplate\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"templateId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"smsTemplate\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateSmsTemplate\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"templateId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteSmsTemplate\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"partialUpdate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"templateId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"smsTemplate\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"partialUpdateSmsTemplate\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"Template\"\n                ]\n            },\n            \"SmsTemplateTranslations\": {\n                \"type\": \"object\",\n                \"x-okta-extensible\": true,\n                \"x-okta-tags\": [\n                    \"Template\"\n                ]\n            },\n            \"SmsTemplateType\": {\n                \"enum\": [\n                    \"SMS_VERIFY_CODE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"Template\"\n                ]\n            },\n            \"SmsUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/SmsUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"SmsUserFactorProfile\": {\n                \"properties\": {\n                    \"phoneNumber\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"SocialAuthToken\": {\n                \"properties\": {\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"scopes\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"token\": {\n                        \"type\": \"string\"\n                    },\n                    \"tokenAuthScheme\": {\n                        \"type\": \"string\"\n                    },\n                    \"tokenType\": {\n                        \"enum\": [\n                            \"ACCESS\",\n                            \"REFRESH\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"IdentityProvider\"\n                ]\n            },\n            \"SpCertificate\": {\n                \"properties\": {\n                    \"x5c\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"readOnly\": false,\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SwaApplication\": {\n                \"properties\": {\n                    \"name\": {\n                        \"default\": \"template_swa\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/SwaApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"template_swa\"\n                },\n                \"x-okta-parent\": \"#/definitions/BrowserPluginApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SwaApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/SwaApplicationSettingsApplication\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SwaApplicationSettingsApplication\": {\n                \"properties\": {\n                    \"buttonField\": {\n                        \"type\": \"string\"\n                    },\n                    \"loginUrlRegex\": {\n                        \"type\": \"string\"\n                    },\n                    \"passwordField\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"usernameField\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettingsApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SwaThreeFieldApplication\": {\n                \"properties\": {\n                    \"name\": {\n                        \"default\": \"template_swa3field\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/SwaThreeFieldApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"template_swa3field\"\n                },\n                \"x-okta-parent\": \"#/definitions/BrowserPluginApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SwaThreeFieldApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/SwaThreeFieldApplicationSettingsApplication\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"SwaThreeFieldApplicationSettingsApplication\": {\n                \"properties\": {\n                    \"buttonSelector\": {\n                        \"type\": \"string\"\n                    },\n                    \"extraFieldSelector\": {\n                        \"type\": \"string\"\n                    },\n                    \"extraFieldValue\": {\n                        \"type\": \"string\"\n                    },\n                    \"loginUrlRegex\": {\n                        \"type\": \"string\"\n                    },\n                    \"passwordSelector\": {\n                        \"type\": \"string\"\n                    },\n                    \"targetURL\": {\n                        \"type\": \"string\"\n                    },\n                    \"userNameSelector\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettingsApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"TempPassword\": {\n                \"properties\": {\n                    \"tempPassword\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"ThreatInsightConfiguration\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"action\": {\n                        \"type\": \"string\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"excludeZones\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getCurrentConfiguration\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"threatInsightConfiguration\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateConfiguration\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"ThreatInsight\"\n                ]\n            },\n            \"TokenAuthorizationServerPolicyRuleAction\": {\n                \"properties\": {\n                    \"accessTokenLifetimeMinutes\": {\n                        \"type\": \"integer\"\n                    },\n                    \"inlineHook\": {\n                        \"$ref\": \"#/components/schemas/TokenAuthorizationServerPolicyRuleActionInlineHook\"\n                    },\n                    \"refreshTokenLifetimeMinutes\": {\n                        \"type\": \"integer\"\n                    },\n                    \"refreshTokenWindowMinutes\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServerPolicy\"\n                ]\n            },\n            \"TokenAuthorizationServerPolicyRuleActionInlineHook\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"AuthorizationServerPolicy\"\n                ]\n            },\n            \"TokenUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/TokenUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"TokenUserFactorProfile\": {\n                \"properties\": {\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"TotpUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/TotpUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"TotpUserFactorProfile\": {\n                \"properties\": {\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"TrustedOrigin\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdatedBy\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"origin\": {\n                        \"type\": \"string\"\n                    },\n                    \"scopes\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Scope\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"status\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"trustedOrigin\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createOrigin\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getOrigin\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"trustedOriginId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"trustedOrigin\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateOrigin\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"trustedOriginId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteOrigin\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"TrustedOrigin\"\n                ]\n            },\n            \"U2fUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/U2fUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"U2fUserFactorProfile\": {\n                \"properties\": {\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"User\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"activated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"credentials\": {\n                        \"$ref\": \"#/components/schemas/UserCredentials\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastLogin\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"passwordChanged\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/UserProfile\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/UserStatus\"\n                    },\n                    \"statusChanged\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"transitioningToStatus\": {\n                        \"$ref\": \"#/components/schemas/UserStatus\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/UserType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"user\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createUser\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [],\n                        \"operationId\": \"getUser\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"user\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateUser\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"user\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"deactivateOrDeleteUser\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"listAppLinks\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listAppLinks\"\n                    },\n                    {\n                        \"alias\": \"changePassword\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"changePassword\"\n                    },\n                    {\n                        \"alias\": \"changeRecoveryQuestion\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"changeRecoveryQuestion\"\n                    },\n                    {\n                        \"alias\": \"forgotPasswordSetNewPassword\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"forgotPasswordSetNewPassword\"\n                    },\n                    {\n                        \"alias\": \"forgotPasswordGenerateOneTimeToken\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"forgotPasswordGenerateOneTimeToken\"\n                    },\n                    {\n                        \"alias\": \"assignRole\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"assignRoleToUser\"\n                    },\n                    {\n                        \"alias\": \"removeRole\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"removeRoleFromUser\"\n                    },\n                    {\n                        \"alias\": \"listGroupTargets\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listGroupTargetsForRole\"\n                    },\n                    {\n                        \"alias\": \"removeGroupTarget\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"removeGroupTargetFromRole\"\n                    },\n                    {\n                        \"alias\": \"addGroupTarget\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addGroupTargetToRole\"\n                    },\n                    {\n                        \"alias\": \"listAssignedRoles\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listAssignedRolesForUser\"\n                    },\n                    {\n                        \"alias\": \"addAllAppsAsTarget\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"addAllAppsAsTargetToRole\"\n                    },\n                    {\n                        \"alias\": \"listGroups\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listUserGroups\"\n                    },\n                    {\n                        \"alias\": \"listGrants\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listUserGrants\"\n                    },\n                    {\n                        \"alias\": \"revokeGrants\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeUserGrants\"\n                    },\n                    {\n                        \"alias\": \"revokeGrant\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeUserGrant\"\n                    },\n                    {\n                        \"alias\": \"revokeGrantsForUserAndClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeGrantsForUserAndClient\"\n                    },\n                    {\n                        \"alias\": \"listRefreshTokensForUserAndClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listRefreshTokensForUserAndClient\"\n                    },\n                    {\n                        \"alias\": \"revokeTokenForUserAndClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeTokenForUserAndClient\"\n                    },\n                    {\n                        \"alias\": \"getRefreshTokenForUserAndClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getRefreshTokenForUserAndClient\"\n                    },\n                    {\n                        \"alias\": \"revokeTokensForUserAndClient\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"revokeTokensForUserAndClient\"\n                    },\n                    {\n                        \"alias\": \"listClients\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listUserClients\"\n                    },\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateUser\"\n                    },\n                    {\n                        \"alias\": \"reactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"reactivateUser\"\n                    },\n                    {\n                        \"alias\": \"deactivate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deactivateUser\"\n                    },\n                    {\n                        \"alias\": \"suspend\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"suspendUser\"\n                    },\n                    {\n                        \"alias\": \"unsuspend\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"unsuspendUser\"\n                    },\n                    {\n                        \"alias\": \"resetPassword\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"resetPassword\"\n                    },\n                    {\n                        \"alias\": \"expirePassword\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"expirePassword\"\n                    },\n                    {\n                        \"alias\": \"expirePasswordAndGetTemporaryPassword\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"expirePasswordAndGetTemporaryPassword\"\n                    },\n                    {\n                        \"alias\": \"unlock\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"unlockUser\"\n                    },\n                    {\n                        \"alias\": \"resetFactors\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"resetFactors\"\n                    },\n                    {\n                        \"alias\": \"deleteFactor\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteFactor\"\n                    },\n                    {\n                        \"alias\": \"addToGroup\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"description\": \"Adds a user to a group with 'OKTA_GROUP' type\",\n                        \"operationId\": \"addUserToGroup\"\n                    },\n                    {\n                        \"alias\": \"enrollFactor\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"enrollFactor\"\n                    },\n                    {\n                        \"alias\": \"listSupportedFactors\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listSupportedFactors\"\n                    },\n                    {\n                        \"alias\": \"listFactors\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listFactors\"\n                    },\n                    {\n                        \"alias\": \"listSupportedSecurityQuestions\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listSupportedSecurityQuestions\"\n                    },\n                    {\n                        \"alias\": \"getFactor\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getFactor\"\n                    },\n                    {\n                        \"alias\": \"setLinkedObject\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"associatedUserId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"setLinkedObjectForUser\"\n                    },\n                    {\n                        \"alias\": \"listIdentityProviders\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"listUserIdentityProviders\"\n                    },\n                    {\n                        \"alias\": \"getLinkedObjects\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getLinkedObjectsForUser\"\n                    },\n                    {\n                        \"alias\": \"clearSessions\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"clearUserSessions\"\n                    },\n                    {\n                        \"alias\": \"removeLinkedObject\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"removeLinkedObjectForUser\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"UserActivationToken\": {\n                \"properties\": {\n                    \"activationToken\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"activationUrl\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"UserCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserCredentials\": {\n                \"properties\": {\n                    \"password\": {\n                        \"$ref\": \"#/components/schemas/PasswordCredential\"\n                    },\n                    \"provider\": {\n                        \"$ref\": \"#/components/schemas/AuthenticationProvider\"\n                    },\n                    \"recovery_question\": {\n                        \"$ref\": \"#/components/schemas/RecoveryQuestionCredential\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"UserFactor\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"factorType\": {\n                        \"$ref\": \"#/components/schemas/FactorType\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"provider\": {\n                        \"$ref\": \"#/components/schemas/FactorProvider\"\n                    },\n                    \"status\": {\n                        \"$ref\": \"#/components/schemas/FactorStatus\"\n                    },\n                    \"verify\": {\n                        \"$ref\": \"#/components/schemas/VerifyFactorRequest\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"factorId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteFactor\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"activate\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"factorId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"activateFactor\"\n                    },\n                    {\n                        \"alias\": \"verify\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"factorId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userId\",\n                                \"parentSrc\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"verifyFactor\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ],\n                \"x-openapi-v3-discriminator\": {\n                    \"mapping\": {\n                        \"call\": \"#/definitions/CallUserFactor\",\n                        \"email\": \"#/definitions/EmailUserFactor\",\n                        \"hotp\": \"#/definitions/CustomHotpUserFactor\",\n                        \"push\": \"#/definitions/PushUserFactor\",\n                        \"question\": \"#/definitions/SecurityQuestionUserFactor\",\n                        \"sms\": \"#/definitions/SmsUserFactor\",\n                        \"token\": \"#/definitions/TokenUserFactor\",\n                        \"token:hardware\": \"#/definitions/HardwareUserFactor\",\n                        \"token:hotp\": \"#/definitions/CustomHotpUserFactor\",\n                        \"token:software:totp\": \"#/definitions/TotpUserFactor\",\n                        \"u2f\": \"#/definitions/U2fUserFactor\",\n                        \"web\": \"#/definitions/WebUserFactor\",\n                        \"webauthn\": \"#/definitions/WebAuthnUserFactor\"\n                    },\n                    \"propertyName\": \"factorType\"\n                }\n            },\n            \"UserIdentifierConditionEvaluatorPattern\": {\n                \"properties\": {\n                    \"matchType\": {\n                        \"enum\": [\n                            \"SUFFIX\",\n                            \"EXPRESSION\",\n                            \"STARTS_WITH\",\n                            \"EQUALS\",\n                            \"CONTAINS\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserIdentifierPolicyRuleCondition\": {\n                \"properties\": {\n                    \"attribute\": {\n                        \"type\": \"string\"\n                    },\n                    \"patterns\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UserIdentifierConditionEvaluatorPattern\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"IDENTIFIER\",\n                            \"ATTRIBUTE\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserIdentityProviderLinkRequest\": {\n                \"properties\": {\n                    \"externalId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserLifecycleAttributePolicyRuleCondition\": {\n                \"properties\": {\n                    \"attributeName\": {\n                        \"type\": \"string\"\n                    },\n                    \"matchingValue\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserNextLogin\": {\n                \"enum\": [\n                    \"changePassword\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"UserPolicyRuleCondition\": {\n                \"properties\": {\n                    \"exclude\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"inactivity\": {\n                        \"$ref\": \"#/components/schemas/InactivityPolicyRuleCondition\"\n                    },\n                    \"include\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"lifecycleExpiration\": {\n                        \"$ref\": \"#/components/schemas/LifecycleExpirationPolicyRuleCondition\"\n                    },\n                    \"passwordExpiration\": {\n                        \"$ref\": \"#/components/schemas/PasswordExpirationPolicyRuleCondition\"\n                    },\n                    \"userLifecycleAttribute\": {\n                        \"$ref\": \"#/components/schemas/UserLifecycleAttributePolicyRuleCondition\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserProfile\": {\n                \"properties\": {\n                    \"city\": {\n                        \"type\": \"string\"\n                    },\n                    \"costCenter\": {\n                        \"type\": \"string\"\n                    },\n                    \"countryCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"department\": {\n                        \"type\": \"string\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\"\n                    },\n                    \"division\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"employeeNumber\": {\n                        \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                        \"type\": \"string\"\n                    },\n                    \"honorificPrefix\": {\n                        \"type\": \"string\"\n                    },\n                    \"honorificSuffix\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                        \"type\": \"string\"\n                    },\n                    \"locale\": {\n                        \"type\": \"string\"\n                    },\n                    \"login\": {\n                        \"type\": \"string\"\n                    },\n                    \"manager\": {\n                        \"type\": \"string\"\n                    },\n                    \"managerId\": {\n                        \"type\": \"string\"\n                    },\n                    \"middleName\": {\n                        \"type\": \"string\"\n                    },\n                    \"mobilePhone\": {\n                        \"type\": \"string\"\n                    },\n                    \"nickName\": {\n                        \"type\": \"string\"\n                    },\n                    \"organization\": {\n                        \"type\": \"string\"\n                    },\n                    \"postalAddress\": {\n                        \"type\": \"string\"\n                    },\n                    \"preferredLanguage\": {\n                        \"type\": \"string\"\n                    },\n                    \"primaryPhone\": {\n                        \"type\": \"string\"\n                    },\n                    \"profileUrl\": {\n                        \"type\": \"string\"\n                    },\n                    \"secondEmail\": {\n                        \"type\": \"string\"\n                    },\n                    \"state\": {\n                        \"type\": \"string\"\n                    },\n                    \"streetAddress\": {\n                        \"type\": \"string\"\n                    },\n                    \"timezone\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"userType\": {\n                        \"type\": \"string\"\n                    },\n                    \"zipCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"githubUsername\": {\n                      \"type\": \"string\"\n                    },\n                    \"matrixUsername\": {\n                      \"type\": \"string\"\n                    },\n                    \"awsRole\": {\n                      \"type\": \"string\"\n                    },\n                    \"startDate\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\"\n                    },\n                    \"birthday\": {\n                      \"type\": \"string\",\n                      \"format\": \"date\"\n                    },\n                    \"workPostalAddress\": {\n                      \"type\": \"string\"\n                    },\n                    \"workStreetAddress\": {\n                      \"type\": \"string\"\n                    },\n                    \"workCity\": {\n                      \"type\": \"string\"\n                    },\n                    \"workState\": {\n                      \"type\": \"string\"\n                    },\n                    \"workZipCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"workCountryCode\": {\n                      \"type\": \"string\"\n                    },\n                    \"emailAliases\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-extensible\": true,\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"UserSchema\": {\n                \"properties\": {\n                    \"$schema\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definitions\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaDefinitions\"\n                    },\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"properties\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaProperties\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttribute\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"enum\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"externalName\": {\n                        \"type\": \"string\"\n                    },\n                    \"externalNamespace\": {\n                        \"type\": \"string\"\n                    },\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttributeItems\"\n                    },\n                    \"master\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttributeMaster\"\n                    },\n                    \"maxLength\": {\n                        \"type\": \"integer\"\n                    },\n                    \"minLength\": {\n                        \"type\": \"integer\"\n                    },\n                    \"mutability\": {\n                        \"type\": \"string\"\n                    },\n                    \"oneOf\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UserSchemaAttributeEnum\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"pattern\": {\n                        \"type\": \"string\"\n                    },\n                    \"permissions\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UserSchemaAttributePermission\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"required\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"scope\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttributeScope\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttributeType\"\n                    },\n                    \"union\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttributeUnion\"\n                    },\n                    \"unique\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeEnum\": {\n                \"properties\": {\n                    \"const\": {\n                        \"type\": \"string\"\n                    },\n                    \"title\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeItems\": {\n                \"properties\": {\n                    \"enum\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"oneOf\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UserSchemaAttributeEnum\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeMaster\": {\n                \"properties\": {\n                    \"priority\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UserSchemaAttributeMasterPriority\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttributeMasterType\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeMasterPriority\": {\n                \"properties\": {\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeMasterType\": {\n                \"enum\": [\n                    \"PROFILE_MASTER\",\n                    \"OKTA\",\n                    \"OVERRIDE\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributePermission\": {\n                \"properties\": {\n                    \"action\": {\n                        \"type\": \"string\"\n                    },\n                    \"principal\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeScope\": {\n                \"enum\": [\n                    \"SELF\",\n                    \"NONE\"\n                ],\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeType\": {\n                \"enum\": [\n                    \"string\",\n                    \"boolean\",\n                    \"number\",\n                    \"integer\",\n                    \"array\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaAttributeUnion\": {\n                \"enum\": [\n                    \"DISABLE\",\n                    \"ENABLE\"\n                ],\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaBase\": {\n                \"properties\": {\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"properties\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaBaseProperties\"\n                    },\n                    \"required\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaBaseProperties\": {\n                \"properties\": {\n                    \"city\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"costCenter\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"countryCode\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"department\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"displayName\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"division\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"email\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"employeeNumber\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"firstName\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"honorificPrefix\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"honorificSuffix\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"lastName\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"locale\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"login\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"manager\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"managerId\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"middleName\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"mobilePhone\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"nickName\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"organization\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"postalAddress\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"preferredLanguage\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"primaryPhone\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"profileUrl\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"secondEmail\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"state\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"streetAddress\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"timezone\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"title\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"userType\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    },\n                    \"zipCode\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaDefinitions\": {\n                \"properties\": {\n                    \"base\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaBase\"\n                    },\n                    \"custom\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaPublic\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaProperties\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/UserSchemaPropertiesProfile\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaPropertiesProfile\": {\n                \"properties\": {\n                    \"allOf\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/UserSchemaPropertiesProfileItem\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaPropertiesProfileItem\": {\n                \"properties\": {\n                    \"$ref\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserSchemaPublic\": {\n                \"properties\": {\n                    \"id\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"properties\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/UserSchemaAttribute\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"required\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserSchema\"\n                ]\n            },\n            \"UserStatus\": {\n                \"enum\": [\n                    \"ACTIVE\",\n                    \"DEPROVISIONED\",\n                    \"LOCKED_OUT\",\n                    \"PASSWORD_EXPIRED\",\n                    \"PROVISIONED\",\n                    \"RECOVERY\",\n                    \"STAGED\",\n                    \"SUSPENDED\"\n                ],\n                \"type\": \"string\",\n                \"x-okta-tags\": [\n                    \"User\"\n                ]\n            },\n            \"UserStatusPolicyRuleCondition\": {\n                \"properties\": {\n                    \"value\": {\n                        \"enum\": [\n                            \"ACTIVE\",\n                            \"INACTIVE\",\n                            \"PENDING\",\n                            \"DELETED\",\n                            \"EXPIRED_PASSWORD\",\n                            \"ACTIVATING\",\n                            \"SUSPENDED\",\n                            \"DELETING\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"Policy\"\n                ]\n            },\n            \"UserType\": {\n                \"properties\": {\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"created\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"createdBy\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"default\": {\n                        \"readOnly\": true,\n                        \"type\": \"boolean\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdated\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"lastUpdatedBy\": {\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-crud\": [\n                    {\n                        \"alias\": \"create\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"userType\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"createUserType\"\n                    },\n                    {\n                        \"alias\": \"update\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"typeId\",\n                                \"src\": \"id\"\n                            },\n                            {\n                                \"dest\": \"userType\",\n                                \"self\": true\n                            }\n                        ],\n                        \"operationId\": \"updateUserType\"\n                    },\n                    {\n                        \"alias\": \"read\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"typeId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"getUserType\"\n                    },\n                    {\n                        \"alias\": \"delete\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"typeId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"deleteUserType\"\n                    }\n                ],\n                \"x-okta-operations\": [\n                    {\n                        \"alias\": \"replaceUserType\",\n                        \"arguments\": [\n                            {\n                                \"dest\": \"roleId\",\n                                \"src\": \"id\"\n                            }\n                        ],\n                        \"operationId\": \"replaceUserType\"\n                    }\n                ],\n                \"x-okta-tags\": [\n                    \"UserType\"\n                ]\n            },\n            \"VerifyFactorRequest\": {\n                \"properties\": {\n                    \"activationToken\": {\n                        \"type\": \"string\"\n                    },\n                    \"answer\": {\n                        \"type\": \"string\"\n                    },\n                    \"attestation\": {\n                        \"type\": \"string\"\n                    },\n                    \"clientData\": {\n                        \"type\": \"string\"\n                    },\n                    \"nextPassCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"passCode\": {\n                        \"type\": \"string\"\n                    },\n                    \"registrationData\": {\n                        \"type\": \"string\"\n                    },\n                    \"stateToken\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"VerifyUserFactorResponse\": {\n                \"properties\": {\n                    \"_embedded\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"_links\": {\n                        \"additionalProperties\": {\n                            \"type\": \"object\"\n                        },\n                        \"readOnly\": true,\n                        \"type\": \"object\"\n                    },\n                    \"expiresAt\": {\n                        \"format\": \"date-time\",\n                        \"readOnly\": true,\n                        \"type\": \"string\"\n                    },\n                    \"factorResult\": {\n                        \"enum\": [\n                            \"SUCCESS\",\n                            \"EXPIRED\",\n                            \"CHALLENGE\",\n                            \"WAITING\",\n                            \"FAILED\",\n                            \"REJECTED\",\n                            \"TIMEOUT\",\n                            \"TIME_WINDOW_EXCEEDED\",\n                            \"PASSCODE_REPLAYED\",\n                            \"ERROR\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"factorResultMessage\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"WebAuthnUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/WebAuthnUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"WebAuthnUserFactorProfile\": {\n                \"properties\": {\n                    \"authenticatorName\": {\n                        \"type\": \"string\"\n                    },\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"WebUserFactor\": {\n                \"properties\": {\n                    \"profile\": {\n                        \"$ref\": \"#/components/schemas/WebUserFactorProfile\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/UserFactor\",\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"WebUserFactorProfile\": {\n                \"properties\": {\n                    \"credentialId\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-tags\": [\n                    \"UserFactor\"\n                ]\n            },\n            \"WsFederationApplication\": {\n                \"properties\": {\n                    \"name\": {\n                        \"default\": \"template_wsfed\"\n                    },\n                    \"settings\": {\n                        \"$ref\": \"#/components/schemas/WsFederationApplicationSettings\"\n                    }\n                },\n                \"x-okta-defined-as\": {\n                    \"name\": \"template_wsfed\"\n                },\n                \"x-okta-parent\": \"#/definitions/Application\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"WsFederationApplicationSettings\": {\n                \"properties\": {\n                    \"app\": {\n                        \"$ref\": \"#/components/schemas/WsFederationApplicationSettingsApplication\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettings\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            },\n            \"WsFederationApplicationSettingsApplication\": {\n                \"properties\": {\n                    \"attributeStatements\": {\n                        \"type\": \"string\"\n                    },\n                    \"audienceRestriction\": {\n                        \"type\": \"string\"\n                    },\n                    \"authnContextClassRef\": {\n                        \"type\": \"string\"\n                    },\n                    \"groupFilter\": {\n                        \"type\": \"string\"\n                    },\n                    \"groupName\": {\n                        \"type\": \"string\"\n                    },\n                    \"groupValueFormat\": {\n                        \"type\": \"string\"\n                    },\n                    \"nameIDFormat\": {\n                        \"type\": \"string\"\n                    },\n                    \"realm\": {\n                        \"type\": \"string\"\n                    },\n                    \"siteURL\": {\n                        \"type\": \"string\"\n                    },\n                    \"usernameAttribute\": {\n                        \"type\": \"string\"\n                    },\n                    \"wReplyOverride\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"wReplyURL\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"x-okta-parent\": \"#/definitions/ApplicationSettingsApplication\",\n                \"x-okta-tags\": [\n                    \"Application\"\n                ]\n            }\n        }\n    }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"UserSchemaBaseProperties\": parse schema: property \"city\": parse schema: resolve \"#/components/schemas/UserSchemaAttribute\": parse schema: property \"scope\": parse schema: resolve \"#/components/schemas/UserSchemaAttributeScope\": parse enum values: parse value \"\\\"SELF\\\"\": unexpected type: \"object\""
}