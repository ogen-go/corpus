{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/databrew/2017-07-25/openapi.yaml",
			"byteSize": 213254,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2017-07-25'\n  x-release: v4\n  title: AWS Glue DataBrew\n  description: 'Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew simplifies data preparation tasks, targeting data issues that are hard to spot and time-consuming to fix. DataBrew empowers users of all technical levels to visualize the data and perform one-click data transformations, with no coding required.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: databrew\n  x-aws-signingName: databrew\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/databrew-2017-07-25.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/databrew/'\nservers:\n  - url: 'http://databrew.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Glue DataBrew multi-region endpoint\n  - url: 'https://databrew.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Glue DataBrew multi-region endpoint\n  - url: 'http://databrew.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Glue DataBrew endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://databrew.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Glue DataBrew endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/recipes/{name}/batchDeleteRecipeVersion':\n    post:\n      operationId: BatchDeleteRecipeVersion\n      description: '\u003cp\u003eDeletes one or more versions of a recipe at a time.\u003c/p\u003e \u003cp\u003eThe entire request will be rejected if:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eThe recipe does not exist.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere is an invalid version identifier in the list of versions.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe version list is empty.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe version list size exceeds 50.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe version list contains duplicate entries.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe request will complete successfully, but with partial failures, if:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA version does not exist.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA version is being used by a job.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou specify \u003ccode\u003eLATEST_WORKING\u003c/code\u003e, but it''s being used by a project.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe version fails to be deleted.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe \u003ccode\u003eLATEST_WORKING\u003c/code\u003e version will only be deleted if the recipe has no other versions. If you try to delete \u003ccode\u003eLATEST_WORKING\u003c/code\u003e while other versions exist (or if they can''t be deleted), then \u003ccode\u003eLATEST_WORKING\u003c/code\u003e will be listed as partial failure in the response.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchDeleteRecipeVersionResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the recipe whose versions are to be deleted.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - RecipeVersions\n              properties:\n                RecipeVersions:\n                  description: 'An array of version identifiers, for the recipe versions to be deleted. You can specify numeric versions (\u003ccode\u003eX.Y\u003c/code\u003e) or \u003ccode\u003eLATEST_WORKING\u003c/code\u003e. \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e is not supported.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RecipeVersion'\n                  minItems: 1\n                  maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /datasets:\n    post:\n      operationId: CreateDataset\n      description: Creates a new DataBrew dataset.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDatasetResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - Input\n              properties:\n                Name:\n                  description: 'The name of the dataset to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                Format:\n                  description: The file format of a dataset that is created from an Amazon S3 file or folder.\n                  type: string\n                  enum:\n                    - CSV\n                    - JSON\n                    - PARQUET\n                    - EXCEL\n                FormatOptions:\n                  description: 'Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.'\n                  type: object\n                  properties:\n                    Json:\n                      allOf:\n                        - $ref: '#/components/schemas/JsonOptions'\n                        - description: Options that define how JSON input is to be interpreted by DataBrew.\n                    Excel:\n                      allOf:\n                        - $ref: '#/components/schemas/ExcelOptions'\n                        - description: Options that define how Excel input is to be interpreted by DataBrew.\n                    Csv:\n                      allOf:\n                        - $ref: '#/components/schemas/CsvOptions'\n                        - description: Options that define how CSV input is to be interpreted by DataBrew.\n                Input:\n                  description: 'Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.'\n                  type: object\n                  properties:\n                    S3InputDefinition:\n                      allOf:\n                        - $ref: '#/components/schemas/S3Location'\n                        - description: The Amazon S3 location where the data is stored.\n                    DataCatalogInputDefinition:\n                      allOf:\n                        - $ref: '#/components/schemas/DataCatalogInputDefinition'\n                        - description: The Glue Data Catalog parameters for the data.\n                    DatabaseInputDefinition:\n                      allOf:\n                        - $ref: '#/components/schemas/DatabaseInputDefinition'\n                        - description: Connection information for dataset input files stored in a database.\n                PathOptions:\n                  description: Represents a set of options that define how DataBrew selects files for a given Amazon S3 path in a dataset.\n                  type: object\n                  properties:\n                    LastModifiedDateCondition:\n                      allOf:\n                        - $ref: '#/components/schemas/FilterExpression'\n                        - description: 'If provided, this structure defines a date range for matching Amazon S3 objects based on their LastModifiedDate attribute in Amazon S3.'\n                    FilesLimit:\n                      allOf:\n                        - $ref: '#/components/schemas/FilesLimit'\n                        - description: 'If provided, this structure imposes a limit on a number of files that should be selected.'\n                    Parameters:\n                      allOf:\n                        - $ref: '#/components/schemas/PathParametersMap'\n                        - description: A structure that maps names of parameters used in the Amazon S3 path of a dataset to their definitions.\n                Tags:\n                  description: Metadata tags to apply to this dataset.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListDatasets\n      description: Lists all of the DataBrew datasets.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDatasetsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token returned by a previous call to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /profileJobs:\n    post:\n      operationId: CreateProfileJob\n      description: Creates a new job to analyze a dataset and create its data profile.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateProfileJobResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - DatasetName\n                - Name\n                - OutputLocation\n                - RoleArn\n              properties:\n                DatasetName:\n                  description: The name of the dataset that this job is to act upon.\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                EncryptionKeyArn:\n                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                EncryptionMode:\n                  description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with KMS-managed keys.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  enum:\n                    - SSE-KMS\n                    - SSE-S3\n                Name:\n                  description: 'The name of the job to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n                  type: string\n                  minLength: 1\n                  maxLength: 240\n                LogSubscription:\n                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n                  type: string\n                  enum:\n                    - ENABLE\n                    - DISABLE\n                MaxCapacity:\n                  description: The maximum number of nodes that DataBrew can use when the job processes data.\n                  type: integer\n                MaxRetries:\n                  description: The maximum number of times to retry the job after a job run fails.\n                  type: integer\n                  minimum: 0\n                OutputLocation:\n                  description: 'Represents an Amazon S3 location (bucket name and object key) where DataBrew can read input data, or write output from a job.'\n                  type: object\n                  properties:\n                    Bucket:\n                      allOf:\n                        - $ref: '#/components/schemas/Bucket'\n                        - description: The Amazon S3 bucket name.\n                    Key:\n                      allOf:\n                        - $ref: '#/components/schemas/Key'\n                        - description: The unique name of the object in the bucket.\n                Configuration:\n                  description: 'Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. '\n                  type: object\n                  properties:\n                    DatasetStatisticsConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/StatisticsConfiguration'\n                        - description: 'Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. '\n                    ProfileColumns:\n                      allOf:\n                        - $ref: '#/components/schemas/ColumnSelectorList'\n                        - description: 'List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. '\n                    ColumnStatisticsConfigurations:\n                      allOf:\n                        - $ref: '#/components/schemas/ColumnStatisticsConfigurationList'\n                        - description: 'List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. '\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Tags:\n                  description: Metadata tags to apply to this job.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                Timeout:\n                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n                  type: integer\n                  minimum: 0\n                JobSample:\n                  description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a \u003ccode\u003eJobSample\u003c/code\u003e value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'\n                  type: object\n                  properties:\n                    Mode:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleMode'\n                        - description: '\u003cp\u003eA value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFULL_DATASET - The profile job is run on the entire dataset.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCUSTOM_ROWS - The profile job is run on the number of rows specified in the \u003ccode\u003eSize\u003c/code\u003e parameter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                    Size:\n                      allOf:\n                        - $ref: '#/components/schemas/JobSize'\n                        - description: \u003cp\u003eThe \u003ccode\u003eSize\u003c/code\u003e parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.\u003c/p\u003e \u003cp\u003eLong.MAX_VALUE = 9223372036854775807\u003c/p\u003e\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /projects:\n    post:\n      operationId: CreateProject\n      description: Creates a new DataBrew project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateProjectResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - DatasetName\n                - Name\n                - RecipeName\n                - RoleArn\n              properties:\n                DatasetName:\n                  description: The name of an existing dataset to associate this project with.\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                Name:\n                  description: 'A unique name for the new project. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                RecipeName:\n                  description: The name of an existing recipe to associate with the project.\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                Sample:\n                  description: Represents the sample size and sampling type for DataBrew to use for interactive data analysis.\n                  type: object\n                  properties:\n                    Size:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleSize'\n                        - description: The number of rows in the sample.\n                    Type:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleType'\n                        - description: The way in which DataBrew obtains rows from a dataset.\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed for this request.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Tags:\n                  description: Metadata tags to apply to this project.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListProjects\n      description: Lists all of the DataBrew projects that are defined.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListProjectsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: The token returned by a previous call to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /recipes:\n    post:\n      operationId: CreateRecipe\n      description: Creates a new DataBrew recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRecipeResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - Steps\n              properties:\n                Description:\n                  description: A description for the recipe.\n                  type: string\n                  maxLength: 1024\n                Name:\n                  description: 'A unique name for the recipe. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                Steps:\n                  description: An array containing the steps to be performed by the recipe. Each recipe step consists of one recipe action and (optionally) an array of condition expressions.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RecipeStep'\n                Tags:\n                  description: Metadata tags to apply to this recipe.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListRecipes\n      description: Lists all of the DataBrew recipes that are defined.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRecipesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token returned by a previous call to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: recipeVersion\n          in: query\n          required: false\n          description: '\u003cp\u003eReturn only those recipes with a version identifier of \u003ccode\u003eLATEST_WORKING\u003c/code\u003e or \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e. If \u003ccode\u003eRecipeVersion\u003c/code\u003e is omitted, \u003ccode\u003eListRecipes\u003c/code\u003e returns all of the \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e recipe versions.\u003c/p\u003e \u003cp\u003eValid values: \u003ccode\u003eLATEST_WORKING\u003c/code\u003e | \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e \u003c/p\u003e'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 16\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  /recipeJobs:\n    post:\n      operationId: CreateRecipeJob\n      description: 'Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRecipeJobResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Name\n                - RoleArn\n              properties:\n                DatasetName:\n                  description: The name of the dataset that this job processes.\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                EncryptionKeyArn:\n                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                EncryptionMode:\n                  description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  enum:\n                    - SSE-KMS\n                    - SSE-S3\n                Name:\n                  description: 'A unique name for the job. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n                  type: string\n                  minLength: 1\n                  maxLength: 240\n                LogSubscription:\n                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n                  type: string\n                  enum:\n                    - ENABLE\n                    - DISABLE\n                MaxCapacity:\n                  description: The maximum number of nodes that DataBrew can consume when the job processes data.\n                  type: integer\n                MaxRetries:\n                  description: The maximum number of times to retry the job after a job run fails.\n                  type: integer\n                  minimum: 0\n                Outputs:\n                  description: One or more artifacts that represent the output from running the job.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Output'\n                  minItems: 1\n                DataCatalogOutputs:\n                  description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/DataCatalogOutput'\n                  minItems: 1\n                DatabaseOutputs:\n                  description: 'Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write to. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/DatabaseOutput'\n                  minItems: 1\n                ProjectName:\n                  description: 'Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe.'\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n                RecipeReference:\n                  description: Represents the name and version of a DataBrew recipe.\n                  type: object\n                  properties:\n                    Name:\n                      allOf:\n                        - $ref: '#/components/schemas/RecipeName'\n                        - description: The name of the recipe.\n                    RecipeVersion:\n                      allOf:\n                        - $ref: '#/components/schemas/RecipeVersion'\n                        - description: 'The identifier for the version for the recipe. '\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Tags:\n                  description: Metadata tags to apply to this job.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                Timeout:\n                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n                  type: integer\n                  minimum: 0\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /schedules:\n    post:\n      operationId: CreateSchedule\n      description: 'Creates a new schedule for one or more DataBrew jobs. Jobs can be run at a specific date and time, or at regular intervals.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateScheduleResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - CronExpression\n                - Name\n              properties:\n                JobNames:\n                  description: The name or names of one or more jobs to be run.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/JobName'\n                  maxItems: 50\n                CronExpression:\n                  description: 'The date or dates and time or times when the jobs are to be run. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n                  type: string\n                  minLength: 1\n                  maxLength: 512\n                Tags:\n                  description: Metadata tags to apply to this schedule.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                Name:\n                  description: 'A unique name for the schedule. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n                  type: string\n                  minLength: 1\n                  maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListSchedules\n      description: Lists the DataBrew schedules that are defined.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSchedulesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: jobName\n          in: query\n          required: false\n          description: The name of the job that these schedules apply to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token returned by a previous call to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n  '/datasets/{name}':\n    delete:\n      operationId: DeleteDataset\n      description: Deletes a dataset from DataBrew.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDatasetResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the dataset to be deleted.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeDataset\n      description: Returns the definition of a specific DataBrew dataset.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDatasetResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the dataset to be described.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    put:\n      operationId: UpdateDataset\n      description: Modifies the definition of an existing DataBrew dataset.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDatasetResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the dataset to be updated.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Input\n              properties:\n                Format:\n                  description: The file format of a dataset that is created from an Amazon S3 file or folder.\n                  type: string\n                  enum:\n                    - CSV\n                    - JSON\n                    - PARQUET\n                    - EXCEL\n                FormatOptions:\n                  description: 'Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.'\n                  type: object\n                  properties:\n                    Json:\n                      allOf:\n                        - $ref: '#/components/schemas/JsonOptions'\n                        - description: Options that define how JSON input is to be interpreted by DataBrew.\n                    Excel:\n                      allOf:\n                        - $ref: '#/components/schemas/ExcelOptions'\n                        - description: Options that define how Excel input is to be interpreted by DataBrew.\n                    Csv:\n                      allOf:\n                        - $ref: '#/components/schemas/CsvOptions'\n                        - description: Options that define how CSV input is to be interpreted by DataBrew.\n                Input:\n                  description: 'Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.'\n                  type: object\n                  properties:\n                    S3InputDefinition:\n                      allOf:\n                        - $ref: '#/components/schemas/S3Location'\n                        - description: The Amazon S3 location where the data is stored.\n                    DataCatalogInputDefinition:\n                      allOf:\n                        - $ref: '#/components/schemas/DataCatalogInputDefinition'\n                        - description: The Glue Data Catalog parameters for the data.\n                    DatabaseInputDefinition:\n                      allOf:\n                        - $ref: '#/components/schemas/DatabaseInputDefinition'\n                        - description: Connection information for dataset input files stored in a database.\n                PathOptions:\n                  description: Represents a set of options that define how DataBrew selects files for a given Amazon S3 path in a dataset.\n                  type: object\n                  properties:\n                    LastModifiedDateCondition:\n                      allOf:\n                        - $ref: '#/components/schemas/FilterExpression'\n                        - description: 'If provided, this structure defines a date range for matching Amazon S3 objects based on their LastModifiedDate attribute in Amazon S3.'\n                    FilesLimit:\n                      allOf:\n                        - $ref: '#/components/schemas/FilesLimit'\n                        - description: 'If provided, this structure imposes a limit on a number of files that should be selected.'\n                    Parameters:\n                      allOf:\n                        - $ref: '#/components/schemas/PathParametersMap'\n                        - description: A structure that maps names of parameters used in the Amazon S3 path of a dataset to their definitions.\n  '/jobs/{name}':\n    delete:\n      operationId: DeleteJob\n      description: Deletes the specified DataBrew job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteJobResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job to be deleted.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeJob\n      description: Returns the definition of a specific DataBrew job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeJobResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job to be described.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n  '/projects/{name}':\n    delete:\n      operationId: DeleteProject\n      description: Deletes an existing DataBrew project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteProjectResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the project to be deleted.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeProject\n      description: Returns the definition of a specific DataBrew project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeProjectResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the project to be described.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    put:\n      operationId: UpdateProject\n      description: Modifies the definition of an existing DataBrew project.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateProjectResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the project to be updated.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - RoleArn\n              properties:\n                Sample:\n                  description: Represents the sample size and sampling type for DataBrew to use for interactive data analysis.\n                  type: object\n                  properties:\n                    Size:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleSize'\n                        - description: The number of rows in the sample.\n                    Type:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleType'\n                        - description: The way in which DataBrew obtains rows from a dataset.\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the IAM role to be assumed for this request.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n  '/recipes/{name}/recipeVersion/{recipeVersion}':\n    delete:\n      operationId: DeleteRecipeVersion\n      description: Deletes a single version of a DataBrew recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRecipeVersionResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the recipe.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n        - name: recipeVersion\n          in: path\n          required: true\n          description: The version of the recipe to be deleted. You can specify a numeric versions (\u003ccode\u003eX.Y\u003c/code\u003e) or \u003ccode\u003eLATEST_WORKING\u003c/code\u003e. \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e is not supported.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 16\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/schedules/{name}':\n    delete:\n      operationId: DeleteSchedule\n      description: Deletes the specified DataBrew schedule.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteScheduleResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the schedule to be deleted.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: DescribeSchedule\n      description: Returns the definition of a specific DataBrew schedule.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeScheduleResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the schedule to be described.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    put:\n      operationId: UpdateSchedule\n      description: Modifies the definition of an existing DataBrew schedule.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateScheduleResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the schedule to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - CronExpression\n              properties:\n                JobNames:\n                  description: The name or names of one or more jobs to be run for this schedule.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/JobName'\n                  maxItems: 50\n                CronExpression:\n                  description: 'The date or dates and time or times when the jobs are to be run. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n                  type: string\n                  minLength: 1\n                  maxLength: 512\n  '/jobs/{name}/jobRun/{runId}':\n    get:\n      operationId: DescribeJobRun\n      description: Represents one run of a DataBrew job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeJobRunResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job being processed during this run.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n        - name: runId\n          in: path\n          required: true\n          description: The unique identifier of the job run.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/recipes/{name}':\n    get:\n      operationId: DescribeRecipe\n      description: Returns the definition of a specific DataBrew recipe corresponding to a particular version.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRecipeResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the recipe to be described.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n        - name: recipeVersion\n          in: query\n          required: false\n          description: 'The recipe version identifier. If this parameter isn''t specified, then the latest published version is returned.'\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 16\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: UpdateRecipe\n      description: Modifies the definition of the \u003ccode\u003eLATEST_WORKING\u003c/code\u003e version of a DataBrew recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRecipeResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the recipe to be updated.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Description:\n                  description: A description of the recipe.\n                  type: string\n                  maxLength: 1024\n                Steps:\n                  description: 'One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.'\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RecipeStep'\n  '/jobs/{name}/jobRuns':\n    get:\n      operationId: ListJobRuns\n      description: Lists all of the previous runs of a particular DataBrew job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListJobRunsResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token returned by a previous call to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /jobs:\n    get:\n      operationId: ListJobs\n      description: Lists all of the DataBrew jobs that are defined.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListJobsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: datasetName\n          in: query\n          required: false\n          description: The name of a dataset. Using this parameter indicates to return only those jobs that act on the specified dataset.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: 'A token generated by DataBrew that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the NextToken value from the response object of the previous page call. '\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: projectName\n          in: query\n          required: false\n          description: The name of a project. Using this parameter indicates to return only those jobs that are associated with the specified project.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /recipeVersions#name:\n    get:\n      operationId: ListRecipeVersions\n      description: 'Lists the versions of a particular DataBrew recipe, except for \u003ccode\u003eLATEST_WORKING\u003c/code\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRecipeVersionsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The maximum number of results to return in this request. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 100\n        - name: nextToken\n          in: query\n          required: false\n          description: The token returned by a previous call to retrieve the next set of results.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2000\n        - name: name\n          in: query\n          required: true\n          description: The name of the recipe for which to return version information.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{ResourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: 'Lists all the tags for a DataBrew resource. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: 'The Amazon Resource Name (ARN) string that uniquely identifies the DataBrew resource. '\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Adds metadata tags to a DataBrew resource, such as a dataset, project, recipe, job, or schedule.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: 'The DataBrew resource to which tags should be added. The value for this parameter is an Amazon Resource Name (ARN). For DataBrew, you can tag a dataset, a job, a project, or a recipe.'\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: One or more tags to be assigned to the resource.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 200\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/recipes/{name}/publishRecipe':\n    post:\n      operationId: PublishRecipe\n      description: Publishes a new version of a DataBrew recipe.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublishRecipeResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the recipe to be published.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Description:\n                  description: 'A description of the recipe to be published, for this version of the recipe.'\n                  type: string\n                  maxLength: 1024\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/projects/{name}/sendProjectSessionAction':\n    put:\n      operationId: SendProjectSessionAction\n      description: Performs a recipe step within an interactive DataBrew session that's currently open.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SendProjectSessionActionResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the project to apply the action to.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                Preview:\n                  description: 'If true, the result of the recipe step will be returned, but not applied.'\n                  type: boolean\n                RecipeStep:\n                  description: Represents a single step from a DataBrew recipe to be performed.\n                  type: object\n                  properties:\n                    Action:\n                      allOf:\n                        - $ref: '#/components/schemas/RecipeAction'\n                        - description: The particular action to be performed in the recipe step.\n                    ConditionExpressions:\n                      allOf:\n                        - $ref: '#/components/schemas/ConditionExpressionList'\n                        - description: '\u003cp\u003eOne or more conditions that must be met for the recipe step to succeed.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAll of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.\u003c/p\u003e \u003c/note\u003e'\n                StepIndex:\n                  description: 'The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack.'\n                  type: integer\n                  minimum: 0\n                ClientSessionId:\n                  description: A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session.\n                  type: string\n                  pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*$'\n                  minLength: 1\n                  maxLength: 255\n                ViewFrame:\n                  description: Represents the data being transformed during an action.\n                  type: object\n                  properties:\n                    StartColumnIndex:\n                      allOf:\n                        - $ref: '#/components/schemas/StartColumnIndex'\n                        - description: The starting index for the range of columns to return in the view frame.\n                    ColumnRange:\n                      allOf:\n                        - $ref: '#/components/schemas/ColumnRange'\n                        - description: 'The number of columns to include in the view frame, beginning with the \u003ccode\u003eStartColumnIndex\u003c/code\u003e value and ignoring any columns in the \u003ccode\u003eHiddenColumns\u003c/code\u003e list.'\n                    HiddenColumns:\n                      allOf:\n                        - $ref: '#/components/schemas/HiddenColumnList'\n                        - description: A list of columns to hide in the view frame.\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/jobs/{name}/startJobRun':\n    post:\n      operationId: StartJobRun\n      description: Runs a DataBrew job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartJobRunResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job to be run.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/projects/{name}/startProjectSession':\n    put:\n      operationId: StartProjectSession\n      description: 'Creates an interactive session, enabling you to manipulate data in a DataBrew project.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartProjectSessionResponse'\n        '480':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the project to act upon.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                AssumeControl:\n                  description: 'A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project.'\n                  type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/jobs/{name}/jobRun/{runId}/stopJobRun':\n    post:\n      operationId: StopJobRun\n      description: Stops a particular run of a job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StopJobRunResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job to be stopped.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n        - name: runId\n          in: path\n          required: true\n          description: The ID of the job run to be stopped.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{ResourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes metadata tags from a DataBrew resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: 'A DataBrew resource from which you want to remove a tag or tags. The value for this parameter is an Amazon Resource Name (ARN). '\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n        - name: tagKeys\n          in: query\n          required: true\n          description: The tag keys (names) of one or more tags to be removed.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/profileJobs/{name}':\n    put:\n      operationId: UpdateProfileJob\n      description: Modifies the definition of an existing profile job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateProfileJobResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job to be updated.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - OutputLocation\n                - RoleArn\n              properties:\n                Configuration:\n                  description: 'Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. '\n                  type: object\n                  properties:\n                    DatasetStatisticsConfiguration:\n                      allOf:\n                        - $ref: '#/components/schemas/StatisticsConfiguration'\n                        - description: 'Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. '\n                    ProfileColumns:\n                      allOf:\n                        - $ref: '#/components/schemas/ColumnSelectorList'\n                        - description: 'List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. '\n                    ColumnStatisticsConfigurations:\n                      allOf:\n                        - $ref: '#/components/schemas/ColumnStatisticsConfigurationList'\n                        - description: 'List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. '\n                EncryptionKeyArn:\n                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                EncryptionMode:\n                  description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  enum:\n                    - SSE-KMS\n                    - SSE-S3\n                LogSubscription:\n                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n                  type: string\n                  enum:\n                    - ENABLE\n                    - DISABLE\n                MaxCapacity:\n                  description: The maximum number of compute nodes that DataBrew can use when the job processes data.\n                  type: integer\n                MaxRetries:\n                  description: The maximum number of times to retry the job after a job run fails.\n                  type: integer\n                  minimum: 0\n                OutputLocation:\n                  description: 'Represents an Amazon S3 location (bucket name and object key) where DataBrew can read input data, or write output from a job.'\n                  type: object\n                  properties:\n                    Bucket:\n                      allOf:\n                        - $ref: '#/components/schemas/Bucket'\n                        - description: The Amazon S3 bucket name.\n                    Key:\n                      allOf:\n                        - $ref: '#/components/schemas/Key'\n                        - description: The unique name of the object in the bucket.\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Timeout:\n                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n                  type: integer\n                  minimum: 0\n                JobSample:\n                  description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a \u003ccode\u003eJobSample\u003c/code\u003e value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'\n                  type: object\n                  properties:\n                    Mode:\n                      allOf:\n                        - $ref: '#/components/schemas/SampleMode'\n                        - description: '\u003cp\u003eA value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFULL_DATASET - The profile job is run on the entire dataset.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCUSTOM_ROWS - The profile job is run on the number of rows specified in the \u003ccode\u003eSize\u003c/code\u003e parameter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                    Size:\n                      allOf:\n                        - $ref: '#/components/schemas/JobSize'\n                        - description: \u003cp\u003eThe \u003ccode\u003eSize\u003c/code\u003e parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.\u003c/p\u003e \u003cp\u003eLong.MAX_VALUE = 9223372036854775807\u003c/p\u003e\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/recipeJobs/{name}':\n    put:\n      operationId: UpdateRecipeJob\n      description: Modifies the definition of an existing DataBrew recipe job.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRecipeJobResponse'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the job to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 240\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - RoleArn\n              properties:\n                EncryptionKeyArn:\n                  description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                EncryptionMode:\n                  description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n                  type: string\n                  enum:\n                    - SSE-KMS\n                    - SSE-S3\n                LogSubscription:\n                  description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n                  type: string\n                  enum:\n                    - ENABLE\n                    - DISABLE\n                MaxCapacity:\n                  description: The maximum number of nodes that DataBrew can consume when the job processes data.\n                  type: integer\n                MaxRetries:\n                  description: The maximum number of times to retry the job after a job run fails.\n                  type: integer\n                  minimum: 0\n                Outputs:\n                  description: 'One or more artifacts that represent the output from running the job. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Output'\n                  minItems: 1\n                DataCatalogOutputs:\n                  description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/DataCatalogOutput'\n                  minItems: 1\n                DatabaseOutputs:\n                  description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/DatabaseOutput'\n                  minItems: 1\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Timeout:\n                  description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n                  type: integer\n                  minimum: 0\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchDeleteRecipeVersionResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe that was modified.\n        Errors:\n          allOf:\n            - $ref: '#/components/schemas/RecipeErrorList'\n            - description: 'Errors, if any, that occurred while attempting to delete the recipe versions.'\n    RecipeVersion:\n      type: string\n      minLength: 1\n      maxLength: 16\n    ConflictException: {}\n    ResourceNotFoundException: {}\n    ValidationException: {}\n    CreateDatasetResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset that you created.\n    JsonOptions:\n      type: object\n      properties:\n        MultiLine:\n          allOf:\n            - $ref: '#/components/schemas/MultiLine'\n            - description: A value that specifies whether JSON input contains embedded new line characters.\n      description: Represents the JSON-specific options that define how input is to be interpreted by Glue DataBrew.\n    ExcelOptions:\n      type: object\n      properties:\n        SheetNames:\n          allOf:\n            - $ref: '#/components/schemas/SheetNameList'\n            - description: One or more named sheets in the Excel file that will be included in the dataset.\n        SheetIndexes:\n          allOf:\n            - $ref: '#/components/schemas/SheetIndexList'\n            - description: One or more sheet numbers in the Excel file that will be included in the dataset.\n        HeaderRow:\n          allOf:\n            - $ref: '#/components/schemas/HeaderRow'\n            - description: 'A variable that specifies whether the first row in the file is parsed as the header. If this value is false, column names are auto-generated.'\n      description: Represents a set of options that define how DataBrew will interpret a Microsoft Excel file when creating a dataset from that file.\n    CsvOptions:\n      type: object\n      properties:\n        Delimiter:\n          allOf:\n            - $ref: '#/components/schemas/Delimiter'\n            - description: A single character that specifies the delimiter being used in the CSV file.\n        HeaderRow:\n          allOf:\n            - $ref: '#/components/schemas/HeaderRow'\n            - description: 'A variable that specifies whether the first row in the file is parsed as the header. If this value is false, column names are auto-generated.'\n      description: Represents a set of options that define how DataBrew will read a comma-separated value (CSV) file when creating a dataset from that file.\n    S3Location:\n      type: object\n      required:\n        - Bucket\n      properties:\n        Bucket:\n          allOf:\n            - $ref: '#/components/schemas/Bucket'\n            - description: The Amazon S3 bucket name.\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The unique name of the object in the bucket.\n      description: 'Represents an Amazon S3 location (bucket name and object key) where DataBrew can read input data, or write output from a job.'\n    DataCatalogInputDefinition:\n      type: object\n      required:\n        - DatabaseName\n        - TableName\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogId'\n            - description: The unique identifier of the Amazon Web Services account that holds the Data Catalog that stores the data.\n        DatabaseName:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseName'\n            - description: The name of a database in the Data Catalog.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of a database table in the Data Catalog. This table corresponds to a DataBrew dataset.\n        TempDirectory:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: Represents an Amazon location where DataBrew can store intermediate results.\n      description: 'Represents how metadata stored in the Glue Data Catalog is defined in a DataBrew dataset. '\n    DatabaseInputDefinition:\n      type: object\n      required:\n        - GlueConnectionName\n        - DatabaseTableName\n      properties:\n        GlueConnectionName:\n          allOf:\n            - $ref: '#/components/schemas/GlueConnectionName'\n            - description: The Glue Connection that stores the connection information for the target database.\n        DatabaseTableName:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseTableName'\n            - description: The table within the target database.\n        TempDirectory:\n          $ref: '#/components/schemas/S3Location'\n      description: Connection information for dataset input files stored in a database.\n    FilterExpression:\n      type: object\n      required:\n        - Expression\n        - ValuesMap\n      properties:\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: 'The expression which includes condition names followed by substitution variables, possibly grouped and combined with other conditions. For example, \"(starts_with :prefix1 or starts_with :prefix2) and (ends_with :suffix1 or ends_with :suffix2)\". Substitution variables should start with '':'' symbol.'\n        ValuesMap:\n          allOf:\n            - $ref: '#/components/schemas/ValuesMap'\n            - description: The map of substitution variable names to their values used in this filter expression.\n      description: 'Represents a structure for defining parameter conditions. Supported conditions are described here: \u003ca href=\"https://docs-aws.amazon.com/databrew/latest/dg/datasets.multiple-files.html#conditions.for.dynamic.datasets\"\u003eSupported conditions for dynamic datasets\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n    FilesLimit:\n      type: object\n      required:\n        - MaxFiles\n      properties:\n        MaxFiles:\n          allOf:\n            - $ref: '#/components/schemas/MaxFiles'\n            - description: The number of Amazon S3 files to select.\n        OrderedBy:\n          allOf:\n            - $ref: '#/components/schemas/OrderedBy'\n            - description: A criteria to use for Amazon S3 files sorting before their selection. By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently it's the only allowed value.\n        Order:\n          allOf:\n            - $ref: '#/components/schemas/Order'\n            - description: 'A criteria to use for Amazon S3 files sorting before their selection. By default uses DESCENDING order, i.e. most recent files are selected first. Anotherpossible value is ASCENDING.'\n      description: Represents a limit imposed on number of Amazon S3 files that should be selected for a dataset from a connected Amazon S3 path.\n    PathParametersMap:\n      type: object\n      description: A structure that map names of parameters used in the Amazon S3 path of a dataset to their definitions. A definition includes parameter type and conditions.\n      minProperties: 1\n      maxProperties: 10\n      additionalProperties:\n        $ref: '#/components/schemas/DatasetParameter'\n    TagValue:\n      type: string\n      maxLength: 256\n    AccessDeniedException: {}\n    ServiceQuotaExceededException: {}\n    CreateProfileJobResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job that was created.\n    Bucket:\n      type: string\n      minLength: 3\n      maxLength: 63\n    Key:\n      type: string\n      minLength: 1\n      maxLength: 1280\n    StatisticsConfiguration:\n      type: object\n      properties:\n        IncludedStatistics:\n          allOf:\n            - $ref: '#/components/schemas/StatisticList'\n            - description: 'List of included evaluations. When the list is undefined, all supported evaluations will be included.'\n        Overrides:\n          allOf:\n            - $ref: '#/components/schemas/StatisticOverrideList'\n            - description: List of overrides for evaluations.\n      description: 'Configuration of evaluations for a profile job. This configuration can be used to select evaluations and override the parameters of selected evaluations. '\n    ColumnSelectorList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ColumnSelector'\n      minItems: 1\n    ColumnStatisticsConfigurationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ColumnStatisticsConfiguration'\n      minItems: 1\n    SampleMode:\n      type: string\n      enum:\n        - FULL_DATASET\n        - CUSTOM_ROWS\n    JobSize:\n      type: integer\n    CreateProjectResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project that you created.\n    SampleSize:\n      type: integer\n      minimum: 1\n      maximum: 5000\n    SampleType:\n      type: string\n      enum:\n        - FIRST_N\n        - LAST_N\n        - RANDOM\n    InternalServerException: {}\n    CreateRecipeResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe that you created.\n    RecipeStep:\n      type: object\n      required:\n        - Action\n      properties:\n        Action:\n          allOf:\n            - $ref: '#/components/schemas/RecipeAction'\n            - description: The particular action to be performed in the recipe step.\n        ConditionExpressions:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpressionList'\n            - description: '\u003cp\u003eOne or more conditions that must be met for the recipe step to succeed.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAll of the conditions in the array must be met. In other words, all of the conditions must be combined using a logical AND operation.\u003c/p\u003e \u003c/note\u003e'\n      description: Represents a single step from a DataBrew recipe to be performed.\n    CreateRecipeJobResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job that you created.\n    Output:\n      type: object\n      required:\n        - Location\n      properties:\n        CompressionFormat:\n          allOf:\n            - $ref: '#/components/schemas/CompressionFormat'\n            - description: The compression algorithm used to compress the output text of the job.\n        Format:\n          allOf:\n            - $ref: '#/components/schemas/OutputFormat'\n            - description: The data format of the output of the job.\n        PartitionColumns:\n          allOf:\n            - $ref: '#/components/schemas/ColumnNameList'\n            - description: The names of one or more partition columns for the output of the job.\n        Location:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: The location in Amazon S3 where the job writes its output.\n        Overwrite:\n          allOf:\n            - $ref: '#/components/schemas/OverwriteOutput'\n            - description: 'A value that, if true, means that any data in the location specified for output is overwritten with new output.'\n        FormatOptions:\n          allOf:\n            - $ref: '#/components/schemas/OutputFormatOptions'\n            - description: Represents options that define how DataBrew formats job output files.\n      description: Represents options that specify how and where in Amazon S3 DataBrew writes the output generated by recipe jobs or profile jobs.\n    DataCatalogOutput:\n      type: object\n      required:\n        - DatabaseName\n        - TableName\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogId'\n            - description: The unique identifier of the Amazon Web Services account that holds the Data Catalog that stores the data.\n        DatabaseName:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseName'\n            - description: The name of a database in the Data Catalog.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of a table in the Data Catalog.\n        S3Options:\n          allOf:\n            - $ref: '#/components/schemas/S3TableOutputOptions'\n            - description: Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs.\n        DatabaseOptions:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseTableOutputOptions'\n            - description: Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.\n        Overwrite:\n          allOf:\n            - $ref: '#/components/schemas/OverwriteOutput'\n            - description: 'A value that, if true, means that any data in the location specified for output is overwritten with new output. Not supported with DatabaseOptions.'\n      description: Represents options that specify how and where in the Glue Data Catalog DataBrew writes the output generated by recipe jobs.\n    DatabaseOutput:\n      type: object\n      required:\n        - GlueConnectionName\n        - DatabaseOptions\n      properties:\n        GlueConnectionName:\n          allOf:\n            - $ref: '#/components/schemas/GlueConnectionName'\n            - description: The Glue connection that stores the connection information for the target database.\n        DatabaseOptions:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseTableOutputOptions'\n            - description: Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.\n        DatabaseOutputMode:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputMode'\n            - description: 'The output mode to write into the database. Currently supported option: NEW_TABLE.'\n      description: Represents a JDBC database output object which defines the output destination for a DataBrew recipe job to write into.\n    RecipeName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    CreateScheduleResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: The name of the schedule that was created.\n    JobName:\n      type: string\n      minLength: 1\n      maxLength: 240\n    DeleteDatasetResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset that you deleted.\n    DeleteJobResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job that you deleted.\n    DeleteProjectResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project that you deleted.\n    DeleteRecipeVersionResponse:\n      type: object\n      required:\n        - Name\n        - RecipeVersion\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe that was deleted.\n        RecipeVersion:\n          allOf:\n            - $ref: '#/components/schemas/RecipeVersion'\n            - description: The version of the recipe that was deleted.\n    DeleteScheduleResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: The name of the schedule that was deleted.\n    DescribeDatasetResponse:\n      type: object\n      required:\n        - Name\n        - Input\n      properties:\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The identifier (user name) of the user who created the dataset.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the dataset was created.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset.\n        Format:\n          allOf:\n            - $ref: '#/components/schemas/InputFormat'\n            - description: The file format of a dataset that is created from an Amazon S3 file or folder.\n        FormatOptions:\n          $ref: '#/components/schemas/FormatOptions'\n        Input:\n          $ref: '#/components/schemas/Input'\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the dataset was last modified.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The identifier (user name) of the user who last modified the dataset.\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - description: 'The location of the data for this dataset, Amazon S3 or the Glue Data Catalog.'\n        PathOptions:\n          allOf:\n            - $ref: '#/components/schemas/PathOptions'\n            - description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags associated with this dataset.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the dataset.\n    DescribeJobResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the job was created.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The identifier (user name) of the user associated with the creation of the job.\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The dataset that the job acts upon.\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionKeyArn'\n            - description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n        EncryptionMode:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionMode'\n            - description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/JobType'\n            - description: '\u003cp\u003eThe job type, which must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROFILE\u003c/code\u003e - The job analyzes the dataset to determine its size, data types, data distribution, and more.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRECIPE\u003c/code\u003e - The job applies one or more transformations to a dataset.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The identifier (user name) of the user who last modified the job.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the job was last modified.\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: Indicates whether Amazon CloudWatch logging is enabled for this job.\n        MaxCapacity:\n          allOf:\n            - $ref: '#/components/schemas/MaxCapacity'\n            - description: The maximum number of compute nodes that DataBrew can consume when the job processes data.\n        MaxRetries:\n          allOf:\n            - $ref: '#/components/schemas/MaxRetries'\n            - description: The maximum number of times to retry the job after a job run fails.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/OutputList'\n            - description: One or more artifacts that represent the output from running the job.\n        DataCatalogOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogOutputList'\n            - description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n        DatabaseOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputList'\n            - description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.\n        ProjectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The DataBrew project associated with this job.\n        ProfileConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ProfileConfiguration'\n            - description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'\n        RecipeReference:\n          $ref: '#/components/schemas/RecipeReference'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the job.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The ARN of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags associated with this job.\n        Timeout:\n          allOf:\n            - $ref: '#/components/schemas/Timeout'\n            - description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n        JobSample:\n          allOf:\n            - $ref: '#/components/schemas/JobSample'\n            - description: Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed.\n    DescribeJobRunResponse:\n      type: object\n      required:\n        - JobName\n      properties:\n        Attempt:\n          allOf:\n            - $ref: '#/components/schemas/Attempt'\n            - description: The number of times that DataBrew has attempted to run the job.\n        CompletedOn:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the job completed processing.\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset for the job to process.\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/JobRunErrorMessage'\n            - description: A message indicating an error (if any) that was encountered when the job ran.\n        ExecutionTime:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionTime'\n            - description: 'The amount of time, in seconds, during which the job run consumed resources.'\n        JobName:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job being processed during this run.\n        ProfileConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ProfileConfiguration'\n            - description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'\n        RunId:\n          allOf:\n            - $ref: '#/components/schemas/JobRunId'\n            - description: The unique identifier of the job run.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/JobRunState'\n            - description: The current state of the job run entity itself.\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: The current status of Amazon CloudWatch logging for the job run.\n        LogGroupName:\n          allOf:\n            - $ref: '#/components/schemas/LogGroupName'\n            - description: 'The name of an Amazon CloudWatch log group, where the job writes diagnostic messages when it runs.'\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/OutputList'\n            - description: One or more output artifacts from a job run.\n        DataCatalogOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogOutputList'\n            - description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n        DatabaseOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputList'\n            - description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.\n        RecipeReference:\n          $ref: '#/components/schemas/RecipeReference'\n        StartedBy:\n          allOf:\n            - $ref: '#/components/schemas/StartedBy'\n            - description: The Amazon Resource Name (ARN) of the user who started the job run.\n        StartedOn:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the job run began.\n        JobSample:\n          allOf:\n            - $ref: '#/components/schemas/JobSample'\n            - description: 'Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed. If a JobSample value is not provided, the default value will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.'\n    DescribeProjectResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the project was created.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The identifier (user name) of the user who created the project.\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The dataset associated with the project.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the project was last modified.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The identifier (user name) of the user who last modified the project.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project.\n        RecipeName:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The recipe associated with this job.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the project.\n        Sample:\n          $ref: '#/components/schemas/Sample'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The ARN of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags associated with this project.\n        SessionStatus:\n          allOf:\n            - $ref: '#/components/schemas/SessionStatus'\n            - description: '\u003cp\u003eDescribes the current state of the session:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROVISIONING\u003c/code\u003e - allocating resources for the session.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINITIALIZING\u003c/code\u003e - getting the session ready for first use.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eASSIGNED\u003c/code\u003e - the session is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        OpenedBy:\n          allOf:\n            - $ref: '#/components/schemas/OpenedBy'\n            - description: 'The identifier (user name) of the user that opened the project for use. '\n        OpenDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: 'The date and time when the project was opened. '\n    DescribeRecipeResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The identifier (user name) of the user who created the recipe.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the recipe was created.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The identifier (user name) of the user who last modified the recipe.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the recipe was last modified.\n        ProjectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project associated with this recipe.\n        PublishedBy:\n          allOf:\n            - $ref: '#/components/schemas/PublishedBy'\n            - description: The identifier (user name) of the user who last published the recipe.\n        PublishedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the recipe was last published.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/RecipeDescription'\n            - description: The description of the recipe.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe.\n        Steps:\n          allOf:\n            - $ref: '#/components/schemas/RecipeStepList'\n            - description: 'One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags associated with this project.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The ARN of the recipe.\n        RecipeVersion:\n          allOf:\n            - $ref: '#/components/schemas/RecipeVersion'\n            - description: The recipe version identifier.\n    DescribeScheduleResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the schedule was created.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: 'The identifier (user name) of the user who created the schedule. '\n        JobNames:\n          allOf:\n            - $ref: '#/components/schemas/JobNameList'\n            - description: The name or names of one or more jobs to be run by using the schedule.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The identifier (user name) of the user who last modified the schedule.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the schedule was last modified.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the schedule.\n        CronExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: 'The date or dates and time or times when the jobs are to be run for the schedule. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags associated with this schedule.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: The name of the schedule.\n    ListDatasetsResponse:\n      type: object\n      required:\n        - Datasets\n      properties:\n        Datasets:\n          allOf:\n            - $ref: '#/components/schemas/DatasetList'\n            - description: A list of datasets that are defined.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n    ListJobRunsResponse:\n      type: object\n      required:\n        - JobRuns\n      properties:\n        JobRuns:\n          allOf:\n            - $ref: '#/components/schemas/JobRunList'\n            - description: A list of job runs that have occurred for the specified job.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n    ListJobsResponse:\n      type: object\n      required:\n        - Jobs\n      properties:\n        Jobs:\n          allOf:\n            - $ref: '#/components/schemas/JobList'\n            - description: A list of jobs that are defined.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n    ListProjectsResponse:\n      type: object\n      required:\n        - Projects\n      properties:\n        Projects:\n          allOf:\n            - $ref: '#/components/schemas/ProjectList'\n            - description: A list of projects that are defined .\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n    ListRecipeVersionsResponse:\n      type: object\n      required:\n        - Recipes\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n        Recipes:\n          allOf:\n            - $ref: '#/components/schemas/RecipeList'\n            - description: A list of versions for the specified recipe.\n    ListRecipesResponse:\n      type: object\n      required:\n        - Recipes\n      properties:\n        Recipes:\n          allOf:\n            - $ref: '#/components/schemas/RecipeList'\n            - description: A list of recipes that are defined.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n    ListSchedulesResponse:\n      type: object\n      required:\n        - Schedules\n      properties:\n        Schedules:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleList'\n            - description: A list of schedules that are defined.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token that you can use in a subsequent call to retrieve the next set of results.\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: A list of tags associated with the DataBrew resource.\n    PublishRecipeResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe that you published.\n    SendProjectSessionActionResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Result:\n          allOf:\n            - $ref: '#/components/schemas/Result'\n            - description: A message indicating the result of performing the action.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project that was affected by the action.\n        ActionId:\n          allOf:\n            - $ref: '#/components/schemas/ActionId'\n            - description: A unique identifier for the action that was performed.\n    RecipeAction:\n      type: object\n      required:\n        - Operation\n      properties:\n        Operation:\n          allOf:\n            - $ref: '#/components/schemas/Operation'\n            - description: The name of a valid DataBrew transformation to be performed on the data.\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/ParameterMap'\n            - description: Contextual parameters for the transformation.\n      description: 'Represents a transformation and associated parameters that are used to apply a change to a DataBrew dataset. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipe-actions-reference.html\"\u003eRecipe actions reference\u003c/a\u003e.'\n    ConditionExpressionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConditionExpression'\n    StartColumnIndex:\n      type: integer\n      minimum: 0\n    ColumnRange:\n      type: integer\n      minimum: 0\n      maximum: 20\n    HiddenColumnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ColumnName'\n    StartJobRunResponse:\n      type: object\n      required:\n        - RunId\n      properties:\n        RunId:\n          allOf:\n            - $ref: '#/components/schemas/JobRunId'\n            - description: A system-generated identifier for this particular job run.\n    StartProjectSessionResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project to be acted upon.\n        ClientSessionId:\n          allOf:\n            - $ref: '#/components/schemas/ClientSessionId'\n            - description: A system-generated identifier for the session.\n    StopJobRunResponse:\n      type: object\n      required:\n        - RunId\n      properties:\n        RunId:\n          allOf:\n            - $ref: '#/components/schemas/JobRunId'\n            - description: The ID of the job run that you stopped.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    UpdateDatasetResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset that you updated.\n    UpdateProfileJobResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job that was updated.\n    UpdateProjectResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the project was last modified.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project that you updated.\n    UpdateRecipeResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe that was updated.\n    UpdateRecipeJobResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job that you updated.\n    UpdateScheduleResponse:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: The name of the schedule that was updated.\n    AccountId:\n      type: string\n      maxLength: 255\n    ActionId:\n      type: integer\n    Arn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    AssumeControl:\n      type: boolean\n    Attempt:\n      type: integer\n    RecipeVersionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RecipeVersion'\n      minItems: 1\n      maxItems: 50\n    BatchDeleteRecipeVersionRequest:\n      type: object\n      required:\n        - RecipeVersions\n      title: BatchDeleteRecipeVersionRequest\n      properties:\n        RecipeVersions:\n          allOf:\n            - $ref: '#/components/schemas/RecipeVersionList'\n            - description: 'An array of version identifiers, for the recipe versions to be deleted. You can specify numeric versions (\u003ccode\u003eX.Y\u003c/code\u003e) or \u003ccode\u003eLATEST_WORKING\u003c/code\u003e. \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e is not supported.'\n    RecipeErrorList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RecipeVersionErrorDetail'\n    CatalogId:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ClientSessionId:\n      type: string\n      pattern: '^[a-zA-Z0-9][a-zA-Z0-9-]*$'\n      minLength: 1\n      maxLength: 255\n    ColumnName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ColumnNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ColumnName'\n      maxItems: 200\n    ColumnSelector:\n      type: object\n      properties:\n        Regex:\n          allOf:\n            - $ref: '#/components/schemas/ColumnName'\n            - description: A regular expression for selecting a column from a dataset.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ColumnName'\n            - description: The name of a column from a dataset.\n      description: Selector of a column from a dataset for profile job configuration. One selector includes either a column name or a regular expression.\n    ColumnStatisticsConfiguration:\n      type: object\n      required:\n        - Statistics\n      properties:\n        Selectors:\n          allOf:\n            - $ref: '#/components/schemas/ColumnSelectorList'\n            - description: 'List of column selectors. Selectors can be used to select columns from the dataset. When selectors are undefined, configuration will be applied to all supported columns. '\n        Statistics:\n          allOf:\n            - $ref: '#/components/schemas/StatisticsConfiguration'\n            - description: 'Configuration for evaluations. Statistics can be used to select evaluations and override parameters of evaluations. '\n      description: 'Configuration for column evaluations for a profile job. ColumnStatisticsConfiguration can be used to select evaluations and override parameters of evaluations for particular columns. '\n    CompressionFormat:\n      type: string\n      enum:\n        - GZIP\n        - LZ4\n        - SNAPPY\n        - BZIP2\n        - DEFLATE\n        - LZO\n        - BROTLI\n        - ZSTD\n        - ZLIB\n    Condition:\n      type: string\n      pattern: '^[A-Z\\_]+$'\n      minLength: 1\n      maxLength: 128\n    ConditionValue:\n      type: string\n      maxLength: 1024\n    TargetColumn:\n      type: string\n      minLength: 1\n      maxLength: 1024\n    ConditionExpression:\n      type: object\n      required:\n        - Condition\n        - TargetColumn\n      properties:\n        Condition:\n          allOf:\n            - $ref: '#/components/schemas/Condition'\n            - description: 'A specific condition to apply to a recipe action. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/recipes.html#recipes.structure\"\u003eRecipe structure\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/ConditionValue'\n            - description: A value that the condition must evaluate to for the condition to succeed.\n        TargetColumn:\n          allOf:\n            - $ref: '#/components/schemas/TargetColumn'\n            - description: A column to apply this condition to.\n      description: '\u003cp\u003eRepresents an individual condition that evaluates to true or false.\u003c/p\u003e \u003cp\u003eConditions are used with recipe actions. The action is only performed for column values where the condition evaluates to true.\u003c/p\u003e \u003cp\u003eIf a recipe requires more than one condition, then the recipe must specify multiple \u003ccode\u003eConditionExpression\u003c/code\u003e elements. Each condition is applied to the rows in a dataset first, before the recipe action is performed.\u003c/p\u003e'\n    CreateColumn:\n      type: boolean\n    DatasetName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    InputFormat:\n      type: string\n      enum:\n        - CSV\n        - JSON\n        - PARQUET\n        - EXCEL\n    FormatOptions:\n      type: object\n      properties:\n        Json:\n          allOf:\n            - $ref: '#/components/schemas/JsonOptions'\n            - description: Options that define how JSON input is to be interpreted by DataBrew.\n        Excel:\n          allOf:\n            - $ref: '#/components/schemas/ExcelOptions'\n            - description: Options that define how Excel input is to be interpreted by DataBrew.\n        Csv:\n          allOf:\n            - $ref: '#/components/schemas/CsvOptions'\n            - description: Options that define how CSV input is to be interpreted by DataBrew.\n      description: 'Represents a set of options that define the structure of either comma-separated value (CSV), Excel, or JSON input.'\n    Input:\n      type: object\n      properties:\n        S3InputDefinition:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: The Amazon S3 location where the data is stored.\n        DataCatalogInputDefinition:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogInputDefinition'\n            - description: The Glue Data Catalog parameters for the data.\n        DatabaseInputDefinition:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseInputDefinition'\n            - description: Connection information for dataset input files stored in a database.\n      description: 'Represents information on how DataBrew can find data, in either the Glue Data Catalog or Amazon S3.'\n    PathOptions:\n      type: object\n      properties:\n        LastModifiedDateCondition:\n          allOf:\n            - $ref: '#/components/schemas/FilterExpression'\n            - description: 'If provided, this structure defines a date range for matching Amazon S3 objects based on their LastModifiedDate attribute in Amazon S3.'\n        FilesLimit:\n          allOf:\n            - $ref: '#/components/schemas/FilesLimit'\n            - description: 'If provided, this structure imposes a limit on a number of files that should be selected.'\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/PathParametersMap'\n            - description: A structure that maps names of parameters used in the Amazon S3 path of a dataset to their definitions.\n      description: Represents a set of options that define how DataBrew selects files for a given Amazon S3 path in a dataset.\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 200\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateDatasetRequest:\n      type: object\n      required:\n        - Name\n        - Input\n      title: CreateDatasetRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: 'The name of the dataset to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n        Format:\n          allOf:\n            - $ref: '#/components/schemas/InputFormat'\n            - description: The file format of a dataset that is created from an Amazon S3 file or folder.\n        FormatOptions:\n          $ref: '#/components/schemas/FormatOptions'\n        Input:\n          $ref: '#/components/schemas/Input'\n        PathOptions:\n          allOf:\n            - $ref: '#/components/schemas/PathOptions'\n            - description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags to apply to this dataset.\n    EncryptionKeyArn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    EncryptionMode:\n      type: string\n      enum:\n        - SSE-KMS\n        - SSE-S3\n    LogSubscription:\n      type: string\n      enum:\n        - ENABLE\n        - DISABLE\n    MaxCapacity:\n      type: integer\n    MaxRetries:\n      type: integer\n      minimum: 0\n    ProfileConfiguration:\n      type: object\n      properties:\n        DatasetStatisticsConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/StatisticsConfiguration'\n            - description: 'Configuration for inter-column evaluations. Configuration can be used to select evaluations and override parameters of evaluations. When configuration is undefined, the profile job will run all supported inter-column evaluations. '\n        ProfileColumns:\n          allOf:\n            - $ref: '#/components/schemas/ColumnSelectorList'\n            - description: 'List of column selectors. ProfileColumns can be used to select columns from the dataset. When ProfileColumns is undefined, the profile job will profile all supported columns. '\n        ColumnStatisticsConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/ColumnStatisticsConfigurationList'\n            - description: 'List of configurations for column evaluations. ColumnStatisticsConfigurations are used to select evaluations and override parameters of evaluations for particular columns. When ColumnStatisticsConfigurations is undefined, the profile job will profile all supported columns and run all supported evaluations. '\n      description: 'Configuration for profile jobs. Configuration can be used to select columns, do evaluations, and override default parameters of evaluations. When configuration is undefined, the profile job will apply default settings to all supported columns. '\n    Timeout:\n      type: integer\n      minimum: 0\n    JobSample:\n      type: object\n      properties:\n        Mode:\n          allOf:\n            - $ref: '#/components/schemas/SampleMode'\n            - description: '\u003cp\u003eA value that determines whether the profile job is run on the entire dataset or a specified number of rows. This value must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFULL_DATASET - The profile job is run on the entire dataset.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCUSTOM_ROWS - The profile job is run on the number of rows specified in the \u003ccode\u003eSize\u003c/code\u003e parameter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Size:\n          allOf:\n            - $ref: '#/components/schemas/JobSize'\n            - description: \u003cp\u003eThe \u003ccode\u003eSize\u003c/code\u003e parameter is only required when the mode is CUSTOM_ROWS. The profile job is run on the specified number of rows. The maximum value for size is Long.MAX_VALUE.\u003c/p\u003e \u003cp\u003eLong.MAX_VALUE = 9223372036854775807\u003c/p\u003e\n      description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a \u003ccode\u003eJobSample\u003c/code\u003e value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'\n    CreateProfileJobRequest:\n      type: object\n      required:\n        - DatasetName\n        - Name\n        - OutputLocation\n        - RoleArn\n      title: CreateProfileJobRequest\n      properties:\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset that this job is to act upon.\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionKeyArn'\n            - description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n        EncryptionMode:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionMode'\n            - description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with KMS-managed keys.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: 'The name of the job to be created. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n        MaxCapacity:\n          allOf:\n            - $ref: '#/components/schemas/MaxCapacity'\n            - description: The maximum number of nodes that DataBrew can use when the job processes data.\n        MaxRetries:\n          allOf:\n            - $ref: '#/components/schemas/MaxRetries'\n            - description: The maximum number of times to retry the job after a job run fails.\n        OutputLocation:\n          $ref: '#/components/schemas/S3Location'\n        Configuration:\n          allOf:\n            - $ref: '#/components/schemas/ProfileConfiguration'\n            - description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags to apply to this job.\n        Timeout:\n          allOf:\n            - $ref: '#/components/schemas/Timeout'\n            - description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n        JobSample:\n          allOf:\n            - $ref: '#/components/schemas/JobSample'\n            - description: 'Sample configuration for profile jobs only. Determines the number of rows on which the profile job will be executed. If a JobSample value is not provided, the default value will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.'\n    ProjectName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    Sample:\n      type: object\n      required:\n        - Type\n      properties:\n        Size:\n          allOf:\n            - $ref: '#/components/schemas/SampleSize'\n            - description: The number of rows in the sample.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/SampleType'\n            - description: The way in which DataBrew obtains rows from a dataset.\n      description: Represents the sample size and sampling type for DataBrew to use for interactive data analysis.\n    CreateProjectRequest:\n      type: object\n      required:\n        - DatasetName\n        - Name\n        - RecipeName\n        - RoleArn\n      title: CreateProjectRequest\n      properties:\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of an existing dataset to associate this project with.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: 'A unique name for the new project. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n        RecipeName:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of an existing recipe to associate with the project.\n        Sample:\n          $ref: '#/components/schemas/Sample'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed for this request.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags to apply to this project.\n    OutputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Output'\n      minItems: 1\n    DataCatalogOutputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DataCatalogOutput'\n      minItems: 1\n    DatabaseOutputList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DatabaseOutput'\n      minItems: 1\n    RecipeReference:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of the recipe.\n        RecipeVersion:\n          allOf:\n            - $ref: '#/components/schemas/RecipeVersion'\n            - description: 'The identifier for the version for the recipe. '\n      description: Represents the name and version of a DataBrew recipe.\n    CreateRecipeJobRequest:\n      type: object\n      required:\n        - Name\n        - RoleArn\n      title: CreateRecipeJobRequest\n      properties:\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset that this job processes.\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionKeyArn'\n            - description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n        EncryptionMode:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionMode'\n            - description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: 'A unique name for the job. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n        MaxCapacity:\n          allOf:\n            - $ref: '#/components/schemas/MaxCapacity'\n            - description: The maximum number of nodes that DataBrew can consume when the job processes data.\n        MaxRetries:\n          allOf:\n            - $ref: '#/components/schemas/MaxRetries'\n            - description: The maximum number of times to retry the job after a job run fails.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/OutputList'\n            - description: One or more artifacts that represent the output from running the job.\n        DataCatalogOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogOutputList'\n            - description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n        DatabaseOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputList'\n            - description: 'Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write to. '\n        ProjectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: 'Either the name of an existing project, or a combination of a recipe and a dataset to associate with the recipe.'\n        RecipeReference:\n          $ref: '#/components/schemas/RecipeReference'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags to apply to this job.\n        Timeout:\n          allOf:\n            - $ref: '#/components/schemas/Timeout'\n            - description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n    RecipeDescription:\n      type: string\n      maxLength: 1024\n    RecipeStepList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RecipeStep'\n    CreateRecipeRequest:\n      type: object\n      required:\n        - Name\n        - Steps\n      title: CreateRecipeRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/RecipeDescription'\n            - description: A description for the recipe.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: 'A unique name for the recipe. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n        Steps:\n          allOf:\n            - $ref: '#/components/schemas/RecipeStepList'\n            - description: An array containing the steps to be performed by the recipe. Each recipe step consists of one recipe action and (optionally) an array of condition expressions.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags to apply to this recipe.\n    JobNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/JobName'\n      maxItems: 50\n    CronExpression:\n      type: string\n      minLength: 1\n      maxLength: 512\n    ScheduleName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    CreateScheduleRequest:\n      type: object\n      required:\n        - CronExpression\n        - Name\n      title: CreateScheduleRequest\n      properties:\n        JobNames:\n          allOf:\n            - $ref: '#/components/schemas/JobNameList'\n            - description: The name or names of one or more jobs to be run.\n        CronExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: 'The date or dates and time or times when the jobs are to be run. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags to apply to this schedule.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: 'A unique name for the schedule. Valid characters are alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.'\n    CreatedBy:\n      type: string\n    Delimiter:\n      type: string\n      minLength: 1\n      maxLength: 1\n    HeaderRow:\n      type: boolean\n    CsvOutputOptions:\n      type: object\n      properties:\n        Delimiter:\n          allOf:\n            - $ref: '#/components/schemas/Delimiter'\n            - description: A single character that specifies the delimiter used to create CSV job output.\n      description: Represents a set of options that define how DataBrew will write a comma-separated value (CSV) file.\n    DatabaseName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    TableName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    S3TableOutputOptions:\n      type: object\n      required:\n        - Location\n      properties:\n        Location:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: Represents an Amazon S3 location (bucket name and object key) where DataBrew can write output from a job.\n      description: Represents options that specify how and where DataBrew writes the Amazon S3 output generated by recipe jobs.\n    DatabaseTableOutputOptions:\n      type: object\n      required:\n        - TableName\n      properties:\n        TempDirectory:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: Represents an Amazon S3 location (bucket name and object key) where DataBrew can store intermediate results.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseTableName'\n            - description: A prefix for the name of a table DataBrew will create in the database.\n      description: Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.\n    OverwriteOutput:\n      type: boolean\n    GlueConnectionName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    DatabaseTableName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    DatabaseOutputMode:\n      type: string\n      enum:\n        - NEW_TABLE\n    Date:\n      type: string\n      format: date-time\n    LastModifiedBy:\n      type: string\n    Source:\n      type: string\n      enum:\n        - S3\n        - DATA-CATALOG\n        - DATABASE\n    Dataset:\n      type: object\n      required:\n        - Name\n        - Input\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The ID of the Amazon Web Services account that owns the dataset.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The Amazon Resource Name (ARN) of the user who created the dataset.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the dataset was created.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The unique name of the dataset.\n        Format:\n          allOf:\n            - $ref: '#/components/schemas/InputFormat'\n            - description: The file format of a dataset that is created from an Amazon S3 file or folder.\n        FormatOptions:\n          allOf:\n            - $ref: '#/components/schemas/FormatOptions'\n            - description: A set of options that define how DataBrew interprets the data in the dataset.\n        Input:\n          allOf:\n            - $ref: '#/components/schemas/Input'\n            - description: 'Information on how DataBrew can find the dataset, in either the Glue Data Catalog or Amazon S3.'\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The last modification date and time of the dataset.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The Amazon Resource Name (ARN) of the user who last modified the dataset.\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/Source'\n            - description: 'The location of the data for the dataset, either Amazon S3 or the Glue Data Catalog.'\n        PathOptions:\n          allOf:\n            - $ref: '#/components/schemas/PathOptions'\n            - description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags that have been applied to the dataset.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The unique Amazon Resource Name (ARN) for the dataset.\n      description: Represents a dataset that can be processed by DataBrew.\n    DatasetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Dataset'\n    PathParameterName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ParameterType:\n      type: string\n      enum:\n        - Datetime\n        - Number\n        - String\n    DatetimeOptions:\n      type: object\n      required:\n        - Format\n      properties:\n        Format:\n          allOf:\n            - $ref: '#/components/schemas/DatetimeFormat'\n            - description: 'Required option, that defines the datetime format used for a date parameter in the Amazon S3 path. Should use only supported datetime specifiers and separation characters, all literal a-z or A-Z characters should be escaped with single quotes. E.g. \"MM.dd.yyyy-''at''-HH:mm\".'\n        TimezoneOffset:\n          allOf:\n            - $ref: '#/components/schemas/TimezoneOffset'\n            - description: 'Optional value for a timezone offset of the datetime parameter value in the Amazon S3 path. Shouldn''t be used if Format for this parameter includes timezone fields. If no offset specified, UTC is assumed.'\n        LocaleCode:\n          allOf:\n            - $ref: '#/components/schemas/LocaleCode'\n            - description: 'Optional value for a non-US locale code, needed for correct interpretation of some date formats.'\n      description: Represents additional options for correct interpretation of datetime parameters used in the Amazon S3 path of a dataset.\n    DatasetParameter:\n      type: object\n      required:\n        - Name\n        - Type\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/PathParameterName'\n            - description: The name of the parameter that is used in the dataset's Amazon S3 path.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ParameterType'\n            - description: 'The type of the dataset parameter, can be one of a ''String'', ''Number'' or ''Datetime''.'\n        DatetimeOptions:\n          allOf:\n            - $ref: '#/components/schemas/DatetimeOptions'\n            - description: Additional parameter options such as a format and a timezone. Required for datetime parameters.\n        CreateColumn:\n          allOf:\n            - $ref: '#/components/schemas/CreateColumn'\n            - description: Optional boolean value that defines whether the captured value of this parameter should be used to create a new column in a dataset.\n        Filter:\n          allOf:\n            - $ref: '#/components/schemas/FilterExpression'\n            - description: The optional filter expression structure to apply additional matching criteria to the parameter.\n      description: Represents a dataset paramater that defines type and conditions for a parameter in the Amazon S3 path of the dataset.\n    DatetimeFormat:\n      type: string\n      minLength: 2\n      maxLength: 100\n    TimezoneOffset:\n      type: string\n      pattern: '^(Z|[-+](\\d|\\d{2}|\\d{2}:?\\d{2}))$'\n      minLength: 1\n      maxLength: 6\n    LocaleCode:\n      type: string\n      pattern: '^[A-Za-z0-9_\\.#@\\-]+$'\n      minLength: 2\n      maxLength: 100\n    DeleteDatasetRequest:\n      type: object\n      title: DeleteDatasetRequest\n      properties: {}\n    DeleteJobRequest:\n      type: object\n      title: DeleteJobRequest\n      properties: {}\n    DeleteProjectRequest:\n      type: object\n      title: DeleteProjectRequest\n      properties: {}\n    DeleteRecipeVersionRequest:\n      type: object\n      title: DeleteRecipeVersionRequest\n      properties: {}\n    DeleteScheduleRequest:\n      type: object\n      title: DeleteScheduleRequest\n      properties: {}\n    DescribeDatasetRequest:\n      type: object\n      title: DescribeDatasetRequest\n      properties: {}\n    DescribeJobRequest:\n      type: object\n      title: DescribeJobRequest\n      properties: {}\n    JobType:\n      type: string\n      enum:\n        - PROFILE\n        - RECIPE\n    JobRunId:\n      type: string\n      minLength: 1\n      maxLength: 255\n    DescribeJobRunRequest:\n      type: object\n      title: DescribeJobRunRequest\n      properties: {}\n    JobRunErrorMessage:\n      type: string\n    ExecutionTime:\n      type: integer\n    JobRunState:\n      type: string\n      enum:\n        - STARTING\n        - RUNNING\n        - STOPPING\n        - STOPPED\n        - SUCCEEDED\n        - FAILED\n        - TIMEOUT\n    LogGroupName:\n      type: string\n      minLength: 1\n      maxLength: 512\n    StartedBy:\n      type: string\n    DescribeProjectRequest:\n      type: object\n      title: DescribeProjectRequest\n      properties: {}\n    SessionStatus:\n      type: string\n      enum:\n        - ASSIGNED\n        - FAILED\n        - INITIALIZING\n        - PROVISIONING\n        - READY\n        - RECYCLING\n        - ROTATING\n        - TERMINATED\n        - TERMINATING\n        - UPDATING\n    OpenedBy:\n      type: string\n    DescribeRecipeRequest:\n      type: object\n      title: DescribeRecipeRequest\n      properties: {}\n    PublishedBy:\n      type: string\n    DescribeScheduleRequest:\n      type: object\n      title: DescribeScheduleRequest\n      properties: {}\n    ErrorCode:\n      type: string\n      pattern: '^[1-5][0-9][0-9]$'\n    SheetNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SheetName'\n      minItems: 1\n      maxItems: 1\n    SheetIndexList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SheetIndex'\n      minItems: 1\n      maxItems: 1\n    Expression:\n      type: string\n      pattern: '^[\u003c\u003e0-9A-Za-z_:)(!= ]+$'\n      minLength: 4\n      maxLength: 1024\n    MaxFiles:\n      type: integer\n      minimum: 1\n    OrderedBy:\n      type: string\n      enum:\n        - LAST_MODIFIED_DATE\n    Order:\n      type: string\n      enum:\n        - DESCENDING\n        - ASCENDING\n    ValuesMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ConditionValue'\n    Job:\n      type: object\n      required:\n        - Name\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The ID of the Amazon Web Services account that owns the job.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The Amazon Resource Name (ARN) of the user who created the job.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the job was created.\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: A dataset that the job is to process.\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionKeyArn'\n            - description: 'The Amazon Resource Name (ARN) of an encryption key that is used to protect the job output. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/encryption-security-configuration.html\"\u003eEncrypting data written by DataBrew jobs\u003c/a\u003e '\n        EncryptionMode:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionMode'\n            - description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The unique name of the job.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/JobType'\n            - description: '\u003cp\u003eThe job type of the job, which must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROFILE\u003c/code\u003e - A job to analyze a dataset, to determine its size, data types, data distribution, and more.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRECIPE\u003c/code\u003e - A job to apply one or more transformations to a dataset.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The Amazon Resource Name (ARN) of the user who last modified the job.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The modification date and time of the job.\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: The current status of Amazon CloudWatch logging for the job.\n        MaxCapacity:\n          allOf:\n            - $ref: '#/components/schemas/MaxCapacity'\n            - description: The maximum number of nodes that can be consumed when the job processes data.\n        MaxRetries:\n          allOf:\n            - $ref: '#/components/schemas/MaxRetries'\n            - description: The maximum number of times to retry the job after a job run fails.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/OutputList'\n            - description: One or more artifacts that represent output from running the job.\n        DataCatalogOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogOutputList'\n            - description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n        DatabaseOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputList'\n            - description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.\n        ProjectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project that the job is associated with.\n        RecipeReference:\n          allOf:\n            - $ref: '#/components/schemas/RecipeReference'\n            - description: A set of steps that the job runs.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The unique Amazon Resource Name (ARN) for the job.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the role to be assumed for this job.\n        Timeout:\n          allOf:\n            - $ref: '#/components/schemas/Timeout'\n            - description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags that have been applied to the job.\n        JobSample:\n          allOf:\n            - $ref: '#/components/schemas/JobSample'\n            - description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a \u003ccode\u003eJobSample\u003c/code\u003e value isn''t provided, the default value is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'\n      description: Represents all of the attributes of a DataBrew job.\n    JobList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Job'\n    JobRun:\n      type: object\n      properties:\n        Attempt:\n          allOf:\n            - $ref: '#/components/schemas/Attempt'\n            - description: The number of times that DataBrew has attempted to run the job.\n        CompletedOn:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the job completed processing.\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The name of the dataset for the job to process.\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/JobRunErrorMessage'\n            - description: A message indicating an error (if any) that was encountered when the job ran.\n        ExecutionTime:\n          allOf:\n            - $ref: '#/components/schemas/ExecutionTime'\n            - description: 'The amount of time, in seconds, during which a job run consumed resources.'\n        JobName:\n          allOf:\n            - $ref: '#/components/schemas/JobName'\n            - description: The name of the job being processed during this run.\n        RunId:\n          allOf:\n            - $ref: '#/components/schemas/JobRunId'\n            - description: The unique identifier of the job run.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/JobRunState'\n            - description: The current state of the job run entity itself.\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: The current status of Amazon CloudWatch logging for the job run.\n        LogGroupName:\n          allOf:\n            - $ref: '#/components/schemas/LogGroupName'\n            - description: 'The name of an Amazon CloudWatch log group, where the job writes diagnostic messages when it runs.'\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/OutputList'\n            - description: One or more output artifacts from a job run.\n        DataCatalogOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogOutputList'\n            - description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n        DatabaseOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputList'\n            - description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.\n        RecipeReference:\n          allOf:\n            - $ref: '#/components/schemas/RecipeReference'\n            - description: The set of steps processed by the job.\n        StartedBy:\n          allOf:\n            - $ref: '#/components/schemas/StartedBy'\n            - description: 'The Amazon Resource Name (ARN) of the user who initiated the job run. '\n        StartedOn:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: 'The date and time when the job run began. '\n        JobSample:\n          allOf:\n            - $ref: '#/components/schemas/JobSample'\n            - description: 'A sample configuration for profile jobs only, which determines the number of rows on which the profile job is run. If a \u003ccode\u003eJobSample\u003c/code\u003e value isn''t provided, the default is used. The default value is CUSTOM_ROWS for the mode parameter and 20,000 for the size parameter.'\n      description: Represents one run of a DataBrew job.\n    JobRunList:\n      type: array\n      items:\n        $ref: '#/components/schemas/JobRun'\n    MultiLine:\n      type: boolean\n    MaxResults100:\n      type: integer\n      minimum: 1\n      maximum: 100\n    NextToken:\n      type: string\n      minLength: 1\n      maxLength: 2000\n    ListDatasetsRequest:\n      type: object\n      title: ListDatasetsRequest\n      properties: {}\n    ListJobRunsRequest:\n      type: object\n      title: ListJobRunsRequest\n      properties: {}\n    ListJobsRequest:\n      type: object\n      title: ListJobsRequest\n      properties: {}\n    ListProjectsRequest:\n      type: object\n      title: ListProjectsRequest\n      properties: {}\n    ProjectList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Project'\n    ListRecipeVersionsRequest:\n      type: object\n      title: ListRecipeVersionsRequest\n      properties: {}\n    RecipeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Recipe'\n    ListRecipesRequest:\n      type: object\n      title: ListRecipesRequest\n      properties: {}\n    ListSchedulesRequest:\n      type: object\n      title: ListSchedulesRequest\n      properties: {}\n    ScheduleList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Schedule'\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    Operation:\n      type: string\n      pattern: '^[A-Z\\_]+$'\n      minLength: 1\n      maxLength: 128\n    OutputFormat:\n      type: string\n      enum:\n        - CSV\n        - JSON\n        - PARQUET\n        - GLUEPARQUET\n        - AVRO\n        - ORC\n        - XML\n        - TABLEAUHYPER\n    OutputFormatOptions:\n      type: object\n      properties:\n        Csv:\n          allOf:\n            - $ref: '#/components/schemas/CsvOutputOptions'\n            - description: Represents a set of options that define the structure of comma-separated value (CSV) job output.\n      description: Represents a set of options that define the structure of comma-separated (CSV) job output.\n    ParameterValue:\n      type: string\n      minLength: 1\n      maxLength: 32768\n    ParameterMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ParameterValue'\n    ParameterName:\n      type: string\n      pattern: '^[A-Za-z0-9]+$'\n      minLength: 1\n      maxLength: 128\n    Preview:\n      type: boolean\n    Project:\n      type: object\n      required:\n        - Name\n        - RecipeName\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The ID of the Amazon Web Services account that owns the project.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the project was created.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The Amazon Resource Name (ARN) of the user who crated the project.\n        DatasetName:\n          allOf:\n            - $ref: '#/components/schemas/DatasetName'\n            - description: The dataset that the project is to act upon.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The last modification date and time for the project.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The Amazon Resource Name (ARN) of the user who last modified the project.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The unique name of a project.\n        RecipeName:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The name of a recipe that will be developed during a project session.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) for the project.\n        Sample:\n          allOf:\n            - $ref: '#/components/schemas/Sample'\n            - description: 'The sample size and sampling type to apply to the data. If this parameter isn''t specified, then the sample consists of the first 500 rows from the dataset.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags that have been applied to the project.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the role that will be assumed for this project.\n        OpenedBy:\n          allOf:\n            - $ref: '#/components/schemas/OpenedBy'\n            - description: The Amazon Resource Name (ARN) of the user that opened the project for use.\n        OpenDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the project was opened.\n      description: Represents all of the attributes of a DataBrew project.\n    PublishRecipeRequest:\n      type: object\n      title: PublishRecipeRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/RecipeDescription'\n            - description: 'A description of the recipe to be published, for this version of the recipe.'\n    Recipe:\n      type: object\n      required:\n        - Name\n      properties:\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The Amazon Resource Name (ARN) of the user who created the recipe.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the recipe was created.\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The Amazon Resource Name (ARN) of the user who last modified the recipe.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The last modification date and time of the recipe.\n        ProjectName:\n          allOf:\n            - $ref: '#/components/schemas/ProjectName'\n            - description: The name of the project that the recipe is associated with.\n        PublishedBy:\n          allOf:\n            - $ref: '#/components/schemas/PublishedBy'\n            - description: The Amazon Resource Name (ARN) of the user who published the recipe.\n        PublishedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the recipe was published.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/RecipeDescription'\n            - description: The description of the recipe.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/RecipeName'\n            - description: The unique name for the recipe.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) for the recipe.\n        Steps:\n          allOf:\n            - $ref: '#/components/schemas/RecipeStepList'\n            - description: A list of steps that are defined by the recipe.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags that have been applied to the recipe.\n        RecipeVersion:\n          allOf:\n            - $ref: '#/components/schemas/RecipeVersion'\n            - description: '\u003cp\u003eThe identifier for the version for the recipe. Must be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eNumeric version (\u003ccode\u003eX.Y\u003c/code\u003e) - \u003ccode\u003eX\u003c/code\u003e and \u003ccode\u003eY\u003c/code\u003e stand for major and minor version numbers. The maximum length of each is 6 digits, and neither can be negative values. Both \u003ccode\u003eX\u003c/code\u003e and \u003ccode\u003eY\u003c/code\u003e are required, and \"0.0\" isn''t a valid version.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLATEST_WORKING\u003c/code\u003e - the most recent valid version being developed in a DataBrew project.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLATEST_PUBLISHED\u003c/code\u003e - the most recent published version.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents one or more actions to be performed on a DataBrew dataset.\n    RecipeVersionErrorDetail:\n      type: object\n      properties:\n        ErrorCode:\n          allOf:\n            - $ref: '#/components/schemas/ErrorCode'\n            - description: The HTTP status code for the error.\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/RecipeErrorMessage'\n            - description: The text of the error message.\n        RecipeVersion:\n          allOf:\n            - $ref: '#/components/schemas/RecipeVersion'\n            - description: The identifier for the recipe version associated with this error.\n      description: Represents any errors encountered when attempting to delete multiple recipe versions.\n    RecipeErrorMessage:\n      type: string\n    Result:\n      type: string\n    Schedule:\n      type: object\n      required:\n        - Name\n      properties:\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: The ID of the Amazon Web Services account that owns the schedule.\n        CreatedBy:\n          allOf:\n            - $ref: '#/components/schemas/CreatedBy'\n            - description: The Amazon Resource Name (ARN) of the user who created the schedule.\n        CreateDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time that the schedule was created.\n        JobNames:\n          allOf:\n            - $ref: '#/components/schemas/JobNameList'\n            - description: 'A list of jobs to be run, according to the schedule.'\n        LastModifiedBy:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedBy'\n            - description: The Amazon Resource Name (ARN) of the user who last modified the schedule.\n        LastModifiedDate:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time when the schedule was last modified.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the schedule.\n        CronExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: 'The dates and times when the job is to run. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: Metadata tags that have been applied to the schedule.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/ScheduleName'\n            - description: The name of the schedule.\n      description: Represents one or more dates and times when a job is to run.\n    StepIndex:\n      type: integer\n      minimum: 0\n    ViewFrame:\n      type: object\n      required:\n        - StartColumnIndex\n      properties:\n        StartColumnIndex:\n          allOf:\n            - $ref: '#/components/schemas/StartColumnIndex'\n            - description: The starting index for the range of columns to return in the view frame.\n        ColumnRange:\n          allOf:\n            - $ref: '#/components/schemas/ColumnRange'\n            - description: 'The number of columns to include in the view frame, beginning with the \u003ccode\u003eStartColumnIndex\u003c/code\u003e value and ignoring any columns in the \u003ccode\u003eHiddenColumns\u003c/code\u003e list.'\n        HiddenColumns:\n          allOf:\n            - $ref: '#/components/schemas/HiddenColumnList'\n            - description: A list of columns to hide in the view frame.\n      description: Represents the data being transformed during an action.\n    SendProjectSessionActionRequest:\n      type: object\n      title: SendProjectSessionActionRequest\n      properties:\n        Preview:\n          allOf:\n            - $ref: '#/components/schemas/Preview'\n            - description: 'If true, the result of the recipe step will be returned, but not applied.'\n        RecipeStep:\n          $ref: '#/components/schemas/RecipeStep'\n        StepIndex:\n          allOf:\n            - $ref: '#/components/schemas/StepIndex'\n            - description: 'The index from which to preview a step. This index is used to preview the result of steps that have already been applied, so that the resulting view frame is from earlier in the view frame stack.'\n        ClientSessionId:\n          allOf:\n            - $ref: '#/components/schemas/ClientSessionId'\n            - description: A unique identifier for an interactive session that's currently open and ready for work. The action will be performed on this session.\n        ViewFrame:\n          $ref: '#/components/schemas/ViewFrame'\n    SheetIndex:\n      type: integer\n      minimum: 0\n      maximum: 200\n    SheetName:\n      type: string\n      minLength: 1\n      maxLength: 31\n    StartJobRunRequest:\n      type: object\n      title: StartJobRunRequest\n      properties: {}\n    StartProjectSessionRequest:\n      type: object\n      title: StartProjectSessionRequest\n      properties:\n        AssumeControl:\n          allOf:\n            - $ref: '#/components/schemas/AssumeControl'\n            - description: 'A value that, if true, enables you to take control of a session, even if a different client is currently accessing the project.'\n    Statistic:\n      type: string\n      pattern: '^[A-Z\\_]+$'\n      minLength: 1\n      maxLength: 128\n    StatisticList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Statistic'\n      minItems: 1\n    StatisticOverride:\n      type: object\n      required:\n        - Statistic\n        - Parameters\n      properties:\n        Statistic:\n          allOf:\n            - $ref: '#/components/schemas/Statistic'\n            - description: The name of an evaluation\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/ParameterMap'\n            - description: A map that includes overrides of an evaluation’s parameters.\n      description: 'Override of a particular evaluation for a profile job. '\n    StatisticOverrideList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StatisticOverride'\n      minItems: 1\n    StopJobRunRequest:\n      type: object\n      title: StopJobRunRequest\n      properties: {}\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: One or more tags to be assigned to the resource.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateDatasetRequest:\n      type: object\n      required:\n        - Input\n      title: UpdateDatasetRequest\n      properties:\n        Format:\n          allOf:\n            - $ref: '#/components/schemas/InputFormat'\n            - description: The file format of a dataset that is created from an Amazon S3 file or folder.\n        FormatOptions:\n          $ref: '#/components/schemas/FormatOptions'\n        Input:\n          $ref: '#/components/schemas/Input'\n        PathOptions:\n          allOf:\n            - $ref: '#/components/schemas/PathOptions'\n            - description: A set of options that defines how DataBrew interprets an Amazon S3 path of the dataset.\n    UpdateProfileJobRequest:\n      type: object\n      required:\n        - OutputLocation\n        - RoleArn\n      title: UpdateProfileJobRequest\n      properties:\n        Configuration:\n          allOf:\n            - $ref: '#/components/schemas/ProfileConfiguration'\n            - description: 'Configuration for profile jobs. Used to select columns, do evaluations, and override default parameters of evaluations. When configuration is null, the profile job will run with default settings.'\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionKeyArn'\n            - description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n        EncryptionMode:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionMode'\n            - description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n        MaxCapacity:\n          allOf:\n            - $ref: '#/components/schemas/MaxCapacity'\n            - description: The maximum number of compute nodes that DataBrew can use when the job processes data.\n        MaxRetries:\n          allOf:\n            - $ref: '#/components/schemas/MaxRetries'\n            - description: The maximum number of times to retry the job after a job run fails.\n        OutputLocation:\n          $ref: '#/components/schemas/S3Location'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n        Timeout:\n          allOf:\n            - $ref: '#/components/schemas/Timeout'\n            - description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n        JobSample:\n          allOf:\n            - $ref: '#/components/schemas/JobSample'\n            - description: 'Sample configuration for Profile Jobs only. Determines the number of rows on which the Profile job will be executed. If a JobSample value is not provided for profile jobs, the default value will be used. The default value is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.'\n    UpdateProjectRequest:\n      type: object\n      required:\n        - RoleArn\n      title: UpdateProjectRequest\n      properties:\n        Sample:\n          $ref: '#/components/schemas/Sample'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the IAM role to be assumed for this request.\n    UpdateRecipeJobRequest:\n      type: object\n      required:\n        - RoleArn\n      title: UpdateRecipeJobRequest\n      properties:\n        EncryptionKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionKeyArn'\n            - description: The Amazon Resource Name (ARN) of an encryption key that is used to protect the job.\n        EncryptionMode:\n          allOf:\n            - $ref: '#/components/schemas/EncryptionMode'\n            - description: '\u003cp\u003eThe encryption mode for the job, which can be one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-KMS\u003c/code\u003e - Server-side encryption with keys managed by KMS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSSE-S3\u003c/code\u003e - Server-side encryption with keys managed by Amazon S3.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        LogSubscription:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscription'\n            - description: 'Enables or disables Amazon CloudWatch logging for the job. If logging is enabled, CloudWatch writes one log stream for each job run.'\n        MaxCapacity:\n          allOf:\n            - $ref: '#/components/schemas/MaxCapacity'\n            - description: The maximum number of nodes that DataBrew can consume when the job processes data.\n        MaxRetries:\n          allOf:\n            - $ref: '#/components/schemas/MaxRetries'\n            - description: The maximum number of times to retry the job after a job run fails.\n        Outputs:\n          allOf:\n            - $ref: '#/components/schemas/OutputList'\n            - description: 'One or more artifacts that represent the output from running the job. '\n        DataCatalogOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DataCatalogOutputList'\n            - description: One or more artifacts that represent the Glue Data Catalog output from running the job.\n        DatabaseOutputs:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseOutputList'\n            - description: Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be assumed when DataBrew runs the job.\n        Timeout:\n          allOf:\n            - $ref: '#/components/schemas/Timeout'\n            - description: The job's timeout in minutes. A job that attempts to run longer than this timeout period ends with a status of \u003ccode\u003eTIMEOUT\u003c/code\u003e.\n    UpdateRecipeRequest:\n      type: object\n      title: UpdateRecipeRequest\n      properties:\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/RecipeDescription'\n            - description: A description of the recipe.\n        Steps:\n          allOf:\n            - $ref: '#/components/schemas/RecipeStepList'\n            - description: 'One or more steps to be performed by the recipe. Each step consists of an action, and the conditions under which the action should succeed.'\n    UpdateScheduleRequest:\n      type: object\n      required:\n        - CronExpression\n      title: UpdateScheduleRequest\n      properties:\n        JobNames:\n          allOf:\n            - $ref: '#/components/schemas/JobNameList'\n            - description: The name or names of one or more jobs to be run for this schedule.\n        CronExpression:\n          allOf:\n            - $ref: '#/components/schemas/CronExpression'\n            - description: 'The date or dates and time or times when the jobs are to be run. For more information, see \u003ca href=\"https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html\"\u003eCron expressions\u003c/a\u003e in the \u003ci\u003eGlue DataBrew Developer Guide\u003c/i\u003e.'\n    ValueReference:\n      type: string\n      pattern: '^:[A-Za-z0-9_]+$'\n      minLength: 2\n      maxLength: 128\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@20502d3674db5fa060375c4cf54d52234b351baf/-/blob/APIs/amazonaws.com/databrew/2017-07-25/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/20502d3674db5fa060375c4cf54d52234b351baf/APIs/amazonaws.com/databrew/2017-07-25/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:172700: duplicate path: \"/tags/{ResourceArn}#tagKeys\""
}