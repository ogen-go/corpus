{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stichtingsem/technology-prototype"
		},
		"file": {
			"name": "sisdata.v1.yaml",
			"size": 0,
			"path": "reference/sisdata.v1.yaml",
			"byteSize": 17128,
			"content": "openapi: 3.0.0\ninfo:\n  title: Student Information System API\n  version: '1.0'\n  description: |\n    This is an API provided by the SIS in the SEM ecosystem, and is designed to enable a SIS to make the core information about teachers, learners, subjects and groups available to the rest of the ecosystem in a security and privacy cocnious way.\n\n    # Events\n\n    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.\n\n    Events generated by the SIS API are connected to state changes for key entities:\n\n     - `sis.student` - A student has been created or modified   \n     - `sis.student-delivery` - A students delivery information has been created or modified     \n     - `sis.teacher` - A teacher has been created or modified\n     - `sis.group` - A group has been modified (this is an aggregate event) - this means that basic metadata changed, a student added/removed, a teacher added or removed or a student subject choice modified within a group.     \n     \n    # Privacy and Scopes\n     \n    Data from the SIS can be sensitive, and the events and APIs available to a requesting service depend on the scopes requested and approved during setup.  The following scopes exist for the SIS, and map to the following entities and attributes:\n\n    `sis.student-teacher-group`\n\n    This scope enables a requestor to get basic information about a user (student or teacher) to enable that platform to present appropriate information or a basic profile for them and understand what groups or subjects they are enrolled in or teach.\n\n    ### Event Access\n\n    |Events|Event Data|Rationale|\n    |------|---------|\n    |sis.student|id, eckId, name, school, groups, subjects|To enable the requesting service to maintain a copy of basic (non-PII) student profile information|\n    |sis.teacher|id, eckId, name, school, groups|To enable the requesting service to maintain a copy of basic (non-PII) teacher information|\n\n    ### Data Visibility\n\n    |Entity|Fields|Rationale|\n    |------|---------|-----|\n    |Student|id, eckId, name, school, groups, subjects|To enable the requesting service to maintain a copy of basic (non-PII) student profile information|\n    |Teacher|id, eckId, name, school, groups|To enable the requesting service to maintain a copy of basic (non-PII) teacher information|\n\n    `sis.student-teacher-delivery`\n\n    This scope enables a requestor to get additional information required to support the physical delivery of books or other material directly to an individual.  This exchange includes PII, and would be requested in addition the basic `sis.student-teacher-group` scope, so the following should be read as additive to that scope.\n\n    We have a principle to never send PII in events or store in an event log, so this event is only a notification.  The subscribing system must call back to retrieve the information.\n     \n    > NOTE: Do we never deliver anything to teachers?\n\n    ### Event Access\n\n    |Events|Event Data|Rationale|\n    |------|---------|\n    |sis.student-delivery|id, eckId|This is a notification only, as there should be no PII sent in events - only accessed by API calls.|\n\n    ### Data Visibility\n\n    |Entity|Fields|Rationale|\n    |------|---------|-----|\n    |Student Delivery|dateOfBirth, emailAddress, postcode, houseNumber, firstname, surname, tussenvoegsel|To enable the requesting service to maintain a copy of contact and delivery information|\n  contact:\n    name: SEM\n    url: 'https://stichtingsem.org/'\nservers:\n  - url: 'https://example.stichtingsem.org/api'\n    description: sisdata\ncomponents:\n  schemas:\n    school:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n      title: ''\n      x-tags:\n        - school\n    student:\n      type: object\n      x-tags:\n        - student\n        - school\n        - group\n        - subject\n      title: ''\n      description: Access to non-sensitive student information for us in an LMS or LA.\n      properties:\n        id:\n          type: string\n        schemaVersion:\n          type: integer\n          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'\n        eckid:\n          type: string\n        firstname:\n          type: string\n        surname:\n          type: string\n        surnamePrefix:\n          type: string\n        schoolYear:\n          type: string\n          description: A reference to the school year for this student.\n        school:\n          $ref: '#/components/schemas/school'\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/groupReference'\n        subjectChoices:\n          type: array\n          items:\n            $ref: '#/components/schemas/subject-choice'\n      required:\n        - id\n        - school\n      x-examples:\n        example-Student:\n          id: fdff8a426c0a4e9996d70260de623add\n          schemaVersion: 0\n          firstname: Kim\n          surname: Abrahamjan\n          surnamePrefix: de\n          schoolYear: 2020-2021\n          school:\n            id: '12345'\n            name: TestCollege\n          groups:\n            - id: ae0119c7780f40b482f27ef7f3edc1e2\n              name: W2C MM\n          subjectChoices:\n            - id: 65aad9b5acf74ab1a677095bb051fe91\n              startDate: '2020-08-01'\n              subjectCode: '0131'\n              schoolSubjectName: Aardrijkskunde\n              level: HAVO-2\n              courseCode: W_HAVO\n              courseYear: 2\n    studentReference:\n      type: object\n      x-tags:\n        - student\n      title: ''\n      description: Access to non-sensitive student information for us in an LMS or LA.\n      properties:\n        id:\n          type: string\n        eckid:\n          type: string\n        firstname:\n          type: string\n        surname:\n          type: string\n        surnamePrefix:\n          type: string\n      required:\n        - id\n    teacher:\n      type: object\n      x-tags:\n        - teacher\n        - group\n        - school\n      title: ''\n      properties:\n        id:\n          type: string\n        schemaVersion:\n          type: integer\n          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'\n        eckid:\n          type: string\n        firstname:\n          type: string\n        surname:\n          type: string\n        surnamePrefix:\n          type: string\n        schoolYear:\n          type: string\n          description: A reference to the school year for this teacher.\n        school:\n          $ref: '#/components/schemas/school'\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/groupReference'\n          description: |\n            Do we need this? This information is already available in groups. It will not be available in the beginning of the school year when the rosters are not complete. Neither LMS or LA need it to function.\n      required:\n        - id\n        - school\n      x-examples:\n        example-1:\n          id: 407b751eb2a44ad98ae3f7336c160fde\n          schemaVersion: 0\n          firstname: Anja\n          surname: Jong\n          surnamePrefix: de\n          schoolYear: 2020-2021\n          school:\n            id: '1234'\n            name: TestCollege\n          groups:\n            - id: 83302cc7309c497c9530537ac50248b3\n              name: W2C MM\n    teacherReference:\n      type: object\n      x-tags:\n        - teacher\n      title: ''\n      properties:\n        id:\n          type: string\n        eckid:\n          type: string\n        firstname:\n          type: string\n        surname:\n          type: string\n        surnamePrefix:\n          type: string\n      required:\n        - id\n    group:\n      type: object\n      x-examples:\n        example-1:\n          id: ae0119c7780f40b482f27ef7f3edc1e2\n          schemaVersion: 0\n          name: W2C MM\n          school:\n            id: '12345'\n            name: TestCollege\n          students:\n            - id: ''\n              firstname: Kim\n              surname: Abrahamjan\n              surnamePrefix: de\n          teachers:\n            - id: 407b751eb2a44ad98ae3f7336c160fde\n              firstname: Anja\n              surname: Jong\n              surnamePrefix: de\n          subjectChoices:\n            - id: 65aad9b5acf74ab1a677095bb051fe91\n              startDate: '2020-08-01'\n              subjectCode: '0131'\n              schoolSubjectName: Aardrijkskunde\n              level: HAVO-2\n              courseCode: W_HAVO\n              courseYear: 2\n          schoolYear: 2020-2021\n      x-tags:\n        - group\n        - student\n        - teacher\n        - subject\n        - school\n      description: A group or other grouping of students.\n      title: group\n      properties:\n        id:\n          type: string\n        schemaVersion:\n          type: integer\n          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'\n          default: 0\n        name:\n          type: string\n        school:\n          $ref: '#/components/schemas/school'\n        students:\n          type: array\n          items:\n            $ref: '#/components/schemas/studentReference'\n        teachers:\n          type: array\n          items:\n            $ref: '#/components/schemas/teacherReference'\n        subjectChoices:\n          type: array\n          items:\n            $ref: '#/components/schemas/subject-choice'\n        schoolYear:\n          type: string\n          description: A reference to the school year for this group.\n      required:\n        - id\n        - name\n        - school\n    groupReference:\n      type: object\n      x-examples: {}\n      x-tags:\n        - group\n      description: ''\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n    subject-choice:\n      type: object\n      title: ''\n      x-tags:\n        - subject\n        - student\n      x-examples: {}\n      properties:\n        id:\n          type: string\n        startDate:\n          type: string\n          format: date\n          description: Start of this subject for the student. Date cannot be in the future.\n        endDate:\n          type: string\n          format: date\n          description: Start of this subject for the student. Date cannot be in the future. null if not ended\n        subjectCode:\n          type: string\n          description: 'Officiële elementcode, bron: Ministerie van OCW, like https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'\n        schoolSubjectName:\n          type: string\n          description: Optional name of subject if different within specific school.\n        level:\n          type: string\n          description: 'Official Level, followed by courseyear. example ''havo-1, vwo-2, etc.'''\n        courseCode:\n          type: string\n          description: 'School code of the Level/couse/study. example ''Technasium'' This gives schools a way to name the course how they want it, while we still have a link with the official level'\n        courseYear:\n          type: integer\n          description: Learning year\n      required:\n        - id\n        - schoolSubjectName\n    subject-choices:\n      type: array\n      items:\n        $ref: '#/components/schemas/subject-choice'\n      x-tags:\n        - subject-choice\n      description: List of possible subject choices\n    student-delivery:\n      title: student-delivery\n      type: object\n      description: Access to sensitive delivery information for a student.\n      x-tags:\n        - student\n        - student-delivery\n      properties:\n        id:\n          type: string\n        schemaVersion:\n          type: integer\n          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'\n        eckid:\n          type: string\n        dateOfBirth:\n          type: string\n          format: date\n        emailAddress:\n          type: string\n        postcode:\n          type: string\n        houseNumber:\n          type: string\n        firstname:\n          type: string\n          description: |\n            Used for delivery\n        surname:\n          type: string\n          description: |\n            Used for delivery\n        surnamePrefix:\n          type: string\n          description: Used for delivery\n  securitySchemes:\n    APIKey:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: ''\n          refreshUrl: ''\n          scopes:\n            sis.student-teacher-group: 'Access to basic student, teacher and group information.'\n            sis.student-teacher-delivery: Access to sensitive student and teacher delivery information.\npaths:\n  '/student/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Get Student information by ID\n      tags:\n        - student\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/student'\n      operationId: get-student-id\n      description: 'Retrieve basic student information, including their groups and subject choices.'\n      security:\n        - APIKey:\n            - sis.student-teacher-group\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: schoolYear\n          description: 'Request data for this student about a specific school year, if not provided, default to current.'\n  '/teacher/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Get Teacher by ID\n      tags:\n        - teacher\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/teacher'\n      operationId: get-teacher-id\n      security:\n        - APIKey:\n            - sis.student-teacher-group\n      description: 'Retrieve basic teacher information including the groups they teach.  '\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: schoolYear\n          description: 'Request data for this teacher about a specific school year, if not provided, default to current.'\n  '/group/{id}':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Get group by ID\n      tags:\n        - group\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/group'\n      operationId: get-group-id\n      description: 'Retrieve information about a specific group by ID, this includes the teachers, students and their subject choices.'\n      security:\n        - APIKey:\n            - sis.student-teacher-group\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: schoolYear\n          description: 'Request data for this group about a specific school year, if not provided, default to current.'\n  '/student/{id}/delivery-information':\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n    get:\n      summary: Get Student delivery information by ID\n      tags:\n        - student\n        - student-delivery\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/student-delivery'\n      operationId: get-student-id-delivery-information\n      description: Retrieve privacy sensitive delivery information by ID - this entity is only available to a specific scope.\n      security:\n        - APIKey:\n            - sis.student-teacher-delivery\n  /subjectchoices:\n    parameters: []\n    get:\n      summary: GET Subject choices for next years\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subject-choices'\n      operationId: get-subjectchoices-schoolyear\n      security:\n        - APIKey:\n            - sis.student-teacher-group\n      description: Get possible subject choices for next schoolyears. User to create LML lists in MP while exact student / subjectchoices re not available\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: schoolYear\n          description: request this list for a particular schoolyear\ntags:\n  - name: group\n  - name: student\n  - name: student-delivery\n  - name: teacher\n",
			"canonicalURL": "/github.com/stichtingsem/technology-prototype@3bf27b60f5566865821b0496df27c73dc3e3c5e2/-/blob/reference/sisdata.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stichtingsem/technology-prototype/blob/3bf27b60f5566865821b0496df27c73dc3e3c5e2/reference/sisdata.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/student/{id}\": at 1:11474: get: operation \"get-student-id\": at 1:11481: security: parse security scheme \"APIKey\": at 1:6849: oauth2: at 1:6858: flow \"implicit\": at 1:6870: \"authorizationUrl\" MUST be in the form of a URL: parse \"\": empty url"
}