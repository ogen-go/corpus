{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "dgidb/openapi.yml",
			"byteSize": 64419,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: help@biothings.io\n    name: BioThings Team\n    x-id: https://github.com/biothings\n    x-role: responsible developers\n  description: Documentation of the BioThings DGIdb query web services.\n  termsOfService: https://biothings.io/about\n  title: BioThings DGIdb API\n  version: '4.2.0'\n  x-translator:\n    infores: \"infores:biothings-dgidb\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/dgidb\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/dgidb\n  x-maturity: production\ntags:\n- name: gene\n- name: chemical\n- name: association\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\n- name: biothings_graph\npaths:\n  \"/association/{id}\":\n    get:\n      parameters:\n      - name: id\n        in: path\n        required: true\n        example: \"1fb7c7f0ef333cd2\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: \"Success\"\n      #     content:\n      #       application/json:\n      #         schema:\n      #           $ref: '#/components/schemas/Association'\n      #   '404':\n      #     description: A response indicating an unknown association ID\n      # summary: Retrieve association objects based on ID\n      tags:\n      - association\n  \"/association\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              ids:\n              - \"1fb7c7f0ef333cd2\"\n              - \"f91c68378f89f4c8\"\n            schema:\n              type: object\n              properties:\n                ids:\n                  description: 'multiple Association IDs separated by comma. Note that\n                    currently we only take the input ids up to 1000 maximum, the rest\n                    will be omitted. Type: string (list). Max: 1000.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: \"Success\"\n      tags:\n      - association\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/dev\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/search\"\n      - \"$ref\": \"#/components/parameters/prefix\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data fields available from a record\n      tags:\n      - metadata\n  \"/query\":\n    get:\n      parameters:\n      - name: q\n        description: Query string.\n        in: query\n        required: true\n        example: \"subject.CHEMBL_COMPOUND:CHEMBL1017\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/aggs\"\n      - \"$ref\": \"#/components/parameters/facet_size\"\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/userquery\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/explain\"\n      - \"$ref\": \"#/components/parameters/fetch_all\"\n      - \"$ref\": \"#/components/parameters/scroll_id\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make queries and return matching gene hits. Supports JSONP and CORS\n      #   as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - name: q\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: scopes\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n            default:\n            - _id\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              q:\n              - \"CHEMBL266510\"\n              - \"CHEMBL1200833\"\n              scopes:\n              - \"subject.CHEMBL_COMPOUND\"\n            schema:\n              type: object\n              properties:\n                q:\n                  type: array\n                  items:\n                    type: string\n                scopes:\n                  type: array\n                  items:\n                    type: string\n                from:\n                  type: integer\n                sort:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make batch gene queries and return matching gene hits\n      tags:\n      - query\n      ## 12 sets (24 operations)\n      x-bte-kgs-operations:\n      - $ref: '#/components/x-bte-kgs-operations/activator'\n      - $ref: '#/components/x-bte-kgs-operations/activator-rev'\n      - $ref: '#/components/x-bte-kgs-operations/agonist'\n      - $ref: '#/components/x-bte-kgs-operations/agonist-rev'\n      - $ref: '#/components/x-bte-kgs-operations/allosteric_modulator'\n      - $ref: '#/components/x-bte-kgs-operations/allosteric_modulator-rev'\n      - $ref: '#/components/x-bte-kgs-operations/antagonist'\n      - $ref: '#/components/x-bte-kgs-operations/antagonist-rev'\n      - $ref: '#/components/x-bte-kgs-operations/antibody'\n      - $ref: '#/components/x-bte-kgs-operations/antibody-rev'\n## commenting out because there's only 4 records for this set of operations\n      # - $ref: '#/components/x-bte-kgs-operations/antisense_oligonucleotide'\n      # - $ref: '#/components/x-bte-kgs-operations/antisense_oligonucleotide-rev'\n      - $ref: '#/components/x-bte-kgs-operations/blocker'\n      - $ref: '#/components/x-bte-kgs-operations/blocker-rev'\n## commenting out because there's only 1 record for this set of operations\n      # - $ref: '#/components/x-bte-kgs-operations/inducer'\n      # - $ref: '#/components/x-bte-kgs-operations/inducer-rev'\n      - $ref: '#/components/x-bte-kgs-operations/inhibitor'\n      - $ref: '#/components/x-bte-kgs-operations/inhibitor-rev'\n## commenting out because there's only 1 record for this set of operations\n      # - $ref: '#/components/x-bte-kgs-operations/inhibitory_allosteric_modulator'\n      # - $ref: '#/components/x-bte-kgs-operations/inhibitory_allosteric_modulator-rev'\n      - $ref: '#/components/x-bte-kgs-operations/inverse_agonist'\n      - $ref: '#/components/x-bte-kgs-operations/inverse_agonist-rev'\n      - $ref: '#/components/x-bte-kgs-operations/modulator'\n      - $ref: '#/components/x-bte-kgs-operations/modulator-rev'\n## commenting out because there's only 5 records for this set of operations\n      # - $ref: '#/components/x-bte-kgs-operations/negative_modulator'\n      # - $ref: '#/components/x-bte-kgs-operations/negative_modulator-rev'\n      - $ref: '#/components/x-bte-kgs-operations/no_dgidb_relationship'\n      - $ref: '#/components/x-bte-kgs-operations/no_dgidb_relationship-rev'\n      - $ref: '#/components/x-bte-kgs-operations/partial_agonist'\n      - $ref: '#/components/x-bte-kgs-operations/partial_agonist-rev'\n      - $ref: '#/components/x-bte-kgs-operations/positive_modulator'\n      - $ref: '#/components/x-bte-kgs-operations/positive_modulator-rev'\n## commenting out because there's only 1 record for this set of operations\n      # - $ref: '#/components/x-bte-kgs-operations/suppressor'\n      # - $ref: '#/components/x-bte-kgs-operations/suppressor-rev'\n## commenting out because there's only 8 records for this set of operations\n      # - $ref: '#/components/x-bte-kgs-operations/vaccine'\n      # - $ref: '#/components/x-bte-kgs-operations/vaccine-rev'\ncomponents:\n  parameters:\n    _sorted:\n      name: _sorted\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: true\n    _source:\n      name: _source\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    aggs:\n      name: aggs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    allow_null:\n      name: allow_null\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    always_list:\n      name: always_list\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    dev:\n      name: dev\n      in: query\n      required: false\n      schema:\n        type: boolean\n    dotfield:\n      name: dotfield\n      in: query\n      required: false\n      schema:\n        type: boolean\n    explain:\n      name: explain\n      in: query\n      required: false\n      schema:\n        type: boolean\n    facet_size:\n      name: facet_size\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 10\n    fetch_all:\n      name: fetch_all\n      in: query\n      required: false\n      schema:\n        type: boolean\n    format:\n      name: format\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      required: false\n      schema:\n        type: string\n        default: json\n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n    prefix:\n      name: prefix\n      in: query\n      required: false\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      required: false\n      schema:\n        type: boolean\n    rawquery:\n      name: rawquery\n      in: query\n      required: false\n      schema:\n        type: boolean\n    scroll_id:\n      name: scroll_id\n      in: query\n      required: false\n      schema:\n        type: string\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n    size:\n      name: size\n      description: \"default: 10 objects/records in response\"\n      in: query\n      required: false\n      schema:\n        type: integer\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    userquery:\n      name: userquery\n      in: query\n      required: false\n      schema:\n        type: string\n  # schemas:\n  #   Association:\n  #     properties:\n  #       _id:\n  #         type: string\n  #     required:\n  #     - _id\n  #     type: object\n  #   ErrorResult:\n  #     properties:\n  #       message:\n  #         type: string\n  #       success:\n  #         type: boolean\n  #     type: object\n  #   QueryPOSTResult:\n  #     items:\n  #       allOf:\n  #       - $ref: '#/components/schemas/Association'\n  #       - properties:\n  #           _score:\n  #             format: float\n  #             type: number\n  #           query:\n  #             type: string\n  #         type: object\n  #     type: array\n  #   QueryResult:\n  #     properties:\n  #       hits:\n  #         items:\n  #           $ref: '#/components/schemas/Association'\n  #         type: array\n  #       max_score:\n  #         format: float\n  #         type: number\n  #       took:\n  #         type: integer\n  #       total:\n  #         type: integer\n  #     type: object\n  #   int64_or_array:\n  #     oneOf:\n  #     - items:\n  #         format: int64\n  #         type: integer\n  #       type: array\n  #     - format: int64\n  #       type: integer\n  #   string_or_array:\n  #     oneOf:\n  #     - items:\n  #         type: string\n  #       type: array\n  #     - type: string\n  x-bte-kgs-operations:\n  ## - future: we could ingest subject.drug_name and object.SYMBOL fields\n  ## - we will only use records with subject.CHEMBL_COMPOUND\n  ##   - only 154 records don't have this field: https://pending.biothings.io/dgidb/query?q=NOT%20_exists_:subject.CHEMBL_COMPOUND\n  ##     those drugs may have had a name or wikidata ID that couldn't be mapped to chembl in MyChem. \n  ## - all records have object.NCBIGene\n  ## - for interaction_claim_source info, see https://dgidb.org/sources \n  ## - for interaction_types info, see https://dgidb.org/interaction_types\n  ##   Most records did not have a value for that column. We put the value to \"not_applicable\" in those cases...\n  ## - for interaction_group_score info, see https://dgidb.org/score\n  ## - only some records have PMIDs. all records have interaction_group_score, interaction_claim_source\n  ## - in the future, could edit parser + queries to handle prefixes\n  ## - joinSafe is only needed if the delimiter isn't a comma\n    activator:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:activator\n    ## 195 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"activator\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:activator and CHEMBL.MECHANISM:activator map to the mixin positively_regulates (under regulates)\n        ##                    vs GAMMA:activator maps to increases_activity_of (under affects)\n        ## CX decided to use the entity-entity version of positively_regulates, after reading some triples' linked pubmed papers\n        predicate: entity_positively_regulates_entity\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL266510\"   ## FLINDOKALNER\n        #     oneOutput: \"NCBIGene:9132\"               ## KCNQ4\n    activator-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"activator\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:activator and CHEMBL.MECHANISM:activator map to the mixin positively_regulates (under regulates)\n        ##                    vs GAMMA:activator maps to increases_activity_of (under affects)\n        ## CX decided to use the entity-entity version of positively_regulates, after reading some triples' linked pubmed papers\n        predicate: entity_positively_regulated_by_entity\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:2983\"                 ## GUCY1B1\n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL730   ## NITROGLYCERIN\n    agonist:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:agonist\n    ## 2234 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"agonist\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:agonist maps to this predicate\n        predicate: increases_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL1200833\"   ## DIPIVEFRIN HYDROCHLORIDE\n        #     oneOutput: \"NCBIGene:155\"                 ## ADRB3\n    ## some records have multiple interaction_types\n    ## 1 record, agonist + allosteric_modulator: https://pending.biothings.io/dgidb/query?q=association.interaction_types:agonist%20AND%20association.interaction_types:allosteric_modulator\n    ## 17 records, agonist + antagonist: https://pending.biothings.io/dgidb/query?q=association.interaction_types:agonist%20AND%20association.interaction_types:antagonist\n    agonist-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"agonist\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:agonist maps to the inverse of this predicate\n        predicate: activity_increased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:1814\"                     ## DRD3\n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2146110   ## SARIZOTAN HYDROCHLORIDE\n    allosteric_modulator:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:allosteric_modulator\n    ## 170 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"allosteric_modulator\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:allosteric_modulator maps to this predicate\n        predicate: affects_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL3305985\"   ## ALCURONIUM\n        #     oneOutput: \"NCBIGene:1132\"                ## CHRM4\n    allosteric_modulator-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"allosteric_modulator\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:allosteric_modulator maps to the inverse of this predicate\n        predicate: activity_affected_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:207\"                     ## AKT1\n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1079175  ## MK-2206\n    antagonist:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antagonist\n    ## 2330 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"antagonist\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:antagonist maps to this predicate\n        predicate: decreases_activity_of\n        ## CX: confusion over whether to use a \"negatively_regulates\" (what is being done / the process) vs\n        ##     \"decreases activity of\" (the effect)\n        ## - def https://dgidb.org/interaction_types and https://en.wikipedia.org/wiki/Receptor_antagonist: \n        ##   antagonists do bind to the protein\n        ##   They often \"don't induce the protein to do a thing\".\n        ##   Instead they block the agonist or signal / dampen the response to the agonist or signal...\n        ##   think of the drug that blocks a binding site so the body's signals can't bind as often, to reduce overactivity\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL3545038\"   ## S-237648\n        #     oneOutput: \"NCBIGene:4889\"                ## NPY5R\n    ## some records have multiple interaction_types\n    ## 1 record, antagonist + allosteric_modulator: https://pending.biothings.io/dgidb/query?q=association.interaction_types:allosteric_modulator%20AND%20association.interaction_types:antagonist\n    antagonist-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"antagonist\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:antagonist maps to the inverse of this predicate\n        predicate: activity_decreased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:185\"                     ## AGTR1\n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1017     ## TELMISARTAN\n    antibody:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antibody\n    ## 222 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"antibody\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## biolink 2.2.8: using the mapping for GAMMA:antibody, rather than mapping for the relation (molecularly_interacts_with)\n        predicate: directly_interacts_with\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL4297570\"   ## AMP-224\n        #     oneOutput: \"NCBIGene:80380\"               ## PDCD1LG2\n    antibody-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"antibody\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## biolink 2.2.8: using the mapping for GAMMA:antibody, rather than mapping for the relation (molecularly_interacts_with)\n        predicate: directly_interacts_with\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:56963\"                     ## RGMA\n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL4297743    ## ELEZANUMAB\n## commenting out because there's only 4 records for this set of operations\n    # antisense_oligonucleotide:\n    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antisense_oligonucleotide\n    # ## 4 records\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"antisense_oligonucleotide\"]') }} ],\n    #           \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         object.NCBIGene,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     ## for biolink 2.2.8, DGIdb:antisense_oligonucleotide maps to this predicate\n    #     predicate: decreases_expression_of\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n    #     # testExamples:\n    #     #   - qInput: \"CHEMBL.COMPOUND:CHEMBL2108309\"   ## CUSTIRSEN\n    #     #     oneOutput: \"NCBIGene:1191\"                ## CLU\n    # antisense_oligonucleotide-rev:\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"antisense_oligonucleotide\"]') }} ],\n    #           \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     ## for biolink 2.2.8, DGIdb:antisense_oligonucleotide maps to the inverse of this predicate\n    #     predicate: expression_decreased_by\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n    #     # testExamples:\n    #     #   - qInput: \"NCBIGene:332\"                     ## BIRC5\n    #     #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2219774  ## GATAPARSEN\n    blocker:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:blocker\n    ## 1134 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"blocker\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## CX: has the same issue as \"antagonist\"\n        ## - def https://dgidb.org/interaction_types and https://en.wikipedia.org/wiki/Receptor_antagonist: \n        ## for biolink 2.2.8, DGIdb:blocker maps to this predicate\n        predicate: decreases_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL91\"   ## MICONAZOLE\n        #     oneOutput: \"NCBIGene:7226\"           ## TRPM2\n    ## some records have multiple interaction_types\n    ## 2 records, blocker + activator: https://pending.biothings.io/dgidb/query?q=association.interaction_types:blocker%20AND%20association.interaction_types:activator\n    ## 1 record, blocker + inhibitor: https://pending.biothings.io/dgidb/query?q=association.interaction_types:blocker%20AND%20association.interaction_types:inhibitor\n    blocker-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"blocker\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:blocker maps to the inverse of this predicate\n        predicate: activity_decreased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:775\"                     ## CACNA1C\n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1648     ## ISRADIPINE\n## commenting out because there's only 1 record for this set of operations\n    # inducer:\n    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inducer\n    # ## 1 record\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inducer\"]') }} ],\n    #           \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         object.NCBIGene,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     ## for biolink 2.2.8, DGIdb:inducer maps to this predicate\n    #     predicate: increases_activity_of\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n    #     # testExamples:\n    #     #   - qInput: \"CHEMBL.COMPOUND:CHEMBL71263\"   ## VADIMEZAN\n    #     #     oneOutput: \"NCBIGene:7124\"           ## TNF\n    # inducer-rev:\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inducer\"]') }} ],\n    #           \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     ## for biolink 2.2.8, DGIdb:inducer maps to the inverse of this predicate\n    #     predicate: activity_increased_by\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n    #     # testExamples:\n    #     #   - qInput: \"NCBIGene:7124\"                    ## TNF \n    #     #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL71263\"   ## VADIMEZAN\n    inhibitor:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inhibitor\n    ## 6928 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inhibitor\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:inhibitor maps to this predicate\n        predicate: decreases_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL1229517\"   ## VEMURAFENIB\n        #     oneOutput: \"NCBIGene:673\"                 ## BRAF\n    inhibitor-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inhibitor\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:inhibitor maps to the inverse of this predicate\n        predicate: activity_decreased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:3481\"                      ## IGF2 \n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2109355\"   ## DUSIGITUMAB\n## commenting out because there's only 1 record for this set of operations\n    # inhibitory_allosteric_modulator:\n    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inhibitory_allosteric_modulator\n    # ## 1 record\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inhibitory_allosteric_modulator\"]') }} ],\n    #           \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         object.NCBIGene,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     ## for biolink 2.2.8, DGIdb:inhibitory_allosteric_modulator maps to this predicate\n    #     predicate: decreases_activity_of\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n    #     # testExamples:\n    #     #   - qInput: \"CHEMBL.COMPOUND:CHEMBL1079175\"   ## MK-2206\n    #     #     oneOutput: \"NCBIGene:207\"                 ## AKT1\n    # inhibitory_allosteric_modulator-rev:\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inhibitory_allosteric_modulator\"]') }} ],\n    #           \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     ## for biolink 2.2.8, DGIdb:inhibitory_allosteric_modulator maps to the inverse of this predicate\n    #     predicate: activity_decreased_by\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n    #     # testExamples:\n    #     #   - qInput: \"NCBIGene:207\"                       ## AKT1 \n    #     #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1079175\"   ## MK-2206\n    inverse_agonist:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inverse_agonist\n    ## 24 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inverse_agonist\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:inverse_agonist maps to this predicate\n        predicate: decreases_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL1200986\"   ## HALOPERIDOL DECANOATE\n        #     oneOutput: \"NCBIGene:1814\"                ## DRD3\n    inverse_agonist-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"inverse_agonist\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:inverse_agonist maps to the inverse of this predicate\n        predicate: activity_decreased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:3356\"                       ## HTR2A \n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1084617\"    ## TEMANOGREL\n    modulator:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:modulator\n    ## 222 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"modulator\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## could also use \"entity regulates entity\"? see def: https://dgidb.org/interaction_types \n        ## for biolink 2.2.8, DGIdb:modulator maps to this predicate\n        predicate: affects_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL3301626\"   ## BASIMGLURANT\n        #     oneOutput: \"NCBIGene:2915\"                ## GRM5\n    modulator-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"modulator\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:modulator maps to the inverse of this predicate\n        predicate: activity_affected_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:5241\"                       ## PGR \n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2105694\"    ## TELAPRISTONE ACETATE\n## commenting out because there's only 5 records for this set of operations\n    # negative_modulator:\n    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:negative_modulator\n    # ## 5 records\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"negative_modulator\"]') }} ],\n    #           \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         object.NCBIGene,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     ## for biolink 2.2.8, DGIdb:negative_modulator maps to this predicate\n    #     predicate: decreases_activity_of\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n    #     # testExamples:\n    #     #   - qInput: \"CHEMBL.COMPOUND:CHEMBL2109095\"   ## ERLIZUMAB\n    #     #     oneOutput: \"NCBIGene:3689\"                ## ITGB2\n    # negative_modulator-rev:\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"negative_modulator\"]') }} ],\n    #           \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     ## for biolink 2.2.8, DGIdb:negative_modulator maps to the inverse of this predicate\n    #     predicate: activity_decreased_by\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n    #     # testExamples:\n    #     #   - qInput: \"NCBIGene:920\"                        ## CD4 \n    #     #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2108475\"    ## PRILIXIMAB\n    no_dgidb_relationship:\n    ## 44557 records\n    ## Most records did not have a value for that column. We put the value to \"not_applicable\" in those cases...\n    ## https://pending.biothings.io/dgidb/query?q=association.interaction_types:not_applicable\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"not_applicable\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## DGIdb drug-gene interactions\n        predicate: interacts_with\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL3989914\"   ## GLESATINIB\n        #     oneOutput: \"NCBIGene:7010\"                ## TEK\n    no_dgidb_relationship-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"not_applicable\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## DGIdb drug-gene interactions\n        predicate: interacts_with\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:4985\"                       ## OPRD1 \n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2159122\"    ## ELUXADOLINE\n    partial_agonist:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:partial_agonist\n    ## 74 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"partial_agonist\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## for biolink 2.2.8, DGIdb:partial_agonist maps to this predicate\n        predicate: increases_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL3544917\"   ## RAPASTINEL\n        #     oneOutput: \"NCBIGene:2903\"                ## GRIN2A\n    partial_agonist-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"partial_agonist\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## for biolink 2.2.8, DGIdb:partial_agonist maps to the inverse of this predicate\n        predicate: activity_increased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:1137\"                        ## CHRNA4 \n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL3707250\"     ## CP-601927\n    positive_modulator:\n    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:positive_modulator\n    ## 602 records\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"positive_modulator\"]') }} ],\n              \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            object.NCBIGene,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        ## biolink 2.2.8: using mapping to GAMMA / CHEMBL.MECHANISM positive_modulator term  \n        predicate: increases_activity_of\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n        # testExamples:\n        #   - qInput: \"CHEMBL.COMPOUND:CHEMBL30219\"     ## METHOHEXITAL SODIUM\n        #     oneOutput: \"NCBIGene:2565\"                ## GABRG1\n    positive_modulator-rev:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBodyType: object\n        requestBody:\n          body: \u003e-\n            {\n              \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"positive_modulator\"]') }} ],\n              \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n            }\n        parameters:\n          fields: \u003e-\n            subject.CHEMBL_COMPOUND,association.interaction_group_score,\n            association.interaction_claim_source,association.pmids,association.interaction_types\n          size: 1000\n        outputs:\n          - id: \"CHEMBL.COMPOUND\"\n            semantic: SmallMolecule\n        ## biolink 2.2.8: using inverse of mapping to GAMMA / CHEMBL.MECHANISM positive_modulator term  \n        predicate: activity_increased_by\n        source: \"infores:dgidb\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:2557\"                    ## GABRA4 \n        #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL969\"     ## PRAZEPAM\n## commenting out because there's only 1 record for this set of operations\n    # suppressor:\n    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:suppressor\n    # ## 1 record\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"suppressor\"]') }} ],\n    #           \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         object.NCBIGene,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     ## biolink 2.2.8: using mapping for GAMMA:suppressor\n    #     predicate: decreases_activity_of\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n    #     # testExamples:\n    #     #   - qInput: \"CHEMBL.COMPOUND:CHEMBL4297755\"   ## FP-1039\n    #     #     oneOutput: \"NCBIGene:2247\"                ## FGF2\n    # suppressor-rev:\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"suppressor\"]') }} ],\n    #           \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     ## biolink 2.2.8: using inverse of mapping for GAMMA:suppressor\n    #     predicate: activity_decreased_by\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n    #     # testExamples:\n    #     #   - qInput: \"NCBIGene:2247\"                      ## FGF2 \n    #     #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL4297755\"   ## FP-1039\n## commenting out because there's only 8 records for this set of operations\n    # vaccine:\n    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:vaccine\n    # ## 8 records\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"vaccine\"]') }} ],\n    #           \"scopes\": [\"subject.CHEMBL_COMPOUND\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         object.NCBIGene,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     ## using a different predicate than the biolink 2.2.8 mapping (decreases_activity_of)\n    #     ## reasoning: thought its def https://dgidb.org/interaction_types was similar to https://github.com/biolink/biolink-model/blob/c73899cd33753c5d2ff937213b6c5911c579b001/biolink-model.yaml#L2918\n    #     predicate: affects_response_to\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/forward\"\n    #     # testExamples:\n    #     #   - qInput: \"CHEMBL.COMPOUND:CHEMBL75094\"   ## PRINOMASTAT\n    #     #     oneOutput: \"NCBIGene:4323\"              ## MMP14\n    # vaccine-rev:\n    #   - supportBatch: true\n    #     useTemplating: true ## flag to say templating is being used below\n    #     inputs:\n    #       - id: NCBIGene\n    #         semantic: Gene\n    #     requestBodyType: object\n    #     requestBody:\n    #       body: \u003e-\n    #         {\n    #           \"q\": [ {{ queryInputs | wrap( '[\"' , '\",\"vaccine\"]') }} ],\n    #           \"scopes\": [\"object.NCBIGene\", \"association.interaction_types\"]\n    #         }\n    #     parameters:\n    #       fields: \u003e-\n    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,\n    #         association.interaction_claim_source,association.pmids,association.interaction_types\n    #       size: 1000\n    #     outputs:\n    #       - id: \"CHEMBL.COMPOUND\"\n    #         semantic: SmallMolecule\n    #     ## using a different predicate than the biolink 2.2.8 mapping (decreases_activity_of)\n    #     ## reasoning: thought its def https://dgidb.org/interaction_types was similar to https://github.com/biolink/biolink-model/blob/c73899cd33753c5d2ff937213b6c5911c579b001/biolink-model.yaml#L2918\n    #     predicate: response_affected_by\n    #     source: \"infores:dgidb\"\n    #     response_mapping:\n    #       \"$ref\": \"#/components/x-bte-response-mapping/reverse\"\n    #     # testExamples:\n    #     #   - qInput: \"NCBIGene:4313\"                      ## MMP2 \n    #     #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL297792\"    ## S-3304\n  x-bte-response-mapping:\n    forward:\n      NCBIGene: object.NCBIGene\n      pubmed: association.pmids\n      dgidb_interaction_claim_source: association.interaction_claim_source\n      \"biolink:original_predicate\": association.interaction_types  ## or dgidb interaction types\n      dgidb_interaction_group_score: association.interaction_group_score\n    reverse:\n      \"CHEMBL.COMPOUND\": subject.CHEMBL_COMPOUND\n      pubmed: association.pmids\n      dgidb_interaction_claim_source: association.interaction_claim_source\n      \"biolink:original_predicate\": association.interaction_types  ## or dgidb interaction types\n      dgidb_interaction_group_score: association.interaction_group_score  \n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@0395669dfee9685031f6f5fdbe5d3ac383959bed/-/blob/dgidb/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/0395669dfee9685031f6f5fdbe5d3ac383959bed/dgidb/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/query\": post: parameters: parse parameter \"scopes\": schema: parse schema: at 1:23147: parse default: expected type \"string\", got \"array\""
}