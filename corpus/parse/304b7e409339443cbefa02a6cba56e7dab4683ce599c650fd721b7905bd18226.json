{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "User.yaml",
			"size": 0,
			"path": "providers/src/okta/v0.1.0/services/User.yaml",
			"byteSize": 107910,
			"content": "components:\n  schemas:\n    AppAndInstanceConditionEvaluatorAppOrInstance:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        name:\n          type: string\n        type:\n          enum:\n          - APP_TYPE\n          - APP\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    AppAndInstancePolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n          type: array\n        include:\n          items:\n            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    AppInstancePolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    AppLink:\n      properties:\n        appAssignmentId:\n          readOnly: true\n          type: string\n        appInstanceId:\n          readOnly: true\n          type: string\n        appName:\n          readOnly: true\n          type: string\n        credentialsSetup:\n          readOnly: true\n          type: boolean\n        hidden:\n          readOnly: true\n          type: boolean\n        id:\n          readOnly: true\n          type: string\n        label:\n          readOnly: true\n          type: string\n        linkUrl:\n          readOnly: true\n          type: string\n        logoUrl:\n          readOnly: true\n          type: string\n        sortOrder:\n          readOnly: true\n          type: integer\n      type: object\n      x-okta-tags:\n      - User\n    AssignRoleRequest:\n      properties:\n        type:\n          $ref: '#/components/schemas/RoleType'\n      type: object\n      x-okta-tags:\n      - Role\n    AuthenticationProvider:\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/AuthenticationProviderType'\n      type: object\n      x-okta-tags:\n      - User\n    AuthenticationProviderType:\n      enum:\n      - ACTIVE_DIRECTORY\n      - FEDERATION\n      - LDAP\n      - OKTA\n      - SOCIAL\n      - IMPORT\n      type: string\n      x-okta-tags:\n      - User\n    BeforeScheduledActionPolicyRuleCondition:\n      properties:\n        duration:\n          $ref: '#/components/schemas/Duration'\n        lifecycleAction:\n          $ref: '#/components/schemas/ScheduledUserLifecycleAction'\n      type: object\n      x-okta-tags:\n      - Policy\n    CatalogApplication:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        category:\n          type: string\n        description:\n          type: string\n        displayName:\n          type: string\n        features:\n          items:\n            type: string\n          type: array\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        signOnModes:\n          items:\n            type: string\n          type: array\n        status:\n          $ref: '#/components/schemas/CatalogApplicationStatus'\n        verificationStatus:\n          type: string\n        website:\n          type: string\n      type: object\n      x-okta-tags:\n      - Role\n    CatalogApplicationStatus:\n      enum:\n      - ACTIVE\n      - INACTIVE\n      type: string\n      x-okta-tags:\n      - Role\n    ChangePasswordRequest:\n      properties:\n        newPassword:\n          $ref: '#/components/schemas/PasswordCredential'\n        oldPassword:\n          $ref: '#/components/schemas/PasswordCredential'\n      type: object\n      x-okta-tags:\n      - User\n    ClientPolicyCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    ContextPolicyRuleCondition:\n      properties:\n        expression:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    CreateUserRequest:\n      properties:\n        credentials:\n          $ref: '#/components/schemas/UserCredentials'\n        groupIds:\n          items:\n            type: string\n          type: array\n        profile:\n          $ref: '#/components/schemas/UserProfile'\n        type:\n          $ref: '#/components/schemas/UserType'\n      type: object\n      x-okta-tags:\n      - User\n    DevicePolicyRuleCondition:\n      properties:\n        migrated:\n          type: boolean\n        platform:\n          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'\n        rooted:\n          type: boolean\n        trustLevel:\n          enum:\n          - ANY\n          - TRUSTED\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    DevicePolicyRuleConditionPlatform:\n      properties:\n        supportedMDMFrameworks:\n          items:\n            enum:\n            - AFW\n            - SAFE\n            - NATIVE\n            type: string\n          type: array\n        types:\n          items:\n            enum:\n            - IOS\n            - ANDROID\n            - OSX\n            - WINDOWS\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Duration:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    ForgotPasswordResponse:\n      properties:\n        resetPasswordUrl:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    GrantTypePolicyRuleCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Group:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastMembershipUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        objectClass:\n          items:\n            type: string\n          readOnly: true\n          type: array\n        profile:\n          $ref: '#/components/schemas/GroupProfile'\n        type:\n          $ref: '#/components/schemas/GroupType'\n      type: object\n      x-okta-crud:\n      - alias: update\n        arguments:\n        - dest: groupId\n          src: id\n        - dest: group\n          self: true\n        operationId: updateGroup\n      - alias: delete\n        arguments:\n        - dest: groupId\n          src: id\n        operationId: deleteGroup\n      x-okta-operations:\n      - alias: removeUser\n        arguments:\n        - dest: groupId\n          src: id\n        operationId: removeUserFromGroup\n      - alias: listUsers\n        arguments:\n        - dest: groupId\n          src: id\n        operationId: listGroupUsers\n      - alias: listApplications\n        arguments:\n        - dest: groupId\n          src: id\n        operationId: listAssignedApplicationsForGroup\n      - alias: assignRole\n        arguments:\n        - dest: groupId\n          src: id\n        operationId: assignRoleToGroup\n      x-okta-tags:\n      - Group\n    GroupCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    GroupPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    GroupProfile:\n      properties:\n        description:\n          type: string\n        name:\n          type: string\n      type: object\n      x-okta-extensible: true\n      x-okta-tags:\n      - Group\n    GroupType:\n      enum:\n      - OKTA_GROUP\n      - APP_GROUP\n      - BUILT_IN\n      type: string\n      x-okta-tags:\n      - Group\n    IdentityProvider:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        issuerMode:\n          enum:\n          - ORG_URL\n          - CUSTOM_URL\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        policy:\n          $ref: '#/components/schemas/IdentityProviderPolicy'\n        protocol:\n          $ref: '#/components/schemas/Protocol'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n        type:\n          enum:\n          - SAML2\n          - GOOGLE\n          - FACEBOOK\n          - LINKEDIN\n          - MICROSOFT\n          - OIDC\n          - OKTA\n          - IWA\n          - AgentlessDSSO\n          - X509\n          type: string\n      type: object\n      x-okta-crud:\n      - alias: create\n        arguments:\n        - dest: idpTrust\n          self: true\n        operationId: createIdentityProvider\n      - alias: read\n        arguments: []\n        operationId: getIdentityProvider\n      - alias: update\n        arguments:\n        - dest: idpId\n          src: id\n        - dest: idpTrust\n          self: true\n        operationId: updateIdentityProvider\n      - alias: delete\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: deleteIdentityProvider\n      x-okta-operations:\n      - alias: listSigningCsrs\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listCsrsForIdentityProvider\n      - alias: generateCsr\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: generateCsrForIdentityProvider\n      - alias: deleteSigningCsr\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: revokeCsrForIdentityProvider\n      - alias: getSigningCsr\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: getCsrForIdentityProvider\n      - alias: listSigningKeys\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listIdentityProviderSigningKeys\n      - alias: generateSigningKey\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: generateIdentityProviderSigningKey\n      - alias: getSigningKey\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: getIdentityProviderSigningKey\n      - alias: cloneKey\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: cloneIdentityProviderKey\n      - alias: activate\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: activateIdentityProvider\n      - alias: deactivate\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: deactivateIdentityProvider\n      - alias: listUsers\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listIdentityProviderApplicationUsers\n      - alias: unlinkUser\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: unlinkUserFromIdentityProvider\n      - alias: getUser\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: getIdentityProviderApplicationUser\n      - alias: linkUser\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: linkUserToIdentityProvider\n      - alias: listSocialAuthTokens\n        arguments:\n        - dest: idpId\n          src: id\n        operationId: listSocialAuthTokens\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentials:\n      properties:\n        client:\n          $ref: '#/components/schemas/IdentityProviderCredentialsClient'\n        signing:\n          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'\n        trust:\n          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentialsClient:\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentialsSigning:\n      properties:\n        kid:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderCredentialsTrust:\n      properties:\n        audience:\n          type: string\n        issuer:\n          type: string\n        kid:\n          type: string\n        revocation:\n          enum:\n          - CRL\n          - DELTA_CRL\n          - OCSP\n          type: string\n        revocationCacheLifetime:\n          type: integer\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    IdentityProviderPolicy:\n      properties:\n        accountLink:\n          $ref: '#/components/schemas/PolicyAccountLink'\n        maxClockSkew:\n          type: integer\n        provisioning:\n          $ref: '#/components/schemas/Provisioning'\n        subject:\n          $ref: '#/components/schemas/PolicySubject'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    IdentityProviderPolicyRuleCondition:\n      properties:\n        idpIds:\n          items:\n            type: string\n          type: array\n        provider:\n          enum:\n          - ANY\n          - OKTA\n          - SPECIFIC_IDP\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    InactivityPolicyRuleCondition:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    LifecycleExpirationPolicyRuleCondition:\n      properties:\n        lifecycleStatus:\n          type: string\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    MDMEnrollmentPolicyRuleCondition:\n      properties:\n        blockNonSafeAndroid:\n          type: boolean\n        enrollment:\n          enum:\n          - OMM\n          - ANY_OR_NONE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    OAuth2Actor:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        type:\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    OAuth2Client:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        client_id:\n          readOnly: true\n          type: string\n        client_name:\n          readOnly: true\n          type: string\n        client_uri:\n          readOnly: true\n          type: string\n        logo_uri:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    OAuth2RefreshToken:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        clientId:\n          type: string\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          $ref: '#/components/schemas/OAuth2Actor'\n        expiresAt:\n          format: date-time\n          readOnly: true\n          type: string\n        id:\n          readOnly: true\n          type: string\n        issuer:\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        scopes:\n          items:\n            type: string\n          type: array\n        status:\n          enum:\n          - ACTIVE\n          - REVOKED\n          type: string\n        userId:\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    OAuth2ScopeConsentGrant:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        clientId:\n          type: string\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          $ref: '#/components/schemas/OAuth2Actor'\n        id:\n          readOnly: true\n          type: string\n        issuer:\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        scopeId:\n          type: string\n        source:\n          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'\n        status:\n          $ref: '#/components/schemas/OAuth2ScopeConsentGrantStatus'\n        userId:\n          type: string\n      type: object\n      x-okta-tags:\n      - Application\n    OAuth2ScopeConsentGrantSource:\n      enum:\n      - END_USER\n      - ADMIN\n      type: string\n      x-okta-tags:\n      - Application\n    OAuth2ScopeConsentGrantStatus:\n      enum:\n      - ACTIVE\n      - REVOKED\n      type: string\n      x-okta-tags:\n      - Application\n    OAuth2ScopesMediationPolicyRuleCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Application\n    OAuthAuthorizationPolicy:\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicy:\n      properties:\n        conditions:\n          $ref: '#/components/schemas/OktaSignOnPolicyConditions'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    OktaSignOnPolicyConditions:\n      properties:\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    PasswordCredential:\n      properties:\n        hash:\n          $ref: '#/components/schemas/PasswordCredentialHash'\n        hook:\n          $ref: '#/components/schemas/PasswordCredentialHook'\n        value:\n          format: password\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    PasswordCredentialHash:\n      properties:\n        algorithm:\n          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'\n        salt:\n          type: string\n        saltOrder:\n          type: string\n        value:\n          type: string\n        workFactor:\n          type: integer\n      type: object\n      x-okta-tags:\n      - User\n    PasswordCredentialHashAlgorithm:\n      enum:\n      - BCRYPT\n      - SHA-512\n      - SHA-256\n      - SHA-1\n      - MD5\n      type: string\n      x-okta-tags:\n      - User\n    PasswordCredentialHook:\n      properties:\n        type:\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    PasswordDictionary:\n      properties:\n        common:\n          $ref: '#/components/schemas/PasswordDictionaryCommon'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordDictionaryCommon:\n      properties:\n        exclude:\n          default: false\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordExpirationPolicyRuleCondition:\n      properties:\n        number:\n          type: integer\n        unit:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicy:\n      properties:\n        conditions:\n          $ref: '#/components/schemas/PasswordPolicyConditions'\n        settings:\n          $ref: '#/components/schemas/PasswordPolicySettings'\n      type: object\n      x-okta-parent: '#/components/schemas/Policy'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyAuthenticationProviderCondition:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n        provider:\n          enum:\n          - ACTIVE_DIRECTORY\n          - ANY\n          - LDAP\n          - OKTA\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyConditions:\n      properties:\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n      type: object\n      x-okta-parent: '#/components/schemas/PolicyRuleConditions'\n      x-okta-tags:\n      - Policy\n    PasswordPolicyDelegationSettings:\n      properties:\n        options:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyDelegationSettingsOptions:\n      properties:\n        skipUnlock:\n          type: boolean\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettings:\n      properties:\n        age:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'\n        lockout:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsAge:\n      properties:\n        expireWarnDays:\n          type: integer\n        historyCount:\n          type: integer\n        maxAgeDays:\n          type: integer\n        minAgeMinutes:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsComplexity:\n      properties:\n        dictionary:\n          $ref: '#/components/schemas/PasswordDictionary'\n        excludeAttributes:\n          items:\n            type: string\n          type: array\n        excludeUsername:\n          default: true\n          type: boolean\n        minLength:\n          type: integer\n        minLowerCase:\n          type: integer\n        minNumber:\n          type: integer\n        minSymbol:\n          type: integer\n        minUpperCase:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyPasswordSettingsLockout:\n      properties:\n        autoUnlockMinutes:\n          type: integer\n        maxAttempts:\n          type: integer\n        showLockoutFailures:\n          type: boolean\n        userLockoutNotificationChannels:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmail:\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmailProperties:\n      properties:\n        recoveryToken:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryEmailRecoveryToken:\n      properties:\n        tokenLifetimeMinutes:\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryFactorSettings:\n      properties:\n        status:\n          default: INACTIVE\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryFactors:\n      properties:\n        okta_call:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        okta_email:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'\n        okta_sms:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'\n        recovery_question:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestion:\n      properties:\n        properties:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestionComplexity:\n      properties:\n        minLength:\n          readOnly: true\n          type: integer\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoveryQuestionProperties:\n      properties:\n        complexity:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicyRecoverySettings:\n      properties:\n        factors:\n          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'\n      type: object\n      x-okta-tags:\n      - Policy\n    PasswordPolicySettings:\n      properties:\n        delegation:\n          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'\n        password:\n          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'\n        recovery:\n          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatform:\n      properties:\n        os:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'\n        type:\n          enum:\n          - DESKTOP\n          - MOBILE\n          - OTHER\n          - ANY\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatformOperatingSystem:\n      properties:\n        expression:\n          type: string\n        type:\n          enum:\n          - ANDROID\n          - IOS\n          - WINDOWS\n          - OSX\n          - OTHER\n          - ANY\n          type: string\n        version:\n          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformConditionEvaluatorPlatformOperatingSystemVersion:\n      properties:\n        matchType:\n          enum:\n          - EXPRESSION\n          - SEMVER\n          type: string\n        value:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PlatformPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n          type: array\n        include:\n          items:\n            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    Policy:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        conditions:\n          $ref: '#/components/schemas/PolicyRuleConditions'\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        name:\n          type: string\n        priority:\n          type: integer\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          type: string\n        system:\n          type: boolean\n        type:\n          $ref: '#/components/schemas/PolicyType'\n      type: object\n      x-okta-crud:\n      - alias: read\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: getPolicy\n      - alias: update\n        arguments:\n        - dest: policyId\n          src: id\n        - dest: policy\n          self: true\n        operationId: updatePolicy\n      - alias: delete\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: deletePolicy\n      x-okta-operations:\n      - alias: activate\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: activatePolicy\n      - alias: deactivate\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: deactivatePolicy\n      - alias: listPolicyRules\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: listPolicyRules\n      - alias: createRule\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: createPolicyRule\n      - alias: getPolicyRule\n        arguments:\n        - dest: policyId\n          src: id\n        operationId: getPolicyRule\n      x-okta-tags:\n      - Policy\n      x-openapi-v3-discriminator:\n        mapping:\n          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'\n          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/OAuthAuthorizationPolicy'\n          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'\n          PASSWORD: '#/components/schemas/PasswordPolicy'\n        propertyName: type\n    PolicyAccountLink:\n      properties:\n        action:\n          enum:\n          - AUTO\n          - DISABLED\n          type: string\n        filter:\n          $ref: '#/components/schemas/PolicyAccountLinkFilter'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyAccountLinkFilter:\n      properties:\n        groups:\n          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyAccountLinkFilterGroups:\n      properties:\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyNetworkCondition:\n      properties:\n        connection:\n          enum:\n          - ANYWHERE\n          - ZONE\n          type: string\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyPeopleCondition:\n      properties:\n        groups:\n          $ref: '#/components/schemas/GroupCondition'\n        users:\n          $ref: '#/components/schemas/UserCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleAuthContextCondition:\n      properties:\n        authType:\n          enum:\n          - ANY\n          - RADIUS\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicyRuleConditions:\n      properties:\n        app:\n          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'\n        apps:\n          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'\n        authContext:\n          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'\n        authProvider:\n          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'\n        beforeScheduledAction:\n          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'\n        clients:\n          $ref: '#/components/schemas/ClientPolicyCondition'\n        context:\n          $ref: '#/components/schemas/ContextPolicyRuleCondition'\n        device:\n          $ref: '#/components/schemas/DevicePolicyRuleCondition'\n        grantTypes:\n          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'\n        groups:\n          $ref: '#/components/schemas/GroupPolicyRuleCondition'\n        identityProvider:\n          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'\n        mdmEnrollment:\n          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'\n        network:\n          $ref: '#/components/schemas/PolicyNetworkCondition'\n        people:\n          $ref: '#/components/schemas/PolicyPeopleCondition'\n        platform:\n          $ref: '#/components/schemas/PlatformPolicyRuleCondition'\n        risk:\n          $ref: '#/components/schemas/RiskPolicyRuleCondition'\n        riskScore:\n          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'\n        scopes:\n          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'\n        userIdentifier:\n          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'\n        userStatus:\n          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'\n        users:\n          $ref: '#/components/schemas/UserPolicyRuleCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicySubject:\n      properties:\n        filter:\n          type: string\n        format:\n          items:\n            type: string\n          type: array\n        matchAttribute:\n          type: string\n        matchType:\n          $ref: '#/components/schemas/PolicySubjectMatchType'\n        userNameTemplate:\n          $ref: '#/components/schemas/PolicyUserNameTemplate'\n      type: object\n      x-okta-tags:\n      - Policy\n    PolicySubjectMatchType:\n      enum:\n      - USERNAME\n      - EMAIL\n      - USERNAME_OR_EMAIL\n      - CUSTOM_ATTRIBUTE\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyType:\n      enum:\n      - OAUTH_AUTHORIZATION_POLICY\n      - OKTA_SIGN_ON\n      - PASSWORD\n      - IDP_DISCOVERY\n      type: string\n      x-okta-tags:\n      - Policy\n    PolicyUserNameTemplate:\n      properties:\n        template:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    Protocol:\n      properties:\n        algorithms:\n          $ref: '#/components/schemas/ProtocolAlgorithms'\n        credentials:\n          $ref: '#/components/schemas/IdentityProviderCredentials'\n        endpoints:\n          $ref: '#/components/schemas/ProtocolEndpoints'\n        issuer:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        relayState:\n          $ref: '#/components/schemas/ProtocolRelayState'\n        scopes:\n          items:\n            type: string\n          type: array\n        settings:\n          $ref: '#/components/schemas/ProtocolSettings'\n        type:\n          enum:\n          - SAML2\n          - OIDC\n          - OAUTH2\n          - MTLS\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolAlgorithmType:\n      properties:\n        signature:\n          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolAlgorithmTypeSignature:\n      properties:\n        algorithm:\n          type: string\n        scope:\n          enum:\n          - RESPONSE\n          - TOKEN\n          - ANY\n          - REQUEST\n          - NONE\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolAlgorithms:\n      properties:\n        request:\n          $ref: '#/components/schemas/ProtocolAlgorithmType'\n        response:\n          $ref: '#/components/schemas/ProtocolAlgorithmType'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolEndpoint:\n      properties:\n        binding:\n          enum:\n          - HTTP-POST\n          - HTTP-REDIRECT\n          type: string\n        destination:\n          type: string\n        type:\n          enum:\n          - INSTANCE\n          - ORG\n          type: string\n        url:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolEndpoints:\n      properties:\n        acs:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        authorization:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        jwks:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        metadata:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        slo:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        sso:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        token:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n        userInfo:\n          $ref: '#/components/schemas/ProtocolEndpoint'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolRelayState:\n      properties:\n        format:\n          $ref: '#/components/schemas/ProtocolRelayStateFormat'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolRelayStateFormat:\n      enum:\n      - OPAQUE\n      - FROM_URL\n      type: string\n      x-okta-tags:\n      - IdentityProvider\n    ProtocolSettings:\n      properties:\n        nameFormat:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    Provisioning:\n      properties:\n        action:\n          enum:\n          - AUTO\n          - CALLOUT\n          - DISABLED\n          type: string\n        conditions:\n          $ref: '#/components/schemas/ProvisioningConditions'\n        groups:\n          $ref: '#/components/schemas/ProvisioningGroups'\n        profileMaster:\n          type: boolean\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningConditions:\n      properties:\n        deprovisioned:\n          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'\n        suspended:\n          $ref: '#/components/schemas/ProvisioningSuspendedCondition'\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningDeprovisionedCondition:\n      properties:\n        action:\n          enum:\n          - NONE\n          - REACTIVATE\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningGroups:\n      properties:\n        action:\n          enum:\n          - NONE\n          - APPEND\n          - SYNC\n          - ASSIGN\n          type: string\n        assignments:\n          items:\n            type: string\n          type: array\n        filter:\n          items:\n            type: string\n          type: array\n        sourceAttributeName:\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    ProvisioningSuspendedCondition:\n      properties:\n        action:\n          enum:\n          - NONE\n          - UNSUSPEND\n          type: string\n      type: object\n      x-okta-tags:\n      - IdentityProvider\n    RecoveryQuestionCredential:\n      properties:\n        answer:\n          type: string\n        question:\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    ResetPasswordToken:\n      properties:\n        resetPasswordUrl:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    ResponseLinks:\n      type: object\n      x-okta-tags:\n      - User\n    RiskPolicyRuleCondition:\n      properties:\n        behaviors:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n      type: object\n      x-okta-tags:\n      - Policy\n    RiskScorePolicyRuleCondition:\n      properties:\n        level:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    Role:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        assignmentType:\n          $ref: '#/components/schemas/RoleAssignmentType'\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          type: string\n        id:\n          readOnly: true\n          type: string\n        label:\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          $ref: '#/components/schemas/RoleStatus'\n        type:\n          $ref: '#/components/schemas/RoleType'\n      type: object\n      x-okta-operations:\n      - alias: addAdminGroupTarget\n        arguments:\n        - dest: roleId\n          src: id\n        - dest: groupId\n          parentSrc: id\n        operationId: addGroupTargetToGroupAdministratorRoleForGroup\n      - alias: addAppInstanceTargetToAdminRole\n        arguments:\n        - dest: roleId\n          src: id\n        - dest: groupId\n          parentSrc: id\n        operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup\n      - alias: addAppTargetToAdminRole\n        arguments:\n        - dest: roleId\n          src: id\n        - dest: groupId\n          parentSrc: id\n        operationId: addApplicationTargetToAdminRoleGivenToGroup\n      - alias: addAllAppsAsTargetToRole\n        arguments:\n        - dest: roleId\n          src: id\n        - dest: userId\n          parentSrc: id\n        operationId: addAllAppsAsTargetToRole\n      - alias: addAppTargetToAppAdminRoleForUser\n        arguments:\n        - dest: roleId\n          src: id\n        - dest: userId\n          parentSrc: id\n        operationId: addApplicationTargetToAppAdminRoleForUser\n      - alias: addAppTargetToAdminRoleForUser\n        arguments:\n        - dest: roleId\n          src: id\n        - dest: userId\n          parentSrc: id\n        operationId: addApplicationTargetToAdminRoleForUser\n      x-okta-tags:\n      - User\n    RoleAssignmentType:\n      enum:\n      - GROUP\n      - USER\n      type: string\n      x-okta-tags:\n      - Role\n    RoleStatus:\n      enum:\n      - ACTIVE\n      - INACTIVE\n      type: string\n      x-okta-tags:\n      - User\n    RoleType:\n      enum:\n      - SUPER_ADMIN\n      - ORG_ADMIN\n      - APP_ADMIN\n      - USER_ADMIN\n      - HELP_DESK_ADMIN\n      - READ_ONLY_ADMIN\n      - MOBILE_ADMIN\n      - API_ACCESS_MANAGEMENT_ADMIN\n      - REPORT_ADMIN\n      - GROUP_MEMBERSHIP_ADMIN\n      type: string\n      x-okta-tags:\n      - Role\n    ScheduledUserLifecycleAction:\n      properties:\n        status:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          - PENDING\n          - DELETED\n          - EXPIRED_PASSWORD\n          - ACTIVATING\n          - SUSPENDED\n          - DELETING\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    TempPassword:\n      properties:\n        tempPassword:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    User:\n      properties:\n        _embedded:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        activated:\n          format: date-time\n          readOnly: true\n          type: string\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        credentials:\n          $ref: '#/components/schemas/UserCredentials'\n        id:\n          readOnly: true\n          type: string\n        lastLogin:\n          format: date-time\n          readOnly: true\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        passwordChanged:\n          format: date-time\n          readOnly: true\n          type: string\n        profile:\n          $ref: '#/components/schemas/UserProfile'\n        status:\n          $ref: '#/components/schemas/UserStatus'\n        statusChanged:\n          format: date-time\n          readOnly: true\n          type: string\n        transitioningToStatus:\n          $ref: '#/components/schemas/UserStatus'\n        type:\n          $ref: '#/components/schemas/UserType'\n      type: object\n      x-okta-crud:\n      - alias: create\n        arguments:\n        - dest: user\n          self: true\n        operationId: createUser\n      - alias: read\n        arguments: []\n        operationId: getUser\n      - alias: update\n        arguments:\n        - dest: userId\n          src: id\n        - dest: user\n          self: true\n        operationId: updateUser\n      - alias: delete\n        arguments:\n        - dest: userId\n          src: id\n        - dest: user\n          self: true\n        operationId: deactivateOrDeleteUser\n      x-okta-operations:\n      - alias: listAppLinks\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listAppLinks\n      - alias: changePassword\n        arguments:\n        - dest: userId\n          src: id\n        operationId: changePassword\n      - alias: changeRecoveryQuestion\n        arguments:\n        - dest: userId\n          src: id\n        operationId: changeRecoveryQuestion\n      - alias: forgotPasswordSetNewPassword\n        arguments:\n        - dest: userId\n          src: id\n        operationId: forgotPasswordSetNewPassword\n      - alias: forgotPasswordGenerateOneTimeToken\n        arguments:\n        - dest: userId\n          src: id\n        operationId: forgotPasswordGenerateOneTimeToken\n      - alias: assignRole\n        arguments:\n        - dest: userId\n          src: id\n        operationId: assignRoleToUser\n      - alias: getRole\n        arguments:\n        - dest: userId\n          src: id\n        operationId: getUserRole\n      - alias: removeRole\n        arguments:\n        - dest: userId\n          src: id\n        operationId: removeRoleFromUser\n      - alias: listGroupTargets\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listGroupTargetsForRole\n      - alias: removeGroupTarget\n        arguments:\n        - dest: userId\n          src: id\n        operationId: removeGroupTargetFromRole\n      - alias: addGroupTarget\n        arguments:\n        - dest: userId\n          src: id\n        operationId: addGroupTargetToRole\n      - alias: listAssignedRoles\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listAssignedRolesForUser\n      - alias: addAllAppsAsTarget\n        arguments:\n        - dest: userId\n          src: id\n        operationId: addAllAppsAsTargetToRole\n      - alias: listGroups\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listUserGroups\n      - alias: listGrants\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listUserGrants\n      - alias: revokeGrants\n        arguments:\n        - dest: userId\n          src: id\n        operationId: revokeUserGrants\n      - alias: revokeGrant\n        arguments:\n        - dest: userId\n          src: id\n        operationId: revokeUserGrant\n      - alias: revokeGrantsForUserAndClient\n        arguments:\n        - dest: userId\n          src: id\n        operationId: revokeGrantsForUserAndClient\n      - alias: listRefreshTokensForUserAndClient\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listRefreshTokensForUserAndClient\n      - alias: revokeTokenForUserAndClient\n        arguments:\n        - dest: userId\n          src: id\n        operationId: revokeTokenForUserAndClient\n      - alias: getRefreshTokenForUserAndClient\n        arguments:\n        - dest: userId\n          src: id\n        operationId: getRefreshTokenForUserAndClient\n      - alias: revokeTokensForUserAndClient\n        arguments:\n        - dest: userId\n          src: id\n        operationId: revokeTokensForUserAndClient\n      - alias: listClients\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listUserClients\n      - alias: activate\n        arguments:\n        - dest: userId\n          src: id\n        operationId: activateUser\n      - alias: reactivate\n        arguments:\n        - dest: userId\n          src: id\n        operationId: reactivateUser\n      - alias: deactivate\n        arguments:\n        - dest: userId\n          src: id\n        operationId: deactivateUser\n      - alias: suspend\n        arguments:\n        - dest: userId\n          src: id\n        operationId: suspendUser\n      - alias: unsuspend\n        arguments:\n        - dest: userId\n          src: id\n        operationId: unsuspendUser\n      - alias: resetPassword\n        arguments:\n        - dest: userId\n          src: id\n        operationId: resetPassword\n      - alias: expirePassword\n        arguments:\n        - dest: userId\n          src: id\n        operationId: expirePassword\n      - alias: expirePasswordAndGetTemporaryPassword\n        arguments:\n        - dest: userId\n          src: id\n        operationId: expirePasswordAndGetTemporaryPassword\n      - alias: unlock\n        arguments:\n        - dest: userId\n          src: id\n        operationId: unlockUser\n      - alias: resetFactors\n        arguments:\n        - dest: userId\n          src: id\n        operationId: resetFactors\n      - alias: deleteFactor\n        arguments:\n        - dest: userId\n          src: id\n        operationId: deleteFactor\n      - alias: addToGroup\n        arguments:\n        - dest: userId\n          src: id\n        description: Adds a user to a group with 'OKTA_GROUP' type\n        operationId: addUserToGroup\n      - alias: enrollFactor\n        arguments:\n        - dest: userId\n          src: id\n        operationId: enrollFactor\n      - alias: listSupportedFactors\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listSupportedFactors\n      - alias: listFactors\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listFactors\n      - alias: listSupportedSecurityQuestions\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listSupportedSecurityQuestions\n      - alias: getFactor\n        arguments:\n        - dest: userId\n          src: id\n        operationId: getFactor\n      - alias: setLinkedObject\n        arguments:\n        - dest: associatedUserId\n          src: id\n        operationId: setLinkedObjectForUser\n      - alias: listIdentityProviders\n        arguments:\n        - dest: userId\n          src: id\n        operationId: listUserIdentityProviders\n      - alias: getLinkedObjects\n        arguments:\n        - dest: userId\n          src: id\n        operationId: getLinkedObjectsForUser\n      - alias: clearSessions\n        arguments:\n        - dest: userId\n          src: id\n        operationId: clearUserSessions\n      - alias: removeLinkedObject\n        arguments:\n        - dest: userId\n          src: id\n        operationId: removeLinkedObjectForUser\n      x-okta-tags:\n      - User\n    UserActivationToken:\n      properties:\n        activationToken:\n          readOnly: true\n          type: string\n        activationUrl:\n          readOnly: true\n          type: string\n      type: object\n      x-okta-tags:\n      - User\n    UserCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        include:\n          items:\n            type: string\n          type: array\n      type: object\n      x-okta-tags:\n      - Policy\n    UserCredentials:\n      properties:\n        password:\n          $ref: '#/components/schemas/PasswordCredential'\n        provider:\n          $ref: '#/components/schemas/AuthenticationProvider'\n        recovery_question:\n          $ref: '#/components/schemas/RecoveryQuestionCredential'\n      type: object\n      x-okta-tags:\n      - User\n    UserIdentifierConditionEvaluatorPattern:\n      properties:\n        matchType:\n          enum:\n          - SUFFIX\n          - EXPRESSION\n          - STARTS_WITH\n          - EQUALS\n          - CONTAINS\n          type: string\n        value:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserIdentifierPolicyRuleCondition:\n      properties:\n        attribute:\n          type: string\n        patterns:\n          items:\n            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'\n          type: array\n        type:\n          enum:\n          - IDENTIFIER\n          - ATTRIBUTE\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserLifecycleAttributePolicyRuleCondition:\n      properties:\n        attributeName:\n          type: string\n        matchingValue:\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserNextLogin:\n      enum:\n      - changePassword\n      type: string\n      x-okta-tags:\n      - User\n    UserPolicyRuleCondition:\n      properties:\n        exclude:\n          items:\n            type: string\n          type: array\n        inactivity:\n          $ref: '#/components/schemas/InactivityPolicyRuleCondition'\n        include:\n          items:\n            type: string\n          type: array\n        lifecycleExpiration:\n          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'\n        passwordExpiration:\n          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'\n        userLifecycleAttribute:\n          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'\n      type: object\n      x-okta-tags:\n      - Policy\n    UserProfile:\n      properties:\n        city:\n          type: string\n        costCenter:\n          type: string\n        countryCode:\n          type: string\n        department:\n          type: string\n        displayName:\n          type: string\n        division:\n          type: string\n        email:\n          type: string\n        employeeNumber:\n          type: string\n        firstName:\n          type: string\n        honorificPrefix:\n          type: string\n        honorificSuffix:\n          type: string\n        lastName:\n          type: string\n        locale:\n          type: string\n        login:\n          type: string\n        manager:\n          type: string\n        managerId:\n          type: string\n        middleName:\n          type: string\n        mobilePhone:\n          type: string\n        nickName:\n          type: string\n        organization:\n          type: string\n        postalAddress:\n          type: string\n        preferredLanguage:\n          type: string\n        primaryPhone:\n          type: string\n        profileUrl:\n          type: string\n        secondEmail:\n          type: string\n        state:\n          type: string\n        streetAddress:\n          type: string\n        timezone:\n          type: string\n        title:\n          type: string\n        userType:\n          type: string\n        zipCode:\n          type: string\n      type: object\n      x-okta-extensible: true\n      x-okta-tags:\n      - User\n    UserStatus:\n      enum:\n      - ACTIVE\n      - DEPROVISIONED\n      - LOCKED_OUT\n      - PASSWORD_EXPIRED\n      - PROVISIONED\n      - RECOVERY\n      - STAGED\n      - SUSPENDED\n      type: string\n      x-okta-tags:\n      - User\n    UserStatusPolicyRuleCondition:\n      properties:\n        value:\n          enum:\n          - ACTIVE\n          - INACTIVE\n          - PENDING\n          - DELETED\n          - EXPIRED_PASSWORD\n          - ACTIVATING\n          - SUSPENDED\n          - DELETING\n          type: string\n      type: object\n      x-okta-tags:\n      - Policy\n    UserType:\n      properties:\n        _links:\n          additionalProperties:\n            properties: {}\n            type: object\n          readOnly: true\n          type: object\n        created:\n          format: date-time\n          readOnly: true\n          type: string\n        createdBy:\n          readOnly: true\n          type: string\n        default:\n          readOnly: true\n          type: boolean\n        description:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n        lastUpdated:\n          format: date-time\n          readOnly: true\n          type: string\n        lastUpdatedBy:\n          readOnly: true\n          type: string\n        name:\n          type: string\n      type: object\n      x-okta-crud:\n      - alias: create\n        arguments:\n        - dest: userType\n          self: true\n        operationId: createUserType\n      - alias: update\n        arguments:\n        - dest: typeId\n          src: id\n        - dest: userType\n          self: true\n        operationId: updateUserType\n      - alias: read\n        arguments:\n        - dest: typeId\n          src: id\n        operationId: getUserType\n      - alias: delete\n        arguments:\n        - dest: typeId\n          src: id\n        operationId: deleteUserType\n      x-okta-operations:\n      - alias: replaceUserType\n        arguments:\n        - dest: roleId\n          src: id\n        operationId: replaceUserType\n      x-okta-tags:\n      - UserType\n  securitySchemes:\n    api_token:\n      description: SSWS {API Token}\n      in: header\n      name: Authorization\n      type: apiKey\n  x-stackQL-resources:\n    appadmintargets:\n      id: okta.user.appadmintargets\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1catalog~1apps~1{appName}~1{applicationId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1catalog~1apps~1{appName}~1{applicationId}/PUT'\n          response:\n            openAPIDocKey: '204'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1catalog~1apps/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: appadmintargets\n      title: appadmintargets\n    appadmintargetsall:\n      id: okta.user.appadmintargetsall\n      methods:\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1catalog~1apps/PUT'\n          response:\n            openAPIDocKey: '200'\n      name: appadmintargetsall\n      title: appadmintargetsall\n    appinstanceadmintargets:\n      id: okta.user.appinstanceadmintargets\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1catalog~1apps~1{appName}~1{applicationId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1catalog~1apps~1{appName}~1{applicationId}/PUT'\n          response:\n            openAPIDocKey: '204'\n      name: appinstanceadmintargets\n      title: appinstanceadmintargets\n    applinks:\n      id: okta.user.applinks\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1appLinks/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: applinks\n      title: applinks\n    clientgrants:\n      id: okta.user.clientgrants\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1grants/DELETE'\n          response:\n            openAPIDocKey: '204'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1grants/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: clientgrants\n      title: clientgrants\n    clients:\n      id: okta.user.clients\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: clients\n      title: clients\n    clienttokens:\n      id: okta.user.clienttokens\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens~1{tokenId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        deleteAll:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens~1{tokenId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: clienttokens\n      title: clienttokens\n    grants:\n      id: okta.user.grants\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants~1{grantId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        deleteAll:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants~1{grantId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: grants\n      title: grants\n    grouptargets:\n      id: okta.user.grouptargets\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1groups~1{groupId}/PUT'\n          response:\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1groups~1{groupId}/PUT'\n          response:\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}~1targets~1groups/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: grouptargets\n      title: grouptargets\n    idps:\n      id: okta.user.idps\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1idps/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: idps\n      title: idps\n    linkedobject:\n      id: okta.user.linkedobject\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1linkedObjects~1{relationshipName}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1linkedObjects~1{relationshipName}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{associatedUserId}~1linkedObjects~1{primaryRelationshipName}~1{primaryUserId}/PUT'\n          response:\n            openAPIDocKey: '204'\n      name: linkedobject\n      title: linkedobject\n    roles:\n      id: okta.user.roles\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}/DELETE'\n          response:\n            openAPIDocKey: '204'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: roles\n      title: roles\n    sessions:\n      id: okta.user.sessions\n      methods:\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1sessions/DELETE'\n          response:\n            openAPIDocKey: '204'\n      name: sessions\n      title: sessions\n    users:\n      id: okta.user.users\n      methods:\n        activate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1activate/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        changePassword:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1credentials~1change_password/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        changeRecoveryQuestion:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1credentials~1change_recovery_question/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        deactivate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1deactivate/POST'\n          response:\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}/DELETE'\n          response:\n            openAPIDocKey: '202'\n        expirePassword:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1expire_password?tempPassword=false/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        expirePasswordTemp:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1expire_password?tempPassword=true/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        forgotPassword:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1credentials~1forgot_password/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        insert:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users/POST'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users/GET'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        reactivate:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1reactivate/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        resetFactors:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1reset_factors/POST'\n          response:\n            openAPIDocKey: '200'\n        resetPassword:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1reset_password/POST'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        suspend:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1suspend/POST'\n          response:\n            openAPIDocKey: '200'\n        unlock:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1unlock/POST'\n          response:\n            openAPIDocKey: '200'\n        unsuspend:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}~1lifecycle~1unsuspend/POST'\n          response:\n            openAPIDocKey: '200'\n        update:\n          operation:\n            $ref: '#/paths/~1api~1v1~1users~1{userId}/PUT'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: users\n      title: users\nexternalDocs:\n  description: Find more info here\n  url: https://developer.okta.com/docs/api/getting_started/design_principles.html\ninfo:\n  contact:\n    email: devex-public@okta.com\n    name: Okta Developer Team\n    url: https://developer.okta.com/\n  description: Allows customers to easily access the Okta API\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  termsOfService: https://developer.okta.com/terms/\n  title: Okta API\n  version: 2.8.0\nopenapi: 3.0.1\npaths:\n  /api/v1/users:\n    get:\n      description: Lists users in your organization with pagination in most cases.  A\n        subset of users can be returned that match a supported filter expression or\n        search criteria.\n      operationId: listUsers\n      parameters:\n      - description: Finds a user that matches firstName, lastName, and email properties\n        in: query\n        name: q\n        schema:\n          type: string\n      - description: Specifies the pagination cursor for the next page of users\n        in: query\n        name: after\n        schema:\n          type: string\n      - description: Specifies the number of results returned\n        in: query\n        name: limit\n        schema:\n          default: 10\n          format: int32\n          type: integer\n      - description: Filters users with a supported expression for a subset of properties\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Searches for users with a supported filtering  expression for\n          most properties\n        in: query\n        name: search\n        schema:\n          type: string\n      - in: query\n        name: sortBy\n        schema:\n          type: string\n      - in: query\n        name: sortOrder\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: List Users\n      tags:\n      - User\n    post:\n      description: Creates a new user in your Okta organization with or without credentials.\n      operationId: createUser\n      parameters:\n      - description: Executes activation lifecycle operation when creating the user\n        in: query\n        name: activate\n        schema:\n          default: true\n          type: boolean\n      - description: Indicates whether to create a user with a specified authentication\n          provider\n        in: query\n        name: provider\n        schema:\n          default: false\n          type: boolean\n      - description: With activate=true, set nextLogin to \"changePassword\" to have\n          the password be EXPIRED, so user must change it the next time they log in.\n        in: query\n        name: nextLogin\n        schema:\n          type: string\n          x-okta-added-version: 0.14.0\n          x-openapi-v3-schema-ref: '#/components/schemas/UserNextLogin'\n        x-okta-added-version: 0.14.0\n        x-openapi-v3-schema-ref: '#/components/schemas/UserNextLogin'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      security:\n      - api_token: []\n      summary: Create User\n      tags:\n      - User\n      x-codegen-request-body-name: body\n  /api/v1/users/{associatedUserId}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:\n    put:\n      operationId: setLinkedObjectForUser\n      parameters:\n      - in: path\n        name: associatedUserId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: primaryRelationshipName\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: primaryUserId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}:\n    delete:\n      description: Deletes a user permanently.  This operation can only be performed\n        on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**\n      operationId: deactivateOrDeleteUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: sendEmail\n        schema:\n          default: false\n          type: boolean\n          x-okta-added-version: 1.5.0\n        x-okta-added-version: 1.5.0\n      responses:\n        '202':\n          content: {}\n          description: ACCEPTED\n      security:\n      - api_token: []\n      summary: Delete User\n      tags:\n      - User\n    get:\n      description: Fetches a user from your Okta organization.\n      operationId: getUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      security:\n      - api_token: []\n      summary: Get User\n      tags:\n      - User\n    post:\n      description: Fetch a user by `id`, `login`, or `login shortname` if the short\n        name is unambiguous.\n      operationId: partialUpdateUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: strict\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n      x-codegen-request-body-name: user\n    put:\n      description: Update a user's profile and/or credentials using strict-update\n        semantics.\n      operationId: updateUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: strict\n        schema:\n          type: boolean\n          x-okta-added-version: 1.10.0\n        x-okta-added-version: 1.10.0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      security:\n      - api_token: []\n      summary: Update User\n      tags:\n      - User\n      x-codegen-request-body-name: user\n  /api/v1/users/{userId}/appLinks:\n    get:\n      description: Fetches appLinks for all direct or indirect (via group membership)\n        assigned applications.\n      operationId: listAppLinks\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AppLink'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: Get Assigned App Links\n      tags:\n      - User\n  /api/v1/users/{userId}/clients:\n    get:\n      description: Lists all client resources for which the specified user has grants\n        or tokens.\n      operationId: listUserClients\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OAuth2Client'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/clients/{clientId}/grants:\n    delete:\n      description: Revokes all grants for the specified user and client\n      operationId: revokeGrantsForUserAndClient\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Lists all grants for a specified user and client\n      operationId: listGrantsForUserAndClient\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/clients/{clientId}/tokens:\n    delete:\n      description: Revokes all refresh tokens issued for the specified User and Client.\n      operationId: revokeTokensForUserAndClient\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Lists all refresh tokens issued for the specified User and Client.\n      operationId: listRefreshTokensForUserAndClient\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OAuth2RefreshToken'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:\n    delete:\n      description: Revokes the specified refresh token.\n      operationId: revokeTokenForUserAndClient\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Gets a refresh token issued for the specified User and Client.\n      operationId: getRefreshTokenForUserAndClient\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: clientId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: tokenId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: 20\n          type: integer\n      - in: query\n        name: after\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2RefreshToken'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/credentials/change_password:\n    post:\n      description: Changes a user's password by validating the user's current password.\n        This operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`,\n        or `RECOVERY` status that have a valid password credential\n      operationId: changePassword\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: strict\n        schema:\n          type: boolean\n          x-okta-added-version: 1.10.0\n        x-okta-added-version: 1.10.0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCredentials'\n          description: Success\n      security:\n      - api_token: []\n      summary: Change Password\n      tags:\n      - User\n      x-codegen-request-body-name: changePasswordRequest\n  /api/v1/users/{userId}/credentials/change_recovery_question:\n    post:\n      description: Changes a user's recovery question \u0026 answer credential by validating\n        the user's current password.  This operation can only be performed on users\n        in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid password\n        credential\n      operationId: changeRecoveryQuestion\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCredentials'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserCredentials'\n          description: Success\n      security:\n      - api_token: []\n      summary: Change Recovery Question\n      tags:\n      - User\n      x-codegen-request-body-name: userCredentials\n  /api/v1/users/{userId}/credentials/forgot_password:\n    post:\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForgotPasswordResponse'\n          description: Success\n      security:\n      - api_token: []\n      summary: Forgot Password\n      tags:\n      - User\n      x-okta-multi-operation:\n      - description: Generates a one-time token (OTT) that can be used to reset a\n          user's password\n        operationId: forgotPasswordGenerateOneTimeToken\n        parameters:\n        - default: true\n          in: query\n          name: sendEmail\n          type: boolean\n      - description: Sets a new password for a user by validating the user's answer\n          to their current recovery question\n        operationId: forgotPasswordSetNewPassword\n        parameters:\n        - in: body\n          name: user\n          required: true\n          schema:\n            $ref: '#/components/schemas/UserCredentials'\n        - default: true\n          in: query\n          name: sendEmail\n          type: boolean\n  /api/v1/users/{userId}/grants:\n    delete:\n      description: Revokes all grants for a specified user\n      operationId: revokeUserGrants\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Lists all grants for the specified user\n      operationId: listUserGrants\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: scopeId\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/grants/{grantId}:\n    delete:\n      description: Revokes one grant for a specified user\n      operationId: revokeUserGrant\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: grantId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Gets a grant for the specified user\n      operationId: getUserGrant\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: grantId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/groups:\n    get:\n      description: Fetches the groups of which the user is a member.\n      operationId: listUserGroups\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Group'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: Get Member Groups\n      tags:\n      - User\n  /api/v1/users/{userId}/idps:\n    get:\n      description: Lists the IdPs associated with the user.\n      operationId: listUserIdentityProviders\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/IdentityProvider'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      summary: Listing IdPs associated with a user\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/activate:\n    post:\n      description: Activates a user.  This operation can only be performed on users\n        with a `STAGED` status.  Activation of a user is an asynchronous operation.\n        The user will have the `transitioningToStatus` property with a value of `ACTIVE`\n        during activation to indicate that the user hasn't completed the asynchronous\n        operation.  The user will have a status of `ACTIVE` when the activation process\n        is complete.\n      operationId: activateUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - description: Sends an activation email to the user if true\n        in: query\n        name: sendEmail\n        required: true\n        schema:\n          default: true\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserActivationToken'\n          description: Success\n      security:\n      - api_token: []\n      summary: Activate User\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/deactivate:\n    post:\n      description: Deactivates a user.  This operation can only be performed on users\n        that do not have a `DEPROVISIONED` status.  Deactivation of a user is an asynchronous\n        operation.  The user will have the `transitioningToStatus` property with a\n        value of `DEPROVISIONED` during deactivation to indicate that the user hasn't\n        completed the asynchronous operation.  The user will have a status of `DEPROVISIONED`\n        when the deactivation process is complete.\n      operationId: deactivateUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: sendEmail\n        schema:\n          default: false\n          type: boolean\n          x-okta-added-version: 1.5.0\n        x-okta-added-version: 1.5.0\n      responses:\n        '200':\n          content: {}\n          description: OK\n      security:\n      - api_token: []\n      summary: Deactivate User\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/expire_password?tempPassword=false:\n    post:\n      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`\n        so that the user is required to change their password at their next login.\n      operationId: expirePassword\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Success\n      security:\n      - api_token: []\n      summary: Expire Password\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/expire_password?tempPassword=true:\n    post:\n      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`\n        and the user's password is reset to a temporary password that is returned.\n      operationId: expirePasswordAndGetTemporaryPassword\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TempPassword'\n          description: Success\n      security:\n      - api_token: []\n      summary: Expire Password\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/reactivate:\n    post:\n      description: Reactivates a user.  This operation can only be performed on users\n        with a `PROVISIONED` status.  This operation restarts the activation workflow\n        if for some reason the user activation was not completed when using the activationToken\n        from [Activate User](#activate-user).\n      operationId: reactivateUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - description: Sends an activation email to the user if true\n        in: query\n        name: sendEmail\n        schema:\n          default: false\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserActivationToken'\n          description: Success\n      security:\n      - api_token: []\n      summary: Reactivate User\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/reset_factors:\n    post:\n      description: This operation resets all factors for the specified user. All MFA\n        factor enrollments returned to the unenrolled state. The user's status remains\n        ACTIVE. This link is present only if the user is currently enrolled in one\n        or more MFA factors.\n      operationId: resetFactors\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: OK\n      security:\n      - api_token: []\n      summary: Reset Factors\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/reset_password:\n    post:\n      description: Generates a one-time token (OTT) that can be used to reset a user's\n        password.  The OTT link can be automatically emailed to the user or returned\n        to the API caller and distributed using a custom flow.\n      operationId: resetPassword\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: sendEmail\n        required: true\n        schema:\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetPasswordToken'\n          description: Success\n      security:\n      - api_token: []\n      summary: Reset Password\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/suspend:\n    post:\n      description: Suspends a user.  This operation can only be performed on users\n        with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when\n        the process is complete.\n      operationId: suspendUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: OK\n      security:\n      - api_token: []\n      summary: Suspend User\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/unlock:\n    post:\n      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`\n        status.  Users will be able to login with their current password.\n      operationId: unlockUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      summary: Unlock User\n      tags:\n      - User\n  /api/v1/users/{userId}/lifecycle/unsuspend:\n    post:\n      description: Unsuspends a user and returns them to the `ACTIVE` state.  This\n        operation can only be performed on users that have a `SUSPENDED` status.\n      operationId: unsuspendUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      summary: Unsuspend User\n      tags:\n      - User\n  /api/v1/users/{userId}/linkedObjects/{relationshipName}:\n    delete:\n      description: Delete linked objects for a user, relationshipName can be ONLY\n        a primary relationship name\n      operationId: removeLinkedObjectForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: relationshipName\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Get linked objects for a user, relationshipName can be a primary\n        or associated relationship name\n      operationId: getLinkedObjectsForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: relationshipName\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: -1\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ResponseLinks'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/roles:\n    get:\n      description: Lists all roles assigned to a user.\n      operationId: listAssignedRolesForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: expand\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Role'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n    post:\n      description: Assigns a role to a user.\n      operationId: assignRoleToUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: disableNotifications\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AssignRoleRequest'\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: Created\n      security:\n      - api_token: []\n      tags:\n      - User\n      x-codegen-request-body-name: assignRoleRequest\n  /api/v1/users/{userId}/roles/{roleId}:\n    delete:\n      description: Unassigns a role from a user.\n      operationId: removeRoleFromUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    get:\n      description: Gets role that is assigne to user.\n      operationId: getUserRole\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps:\n    get:\n      description: Lists all App targets for an `APP_ADMIN` Role assigned to a User.\n        This methods return list may include full Applications or Instances. The response\n        for an instance will have an `ID` value, while Application will not have an\n        ID.\n      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CatalogApplication'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n    put:\n      description: Success\n      operationId: addAllAppsAsTargetToRole\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}:\n    delete:\n      description: Success\n      operationId: removeApplicationTargetFromApplicationAdministratorRoleForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appName\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    put:\n      description: Success\n      operationId: addApplicationTargetToAdminRoleForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appName\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:\n    delete:\n      description: Remove App Instance Target to App Administrator Role given to a\n        User\n      operationId: removeApplicationTargetFromAdministratorRoleForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appName\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: applicationId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      summary: Remove App Instance Target to App Administrator Role given to a User\n      tags:\n      - User\n    put:\n      description: Add App Instance Target to App Administrator Role given to a User\n      operationId: addApplicationTargetToAppAdminRoleForUser\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: appName\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: applicationId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      summary: Add App Instance Target to App Administrator Role given to a User\n      tags:\n      - User\n  /api/v1/users/{userId}/roles/{roleId}/targets/groups:\n    get:\n      description: Success\n      operationId: listGroupTargetsForRole\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: after\n        schema:\n          type: string\n      - in: query\n        name: limit\n        schema:\n          default: 20\n          format: int32\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Group'\n                type: array\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:\n    delete:\n      description: Success\n      operationId: removeGroupTargetFromRole\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\n    put:\n      description: Success\n      operationId: addGroupTargetToRole\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: roleId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: groupId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content: {}\n          description: Success\n      security:\n      - api_token: []\n      tags:\n      - User\n  /api/v1/users/{userId}/sessions:\n    delete:\n      description: Removes all active identity provider sessions. This forces the\n        user to authenticate on the next operation. Optionally revokes OpenID Connect\n        and OAuth refresh and access tokens issued to the user.\n      operationId: clearUserSessions\n      parameters:\n      - in: path\n        name: userId\n        required: true\n        schema:\n          type: string\n      - description: Revoke issued OpenID Connect and OAuth refresh and access tokens\n        in: query\n        name: oauthTokens\n        schema:\n          default: false\n          type: boolean\n      responses:\n        '204':\n          content: {}\n          description: No Content\n      security:\n      - api_token: []\n      tags:\n      - User\nservers:\n- url: https://{subdomain}.okta.com/\n  variables:\n    subdomain:\n      default: my-domain\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/-/blob/providers/src/okta/v0.1.0/services/User.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/providers/src/okta/v0.1.0/services/User.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:70817: path MUST NOT contain a query string"
}