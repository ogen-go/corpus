{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/funbox/tomograph"
		},
		"file": {
			"name": "spree.yaml",
			"size": 0,
			"path": "spec/fixtures/openapi3/spree.yaml",
			"byteSize": 85595,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:3000/api/v2/storefront'\ninfo:\n  version: 2.0.0\n  title: Storefront API\n  description: \u003e-\n    \u003cp\u003e\n      Storefront API v2 is a modern REST API based on the\n      \u003ca href=\"https://jsonapi.org/\" target=\"_blank\" rel=\"noopener\"\u003eJSON API spec\u003c/a\u003e\n      which provides you with necessary endpoints to build amazing user\n      intefaces either in JavaScript frameworks or native mobile libraries.\n    \u003c/p\u003e\n    \u003cp\u003e\n      Please read our \u003ca href=\"https://guides.spreecommerce.org/api/v2/\"\u003e\n        introduction to the API v2\n      \u003c/a\u003e\n    \u003c/p\u003e\n    \u003cp\u003e\n      Download our\n      \u003ca href=\"https://github.com/spree/spree-storefront-api-v2-js-sdk\"\u003e\n        official JavaScript \u0026 TypeScript SDK\n      \u003c/a\u003e\n    \u003c/p\u003e\n    \u003cp\u003e\n      \u003ca href=\"https://raw.githubusercontent.com/spree/spree/master/api/docs/v2/storefront/index.yaml\" target=\"_blank\" rel=\"noopener\"\u003e\n        Import this documentation to Postman\n      \u003c/a\u003e\n    \u003c/p\u003e\npaths:\n  '/account':\n    get:\n      description: \u003e-\n        Returns current user information\n      tags:\n        - Account\n      operationId: 'Account Information'\n      parameters:\n        - $ref: '#/components/parameters/AccountIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      security:\n        - bearerAuth: []\n    post:\n      description: \u003e-\n        Creates a new account\n\n        This endpoint requires [Spree Auth Devise](https://github.com/spree/spree_auth_devise) gem installed\n      tags:\n        - Account\n      operationId: 'Account Creation'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                user:\n                  type: object\n                  properties:\n                    email:\n                      type: string\n                      example: 'john@snow.org'\n                    password:\n                      type: string\n                      example: 'spree123'\n                    password_confirmation:\n                      type: string\n                      example: 'spree123'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        '422':\n          description: Validation errors\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    patch:\n      description: \u003e-\n        Updates user account\n\n        This endpoint requires [Spree Auth Devise](https://github.com/spree/spree_auth_devise) gem installed\n      tags:\n        - Account\n      operationId: 'Account Updates'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                user:\n                  type: object\n                  properties:\n                    email:\n                      type: string\n                      example: 'john@snow.org'\n                    password:\n                      type: string\n                      example: 'spree123'\n                    password_confirmation:\n                      type: string\n                      example: 'spree123'\n      responses:\n        '200':\n          description: ok\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        '422':\n          description: Validation errors\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - bearerAuth: []\n  '/account/addresses':\n    get:\n      description: \u003e-\n        Returns a list of Addresses for the signed in User\n      tags:\n        - Account\n      operationId: 'Addresses list'\n      responses:\n        '200':\n          description: Listing user addresses.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/AddressList'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      security:\n        - bearerAuth: []\n    post:\n      description: \u003e-\n        Create a new Address for the signed in User\n      tags:\n        - Account\n      operationId: 'Create Address'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/AddressPayload'\n      responses:\n        '200':\n          description: Created Address.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/AddressList'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      security:\n        - bearerAuth: []\n  '/account/addresses/{id}':\n    patch:\n      description: \u003e-\n        Update selected Address for the signed in User\n      tags:\n        - Account\n      operationId: 'Update Address'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: Selected Address for update\n          schema:\n            type: string\n          example: '1'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/AddressPayload'\n      responses:\n        '200':\n          description: Updated Address.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/AddressList'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      security:\n        - bearerAuth: []\n  '/account/credit_cards':\n    get:\n      description: \u003e-\n        Returns a list of Credit Cards for the signed in User\n      tags:\n        - Account\n      operationId: 'Credit Cards list'\n      responses:\n        '200':\n          description: Listing user credit cards.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/CreditCardList'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      security:\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: filter[payment_method_id]\n          schema:\n            type: integer\n          example: 2\n          description: Filter based on payment method ID\n        - $ref: '#/components/parameters/CreditCardIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n  '/account/credit_cards/default':\n    get:\n      description: \u003e-\n        Return the User's default Credit Card\n      tags:\n        - Account\n      operationId: 'Default Credit Card'\n      responses:\n        '200':\n          description: Listing user default credit card.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/CreditCard'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      parameters:\n        - $ref: '#/components/parameters/CreditCardIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      security:\n        - bearerAuth: []\n  '/account/orders':\n    get:\n      description: Returns Orders placed by the User. Only completed ones.\n      tags:\n        - Account\n      operationId: 'Completed Orders'\n      responses:\n        '200':\n          description: Listing user completed orders.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/CartList'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n        - $ref: '#/components/parameters/PageParam'\n        - $ref: '#/components/parameters/PerPageParam'\n      security:\n        - bearerAuth: []\n  '/account/orders/{number}':\n    get:\n      description: \u003e-\n        Return the User's completed Order\n      tags:\n        - Account\n      operationId: 'Completed User Order'\n      responses:\n        '200':\n          description: Listing user completed order.\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      parameters:\n        - $ref: '#/components/parameters/OrderParam'\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      security:\n        - bearerAuth: []\n  '/order_status/{number}':\n    get:\n      description: \u003e-\n        Returns placed Order\n      tags:\n        - Order Status\n      operationId: 'Order Status'\n      responses:\n        '200':\n          description: Requested Order information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      parameters:\n        - $ref: '#/components/parameters/OrderParam'\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      security:\n        - orderToken: []\n  '/cart':\n    post:\n      description: \u003e-\n        \u003cp\u003eCreates new Cart and returns it attributes.\u003c/p\u003e\n        \u003cbr /\u003e\n        \u003cp\u003e\n          \u003cstrong\u003etoken\u003c/strong\u003e attribute, can be used for authorization of all operations\n          on this particular Cart and Checkout.\n        \u003c/p\u003e\n      tags:\n        - Cart\n      operationId: 'Create Cart'\n      responses:\n        '201':\n          description: Cart was successfully created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n    get:\n      description: Returns contents of the cart\n      tags:\n        - Cart\n      operationId: 'Get Cart'\n      responses:\n        '200':\n          description: Correct cart was returned\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n\n  '/cart/add_item':\n    post:\n      description: \u003e-\n        Adds a Product Variant to the Cart\n        \u003cbr /\u003e\n        \u003cp\u003e\n          Additional parameters passed in \u003cstrong\u003eoptions\u003c/strong\u003e hash\n          must be registered in \u003ccite\u003econfig/initialiers/spree.rb\u003c/cite\u003e, eg.\n        \u003c/p\u003e\n        \u003cbr /\u003e\n        \u003cblockquote\u003e\n          Spree::PermittedAttributes.line_item_attributes \u003c\u003c :foo\n        \u003c/blockquote\u003e\n      tags:\n        - Cart\n      operationId: 'Add Item'\n      responses:\n        '200':\n          description: Item was added to the Cart successfully\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                variant_id:\n                  type: string\n                quantity:\n                  type: integer\n                options:\n                  type: object\n                  description: \u003e-\n                    Additional custom options.\n                    You need to add them via\n                    `Spree::PermittedAttributes.line_item_attributes \u003c\u003c :foo`\n                    in `config/initialiers/spree.rb`\n              example:\n                variant_id: \"1\"\n                quantity: 5\n\n  '/cart/set_quantity':\n    patch:\n      description: Sets the quantity of a given line item. It has to be a positive integer greater than 0.\n      tags:\n        - Cart\n      operationId: 'Set Quantity'\n      responses:\n        '200':\n          description: New quantity has been successfully set for a requested Line Item\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Stock quantity is not sufficient for this request to be fulfielled\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                line_item_id:\n                  type: string\n                quantity:\n                  type: integer\n              example:\n                line_item_id: \"1\"\n                quantity: 5\n\n  '/cart/remove_line_item/{line_item_id}':\n    delete:\n      description: Removes Line Item from Cart\n      tags:\n        - Cart\n      operationId: 'Remove Line Item'\n      parameters:\n        - $ref: '#/components/parameters/LineItemId'\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Requested Line Item has been removed from the Cart\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n\n  '/cart/empty':\n    patch:\n      description: Empties the Cart\n      tags:\n        - Cart\n      operationId: 'Empty Cart'\n      responses:\n        '200':\n          description: Cart has been successfully emptied\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n\n  '/cart/apply_coupon_code':\n    patch:\n      description: Applies a coupon code to the Cart\n      tags:\n        - Cart\n      operationId: 'Apply Coupon Code'\n      responses:\n        '200':\n          description: Coupon code was applied successfully\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Coupon code couldn't be applied\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                coupon_code:\n                  type: string\n                  example: 'DISCOUNT10'\n\n  '/cart/remove_coupon_code/{coupon_code}':\n    delete:\n      description: Removes a coupon code from the Cart. If no `coupon_code` parameter is passed will remove all applied coupon codes.\n      tags:\n        - Cart\n      operationId: 'Remove Coupon Code'\n      parameters:\n        - name: coupon_code\n          in: path\n          required: false\n          description: Selected Coupon code for removal\n          schema:\n            type: string\n          example: 'DISCOUNT10'\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Coupon code was removed successfully\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Coupon code couldn't be removed\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n\n  '/cart/estimate_shipping_rates':\n    get:\n      description:  Returns a list of Estimated Shipping Rates for Cart\n      tags:\n        - Cart\n      operationId: 'Estimate Shipping Rates'\n      parameters:\n        - name: country_iso\n          in: query\n          description: \u003e-\n            Country ISO or ISO3 symbol to get estimations for this destination,\n            by default we'll try to reuse Cart shipping address or the default Country for the current Store\n          schema:\n            type: string\n          example: 'USA'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns a list of estimated Shipping Rates for Cart\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/EstimateShippingRatesList'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n\n  '/checkout':\n    patch:\n      description: \u003e-\n        Updates the Checkout\n        \u003cbr /\u003e\n        \u003cp\u003e\n          You can run multiple Checkout updates with different data types.\n        \u003c/p\u003e\n        \u003ch3\u003e1. Update the Customer information\u003ch3\u003e\n        \u003cpre\u003ePATCH /checkout\u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cpre\u003e\n          order: {\n            email: 'john@snow.org',\n            special_instructions: 'Please leave at door',\n            bill_address_attributes: {\n              firstname: 'John',\n              lastname: 'Snow',\n              address1: '7735 Old Georgetown Road',\n              city: 'Bethesda',\n              phone: '3014445002',\n              zipcode: '20814',\n              state_name: 'MD',\n              country_iso: 'US'\n            },\n            ship_address_attributes: {\n              firstname: 'John',\n              lastname: 'Snow',\n              address1: '7735 Old Georgetown Road',\n              city: 'Bethesda',\n              phone: '3014445002',\n              zipcode: '20814',\n              state_name: 'MD',\n              country_iso: 'US'\n            }\n          }\n        \u003c/pre\u003e\n        \u003ch3\u003e2. Fetch Shipping Rates\u003c/h3\u003e\n        \u003cpre\u003e\n        GET /checkout/shipping_rates\n        \u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cp\u003e\n          Order can have multiple Shipments, eg. some Items will be shipped right away,\n          and some needs to be backordered.\n        \u003c/p\u003e\n        \u003cp\u003e\n          Each Shipment can have different Shipping Method/Rate selected.\n        \u003c/p\u003e\n\n        \u003ch3\u003e3. Select shipping method(s)\u003c/h3\u003e\n        \u003cpre\u003ePATCH /checkout\u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cpre\u003e\n          order: {\n            shipments_attributes: [\n              {\n                id: 1,\n                selected_shipping_rate_id: 1\n              }\n            ]\n          }\n        \u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cp\u003e\n          \u003ccode\u003eselected_shipping_rate_id\u003c/code\u003e is the ID of a Shipping Rate.\n          \u003ccode\u003eid\u003c/code\u003e is the ID of the Shipment itself. You can update multiple\n          Shipments at once.\n        \u003c/p\u003e\n        \u003ch3\u003e4. Add Payment Source(s)\u003c/h3\u003e\n        \u003cpre\u003ePATCH /checkout\u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cpre\u003e\n          {\n            order: {\n              payments_attributes: [\n                {\n                  payment_method_id: 1,\n                  source_attributes: {\n                    number: '4111111111111111',\n                    month: '01',\n                    year: '2022',\n                    verification_value: '123',\n                    name: 'John Doe'\n                  }\n                }\n              ]\n            }\n          }\n        \u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cp\u003e\n          You can obtain \u003ccode\u003epayment_method_id\u003c/code\u003e by querying\n          \u003ccode\u003eGET /checkout/payment_methods\u003c/code\u003e endpoint.\n        \u003c/p\u003e\n        \u003ch3\u003e5. Complete checkout\u003c/h3\u003e\n        \u003cpre\u003ePATCH /checkout/complete\u003c/pre\u003e\n        \u003cbr /\u003e\n        \u003cp\u003e\n          This will complete the Checout and will marke the Order as completed.\n          You cannot execute any operations on this Order anymore via Storefront API.\n          Further operations on the Order are possible via Platform API.\n        \u003c/p\u003e\n      tags:\n        - Checkout\n      operationId: 'Update Checkout'\n      responses:\n        '200':\n          description: Checkout was updated\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Checkout couldn't be updated\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n      requestBody:\n        required: true\n        content:\n          application/vnd.api+json:\n            schema:\n              type: object\n              properties:\n                order:\n                  type: object\n                  properties:\n                    email:\n                      type: string\n                      example: 'john@snow.org'\n                    special_instructions:\n                      type: string\n                      example: 'Please leave at door'\n                    bill_address_attributes:\n                      $ref: '#/components/schemas/AddressPayload'\n                    ship_address_attributes:\n                      $ref: '#/components/schemas/AddressPayload'\n                    payments_attributes:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          payment_method_id:\n                            type: number\n                            example: 1\n                            description: 'ID of selected payment method'\n                          source_attributes:\n                            $ref: '#/components/schemas/PaymentSource'\n                    shipments_attributes:\n                      type: object\n\n  '/checkout/next':\n    patch:\n      description: Goes to the next Checkout step\n      tags:\n        - Checkout\n      operationId: 'Checkout Next'\n      responses:\n        '200':\n          description: Checkout transitioned to the next step\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Checkout couldn't transition to the next step\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n\n  '/checkout/advance':\n    patch:\n      description: Advances Checkout to the furthest Checkout step validation allows, until the Complete step\n      tags:\n        - Checkout\n      operationId: 'Advance Checkout'\n      responses:\n        '200':\n          description: Checkout was advanced to the furthest step\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Checkout couldn't transition to the next step\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n\n  '/checkout/complete':\n    patch:\n      description: Completes the Checkout\n      tags:\n        - Checkout\n      operationId: 'Complete Checkout'\n      responses:\n        '200':\n          description: Checkout was completed\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Checkout couldn't be completed\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n\n  '/checkout/add_store_credit':\n    post:\n      description: Adds Store Credit payments if a user has any\n      tags:\n        - Checkout\n      operationId: 'Add Store Credit'\n      responses:\n        '200':\n          description: Store Credit payment created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Store Credit couldn't be created\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - in: query\n          name: amount\n          description: \u003e-\n            Amount of Store Credit to use.\n            As much as possible Store Credit will be applied if no amount is passed.\n          schema:\n            type: string\n          example: 100.0\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n  '/checkout/remove_store_credit':\n    post:\n      description: Remove Store Credit payments if any applied\n      tags:\n        - Checkout\n      operationId: 'Remove Store Credit'\n      responses:\n        '200':\n          description: Store Credit payment removed\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Cart'\n        '422':\n          description: Store Credit payments weren't removed\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n      parameters:\n        - $ref: '#/components/parameters/CartIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n\n  '/checkout/payment_methods':\n    get:\n      description: \u003e-\n        Returns a list of available Payment Methods\n      tags:\n        - Checkout\n      operationId: 'Payment Methods'\n      responses:\n        '200':\n          description: Returns a list of available Payment Methods\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/PaymentMethodsList'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n\n  '/checkout/shipping_rates':\n    get:\n      description: \u003e-\n        Returns a list of available Shipping Rates for Checkout.\n        Shipping Rates are grouped against Shipments.\n        Each checkout can have multiple Shipments eg. some products are available\n        in stock and will be send out instantly and some needs to be backordered.\n      tags:\n        - Checkout\n      operationId: 'Shipping Rates'\n      responses:\n        '200':\n          description: Returns a list of available Shipping Rates for Checkout\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/ShippingRatesList'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      security:\n        - orderToken: []\n        - bearerAuth: []\n\n  '/products':\n    get:\n      description: \u003e-\n        Returns a list of Products\n      tags:\n        - Products\n      operationId: 'Products List'\n      parameters:\n        - $ref: '#/components/parameters/FilterByIds'\n        - $ref: '#/components/parameters/FilterBySKUs'\n        - in: query\n          name: filter[price]\n          schema:\n            type: string\n          example: 10,100\n          description: Filter Prodcuts based on price (minimum, maximum range)\n        - in: query\n          name: filter[taxons]\n          schema:\n            type: string\n          example: 1,2,3,4,5,6,7,8,9,10,11\n          description: Filter Prodcuts based on taxons (IDs of categories, brands, etc)\n        - in: query\n          name: filter[name]\n          schema:\n            type: string\n          example: rails\n          description: Find Prodcuts with matching name (supports wild-card, partial-word match search)\n        - in: query\n          name: 'filter[options][tshirt-color]'\n          schema:\n            type: string\n          example: Red\n          description: \u003e-\n            Find Prodcuts with Variants that have the specified option (eg. color, size)\n            and value (eg. red, XS)\n        - in: query\n          name: 'filter[show_deleted]'\n          schema:\n            type: boolean\n          example: true\n          description: Returns also deleted products\n        - in: query\n          name: 'filter[show_discontinued]'\n          schema:\n            type: boolean\n          example: true\n          description: Returns also discontinued products\n        - in: query\n          name: sort\n          schema:\n            type: string\n          example: \u003e-\n            -updated_at,price\n          description:  \u003e-\n            Sort products based on:\n            \u003cul\u003e\n              \u003cli\u003eprice (ascending/descenging)\u003c/li\u003e\n              \u003cli\u003eupdated_at (ascending/descenging)\u003c/li\u003e\n            \u003c/ul\u003e\n            Use \u003cq\u003e-\u003c/q\u003e sign to set descenging sort, eg. \u003cq\u003e-updated_at\u003c/q\u003e\n        - $ref: '#/components/parameters/PageParam'\n        - $ref: '#/components/parameters/PerPageParam'\n        - $ref: '#/components/parameters/ProductIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns a list of Products\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/ProductsList'\n  '/products/{id}':\n    get:\n      description: \u003e-\n        To view the details for a single product, make a request using that\n        product's permalink:\u003cbr /\u003e \u003ccode\u003eGET /api/v2/products/a-product\u003c/code\u003e\n        \u003cbr /\u003e\u003cbr /\u003eYou may also query by the product's id attribute:\u003cbr /\u003e\u003ccode\u003eGET\n        /api/v2/products/1 \u003c/code\u003e \u003cbr /\u003e\u003cbr /\u003eNote that the API will attempt a\n        permalink lookup before an ID lookup.\n      tags:\n        - Products\n      operationId: 'Show Product'\n      parameters:\n        - $ref: '#/components/parameters/IdOrPermalink'\n        - $ref: '#/components/parameters/ProductIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns the requested Product\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n\n  '/taxons':\n    get:\n      description: \u003e-\n        Returns a list of Taxons. You can filter out taxons by...\n      tags:\n        - Taxons\n      operationId: 'Taxons List'\n      parameters:\n        - $ref: '#/components/parameters/FilterByIds'\n        - $ref: '#/components/parameters/FilterByName'\n        - in: query\n          name: filter[parent_id]\n          schema:\n            type: string\n          example: '1'\n          description: Fetch children nodes of specified Taxon\n        - in: query\n          name: filter[taxonomy_id]\n          schema:\n            type: string\n          example: '1'\n          description: Fetch Taxons in a specified Taxonomy\n        - in: query\n          name: filter[roots]\n          schema:\n            type: boolean\n          example: false\n          description: Fetch only root Taxons (Taxonomies)\n        - $ref: '#/components/parameters/PageParam'\n        - $ref: '#/components/parameters/PerPageParam'\n        - $ref: '#/components/parameters/TaxonIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns a list of Taxons\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/TaxonsList'\n\n  '/taxons/{id}':\n    get:\n      description: \u003e-\n        To view the details for a single Taxon, make a request using that\n        Taxon's permalink:\u003cbr /\u003e \u003ccode\u003eGET /api/v2/taxons/t-shirts\u003c/code\u003e\n        \u003cbr /\u003e\u003cbr /\u003eYou may also query by the Taxons's ID attribute:\u003cbr /\u003e\u003ccode\u003eGET\n        /api/v2/taxons/1 \u003c/code\u003e \u003cbr /\u003e\u003cbr /\u003eNote that the API will attempt a\n        permalink lookup before an ID lookup.\n      tags:\n        - Taxons\n      operationId: 'Show Taxon'\n      parameters:\n        - $ref: '#/components/parameters/IdOrPermalink'\n        - $ref: '#/components/parameters/TaxonIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns the reqested Taxon\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Taxon'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n\n  '/countries':\n    get:\n      description: \u003e-\n        Returns a list of all Countries\n      tags:\n        - Countries\n      operationId: 'Countries List'\n      responses:\n        '200':\n          description: Returns a list of all Countries\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/CountriesList'\n\n  '/countries/{iso}':\n    get:\n      description: \u003e-\n        To view the details for a single Country, make a request using that\n        Country's iso code:\u003cbr /\u003e \u003ccode\u003eGET /api/v2/storefront/countries/gb\u003c/code\u003e\n        \u003cbr /\u003e\u003cbr /\u003eYou may also query by the Country's iso3 code:\u003cbr /\u003e\u003ccode\u003eGET\n        /api/v2/storefront/coutries/gbr \u003c/code\u003e \u003cbr /\u003e\u003cbr /\u003eNote that the API will attempt a\n        iso lookup before an iso3 lookup.\n      tags:\n        - Countries\n      operationId: 'Show Country'\n      parameters:\n        - $ref: '#/components/parameters/IsoOrIso3'\n        - $ref: '#/components/parameters/CountryIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns the requested Country\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Country'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n\n  '/countries/default':\n    get:\n      description: \u003e-\n        Returns the default Country for the application.\n        By default this will be the US.\n      tags:\n        - Countries\n      operationId: 'Default Country'\n      parameters:\n        - $ref: '#/components/parameters/CountryIncludeParam'\n        - $ref: '#/components/parameters/SparseFieldsParam'\n      responses:\n        '200':\n          description: Returns the default Country\n          content:\n            application/vnd.api+json:\n              schema:\n                $ref: '#/components/schemas/Country'\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      description: \u003e-\n        User token to authorize Cart and Checkout requests. You can obtain it\n        from `http://your_store_url.com/spree_oauth` endpoint.\n        It is required to associate Cart with the User.\n        See OAuth documentation for more details.\n    orderToken:\n      type: apiKey\n      in: header\n      description: \u003e-\n        \u003cp\u003e\n          Order token to authorize Cart and Checkout requests.\n          Useful for guest checouts when you don't have the user token\n          (bearerAuth)\n        \u003c/p\u003e\n        \u003cp\u003e\n          You can obtain it from the `/cart` endpoint -\n          it's part of the response (value of the `token` field).\n        \u003c/p\u003e\n      name: X-Spree-Order-Token\n  schemas:\n    Error:\n      required:\n        - error\n      properties:\n        error:\n          type: string\n    ListLinks:\n      properties:\n        self:\n          type: string\n          description: 'URL to the current page of the listing'\n        next:\n          type: string\n          description: 'URL to the next page of the listing'\n        prev:\n          type: string\n          description: 'URL to the previous page of the listing'\n        last:\n          type: string\n          description: 'URL to the last page of the listing'\n        first:\n          type: string\n          description: 'URL to the first page of the listing'\n    ListMeta:\n      properties:\n        count:\n          type: number\n          example: 7\n          description: 'Number of items on the current listing'\n        total_count:\n          type: number\n          example: 145\n          description: 'Number of all items matching the criteria'\n        total_pages:\n          type: number\n          example: 10\n          description: 'Number of all pages containing items matching the criteria'\n    Timestamp:\n      type: string\n      example: '2018-05-25T11:22:57.214-04:00'\n    Address:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'address'\n        attributes:\n          type: object\n          properties:\n            firstname:\n              type: string\n              example: 'John'\n            lastname:\n              type: string\n              example: 'Doe'\n            address1:\n              type: string\n              example: '1600 Amphitheatre Pkwy'\n            address2:\n              type: string\n              example: 'Suite 1'\n            city:\n              type: string\n              example: 'Mountain View'\n            zipcode:\n              type: string\n              example: '94043'\n            phone:\n              type: string\n              example: '(+1) 123 456 789'\n            state_name:\n              type: string\n              example: 'California'\n            state_code:\n              type: string\n              example: 'CA'\n            country_name:\n              type: string\n              example: 'United States of America'\n            country_iso3:\n              type: string\n              example: 'USA'\n            company:\n              type: string\n              example: 'Google Inc.'\n    AddressList:\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n    Cart:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          type: object\n          $ref: '#/components/schemas/CartAttributesWithRelationships'\n          required:\n            - id\n            - type\n            - attributes\n            - relationships\n        included:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/VariantAttributesAndRelationships'\n              - $ref: '#/components/schemas/LineItem'\n              - $ref: '#/components/schemas/Promotion'\n              - $ref: '#/components/schemas/User'\n              - $ref: '#/components/schemas/Address'\n              - $ref: '#/components/schemas/ShipmentAttributesWithoutRelationsips'\n    CartList:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          required:\n            - id\n            - type\n            - attributes\n            - relationships\n          type: array\n          items:\n            $ref: '#/components/schemas/CartAttributesWithRelationships'\n        included:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/VariantAttributesAndRelationships'\n              - $ref: '#/components/schemas/LineItem'\n              - $ref: '#/components/schemas/Promotion'\n              - $ref: '#/components/schemas/User'\n              - $ref: '#/components/schemas/Address'\n              - $ref: '#/components/schemas/ShipmentAttributesWithoutRelationsips'\n    CartAttributesWithRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          example: 'cart'\n        attributes:\n          $ref: '#/components/schemas/CartAttributes'\n        relationships:\n          $ref: '#/components/schemas/CartRelationships'\n    CartRelationships:\n      type: object\n      properties:\n        line_items:\n          type: object\n          description: ''\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        promotions:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        variants:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        user:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        billing_address:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        shipping_address:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        payments:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        shipments:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n    CartAttributes:\n      type: object\n      properties:\n        number:\n          type: string\n          example: 'R123456789'\n        email:\n          type: string\n          example: 'spree@example.com'\n        item_total:\n          type: string\n          example: '19.99'\n        display_item_total:\n          type: string\n          example: '$19.99'\n        total:\n          type: string\n          example: '29.99'\n        display_total:\n          type: string\n          example: '$29.99'\n        ship_total:\n          type: string\n          example: '0.0'\n        display_ship_total:\n          type: string\n          example: '$19.99'\n        adjustment_total:\n          type: string\n          example: '10.0'\n        display_adjustment_total:\n          type: string\n          example: '$10.00'\n        promo_total:\n          type: string\n          example: '-10.0'\n        display_promo_total:\n          type: string\n          example: '-$10.00'\n        created_at:\n          $ref: '#/components/schemas/Timestamp'\n        updated_at:\n          $ref: '#/components/schemas/Timestamp'\n        included_tax_total:\n          type: string\n          example: '5.00'\n        additional_tax_total:\n          type: string\n          example: '5.0'\n        display_additional_tax_total:\n          type: string\n          example: '$5.00'\n        display_included_tax_total:\n          type: string\n          example: '$5.00'\n        tax_total:\n          type: string\n          example: '10.0'\n        display_tax_total:\n          type: string\n          example: '$10.00'\n        pre_tax_item_amount:\n          type: string\n          example: '17.00'\n        display_pre_tax_item_amount:\n          type: string\n          example: '$17.00'\n        pre_tax_total:\n          type: string\n          example: '20.00'\n        display_pre_tax_total:\n          type: string\n          example: '$20.00'\n        item_count:\n          type: number\n          example: 2\n          description: 'Total quantity number of all items added to the Cart'\n        special_instructions:\n          type: string\n          example: 'Please wrap it as a gift'\n          description: 'Message added by the Customer'\n        currency:\n          type: string\n          example: 'USD'\n        state:\n          type: string\n          example: 'address'\n          description: 'State of the Cart in the Checkout flow'\n        token:\n          type: string\n          example: abcdef123456\n          description: \u003e-\n            Used for authorizing any action for an order within Spree’s\n            API\n    CreditCardList:\n      required:\n        - included\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreditCardAttributesWithRelationships'\n        included:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/PaymentMethod'\n    CreditCard:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          type: object\n          $ref: '#/components/schemas/CreditCardAttributesWithRelationships'\n        included:\n          type: array\n          items:\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/PaymentMethod'\n    CreditCardAttributes:\n      properties:\n        cc_type:\n          type: string\n          example: 'visa'\n        last_digits:\n          type: string\n          example: '1232'\n          description: 'Last 4 digits of CC number'\n        month:\n          type: integer\n          example: 10\n          description: 'Expiration date month'\n        year:\n          type: integer\n          example: 2019\n          description: 'Expiration date year'\n        name:\n          type: string\n          example: 'John Doe'\n          description: 'Card holder name'\n        default:\n          type: boolean\n          example: true\n          description: 'Defines if this is the default CC for a signed in user'\n    CreditCardAttributesWithRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          example: 'credit_card'\n        attributes:\n          type: object\n          $ref: '#/components/schemas/CreditCardAttributes'\n        relationships:\n          type: object\n          properties:\n            payment_method:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/Relation'\n    Image:\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: '1'\n            type:\n              type: string\n              default: 'image'\n            attributes:\n              type: object\n              properties:\n                position:\n                  type: integer\n                  example: 0\n                  description: 'Sort order of images set in the Admin Panel'\n                styles:\n                  type: array\n                  description: 'An array of pre-scaled image styles'\n                  items:\n                    $ref: '#/components/schemas/ImageStyle'\n    ImageStyle:\n      properties:\n        url:\n          type: string\n          example: 'http://localhost:3000/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJbWQyWVhKcFlXNTBjeTltWm1sMmRURlNORFpZWjJaSFpYUkdZMjk2WWsxM1RHWXZNVGs1T1RCak5XVmlNamN4TlRnd1pqVTBabUpqTWpCbFkyVXhZMlZpTTJFd05ERTJZemMzT0dKaE5tSTFNREkyT0dKaFpqa3paV1JtWTJWaE16aGxaQVk2QmtWVSIsImV4cCI6IjIwMTgtMDYtMjRUMTM6NTk6NTguOTY5WiIsInB1ciI6ImJsb2Jfa2V5In19--5e9ff358dc747f73754e332678c5762114ac6f3f/ror_jr_spaghetti.jpeg?content_type=image%2Fjpeg\u0026disposition=inline%3B+filename%3D%22ror_jr_spaghetti.jpeg%22%3B+filename%2A%3DUTF-8%27%27ror_jr_spaghetti.jpeg'\n          description: 'Absolute URL of the uploaded image in selected style (width/height)'\n        width:\n          type: integer\n          example: 1920\n          description: 'Actual width of image'\n        height:\n          type: integer\n          example: 1080\n          description: 'Actual height of image'\n    User:\n      properties:\n        id:\n          type: string\n          example: 1\n        type:\n          type: string\n          default: 'user'\n        attributes:\n          type: object\n          properties:\n            email:\n              type: string\n              example: 'spree@example.com'\n    LineItem:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'line_item'\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: 'Sample product'\n            quantity:\n              type: integer\n              example: 1\n            slug:\n              type: string\n              example: 'sample-product'\n            options_text:\n              type: string\n              example: 'Size: small, Color: red'\n            price:\n              type: string\n              example: '125.0'\n              description: Price of Product per quantity\n            currency:\n              type: string\n              example: 'USD'\n            display_price:\n              type: string\n              example: '$125.00'\n              description: Price of Product per quantity\n            total:\n              type: string\n              example: '250.0'\n              description: \u003e-\n                Total price of Line Item including adjastments, promotions\n                and taxes\n            display_total:\n              type: string\n              example: '$250.00'\n              description: \u003e-\n                Total price of Line Item including adjastments, promotions\n                and taxes\n            adjustment_total:\n              type: string\n              example: '10.0'\n              description: TBD\n            display_adjustment_total:\n              type: string\n              example: '$10.00'\n              description: TBD\n            additional_tax_total:\n              type: string\n              example: '5.0'\n            display_additional_tax_total:\n              type: string\n              example: '$5.00'\n            discounted_amount:\n              type: string\n              example: '125.0'\n            display_discounted_amount:\n              type: string\n              example: '$125.00'\n            pre_tax_amount:\n              type: string\n              example: '125.0'\n            display_pre_tax_amount:\n              type: string\n              example: '$125.00'\n            promo_total:\n              type: string\n              example: '-5.0'\n            display_promo_total:\n              type: string\n            included_tax_total:\n              type: string\n              example: '0.0'\n              description: 'Taxes included in the price, eg. VAT'\n            display_inluded_tax_total:\n              type: string\n              example: '$0.00'\n        relationships:\n          properties:\n            variant:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/Relation'\n    Promotion:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'promotion'\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: '10% Discount'\n            descriptiom:\n              type: string\n              example: 'Super discount for you'\n            amount:\n              type: string\n              example: '-10.0'\n            display_amount:\n              type: string\n              example: '-$10.00'\n    Product:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          $ref: '#/components/schemas/ProductAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/OptionType'\n              - $ref: '#/components/schemas/OptionValue'\n              - $ref: '#/components/schemas/ProductProperty'\n              - $ref: '#/components/schemas/Property'\n              - $ref: '#/components/schemas/VariantAttributesAndRelationships'\n              - $ref: '#/components/schemas/Image'\n              - $ref: '#/components/schemas/TaxonAttributesAndRelationships'\n    ProductsList:\n      required:\n        - links\n        - data\n        - included\n      properties:\n        links:\n          $ref: '#/components/schemas/ListLinks'\n        meta:\n          $ref: '#/components/schemas/ListMeta'\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/OptionType'\n              - $ref: '#/components/schemas/OptionValue'\n              - $ref: '#/components/schemas/ProductProperty'\n              - $ref: '#/components/schemas/Property'\n              - $ref: '#/components/schemas/VariantAttributesAndRelationships'\n              - $ref: '#/components/schemas/Image'\n              - $ref: '#/components/schemas/TaxonAttributesAndRelationships'\n    ProductAttributes:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Example product'\n        description:\n          type: string\n          example: 'Example description'\n        price:\n          type: string\n          example: '15.99'\n        currency:\n          type: string\n          example: 'USD'\n        display_price:\n          type: string\n          example: $15.99\n        available_on:\n          type: string\n          example: '2012-10-17T03:43:57Z'\n        purchasable:\n          type: boolean\n          example: true\n          description: 'Indicates if any of Variants are in stock or backorderable'\n        in_stock:\n          type: boolean\n          example: true\n          description: 'Indicates if any of Variants are in stock'\n        backorderable:\n          type: boolean\n          example: true\n          description: 'Indicates if any of Variants are backeorderable'\n        slug:\n          type: string\n          example: 'example-product'\n        meta_description:\n          type: string\n          example: 'Example product'\n        meta_keywords:\n          type: string\n          example: 'example, product'\n        updated_at:\n          $ref: '#/components/schemas/Timestamp'\n    ProductRelationships:\n      type: object\n      properties:\n        default_variant:\n          type: object\n          description: 'The default Variant for given product'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        product_properties:\n          type: object\n          description: 'List of Product Properties'\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n        option_types:\n          type: object\n          description: 'List of Product Option Types'\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n        variants:\n          type: object\n          description: 'List of Product Variants, excluding Master Variant'\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n        taxons:\n          type: object\n          description: 'List of Taxons associated with Product'\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n    ProductAttributesAndRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'product'\n        attributes:\n          $ref: '#/components/schemas/ProductAttributes'\n        relationships:\n          $ref: '#/components/schemas/ProductRelationships'\n    Relation:\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n    Taxon:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          $ref: '#/components/schemas/TaxonAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ProductAttributesAndRelationships'\n              - $ref: '#/components/schemas/TaxonAttributesAndRelationships'\n              - $ref: '#/components/schemas/TaxonomyAttributesAndRelationships'\n              - $ref: '#/components/schemas/Image'\n    TaxonAttributes:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'T-shirts'\n        pretty_name:\n          type: string\n          example: 'Clothes \u003e T-shirts'\n        permalink:\n          type: string\n          example: 't-shirts'\n        seo_title:\n          type: string\n          example: 'Clothes - T-shirts'\n        meta_title:\n          type: string\n          example: 'T-shirts'\n        meta_description:\n          type: string\n          example: 'A list of cool t-shirts '\n        meta_keywords:\n          type: string\n          example: 't-shirts, cool'\n        left:\n          type: integer\n          example: 1\n        right:\n          type: integer\n          example: 2\n        position:\n          type: integer\n          example: 0\n        depth:\n          type: integer\n          example: 1\n        is_root:\n          type: boolean\n          example: true\n          description: 'Indicates if the Taxon is the root node of this Taxonomy tree'\n        is_child:\n          type: boolean\n          example: true\n          description: 'Returns true is this is a child node of this Taxonomy tree'\n        is_leaf:\n          type: boolean\n          example: false\n          description: 'Returns true if this is the end of a branch of this Taxonomy tree'\n        updated_at:\n          type: string\n          example: '2018-06-18T10:57:29.704Z'\n    TaxonRelationships:\n      type: object\n      properties:\n        parent:\n          type: object\n          description: 'Parent node'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        children:\n          type: object\n          description: 'List of child nodes'\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n        taxonomy:\n          type: object\n          description: 'Taxonomy associated with this Taxon'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        image:\n          type: object\n          description: 'Image associated with Taxon'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        products:\n          type: object\n          description: 'List of active and available Products associated with this Taxon'\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n    TaxonAttributesAndRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'taxon'\n        attributes:\n          $ref: '#/components/schemas/TaxonAttributes'\n        relationships:\n          $ref: '#/components/schemas/TaxonRelationships'\n    TaxonsList:\n      required:\n        - links\n        - data\n        - included\n      properties:\n        links:\n          $ref: '#/components/schemas/ListLinks'\n        meta:\n          $ref: '#/components/schemas/ListMeta'\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TaxonAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/TaxonAttributesAndRelationships'\n              - $ref: '#/components/schemas/TaxonImage'\n              - $ref: '#/components/schemas/TaxonomyAttributesAndRelationships'\n              - $ref: '#/components/schemas/ProductAttributesAndRelationships'\n    TaxonImage:\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: '1'\n            type:\n              type: string\n              default: 'taxon_image'\n            attributes:\n              type: object\n              properties:\n                position:\n                  type: integer\n                  example: 0\n                  description: 'Sort order of images set in the Admin Panel'\n                styles:\n                  type: array\n                  description: 'An array of pre-scaled image styles'\n                  items:\n                    $ref: '#/components/schemas/ImageStyle'\n    TaxonomyAttributesAndRelationships:\n      type: object\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'taxonomy'\n        attributes:\n          $ref: '#/components/schemas/TaxonomyAttributes'\n    TaxonomyAttributes:\n      type: object\n      properties:\n        name:\n          type: string\n          example: 'Categories'\n        position:\n          type: integer\n          example: 0\n    OptionType:\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: '1'\n            type:\n              type: string\n              default: 'option_type'\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: 'color'\n                presentation:\n                  type: string\n                  example: 'Color'\n                position:\n                  type: integer\n                  example: 1\n    OptionValue:\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: '1'\n            type:\n              type: string\n              default: 'option_value'\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: 'red'\n                presentation:\n                  type: string\n                  example: 'Red'\n                position:\n                  type: integer\n                  example: 1\n            relationships:\n              type: object\n              properties:\n                option_type:\n                  type: object\n                  properties:\n                    data:\n                      $ref: '#/components/schemas/Relation'\n    Property:\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: '1'\n            type:\n              type: string\n              default: 'property'\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: 'material'\n                presentation:\n                  type: string\n                  example: 'Material'\n    ProductProperty:\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          properties:\n            id:\n              type: string\n              example: '1'\n            type:\n              type: string\n              default: 'product_property'\n            attributes:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: 'silk'\n                presentation:\n                  type: string\n                  example: 'Silk'\n            relationships:\n              type: object\n              properties:\n                property:\n                  type: object\n                  properties:\n                    data:\n                      $ref: '#/components/schemas/Property'\n    Variant:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          $ref: '#/components/schemas/VariantAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Image'\n              - $ref: '#/components/schemas/OptionValue'\n              - $ref: '#/components/schemas/OptionType'\n    VariantAttributes:\n      type: object\n      properties:\n        sku:\n          type: string\n          example: 'SKU-1001'\n        price:\n          type: string\n          example: '15.99'\n        currency:\n          type: string\n          example: 'USD'\n        display_price:\n          type: string\n          example: '$15.99'\n        weight:\n          type: string\n          example: '10'\n        height:\n          type: string\n          example: '10'\n        width:\n          type: string\n          example: '10'\n        depth:\n          type: string\n          example: '10'\n        is_master:\n          type: boolean\n          example: false\n          description: 'Indicates if Variant is the master Variant'\n        options_text:\n          type: string\n          example: 'Size: small, Color: red'\n        purchasable:\n          type: boolean\n          example: true\n          description: 'Indicates if Variant is in stock or backorderable'\n        in_stock:\n          type: boolean\n          example: true\n          description: 'Indicates if Variant is in stock'\n        backorderable:\n          type: boolean\n          example: true\n          description: 'Indicates if Variant is backorderable'\n    VariantRelationships:\n      type: object\n      properties:\n        product:\n          type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        images:\n          type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n        option_values:\n          type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/Relation'\n    VariantAttributesAndRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'variant'\n        attributes:\n          $ref: '#/components/schemas/VariantAttributes'\n        relationships:\n          $ref: '#/components/schemas/VariantRelationships'\n    Country:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          $ref: '#/components/schemas/CountryAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/State'\n    CountriesList:\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CountryAttributesAndRelationships'\n    CountryAttributes:\n      type: object\n      properties:\n        iso:\n          type: string\n          example: 'us'\n        iso3:\n          type: string\n          example: 'usa'\n        iso_name:\n          type: string\n          example: 'UNITED STATES'\n        name:\n          type: string\n          example: 'United States'\n        states_required:\n          type: boolean\n          example: true\n        zipcode_required:\n          type: boolean\n          example: true\n        default:\n          type: boolean\n          example: true\n    CountryRelationships:\n      type: object\n      properties:\n        states:\n          type: object\n          description: 'States associated with this Country'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n    CountryAttributesAndRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'country'\n        attributes:\n          $ref: '#/components/schemas/CountryAttributes'\n        relationships:\n          $ref: '#/components/schemas/CountryRelationships'\n    State:\n      type: object\n      properties:\n        abbr:\n          type: string\n          example: 'NY'\n        name:\n          type: string\n          example: 'New York'\n    PaymentMethodsList:\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentMethod'\n    PaymentMethod:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'payment_method'\n        attributes:\n          type: object\n          properties:\n            type:\n              type: string\n              example: 'Spree::Gateway::StripeGateway'\n            name:\n              type: string\n              example: 'Stripe'\n            description:\n              type: string\n              example: 'Stripe Payments'\n    ShipmentAttributesWithoutRelationsips:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'shipment'\n        attributes:\n          $ref: '#/components/schemas/ShipmentAttributes'\n        relationships:\n          type: object\n    ShipmentAttributesAndRelationsips:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'shipment'\n        attributes:\n          $ref: '#/components/schemas/ShipmentAttributes'\n        relationships:\n          properties:\n            stock_location:\n              type: object\n              properties:\n                data:\n                  $ref: '#/components/schemas/Relation'\n            shipping_rates:\n              properties:\n                data:\n                  type: array\n                  items:\n                    oneOf:\n                      - $ref: '#/components/schemas/Relation'\n    ShipmentAttributes:\n      properties:\n        number:\n          type: string\n          example: 'H121354'\n          description: 'Unique Shipment identifier'\n        free:\n          type: boolean\n          example: true\n          description: 'Indicates if the Shipping Rate is free, eg. when Free shipping promo applied to Cart'\n        final_price:\n          type: string\n          example: '10.0'\n          description: 'Price to be presented for the Customer'\n        display_final_price:\n          type: string\n          example: '$10.00'\n        tracking_url:\n          type: string\n          example: 'https://tools.usps.com/go/TrackConfirmAction?tRef=fullpage\u0026tLc=2\u0026text28777=\u0026tLabels=4123412434%2C'\n          description: 'Tracking URL to the service provider website'\n        state:\n          type: string\n          example: 'shipped'\n          description: \u003e-\n            Status of the Shipment. For list of all available statuses please refer:\n            \u003ca href=\"https://guides.spreecommerce.org/developer/shipments.html#overview\" target=\"_blank\" rel=\"noopener\"\u003e\n              Shipment section in Spree Guides\n            \u003c/a\u003e\n        shipped_at:\n          type: string\n          format: 'date-time'\n          example: '2019-01-02 13:42:12 UTC'\n          description: 'Date when Shipment was being sent from the warehouse'\n    ShippingRatesList:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShipmentAttributesAndRelationsips'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/ShippingRate'\n              - $ref: '#/components/schemas/StockLocation'\n    EstimateShippingRatesList:\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ShippingRate'\n    ShippingRate:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'shipping_rate'\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: 'USPS Ground'\n            selected:\n              type: boolean\n              example: true\n            free:\n              type: boolean\n              example: true\n              description: 'Indicates if the Shipping Rate is free, eg. when Free shipping promo applied to Cart'\n            final_price:\n              type: string\n              example: '10.0'\n              description: 'Price to be presented for the Customer'\n            display_final_price:\n              type: string\n              example: '$10.00'\n            cost:\n              type: string\n              example: '10.0'\n              description: 'Price of the service without discounts applied'\n            display_cost:\n              type: string\n              example: '$10.00'\n            tax_amount:\n              type: string\n              example: '0.0'\n              description: 'Eligible tax for service (if any)'\n            display_tax_amount:\n              type: string\n              example: '$0.00'\n            shipping_method_id:\n              type: integer\n              example: 1\n              description: 'ID of a Shipping Method. You will need this for the Checkout Update action'\n    StockLocation:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'stock_location'\n        attributes:\n          type: object\n          properties:\n            name:\n              type: string\n              example: 'Main Warehouse'\n    Account:\n      required:\n        - data\n        - included\n      properties:\n        data:\n          $ref: '#/components/schemas/AccountAttributesAndRelationships'\n        included:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/Address'\n    AccountAttributes:\n      type: object\n      properties:\n        email:\n          type: string\n          example: 'spree@example.com'\n        store_credits:\n          type: number\n          example: 150.75\n        completed_orders:\n          type: number\n          example: 3\n    AccountRelationships:\n      type: object\n      properties:\n        default_billing_address:\n          type: object\n          description: 'Default billing address associated with this Account'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n        default_shipping_address:\n          type: object\n          description: 'Default shipping address associated with this Account'\n          properties:\n            data:\n              $ref: '#/components/schemas/Relation'\n    AccountAttributesAndRelationships:\n      properties:\n        id:\n          type: string\n          example: '1'\n        type:\n          type: string\n          default: 'user'\n        attributes:\n          $ref: '#/components/schemas/AccountAttributes'\n        relationships:\n          $ref: '#/components/schemas/AccountRelationships'\n    AddressPayload:\n      properties:\n        firstname:\n          type: string\n        lastname:\n          type: string\n        address1:\n          type: string\n          description: 'Street address'\n        address2:\n          type: string\n          description: 'Additional address information, floor no etc'\n        city:\n          type: string\n          description: 'City, town'\n        phone:\n          type: string\n        zipcode:\n          type: string\n          description: 'Valid zipcode, will be validated against the selected Country'\n        state_name:\n          type: string\n          description: 'State/region/province 2 letter abbrevation'\n        country_iso:\n          type: string\n          description: \u003e-\n            Country ISO (2-chars) or ISO3 (3-chars) code, list of codes:\n            \u003ca href=\"https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\" target=\"_blank\" rel=\"noopener\"\u003e\n              https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes\n            \u003c/a\u003e\n      example:\n        firstname: 'John'\n        lastname: 'Snow'\n        address1: '7735 Old Georgetown Road'\n        address2: '2nd Floor'\n        city: 'Bethesda'\n        phone: '3014445002'\n        zipcode: '20814'\n        state_name: 'MD'\n        country_iso: 'US'\n    PaymentSource:\n      properties:\n        number:\n          type: string\n          description: 'Credit card number'\n        month:\n          type: string\n        year:\n          type: string\n        verification_value:\n          type: string\n        cc_type:\n          type: string\n          description: 'Credit Card Brand'\n        name:\n          type: string\n      example:\n        number: '4111111111111111'\n        month: '01'\n        year: '2022'\n        verification_value: '123'\n        cc_type: 'visa'\n        name: 'John Doe'\n\n  parameters:\n    CreditCardIncludeParam:\n      name: include\n      in: query\n      required: false\n      schema:\n        type: string\n      example: 'payment_method'\n      description: \u003e-\n        \u003cp\u003eSpecify what related resources (relationships) you would like to receive in the response body.\u003c/p\u003e\n          \u003cp\u003eYou can also fetch relationships of relationships.\u003c/p\u003e\n          \u003cp\u003e\n            Format:\n            \u003cul\u003e\n              \u003cli\u003epayment_method\u003c/li\u003e\n            \u003c/ul\u003e\n          \u003cp\u003e\n          More information:\n          \u003ca href=\"https://jsonapi.org/format/#fetching-includes\" target=\"_blank\" rel=\"noopener\"\u003e\n              https://jsonapi.org/format/#fetching-includes\n          \u003c/a\u003e\n        \u003c/p\u003e\n    IdOrPermalink:\n      name: id\n      in: path\n      required: true\n      description: ID or a permalink\n      schema:\n        type: string\n      examples:\n        ID:\n          value: '1'\n        Permalink:\n          value: 'some-product'\n    LineItemId:\n      name: line_item_id\n      in: path\n      required: true\n      description: Line Item ID\n      schema:\n        type: string\n      example: '1'\n    PageParam:\n      name: page\n      in: query\n      description: Number of requested page when paginating collection\n      schema:\n        type: integer\n      example: 1\n    PerPageParam:\n      name: per_page\n      in: query\n      description: Number of requested records per page when paginating collection\n      schema:\n        type: integer\n      example:\n    OrderParam:\n      name: number\n      in: path\n      required: true\n      description: Number of Order\n      schema:\n        type: string\n      example: 'R653163382'\n    CartIncludeParam:\n      name: include\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        \u003cp\u003eSpecify what related resources (relationships) you would like to receive in the response body.\u003c/p\u003e\n        \u003cp\u003eYou can also fetch relationships of relationships.\u003c/p\u003e\n        \u003cp\u003e\n          Format:\n          \u003cul\u003e\n            \u003cli\u003eline_items,variants,promotions\u003c/li\u003e\n            \u003cli\u003evariants,variants.images\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003cp\u003e\n          More information:\n          \u003ca href=\"https://jsonapi.org/format/#fetching-includes\" target=\"_blank\" rel=\"noopener\"\u003e\n            https://jsonapi.org/format/#fetching-includes\n          \u003c/a\u003e\n        \u003c/p\u003e\n      example: 'line_items,variants,variants.images,billing_address,shipping_address,user,payments,shipments,promotions'\n    ProductIncludeParam:\n      name: include\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        \u003cp\u003eSpecify what related resources (relationships) you would like to receive in the response body.\u003c/p\u003e\n        \u003cp\u003eYou can also fetch relationships of relationships.\u003c/p\u003e\n        \u003cp\u003e\n          Format:\n          \u003cul\u003e\n            \u003cli\u003edefault_variant,variants,option_types,product_properties,taxons,images\u003c/li\u003e\n            \u003cli\u003evariants,variants.images,variants.option_values\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003cp\u003e\n          More information:\n          \u003ca href=\"https://jsonapi.org/format/#fetching-includes\" target=\"_blank\" rel=\"noopener\"\u003e\n            https://jsonapi.org/format/#fetching-includes\n          \u003c/a\u003e\n        \u003c/p\u003e\n      example: 'default_variant,variants,option_types,product_properties,taxons,images'\n    TaxonIncludeParam:\n      name: include\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        \u003cp\u003eSpecify what related resources (relationships) you would like to receive in the response body.\u003c/p\u003e\n        \u003cp\u003eYou can also fetch relationships of relationships.\u003c/p\u003e\n        \u003cp\u003e\n          Format:\n          \u003cul\u003e\n            \u003cli\u003eparent,taxonomy,children,image,products\u003c/li\u003e\n            \u003cli\u003echildren.children\u003c/li\u003e\n            \u003cli\u003eparent.children\u003c/li\u003e\n            \u003cli\u003echildren,products.default_variant\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003cp\u003e\n          More information:\n          \u003ca href=\"https://jsonapi.org/format/#fetching-includes\" target=\"_blank\" rel=\"noopener\"\u003e\n            https://jsonapi.org/format/#fetching-includes\n          \u003c/a\u003e\n        \u003c/p\u003e\n      example: 'parent,taxonomy,children,image,products'\n    IsoOrIso3:\n      name: iso\n      in: path\n      required: true\n      description: ISO or ISO3\n      schema:\n        type: string\n    CountryIncludeParam:\n      name: include\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        Pass `states` as value to include States / Regions for each Country\n      example: 'states'\n    AccountIncludeParam:\n      name: include\n      in: query\n      schema:\n        type: string\n      description: \u003e-\n        Pass `default_billing_address` and/or `default_shipping_address` as value to include selected addresses information\n      example: 'default_billing_address,default_shipping_address'\n    FilterByIds:\n      in: query\n      name: filter[ids]\n      schema:\n        type: string\n      example: 1,2,3\n      description: Fetch only resources with corresponding IDs\n    FilterBySKUs:\n      in: query\n      name: filter[skus]\n      schema:\n        type: string\n      example: SKU-123,SKU-345\n      description: Fetch only resources with corresponding SKUs\n    FilterByName:\n      in: query\n      name: filter[name]\n      schema:\n        type: string\n      example: rails\n      description: Find resources with matching name (supports wild-card, partial-word match search)\n    SparseFieldsParam:\n      in: query\n      name: fields\n      style: deepObject\n      description: \u003e-\n        \u003cp\u003eSpecify what attributes for given types you would like to receive in the response body.\u003c/p\u003e\n        \u003cp\u003e\n          Format:\n          \u003cul\u003e\n            \u003cli\u003efields[cart]=total,currency,number\u003c/li\u003e\n          \u003c/ul\u003e\n        \u003cp\u003e\n          More information:\n          \u003ca href=\"https://jsonapi.org/format/#fetching-sparse-fieldsets\" target=\"_blank\" rel=\"noopener\"\u003e\n            https://jsonapi.org/format/#fetching-sparse-fieldsets\n          \u003c/a\u003e\n        \u003c/p\u003e\n      example: { \"cart\": \"total,currency,number\" }\n      schema:\n        type: object\n  responses:\n    404NotFound:\n      description: Resource not found\n      content:\n        application/vnd.api+json:\n          schema:\n            properties:\n              error:\n                type: string\n                example: 'The resource you were looking for could not be found.'\n                default: 'The resource you were looking for could not be found.'\n    403Forbidden:\n      description: You are not authorized to access this page.\n      content:\n        application/vnd.api+json:\n          schema:\n            properties:\n              error:\n                type: string\n                example: 'You are not authorized to access this page.'\n                default: 'You are not authorized to access this page.'",
			"canonicalURL": "/github.com/funbox/tomograph@6396dec35d107adf357aa51970113431e65554d2/-/blob/spec/fixtures/openapi3/spree.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/funbox/tomograph/blob/6396dec35d107adf357aa51970113431e65554d2/spec/fixtures/openapi3/spree.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/cart/remove_coupon_code/{coupon_code}\": delete: operation \"Remove Coupon Code\": parameters: parse parameter \"coupon_code\": at 1:48555: path parameters must be required"
}