{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jambonz/jambonz-api-server"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "lib/swagger/swagger.yaml",
			"byteSize": 134646,
			"content": "openapi: 3.0.0\ninfo:\n  title: jambonz REST API\n  description: jambonz REST API\n  contact:\n    email: daveh@drachtio.org\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  version: 1.0.0\nservers:\n  - url: /v1\n    description: development server\npaths:\n  /BetaInviteCodes:\n    post:\n      summary: generate one or more beta invite codes\n      operationId: generateInviteCode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                count:\n                  type: number\n                  format: integer\n      responses:\n        200:\n          description: invite codes successfully generated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - ok\n                      - failed\n                  added:\n                    type: number\n                    format: integer\n                required:\n                  - status\n                  - added\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /PredefinedCarriers:\n    get:\n      summary: get a list of predefined carriers\n      operationId: listPredefinedCarriers\n      responses:\n        200:\n          description: list of predefined carriers\n          content:\n            application/json:\n              schema:\n                type:\n                  array\n                items:\n                  $ref: '#/components/schemas/PredefinedCarrier'\n  /Accounts/{AccountSid}/PredefinedCarriers/{PredefinedCarrierSid}:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: PredefinedCarrierSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    post:\n      summary: add a VoiPCarrier to an account based on PredefinedCarrier template\n      operationId: createVoipCarrierFromTemplate\n      responses:\n        201:\n          description:  voip carrier successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'      \n  /Sbcs:\n    post:\n      summary: add an SBC address\n      operationId: createSbc\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ipv4:\n                  type: string\n                port:\n                  type: number\n                service_provider_sid:\n                  type: string\n                  description: service provider scope for the generated api key\n              required:\n                - ipv4\n      responses:\n        201:\n          description:  sbc address successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve public IP addresses of the jambonz Sbcs\n      operationId: listSbcs\n      parameters:\n        - in: query\n          name: service_provider_sid\n          required: false\n          schema:\n            type: string\n            description: return only the SBCs operated for the sole use of this service provider\n      responses:\n        200:\n          description: list of SBC addresses\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  properties:\n                    ipv4:\n                      type: string\n                      description: ip address of one of our Sbcs \n                  required:\n                    - ipv4\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Sbcs/{SbcSid}:\n      parameters:\n      - name: SbcSid\n        in: path\n        required: true\n        schema:\n          type: string\n      delete:\n        summary: delete sbc address\n        operationId: deleteSbcAddress      \n        responses:\n          200:\n            description: sbc address deleted\n          404:\n            description: sbc address not found\n  /Smpps:\n    get:\n      summary: retrieve public IP addresses of the jambonz smpp servers\n      operationId: listSmpps\n      parameters:\n        - in: query\n          name: service_provider_sid\n          required: false\n          schema:\n            type: string\n            description: return only the smpp servers operated for the sole use of this service provider\n      responses:\n        200:\n          description: list of smpp server addresses\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  properties:\n                    ipv4:\n                      type: string\n                      description: ip address of one of our Sbcs\n                    port:\n                      type: number\n                    use_tls:\n                      type: boolean\n                    is_primary:\n                      type: boolean\n                  required:\n                    - ipv4\n                    - port\n                    - use_tls\n                    - is_primary\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /InviteCodes:\n    post:\n      summary: validate an invite code\n      operationId: validateInviteCode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n              required:\n                - code\n      responses:\n        204:\n          description: code successfully validated\n        404:\n          description: code not found\n        \n  /ApiKeys:\n    post:\n      summary: create an api key\n      operationId: createApikey\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                service_provider_sid:\n                  type: string\n                  description: service provider scope for the generated api key\n                account_sid:\n                  type: string\n                  description: account scope for the generated api key\n                expiry_secs:\n                  type: number\n                  description: duration of key validity, in seconds\n      responses:\n        201:\n          description: api key successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulApiKeyAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n        500:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Apikeys/{ApiKeySid}:\n      parameters:\n      - name: ApiKeySid\n        in: path\n        required: true\n        schema:\n          type: string\n      delete:\n        summary: delete api key\n        operationId: deleteApiKey          \n        responses:\n          200:\n            description: api key deleted\n          404:\n            description: api key or account not found\n  /signin:\n    post:\n      summary: sign in using email and password\n      operationId: loginUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n      responses:\n        200:\n          description: successfully signed in\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n              example:\n                user_sid: 3192af15-8260-439f-939d-184613f6bbfb\n                account_sid: 7be2d35a-da6e-4faf-a382-1b37a571c7fd\n                name: Dave Horton\n                email: daveh@drachtio.org\n                provider: github\n                provider_userid: davehorton\n                pristine: true\n                account_validated: true\n                scope: read-write\n        403:\n          description: Invalid password\n        404:\n          description: email not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /logout:\n    post:\n      summary: log out and deactivate jwt\n      operationId: logoutUser\n      responses:\n        204:\n          description: user logged out\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /forgot-password:\n    post:\n      summary: send link to reset password\n      operationId: forgotPassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n      responses:\n        204:\n          description: email sent\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n              example:\n                msg: service_provider_sid is missing\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /change-password:\n    post:\n      summary: changePassword\n      operationId: changePassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                old_password:\n                  type: string\n                new_password:\n                  type: string\n      responses:\n        204:\n          description: password changed\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n              example:\n                msg: service_provider_sid is missing\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /register:\n    post:\n      summary: create a new user and account\n      operationId: registerUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                service_provider_sid:\n                  type: string\n                  example: 2708b1b3-2736-40ea-b502-c53d8396247f\n                provider:\n                  type: string\n                  enum:\n                    - github\n                    - google\n                    - twitter\n                    - local\n                  example: github\n                email:\n                  type: string\n                password:\n                  type: string\n                email_activation_code:\n                  type: string\n                oauth2_code:\n                  type: string\n                  example: f82659563e061e7347de\n                oauth2_state:\n                  type: string\n                  example: 386d2e990ad\n                oauth2_client_id:\n                  type: string\n                  example: a075a5889264b8fbc831\n                oauth2_redirect_uri:\n                  type: string\n                  example: https://localhost:3000/oauth-gh-callback\n              required:\n                - service_provider_sid\n                - provider\n      responses:\n        200:\n          description: user and account created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n              example:\n                user_sid: 3192af15-8260-439f-939d-184613f6bbfb\n                account_sid: 7be2d35a-da6e-4faf-a382-1b37a571c7fd\n                name: Dave Horton\n                email: daveh@drachtio.org\n                provider: github\n                provider_userid: davehorton\n                pristine: true\n                account_validated: true\n                scope: read-write\n\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n              example:\n                msg: service_provider_sid is missing\n        422:\n          description: User exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n              example:\n                msg: invalid service_provider_sid   \n        403:\n          description: invalid/expired oauth2 code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n              example:\n                msg: code is expired or invalid\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Invoices:\n    get:\n      summary: retrieve upcoming invoice for customer\n      operationId: retrieveInvoice\n      responses:\n        200:\n          description: upcoming invoice\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: Not Found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Users:\n    get: \n      summary: list all users\n      operationId: listUsers\n      responses:\n        200:\n          description: list of users\n          content:\n            application/json:\n              schema:\n                type:\n                  array\n                items:\n                  $ref: '#/components/schemas/Users'\n        403:\n          description: unauthorized\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Users/{UserSid}:\n    parameters:\n      - name: UserSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    get:\n      summary: retrieve user information\n      operationId: getUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email: \n                  type: string\n                is_active:\n                  type: boolean\n                force_change:\n                  type: boolean\n                scope:\n                  type: string\n                permissions:\n                  type: array\n      responses:\n        204:\n          description: user information\n        403:\n          description: user information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    put:\n      summary: update user information\n      operationId: updateUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email: \n                  type: string\n                email_activation_code:\n                  type: string\n                old_password:\n                  type: string\n                  description: existing password, which is to be replaced\n                new_password:\n                  type: string\n                  description: new password\n                name:\n                  type: string\n                is_active:\n                  type: boolean\n                force_change:\n                  type: boolean\n                scope:\n                  type: string\n                permissions:\n                  type: array\n      responses:\n        204:\n          description: user updated\n        403:\n          description: user update failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    post:\n      summary: create a new user\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email: \n                  type: string\n                is_active:\n                  type: boolean\n                force_change:\n                  type: boolean\n                scope:\n                  type: string\n                permissions:\n                  type: array\n                force_change:\n                  type: boolean\n                old_password:\n                  type: string\n                  description: existing password, which is to be replaced\n      responses:\n        204:\n          description: user created\n        403:\n          description: user creation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    delete:\n      summary: delete a user\n      operationId: deleteUser\n      responses:\n        204:\n          description: user deleted\n        404:\n          description: user not found\n        403:\n          description: unauthorized\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Users/me:\n    get:\n      summary: retrieve details about logged-in user and associated account\n      operationId: getMyDetails\n      responses:\n        200:\n          description: full-ish detail about the logged-in user and account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAndAccountDetail'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Availability:\n    get:\n      summary: check if a limited-availability entity such as a subdomain, email or phone number is already in use\n      operationId: checkAvailability\n      parameters:\n        - in: query\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - email\n              - phone\n              - subdomain\n            example: subdomain\n        - in: query\n          name: value\n          required: true\n          schema:\n            type: string\n            example: mycorp.sip.jambonz.us\n      responses:\n        200:\n          description: indicates whether value is already in use\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  available:\n                    type: boolean\n                    description: true if value requested is available\n                required:\n                  - available\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Prices:\n    get:\n      summary: list all prices\n      operationId: listPrices\n      responses:\n        200:\n          description: price listing\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n  /StripeCustomerId:\n    get:\n      summary: retrieve stripe customer id for an account, creating if necessary\n      operationId: getStripeCustomerId\n      responses:\n        200:\n          description: customer successfully provisioned or retrieved\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  stripe_customer_id: \n                    type: string\n                required:\n                  - stripe_customer_id\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Subscriptions:\n    get:\n      summary: get subscription details from stripe\n      operationId: getSubscription\n      responses:\n        200:\n          description: stripe subscription entity\n          content:\n            application/json:\n              schema:\n                type: object\n    post:\n      summary: create or modify subscriptions in Stripe for a customer\n      operationId: manageSubscription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                action:\n                  type: string\n                  enum:\n                    - upgrade-to-paid\n                    - downgrade-to-free\n                    - update-payment-method\n                    - update-quantities\n                payment_method_id:\n                  type: string\n                dry_run:\n                  type: boolean\n                products:\n                  type: array\n                  items:\n                    properties:\n                      product_sid:\n                        type: string\n                      price_id:\n                        type: string \n                      quantity:\n                        type: number\n                        format: integer\n              required:\n                - action\n      responses:\n        201:\n          description: subscription successfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    enum:\n                      - success\n                      - card error\n                      - action required\n                  customer_id:\n                    type: string\n                  client_secret:\n                    type: string\n                required:\n                  - status\n                  - customer_id\n        400:\n          description: bad request\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    \n  /ActivationCode:\n    post:\n      summary: send an activation code to the user\n      operationId: sendActivationCode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                code:\n                  type: string\n                  description: activation code\n                  example: A74DF\n                user_sid:\n                  type: string\n                  format: uuid\n                  description: identifies user to send to\n                type:\n                  type: string\n                  enum:\n                  - email\n                  - phone\n                value:\n                  type: string\n                  description: the new email or phone number to be activated\n      responses:\n        204:\n          description: activation code successfully sent\n        404:\n          description: User Not Found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /ActivationCode/{Code}:\n    parameters:\n      - name: Code\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    put:\n      summary: validate an activation code\n      operationId: validateActivationCode\n      requestBody:\n        content:\n          application/json:\n             schema:\n              type: object\n              properties:\n                user_sid:\n                  type: string\n                  format: uuid\n                  description: identifies user to send to\n                type:\n                  type: string\n                  enum:\n                  - email\n                  - phone\n      responses:\n        204:\n          description: activation code validated\n        404:\n          description: User or activation code Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /AccountTest/:ServiceProviderSid:\n    parameters:\n    - name: ServiceProviderSid\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    get:\n      summary: get test phone numbers and applications\n      operationId: getTestData\n      responses:\n        200:\n          description: test data for this service provider\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  phonenumbers:\n                    type: array\n                    items:\n                      type: string\n                  applications:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Application'\n        404:\n          description: Service Provider Not Found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Webhooks/{WebhookSid}:\n    parameters:\n      - name: WebhookSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    get:\n      summary: retrieve webhook\n      operationId: getWebhook\n      responses:\n        200:\n          description: webhook found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Webhook'\n        404:\n          description: webhook not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /VoipCarriers:\n    post:\n      summary: create voip carrier\n      operationId: createVoipCarrier\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: voip carrier name\n                  example: fastco\n                description:\n                  type: string\n                  example: my US sip trunking provider\n                account_sid:\n                  type: string\n                application_sid:\n                  type: string\n                e164_leading_plus:\n                  type: boolean\n                  description: whether a leading + is required on INVITEs to this provider\n                  example: true\n                requires_register:\n                  type: boolean\n                  description: wehther this provider requires us to send a REGISTER to them in order to receive calls\n                register_username:\n                  type: string\n                  description: sip username to authenticate with, if registration is required\n                  example: foo\n                register_sip_realm:\n                  type: string\n                  description: sip realm to authenticate with, if registration is required\n                  example: sip.fastco.com\n                register_password:\n                  type: string\n                  description: sip password to authenticate with, if registration is required\n                  example: bar\n                register_from_user:\n                  type: string\n                  description: optional username to apply in From header\n                register_from_domain:\n                  type: string\n                  description: optional domain to apply in From header\n                register_public_ip_in_contact:\n                  type: boolean\n                  description: if true, use our public ip in Contact header; otherwise, use sip realm\n                tech_prefix:\n                  type: string\n                  description: prefix to be applied to the called number for outbound call attempts\n                inbound_auth_username:\n                  type: string\n                  description: challenge inbound calls with this username/password if supplied\n                inbound_auth_password:\n                  type: string\n                  description: challenge inbound calls with this username/password if supplied\n                diversion:\n                  type: string\n                  description: Diversion header or phone number to apply to outbound calls\n              required: \n                - name\n      responses:\n        201:\n          description: voip carrier successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: list voip carriers\n      operationId: listVoipCarriers\n      responses:\n        200:\n          description: list of voip carriers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VoipCarrier'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /VoipCarriers/{VoipCarrierSid}:\n    parameters:\n      - name: VoipCarrierSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    delete:\n      summary: delete a voip carrier\n      operationId: deleteVoipCarrier\n      responses:\n        204:\n          description: voip carrier successfully deleted\n        404:\n          description: voip carrier not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n                example:\n                  msg: a service provider with active accounts can not be deleted\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve voip carrier\n      operationId: getVoipCarrier\n      responses:\n        200:\n          description: voip carrier found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VoipCarrier'\n        404:\n          description: voip carrier not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    put:\n      summary: update voip carrier\n      operationId: updateVoipCarrier\n      parameters:\n      - name: VoipCarrierSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VoipCarrier'\n      responses:\n        204:\n          description: voip carrier updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VoipCarrier'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        404:\n          description: voip carrier not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /SipGateways:\n    post:\n      summary: create sip gateway\n      operationId: createSipGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                voip_carrier_sid:\n                  type: string\n                  description: voip carrier that provides this gateway\n                  format: uuid\n                ipv4:\n                  type: string\n                port:\n                  type: number\n                is_active:\n                  type: boolean\n                inbound:\n                  type: boolean\n                outbound:\n                  type: boolean\n              required: \n                - voip_carrier_sid\n                - ipv4\n      responses:\n        201:\n          description: sip gateway successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: list sip gateways\n      operationId: listSipGateways\n      parameters:\n        - in: query\n          name: voip_carrier_sid\n          required: true\n          schema:\n            type: string\n            description: return only the SipGateways operated for this VoipCarrier\n      responses:\n        200:\n          description: list of sip gateways\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SipGateway'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /SipGateways/{SipGatewaySid}:\n    parameters:\n      - name: SipGatewaySid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    delete:\n      summary: delete a sip gateway\n      operationId: deleteSipGateway\n      responses:\n        204:\n          description: sip gateway successfully deleted\n        404:\n          description: sip gateway not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve sip gateway\n      operationId: getSipGateway\n      responses:\n        200:\n          description: sip gateway found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SipGateway'\n        404:\n          description: sip gateway not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    put:\n      summary: update sip gateway\n      operationId: updateSipGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SipGateway'\n      responses:\n        204:\n          description: sip gateway updated\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        404:\n          description: sip gateway not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /SmppGateways:\n    post:\n      summary: create smpp gateway\n      operationId: createSmppGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                voip_carrier_sid:\n                  type: string\n                  description: voip carrier that provides this gateway\n                  format: uuid\n                ipv4:\n                  type: string\n                port:\n                  type: number\n                netmask:\n                  type: number\n                inbound:\n                  type: boolean\n                outbound:\n                  type: boolean\n                is_primary:\n                  type: boolean\n                use_tls:\n                  type: boolean\n              required: \n                - voip_carrier_sid\n                - ipv4\n      responses:\n        201:\n          description: smpp gateway successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: list smpp gateways\n      operationId: listSmppGateways\n      responses:\n        200:\n          description: list of smpp gateways\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SmppGateway'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /SmppGateways/{SmppGatewaySid}:\n    parameters:\n      - name: SmppGatewaySid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    delete:\n      summary: delete a smpp gateway\n      operationId: deleteSmppGateway\n      responses:\n        204:\n          description: smpp gateway successfully deleted\n        404:\n          description: smpp gateway not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve smpp gateway\n      operationId: getSmppGateway\n      responses:\n        200:\n          description: smpp gateway found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmppGateway'\n        404:\n          description: smpp gateway not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    put:\n      summary: update sip gateway\n      operationId: updateSmppGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmppGateway'\n      responses:\n        204:\n          description: smpp gateway updated\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        404:\n          description: smpp gateway not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError' \n  /PhoneNumbers:\n    post:\n      summary: provision a phone number into inventory from a Voip Carrier\n      operationId: provisionPhoneNumber\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                account_sid:\n                  type: string\n                  format: uuid\n                application_sid:\n                  type: string\n                  format: uuid\n                number:\n                  type: string\n                  description: telephone number\n                voip_carrier_sid:\n                  type: string\n                  format: uuid\n              required: \n                - number\n                - voip_carrier_sid\n      responses:\n        201:\n          description: phone number successfully provisioned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n              example:\n                msg: invalid telephone number format\n        404:\n          description: voip carrier not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n                example:\n                  msg: the phone number provided already exists in inventory\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: list phone numbers\n      operationId: listProvisionedPhoneNumbers\n      responses:\n        200:\n          description: list of phone numbers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PhoneNumber'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /PhoneNumbers/{PhoneNumberSid}:\n    parameters:\n      - name: PhoneNumberSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    delete:\n      summary: delete a phone number\n      operationId: deletePhoneNumber\n      responses:\n        204:\n          description: phone number successfully deleted\n        404:\n          description: phone number not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n                example:\n                  msg: phone number that is assigned to an account may not be deleted\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve phone number\n      operationId: getPhoneNumber\n      responses:\n        200:\n          description: phone number found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PhoneNumber'\n        404:\n          description: phone number not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    put:\n      summary: update phone number\n      operationId: updatePhoneNumber\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PhoneNumber'\n      responses:\n        204:\n          description: phone number updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VoipCarrier'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        404:\n          description: phone number not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  \n  /ServiceProviders:\n    post:\n      summary: create service provider\n      operationId: createServiceProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: service provider name\n                  example: fastcomms\n                description:\n                  type: string\n                root_domain:\n                  type: string\n                  description: root domain for group of accounts that share a registration hook\n                  example: example.com\n                registration_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  description: authentication webhook for registration\n                ms_teams_fqdn:\n                  type: string\n                  description: SBC domain name for Microsoft Teams\n                  example: contoso.com\n              required: \n                - name\n      responses:\n        201:\n          description: service provider successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n    get:\n      summary: list service providers\n      operationId: listServiceProviders\n      responses:\n        200:\n          description: list of service providers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ServiceProvider'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /ServiceProviders/{ServiceProviderSid}:\n    parameters:\n    - name: ServiceProviderSid\n      in: path\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    delete:\n      summary: delete a service provider\n      operationId: deleteServiceProvider\n      responses:\n        204:\n          description: service provider successfully deleted\n        404:\n          description: service provider not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n    get:\n      summary: retrieve service provider\n      operationId: getServiceProvider\n      responses:\n        200:\n          description: service provider found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceProvider'\n        404:\n          description: service provider not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n    put:\n      summary: update service provider\n      operationId: updateServiceProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceProvider'\n      responses:\n        204:\n          description: service provider updated\n        404:\n          description: service provider not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /ServiceProviders/{ServiceProviderSid}/Accounts:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      summary: get all accounts for a service provider\n      operationId: getServiceProviderAccounts\n      responses:\n        200:\n          description: account listing\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n        403:\n          description: unauthorized\n        404:\n          description: service provider not found\n\n  /ServiceProviders/{ServiceProviderSid}/VoipCarriers:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      summary: get all carriers for a service provider\n      operationId: getServiceProviderCarriers\n      responses:\n        200:\n          description: account listing\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/VoipCarrier'\n        403:\n          description: unauthorized\n        404:\n          description: service provider not found\n    post:\n      summary: create a carrier\n      operationId: createCarrierForServiceProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VoipCarrier'\n      responses:\n        201:\n          description: service provider successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        404:\n          description: service provider not found\n  /ServiceProviders/{ServiceProviderSid}/PredefinedCarriers/{PredefinedCarrierSid}:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: PredefinedCarrierSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    post:\n      summary: add a VoiPCarrier to a service provider based on PredefinedCarrier template\n      operationId: createVoipCarrierFromTemplate\n      responses:\n        201:\n          description:  voip carrier successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /ServiceProviders/{ServiceProviderSid}/SpeechCredentials/:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    post:\n      summary: create a speech credential for a service provider\n      operationId: addSpeechCredentialForSeerviceProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpeechCredential'\n      responses:\n        201:\n          description: speech credential successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        404:\n          description: credential not found\n  /ServiceProviders/{ServiceProviderSid}/SpeechCredentials/{SpeechCredentialSid}:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: SpeechCredentialSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      summary: get a specific speech credential\n      operationId: getSpeechCredential\n      responses:\n        200:\n          description: retrieve speech credentials for a specified account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpeechCredential'\n        404:\n          description: credential not found\n    put:\n      summary: update a speech credential\n      operationId: updateSpeechCredential\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpeechCredentialUpdate'\n      responses:\n        204:\n          description: credential successfully updated\n        404:\n          description: credential not found\n        422:\n          description: credential not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    delete:\n      summary: delete a speech credential\n      operationId: deleteSpeechCredential\n      responses:\n        204:\n          description: credential successfully deleted\n        404:\n          description: credential not found\n  /ServiceProviders/{ServiceProviderSid}/SpeechCredentials/{SpeechCredentialSid}/test:\n    get:\n      summary: test a speech credential\n      operationId: testSpeechCredential\n      parameters:\n        - name: ServiceProviderSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: SpeechCredentialSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: credential test results\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tts:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                        enum: \n                            - success \n                            - fail\n                            - not tested\n                      reason:\n                        type: string\n                  stt:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                        enum: \n                            - success \n                            - fail\n                      reason:\n                        type: string\n        404:\n          description: credential not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /ServiceProviders/{ServiceProviderSid}/Limits:\n    post:\n      summary: create a limit for a service provider\n      operationId: addLimitForServiceProvider\n      parameters:\n        - name: ServiceProviderSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Limits'\n      responses:\n        201:\n          description: limit successfully created or updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        404:\n          description: service provider not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve call capacity and other limits from the service provider\n      operationId: getServiceProviderLimits\n      parameters:\n        - name: ServiceProviderSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: service provider limits\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Limits'\n        404:\n          description: service provider not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Accounts/{AccountSid}/Limits:\n    post:\n      summary: create a limit for an account\n      operationId: addLimitForAccount\n      parameters:\n        - name: AccountSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Limits'\n      responses:\n        201:\n          description: limit successfully created or updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        404:\n          description: account not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve call capacity and other limits from the account\n      operationId: getAccountLimits\n      parameters:\n        - name: AccountSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: account limits\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Limits'\n        404:\n          description: account not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /MicrosoftTeamsTenants:\n    post:\n      summary: provision a customer tenant for MS Teams\n      operationId: createMsTeamsTenant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                service_provider_sid:\n                  type: string\n                  format: uuid\n                  example: 85f9c036-ba61-4f28-b2f5-617c23fa68ff\n                account_sid:\n                  type: string\n                  format: uuid\n                  example: 85f9c036-ba61-4f28-b2f5-617c23fa68ff\n                application_sid:\n                  type: string\n                  format: uuid\n                  example: 85f9c036-ba61-4f28-b2f5-617c23fa68ff\n                tenant_fqdn:\n                  type: string\n                  example: customer.contoso.com\n              required:\n                - service_provider_sid\n                - account\n                - tenant_fqdn\n      responses:\n        201:\n          description: tenant successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: list MS Teams tenants\n      operationId: listMsTeamsTenants\n      responses:\n        200:\n          description: list of tenants\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MsTeamsTenant'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /MicrosoftTeamsTenants/{TenantSid}:\n    parameters:\n      - name: TenantSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    delete:\n      summary: delete an MS Teams tenant\n      operationId: deleteTenant\n      responses:\n        204:\n          description: tenant successfully deleted\n        404:\n          description: tenant not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve an MS Teams tenant\n      operationId: getTenant\n      responses:\n        200:\n          description: tenant found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MsTeamsTenant'\n        404:\n          description: account not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n    put:\n      summary: update tenant\n      operationId: putTenant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MsTeamsTenant'\n      responses:\n        204:\n          description: tenant updated\n        404:\n          description: tenant not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n\n  /Accounts:\n    post:\n      summary: create an account\n      operationId: createAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: account name\n                  example: foobar\n                sip_realm:\n                  type: string\n                  description: sip realm for registration\n                  example: sip.mycompany.com\n                registration_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  description: authentication webhook for registration\n                queue_event_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  description: webhook called when members join or leave a queue\n                service_provider_sid:\n                  type: string\n                  format: uuid\n                  example: 85f9c036-ba61-4f28-b2f5-617c23fa68ff\n              required: \n                - name\n                - service_provider_sid\n      responses:\n        201:\n          description: account successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n      callbacks:\n        onRegistrationAttempt:\n          '{$request.body#/registrationUrl}/auth':\n            post:\n              requestBody:\n                description: |\n                  provides details of the authentication request.  The receiving server is responsible for authenticating the \n                  request as per [RFC 2617](https://tools.ietf.org/html/rfc2617)\n                content:\n                  application/json:\n                    schema:\n                      required:\n                        - method\n                        - realm\n                        - username\n                        - expires\n                        - nonce\n                        - uri\n                        - response\n                      type: object\n                      properties:\n                        method:\n                          type: string\n                          description: sip request method\n                          example: REGISTER\n                        realm:\n                          type: string\n                          description: sip realm\n                          example: mycompany.com\n                        username:\n                          type: string\n                          description: sip username provided\n                          example: daveh\n                        expires:\n                          type: number\n                          description: expiration requested, in seconds\n                          example: 3600\n                        scheme:\n                          type: string\n                          description: encryption protocol\n                          example: digest\n                        nonce:\n                          type: string\n                          description: nonce value\n                          example: InFriVGWVoKeCckYrTx7wg==\"\n                        uri:\n                          type: string\n                          format: uri\n                          description: sip uri in request\n                          example: sip:mycompany.com\n                        algorithm:\n                          type: string\n                          description: encryption algorithm used, default to MD5 if not provided\n                          example: MD5\n                        qop:\n                          type: string\n                          description: qop value\n                          example: auth \n                        cnonce:\n                          type: string\n                          description: cnonce value\n                          example: 6b8b4567\n                        nc:\n                          type: string\n                          description: nc value\n                          example: 00000001\n                        response:\n                          type: string\n                          description: digest value calculated by the client\n                          example: be641cf7951ff23ab04c57907d59f37d\n              responses:\n                '200':\n                  description: |\n                    Your callback should return this HTTP status code in all cases.\n                    if the request was authenticated and you wish to admit \n                    the client to the network, this is indicated by setting the 'response' \n                    attribute in the body to 'ok'\n                  content:\n                    application/json:\n                      schema:\n                        type: object\n                        required:\n                          - status\n                        properties:\n                          status:\n                            type: string\n                            description: indicates whether the request was successfully authenticated\n                            enum:\n                              - ok\n                              - fail\n                            example: ok\n                          message:\n                            type: string\n                            description: a human-readable message\n                            example: authentication granted\n                          call_hook:\n                            type: string\n                            format: url\n                            description: url of application to invoke when this device places a call\n                          expires:\n                            type: number\n                            description: |\n                              The expires value to grant to the requesting user.\n                              If not provided, the expires value in the request is observed.\n                              If provided, must be less than the requested expires value.\n                          blacklist:\n                            type: number\n                            description: |\n                              If provided, represents a period in seconds during which the source IP \n                              address should be blacklisted by the platform (0 means forever).\n\n    get:\n      summary: list accounts\n      operationId: listAccounts\n      responses:\n        200:\n          description: list of accounts\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Account'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Accounts/{AccountSid}:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    delete:\n      summary: delete an account\n      operationId: deleteAccount\n      responses:\n        204:\n          description: account successfully deleted\n        404:\n          description: account not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve account\n      operationId: getAccount\n      responses:\n        200:\n          description: account found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n        404:\n          description: account not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n    put:\n      summary: update account\n      operationId: updateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n      responses:\n        204:\n          description: account updated\n        404:\n          description: account not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Accounts/{AccountSid}/WebhookSecret:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: regenerate\n        in: query\n        required: false\n        schema:\n          type: boolean\n    get:\n      summary: get webhook signing secret, regenerating if requested\n      operationId: getWebhookSecret\n      responses:\n        200:\n          description: secret\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  webhook_secret:\n                    type: string\n        404:\n          description: account not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Accounts/{AccountSid}/ApiKeys:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      summary: get all api keys for an account\n      operationId: getAccountApiKeys\n      responses:\n        200:\n          description: list of api keys\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ApiKey'\n        404:\n          description: account not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Accounts/{AccountSid}/SipRealms/{SipRealm}:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: SipRealm\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      summary: add or change the sip realm\n      operationId: createSipRealm\n      responses:\n        204:\n          description: sip_realm updated and DNS entries successfully created\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Accounts/{AccountSid}/SpeechCredentials:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n\n    post:\n      summary: add a speech credential\n      operationId: createSpeechCredential\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpeechCredential'\n      responses:\n        201:\n          description: speech credential successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve all speech credentials for an account\n      operationId: listSpeechCredentials\n      responses:\n        200:\n          description: retrieve speech credentials for a specified account\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SpeechCredential'\n        404:\n          description: account not found\n  /Accounts/{AccountSid}/SpeechCredentials/{SpeechCredentialSid}:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: SpeechCredentialSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n    get:\n      summary: get a specific speech credential\n      operationId: getSpeechCredential\n      responses:\n        200:\n          description: retrieve speech credentials for a specified account\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpeechCredential'\n        404:\n          description: credential not found\n    put:\n      summary: update a speech credential\n      operationId: updateSpeechCredential\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpeechCredentialUpdate'\n      responses:\n        204:\n          description: credential successfully deleted\n        404:\n          description: credential not found\n        422:\n          description: credential not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    delete:\n      summary: delete a speech credential\n      operationId: deleteSpeechCredential\n      responses:\n        204:\n          description: credential successfully deleted\n        404:\n          description: credential not found\n  /Accounts/{AccountSid}/SpeechCredentials/{SpeechCredentialSid}/test:\n    get:\n      summary: test a speech credential\n      operationId: testSpeechCredential\n      parameters:\n        - name: AccountSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: SpeechCredentialSid\n          in: path\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        200:\n          description: credential test results\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tts:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                        enum: \n                            - success \n                            - fail\n                            - not tested\n                      reason:\n                        type: string\n                  stt:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                        enum: \n                            - success \n                            - fail\n                      reason:\n                        type: string\n        404:\n          description: credential not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Accounts/{AccountSid}/RecentCalls:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: page\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: page number of data to retrieve\n      - in: query\n        name: count\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: number of rows to retrieve in each page set\n      - in: query\n        name: days\n        required: false\n        schema:\n          type: number\n          format: integer\n          description: number of days back to retrieve, must be ge 1 and le 30\n      - in: query\n        name: start\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: start date to retrieve\n      - in: query\n        name: end\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: end date to retrieve\n      - in: query\n        name: answered\n        required: false\n        schema:\n          type: string\n          enum:\n            - true\n            - false\n          description: retrieve only answered calls\n      - in: query\n        name: direction\n        required: false\n        schema:\n          type: string\n          enum:\n            - inbound\n            - outbound\n    get:\n      summary: retrieve recent calls for an account\n      operationId: listRecentCalls\n      responses:\n        200:\n          description: retrieve recent call records for a specified account\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: number\n                    format: integer\n                    description: total number of records in that database that match the filter criteria\n                  batch:\n                    type: number\n                    format: integer\n                    description: total number of records returned in this page set\n                  page:\n                    type: number\n                    format: integer\n                    description: page number that was requested, and is being returned\n                  data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          account_sid:\n                            type: string\n                            format: uuid\n                          call_sid:\n                            type: string\n                            format: uuid\n                          from:\n                            type: string\n                          to: \n                            type: string\n                          answered:\n                            type: boolean\n                          sip_call_id:\n                            type: string\n                          sip_status:\n                            type: number\n                            format: integer\n                          duration:\n                            type: number\n                            format: integer\n                          attempted_at:\n                            type: number\n                            format: integer\n                          answered_at:\n                            type: number\n                            format: integer\n                          terminated_at:\n                            type: number\n                            format: integer\n                          termination_reason:\n                            type: string\n                          host:\n                            type: string\n                          remote_host:\n                            type: string\n                          direction:\n                            type: string\n                            enum:\n                              - inbound\n                              - outbound\n                          trunk:\n                            type: string\n                        required:\n                          - account_sid\n                          - call_sid\n                          - attempted_at\n                          - terminated_at\n                          - answered\n                          - direction\n                          - from \n                          - to\n                          - sip_status\n                          - duration\n        404:\n          description: account not found\n  /Accounts/{AccountSid}/RecentCalls/{CallId}:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: CallId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: retrieve sip trace detail for a call\n      operationId: getRecentCallTrace\n      responses:\n        200:\n          description: retrieve sip trace data\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: account or call not found\n  /ServiceProviders/{ServiceProviderSid}/RecentCalls/{CallId}/pcap:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: CallId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: retrieve pcap for a call\n      operationId: getRecentCallTrace\n      responses:\n        200:\n          description: retrieve sip trace data\n          content:\n            application/octet-stream:\n              schema:\n                type: object\n        404:\n          description: account or call not found\n  /ServiceProviders/{ServiceProviderSid}/RecentCalls:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: page\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: page number of data to retrieve\n      - in: query\n        name: count\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: number of rows to retrieve in each page set\n      - in: query\n        name: days\n        required: false\n        schema:\n          type: number\n          format: integer\n          description: number of days back to retrieve, must be ge 1 and le 30\n      - in: query\n        name: start\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: start date to retrieve\n      - in: query\n        name: end\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: end date to retrieve\n      - in: query\n        name: answered\n        required: false\n        schema:\n          type: string\n          enum:\n            - true\n            - false\n          description: retrieve only answered calls\n      - in: query\n        name: direction\n        required: false\n        schema:\n          type: string\n          enum:\n            - inbound\n            - outbound\n    get:\n      summary: retrieve recent calls for an account\n      operationId: listRecentCalls\n      responses:\n        200:\n          description: retrieve recent call records for a specified account\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: number\n                    format: integer\n                    description: total number of records in that database that match the filter criteria\n                  batch:\n                    type: number\n                    format: integer\n                    description: total number of records returned in this page set\n                  page:\n                    type: number\n                    format: integer\n                    description: page number that was requested, and is being returned\n                  data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          service_provider_sid:\n                            type: string\n                            format: uuid\n                          account_sid:\n                            type: string\n                            format: uuid\n                          call_sid:\n                            type: string\n                            format: uuid\n                          from:\n                            type: string\n                          to: \n                            type: string\n                          answered:\n                            type: boolean\n                          sip_call_id:\n                            type: string\n                          sip_status:\n                            type: number\n                            format: integer\n                          duration:\n                            type: number\n                            format: integer\n                          attempted_at:\n                            type: number\n                            format: integer\n                          answered_at:\n                            type: number\n                            format: integer\n                          terminated_at:\n                            type: number\n                            format: integer\n                          termination_reason:\n                            type: string\n                          host:\n                            type: string\n                          remote_host:\n                            type: string\n                          direction:\n                            type: string\n                            enum:\n                              - inbound\n                              - outbound\n                          trunk:\n                            type: string\n                        required:\n                          - account_sid\n                          - call_sid\n                          - attempted_at\n                          - terminated_at\n                          - answered\n                          - direction\n                          - from \n                          - to\n                          - sip_status\n                          - duration\n        404:\n          description: account not found\n  /ServiceProviders/{ServiceProviderSid}/RecentCalls/{CallId}:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: CallId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: retrieve sip trace detail for a call\n      operationId: getRecentCallTrace\n      responses:\n        200:\n          description: retrieve sip trace data\n          content:\n            application/json:\n              schema:\n                type: object\n        404:\n          description: service provider or call not found\n  /Accounts/{AccountSid}/RecentCalls/{CallId}/pcap:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: CallId\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: retrieve pcap for a call\n      operationId: getRecentCallTrace\n      responses:\n        200:\n          description: retrieve sip trace data\n          content:\n            application/octet-stream:\n              schema:\n                type: object\n        404:\n          description: account or call not found\n  /ServiceProviders/{ServiceProviderSid}/Alerts:\n    parameters:\n      - name: ServiceProviderSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: page\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: page number of data to retrieve\n      - in: query\n        name: count\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: number of rows to retrieve in each page set\n      - in: query\n        name: days\n        required: false\n        schema:\n          type: number\n          format: integer\n          description: number of days back to retrieve, must be ge 1 and le 30\n      - in: query\n        name: start\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: start date to retrieve\n      - in: query\n        name: end\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: end date to retrieve\n      - in: query\n        name: alert_type\n        required: false\n        schema:\n          type: string\n          enum:\n            - webhook-failure\n            - webhook-connection-failure\n            - webhook-auth-failure\n            - no-tts\n            - no-stt\n            - tts-failure\n            - stt-failure\n            - no-carrier\n            - call-limit\n            - device-limit\n            - api-limit\n    get:\n      summary: retrieve alerts for a service provider\n      operationId: listAlerts\n      responses:\n        200:\n          description: retrieve alerts for a specified account\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: number\n                    format: integer\n                    description: total number of records in that database that match the filter criteria\n                  batch:\n                    type: number\n                    format: integer\n                    description: total number of records returned in this page set\n                  page:\n                    type: number\n                    format: integer\n                    description: page number that was requested, and is being returned\n                  data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          time:\n                            type: string\n                            format: date-time\n                          service_provider_sid:\n                            type: string\n                            format: uuid\n                          account_sid:\n                            type: string\n                            format: uuid\n                          alert_type:\n                            type: string\n                          message:\n                            type: string\n                          detail:\n                            type: string\n                        required:\n                          - time\n                          - account_sid\n                          - alert_type\n                          - message\n        404:\n          description: service provider not found\n  /Accounts/{AccountSid}/Alerts:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: page\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: page number of data to retrieve\n      - in: query\n        name: count\n        required: true\n        schema:\n          type: number\n          format: integer\n          description: number of rows to retrieve in each page set\n      - in: query\n        name: days\n        required: false\n        schema:\n          type: number\n          format: integer\n          description: number of days back to retrieve, must be ge 1 and le 30\n      - in: query\n        name: start\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: start date to retrieve\n      - in: query\n        name: end\n        required: false\n        schema:\n          type: string\n          format: date-time\n          description: end date to retrieve\n      - in: query\n        name: alert_type\n        required: false\n        schema:\n          type: string\n          enum:\n            - webhook-failure\n            - webhook-connection-failure\n            - webhook-auth-failure\n            - no-tts\n            - no-stt\n            - tts-failure\n            - stt-failure\n            - no-carrier\n            - call-limit\n            - device-limit\n            - api-limit\n    get:\n      summary: retrieve alerts for an account\n      operationId: listAlerts\n      responses:\n        200:\n          description: retrieve alerts for a specified account\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: number\n                    format: integer\n                    description: total number of records in that database that match the filter criteria\n                  batch:\n                    type: number\n                    format: integer\n                    description: total number of records returned in this page set\n                  page:\n                    type: number\n                    format: integer\n                    description: page number that was requested, and is being returned\n                  data:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          time:\n                            type: string\n                            format: date-time\n                          account_sid:\n                            type: string\n                            format: uuid\n                          alert_type:\n                            type: string\n                          message:\n                            type: string\n                          detail:\n                            type: string\n                        required:\n                          - time\n                          - account_sid\n                          - alert_type\n                          - message\n        404:\n          description: account not found\n  /Applications:\n    post:\n      summary: create application\n      operationId: createApplication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: application name\n                account_sid:\n                  type: string\n                  format: uuid\n                call_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  description: application webhook to handle inbound voice calls\n                call_status_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  description: webhook to report call status events\n                messaging_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  description: application webhook to handle inbound SMS/MMS messages\n                speech_synthesis_vendor:\n                  type: string\n                speech_synthesis_voice:\n                  type: string\n                speech_recognizer_vendor:\n                  type: string\n                speech_recognizer_language:\n                  type: string\n              required: \n                - name\n                - account_sid\n                - call_hook\n                - call_status_hook\n      responses:\n        201:\n          description: application successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SuccessfulAdd'\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: list applications\n      operationId: listApplications\n      responses:\n        200:\n          description: list of applications\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Application'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n\n  /Applications/{ApplicationSid}:\n    parameters:\n      - name: ApplicationSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    delete:\n      summary: delete an application\n      operationId: deleteApplication\n      responses:\n        204:\n          description: application successfully deleted\n        404:\n          description: application not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve an application\n      responses:\n        200:\n          description: application found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Application'\n        404:\n          description: application not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    put:\n      summary: update application\n      operationId: updateApplication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Application'\n      responses:\n        204:\n          description: application updated\n        404:\n          description: application not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        \n  \n  /Accounts/{AccountSid}/Calls:\n    post:\n      summary: create a call\n      operationId: createCall\n      parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - from\n                - to\n              type: object\n              properties:\n                application_sid:\n                  type: string\n                  format: uuid\n                  description: The application to use to control this call.  Either applicationSid or url is required.\n                call_hook:\n                  $ref: '#/components/schemas/Webhook'\n                call_status_hook:\n                  $ref: '#/components/schemas/Webhook'\n                  example: {\"url\": \"https://acme.com/status\", \"method\": \"POST\"}\n                from:\n                  type: string\n                  description: The calling party number\n                  example: \"16172375089\"\n                fromHost:\n                  type: string\n                  description: The hostname to put in the SIP From header of the INVITE\n                  example: \"blf.finotel.com\"\n                timeout:\n                  type: integer\n                  description: the number of seconds to wait for call to be answered.  Defaults to 60.\n                  example: 30\n                tag:\n                  type: object\n                  description: initial set of customer-supplied metadata to associate with the call (see jambonz 'tag' verb)\n                  example: {\"callCount\": 10}\n                to:\n                  $ref: '#/components/schemas/Target'\n                  description: destination for call\n      responses:\n        201:\n          description: call successfully created\n          content:\n            application/json:\n              schema:\n                required:\n                  - sid\n                properties:\n                  sid:\n                    type: string\n                    format: uuid\n                    example: 2531329f-fb09-4ef7-887e-84e648214436\n        400:\n          description: bad request\n    get:\n      summary: list calls\n      operationId: listCalls\n      parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: list of calls for a specified account\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Call'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Accounts/{AccountSid}/Calls/{CallSid}:\n    parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n      - name: CallSid\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n    delete:\n      summary: delete a call\n      operationId: deleteCall\n      responses:\n        204:\n          description: call successfully deleted\n        404:\n          description: call not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    get:\n      summary: retrieve a call\n      operationId: getCall\n      responses:\n        200:\n          description: call found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Call'\n        404:\n          description: call not found\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n    post:\n      summary: update a call\n      operationId: updateCall\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                call_hook:\n                  $ref: '#/components/schemas/Webhook'\n                call_status:\n                  type: string\n                  enum:\n                    - completed\n                    - no-answer\n                conf_mute_status:\n                  type: string\n                  enum:\n                    - mute\n                    - unmute\n                conf_hold_status:\n                  type: string\n                  enum:\n                    - hold\n                    - unhold\n                listen_status:\n                  type: string\n                  enum:\n                    - pause\n                    - resume\n                mute_status:\n                  type: string\n                  enum:\n                    - mute\n                    - unmute\n                whisper:\n                  $ref: '#/components/schemas/Webhook'\n                sip_request:\n                  type: object\n                  properties:\n                    method:\n                      type: string\n                    content_type:\n                      type: string\n                    content:\n                      type: string\n                    headers:\n                      type: object\n                record: \n                  type: object\n                  properties:\n                    action:\n                      type: string\n                      enum:\n                      - startCallRecording\n                      - stopCallRecording\n                      - pauseCallRecording\n                      - resumeCallRecording\n                    recordingID:\n                      type: string \n                    siprecServerURL:\n                      type: string\n      responses:\n        200:\n          description: Accepted\n        202:\n          description: Accepted\n        400:\n          description: bad request\n        404:\n          description: call not found\n        422:\n          description: unprocessable entity\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n        500:\n          description: system error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeneralError'\n  /Accounts/{AccountSid}/Messages:\n    post:\n      summary: create an outgoing SMS message\n      operationId: createMessage\n      parameters:\n      - name: AccountSid\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Message'\n      responses:\n        201:\n          description: call successfully created\n          content:\n            application/json:\n              schema:\n                required:\n                  - sid\n                properties:\n                  sid:\n                    type: string\n                    format: uuid\n                    example: 2531329f-fb09-4ef7-887e-84e648214436\n                  providerResponse:\n                    type: string\n        480:\n          description: temporary failure\n          content:\n            application/json:\n              schema:\n                required:\n                  - sid\n                properties:\n                  sid:\n                    type: string\n                    format: uuid\n                    example: 2531329f-fb09-4ef7-887e-84e648214436\n                  message:\n                    type: string\n                  smpp_err_code:\n                    type: string\n        400:\n          description: bad request         \ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: token\n  schemas:\n    Login:\n      type: object\n      properties:\n        user_sid: \n          type: string\n        api_token:\n          type: string\n        change_password:\n          type: boolean\n      required:\n        - user_sid\n    SuccessfulApiKeyAdd:\n      type: object\n      required:\n        - sid\n        - token\n      properties:\n        sid:\n          type: string\n        token:\n          type: string\n      example:\n        sid: 9d26a637-1679-471f-8da8-7150266e1254\n        token: 589cead6-de24-4689-8ac3-08ffaf102811\n    SuccessfulAdd:\n      type: object\n      required:\n        - sid\n      properties:\n        sid:\n          type: string\n      example:\n        sid: 9d26a637-1679-471f-8da8-7150266e1254\n    GeneralError:\n      type: object\n      required:\n        - msg\n      properties:\n        msg:\n          type: string\n      example:\n        msg: specific error detail will be provided here\n    ServiceProvider:\n      type: object\n      properties:\n        service_provider_sid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n        root_domain:\n          type: string\n        registration_hook:\n          $ref: '#/components/schemas/Webhook'\n          description: authentication webhook for registration\n        ms_teams_fqdn:\n          type: string\n        test_number:\n          type: string\n          description: used for inbound testing for accounts on free plan\n        test_application_name:\n          type: string\n          description: name of test application that can be used for new signups\n        test_application_sid:\n          type: string\n          description: identifies test application that can be used for new signups\n      required:\n        - service_provider_sid\n        - name\n    VoipCarrier:\n      type: object\n      properties:\n        voip_carrier_sid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n        account_sid:\n          type: string\n          format: uuid\n        application_sid:\n          type: string\n          format: uuid          \n        e164_leading_plus:\n          type: boolean\n        requires_register:\n          type: boolean\n        register_username:\n          type: string\n        register_sip_realm:\n          type: string\n        register_password:\n          type: string\n        tech_prefix:\n          type: string\n        inbound_auth_username:\n          type: string\n        inbound_auth_password:\n          type: string\n        diversion:\n          type: string\n        is_active:\n          type: boolean\n        smpp_system_id:\n          type: string\n        smpp_password:\n          type: string\n        smpp_inbound_system_id:\n          type: string\n        smpp_inbound_password:\n          type: string\n        smpp_enquire_link_interval:\n          type: number\n          format: integer\n      required:\n        - voip_carrier_sid\n        - name\n    SipGateway:\n      type: object\n      properties:\n        sip_gateway_sid:\n          type: string\n          format: uuid\n        ipv4:\n          type: string\n        port:\n          type: number\n        netmask:\n          type: number\n        voip_carrier_sid:\n          type: string\n          format: uuid\n        inbound:\n          type: boolean\n        outbound:\n          type: boolean\n      required:\n        - sip_gateway_sid\n        - voip_carrier_sid\n        - ipv4\n        - port\n        - netmask\n    SmppGateway:\n      type: object\n      properties:\n        smpp_gateway_sid:\n          type: string\n          format: uuid\n        ipv4:\n          type: string\n        port:\n          type: number\n        netmask:\n          type: number\n        voip_carrier_sid:\n          type: string\n          format: uuid\n        is_primary:\n          type: boolean\n        use_tls:\n          type: boolean\n        inbound:\n          type: boolean\n        outbound:\n          type: boolean\n      required:\n        - smpp_gateway_sid\n        - voip_carrier_sid\n        - ipv4\n        - port\n        - netmask\n    Account:\n      type: object\n      properties:\n        account_sid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        sip_realm:\n          type: string\n        registration_hook:\n          $ref: '#/components/schemas/Webhook'\n          description: authentication webhook for registration\n        device_calling_application_sid:\n          type: string\n          format: uuid\n        service_provider_sid:\n          type: string\n          format: uuid\n      required:\n        - account_sid\n        - name\n        - service_provider_sid\n    Application:\n      type: object\n      properties:\n        application_sid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        account_sid:\n          type: string\n          format: uuid\n        call_hook:\n          $ref: '#/components/schemas/Webhook'\n          description: application webhook for inbound voice calls\n        call_status_hook:\n          $ref: '#/components/schemas/Webhook'\n          description: webhhok for reporting call status events\n        messaging_hook:\n          $ref: '#/components/schemas/Webhook'\n          description: application webhook for inbound SMS/MMS\n        speech_synthesis_vendor:\n          type: string\n        speech_synthesis_voice:\n          type: string\n        speech_recognizer_vendor:\n          type: string\n        speech_recognizer_language:\n          type: string\n      required:\n        - application_sid\n        - name\n        - account_sid\n    ApiKey:\n      type: object\n      properties:\n        api_key_sid:\n          type: string\n          format: uuid\n        token:\n          type: string\n          format: uuid\n        account_sid:\n          type: string\n          format: uuid\n        service_provider_sid:\n          type: string\n          format: uuid\n        expires_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n        last_used:\n          type: string\n          format: date-time\n      required:\n        - api_key_sid\n        - token\n    PhoneNumber:\n      type: object\n      properties:\n        phone_number_sid:\n          type: string\n          format: uuid\n        number:\n          type: string\n        voip_carrier_sid:\n          type: string\n          format: uuid\n        account_sid:\n          type: string\n          format: uuid\n        application_sid:\n          type: string\n          format: uuid\n      required:\n        - phone_number_sid\n        - number\n        - voip_carrier_sid\n    Registration:\n      type: object\n      properties:\n        registration_sid:\n          type: string\n          format: uuid\n        username:\n          type: string\n        domain:\n          type: string\n        sip_contact:\n          type: string\n        sip_user_agent:\n          type: string\n      required:\n        - registration_sid\n        - username\n        - domain\n        - sip_contact\n    Webhook:\n      type: object\n      properties:\n        webhook_sid:\n          type: string\n          format: uuid\n        url:\n          type: string\n          format: url\n        method:\n          type: string\n          enum:\n            - get\n            - post\n        username:\n          type: string\n        password:\n          type: string\n      required:\n        - url\n      example: {\"url\": \"https://acme.com\", \"method\": \"POST\"}\n    MsTeamsTenant:\n      type: object\n      properties:\n        service_provider_sid:\n          type: string\n          format: uuid\n        account_sid:\n          type: string\n          format: uuid\n        application_sid:\n          type: string\n          format: uuid\n        tenant_fqdn:\n          type: string\n      required:\n        - service_provider_sid\n        - tenant_fqdn\n    Call:\n      type: object\n      properties:\n        account_sid:\n          type: string\n          format: uuid\n        application_sid:\n          type: string\n          format: uuid\n        call_id:\n          type: string\n        call_sid:\n          type: string\n          format: uuid\n        call_status:\n          type: string\n          enum:\n            - trying\n            - ringing\n            - alerting\n            - in-progress\n            - completed\n            - busy\n            - no-answer\n            - failed\n            - queued\n        caller_name:\n          type: string\n        direction:\n          type: string\n          enum:\n            - inbound\n            - outbound \n        duration:\n          type: integer\n        from:\n          type: string\n        originating_sip_trunk_name:\n          type: string\n        parent_call_sid:\n          type: string\n          format: uuid\n        service_url:\n          type: string\n        sip_status:\n          type: integer\n        to:\n          type: string\n      required:\n        - account_sid\n        - call_id\n        - call_sid\n        - call_status\n        - direction\n        - from\n        - service_url\n        - sip_status\n        - to\n    Target:\n      properties:\n        type:\n          type: string\n          enum:\n            - phone\n            - sip\n            - user\n        number:\n          type: string\n        sipUri:\n          type: string\n        name:\n          type: string\n        auth:\n          type: object\n          properties:\n            username:\n              type: string\n            password:\n              type: string\n      required:\n        - type\n      example: {\"type\": \"phone\", \"number\": \"+16172375080\"}\n    Message:\n      properties:\n        provider:\n          type: string\n        from:\n          type: string\n        to:\n          type: string\n        text:\n          type: string\n        media:\n          type: string\n      required:\n        - from\n        - to\n      example: {\"from\": \"13394445678\", \"to\": \"16173333456\", \"text\": \"please call when you can\"}\n    SpeechCredential:\n      properties:\n        speech_credential_sid:\n          type: string\n          format: uuid\n        account_sid:\n          type: string\n          format: uuid\n        vendor:\n          type: string\n          enum:\n            - google\n            - aws\n        service_key:\n          type: string\n        access_key_id:\n          type: string\n        secret_access_key:\n          type: string\n        aws_region:\n          type: string\n        last_used:\n          type: string\n          format: date-time\n        last_tested:\n          type: string\n          format: date-time\n        use_for_tts:\n          type: boolean\n        use_for_stt:\n          type: boolean\n        tts_tested_ok:\n          type: boolean\n        stt_tested_ok:\n          type: boolean\n    SpeechCredentialUpdate:\n      properties:\n        use_for_tts:\n          type: boolean\n        use_for_stt:\n          type: boolean\n    UserAndAccountDetail:\n      type: object\n      properties:\n        user:\n          type: object\n          properties:\n            user_sid:\n              type: string\n            name: \n              type: string\n            email:\n              type: string\n            phone:\n              type: string\n            service_provider_sid:\n              type: string\n            force_change:\n              type: boolean\n            provider:\n              type: string\n            provider_userid:\n              type: string\n            scope:\n              type: string\n            email_validated:\n              type: boolean\n            phone_validated:\n              type: string\n        account:\n          type: object\n          properties:\n            account_sid:\n              type: string\n            sip_realm:\n              type: string\n            service_provider_sid:\n              type: string\n            registration_hook_sid:\n              type: string\n            queue_event_hook_sid:\n              type: string\n            device_calling_application_sid:\n              type: string\n            is_active:\n              type: boolean\n            created_at:\n              type: string\n              format: date-time\n        testapp:\n          type: object\n          properties:\n            application_sid:\n              type: string\n            name:\n              type: string\n            service_provider_sid:\n              type: string\n            account_sid:\n              type: string\n            call_hook_sid:\n              type: string\n            call_status_hook_sid:\n              type: string\n            messaging_hook_sid:\n              type: string\n            speech_synthesis_vendor:\n              type: string\n            speech_synthesis_language:\n              type: string\n            speech_synthesis_voice:\n              type: string\n            speech_recognizer_vendor:\n              type: string\n            speech_recognizer_language:\n              type: string\n        balance:\n          type: object\n          properties:\n            currency:\n              type: string\n              enum:\n                - USD \n                - EUR\n            balance:\n              type: number\n            last_updated_at:\n              type: string\n              format: date-time\n            created_at:\n              type: string\n              format: date-time\n            last_transaction_id:\n              type: string\n        capacities:\n          type: object\n          properties:\n            effective_start_date:\n              type: string\n              format: date-time\n            effective_end_date:\n              type: string\n              format: date-time\n            limit_sessions:\n              type: integer\n            limit_registrations:\n              type: integer\n        api_keys:\n          type: array\n          items:\n            type: object\n            properties:\n              token:\n                type: string\n              last_used:\n                type: string\n                format: date-time\n              created_at:\n                type: string\n                format: date-time\n        products:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              description:\n                type: string\n              category:\n                type: string\n              quantity:\n                type: string\n              in_starter_set:\n                type: boolean\n              product_sid:\n                type: string\n              effective_start_date:\n                type: string\n                format: date-time\n              effective_end_date:\n                type: string\n                format: date-time\n    UserProfile:\n      type: object\n      properties:\n        user_sid: \n          type: string\n          example: a5bce31e-a028-45cd-94c4-f121b72fec61\n        account_sid:\n          type: string\n          example: a5bce31e-a028-45cd-94c4-f121b72fec61\n        is_active:\n          type: boolean\n          description: indicates whether account is active\n          example: true\n        name:\n          type: string\n          description: full user name\n          example: Dave Horton\n        email:\n          type: string\n          description: email associated with user\n          example: daveh@drachtio.org\n        phone:\n          type: string\n          description: phone associated with user\n        provider:\n          type: string\n          description: authentication provider\n          enum:\n            - github\n            - google\n            - local\n          example: github\n        scope:\n          type: string\n          description: scope of user permissions\n          enum:\n            - read-only\n            - read-write\n          example: read-write\n        pristine:\n          type: boolean\n          description: true if account was newly created\n          example: true\n        email_validated:\n          type: boolean\n          description: indicates whether user has validated their email address\n          example: true\n        phone_validated:\n          type: boolean\n          description: indicates whether user has validated their mobile phone\n          example: true\n        tutorial_completion:\n          type: number\n          description: bitmask indicating which tutorials have been completed\n          example: 1\n        jwt:\n          type: string\n          description: json web token to be used as bearer token in API requests\n      required:\n        - user_sid\n        - provider\n        - name\n        - email\n        - scope\n        - account_validated\n        - pristine\n        - jwt\n        - is_active\n    Charge:\n      type: object\n      properties:\n        charge_sid:\n          type: string\n          format: uuid\n        account_sid:\n          type: string\n          format: uuid\n        application_sid:\n          type: string\n          format: uuid\n        billed_at:\n          type: string\n          format: date-time\n        billed_activity:\n          type: string\n          enum:\n            - inbound-call\n            - outbound-call\n            - inbound-sms\n            - outbound-sms\n            - inbound-mms\n            - outbound-mms\n            - tts\n            - stt\n        call_billing_record_sid:\n          type: string\n          format: uuid\n        message_record_sid:\n          type: string\n          format: uuid\n        call_secs_billed:\n          type: number\n          format: integer\n        tts_chars_billed:\n          type: number\n          format: integer\n        stt_secs_billed:\n          type: number\n          format: integer\n        amount_charged:\n          type: number\n          format: double\n      required:\n        - account_sid\n        - billed_activity\n        - amount_charged\n    RecentCalls:\n      type: object\n      properties:\n        account_sid:\n          type: string\n          format: uuid\n        call_sid:\n          type: string\n          format: uuid\n        from:\n          type: string\n        to: \n          type: string\n        answered:\n          type: boolean\n        sip_call_id:\n          type: string\n        sip_status:\n          type: number\n          format: integer\n        duration:\n          type: number\n          format: integer\n        attempted_at:\n          type: number\n          format: integer\n        answered_at:\n          type: number\n          format: integer\n        terminated_at:\n          type: number\n          format: integer\n        termination_reason:\n          type: string\n        host:\n          type: string\n        remote_host:\n          type: string\n        direction:\n          type: string\n          enum:\n            - inbound\n            - outbound\n        trunk:\n          type: string\n      required:\n        - account_sid\n        - call_sid\n        - attempted_at\n        - terminated_at\n        - answered\n        - direction\n        - from \n        - to\n        - sip_status\n        - duration\n    Alert:\n      type: object\n      properties:\n        alert_sid:\n          type: string\n          format: uuid\n        call_sid:\n          type: string\n          format: uuid\n        account_sid:\n          type: string\n          format: uuid\n        application_sid:\n          type: string\n          format: uuid\n        occurred_at:\n          type: string\n          format: date-time\n        alert_type:\n          type: string\n          enum:\n          - webhook-failed\n          - bad-application-syntax\n          - speech-operation-failed\n          - limit-exceeded\n        details:\n          type: string\n      required:\n        - alert_sid\n        - account_sid\n        - occurred_at\n        - alert_type\n    Product:\n      type: object\n      properties:\n        product_sid:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        unit_label:\n          type: string\n        category:\n          type: string\n      required:\n        - product_sid\n        - name\n        - unit_label\n        - category\n    PredefinedCarrier:\n      type: object\n      properties:\n        predefined_carrier_sid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        requires_static_ip:\n          type: boolean\n        e164_leading_plus:\n          type: boolean\n        requires_register:\n          type: boolean\n        register_username:\n          type: string\n        register_sip_realm:\n          type: string\n        register_password:\n          type: string\n        register_from_user:\n          type: string\n        register_from_domain:\n          type: string\n        register_public_ip_in_contact:\n          type: boolean\n        tech_prefix:\n          type: string\n        inbound_auth_username:\n          type: string\n        inbound_auth_password:\n          type: string\n        diversion:\n          type: string\n      required:\n        - predefined_carrier_sid\n        - name\n        - requires_static_ip\n        - e164_leading_plus\n        - requires_register\n    Limits:\n      type: object\n      properties:\n        category:\n          type: string\n          enum:\n            - voice_call_session\n            - api_limit\n            - devices\n\nsecurity:\n  - bearerAuth: []",
			"canonicalURL": "/github.com/jambonz/jambonz-api-server@e75eae4e245cf72d4e262bfb92eb789fc9688ea6/-/blob/lib/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jambonz/jambonz-api-server/blob/e75eae4e245cf72d4e262bfb92eb789fc9688ea6/lib/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/Accounts/{AccountSid}/RecentCalls\": parameters: parse parameter \"answered\": parse schema: at lib/swagger/swagger.yaml:2803:13: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}