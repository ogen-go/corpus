{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/weisurya/go-openapi-converter"
		},
		"file": {
			"name": "sample.v1.yaml",
			"size": 0,
			"path": "sample.v1.yaml",
			"byteSize": 5719,
			"content": "openapi: 3.0.0\ninfo:\n  title: Sample OpenAPI v3 Spec\n  version: '1.0'\n  description: This is a sample OpenAPI v3 spec. Created by using stoplight.io\n  contact:\n    name: Soen Surya Soenaryo\n    url: 'https://soensurya.com/'\n    email: wei.surya@gmail.com\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\nservers:\n  - url: 'http://localhost:3000'\n    description: local server\n  - url: 'http://mock-server:3000'\n    description: mock server\n  - url: 'http://production-server:3000'\n    description: production server\npaths:\n  '/sample/ref/{id}':\n    get:\n      summary: Retrieve data\n      tags:\n        - ref\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sample.response'\n      operationId: get-sample-ref\n      security:\n        - api-key: []\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: additional-header\n        - schema:\n            type: string\n          in: query\n          name: class\n      requestBody: {}\n      description: Retrieve data\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n        description: Unique ID\n    post:\n      summary: Create data\n      operationId: post-sample-ref\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sample.response'\n      description: Create data\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sample.request'\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: additional-header\n      tags:\n        - ref\n    patch:\n      summary: Update data\n      operationId: patch-sample-ref-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sample.response'\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sample.request'\n      description: Update data\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: additional-header\n      tags:\n        - ref\n    delete:\n      summary: Delete data\n      operationId: delete-sample-ref-id\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sample.response'\n      security:\n        - api-key: []\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: additional-header\n      tags:\n        - ref\n  /sample/simple:\n    post:\n      summary: Create simple data\n      operationId: post-sample-simple\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                    description: Unique ID\n                  created_at:\n                    type: string\n                    description: Datetime of when data created\n                  updated_at:\n                    type: string\n                    description: Datetime of when data last updated\n                required:\n                  - id\n                  - created_at\n                  - updated_at\n      tags:\n        - simple\n      description: Create simple data\n      security:\n        - api-key: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                  description: Unique ID\ncomponents:\n  schemas:\n    sample.request:\n      title: sample.request\n      type: object\n      properties:\n        amount:\n          type: number\n          default: 100\n          description: Amount\n        context:\n          type: array\n          description: Context in array\n          items:\n            type: string\n        class:\n          type: string\n          enum:\n            - LOW\n            - MEDIUM\n            - HIGH\n          description: Type of class\n        description:\n          type: string\n          description: Description\n    sample.response:\n      title: sample.response\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID\n        amount:\n          type: number\n          description: Amount\n        context:\n          type: array\n          description: Context in array\n          items:\n            type: string\n        class:\n          type: string\n          enum:\n            - LOW\n            - MEDIUM\n            - HIGH\n          description: Type of class\n        description:\n          type: string\n          description: Description\n        created_at:\n          type: string\n          format: date-time\n          description: Datetime of when data created\n        updated_at:\n          type: string\n          format: date-time\n          description: Datetime of when data last updated\n      required:\n        - id\n        - amount\n        - context\n        - class\n        - description\n        - created_at\n        - updated_at\n  securitySchemes:\n    api-key:\n      name: API key that located in header\n      type: apiKey\n      in: header\nsecurity:\n  - api-key: []\n",
			"canonicalURL": "/github.com/weisurya/go-openapi-converter@e3d98aaa9c23ba58fed703de0262da226d0b545f/-/blob/sample.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/weisurya/go-openapi-converter/blob/e3d98aaa9c23ba58fed703de0262da226d0b545f/sample.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/sample/ref/{id}\": get: operation \"get-sample-ref\": requestBody: at 1:2109: content must have at least one entry"
}