{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/memorydb/2021-01-01/openapi.yaml",
			"byteSize": 177471,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2021-01-01'\n  x-release: v4\n  title: Amazon MemoryDB\n  description: 'MemoryDB for Redis is a fully managed, Redis-compatible, in-memory database that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures. MemoryDB stores the entire database in-memory, enabling low latency and high throughput data access. It is compatible with Redis, a popular open source data store, enabling you to leverage Redisâ€™ flexible and friendly data structures, APIs, and commands.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: memorydb\n  x-aws-signingName: memorydb\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/memorydb-2021-01-01.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/memory-db/'\nservers:\n  - url: 'http://memory-db.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon MemoryDB multi-region endpoint\n  - url: 'https://memory-db.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Amazon MemoryDB multi-region endpoint\n  - url: 'http://memory-db.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon MemoryDB endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://memory-db.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon MemoryDB endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=AmazonMemoryDB.BatchUpdateCluster:\n    post:\n      operationId: BatchUpdateCluster\n      description: 'Apply the service update to a list of clusters supplied. For more information on service updates and applying them, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/managing-updates.html#applying-updates\"\u003eApplying the service updates\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchUpdateClusterResponse'\n        '480':\n          description: ServiceUpdateNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceUpdateNotFoundFault'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchUpdateClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.BatchUpdateCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CopySnapshot:\n    post:\n      operationId: CopySnapshot\n      description: Makes a copy of an existing snapshot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CopySnapshotResponse'\n        '480':\n          description: SnapshotAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'\n        '481':\n          description: SnapshotNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotNotFoundFault'\n        '482':\n          description: SnapshotQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n        '483':\n          description: InvalidSnapshotStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidSnapshotStateFault'\n        '484':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '485':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '486':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '487':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CopySnapshotRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CopySnapshot\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CreateACL:\n    post:\n      operationId: CreateACL\n      description: 'Creates an Access Control List. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html\"\u003eAuthenticating users with Access Contol Lists (ACLs)\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateACLResponse'\n        '480':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '481':\n          description: DuplicateUserNameFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuplicateUserNameFault'\n        '482':\n          description: ACLAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLAlreadyExistsFault'\n        '483':\n          description: DefaultUserRequired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultUserRequired'\n        '484':\n          description: ACLQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLQuotaExceededFault'\n        '485':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '486':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateACLRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CreateACL\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CreateCluster:\n    post:\n      operationId: CreateCluster\n      description: Creates a cluster. All nodes in the cluster run the same protocol-compliant engine software.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateClusterResponse'\n        '480':\n          description: ClusterAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterAlreadyExistsFault'\n        '481':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '482':\n          description: ClusterQuotaForCustomerExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'\n        '483':\n          description: NodeQuotaForClusterExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'\n        '484':\n          description: NodeQuotaForCustomerExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'\n        '485':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '486':\n          description: InsufficientClusterCapacityFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InsufficientClusterCapacityFault'\n        '487':\n          description: InvalidVPCNetworkStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '488':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '489':\n          description: ShardsPerClusterQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShardsPerClusterQuotaExceededFault'\n        '490':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '491':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '492':\n          description: InvalidCredentialsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidCredentialsException'\n        '493':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n        '494':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n        '495':\n          description: InvalidACLStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidACLStateFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CreateCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CreateParameterGroup:\n    post:\n      operationId: CreateParameterGroup\n      description: 'Creates a new MemoryDB parameter group. A parameter group is a collection of parameters and their values that are applied to all of the nodes in any cluster. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/parametergroups.html\"\u003eConfiguring engine parameters using parameter groups\u003c/a\u003e. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateParameterGroupResponse'\n        '480':\n          description: ParameterGroupQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupQuotaExceededFault'\n        '481':\n          description: ParameterGroupAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupAlreadyExistsFault'\n        '482':\n          description: InvalidParameterGroupStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterGroupStateFault'\n        '483':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '484':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n        '485':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '486':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateParameterGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CreateParameterGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CreateSnapshot:\n    post:\n      operationId: CreateSnapshot\n      description: Creates a copy of an entire cluster at a specific moment in time.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSnapshotResponse'\n        '480':\n          description: SnapshotAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'\n        '481':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '482':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '483':\n          description: SnapshotQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotQuotaExceededFault'\n        '484':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '485':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '486':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '487':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSnapshotRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CreateSnapshot\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CreateSubnetGroup:\n    post:\n      operationId: CreateSubnetGroup\n      description: 'Creates a subnet group. A subnet group is a collection of subnets (typically private) that you can designate for your clusters running in an Amazon Virtual Private Cloud (VPC) environment. When you create a cluster in an Amazon VPC, you must specify a subnet group. MemoryDB uses that subnet group to choose a subnet and IP addresses within that subnet to associate with your nodes. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/subnetgroups.html\"\u003eSubnets and subnet groups\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSubnetGroupResponse'\n        '480':\n          description: SubnetGroupAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupAlreadyExistsFault'\n        '481':\n          description: SubnetGroupQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupQuotaExceededFault'\n        '482':\n          description: SubnetQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetQuotaExceededFault'\n        '483':\n          description: InvalidSubnet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '484':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '485':\n          description: SubnetNotAllowedFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetNotAllowedFault'\n        '486':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubnetGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CreateSubnetGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.CreateUser:\n    post:\n      operationId: CreateUser\n      description: 'Creates a MemoryDB user. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html\"\u003eAuthenticating users with Access Contol Lists (ACLs)\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUserResponse'\n        '480':\n          description: UserAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserAlreadyExistsFault'\n        '481':\n          description: UserQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserQuotaExceededFault'\n        '482':\n          description: DuplicateUserNameFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuplicateUserNameFault'\n        '483':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '484':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '485':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.CreateUser\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DeleteACL:\n    post:\n      operationId: DeleteACL\n      description: 'Deletes an Access Control List. The ACL must first be disassociated from the cluster before it can be deleted. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/clusters.acls.html\"\u003eAuthenticating users with Access Contol Lists (ACLs)\u003c/a\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteACLResponse'\n        '480':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n        '481':\n          description: InvalidACLStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidACLStateFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteACLRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DeleteACL\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DeleteCluster:\n    post:\n      operationId: DeleteCluster\n      description: Deletes a cluster. It also deletes all associated nodes and node endpoints\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteClusterResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '482':\n          description: SnapshotAlreadyExistsFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotAlreadyExistsFault'\n        '483':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '484':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '485':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DeleteCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DeleteParameterGroup:\n    post:\n      operationId: DeleteParameterGroup\n      description: Deletes the specified parameter group. You cannot delete a parameter group if it is associated with any clusters. You cannot delete the default parameter groups in your account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteParameterGroupResponse'\n        '480':\n          description: InvalidParameterGroupStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterGroupStateFault'\n        '481':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '482':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '483':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '484':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteParameterGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DeleteParameterGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DeleteSnapshot:\n    post:\n      operationId: DeleteSnapshot\n      description: 'Deletes an existing snapshot. When you receive a successful response from this operation, MemoryDB immediately begins deleting the snapshot; you cannot cancel or revert this operation.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSnapshotResponse'\n        '480':\n          description: SnapshotNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotNotFoundFault'\n        '481':\n          description: InvalidSnapshotStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidSnapshotStateFault'\n        '482':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '483':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '484':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSnapshotRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DeleteSnapshot\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DeleteSubnetGroup:\n    post:\n      operationId: DeleteSubnetGroup\n      description: Deletes a subnet group. You cannot delete a default subnet group or one that is associated with any clusters.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSubnetGroupResponse'\n        '480':\n          description: SubnetGroupInUseFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupInUseFault'\n        '481':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '482':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSubnetGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DeleteSubnetGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DeleteUser:\n    post:\n      operationId: DeleteUser\n      description: Deletes a user. The user will be removed from all ACLs and in turn removed from all clusters.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteUserResponse'\n        '480':\n          description: InvalidUserStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidUserStateFault'\n        '481':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteUserRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DeleteUser\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeACLs:\n    post:\n      operationId: DescribeACLs\n      description: Returns a list of ACLs\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeACLsResponse'\n        '480':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n        '481':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeACLsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeACLs\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeClusters:\n    post:\n      operationId: DescribeClusters\n      description: 'Returns information about all provisioned clusters if no cluster identifier is specified, or about a specific cluster if a cluster name is supplied.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeClustersResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeClustersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeClusters\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeEngineVersions:\n    post:\n      operationId: DescribeEngineVersions\n      description: Returns a list of the available Redis engine versions.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeEngineVersionsResponse'\n        '480':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeEngineVersionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeEngineVersions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeEvents:\n    post:\n      operationId: DescribeEvents\n      description: 'Returns events related to clusters, security groups, and parameter groups. You can obtain events specific to a particular cluster, security group, or parameter group by providing the name as a parameter. By default, only the events occurring within the last hour are returned; however, you can retrieve up to 14 days'' worth of events if necessary.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeEventsResponse'\n        '480':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeEventsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeEvents\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeParameterGroups:\n    post:\n      operationId: DescribeParameterGroups\n      description: 'Returns a list of parameter group descriptions. If a parameter group name is specified, the list contains only the descriptions for that group.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeParameterGroupsResponse'\n        '480':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '481':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeParameterGroupsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeParameterGroups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeParameters:\n    post:\n      operationId: DescribeParameters\n      description: Returns the detailed parameter list for a particular parameter group.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeParametersResponse'\n        '480':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '481':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeParametersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeParameters\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeServiceUpdates:\n    post:\n      operationId: DescribeServiceUpdates\n      description: Returns details of the service updates\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeServiceUpdatesResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeServiceUpdatesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeServiceUpdates\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeSnapshots:\n    post:\n      operationId: DescribeSnapshots\n      description: 'Returns information about cluster snapshots. By default, DescribeSnapshots lists all of your snapshots; it can optionally describe a single snapshot, or just the snapshots associated with a particular cluster.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSnapshotsResponse'\n        '480':\n          description: SnapshotNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotNotFoundFault'\n        '481':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeSnapshotsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeSnapshots\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeSubnetGroups:\n    post:\n      operationId: DescribeSubnetGroups\n      description: 'Returns a list of subnet group descriptions. If a subnet group name is specified, the list contains only the description of that group.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSubnetGroupsResponse'\n        '480':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '481':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeSubnetGroupsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeSubnetGroups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.DescribeUsers:\n    post:\n      operationId: DescribeUsers\n      description: Returns a list of users.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeUsersResponse'\n        '480':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '481':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeUsersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.DescribeUsers\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.FailoverShard:\n    post:\n      operationId: FailoverShard\n      description: Used to failover a shard\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FailoverShardResponse'\n        '480':\n          description: APICallRateForCustomerExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICallRateForCustomerExceededFault'\n        '481':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '482':\n          description: ShardNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShardNotFoundFault'\n        '483':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '484':\n          description: TestFailoverNotAvailableFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestFailoverNotAvailableFault'\n        '485':\n          description: InvalidKMSKeyFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidKMSKeyFault'\n        '486':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '487':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FailoverShardRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.FailoverShard\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.ListAllowedNodeTypeUpdates:\n    post:\n      operationId: ListAllowedNodeTypeUpdates\n      description: 'Lists all available node types that you can scale to from your cluster''s current node type. When you use the UpdateCluster operation to scale your cluster, the value of the NodeType parameter must be one of the node types returned by this operation.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAllowedNodeTypeUpdatesResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '482':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n        '483':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListAllowedNodeTypeUpdatesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.ListAllowedNodeTypeUpdates\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.ListTags:\n    post:\n      operationId: ListTags\n      description: 'Lists all tags currently on a named resource. A tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track your MemoryDB resources. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/Tagging-Resources.html\"\u003eTagging your MemoryDB resources\u003c/a\u003e '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '482':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '483':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '484':\n          description: SnapshotNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotNotFoundFault'\n        '485':\n          description: InvalidARNFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidARNFault'\n        '486':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '487':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '488':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.ListTags\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.ResetParameterGroup:\n    post:\n      operationId: ResetParameterGroup\n      description: 'Modifies the parameters of a parameter group to the engine or system default value. You can reset specific parameters by submitting a list of parameter names. To reset the entire parameter group, specify the AllParameters and ParameterGroupName parameters.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetParameterGroupResponse'\n        '480':\n          description: InvalidParameterGroupStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterGroupStateFault'\n        '481':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '482':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '483':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '484':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetParameterGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.ResetParameterGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.TagResource:\n    post:\n      operationId: TagResource\n      description: '\u003cp\u003eA tag is a key-value pair where the key and value are case-sensitive. You can use tags to categorize and track all your MemoryDB resources. When you add or remove tags on clusters, those actions will be replicated to all nodes in the cluster. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/iam.resourcelevelpermissions.html\"\u003eResource-level permissions\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor example, you can use cost-allocation tags to your MemoryDB resources, Amazon generates a cost allocation report as a comma-separated value (CSV) file with your usage and costs aggregated by your tags. You can apply tags that represent business categories (such as cost centers, application names, or owners) to organize your costs across multiple services. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging.html\"\u003eUsing Cost Allocation Tags\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '482':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '483':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '484':\n          description: SnapshotNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotNotFoundFault'\n        '485':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '486':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n        '487':\n          description: TagQuotaPerResourceExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagQuotaPerResourceExceeded'\n        '488':\n          description: InvalidARNFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidARNFault'\n        '489':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.TagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Use this operation to remove tags on a resource\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '482':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '483':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '484':\n          description: SnapshotNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotNotFoundFault'\n        '485':\n          description: InvalidARNFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidARNFault'\n        '486':\n          description: TagNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagNotFoundFault'\n        '487':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '488':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '489':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UntagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.UntagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.UpdateACL:\n    post:\n      operationId: UpdateACL\n      description: Changes the list of users that belong to the Access Control List.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateACLResponse'\n        '480':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n        '481':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '482':\n          description: DuplicateUserNameFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuplicateUserNameFault'\n        '483':\n          description: DefaultUserRequired\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultUserRequired'\n        '484':\n          description: InvalidACLStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidACLStateFault'\n        '485':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '486':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateACLRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.UpdateACL\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.UpdateCluster:\n    post:\n      operationId: UpdateCluster\n      description: Modifies the settings for a cluster. You can use this operation to change one or more cluster configuration settings by specifying the settings and the new values.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateClusterResponse'\n        '480':\n          description: ClusterNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterNotFoundFault'\n        '481':\n          description: InvalidClusterStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClusterStateFault'\n        '482':\n          description: InvalidNodeStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNodeStateFault'\n        '483':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '484':\n          description: InvalidVPCNetworkStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidVPCNetworkStateFault'\n        '485':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '486':\n          description: InvalidKMSKeyFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidKMSKeyFault'\n        '487':\n          description: NodeQuotaForClusterExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NodeQuotaForClusterExceededFault'\n        '488':\n          description: ClusterQuotaForCustomerExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterQuotaForCustomerExceededFault'\n        '489':\n          description: ShardsPerClusterQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShardsPerClusterQuotaExceededFault'\n        '490':\n          description: NodeQuotaForCustomerExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NodeQuotaForCustomerExceededFault'\n        '491':\n          description: NoOperationFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoOperationFault'\n        '492':\n          description: InvalidACLStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidACLStateFault'\n        '493':\n          description: ACLNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ACLNotFoundFault'\n        '494':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '495':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateClusterRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.UpdateCluster\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.UpdateParameterGroup:\n    post:\n      operationId: UpdateParameterGroup\n      description: Updates the parameters of a parameter group. You can modify up to 20 parameters in a single request by submitting a list parameter name and value pairs.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateParameterGroupResponse'\n        '480':\n          description: ParameterGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ParameterGroupNotFoundFault'\n        '481':\n          description: InvalidParameterGroupStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterGroupStateFault'\n        '482':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '483':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '484':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateParameterGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.UpdateParameterGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.UpdateSubnetGroup:\n    post:\n      operationId: UpdateSubnetGroup\n      description: 'Updates a subnet group. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/ubnetGroups.Modifying.html\"\u003eUpdating a subnet group\u003c/a\u003e '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateSubnetGroupResponse'\n        '480':\n          description: SubnetGroupNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetGroupNotFoundFault'\n        '481':\n          description: SubnetQuotaExceededFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetQuotaExceededFault'\n        '482':\n          description: SubnetInUse\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetInUse'\n        '483':\n          description: InvalidSubnet\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidSubnet'\n        '484':\n          description: ServiceLinkedRoleNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceLinkedRoleNotFoundFault'\n        '485':\n          description: SubnetNotAllowedFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubnetNotAllowedFault'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSubnetGroupRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.UpdateSubnetGroup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AmazonMemoryDB.UpdateUser:\n    post:\n      operationId: UpdateUser\n      description: Changes user password(s) and/or access string.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateUserResponse'\n        '480':\n          description: UserNotFoundFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserNotFoundFault'\n        '481':\n          description: InvalidUserStateFault\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidUserStateFault'\n        '482':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '483':\n          description: InvalidParameterCombinationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterCombinationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AmazonMemoryDB.UpdateUser\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchUpdateClusterResponse:\n      type: object\n      properties:\n        ProcessedClusters:\n          allOf:\n            - $ref: '#/components/schemas/ClusterList'\n            - description: The list of clusters that have been updated.\n        UnprocessedClusters:\n          allOf:\n            - $ref: '#/components/schemas/UnprocessedClusterList'\n            - description: The list of clusters where updates have not been applied.\n    BatchUpdateClusterRequest:\n      type: object\n      required:\n        - ClusterNames\n      title: BatchUpdateClusterRequest\n      properties:\n        ClusterNames:\n          allOf:\n            - $ref: '#/components/schemas/ClusterNameList'\n            - description: The cluster names to apply the updates.\n        ServiceUpdate:\n          allOf:\n            - $ref: '#/components/schemas/ServiceUpdateRequest'\n            - description: The unique ID of the service update\n    ServiceUpdateNotFoundFault: {}\n    InvalidParameterValueException: {}\n    CopySnapshotResponse:\n      type: object\n      properties:\n        Snapshot:\n          allOf:\n            - $ref: '#/components/schemas/Snapshot'\n            - description: Represents a copy of an entire cluster as of the time when the snapshot was taken.\n    CopySnapshotRequest:\n      type: object\n      required:\n        - SourceSnapshotName\n        - TargetSnapshotName\n      title: CopySnapshotRequest\n      properties:\n        SourceSnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of an existing snapshot from which to make a copy.\n        TargetSnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A name for the snapshot copy. MemoryDB does not permit overwriting a snapshot, therefore this name must be unique within its context - MemoryDB or an Amazon S3 bucket if exporting.'\n        TargetBucket:\n          allOf:\n            - $ref: '#/components/schemas/TargetBucket'\n            - description: 'The Amazon S3 bucket to which the snapshot is exported. This parameter is used only when exporting a snapshot for external access. When using this parameter to export a snapshot, be sure MemoryDB has the needed permissions to this S3 bucket. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/snapshots-exporting.html\"\u003eStep 2: Grant MemoryDB Access to Your Amazon S3 Bucket\u003c/a\u003e. '\n        KmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/KmsKeyId'\n            - description: The ID of the KMS key used to encrypt the target snapshot.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    SnapshotAlreadyExistsFault: {}\n    SnapshotNotFoundFault: {}\n    SnapshotQuotaExceededFault: {}\n    InvalidSnapshotStateFault: {}\n    ServiceLinkedRoleNotFoundFault: {}\n    InvalidParameterCombinationException: {}\n    TagQuotaPerResourceExceeded: {}\n    CreateACLResponse:\n      type: object\n      properties:\n        ACL:\n          allOf:\n            - $ref: '#/components/schemas/ACL'\n            - description: The newly-created Access Control List.\n    CreateACLRequest:\n      type: object\n      required:\n        - ACLName\n      title: CreateACLRequest\n      properties:\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the Access Control List.\n        UserNames:\n          allOf:\n            - $ref: '#/components/schemas/UserNameListInput'\n            - description: The list of users that belong to the Access Control List.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    UserNotFoundFault: {}\n    DuplicateUserNameFault: {}\n    ACLAlreadyExistsFault: {}\n    DefaultUserRequired: {}\n    ACLQuotaExceededFault: {}\n    CreateClusterResponse:\n      type: object\n      properties:\n        Cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: The newly-created cluster.\n    CreateClusterRequest:\n      type: object\n      required:\n        - ClusterName\n        - NodeType\n        - ACLName\n      title: CreateClusterRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster. This value must be unique as it also serves as the cluster identifier.\n        NodeType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The compute and memory capacity of the nodes in the cluster.\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group associated with the cluster.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: An optional description of the cluster.\n        NumShards:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The number of shards the cluster will contain. The default value is 1. '\n        NumReplicasPerShard:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The number of replicas to apply to each shard. The default value is 1. The maximum is 5. '\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group to be used for the cluster.\n        SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIdsList'\n            - description: A list of security group names to associate with this cluster.\n        MaintenanceWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format \u003ccode\u003eddd:hh24:mi-ddd:hh24:mi\u003c/code\u003e (24H Clock UTC). The minimum maintenance window is a 60 minute period.'\n        Port:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The port number on which each of the nodes accepts connections.\n        SnsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.\n        TLSEnabled:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: A flag to enable in-transit encryption on the cluster.\n        KmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the KMS key used to encrypt the cluster.\n        SnapshotArns:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotArnsList'\n            - description: A list of Amazon Resource Names (ARN) that uniquely identify the RDB snapshot files stored in Amazon S3. The snapshot files are used to populate the new cluster. The Amazon S3 object name in the ARN cannot contain any commas.\n        SnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of a snapshot from which to restore data into the new cluster. The snapshot status changes to restoring while the new cluster is being created.\n        SnapshotRetentionLimit:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The number of days for which MemoryDB retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. Tags are comma-separated key,value pairs (e.g. Key=myKey, Value=myKeyValue. You can include multiple tags as shown following: Key=myKey, Value=myKeyValue Key=mySecondKey, Value=mySecondKeyValue.'\n        SnapshotWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eThe daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard.\u003c/p\u003e \u003cp\u003e Example: 05:00-09:00\u003c/p\u003e \u003cp\u003e If you do not specify this parameter, MemoryDB automatically chooses an appropriate time range.\u003c/p\u003e'\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/ACLName'\n            - description: The name of the Access Control List to associate with the cluster.\n        EngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The version number of the Redis engine to be used for the cluster.\n        AutoMinorVersionUpgrade:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: 'When set to true, the cluster will automatically receive minor engine version upgrades after launch.'\n    ClusterAlreadyExistsFault: {}\n    SubnetGroupNotFoundFault: {}\n    ClusterQuotaForCustomerExceededFault: {}\n    NodeQuotaForClusterExceededFault: {}\n    NodeQuotaForCustomerExceededFault: {}\n    ParameterGroupNotFoundFault: {}\n    InsufficientClusterCapacityFault: {}\n    InvalidVPCNetworkStateFault: {}\n    ShardsPerClusterQuotaExceededFault: {}\n    InvalidCredentialsException: {}\n    ACLNotFoundFault: {}\n    InvalidACLStateFault: {}\n    CreateParameterGroupResponse:\n      type: object\n      properties:\n        ParameterGroup:\n          allOf:\n            - $ref: '#/components/schemas/ParameterGroup'\n            - description: The newly-created parameter group.\n    CreateParameterGroupRequest:\n      type: object\n      required:\n        - ParameterGroupName\n        - Family\n      title: CreateParameterGroupRequest\n      properties:\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group.\n        Family:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group family that the parameter group can be used with.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: An optional description of the parameter group.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    ParameterGroupQuotaExceededFault: {}\n    ParameterGroupAlreadyExistsFault: {}\n    InvalidParameterGroupStateFault: {}\n    CreateSnapshotResponse:\n      type: object\n      properties:\n        Snapshot:\n          allOf:\n            - $ref: '#/components/schemas/Snapshot'\n            - description: The newly-created snapshot.\n    CreateSnapshotRequest:\n      type: object\n      required:\n        - ClusterName\n        - SnapshotName\n      title: CreateSnapshotRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The snapshot is created from this cluster.\n        SnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A name for the snapshot being created.\n        KmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the KMS key used to encrypt the snapshot.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    ClusterNotFoundFault: {}\n    InvalidClusterStateFault: {}\n    CreateSubnetGroupResponse:\n      type: object\n      properties:\n        SubnetGroup:\n          allOf:\n            - $ref: '#/components/schemas/SubnetGroup'\n            - description: The newly-created subnet group\n    CreateSubnetGroupRequest:\n      type: object\n      required:\n        - SubnetGroupName\n        - SubnetIds\n      title: CreateSubnetGroupRequest\n      properties:\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description for the subnet group.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIdentifierList'\n            - description: A list of VPC subnet IDs for the subnet group.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    SubnetGroupAlreadyExistsFault: {}\n    SubnetGroupQuotaExceededFault: {}\n    SubnetQuotaExceededFault: {}\n    InvalidSubnet: {}\n    SubnetNotAllowedFault: {}\n    CreateUserResponse:\n      type: object\n      properties:\n        User:\n          allOf:\n            - $ref: '#/components/schemas/User'\n            - description: The newly-created user.\n    CreateUserRequest:\n      type: object\n      required:\n        - UserName\n        - AuthenticationMode\n        - AccessString\n      title: CreateUserRequest\n      properties:\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: The name of the user. This value must be unique as it also serves as the user identifier.\n        AuthenticationMode:\n          allOf:\n            - $ref: '#/components/schemas/AuthenticationMode'\n            - description: 'Denotes the user''s authentication properties, such as whether it requires a password to authenticate.'\n        AccessString:\n          allOf:\n            - $ref: '#/components/schemas/AccessString'\n            - description: Access permissions string used for this user.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    UserAlreadyExistsFault: {}\n    UserQuotaExceededFault: {}\n    DeleteACLResponse:\n      type: object\n      properties:\n        ACL:\n          allOf:\n            - $ref: '#/components/schemas/ACL'\n            - description: The Access Control List object that has been deleted.\n    DeleteACLRequest:\n      type: object\n      required:\n        - ACLName\n      title: DeleteACLRequest\n      properties:\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the Access Control List to delete\n    DeleteClusterResponse:\n      type: object\n      properties:\n        Cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: The cluster object that has been deleted\n    DeleteClusterRequest:\n      type: object\n      required:\n        - ClusterName\n      title: DeleteClusterRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster to be deleted\n        FinalSnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The user-supplied name of a final cluster snapshot. This is the unique name that identifies the snapshot. MemoryDB creates the snapshot, and then deletes the cluster immediately afterward.'\n    DeleteParameterGroupResponse:\n      type: object\n      properties:\n        ParameterGroup:\n          allOf:\n            - $ref: '#/components/schemas/ParameterGroup'\n            - description: The parameter group that has been deleted.\n    DeleteParameterGroupRequest:\n      type: object\n      required:\n        - ParameterGroupName\n      title: DeleteParameterGroupRequest\n      properties:\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group to delete.\n    DeleteSnapshotResponse:\n      type: object\n      properties:\n        Snapshot:\n          allOf:\n            - $ref: '#/components/schemas/Snapshot'\n            - description: The snapshot object that has been deleted.\n    DeleteSnapshotRequest:\n      type: object\n      required:\n        - SnapshotName\n      title: DeleteSnapshotRequest\n      properties:\n        SnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the snapshot to delete\n    DeleteSubnetGroupResponse:\n      type: object\n      properties:\n        SubnetGroup:\n          allOf:\n            - $ref: '#/components/schemas/SubnetGroup'\n            - description: The subnet group object that has been deleted.\n    DeleteSubnetGroupRequest:\n      type: object\n      required:\n        - SubnetGroupName\n      title: DeleteSubnetGroupRequest\n      properties:\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group to delete\n    SubnetGroupInUseFault: {}\n    DeleteUserResponse:\n      type: object\n      properties:\n        User:\n          allOf:\n            - $ref: '#/components/schemas/User'\n            - description: The user object that has been deleted.\n    DeleteUserRequest:\n      type: object\n      required:\n        - UserName\n      title: DeleteUserRequest\n      properties:\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: The name of the user to delete\n    InvalidUserStateFault: {}\n    DescribeACLsResponse:\n      type: object\n      properties:\n        ACLs:\n          allOf:\n            - $ref: '#/components/schemas/ACLList'\n            - description: The list of ACLs\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeACLsRequest:\n      type: object\n      title: DescribeACLsRequest\n      properties:\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the ACL\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeClustersResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        Clusters:\n          allOf:\n            - $ref: '#/components/schemas/ClusterList'\n            - description: A list of clusters\n    DescribeClustersRequest:\n      type: object\n      title: DescribeClustersRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        ShowShardDetails:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: An optional flag that can be included in the request to retrieve information about the individual shard(s).\n    DescribeEngineVersionsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        EngineVersions:\n          allOf:\n            - $ref: '#/components/schemas/EngineVersionInfoList'\n            - description: A list of engine version details. Each element in the list contains detailed information about one engine version.\n    DescribeEngineVersionsRequest:\n      type: object\n      title: DescribeEngineVersionsRequest\n      properties:\n        EngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Redis engine version\n        ParameterGroupFamily:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of a specific parameter group family to return details for.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        DefaultOnly:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'If true, specifies that only the default version of the specified engine or engine and major version combination is to be returned.'\n    DescribeEventsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        Events:\n          allOf:\n            - $ref: '#/components/schemas/EventList'\n            - description: A list of events. Each element in the list contains detailed information about one event.\n    DescribeEventsRequest:\n      type: object\n      title: DescribeEventsRequest\n      properties:\n        SourceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The identifier of the event source for which events are returned. If not specified, all sources are included in the response.'\n        SourceType:\n          allOf:\n            - $ref: '#/components/schemas/SourceType'\n            - description: 'The event source to retrieve events for. If no value is specified, all events are returned.'\n        StartTime:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: 'The beginning of the time interval to retrieve events for, specified in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z'\n        EndTime:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: 'The end of the time interval for which to retrieve events, specified in ISO 8601 format. Example: 2017-03-30T07:03:49.555Z'\n        Duration:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The number of minutes worth of events to retrieve.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeParameterGroupsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        ParameterGroups:\n          allOf:\n            - $ref: '#/components/schemas/ParameterGroupList'\n            - description: A list of parameter groups. Each element in the list contains detailed information about one parameter group.\n    DescribeParameterGroupsRequest:\n      type: object\n      title: DescribeParameterGroupsRequest\n      properties:\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of a specific parameter group to return details for.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeParametersResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/ParametersList'\n            - description: A list of parameters specific to a particular parameter group. Each element in the list contains detailed information about one parameter.\n    DescribeParametersRequest:\n      type: object\n      required:\n        - ParameterGroupName\n      title: DescribeParametersRequest\n      properties:\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: he name of a specific parameter group to return details for.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeServiceUpdatesResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        ServiceUpdates:\n          allOf:\n            - $ref: '#/components/schemas/ServiceUpdateList'\n            - description: A list of service updates\n    DescribeServiceUpdatesRequest:\n      type: object\n      title: DescribeServiceUpdatesRequest\n      properties:\n        ServiceUpdateName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The unique ID of the service update to describe.\n        ClusterNames:\n          allOf:\n            - $ref: '#/components/schemas/ClusterNameList'\n            - description: The list of cluster names to identify service updates to apply\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/ServiceUpdateStatusList'\n            - description: The status(es) of the service updates to filter on\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeSnapshotsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        Snapshots:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotList'\n            - description: A list of snapshots. Each item in the list contains detailed information about one snapshot.\n    DescribeSnapshotsRequest:\n      type: object\n      title: DescribeSnapshotsRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A user-supplied cluster identifier. If this parameter is specified, only snapshots associated with that specific cluster are described.'\n        SnapshotName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A user-supplied name of the snapshot. If this parameter is specified, only this named snapshot is described.'\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'If set to system, the output shows snapshots that were automatically created by MemoryDB. If set to user the output shows snapshots that were manually created. If omitted, the output shows both automatically and manually created snapshots.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        ShowDetail:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: 'A Boolean value which if true, the shard configuration is included in the snapshot description.'\n    DescribeSubnetGroupsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n        SubnetGroups:\n          allOf:\n            - $ref: '#/components/schemas/SubnetGroupList'\n            - description: A list of subnet groups. Each element in the list contains detailed information about one group.\n    DescribeSubnetGroupsRequest:\n      type: object\n      title: DescribeSubnetGroupsRequest\n      properties:\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group to return details for.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeUsersResponse:\n      type: object\n      properties:\n        Users:\n          allOf:\n            - $ref: '#/components/schemas/UserList'\n            - description: A list of users.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    DescribeUsersRequest:\n      type: object\n      title: DescribeUsersRequest\n      properties:\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: The name of the user\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: Filter to determine the list of users to return.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The maximum number of records to include in the response. If more records exist than the specified MaxResults value, a token is included in the response so that the remaining results can be retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'An optional argument to pass in case the total number of records exceeds the value of MaxResults. If nextToken is returned, there are more results available. The value of nextToken is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. '\n    FailoverShardResponse:\n      type: object\n      properties:\n        Cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: The cluster being failed over\n    FailoverShardRequest:\n      type: object\n      required:\n        - ClusterName\n        - ShardName\n      title: FailoverShardRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The cluster being failed over\n        ShardName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the shard\n    APICallRateForCustomerExceededFault: {}\n    ShardNotFoundFault: {}\n    TestFailoverNotAvailableFault: {}\n    InvalidKMSKeyFault: {}\n    ListAllowedNodeTypeUpdatesResponse:\n      type: object\n      properties:\n        ScaleUpNodeTypes:\n          allOf:\n            - $ref: '#/components/schemas/NodeTypeList'\n            - description: A list node types which you can use to scale up your cluster.\n        ScaleDownNodeTypes:\n          allOf:\n            - $ref: '#/components/schemas/NodeTypeList'\n            - description: A list node types which you can use to scale down your cluster.\n    ListAllowedNodeTypeUpdatesRequest:\n      type: object\n      required:\n        - ClusterName\n      title: ListAllowedNodeTypeUpdatesRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name of the cluster you want to scale. MemoryDB uses the cluster name to identify the current node type being used by this cluster, and from that to create a list of node types you can scale up to.'\n    ListTagsResponse:\n      type: object\n      properties:\n        TagList:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: A list of tags as key-value pairs.\n    ListTagsRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: ListTagsRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the resource for which you want the list of tags\n    InvalidARNFault: {}\n    ResetParameterGroupResponse:\n      type: object\n      properties:\n        ParameterGroup:\n          allOf:\n            - $ref: '#/components/schemas/ParameterGroup'\n            - description: The parameter group being reset.\n    ResetParameterGroupRequest:\n      type: object\n      required:\n        - ParameterGroupName\n      title: ResetParameterGroupRequest\n      properties:\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group to reset.\n        AllParameters:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'If true, all parameters in the parameter group are reset to their default values. If false, only the parameters listed by ParameterNames are reset to their default values.'\n        ParameterNames:\n          allOf:\n            - $ref: '#/components/schemas/ParameterNameList'\n            - description: 'An array of parameter names to reset to their default values. If AllParameters is true, do not use ParameterNames. If AllParameters is false, you must specify the name of at least one parameter to reset.'\n    TagResourceResponse:\n      type: object\n      properties:\n        TagList:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: A list of tags as key-value pairs.\n    TagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      title: TagResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the resource to which the tags are to be added\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value, although null is accepted.'\n    UntagResourceResponse:\n      type: object\n      properties:\n        TagList:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The list of tags removed\n    UntagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      title: UntagResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the resource to which the tags are to be removed\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/KeyList'\n            - description: The list of keys of the tags that are to be removed\n    TagNotFoundFault: {}\n    UpdateACLResponse:\n      type: object\n      properties:\n        ACL:\n          allOf:\n            - $ref: '#/components/schemas/ACL'\n            - description: The updated Access Control List\n    UpdateACLRequest:\n      type: object\n      required:\n        - ACLName\n      title: UpdateACLRequest\n      properties:\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the Access Control List\n        UserNamesToAdd:\n          allOf:\n            - $ref: '#/components/schemas/UserNameListInput'\n            - description: The list of users to add to the Access Control List\n        UserNamesToRemove:\n          allOf:\n            - $ref: '#/components/schemas/UserNameListInput'\n            - description: The list of users to remove from the Access Control List\n    UpdateClusterResponse:\n      type: object\n      properties:\n        Cluster:\n          allOf:\n            - $ref: '#/components/schemas/Cluster'\n            - description: The updated cluster\n    UpdateClusterRequest:\n      type: object\n      required:\n        - ClusterName\n      title: UpdateClusterRequest\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster to update\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The description of the cluster to update\n        SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIdsList'\n            - description: The SecurityGroupIds to update\n        MaintenanceWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The maintenance window to update\n        SnsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The SNS topic ARN to update\n        SnsTopicStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the Amazon SNS notification topic. Notifications are sent only if the status is active.\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group to update\n        SnapshotWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your cluster.\n        SnapshotRetentionLimit:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The number of days for which MemoryDB retains automatic cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.'\n        NodeType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A valid node type that you want to scale this cluster up or down to.\n        EngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The upgraded version of the engine to be run on the nodes. You can upgrade to a newer engine version, but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster and create it anew with the earlier engine version.'\n        ReplicaConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaConfigurationRequest'\n            - description: The number of replicas that will reside in each shard\n        ShardConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ShardConfigurationRequest'\n            - description: The number of shards in the cluster\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/ACLName'\n            - description: The Access Control List that is associated with the cluster\n    InvalidNodeStateFault: {}\n    NoOperationFault: {}\n    UpdateParameterGroupResponse:\n      type: object\n      properties:\n        ParameterGroup:\n          allOf:\n            - $ref: '#/components/schemas/ParameterGroup'\n            - description: The updated parameter group\n    UpdateParameterGroupRequest:\n      type: object\n      required:\n        - ParameterGroupName\n        - ParameterNameValues\n      title: UpdateParameterGroupRequest\n      properties:\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group to update.\n        ParameterNameValues:\n          allOf:\n            - $ref: '#/components/schemas/ParameterNameValueList'\n            - description: An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be updated per request.\n    UpdateSubnetGroupResponse:\n      type: object\n      properties:\n        SubnetGroup:\n          allOf:\n            - $ref: '#/components/schemas/SubnetGroup'\n            - description: The updated subnet group\n    UpdateSubnetGroupRequest:\n      type: object\n      required:\n        - SubnetGroupName\n      title: UpdateSubnetGroupRequest\n      properties:\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description of the subnet group\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIdentifierList'\n            - description: The EC2 subnet IDs for the subnet group.\n    SubnetInUse: {}\n    UpdateUserResponse:\n      type: object\n      properties:\n        User:\n          allOf:\n            - $ref: '#/components/schemas/User'\n            - description: The updated user\n    UpdateUserRequest:\n      type: object\n      required:\n        - UserName\n      title: UpdateUserRequest\n      properties:\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: The name of the user\n        AuthenticationMode:\n          allOf:\n            - $ref: '#/components/schemas/AuthenticationMode'\n            - description: 'Denotes the user''s authentication properties, such as whether it requires a password to authenticate.'\n        AccessString:\n          allOf:\n            - $ref: '#/components/schemas/AccessString'\n            - description: Access permissions string used for this user.\n    String:\n      type: string\n    UserNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserName'\n    ACLPendingChanges:\n      type: object\n      properties:\n        UserNamesToRemove:\n          allOf:\n            - $ref: '#/components/schemas/UserNameList'\n            - description: A list of user names being removed from the ACL\n        UserNamesToAdd:\n          allOf:\n            - $ref: '#/components/schemas/UserNameList'\n            - description: A list of users being added to the ACL\n      description: Returns the updates being applied to the ACL.\n    ACLClusterNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    ACL:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the Access Control List\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Indicates ACL status. Can be \"creating\", \"active\", \"modifying\", \"deleting\".'\n        UserNames:\n          allOf:\n            - $ref: '#/components/schemas/UserNameList'\n            - description: The list of user names that belong to the ACL.\n        MinimumEngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The minimum engine version supported for the ACL\n        PendingChanges:\n          allOf:\n            - $ref: '#/components/schemas/ACLPendingChanges'\n            - description: A list of updates being applied to the ACL.\n        Clusters:\n          allOf:\n            - $ref: '#/components/schemas/ACLClusterNameList'\n            - description: A list of clusters associated with the ACL.\n        ARN:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the ACL\n      description: An Access Control List. You can authenticate users with Access Contol Lists. ACLs enable you to control cluster access by grouping users. These Access control lists are designed as a way to organize access to clusters.\n    ACLList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ACL'\n    ACLName:\n      type: string\n      pattern: '[a-zA-Z][a-zA-Z0-9\\-]*'\n      minLength: 1\n    ACLNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ACLName'\n    ACLsUpdateStatus:\n      type: object\n      properties:\n        ACLToApply:\n          allOf:\n            - $ref: '#/components/schemas/ACLName'\n            - description: A list of ACLs pending to be applied.\n      description: The status of the ACL update\n    AZStatus:\n      type: string\n      enum:\n        - singleaz\n        - multiaz\n    AccessString:\n      type: string\n      pattern: .*\\S.*\n    AuthenticationType:\n      type: string\n      enum:\n        - password\n        - no-password\n    IntegerOptional:\n      type: integer\n    Authentication:\n      type: object\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/AuthenticationType'\n            - description: Indicates whether the user requires a password to authenticate.\n        PasswordCount:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The number of passwords belonging to the user. The maximum is two.\n      description: 'Denotes the user''s authentication properties, such as whether it requires a password to authenticate. Used in output responses.'\n    InputAuthenticationType:\n      type: string\n      enum:\n        - password\n    PasswordListInput:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n      minItems: 1\n    AuthenticationMode:\n      type: object\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/InputAuthenticationType'\n            - description: Indicates whether the user requires a password to authenticate. All newly-created users require a password.\n        Passwords:\n          allOf:\n            - $ref: '#/components/schemas/PasswordListInput'\n            - description: The password(s) used for authentication\n      description: 'Denotes the user''s authentication properties, such as whether it requires a password to authenticate. Used in output responses.'\n    AvailabilityZone:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the Availability Zone.\n      description: Indicates if the cluster has a Multi-AZ configuration (multiaz) or not (singleaz).\n    ClusterNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n      maxItems: 20\n    ServiceUpdateRequest:\n      type: object\n      properties:\n        ServiceUpdateNameToApply:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The unique ID of the service update\n      description: A request to apply a service update\n    ClusterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Cluster'\n    UnprocessedClusterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/UnprocessedCluster'\n    Boolean:\n      type: boolean\n    BooleanOptional:\n      type: boolean\n    ClusterPendingUpdates:\n      type: object\n      properties:\n        Resharding:\n          allOf:\n            - $ref: '#/components/schemas/ReshardingStatus'\n            - description: The status of an online resharding operation.\n        ACLs:\n          allOf:\n            - $ref: '#/components/schemas/ACLsUpdateStatus'\n            - description: A list of ACLs associated with the cluster that are being updated\n        ServiceUpdates:\n          allOf:\n            - $ref: '#/components/schemas/PendingModifiedServiceUpdateList'\n            - description: A list of service updates being applied to the cluster\n      description: A list of updates being applied to the cluster\n    ShardList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Shard'\n    Endpoint:\n      type: object\n      properties:\n        Address:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The DNS hostname of the node.\n        Port:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The port number that the engine is listening on.\n      description: Represents the information required for client programs to connect to the cluster and its nodes.\n    SecurityGroupMembershipList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SecurityGroupMembership'\n    Cluster:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The user-supplied name of the cluster. This identifier is a unique key that identifies a cluster.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description of the cluster\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The status of the cluster. For example, Available, Updating, Creating.'\n        PendingUpdates:\n          allOf:\n            - $ref: '#/components/schemas/ClusterPendingUpdates'\n            - description: A group of settings that are currently being applied.\n        NumberOfShards:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The number of shards in the cluster\n        Shards:\n          allOf:\n            - $ref: '#/components/schemas/ShardList'\n            - description: A list of shards that are members of the cluster.\n        AvailabilityMode:\n          allOf:\n            - $ref: '#/components/schemas/AZStatus'\n            - description: Indicates if the cluster has a Multi-AZ configuration (multiaz) or not (singleaz).\n        ClusterEndpoint:\n          allOf:\n            - $ref: '#/components/schemas/Endpoint'\n            - description: The cluster's configuration endpoint\n        NodeType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The cluster's node type\n        EngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Redis engine version used by the cluster\n        EnginePatchVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Redis engine patch version used by the cluster\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group used by the cluster\n        ParameterGroupStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The status of the parameter group used by the cluster, for example ''active'' or ''applying''.'\n        SecurityGroups:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupMembershipList'\n            - description: A list of security groups used by the cluster\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group used by the cluster\n        TLSEnabled:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: A flag to indicate if In-transit encryption is enabled\n        KmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the KMS key used to encrypt the cluster\n        ARN:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the cluster.\n        SnsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the SNS notification topic\n        SnsTopicStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The SNS topic must be in Active status to receive notifications\n        SnapshotRetentionLimit:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: 'The number of days for which MemoryDB retains automatic snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, a snapshot that was taken today is retained for 5 days before being deleted.'\n        MaintenanceWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. '\n        SnapshotWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00 If you do not specify this parameter, MemoryDB automatically chooses an appropriate time range.'\n        ACLName:\n          allOf:\n            - $ref: '#/components/schemas/ACLName'\n            - description: The name of the Access Control List associated with this cluster.\n        AutoMinorVersionUpgrade:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: 'When set to true, the cluster will automatically receive minor engine version upgrades after launch.'\n      description: Contains all of the attributes of a specific cluster.\n    ShardDetails:\n      type: array\n      items:\n        $ref: '#/components/schemas/ShardDetail'\n    ClusterConfiguration:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The description of the cluster configuration\n        NodeType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The node type used for the cluster\n        EngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Redis engine version used by the cluster\n        MaintenanceWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The specified maintenance window for the cluster\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the SNS notification topic for the cluster\n        Port:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The port used by the cluster\n        ParameterGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of parameter group used by the cluster\n        SubnetGroupName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group used by the cluster\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the VPC the cluster belongs to\n        SnapshotRetentionLimit:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The snapshot retention limit set by the cluster\n        SnapshotWindow:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The snapshot window set by the cluster\n        NumShards:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The number of shards in the cluster\n        Shards:\n          allOf:\n            - $ref: '#/components/schemas/ShardDetails'\n            - description: The list of shards in the cluster\n      description: 'A list of cluster configuration options. '\n    ReshardingStatus:\n      type: object\n      properties:\n        SlotMigration:\n          allOf:\n            - $ref: '#/components/schemas/SlotMigration'\n            - description: The status of the online resharding slot migration\n      description: The status of the online resharding\n    PendingModifiedServiceUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PendingModifiedServiceUpdate'\n    TargetBucket:\n      type: string\n      pattern: '^[A-Za-z0-9._-]+$'\n      maxLength: 255\n    KmsKeyId:\n      type: string\n      maxLength: 2048\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      maxItems: 200\n    Snapshot:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the snapshot\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The status of the snapshot. Valid values: creating | available | restoring | copying | deleting.'\n        Source:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Indicates whether the snapshot is from an automatic backup (automated) or was created manually (manual).\n        KmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ID of the KMS key used to encrypt the snapshot.\n        ARN:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN (Amazon Resource Name) of the snapshot.\n        ClusterConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ClusterConfiguration'\n            - description: The configuration of the cluster from which the snapshot was taken\n      description: Represents a copy of an entire cluster as of the time when the snapshot was taken.\n    UserNameListInput:\n      type: array\n      items:\n        $ref: '#/components/schemas/UserName'\n      minItems: 1\n    SecurityGroupIdsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    SnapshotArnsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    ParameterGroup:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group\n        Family:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter group family that this parameter group is compatible with.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description of the parameter group\n        ARN:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) of the parameter group\n      description: Represents the output of a CreateParameterGroup operation. A parameter group represents a combination of specific values for the parameters that are passed to the engine software during startup.\n    SubnetIdentifierList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    SubnetGroup:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the subnet group\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description of the subnet group\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.\n        Subnets:\n          allOf:\n            - $ref: '#/components/schemas/SubnetList'\n            - description: A list of subnets associated with the subnet group.\n        ARN:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The ARN (Amazon Resource Name) of the subnet group.\n      description: '\u003cp\u003eRepresents the output of one of the following operations:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eCreateSubnetGroup\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUpdateSubnetGroup\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eA subnet group is a collection of subnets (typically private) that you can designate for your clusters running in an Amazon Virtual Private Cloud (VPC) environment.\u003c/p\u003e'\n    UserName:\n      type: string\n      pattern: '[a-zA-Z][a-zA-Z0-9\\-]*'\n      minLength: 1\n    User:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the user\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Indicates the user status. Can be \"active\", \"modifying\" or \"deleting\".'\n        AccessString:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Access permissions string used for this user.\n        ACLNames:\n          allOf:\n            - $ref: '#/components/schemas/ACLNameList'\n            - description: The names of the Access Control Lists to which the user belongs\n        MinimumEngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The minimum engine version supported for the user\n        Authentication:\n          allOf:\n            - $ref: '#/components/schemas/Authentication'\n            - description: Denotes whether the user requires a password to authenticate.\n        ARN:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The Amazon Resource Name (ARN) of the user. '\n      description: 'You create users and assign them specific permissions by using an access string. You assign the users to Access Control Lists aligned with a specific role (administrators, human resources) that are then deployed to one or more MemoryDB clusters.'\n    EngineVersionInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EngineVersionInfo'\n    SourceType:\n      type: string\n      enum:\n        - node\n        - parameter-group\n        - subnet-group\n        - cluster\n        - user\n        - acl\n    TStamp:\n      type: string\n      format: date-time\n    EventList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Event'\n    ParameterGroupList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ParameterGroup'\n    ParametersList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Parameter'\n    ServiceUpdateStatusList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceUpdateStatus'\n      maxItems: 4\n    ServiceUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ServiceUpdate'\n    SnapshotList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Snapshot'\n    SubnetGroupList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SubnetGroup'\n    FilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Filter'\n    UserList:\n      type: array\n      items:\n        $ref: '#/components/schemas/User'\n    Double:\n      type: number\n      format: double\n    Integer:\n      type: integer\n    EngineVersionInfo:\n      type: object\n      properties:\n        EngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The engine version\n        EnginePatchVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The patched engine version\n        ParameterGroupFamily:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Specifies the name of the parameter group family to which the engine default parameters apply.\n      description: Provides details of the Redis engine version\n    Event:\n      type: object\n      properties:\n        SourceName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The name for the source of the event. For example, if the event occurred at the cluster level, the identifier would be the name of the cluster.'\n        SourceType:\n          allOf:\n            - $ref: '#/components/schemas/SourceType'\n            - description: 'Specifies the origin of this event - a cluster, a parameter group, a security group, etc.'\n        Message:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The text of the event.\n        Date:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: The date and time when the event occurred.\n      description: Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster or adding or removing a node.\n    FilterName:\n      type: string\n      pattern: .*\\S.*\n    FilterValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/FilterValue'\n      minItems: 1\n    Filter:\n      type: object\n      required:\n        - Name\n        - Values\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/FilterName'\n            - description: 'The property being filtered. For example, UserName.'\n        Values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValueList'\n            - description: 'The property values to filter on. For example, \"user-123\".'\n      description: Used to streamline results of a search based on the property being filtered.\n    FilterValue:\n      type: string\n      pattern: .*\\S.*\n    KeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    NodeTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    Node:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The node identifier. A node name is a numeric identifier (0001, 0002, etc.). The combination of cluster name, shard name and node name uniquely identifies every node used in a customer''s Amazon account.'\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The status of the service update on the node\n        AvailabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Availability Zone in which the node resides\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: The date and time when the node was created.\n        Endpoint:\n          allOf:\n            - $ref: '#/components/schemas/Endpoint'\n            - description: The hostname for connecting to this node.\n      description: Represents an individual node within a cluster. Each node runs its own instance of the cluster's protocol-compliant caching software.\n    NodeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Node'\n    Parameter:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The value of the parameter\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A description of the parameter\n        DataType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The parameter's data type\n        AllowedValues:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The valid range of values for the parameter.\n        MinimumEngineVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The earliest engine version to which the parameter can apply.\n      description: Describes an individual setting that controls some aspect of MemoryDB behavior.\n    ParameterNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    ParameterNameValue:\n      type: object\n      properties:\n        ParameterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the parameter\n        ParameterValue:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The value of the parameter\n      description: Describes a name-value pair that is used to update the value of a parameter.\n    ParameterNameValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ParameterNameValue'\n    ServiceUpdateStatus:\n      type: string\n      enum:\n        - available\n        - in-progress\n        - complete\n        - scheduled\n    PendingModifiedServiceUpdate:\n      type: object\n      properties:\n        ServiceUpdateName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The unique ID of the service update\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/ServiceUpdateStatus'\n            - description: The status of the service update\n      description: Update action that has yet to be processed for the corresponding apply/stop request\n    ReplicaConfigurationRequest:\n      type: object\n      properties:\n        ReplicaCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of replicas to scale up or down to\n      description: A request to configure the number of replicas in a shard\n    SlotMigration:\n      type: object\n      properties:\n        ProgressPercentage:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: The percentage of the slot migration that is complete.\n      description: Represents the progress of an online resharding operation.\n    SecurityGroupMembership:\n      type: object\n      properties:\n        SecurityGroupId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The identifier of the security group.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The status of the security group membership. The status changes whenever a security group is modified, or when the security groups assigned to a cluster are modified.'\n      description: Represents a single security group and its status.\n    ServiceUpdateType:\n      type: string\n      enum:\n        - security-update\n    ServiceUpdate:\n      type: object\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster to which the service update applies\n        ServiceUpdateName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The unique ID of the service update\n        ReleaseDate:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: The date when the service update is initially available\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Provides details of the service update\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/ServiceUpdateStatus'\n            - description: The status of the service update\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ServiceUpdateType'\n            - description: Reflects the nature of the service update\n        NodesUpdated:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: A list of nodes updated by the service update\n        AutoUpdateStartDate:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: The date at which the service update will be automatically applied\n      description: An update that you can apply to your MemoryDB clusters.\n    Shard:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the shard\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'The current state of this replication group - creating, available, modifying, deleting.'\n        Slots:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The keyspace for this shard.\n        Nodes:\n          allOf:\n            - $ref: '#/components/schemas/NodeList'\n            - description: A list containing information about individual nodes within the shard\n        NumberOfNodes:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The number of nodes in the shard\n      description: Represents a collection of nodes in a cluster. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes.\n    ShardConfiguration:\n      type: object\n      properties:\n        Slots:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'A string that specifies the keyspace for a particular node group. Keyspaces range from 0 to 16,383. The string is in the format startkey-endkey.'\n        ReplicaCount:\n          allOf:\n            - $ref: '#/components/schemas/IntegerOptional'\n            - description: The number of read replica nodes in this shard.\n      description: 'Shard configuration options. Each shard configuration has the following: Slots and ReplicaCount.'\n    ShardConfigurationRequest:\n      type: object\n      properties:\n        ShardCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: The number of shards in the cluster\n      description: A request to configure the sharding properties of a cluster\n    ShardDetail:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the shard\n        Configuration:\n          allOf:\n            - $ref: '#/components/schemas/ShardConfiguration'\n            - description: The configuration details of the shard\n        Size:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The size of the shard's snapshot\n        SnapshotCreationTime:\n          allOf:\n            - $ref: '#/components/schemas/TStamp'\n            - description: The date and time that the shard's snapshot was created\n      description: Provides details of a shard in a snapshot\n    Subnet:\n      type: object\n      properties:\n        Identifier:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The unique identifier for the subnet.\n        AvailabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/AvailabilityZone'\n            - description: The Availability Zone where the subnet resides\n      description: Represents the subnet associated with a cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with MemoryDB.\n    SubnetList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Subnet'\n    Tag:\n      type: object\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The key for the tag. May not be null.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The tag's value. May be null.\n      description: 'A tag that can be added to an MemoryDB resource. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your MemoryDB resources. When you add or remove tags on clusters, those actions will be replicated to all nodes in the cluster. A tag with a null Value is permitted. For more information, see \u003ca href=\"https://docs.aws.amazon.com/MemoryDB/latest/devguide/tagging-resources.html\"\u003eTagging your MemoryDB resources\u003c/a\u003e '\n    UnprocessedCluster:\n      type: object\n      properties:\n        ClusterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The name of the cluster\n        ErrorType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The error type associated with the update failure\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The error message associated with the update failure\n      description: A cluster whose updates have failed\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@297a6aabc26a26ce6a88a81c8a82120430c15265/-/blob/APIs/amazonaws.com/memorydb/2021-01-01/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/297a6aabc26a26ce6a88a81c8a82120430c15265/APIs/amazonaws.com/memorydb/2021-01-01/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:119561: duplicate path: \"/#X-Amz-Target=AmazonMemoryDB.FailoverShard\""
}