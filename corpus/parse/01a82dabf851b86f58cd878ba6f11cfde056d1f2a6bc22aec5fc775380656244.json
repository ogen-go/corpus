{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "api_rest_paths_with_if_condition_openapi.json",
			"size": 0,
			"path": "tests/translator/output/aws-cn/api_rest_paths_with_if_condition_openapi.json",
			"byteSize": 10228,
			"content": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Conditions\": {\n    \"FalseCondition\": {\n      \"Fn::Equals\": [\n        true,\n        false\n      ]\n    },\n    \"TrueCondition\": {\n      \"Fn::Equals\": [\n        true,\n        true\n      ]\n    }\n  },\n  \"Description\": \"sam-app\\nSample SAM Template for sam-app\\n\",\n  \"Resources\": {\n    \"MyApi\": {\n      \"Properties\": {\n        \"Body\": {\n          \"components\": {\n            \"securitySchemes\": {\n              \"MyLambdaAuthUpdated\": {\n                \"in\": \"header\",\n                \"name\": \"Authorization\",\n                \"type\": \"apiKey\",\n                \"x-amazon-apigateway-authorizer\": {\n                  \"authorizerCredentials\": {\n                    \"Fn::GetAtt\": [\n                      \"MyAuthFnRole\",\n                      \"Arn\"\n                    ]\n                  },\n                  \"authorizerResultTtlInSeconds\": 37,\n                  \"authorizerUri\": {\n                    \"Fn::Sub\": [\n                      \"arn:aws-cn:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${__FunctionArn__}/invocations\",\n                      {\n                        \"__FunctionArn__\": {\n                          \"Fn::GetAtt\": [\n                            \"MyAuthFn\",\n                            \"Arn\"\n                          ]\n                        }\n                      }\n                    ]\n                  },\n                  \"type\": \"token\"\n                },\n                \"x-amazon-apigateway-authtype\": \"custom\"\n              },\n              \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"x-api-key\",\n                \"type\": \"apiKey\"\n              }\n            }\n          },\n          \"info\": {\n            \"title\": {\n              \"Fn::Sub\": \"${AWS::StackName}-Api\"\n            }\n          },\n          \"openapi\": \"3.0\",\n          \"paths\": {\n            \"/post\": {\n              \"Fn::If\": [\n                \"FalseCondition\",\n                {\n                  \"options\": {\n                    \"consumes\": [\n                      \"application/json\"\n                    ],\n                    \"produces\": [\n                      \"application/json\"\n                    ],\n                    \"responses\": {\n                      \"200\": {\n                        \"description\": \"Default response for CORS method\",\n                        \"headers\": {\n                          \"Access-Control-Allow-Methods\": {\n                            \"type\": \"string\"\n                          },\n                          \"Access-Control-Allow-Origin\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"security\": [\n                      {\n                        \"MyLambdaAuthUpdated\": []\n                      },\n                      {\n                        \"api_key\": []\n                      }\n                    ],\n                    \"summary\": \"CORS support\",\n                    \"x-amazon-apigateway-integration\": {\n                      \"requestTemplates\": {\n                        \"application/json\": \"{\\n  \\\"statusCode\\\" : 200\\n}\\n\"\n                      },\n                      \"responses\": {\n                        \"default\": {\n                          \"responseParameters\": {\n                            \"method.response.header.Access-Control-Allow-Methods\": \"'OPTIONS,POST'\",\n                            \"method.response.header.Access-Control-Allow-Origin\": {\n                              \"Fn::Join\": [\n                                \",\",\n                                [\n                                  \"www.amazon.com\",\n                                  \"www.google.com\"\n                                ]\n                              ]\n                            }\n                          },\n                          \"responseTemplates\": {\n                            \"application/json\": \"{}\\n\"\n                          },\n                          \"statusCode\": \"200\"\n                        }\n                      },\n                      \"type\": \"mock\"\n                    }\n                  },\n                  \"post\": {\n                    \"security\": [\n                      {\n                        \"MyLambdaAuthUpdated\": []\n                      },\n                      {\n                        \"api_key\": []\n                      }\n                    ],\n                    \"x-amazon-apigateway-integration\": {\n                      \"httpMethod\": \"POST\",\n                      \"payloadFormatVersion\": \"1.0\",\n                      \"type\": \"aws_proxy\",\n                      \"uri\": \"https://www.otherURI.co/\"\n                    }\n                  }\n                },\n                {\n                  \"options\": {\n                    \"consumes\": [\n                      \"application/json\"\n                    ],\n                    \"produces\": [\n                      \"application/json\"\n                    ],\n                    \"responses\": {\n                      \"200\": {\n                        \"description\": \"Default response for CORS method\",\n                        \"headers\": {\n                          \"Access-Control-Allow-Methods\": {\n                            \"type\": \"string\"\n                          },\n                          \"Access-Control-Allow-Origin\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    },\n                    \"security\": [\n                      {\n                        \"MyLambdaAuthUpdated\": []\n                      },\n                      {\n                        \"api_key\": []\n                      }\n                    ],\n                    \"summary\": \"CORS support\",\n                    \"x-amazon-apigateway-integration\": {\n                      \"requestTemplates\": {\n                        \"application/json\": \"{\\n  \\\"statusCode\\\" : 200\\n}\\n\"\n                      },\n                      \"responses\": {\n                        \"default\": {\n                          \"responseParameters\": {\n                            \"method.response.header.Access-Control-Allow-Methods\": \"'OPTIONS,POST'\",\n                            \"method.response.header.Access-Control-Allow-Origin\": {\n                              \"Fn::Join\": [\n                                \",\",\n                                [\n                                  \"www.amazon.com\",\n                                  \"www.google.com\"\n                                ]\n                              ]\n                            }\n                          },\n                          \"responseTemplates\": {\n                            \"application/json\": \"{}\\n\"\n                          },\n                          \"statusCode\": \"200\"\n                        }\n                      },\n                      \"type\": \"mock\"\n                    }\n                  },\n                  \"post\": {\n                    \"security\": [\n                      {\n                        \"MyLambdaAuthUpdated\": []\n                      },\n                      {\n                        \"api_key\": []\n                      }\n                    ],\n                    \"x-amazon-apigateway-integration\": {\n                      \"httpMethod\": \"POST\",\n                      \"payloadFormatVersion\": \"1.0\",\n                      \"type\": \"aws_proxy\",\n                      \"uri\": \"https://www.alphavantage.co/\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        },\n        \"EndpointConfiguration\": {\n          \"Types\": [\n            \"REGIONAL\"\n          ]\n        },\n        \"Parameters\": {\n          \"endpointConfigurationTypes\": \"REGIONAL\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::RestApi\"\n    },\n    \"MyApiDeployment7a5169a458\": {\n      \"Properties\": {\n        \"Description\": \"RestApi deployment id: 7a5169a458f926127d35761e818069f54fb11c7e\",\n        \"RestApiId\": {\n          \"Ref\": \"MyApi\"\n        },\n        \"StageName\": \"Stage\"\n      },\n      \"Type\": \"AWS::ApiGateway::Deployment\"\n    },\n    \"MyApiMyLambdaAuthUpdatedAuthorizerPermission\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Fn::GetAtt\": [\n            \"MyAuthFn\",\n            \"Arn\"\n          ]\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/authorizers/*\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApi\"\n              }\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyApidevStage\": {\n      \"Properties\": {\n        \"DeploymentId\": {\n          \"Ref\": \"MyApiDeployment7a5169a458\"\n        },\n        \"RestApiId\": {\n          \"Ref\": \"MyApi\"\n        },\n        \"StageName\": \"dev\"\n      },\n      \"Type\": \"AWS::ApiGateway::Stage\"\n    },\n    \"MyAuthFn\": {\n      \"Properties\": {\n        \"Code\": {\n          \"S3Bucket\": \"sam-demo-bucket\",\n          \"S3Key\": \"hello.zip\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"MyAuthFnRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"MyAuthFnRole\": {\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@2f53aebdcf9b322a395eaa872e5368ddc3c76c95/-/blob/tests/translator/output/aws-cn/api_rest_paths_with_if_condition_openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/2f53aebdcf9b322a395eaa872e5368ddc3c76c95/tests/translator/output/aws-cn/api_rest_paths_with_if_condition_openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at tests/translator/output/aws-cn/api_rest_paths_with_if_condition_openapi.json:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}