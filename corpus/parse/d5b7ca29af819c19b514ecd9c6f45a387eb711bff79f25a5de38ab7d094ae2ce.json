{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-meteringmarketplace-2016-01-14-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-meteringmarketplace-2016-01-14-swagger.yaml",
			"byteSize": 25438,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2016-01-14\n  x-release: v4\n  title: AWSMarketplace Metering\n  description: <fullname>AWS Marketplace Metering Service</fullname> <p>This reference\n    provides descriptions of the low-level AWS Marketplace Metering Service\n    API.</p> <p>AWS Marketplace sellers can use this API to submit usage data\n    for custom usage dimensions.</p> <p> <b>Submitting Metering Records</b> </p>\n    <ul> <li> <p> <i>MeterUsage</i>- Submits the metering record for a\n    Marketplace product. MeterUsage is called from an EC2 instance.</p> </li>\n    <li> <p> <i>BatchMeterUsage</i>- Submits the metering record for a set of\n    customers. BatchMeterUsage is called from a software-as-a-service (SaaS)\n    application.</p> </li> </ul> <p> <b>Accepting New Customers</b> </p> <ul>\n    <li> <p> <i>ResolveCustomer</i>- Called by a SaaS application during the\n    registration process. When a buyer visits your website during the\n    registration process, the buyer submits a Registration Token through the\n    browser. The Registration Token is resolved through this API to obtain a\n    CustomerIdentifier and Product Code.</p> </li> </ul> <p> <b>Entitlement and\n    Metering for Paid Container Products</b> </p> <ul> <li> <p> Paid container\n    software products sold through AWS Marketplace must integrate with the AWS\n    Marketplace Metering Service and call the RegisterUsage operation for\n    software entitlement and metering. Calling RegisterUsage from containers\n    running outside of Amazon Elastic Container Service (Amazon ECR) isn't\n    supported. Free and BYOL products for ECS aren't required to call\n    RegisterUsage, but you can do so if you want to receive usage data in your\n    seller reports. For more information on using the RegisterUsage operation,\n    see <a\n    href=\"https://docs.aws.amazon.com/marketplace/latest/userguide/container-based-products.html\">Container-Based\n    Products</a>. </p> </li> </ul> <p>BatchMeterUsage API calls are captured by\n    AWS CloudTrail. You can use Cloudtrail to verify that the SaaS metering\n    records that you sent are accurate by searching for records with the\n    eventName of BatchMeterUsage. You can also use CloudTrail to audit records\n    over time. For more information, see the <i> <a\n    href=\"http://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html\">AWS\n    CloudTrail User Guide</a> </i>.</p>\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: meteringmarketplace\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/meteringmarketplace-2016-01-14.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/marketplace/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#X-Amz-Target=AWSMPMeteringService.BatchMeterUsage:\n    post:\n      operationId: BatchMeterUsage\n      description: <p>BatchMeterUsage is called from a SaaS application listed on the AWS\n        Marketplace to post metering records for a set of customers.</p> <p>For\n        identical requests, the API is idempotent; requests can be retried with\n        the same records or a subset of the input records.</p> <p>Every request\n        to BatchMeterUsage is for one product. If you need to meter usage for\n        multiple products, you must make multiple calls to BatchMeterUsage.</p>\n        <p>BatchMeterUsage can process up to 25 UsageRecords at a time.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchMeterUsageResult\"\n        \"480\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"481\":\n          description: InvalidProductCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidProductCodeException\"\n        \"482\":\n          description: InvalidUsageDimensionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUsageDimensionException\"\n        \"483\":\n          description: InvalidCustomerIdentifierException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidCustomerIdentifierException\"\n        \"484\":\n          description: TimestampOutOfBoundsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimestampOutOfBoundsException\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: DisabledApiException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabledApiException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSMPMeteringService.BatchMeterUsage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BatchMeterUsageRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSMPMeteringService.MeterUsage:\n    post:\n      operationId: MeterUsage\n      description: <p>API to emit metering records. For identical requests, the API is\n        idempotent. It simply returns the metering record ID.</p> <p>MeterUsage\n        is authenticated on the buyer's AWS account, generally when running from\n        an EC2 instance on the AWS Marketplace.</p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MeterUsageResult\"\n        \"480\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"481\":\n          description: InvalidProductCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidProductCodeException\"\n        \"482\":\n          description: InvalidUsageDimensionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidUsageDimensionException\"\n        \"483\":\n          description: InvalidEndpointRegionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidEndpointRegionException\"\n        \"484\":\n          description: TimestampOutOfBoundsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimestampOutOfBoundsException\"\n        \"485\":\n          description: DuplicateRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DuplicateRequestException\"\n        \"486\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSMPMeteringService.MeterUsage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MeterUsageRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSMPMeteringService.RegisterUsage:\n    post:\n      operationId: RegisterUsage\n      description: \"<p>Paid container software products sold through AWS Marketplace must\n        integrate with the AWS Marketplace Metering Service and call the\n        RegisterUsage operation for software entitlement and metering. Calling\n        RegisterUsage from containers running outside of ECS is not currently\n        supported. Free and BYOL products for ECS aren't required to call\n        RegisterUsage, but you may choose to do so if you would like to receive\n        usage data in your seller reports. The sections below explain the\n        behavior of RegisterUsage. RegisterUsage performs two primary functions:\n        metering and entitlement.</p> <ul> <li> <p> <i>Entitlement</i>:\n        RegisterUsage allows you to verify that the customer running your paid\n        software is subscribed to your product on AWS Marketplace, enabling you\n        to guard against unauthorized use. Your container image that integrates\n        with RegisterUsage is only required to guard against unauthorized use at\n        container startup, as such a\n        CustomerNotSubscribedException/PlatformNotSupportedException will only\n        be thrown on the initial call to RegisterUsage. Subsequent calls from\n        the same Amazon ECS task instance (e.g. task-id) will not throw a\n        CustomerNotSubscribedException, even if the customer unsubscribes while\n        the Amazon ECS task is still running.</p> </li> <li> <p>\n        <i>Metering</i>: RegisterUsage meters software use per ECS task, per\n        hour, with usage prorated to the second. A minimum of 1 minute of usage\n        applies to tasks that are short lived. For example, if a customer has a\n        10 node ECS cluster and creates an ECS service configured as a Daemon\n        Set, then ECS will launch a task on all 10 cluster nodes and the\n        customer will be charged: (10 * hourly_rate). Metering for software use\n        is automatically handled by the AWS Marketplace Metering Control Plane\n        -- your software is not required to perform any metering specific\n        actions, other than call RegisterUsage once for metering of software use\n        to commence. The AWS Marketplace Metering Control Plane will also\n        continue to bill customers for running ECS tasks, regardless of the\n        customers subscription state, removing the need for your software to\n        perform entitlement checks at runtime.</p> </li> </ul>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RegisterUsageResult\"\n        \"480\":\n          description: InvalidProductCodeException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidProductCodeException\"\n        \"481\":\n          description: InvalidRegionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRegionException\"\n        \"482\":\n          description: InvalidPublicKeyVersionException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidPublicKeyVersionException\"\n        \"483\":\n          description: PlatformNotSupportedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlatformNotSupportedException\"\n        \"484\":\n          description: CustomerNotEntitledException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerNotEntitledException\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"486\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"487\":\n          description: DisabledApiException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabledApiException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSMPMeteringService.RegisterUsage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RegisterUsageRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /#X-Amz-Target=AWSMPMeteringService.ResolveCustomer:\n    post:\n      operationId: ResolveCustomer\n      description: ResolveCustomer is called by a SaaS application during the registration\n        process. When a buyer visits your website during the registration\n        process, the buyer submits a registration token through their browser.\n        The registration token is resolved through this API to obtain a\n        CustomerIdentifier and product code.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResolveCustomerResult\"\n        \"480\":\n          description: InvalidTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidTokenException\"\n        \"481\":\n          description: ExpiredTokenException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExpiredTokenException\"\n        \"482\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"483\":\n          description: InternalServiceErrorException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalServiceErrorException\"\n        \"484\":\n          description: DisabledApiException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DisabledApiException\"\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSMPMeteringService.ResolveCustomer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResolveCustomerRequest\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://metering.marketplace.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWSMarketplace Metering multi-region endpoint\n  - url: https://metering.marketplace.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWSMarketplace Metering multi-region endpoint\n  - url: http://metering.marketplace.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWSMarketplace Metering endpoint for China (Beijing) and China\n      (Ningxia)\n  - url: https://metering.marketplace.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWSMarketplace Metering endpoint for China (Beijing) and China\n      (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchMeterUsageResult:\n      type: object\n      properties:\n        Results:\n          $ref: \"#/components/schemas/UsageRecordResultList\"\n        UnprocessedRecords:\n          $ref: \"#/components/schemas/UsageRecordList\"\n      description: Contains the UsageRecords processed by BatchMeterUsage and any records\n        that have failed due to transient error.\n    BatchMeterUsageRequest:\n      type: object\n      required:\n        - UsageRecords\n        - ProductCode\n      properties:\n        UsageRecords:\n          $ref: \"#/components/schemas/UsageRecordList\"\n        ProductCode:\n          $ref: \"#/components/schemas/ProductCode\"\n      description: A BatchMeterUsageRequest contains UsageRecords, which indicate\n        quantities of usage within your application.\n    InternalServiceErrorException: {}\n    InvalidProductCodeException: {}\n    InvalidUsageDimensionException: {}\n    InvalidCustomerIdentifierException: {}\n    TimestampOutOfBoundsException: {}\n    ThrottlingException: {}\n    DisabledApiException: {}\n    MeterUsageResult:\n      type: object\n      properties:\n        MeteringRecordId:\n          $ref: \"#/components/schemas/String\"\n    MeterUsageRequest:\n      type: object\n      required:\n        - ProductCode\n        - Timestamp\n        - UsageDimension\n      properties:\n        ProductCode:\n          $ref: \"#/components/schemas/ProductCode\"\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        UsageDimension:\n          $ref: \"#/components/schemas/UsageDimension\"\n        UsageQuantity:\n          $ref: \"#/components/schemas/UsageQuantity\"\n        DryRun:\n          $ref: \"#/components/schemas/Boolean\"\n    InvalidEndpointRegionException: {}\n    DuplicateRequestException: {}\n    RegisterUsageResult:\n      type: object\n      properties:\n        PublicKeyRotationTimestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        Signature:\n          $ref: \"#/components/schemas/NonEmptyString\"\n    RegisterUsageRequest:\n      type: object\n      required:\n        - ProductCode\n        - PublicKeyVersion\n      properties:\n        ProductCode:\n          $ref: \"#/components/schemas/ProductCode\"\n        PublicKeyVersion:\n          $ref: \"#/components/schemas/VersionInteger\"\n        Nonce:\n          $ref: \"#/components/schemas/Nonce\"\n    InvalidRegionException: {}\n    InvalidPublicKeyVersionException: {}\n    PlatformNotSupportedException: {}\n    CustomerNotEntitledException: {}\n    ResolveCustomerResult:\n      type: object\n      properties:\n        CustomerIdentifier:\n          $ref: \"#/components/schemas/CustomerIdentifier\"\n        ProductCode:\n          $ref: \"#/components/schemas/ProductCode\"\n      description: The result of the ResolveCustomer operation. Contains the\n        CustomerIdentifier and product code.\n    ResolveCustomerRequest:\n      type: object\n      required:\n        - RegistrationToken\n      properties:\n        RegistrationToken:\n          $ref: \"#/components/schemas/NonEmptyString\"\n      description: Contains input to the ResolveCustomer operation.\n    InvalidTokenException: {}\n    ExpiredTokenException: {}\n    UsageRecordList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UsageRecord\"\n      minItems: 0\n      maxItems: 25\n    ProductCode:\n      type: string\n      minLength: 1\n      maxLength: 255\n    UsageRecordResultList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UsageRecordResult\"\n    Boolean:\n      type: boolean\n    CustomerIdentifier:\n      type: string\n      minLength: 1\n      maxLength: 255\n    Timestamp:\n      type: string\n      format: date-time\n    UsageDimension:\n      type: string\n      minLength: 1\n      maxLength: 255\n    UsageQuantity:\n      type: integer\n      minimum: 0\n      maximum: 2147483647\n    String:\n      type: string\n    NonEmptyString:\n      type: string\n      pattern: \\S+\n    Nonce:\n      type: string\n      maxLength: 255\n    VersionInteger:\n      type: integer\n      minimum: 1\n    UsageRecord:\n      type: object\n      required:\n        - Timestamp\n        - CustomerIdentifier\n        - Dimension\n      properties:\n        Timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        CustomerIdentifier:\n          $ref: \"#/components/schemas/CustomerIdentifier\"\n        Dimension:\n          $ref: \"#/components/schemas/UsageDimension\"\n        Quantity:\n          $ref: \"#/components/schemas/UsageQuantity\"\n      description: <p>A UsageRecord indicates a quantity of usage for a given product,\n        customer, dimension and time.</p> <p>Multiple requests with the same\n        UsageRecords as input will be deduplicated to prevent double\n        charges.</p>\n    UsageRecordResultStatus:\n      type: string\n      enum:\n        - Success\n        - CustomerNotSubscribed\n        - DuplicateRecord\n    UsageRecordResult:\n      type: object\n      properties:\n        UsageRecord:\n          $ref: \"#/components/schemas/UsageRecord\"\n        MeteringRecordId:\n          $ref: \"#/components/schemas/String\"\n        Status:\n          $ref: \"#/components/schemas/UsageRecordResultStatus\"\n      description: A UsageRecordResult indicates the status of a given UsageRecord\n        processed by BatchMeterUsage.\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-meteringmarketplace-2016-01-14-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-meteringmarketplace-2016-01-14-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/#X-Amz-Target=AWSMPMeteringService.BatchMeterUsage\": at 1:9294: post: operation \"BatchMeterUsage\": at 1:9684: parse path \"/#X-Amz-Target=AWSMPMeteringService.BatchMeterUsage\": path MUST NOT contain a fragment"
}