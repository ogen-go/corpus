{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/papyrcms/papyrcms"
		},
		"file": {
			"name": "swagger-config.json",
			"path": "swagger-config.json",
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Papyr CMS API\",\n    \"description\": \"Connectes to the Papyr CMS backend.\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:5000/api\",\n      \"description\": \"Local server\"\n    },\n    {\n      \"url\": \"https://drkgrntt.herokuapp.com/api\",\n      \"description\": \"Main server\"\n    }\n  ],\n  \"paths\": {\n    \"/posts/published\": {\n      \"get\": {\n        \"summary\": \"Gets all published content posts.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A JSON array of posts.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Post\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/posts\": {\n      \"get\": {\n        \"summary\": \"Gets all content posts.\",\n        \"security\": [{\n          \"bearerAuth\": []\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A JSON array of content posts.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Post\"\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Creates a content post.\",\n        \"security\": [{\n          \"bearerAuth\": []\n        }],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"title\": {\n                    \"type\": \"string\"\n                  },\n                  \"content\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"string\"\n                  },\n                  \"mainMedia\": {\n                    \"type\": \"string\"\n                  },\n                  \"published\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A content post.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Post\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/posts/{id}\": {\n      \"get\": {\n        \"summary\": \"Gets a content post by its ID or slug.\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The post id or slug.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A content post object.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Post\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnpublishedError\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Updates a content post by its ID.\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The post id or slug.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"security\": [{\n          \"bearerAuth\": []\n        }],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"title\": {\n                    \"type\": \"string\"\n                  },\n                  \"content\": {\n                    \"type\": \"string\"\n                  },\n                  \"tags\": {\n                    \"type\": \"string\"\n                  },\n                  \"mainMedia\": {\n                    \"type\": \"string\"\n                  },\n                  \"published\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The updated content post.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Post\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Deletes a content post by its ID.\",\n        \"parameters\": [{\n          \"name\": \"id\",\n          \"in\": \"path\",\n          \"description\": \"The post id or slug.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }],\n        \"security\": [{\n          \"bearerAuth\": []\n        }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A confirmation string.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          }\n        }\n      }\n    },\n    \"/blogs/published\": {\n      \"get\": {\n        \"summary\": \"Gets all published blog posts.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/events/published\": {\n      \"get\": {\n        \"summary\": \"Gets all published event posts.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    },\n    \"/store/products/published\": {\n      \"get\": {\n        \"summary\": \"Gets all published product posts.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"responses\": {\n      \"UnauthorizedError\": {\n        \"description\": \"The user is not authenticated or the user is not an admin.\"\n      },\n      \"UnpublishedError\": {\n        \"description\": \"The post is not published and either the user is not authenticated is not an admin.\"\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"Post\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"subImages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"mainMedia\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Blog\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"subImages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"comments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Comment\"\n            }\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"mainMedia\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"publishDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Event\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"subImages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"mainMedia\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"latitude\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"longitude\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"Product\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"subImages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"published\": {\n            \"type\": \"boolean\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"mainMedia\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"slug\": {\n            \"type\": \"string\"\n          },\n          \"price\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\"\n          }\n        }\n      },\n      \"Comment\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"replies\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Comment\"\n            }\n          },\n          \"author\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        }\n      },\n      \"User\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"address1\": {\n            \"type\": \"string\"\n          },\n          \"address2\": {\n            \"type\": \"string\"\n          },\n          \"city\": {\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"type\": \"string\"\n          },\n          \"zip\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"shippingFirstName\": {\n            \"type\": \"string\"\n          },\n          \"shippingLastName\": {\n            \"type\": \"string\"\n          },\n          \"shippingEmail\": {\n            \"type\": \"string\"\n          },\n          \"shippingAddress1\": {\n            \"type\": \"string\"\n          },\n          \"shippingAddress2\": {\n            \"type\": \"string\"\n          },\n          \"shippingCity\": {\n            \"type\": \"string\"\n          },\n          \"shippingState\": {\n            \"type\": \"string\"\n          },\n          \"shippingZip\": {\n            \"type\": \"string\"\n          },\n          \"shippingCountry\": {\n            \"type\": \"string\"\n          },\n          \"cart\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Product\"\n            }\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isAdmin\": {\n            \"type\": \"boolean\"\n          },\n          \"isSubscribed\": {\n            \"type\": \"boolean\"\n          },\n          \"isBanned\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"Page\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"className\": {\n            \"type\": \"string\"\n          },\n          \"route\": {\n            \"type\": \"string\"\n          },\n          \"navOrder\": {\n            \"type\": \"integer\"\n          },\n          \"sections\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"json\"\n            }\n          },\n          \"css\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Message\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"emailSent\": {\n            \"type\": \"boolean\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }        \n        }\n      },\n      \"Order\": {\n        \"properties\": {\n          \"_id\": {\n            \"type\": \"string\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"products\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Product\"\n            }\n          }, \n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"notes\": {\n            \"type\": \"string\"\n          },\n          \"shipped\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "callback: json: cannot unmarshal string into Go value of type ogen.Schema"
}