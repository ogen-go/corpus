{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/couchbaselabs/observability"
		},
		"file": {
			"name": "cmos_config_api.yaml",
			"size": 0,
			"path": "config-svc/pkg/api/v1/cmos_config_api.yaml",
			"byteSize": 5164,
			"content": "---\nopenapi: 3.0.3\ninfo:\n    title: Couchbase Monitoring \u0026 Observability Stack - Configuration Service\n    description: REST API of the Configuration Service\n    version: v1\n    contact:\n        name: Couchbase, Inc.\n        url: https://couchbase.com\n        email: info@couchbase.com\n    license:\n        name: Apache 2.0\n        url: https://www.apache.org/licenses/LICENSE-2.0\nservers:\n    - description: Local Microlith\n      url: http://localhost:8080/config/api/v1\n    - description: Local Development\n      url: http://localhost:7194/api/v1\npaths:\n\n    /openapi.json:\n        get:\n            summary: Outputs the OpenAPI specification for this API.\n            responses:\n                '200':\n                    description: OpenAPI 3.0 specification for this API\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n\n    /clusters/add:\n        post:\n            summary: Add a new Couchbase cluster to Prometheus\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Cluster'\n            responses:\n                '200':\n                    description: Cluster added successfully\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                additionalProperties: false\n                                required: [ok]\n                                properties:\n                                    ok:\n                                        type: boolean\n                                        enum: [true]\n\n    /sgw/add:\n        post:\n            summary: Add a new Sync Gateway cluster to Prometheus\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Sgw'\n            repsonses:\n                '200':\n                    description: Sync Gateway added successfully\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                additionalProperties: false\n                                required: [ok]\n                                properties:\n                                    ok:\n                                        type: boolean\n                                        enum: [true]\n\n\n    /collectInformation:\n        post:   # avoid accidental activation by GET\n            summary: Collects diagnostic information about CMOS for Support analysis.\n            responses:\n                '200':\n                    description: Stream of logging output from collect-information.sh\n                    content:\n                        text/plain:\n\n\ncomponents:\n    schemas:\n        Cluster:\n            type: object\n            additionalProperties: false\n            required: [couchbaseConfig, hostname]\n            properties:\n                name:\n                    type: string\n                couchbaseConfig:\n                    type: object\n                    additionalProperties: false\n                    required: [username, password]\n                    properties:\n                        managementPort:\n                            type: number\n                            default: 8091\n                        username:\n                            type: string\n                        password:\n                            type: string\n                        useTLS:\n                            type: boolean\n                metricsConfig:\n                    type: object\n                    additionalProperties: false\n                    properties:\n                        metricsPort:\n                            type: number\n                hostname:\n                    type: string\n        Sgw:\n            type: object\n            required: [sgwConfig, hostname]\n            properties:\n                name:\n                    type: string\n                SgwConfig:\n                    type: object\n                    additionalProperties: false\n                    required: [username, password]\n                    properties:\n                        username:\n                            type: string\n                        password:\n                            type: string\n                metricsConfig:\n                    type: object\n                    additionalProperties: false\n                    properties:\n                        metricsPort:\n                            type: number\n                hostname:\n                    type: string\n        ErrorResponse:\n            type: object\n            additionalProperties: false\n            required: [ok, error]\n            properties:\n                ok:\n                    type: boolean\n                    enum: [false]\n                error:\n                    type: string\n",
			"canonicalURL": "/github.com/couchbaselabs/observability@81da00be72f739f31d55136e153b645f192d6ba0/-/blob/config-svc/pkg/api/v1/cmos_config_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/couchbaselabs/observability/blob/81da00be72f739f31d55136e153b645f192d6ba0/config-svc/pkg/api/v1/cmos_config_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/sgw/add\": post: at 1:2393: responses: no responses"
}