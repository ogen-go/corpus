{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/docusign.rooms/openapi.yaml",
			"byteSize": 431930,
			"content": "openapi: 3.0.1\ninfo:\n  title: DocuSign Rooms API - v2\n  description: \u003e-\n    This is a generated connector for [DocuSign Rooms API](https://developers.docusign.com/docs/rooms-api/) OpenAPI specification. \n    DocuSign Rooms streamlines real estate and mortgage workflows by connecting all parties in a digital, secure, and central workspace. With the DocuSign Rooms API, itâ€™s easy to integrate Rooms functionality into your own solutions.\n  termsOfService: https://www.docusign.com/company/terms-and-conditions/web\n  contact:\n    name: DocuSign Developer Center\n    url: https://developers.docusign.com\n    email: devcenter@docusign.com\n  version: v2\n  x-ballerina-init-description: \n    The connector initialization requires setting the API credentials.\n\n    Create a [DocuSign account](https://www.docusign.com/) and obtain tokens by following [this guide](https://developers.docusign.com/docs/rooms-api/rooms101/auth/).\n  x-ballerina-display:\n    label: DocuSign Rooms\n    iconPath: \"icon.png\"\nexternalDocs:\n  description: Rooms API Reference\n  url: https://developers.docusign.com/docs/rooms-api/reference/\nservers:\n- url: https://rooms.docusign.com/restapi\nsecurity:\n- Bearer: []\ntags:\n- name: FormDetails\n  description: |+\n    This section shows you how to retrieve a form's details.\n\n- name: Accounts\n  description: Information about accounts.\n- name: Documents\n  description: Methods to grant access, delete, and get information, including contents,\n    to a document.\n- name: ESignPermissionProfiles\n  description: This resource provides a method that returns a list of the  eSignature\n    permission profiles that the current user can assign to a new member.\n- name: Fields\n  description: Information about field sets.\n- name: ExternalFormFillSessions\n  description: \"\"\n- name: FormGroups\n  description: With the appropriate permissions, form administrators at your company\n    can create form groups, or curated set of forms gathered from the association\n    **form libraries** to which DocuSign provides access. Form groups enable agents\n    to know which forms to add to rooms based on the type of transaction they are\n    working on. When creating groups, administrators can make certain forms required,\n    ensuring compliance. If you don't create groups, agents will have to choose forms\n    they need from a list of association forms.\n- name: FormLibraries\n  description: \"\"\n- name: ClosingStatuses\n  description: \"\"\n- name: ContactSides\n  description: \"\"\n- name: Countries\n  description: \"\"\n- name: Currencies\n  description: \"\"\n- name: FinancingTypes\n  description: \"\"\n- name: OriginsOfLeads\n  description: In the console, these are the values that can appear on a room's **Details**\n    tab in the **Origin of lead** field.\n- name: PropertyTypes\n  description: In the console, these are the values that can appear on a room's **Details**\n    tab in the **Property type** field.\n- name: RoomContactTypes\n  description: \"\"\n- name: SellerDecisionTypes\n  description: \"\"\n- name: SpecialCircumstanceTypes\n  description: \"\"\n- name: States\n  description: \"\"\n- name: TaskDateTypes\n  description: Task date types are the options that appear in the **Due Date** drop-down\n    list when you create a task by using the console.\n- name: TaskResponsibilityTypes\n  description: \"\"\n- name: TaskStatuses\n  description: \"\"\n- name: TimeZones\n  description: \"\"\n- name: TransactionSides\n  description: \"\"\n- name: Offices\n  description: The `Offices` resource enables you to create and manage offices for\n    your company. You can also retrieve the number and type of objects that reference\n    an office.\n- name: Regions\n  description: \"\"\n- name: Roles\n  description: |-\n    Each role is associated with specific permissions. Each new member is assigned a role when you create them, automatically granting them the permissions associated with that role.\n\n    Roles use the following permission types to control the actions that users can perform:\n\n    - Room\n    - Room Details\n    - Documents\n    - Envelopes\n    - Member Management\n    - Company Settings\n\n    ## Roles in Rooms v5\n\n    Rooms v5 has three predefined roles:\n\n    - **Admin**: This role can manage all members and company settings.\n    - **Manager**: This role is designed to manage rooms in one or more offices or regions. Depending on the permissions that you set for the individual member in the `ClassicManagerPermissions`, managers can also perform additional tasks, such as managing member accounts and company account information.\n    - **Agent**: This role is for contributors who only have access to rooms that they create or that are created for them. Agents cannot manage company settings or other members.\n\n    However, you can reconfigure the `permissions` for these roles in the `Members` object.\n\n    [members]: ./Members. h t m l Fix this when we can link to objects.\n    [ClassicMemberPermissions]: ./definition/ClassicManagerPermissions. h t m l\n\n    ## Roles in Rooms v6\n\n    Rooms v6 enables you to fully configure custom roles containing permissions that make sense for your company. Because each new member is assigned a role, you must set up these roles before you can invite members to join your account.\n    In Rooms v6, permissions for roles are tied to the `roleId` property and not yet exposed. You can learn more about these permission types and configure them in the console.\n\n    ### Internal and External Roles\n\n    In Rooms v6, a role can be either internal or external. You assign internal roles to people inside your company. You assign external roles to people outside your company when you invite them to a room.\n\n    Each member inside your company has a default company role. However, they can also be assigned additional roles with different permissions on a per-room basis. Regardless of the member's default company role, what they can do in a room is entirely controlled by their role in that particular room.\n- name: Rooms\n  description: A room can hold documents, envelopes, a list of tasks comprising a\n    workflow, and other related information. You can invite others to this space and\n    assign them permissions on a per-room basis.\n- name: RoomFolders\n  description: \"\"\n- name: RoomTemplates\n  description: You can use a room template to set the transaction side and task lists\n    for rooms. For example, a broker can create a room template for agents to use.\n    You can enable the room template for all regions and offices, or just for specific\n    ones. You create room templates and the task templates that room templates use\n    in the console.\n- name: TaskLists\n  description: \"\"\n- name: TaskListTemplates\n  description: If your administrator created room templates, those room templates\n    may include task lists for you to use.\n- name: Users\n  description: |-\n    A new user is created when an account administrator or another authorized user sends an invitation to an email address. After the invitation is sent, the user's status is `pending`. When the recipient accepts the invitation, their user status switches to `active`.\n\n    ## Inviting a user to a room\n\n    To invite a user to a room, use the [Rooms_InviteUser][RoomsInviteUser] method. You can invite anyone to join a room by specifying their email address.\n\n    **Note**: In Rooms Version 6, you must have the `canAddUsersToRooms` permission set to **true** to invite a user to a room.\n\n    ## Adding a user to a company Rooms account\n\n    This section describes how to add users in each version of the Rooms product, as well as the permissions required to perform this action.\n\n    ### Rooms Version 5\n\n    To invite users to a company in Rooms Version 5, you must either be an Admin or have a Manager role for which the `canManageCompanyMembers` permission is set to `true`.\n\n    In Rooms Version 5, you use the `inviteClassicAdmin`, `inviteClassicAgent`, and `inviteClassicManager` methods.\n\n    ### Rooms Version 6\n\n    To invite users to a company in Rooms Version 6, you must be either an account administrator (In Rooms Version 6, this is the Default Admin) or another authorized user who is assigned a company role that has one of the following `userPermissions` set to **true**:\n\n    - `canAddMemberAndSetRoleLowerAccessLevel`: Users can add other users who have a lower access level than their own and set those users' roles (in offices or regions that they oversee).\n    - `canAddMemberAndSetRoleSameAccessLevel`: Users can add other users who have the same access level as their own and set those users' roles (in offices or regions that they oversee or belong to).\n\n    In Rooms Version 6, you use the [Users_inviteUser][UsersInviteUser] method.\n\n    **Note**: Before you invite users in the Rooms Version 6, we strongly recommend that you set up custom roles for your company. For more information, see [Roles][Roles].\n\n    [Roles]:  https://developers.docusign.com/docs/rooms-api/reference/Roles/Roles/\n\n\n    ## Using the API to invite a user\n\n    The Rooms API method that you use to invite a user depends on the version of Rooms that you are using.\n\n    ### Rooms Version 5\n\n    Rooms Version 5 offers the following API methods, which enable you to invite users by predefined role:\n\n    - [InviteClassicAdmin][InviteClassicAdmin]\n    - [InviteClassicAgent][InviteClassicAgent]\n    - [InviteClassicManager][InviteClassicManager]\n\n    [InviteClassicAdmin]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteClassicAdmin/\n    [InviteClassicAgent]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteClassicAgent/\n    [InviteClassicManager]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteClassicManager/\n\n    ### Rooms Version 6\n\n    If you are using Rooms Version 6, you can use a single API method to invite users and assign them to custom roles:\n\n    [InviteUser][InviteUser]\n\n    [InviteUser]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteUser/\n    [RoomsInviteUser]: https://developers.docusign.com/docs/rooms-api/reference/Rooms/Rooms/InviteUser/\n    [UsersInviteUser]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteUser/\npaths:\n  /v2/accounts/{accountId}:\n    get:\n      tags:\n      - Accounts\n      summary: Gets account information.\n      description: Returns details about a company account.\n      operationId: Get Account Information\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Account information successfully retrieved\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/AccountSummary'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountSummary'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AccountSummary'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetAccountInformation\n      x-ds-method: GetAccountInformation\n      x-ds-service: Accounts\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/documents/{documentId}:\n    get:\n      tags:\n      - Documents\n      summary: Gets information about or the contents of a document.\n      description: |-\n        Returns information about a document in a room. You can optionally request the contents of the document, which is returned in base64-encoded format.\n\n        To find the `documentId` of the document that you want to retrieve, use the Rooms::GetDocuments method.\n      operationId: Get Document\n      parameters:\n      - name: documentId\n        in: path\n        description: (Required) The id of the document.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: includeContents\n        in: query\n        description: (Optional) When set to **true**, includes the contents of the\n          document in the `base64Contents` property of the response. The default value\n          is **false**.\n        schema:\n          type: boolean\n          default: false\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Document successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Document'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetDocument\n      x-ds-method: GetDocument\n      x-ds-service: Documents\n      x-ds-in-sdk: true\n    delete:\n      tags:\n      - Documents\n      summary: Deletes a specified document.\n      description: |-\n        Permanently deletes a document. To find the `documentId` of a document that you want to delete, use the Rooms::GetDocuments method.\n\n        If the document is deleted successfully, the HTTP response code is 204 (No Content), so the response body is empty.\n      operationId: Delete Document\n      parameters:\n      - name: documentId\n        in: path\n        description: The ID of the document.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Document has been successfully deleted.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteDocument\n      x-ds-method: DeleteDocument\n      x-ds-service: Documents\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/documents/{documentId}/users:\n    post:\n      tags:\n      - Documents\n      summary: Grants a user access to a document.\n      description: Grants a user access to a document. You specify the user's `userId`\n        in the request body. The response is an object that specifies the access the\n        user has.\n      operationId: Create User Access to Document\n      parameters:\n      - name: documentId\n        in: path\n        description: The ID of the document.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: \"User information to grant access\"\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/DocumentUserForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentUserForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DocumentUserForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/DocumentUserForCreate'\n        required: false\n      responses:\n        201:\n          description: User successfully granted access to document.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/DocumentUser'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentUser'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/DocumentUser'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateDocumentUser\n      x-ds-method: CreateDocumentUser\n      x-ds-service: Documents\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/esign_permission_profiles:\n    get:\n      tags:\n      - ESignPermissionProfiles\n      summary: Gets eSignature Permission Profiles.\n      description: When you create or invite a new member in Rooms, the system creates\n        an eSignature account for the member at the same time. This method returns\n        a list of the eSignature permission profiles that the current user may be\n        able to assign to a new member. The current user may not assign a permission\n        higher than their own permission.\n      operationId: Get ESign Permission Profiles\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Permission profiles successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ESignPermissionProfileList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ESignPermissionProfileList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ESignPermissionProfileList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetESignPermissionProfiles\n      x-ds-method: GetESignPermissionProfiles\n      x-ds-service: ESignPermissionProfiles\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/external_form_fill_sessions:\n    post:\n      tags:\n      - ExternalFormFillSessions\n      summary: Creates an external form fill session.\n      description: Returns a URL for a new external form fill session, based on the\n        `roomId` and `formId` that you specify in the `formFillSessionForCreate` request\n        body.\n      operationId: Create External Form Fill Session\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details required to create a form fill session.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/ExternalFormFillSessionForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExternalFormFillSessionForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ExternalFormFillSessionForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/ExternalFormFillSessionForCreate'\n        required: false\n      responses:\n        201:\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ExternalFormFillSession'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExternalFormFillSession'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ExternalFormFillSession'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateExternalFormFillSession\n      x-ds-method: CreateExternalFormFillSession\n      x-ds-service: ExternalFormFillSessions\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/field_sets/{fieldSetId}:\n    get:\n      tags:\n      - Fields\n      summary: Gets a field set.\n      description: Returns a field set. This is a set of fields that can appear on\n        a room's Details tab in the console, such as `contactName` and `phone`.\n      operationId: Get Field Set\n      parameters:\n      - name: fieldSetId\n        in: path\n        description: |\n          (Required) The id of the field set.\n\n          Example: `4aef602b-xxxx-xxxx-xxxx-08d76696f678`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: fieldsCustomDataFilters\n        in: query\n        description: |\n          (Optional) An comma-separated list that limits the fields to return:\n\n          - `IsRequiredOnCreate`: include fields that are required in room creation.\n          - `IsRequiredOnSubmit`: include fields that are required when submitting a room for review.\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - None\n            - IsRequiredOnCreate\n            - IsRequiredOnSubmit\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: FieldSet successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FieldSet'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldSet'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FieldSet'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFieldSet\n      x-ds-method: GetFieldSet\n      x-ds-service: Fields\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/form_groups:\n    get:\n      tags:\n      - FormGroups\n      summary: Gets form groups.\n      description: \"Returns the company form groups to which the current user has\\\n        \\ access.\\n\\n## Permissions \\n\\n**Rooms Version 5**: You must be Admin to\\\n        \\ use this method.\\n\\n**Rooms Version 6**: You must have a role for which\\\n        \\ the `canManageFormGroups` permission is set to **true**.\\n\"\n      operationId: Get Form Groups\n      parameters:\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position of the results\n          set. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successfully retrieved Form Groups.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormGroupSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormGroupSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormGroupSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFormGroups\n      x-ds-method: GetFormGroups\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - FormGroups\n      summary: Creates a form group.\n      description: |\n        Creates a new form group with the name given in the `name` property of the request body.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Create Form Group\n      parameters:\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Request object for FormGroup::CreateFormGroup.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForCreate'\n        required: false\n      responses:\n        201:\n          description: Successfully created form group.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateFormGroup\n      x-ds-method: CreateFormGroup\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/form_groups/{formGroupId}:\n    get:\n      tags:\n      - FormGroups\n      summary: Gets a form group.\n      description: |\n        Get the specified form group.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Get Form Group\n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successfully retrieved form group.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFormGroup\n      x-ds-method: GetFormGroup\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n    put:\n      tags:\n      - FormGroups\n      summary: Renames a form group.\n      description: |\n        Renames the specified form group with the name given in the `name` property of the request.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Rename Form Group\n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about a form group\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForUpdate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForUpdate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForUpdate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/FormGroupForUpdate'\n        required: false\n      responses:\n        200:\n          description: Successfully updated form group.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormGroup'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RenameFormGroup\n      x-ds-method: RenameFormGroup\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - FormGroups\n      summary: Deletes a form group.\n      description: |\n        Deletes the specified form group.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Delete FormGroup\n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Successfully deleted form group.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteFormGroup\n      x-ds-method: DeleteFormGroup\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/form_groups/{formGroupId}/unassign_form/{formId}:\n    post:\n      tags:\n      - FormGroups\n      summary: Removes a form from a form group.\n      description: |\n        Removes the form `formId` from the form group `formGroupId`.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Remove Form in Form Group \n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: formId\n        in: path\n        description: |\n          The id of the form.\n\n          Example: `5be324eb-xxxx-xxxx-xxxx-208065181be9`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Form was successfully removed from the form group\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RemoveFormGroupForm\n      x-ds-method: RemoveFormGroupForm\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/form_groups/{formGroupId}/assign_form:\n    post:\n      tags:\n      - FormGroups\n      summary: Assigns a form to a form group.\n      description: |\n        Assigns the form specified in the `formId` property of the request to the form group `formGroupId`. Set the `isRequired` property in the request body to **true** if this is a required form.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Assign Form to Form Group\n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: \"Group information to assign form\"\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/FormGroupFormToAssign'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormGroupFormToAssign'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FormGroupFormToAssign'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/FormGroupFormToAssign'\n        required: false\n      responses:\n        204:\n          description: Successfully assigned form to form group.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormGroupFormToAssign'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormGroupFormToAssign'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormGroupFormToAssign'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: AssignFormGroupForm\n      x-ds-method: AssignFormGroupForm\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/form_groups/{formGroupId}/grant_office_access/{officeId}:\n    post:\n      tags:\n      - FormGroups\n      summary: Grants an office access to a form group.\n      description: |\n        Grants the office `officeId` access to the form group `formGroupId`.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Grant Office Access To Form Group\n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: officeId\n        in: path\n        description: The id of the office. This is the id that the system generated\n          when you created the office.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Office was successfully assigned to the form group\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GrantOfficeAccessToFormGroup\n      x-ds-method: GrantOfficeAccessToFormGroup\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/form_groups/{formGroupId}/revoke_office_access/{officeId}:\n    post:\n      tags:\n      - FormGroups\n      summary: Revoke an office's access to a form group.\n      description: |\n        Revoke access to the form group `formGroupId` from the office `officeId`.\n\n        ## Permissions\n\n        To use this method, you must have the following permissions set to **true**:\n\n        - Rooms Version 5: Admin\n        - Rooms Version 6: Manage Form Groups (`canManageFormGroups`)\n      operationId: Revoke Office Access From Form Group\n      parameters:\n      - name: formGroupId\n        in: path\n        description: |\n          The ID of the form group.\n\n          Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: officeId\n        in: path\n        description: The id of the office. This is the id that the system generated\n          when you created the office.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Office was successfully removed from the form group\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RevokeOfficeAccessFromFormGroup\n      x-ds-method: RevokeOfficeAccessFromFormGroup\n      x-ds-service: FormGroups\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/form_libraries:\n    get:\n      tags:\n      - FormLibraries\n      summary: Gets form libraries.\n      description: |-\n        Returns a list of form libraries to which the current user has access.\n\n        ## Permissions\n\n        All users can use this method, but the results will differ based on whether the company has asked DocuSign to enable **RequireOfficeLibraryAssignments** functionality. If this functionality is enabled for the account, then the list is filtered based on the offices that the user is in and the libraries that are assigned to those offices. If **RequireOfficeLibraryAssignments**  is not enabled, the API returns all results.\n      operationId: Get Form Libraries\n      parameters:\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position of the results\n          set. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successfully retrieved Form Libraries.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormLibrarySummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormLibrarySummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormLibrarySummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFormLibraries\n      x-ds-method: GetFormLibraries\n      x-ds-service: FormLibraries\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/form_libraries/{formLibraryId}/forms:\n    get:\n      tags:\n      - FormLibraries\n      summary: Gets the forms in a form library.\n      description: Returns a list of forms  to which the current user has access in\n        the specified form library.\n      operationId: Get Forms in Form Library Forms\n      parameters:\n      - name: formLibraryId\n        in: path\n        description: |\n          (Required) The id of the form library.\n\n          Example: `402c6e2f-xxxx-xxxx-xxxx-ff3f249f6da9`\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position of the results\n          set. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 'Successfully retrieved library '\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFormLibraryForms\n      x-ds-method: GetFormLibraryForms\n      x-ds-service: FormLibraries\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/forms/{formId}/details:\n    get:\n      tags:\n      - FormDetails\n      summary: Gets form details.\n      description: Returns details about a specific form, such as the date it was\n        created and last updated, the number of pages, the form owner, and other information.\n      operationId: Get Form Details\n      parameters:\n      - name: formId\n        in: path\n        description: (Required) The id of the form.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Form based on FormId\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FormDetails'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDetails'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FormDetails'\n        400:\n          description: Unable to Find Form based on FormId\n          content: {}\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFormDetails\n      x-ds-method: GetFormDetails\n      x-ds-service: FormDetails\n      x-ds-in-sdk: true\n  /v2/countries:\n    get:\n      tags:\n      - Countries\n      summary: Gets countries.\n      description: |-\n        Returns a list of countries that the API supports. This is a list of countries in which you can create an office.\n\n        You do not specify an `accountId` or any other parameters with this method.\n\n        ## Permissions\n\n        Any user with a valid access token can use this method.\n      operationId: Get Countries\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalCountries'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalCountries'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalCountries'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetCountries\n      x-ds-method: GetCountries\n      x-ds-service: Countries\n      x-ds-in-sdk: true\n  /v2/closing_statuses:\n    get:\n      tags:\n      - ClosingStatuses\n      summary: Gets closing statuses.\n      description: |-\n        Returns a list of closing statuses, or valid reasons for closing a room.\n\n        You do not specify an `accountId` or any other parameters with this method.\n\n        ## Permissions\n\n        Any user with a valid access token can use this method.\n      operationId: Get Closing Statuses\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalClosingStatuses'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalClosingStatuses'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalClosingStatuses'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetClosingStatuses\n      x-ds-method: GetClosingStatuses\n      x-ds-service: ClosingStatuses\n      x-ds-in-sdk: true\n  /v2/contact_sides:\n    get:\n      tags:\n      - ContactSides\n      summary: Gets contact sides.\n      description: |-\n        Return a list of valid values for transaction contact sides.\n\n        **Note**: You do not specify an `accountId` or any other parameters with this method.\n\n        ## Permissions\n\n        Any user who has a valid access token can use this method.\n      operationId: Get Contact Sides\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalContactSides'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalContactSides'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalContactSides'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetContactSides\n      x-ds-method: GetContactSides\n      x-ds-service: ContactSides\n      x-ds-in-sdk: true\n  /v2/financing_types:\n    get:\n      tags:\n      - FinancingTypes\n      summary: Gets financing types.\n      description: |-\n        Returns a list of possible financing types.\n\n\n        ## Permissions\n\n        Any user with a valid access token can use this method.\n      operationId: Get Financing Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalFinancingTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalFinancingTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalFinancingTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetFinancingTypes\n      x-ds-method: GetFinancingTypes\n      x-ds-service: FinancingTypes\n      x-ds-in-sdk: true\n  /v2/origins_of_leads:\n    get:\n      tags:\n      - OriginsOfLeads\n      summary: Gets origins of leads.\n      description: |-\n        Returns a list of origins of leads (such as Trulia or Zillow) that you can specify for rooms.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n      operationId: Get Origins Of Leads\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalOriginsOfLeads'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalOriginsOfLeads'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalOriginsOfLeads'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetOriginsOfLeads\n      x-ds-method: GetOriginsOfLeads\n      x-ds-service: OriginsOfLeads\n      x-ds-in-sdk: true\n  /v2/property_types:\n    get:\n      tags:\n      - PropertyTypes\n      summary: Gets property types.\n      description: |-\n        Returns a list of property types.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n      operationId: Get Property Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalPropertyTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalPropertyTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalPropertyTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetPropertyTypes\n      x-ds-method: GetPropertyTypes\n      x-ds-service: PropertyTypes\n      x-ds-in-sdk: true\n  /v2/room_contact_types:\n    get:\n      tags:\n      - RoomContactTypes\n      summary: Gets room contact types.\n      description: |-\n        Returns a list of room contact types, such as Buyer, Seller, and Listing Agent.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n      operationId: Get Room Contact Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalRoomContactTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalRoomContactTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalRoomContactTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoomContactTypes\n      x-ds-method: GetRoomContactTypes\n      x-ds-service: RoomContactTypes\n      x-ds-in-sdk: true\n  /v2/seller_decision_types:\n    get:\n      tags:\n      - SellerDecisionTypes\n      summary: Gets seller decision types.\n      description: |-\n        Returns a list of possible seller decision types regarding offers, such as `Countered` or `Rejected`.\n\n        ## Permissions\n\n        Any user with a valid access token can use this method.\n      operationId: Get Seller Decision Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalSellerDecisionTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalSellerDecisionTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalSellerDecisionTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetSellerDecisionTypes\n      x-ds-method: GetSellerDecisionTypes\n      x-ds-service: SellerDecisionTypes\n      x-ds-in-sdk: true\n  /v2/special_circumstance_types:\n    get:\n      tags:\n      - SpecialCircumstanceTypes\n      summary: Gets special circumstance types.\n      description: |-\n        Returns a list of special circumstance types, such as `Short Sale` and `Foreclosure`. These are the values that you can select for the **Special circumstances** field that appears on the **Room Details** page.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n      operationId: Get Special Circumstance Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalSpecialCircumstanceTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalSpecialCircumstanceTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalSpecialCircumstanceTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetSpecialCircumstanceTypes\n      x-ds-method: GetSpecialCircumstanceTypes\n      x-ds-service: SpecialCircumstanceTypes\n      x-ds-in-sdk: true\n  /v2/task_date_types:\n    get:\n      tags:\n      - TaskDateTypes\n      summary: Gets task date types.\n      description: |-\n        Returns a list of date types that you can use with tasks, such as `Actual Close Date` and `Task Due Date`. These are the options that appear in the **Due Date** drop-down list when you create a task by using the console.\n\n        **Note**: You do not enter an `accountId` with this method.\n\n        ## Permissions\n\n        Any user with a valid access token can use this method.\n      operationId: Get Task Date Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskDateTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskDateTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskDateTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTaskDateTypes\n      x-ds-method: GetTaskDateTypes\n      x-ds-service: TaskDateTypes\n      x-ds-in-sdk: true\n  /v2/task_responsibility_types:\n    get:\n      tags:\n      - TaskResponsibilityTypes\n      summary: Gets task responsibility types.\n      description: \"Returns a list of responsibility types that you can assign to\\\n        \\ users when you add them to a task. \\n\\n**Note**: You do not specify an `accountId`\\\n        \\ with this method.\\n\\n## Permissions\\n\\nAny user with a valid access token\\\n        \\ can call this method.\"\n      operationId: Get Task Responsibility Types\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskResponsibilityTypes'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskResponsibilityTypes'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskResponsibilityTypes'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTaskResponsibilityTypes\n      x-ds-method: GetTaskResponsibilityTypes\n      x-ds-service: TaskResponsibilityTypes\n      x-ds-in-sdk: true\n  /v2/task_statuses:\n    get:\n      tags:\n      - TaskStatuses\n      summary: Retrieves the list of valid task statuses.\n      operationId: Get Task Statuses\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskStatuses'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskStatuses'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTaskStatuses'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTaskStatuses\n      x-ds-method: GetTaskStatuses\n      x-ds-service: TaskStatuses\n      x-ds-in-sdk: true\n  /v2/transaction_sides:\n    get:\n      tags:\n      - TransactionSides\n      summary: Gets transaction sides.\n      description: \"Returns a list of real estate transaction sides. \\n\\n## Permissions\\n\\\n        \\nAny user with a valid access token can use this method.\"\n      operationId: Get Transaction Sides\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalTransactionSides'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTransactionSides'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTransactionSides'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTransactionSides\n      x-ds-method: GetTransactionSides\n      x-ds-service: TransactionSides\n      x-ds-in-sdk: true\n  /v2/states:\n    get:\n      tags:\n      - States\n      summary: Gets states.\n      description: |-\n        Returns a list of states.\n\n        **Note**: You do not enter an `accountId` with this method.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n      operationId: Get States\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalStates'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalStates'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalStates'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetStates\n      x-ds-method: GetStates\n      x-ds-service: States\n      x-ds-in-sdk: true\n  /v2/currencies:\n    get:\n      tags:\n      - Currencies\n      summary: Gets valid currencies.\n      description: |-\n        Returns a list of valid values for the currencies that you can use for listing, offer, and loan amounts.\n\n        **Note**: You do not specify an `accountId` with this method.\n\n        ## Permissions\n\n        Any user with a valid access token can use this method.\n      operationId: Get Currencies\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalCurrencies'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalCurrencies'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalCurrencies'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetCurrencies\n      x-ds-method: GetCurrencies\n      x-ds-service: Currencies\n      x-ds-in-sdk: true\n  /v2/time_zones:\n    get:\n      tags:\n      - TimeZones\n      summary: Gets time zones.\n      description: |-\n        Gets a list of time zones that you can assign to an office.\n\n        **Note**: You do not specify an `accountId` with this method.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n      operationId: Get Time Zones\n      responses:\n        200:\n          description: Request was successful.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/GlobalTimeZones'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTimeZones'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTimeZones'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTimeZones\n      x-ds-method: GetTimeZones\n      x-ds-service: TimeZones\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/offices:\n    get:\n      tags:\n      - Offices\n      summary: Gets offices.\n      description: This method returns a list of offices associated with an account.\n      operationId: Get Offices\n      parameters:\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position of the results\n          set from which to begin returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: onlyAccessible\n        in: query\n        description: (Optional) When set to **true**, the response only includes the\n          offices that are accessible to the current user.\n        schema:\n          type: boolean\n          default: false\n      - name: search\n        in: query\n        description: (Optional) Filters returned records by the specified string.\n          The response only includes records containing this string in the office\n          `name` field.\n        schema:\n          type: string\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Offices successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/OfficeSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OfficeSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/OfficeSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetOffices\n      x-ds-method: GetOffices\n      x-ds-service: Offices\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - Offices\n      summary: Creates an office.\n      description: |-\n        This method creates an office in a Rooms account. You can configure the following information for the new office:\n\n        - Office name\n        - Region\n        - Address\n        - Country ID and time zone\n        - Phone number\n\n        When you create an office, the Rooms API service assigns it an ID (`officeId`) and timestamp (`createdDate`), which are returned in the response along with the above data elements you specified. See the `Offices` object for descriptions of these data elements.\n\n        Use the [Users::AddUserToOffice](https://developers.docusign.com/docs/rooms-api/reference/users/users/addusertooffice/)\n        method to add users to the office.\n      operationId: Create Office\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the office that you want to create.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/OfficeForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OfficeForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/OfficeForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/OfficeForCreate'\n        required: false\n      responses:\n        201:\n          description: Office successfully created.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Office'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Office'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Office'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateOffice\n      x-ds-method: CreateOffice\n      x-ds-service: Offices\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/offices/{officeId}:\n    get:\n      tags:\n      - Offices\n      summary: Gets information about an office.\n      description: This method returns information about an office.\n      operationId: Get Office\n      parameters:\n      - name: officeId\n        in: path\n        description: (Required) The id of the office.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Office successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Office'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Office'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Office'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetOffice\n      x-ds-method: GetOffice\n      x-ds-service: Offices\n      x-ds-in-sdk: true\n    delete:\n      tags:\n      - Offices\n      summary: Deletes an office.\n      description: This method deletes an office from a Rooms account.\n      operationId: Delete Office\n      parameters:\n      - name: officeId\n        in: path\n        description: (Required) The id of the office.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Office successfully deleted.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteOffice\n      x-ds-method: DeleteOffice\n      x-ds-service: Offices\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/offices/{officeId}/reference_counts:\n    get:\n      tags:\n      - Offices\n      summary: Retrieves the number and type of objects that reference an office.\n      description: This method returns a list of each type of object and the number\n        of objects of that type referencing the specified office. Note that an office\n        cannot be deleted while existing objects reference it.\n      operationId: Get Reference Counts\n      parameters:\n      - name: officeId\n        in: path\n        description: (Required) The id of the office.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Reference counts successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/OfficeReferenceCountList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OfficeReferenceCountList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/OfficeReferenceCountList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetReferenceCounts\n      x-ds-method: GetReferenceCounts\n      x-ds-service: Offices\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/regions:\n    get:\n      tags:\n      - Regions\n      summary: Gets regions.\n      description: This method returns a list of regions that are associated with\n        a Rooms account.\n      operationId: Get Regions\n      parameters:\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position of the results\n          set from which to begin returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: managedOnly\n        in: query\n        description: (Optional) When set to **true**, only the regions that the current\n          user manages are returned. The default value is **false**.\n        schema:\n          type: boolean\n          default: false\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Regions successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RegionSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegionSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RegionSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRegions\n      x-ds-method: GetRegions\n      x-ds-service: Regions\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - Regions\n      summary: Creates a region.\n      description: This method creates a new region. When you create a region, you\n        specify only the name. The service will assign and return a region ID (`regionId`)\n        and a creation timestamp (`createdDate`).\n      operationId: Create Region\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about a region.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/Region'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Region'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Region'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/Region'\n        required: false\n      responses:\n        201:\n          description: The region was successfully created\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Region'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateRegion\n      x-ds-method: CreateRegion\n      x-ds-service: Regions\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/regions/{regionId}:\n    get:\n      tags:\n      - Regions\n      summary: Gets information about a region.\n      description: This method returns information about a specific region.\n      operationId: Get Region\n      parameters:\n      - name: regionId\n        in: path\n        description: (Required) The id of the region.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The region was found.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Region'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Region'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRegion\n      x-ds-method: GetRegion\n      x-ds-service: Regions\n      x-ds-in-sdk: true\n    delete:\n      tags:\n      - Regions\n      summary: Deletes a region.\n      description: This method deletes a region from a Rooms account.\n      operationId: Delete Region\n      parameters:\n      - name: regionId\n        in: path\n        description: (Required) The id of the region.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Region successfully deleted.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteRegion\n      x-ds-method: DeleteRegion\n      x-ds-service: Regions\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/regions/{regionId}/reference_counts:\n    get:\n      tags:\n      - Regions\n      summary: Retrieves the number and type of objects that reference a region.\n      description: \"This method returns a list of each type of object and the number\\\n        \\ of objects of that type referencing the specified region. \\n\\n**Note**:\\\n        \\ A region cannot be deleted while existing objects reference it.\"\n      operationId: Get Region Reference Counts\n      parameters:\n      - name: regionId\n        in: path\n        description: (Required) The id of the region.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Reference counts successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RegionReferenceCountList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegionReferenceCountList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RegionReferenceCountList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRegionReferenceCounts\n      x-ds-method: GetRegionReferenceCounts\n      x-ds-service: Regions\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/roles:\n    get:\n      tags:\n      - Roles\n      summary: Gets roles.\n      description: \"Returns a list of roles associated with a company account.\\n\\n\\\n        ## Permissions \\n\\nAny user with a valid access token can call this method.\"\n      operationId: Get Roles\n      parameters:\n      - name: onlyAssignable\n        in: query\n        description: (Optional) When set to **true**, returns only the roles that\n          the current user can assign to someone else. The default value is **false**.\n        schema:\n          type: boolean\n          default: false\n      - name: filter\n        in: query\n        description: \"(Optional) A search filter that returns roles by the beginning\\\n          \\ of the role name. You can enter the beginning of the role name only to\\\n          \\ return all of the roles that begin with the text that you entered. \\n\\n\\\n          For example, if your company has set up roles such as Manager Beginner,\\\n          \\ Manager Pro, Agent Expert, and Agent Superstar, you could enter `Manager`\\\n          \\ to return all of the Manager roles (Manager Beginner and Manager Pro).\\n\\\n          \\n**Note**: You do not enter a wildcard (*) at the end of the name fragment.\"\n        schema:\n          type: string\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position of the result\n          set. The default value is 0.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Roles successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoleSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoleSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoles\n      x-ds-method: GetRoles\n      x-ds-service: Roles\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - Roles\n      summary: Creates a role.\n      description: |-\n        Creates a new company role in Rooms Version 6.\n\n        ## Permissions\n\n        To use this method, you must have the `canManageAccount` permission set to **true**.\n      operationId: Create Role\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the role that you want to create.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/RoleForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/RoleForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/RoleForCreate'\n        required: false\n      responses:\n        201:\n          description: Role successfully created.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Role'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateRole\n      x-ds-method: CreateRole\n      x-ds-service: Roles\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/roles/{roleId}:\n    get:\n      tags:\n      - Roles\n      summary: Gets a role.\n      description: Returns details about a role, including the associated permissions.\n      operationId: Get Role\n      parameters:\n      - name: roleId\n        in: path\n        description: (Required) The id of the role.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: includeIsAssigned\n        in: query\n        description: (Optional) When set to **true**, the response includes the `isAssigned`\n          property, which specifies whether the role is currently assigned to any\n          users. The default is **false**.\n        schema:\n          type: boolean\n          default: false\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Role successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Role'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRole\n      x-ds-method: GetRole\n      x-ds-service: Roles\n      x-ds-in-sdk: true\n    put:\n      tags:\n      - Roles\n      summary: Updates a role.\n      description: |-\n        Modifies the specified company role in Rooms Version 6.\n\n        ## Permissions\n\n        To use this method, you must have the `canManageAccount` permission set to **true**.\n      operationId: Update Role\n      parameters:\n      - name: roleId\n        in: path\n        description: (Required) The id of the role to update.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The details to use for the update.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/RoleForUpdate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleForUpdate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/RoleForUpdate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/RoleForUpdate'\n        required: false\n      responses:\n        200:\n          description: Role successfully updated.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Role'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: UpdateRole\n      x-ds-method: UpdateRole\n      x-ds-service: Roles\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Roles\n      summary: Deletes a role.\n      description: \"Deletes a role from a company account in Rooms Version 6.\\n\\n\\\n        ## Permissions \\n\\nTo use this method, you must have the `canManageAccount`\\\n        \\ permission set to **true**.\"\n      operationId: Delete Role\n      parameters:\n      - name: roleId\n        in: path\n        description: (Required) The id of the role to delete.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Role successfully deleted.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteRole\n      x-ds-method: DeleteRole\n      x-ds-service: Roles\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/field_data:\n    get:\n      tags:\n      - Rooms\n      summary: Gets a room's field data.\n      description: |-\n        Returns the field data associated with a room. This is the information that appears on the room's **Details** tab.\n\n        To better understand the room's field data, use the [Rooms::GetRoomFieldSet](/rooms-api/reference/Rooms/Rooms/GetRoomFieldSet) method to retrieve the set of fields that the room uses.\n      operationId: Get Room Field Data\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Field data successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FieldData'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldData'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FieldData'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoomFieldData\n      x-ds-method: GetRoomFieldData\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n    put:\n      tags:\n      - Rooms\n      summary: Updates a room's field data.\n      description: |-\n        This method lets you update one or more fields in a room's field data, the information that appears in the room's **Details** tab. To better understand the room's field data, use the [Rooms::GetRoomFieldSet](/rooms-api/reference/Rooms/Rooms/GetRoomFieldSet) method to retrieve the set of fields that the room uses.\n\n        To get the current values of a room's field data, use [Rooms::GetRoomFieldData](/rooms-api/reference/Rooms/Rooms/GetRoomFieldData).\n\n        For example, to update the \"Tax annual amount\" and Buyer1's name fields in a room, you would use a request body that looks like this:\n\n        ```\n        {\n          \"data\": {\n            \"taxAnnualAmount\": 3389.12,\n            \"buyer1\": {\n              \"name\": \"Elizabeth Bennet\"\n            }\n          }\n        }\n        ```\n\n        If successful, the response body will have the same contents as the request body.\n\n\n        All of the fields must be updated successfully for the method to succeed.\n        For example, if you were to set the tax amount to a negative number,\n        the method will fail and none of the fields will be updated.\n      operationId: Update Room Field Data\n      parameters:\n      - name: roomId\n        in: path\n        description: The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The field data to update. When updating field data, specify only the fields being updated.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/FieldDataForUpdate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FieldDataForUpdate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FieldDataForUpdate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/FieldDataForUpdate'\n        required: false\n      responses:\n        200:\n          description: Field data successfully updated.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FieldData'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldData'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FieldData'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: UpdateRoomFieldData\n      x-ds-method: UpdateRoomFieldData\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}/room_folders:\n    get:\n      tags:\n      - RoomFolders\n      summary: Gets a list of room folders accessible to the current user.\n      description: Gets a list of room folders in the specified room that are accessible\n        to the current user.\n      operationId: Get Room Folders\n      parameters:\n      - name: roomId\n        in: path\n        description: The room id from which to retrieve folders.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: startPosition\n        in: query\n        description: Position of the first item in the total results. Defaults to\n          0.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: count\n        in: query\n        description: Number of room folders to return. Defaults to the maximum which\n          is 100.\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Room folders successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomFolderList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomFolderList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomFolderList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoomFolders\n      x-ds-method: GetRoomFolders\n      x-ds-service: RoomFolders\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/forms:\n    post:\n      tags:\n      - Rooms\n      summary: Adds a form to a room.\n      description: |-\n        Adds a form to a room.\n\n        You specify the form that you want to add in the `formForAdd` request body. To find the id of the form that you want to add, use the [FormsLibraries::GetFormLibraryForms method][GetFormLibraryForms].\n\n        [GetFormLibraryForms]: https://developers.docusign.com/docs/rooms-api/reference/Forms/FormLibraries/GetFormLibraryForms/\n        ## Permissions\n\n        **Rooms Version 5**: You must be Admin to use this method.\n\n        **Rooms Version 6**: You must have a role for which the `canAddDocumentsFromFormLibraries` permission is set to **true**.\n      operationId: Add Form To Room\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room to which you want to add the form.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the form that you want to add.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/FormForAdd'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormForAdd'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FormForAdd'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/FormForAdd'\n        required: false\n      responses:\n        200:\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n        201:\n          description: The DocuSign Form was successfully added to the room\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: AddFormToRoom\n      x-ds-method: AddFormToRoom\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}/users:\n    get:\n      tags:\n      - Rooms\n      summary: Gets a room's users.\n      description: This method returns a list of users associated with a room.\n      operationId: Get Room Users\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The index position within the total result set from\n          which to start returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: filter\n        in: query\n        description: \"(Optional) A search filter that returns users by the beginning\\\n          \\ of the user's first name, last name, or email address. You can enter the\\\n          \\ beginning of the name or email only to return all of the users whose names\\\n          \\ or email addresses begin with the text that you entered. \\n\\n**Note**:\\\n          \\ You do not enter a wildcard (*) at the end of the name or email fragment.\"\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: \"(Optional) The order in which to return results. Valid values\\\n          \\ are:\\n\\n- `firstNameAsc`: Sort on first name in ascending order. \\n- `firstNameDesc`:\\\n          \\  Sort on first name in descending order. \\n- `lastNameAsc`: Sort on last\\\n          \\ name in ascending order. \\n- `lastNameDesc`: Sort on last name in descending\\\n          \\ order. This is the default value.\"\n        schema:\n          type: string\n          enum:\n          - FirstNameAsc\n          - LastNameAsc\n          - EmailAsc\n          - FirstNameDesc\n          - LastNameDesc\n          - EmailDesc\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: The room user was successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomUsersResult'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomUsersResult'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomUsersResult'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        404:\n          description: The room was not found.\n          content: {}\n      x-ds-methodname: GetRoomUsers\n      x-ds-method: GetRoomUsers\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - Rooms\n      summary: Invites a user to a room.\n      description: |-\n        This method invites an existing or new member to a specific room.\n\n        You can invite anyone to join a room by specifying their email address.\n      operationId: Invite User to Room\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The information to use for the invitation.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/RoomInvite'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoomInvite'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/RoomInvite'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/RoomInvite'\n        required: false\n      responses:\n        200:\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomInviteResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomInviteResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomInviteResponse'\n        201:\n          description: 'The user was successfully invited to the '\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomInviteResponse'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomInviteResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomInviteResponse'\n        400:\n          description: 'The user could not be invited to the '\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: InviteUser\n      x-ds-method: InviteUser\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}/users/{userId}:\n    put:\n      tags:\n      - Rooms\n      summary: Updates a room user.\n      description: |-\n        You can use this method to update the following information for a room user:\n\n        - `roleId`\n        - `transactionSideId`\n\n        In the console, this is the **Side and role** information that appears in the room's **People** tab. You specify the information that you want to update in the `roomUserForUpdate` request body.\n\n        ## Permissions\n\n        **Rooms Version 6**: Only the person who invited the room user to the room can update the room user.\n\n        **Rooms Version 5**: The following permissions apply in Rooms Version 5:\n\n        - The person who invited the room user to the room can update the room user.\n        - Any room owner can update any room user.\n        - A Manager who has the `CanManageCompanyRooms` permission and who manages the person who invited the room user can update the room user.\n      operationId: Put Room User\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: userId\n        in: path\n        description: (Required) The id of the user to update.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: This request object contains the information that you want to update for the room user.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/RoomUserForUpdate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoomUserForUpdate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/RoomUserForUpdate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/RoomUserForUpdate'\n        required: false\n      responses:\n        200:\n          description: The room user was successfully updated.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomUser'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomUser'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomUser'\n        400:\n          description: The room user could not be updated.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: PutRoomUser\n      x-ds-method: PutRoomUser\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}/users/{userId}/revoke_access:\n    post:\n      tags:\n      - Rooms\n      summary: Revokes the specified user's access to the room.\n      description: \"Revokes the specified user's access to the room. If successful,\\\n        \\ the HTTP result is 204 (No content), and the response is empty.\\n\\nTo revoke\\\n        \\ access immediately, leave the request body empty.\\n\\nTo revoke access on\\\n        \\ a specific date, use the request body to specify a date. \\n\\n**Note** If\\\n        \\ a user doesn't have access to a room, and you revoke their access at a future\\\n        \\ date, the user will be granted access until the revocation date.\"\n      operationId: Revoke Room User Access\n      parameters:\n      - name: roomId\n        in: path\n        description: The room Id to revoke access from\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: userId\n        in: path\n        description: The user Id getting revoked from the room\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details for removal.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/RoomUserRemovalDetail'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoomUserRemovalDetail'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/RoomUserRemovalDetail'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/RoomUserRemovalDetail'\n        required: false\n      responses:\n        204:\n          description: The room user's access was successfully revoked.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RevokeRoomUserAccess\n      x-ds-method: RevokeRoomUserAccess\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}/users/{userId}/restore_access:\n    post:\n      tags:\n      - Rooms\n      summary: Restores the specified user's access to the room.\n      description: Restores the specified user's access to the room.\n      operationId: Restore Room User Access\n      parameters:\n      - name: roomId\n        in: path\n        description: The room Id to restore access\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: userId\n        in: path\n        description: The user Id getting restored to the room\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: The room user's access was successfully restored.\n          content: {}\n        400:\n          description: The room user's access could not be restored.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RestoreRoomUserAccess\n      x-ds-method: RestoreRoomUserAccess\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms:\n    get:\n      tags:\n      - Rooms\n      summary: Returns a list of rooms.\n      description: \"This method returns details about the rooms that the current user\\\n        \\ has permissions to view.\\n\\nThe `fieldDataChangedStartDate` and `fieldDataChangedEndDate`\\\n        \\ query parameters let you limit the results to rooms whose [field data](/rooms-api/reference/Rooms/Rooms/GetRoomFieldData)\\\n        \\ has changed within a range of dates. \\n\\nThe `roomClosedStartDate` and `roomClosedEndDate`\\\n        \\ query parameters let you limit the results to rooms that were closed within\\\n        \\ a range of dates. \\n\\n**Note**: By default, this method only returns open\\\n        \\ rooms. To return other rooms, use the `roomStatus` query parameter.\"\n      operationId: Get Rooms\n      parameters:\n      - name: count\n        in: query\n        description: (Optional) The number of results. When this property is used\n          as a request parameter specifying the number of results to return, the value\n          must be a number between 1 and 100 (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The index position within the total result set from\n          which to start returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: roomStatus\n        in: query\n        description: \"(Optional) The status of the room. Valid values are:\\n\\n- `active`:\\\n          \\ This is the default value.\\n- `pending`\\n- `open`: Includes both `active`\\\n          \\ and `pending` statuses.\\n- `closed`\\n\\nTo return rooms with multiple statuses,\\\n          \\ enter a comma-separated list of statuses. \\n\\nExample:\\n\\n`closed,open`\"\n        schema:\n          type: string\n          enum:\n          - Active\n          - Pending\n          - Closed\n          - Open\n      - name: officeId\n        in: query\n        description: (Optional) The id of the office.\n        schema:\n          type: integer\n          format: int32\n      - name: fieldDataChangedStartDate\n        in: query\n        description: |\n          (Optional) Starting date and time to filter rooms whose field data has changed after this date. Date and time is always given as UTC. If the time (`hh:mm:ss`) is omitted, it defaults to `00:00:00`.\n\n          Valid formats:\n\n          - `yyyy-mm-dd hh:mm:ss`\n          - `yyyy/mm/dd hh:mm:ss`\n\n          The default start date is the beginning of time.\n        schema:\n          type: string\n      - name: fieldDataChangedEndDate\n        in: query\n        description: |\n          (Optional) Ending date and time to filter rooms whose field data has changed before this date. Date and time is always given as UTC. If the time (`hh:mm:ss`) is omitted, it defaults to `00:00:00`.\n\n\n          Valid formats:\n\n          - `yyyy-mm-dd hh:mm:ss`\n          - `yyyy/mm/dd hh:mm:ss`\n\n          If this query parameter is omitted, the default end date is now.\n        schema:\n          type: string\n      - name: roomClosedStartDate\n        in: query\n        description: |\n          (Optional) Starting date and time to filter rooms that were closed this date. Date and time is always given as UTC. If the time (`hh:mm:ss`) is omitted, it defaults to `00:00:00`.\n\n          Valid formats:\n\n          - `yyyy-mm-dd hh:mm:ss`\n          - `yyyy/mm/dd hh:mm:ss`\n\n          The default start date is the beginning of time.\n        schema:\n          type: string\n      - name: roomClosedEndDate\n        in: query\n        description: |-\n          (Optional) Ending date and time to filter rooms that were closed before this date. Date and time is always given as UTC. If the time (`hh:mm:ss`) is omitted, it defaults to `00:00:00`.\n\n          Valid formats:\n\n          - `yyyy-mm-dd hh:mm:ss`\n          - `yyyy/mm/dd hh:mm:ss`\n\n          If this query parameter is omitted, the default end date is now.\n        schema:\n          type: string\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Rooms successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRooms\n      x-ds-method: GetRooms\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - Rooms\n      summary: Creates a room.\n      description: |-\n        This method creates a new room.\n\n        **Note**: To use this method, your company must have at least one office set up, and you must have permissions to create rooms.\n\n        In Rooms Version 5, you must be one of the following:\n\n        - An Admin\n        - A Manager with the individual-level `canManageCompanyRooms` permission set to **true**\n        - An Agent\n\n        **Note**: If this functionality isn't already activated for Admins, contact your DocuSign Account Manager to have it turned on.\n\n        ## Permissions\n\n        In Rooms Version 6, you must be assigned to a role that has the **Create Rooms** permission set to **true**.\n      operationId: Create Room\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the new room.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/RoomForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoomForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/RoomForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/RoomForCreate'\n        required: false\n      responses:\n        201:\n          description: Room successfully created.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Room'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateRoom\n      x-ds-method: CreateRoom\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}:\n    get:\n      tags:\n      - Rooms\n      summary: Gets a room.\n      description: This method returns details about a specific room.\n      operationId: Get Room\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: includeFieldData\n        in: query\n        description: (Optional) When set to **true**, the response includes the field\n          data from the room. This is the information that appears on the room's **Details**\n          tab.\n        schema:\n          type: boolean\n          default: false\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Room successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/Room'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Room'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoom\n      x-ds-method: GetRoom\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n    delete:\n      tags:\n      - Rooms\n      summary: Deletes a room.\n      description: |-\n        This method deletes a room.\n\n        **Note**: To use this method, you must have permissions to delete rooms.\n\n        In Rooms v5, you must be one of the following:\n\n        - An Admin\n        - A Manager with the individual-level `canDeleteCompanyRooms` permission set to **true**\n        - An Agent with the role-level **Agents can delete Rooms** permission set to **true**\n\n        In Rooms v6, you must be assigned a role that has the **Delete Owned Rooms** permission set to **true** in the console. If you manage other members, this permission also enables you to delete rooms that are owned by the users that you manage.\n      operationId: Delete Room\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Room successfully deleted.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteRoom\n      x-ds-method: DeleteRoom\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/assignable_roles:\n    get:\n      tags:\n      - Rooms\n      summary: Gets assignable room-level roles in v6.\n      description: |-\n        This method returns the room-level roles that the current user can assign to the members that they invite to a room.\n\n        **Note**: This method works only for Rooms v6 and only returns roles that have `isExternal` set to **true**.\n      operationId: Rooms Get Assignable Roles\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: assigneeEmail\n        in: query\n        description: (Optional) The email address of a specific member. Using this\n          parameter returns only the roles that the current user can assign to the\n          member with that email address.\n        schema:\n          type: string\n      - name: filter\n        in: query\n        description: |-\n          (Optional) A search filter that returns assignable roles by the beginning of the role name.\n\n          **Note**: You do not enter a wildcard (*) at the end of the name fragment.\n        schema:\n          type: string\n      - name: startPosition\n        in: query\n        description: (Optional) The index position within the total result set from\n          which to start returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Assignable roles successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/AssignableRoles'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssignableRoles'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/AssignableRoles'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetAssignableRoles\n      x-ds-method: GetAssignableRoles\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/documents:\n    get:\n      tags:\n      - Rooms\n      summary: Gets a list of documents in a room.\n      description: This method returns a list of documents that the current user can\n        access for a specific room.\n      operationId: Rooms Get Documents\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The index position within the total result set from\n          which to start returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Documents successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomDocumentList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocumentList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocumentList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetDocuments\n      x-ds-method: GetDocuments\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - Rooms\n      summary: Adds a document to a room.\n      description: |+\n        Adds a document to a room.\n\n        The following properties in the request body are required. The `folderId` property is optional. All other properties are ignored.\n\n        - `name`\n        - `base64Contents`\n\n        If a document with the specified name already exists, a counter is added to the name to make it unique.\n\n        For example, to create a document named **hello.txt** that contains the text `hello, world`, the body of your request would look like this:\n\n        ```\n        {\n          \"name\": \"hello.txt\",\n          \"base64Contents\": \"aGVsbG8sIHdvcmxkCg==\"\n        }\n        ```\n\n      operationId: Add Document ToRoom\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Contains information about a document.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: false\n      responses:\n        201:\n          description: Document successfully added.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: AddDocumentToRoom\n      x-ds-method: AddDocumentToRoom\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/rooms/{roomId}/documents/contents:\n    post:\n      tags:\n      - Rooms\n      summary: Uploads the contents of a file as a document to a room.\n      description: |-\n        This method uploads the contents of file as a room document for the room that you specify.\n\n        This is a multipart form request. You must include the following headers:\n\n        - `Content-Type: multipart/form-data` (with a `boundary`)\n        - `Content-Disposition: form-data`\n        - `Content-Disposition: file` (with the `filename`)\n\n        For an example and more information, see [Multipart Form Requests](https://developers.docusign.com/esign-rest-api/guides/requests-and-responses#multipart-form-requests).\n      operationId: Add Document To Room Via File Upload\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Document Content\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  description: \"Document\"\n                  format: binary\n      responses:\n        201:\n          description: Document successfully added.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomDocument'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: AddDocumentToRoomViaFileUpload\n      x-ds-method: AddDocumentToRoomViaFileUpload\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/picture:\n    put:\n      tags:\n      - Rooms\n      summary: Updates the picture for a room.\n      description: \"Updates the photo for a room.\\n\\n## Supported file types\\n\\nThe\\\n        \\ API supports the following file types:\\n\\n- jpg/jpeg\\n- png\\n- tiff\\n- gif\\n\\\n        \\n## File size limit\\n\\nThe file size limit is approximately 40 MB.\\n\\n##\\\n        \\ Supported content types\\n\\nThis endpoint supports the following content\\\n        \\ types: \\n\\n## JSON\\n\\nTo submit a picture by using JSON, set the `Content-Type`\\\n        \\ header to `application/json` and provide a `pictureForUpdate` object.\\n\\n\\\n        You can also set the `Content-Transfer-Encoding` header to `base64` to indicate\\\n        \\ that the image is formatted as base64 instead of binary.\\n\\nExample:\\n\\n\\\n        **Header**: `Content-Type`: `application/json`\\n\\n**Request body content to\\\n        \\ include**:\\n\\n```\\n\\\"pictureForUpdate\\\":\\n  {\\n    \\\"fileName\\\":\\\"string\\\"\\\n        , \\n    \\\"base64Contents\\\":\\\"string\\\"\\n  }\\n\\n```\\n\\n## Multipart form data\\n\\\n        \\nYou can also submit multipart form data with parts that contain the image.\\\n        \\ Multipart uploads remove the need to encode images in base64 format.\\n\\n\\\n        For details, see [Multipart Form Requests](https://developers.docusign.com/esign-rest-api/guides/requests-and-responses#multipart-form-requests).\\n\\\n        \\n\\n## Other streamed binary content type\\n\\nYou can also use any other streamed\\\n        \\ binary content type, but you must include either the query parameter `fileName`\\\n        \\ or the `Content-Disposition` `filename` request header.\\n\\nExample:\\n\\n\\\n        **Header**: `Content-Disposition: file; filename=\\\"123sesamest.jpg\\\"`\"\n      operationId: Update Picture\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room for which you are updating the\n          picture.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Image content\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  description: \"Image\"\n                  format: binary\n      responses:\n        200:\n          description: Picture successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomPicture'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: UpdatePicture\n      x-ds-method: UpdatePicture\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/field_set:\n    get:\n      tags:\n      - Rooms\n      summary: Gets the field set for a room.\n      description: |-\n        Returns the field set that a room uses. This is the set of fields that appears on the room's **Details** tab in the console, such as `contactName` and `phone`.\n\n        You can use this method to gain a better understanding of the room field data retrieved with the [Rooms::GetRoomFieldData](/rooms-api/reference/Rooms/Rooms/GetRoomFieldData) method, and to determine the fields for which you can provide data when you create a new room.\n\n        ## Permissions\n\n        Anyone in the room can call this method.\n      operationId: Get Room Field Set\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The id of the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: FieldSet successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/FieldSet'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldSet'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FieldSet'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoomFieldSet\n      x-ds-method: GetRoomFieldSet\n      x-ds-service: Rooms\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/rooms/{roomId}/task_lists:\n    get:\n      tags:\n      - TaskLists\n      summary: Gets task lists for a room.\n      description: \"Returns the task lists associated with a room.\\n\\n## Permissions\\n\\\n        \\n**Rooms Version 6**: You must either be a member of the room who has been\\\n        \\ added to one or more tasks, or have one of the following permissions set\\\n        \\ to **true**: \\n\\n- `canAddTasksToAnyTaskLists`\\n- `canApplyTaskList`\\n-\\\n        \\ `canRemoveAnyTaskList`\\n- `canSubmitTaskList`\\n- `canReviewTaskList`\\n\\n\\\n        **Note**: If a room has multiple tasks lists, you only see the task lists\\\n        \\ that contain tasks to which you have been added.\\n\\n**Rooms Version 5**:\\\n        \\ You must be room owner, a member of the room who has been added to one or\\\n        \\ more tasks, or be a Manager for whom the `canManageCompanyRooms` permission\\\n        \\ is set to *true*.\"\n      operationId: Get Task Lists\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The id of the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Task lists successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/TaskListSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskListSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskListSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTaskLists\n      x-ds-method: GetTaskLists\n      x-ds-service: TaskLists\n      x-ds-in-sdk: true\n    post:\n      tags:\n      - TaskLists\n      summary: Applies a task list to a room.\n      description: \"Applies a task list to a room, based on the `taskTemplateId` that\\\n        \\ you specify in the `taskList` request body.\\n\\n**Note**: You must first\\\n        \\ create a task list template in the console. You cannot create a task list\\\n        \\ template by using the API at this time. To get the `taskListTemplateId`,\\\n        \\ use the \\tTaskListTemplates::GetTaskListTemplates method.\\n\\n## Permissions\\n\\\n        \\n**Rooms Version 6**: You must have the `canApplyTaskList` permission set\\\n        \\ to **true**.\\n\\n**Rooms Version 5**: You must either be the owner or co-owner\\\n        \\ of the room or have a Manager role for which the `canManageCompanyRooms`\\\n        \\ permission is set to **true**.\"\n      operationId: Create Task List\n      parameters:\n      - name: roomId\n        in: path\n        description: (Required) The id of the room.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about the task list template to use to create the new task list.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/TaskListForCreate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TaskListForCreate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/TaskListForCreate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/TaskListForCreate'\n        required: false\n      responses:\n        201:\n          description: Task lists successfully created.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: CreateTaskList\n      x-ds-method: CreateTaskList\n      x-ds-service: TaskLists\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/room_templates:\n    get:\n      tags:\n      - RoomTemplates\n      summary: Gets room templates.\n      description: |+\n        This method returns a list of room templates that the user can use to create a new room. The response includes company and region-level templates.\n\n      operationId: Get Room Templates\n      parameters:\n      - name: officeId\n        in: query\n        description: \"(Optional) The ID of the office for which the user wants to\\\n          \\ create a room. When you pass in a value for this parameter, only room\\\n          \\ templates that are valid for that office appear in the results. For users\\\n          \\ who are not Admins, the default is the id of the user's default office.\\n\\\n          However, you can specify a value if the user belongs to multiple offices.\\n\\\n          \\nIf the user is an Admin, set the `forAdmin` search parameter to **true**\\\n          \\ instead and omit the `officeId` parameter. \"\n        schema:\n          type: integer\n          format: int32\n      - name: onlyAssignable\n        in: query\n        description: (Optional) When set to **true**, returns only the roles that\n          the current user can assign to someone else. The default value is **false**.\n        schema:\n          type: boolean\n          default: false\n      - name: onlyEnabled\n        in: query\n        description: When set to true, only returns room templates that are not disabled.\n        schema:\n          type: boolean\n          default: true\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: startPosition\n        in: query\n        description: (Optional) The index position within the total result set from\n          which to start returning values. The default value is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Successfully retrieved room templates for the caller\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/RoomTemplatesSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoomTemplatesSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/RoomTemplatesSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetRoomTemplates\n      x-ds-method: GetRoomTemplates\n      x-ds-service: RoomTemplates\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/task_lists/{taskListId}:\n    delete:\n      tags:\n      - TaskLists\n      summary: Deletes a task list from a room.\n      description: \"Deletes the specified task list from a room. If there are attached\\\n        \\ documents, they will remain in the associated room.\\n\\n## Permissions\\n\\n\\\n        **Rooms Version 6**: You must have the `canRemoveAnyTaskList` permission set\\\n        \\ to **true**: \\n\\n\\n**Rooms Version 5**: You must either be the owner or\\\n        \\ co-owner of the room or have a Manager/Admin role for which the `canManageCompanyRooms`\\\n        \\ permission is set to true.\\n\"\n      operationId: Delete Task List\n      parameters:\n      - name: taskListId\n        in: path\n        description: The id of the task list.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: Task list successfully deleted.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: DeleteTaskList\n      x-ds-method: DeleteTaskList\n      x-ds-service: TaskLists\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/task_list_templates:\n    get:\n      tags:\n      - TaskListTemplates\n      summary: Gets task list templates.\n      description: |+\n        Returns all task list templates associated with the active user's company.\n\n        ## Permissions\n\n        Anyone with a valid access token can call this method.\n\n      operationId: Get Task List Templates\n      parameters:\n      - name: startPosition\n        in: query\n        description: (Optional) The starting zero-based index position from which\n          to start returning values. The default is `0`.\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: count\n        in: query\n        description: (Optional) The number of results to return. This value must be\n          a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 'Successfully returned list of task list '\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/TaskListTemplateList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskListTemplateList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TaskListTemplateList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetTaskListTemplates\n      x-ds-method: GetTaskListTemplates\n      x-ds-service: TaskListTemplates\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/users:\n    get:\n      tags:\n      - Users\n      summary: Gets a list of users.\n      description: Returns a list of users associated with an account based on the\n        criteria that you specify.\n      operationId: Get Users\n      parameters:\n      - name: filter\n        in: query\n        description: \"(Optional) Filters results by name and email address. This is\\\n          \\ a  \\\"starts with\\\" filter, which means that you can enter only the beginning\\\n          \\ of a name or email address. \\n\\n**Note**: You do not use a wildcard with\\\n          \\ this filter.\"\n        schema:\n          type: string\n      - name: sort\n        in: query\n        description: |-\n          (Optional) Specifies how to sort the results. Valid values are:\n\n          - `FirstNameAsc`\n          - `LastNameAsc`\n          - `EmailAsc`\n          - `FirstNameDesc`\n          - `LastNameDesc`\n          - `EmailDesc`\n        schema:\n          type: string\n          enum:\n          - FirstNameAsc\n          - LastNameAsc\n          - EmailAsc\n          - FirstNameDesc\n          - LastNameDesc\n          - EmailDesc\n      - name: defaultOfficeId\n        in: query\n        description: (Optional) Filters for users who have this office id as their\n          default office id.\n        schema:\n          type: integer\n          format: int32\n      - name: accessLevel\n        in: query\n        description: \"(Optional) Filters for users who have the specified access level.\\\n          \\ A user's access level and role determine the types of resources and actions\\\n          \\ that are available to them.\\n\\nValid values are:\\n- Company: Users with\\\n          \\ this access level can administer resources across the company.\\n- Region:\\\n          \\ Users with this access level can administer offices and other resources\\\n          \\ within their regions. \\n- Office: Users with this access level can administer\\\n          \\ resources within their offices.\\n- Contributor: Users with this access\\\n          \\ level can only administer their own resources.\\n\\n**Note**: In requests,\\\n          \\ the values that you may use for this property depend on your permissions\\\n          \\ and whether you can add users at your access level or lower. This property\\\n          \\ applies only to Rooms Version 6. \"\n        schema:\n          type: string\n          enum:\n          - Contributor\n          - Office\n          - Region\n          - Company\n          - Admin\n      - name: titleId\n        in: query\n        description: (Optional) For Rooms Version 5 only, filters for users whose\n          managers have the specified `titleId`.\n        schema:\n          type: integer\n          format: int32\n      - name: roleId\n        in: query\n        description: (Optional) For Rooms Version 6 only, filters for users who have\n          the specified `roleId`.\n        schema:\n          type: integer\n          format: int32\n      - name: status\n        in: query\n        description: |-\n          (Optional) Filters for users who have the specified `status`.\n\n          Valid values are:\n\n          - `Active`: The user is active.\n          - `Pending`: The user has been invited but has not yet accepted the invitation.\n        schema:\n          type: string\n          enum:\n          - Active\n          - Pending\n      - name: lockedOnly\n        in: query\n        description: (Optional) When set to **true**, filters for users whose accounts\n          are locked.\n        schema:\n          type: boolean\n      - name: startPosition\n        in: query\n        description: '(Optional) The starting zero-based index position within the\n          result set from which to begin the response. The default is `0`. '\n        schema:\n          type: integer\n          format: int32\n          default: 0\n      - name: count\n        in: query\n        description: (Optional) The maximum number of users to return in the response.\n          This value must be a number between `1` and `100` (default).\n        schema:\n          type: integer\n          format: int32\n          default: 100\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: Users information successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/UserSummaryList'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSummaryList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserSummaryList'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetUsers\n      x-ds-method: GetUsers\n      x-ds-service: Users\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/users/{userId}:\n    get:\n      tags:\n      - Users\n      summary: Gets a user.\n      description: Returns details about the specified user.\n      operationId: Get User\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: User information successfully retrieved.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: GetUser\n      x-ds-method: GetUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\n    put:\n      tags:\n      - Users\n      summary: Updates a user's default office.\n      description: |-\n        Changes a user's default office. This is the office to which the user belongs  by default.\n\n        ## Permissions\n\n        You must also have the correct **Member Management** permissions to update the user.\n\n        **Rooms Version 5**: `canManageCompanyMembers` must be set to **true**.\n\n        **Rooms Version 6**: You must have at least one of the following permissions set to **true**, depending on the level of the user that you want to update:\n\n        - `canManageMemberLowerAccessLevel`: Users can modify other users who have a lower access level than their own (in offices or regions that they oversee).\n        - `canManageMemberSameAccessLevel`: Users can modify other users who have the same access level as their own (in offices or regions that they oversee or belong to).\n      operationId: Update User\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: 'This request object contains the information to use to update a user''s default office. '\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/UserForUpdate'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserForUpdate'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UserForUpdate'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/UserForUpdate'\n        required: false\n      responses:\n        200:\n          description: User information successfully updated.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: UpdateUser\n      x-ds-method: UpdateUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n    delete:\n      tags:\n      - Users\n      summary: Removes a user from a company account.\n      description: \"Removes the specified user from the specified account.\\n\\n## Permissions\\n\\\n        \\nTo remove a user who has a lower access level, you must have the `canRemoveCompanyMemberLowerAccessLevel`\\\n        \\ permission set to **true**. \\n\\nTo remove a user who has the same access\\\n        \\ level, you must have the `canRemoveCompanyMemberSameAccessLevel` permission\\\n        \\ set to **true**. \"\n      operationId: Remove User\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: The User was successfully removed.\n          content: {}\n        400:\n          description: The User could not be removed.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RemoveUser\n      x-ds-method: RemoveUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/users/invite_user:\n    post:\n      tags:\n      - Users\n      summary: Invites a user to a v6 company account.\n      description: |\n        Invites a new user to join a company account on Rooms Version 6. You specify the custom role and access level that you want to give to the user in the `invitee` request body.\n\n        ## Permissions\n\n        To invite users to a company in Rooms Version 6, you must be either a Default Admin or another authorized user who has access to all of the locations to which the new user is being invited and one of the following `userPermissions` set to **true**:\n\n        - `canAddMemberAndSetRoleLowerAccessLevel`: Users can add other users who have a lower access level than their own and set those users' roles (in offices or regions that they oversee).\n        - `canAddMemberAndSetRoleSameAccessLevel`: Users can add other users who have the same access level as their own or lower and set those users' roles (in offices or regions that they oversee or belong to).\n\n        **Important**: Before you invite users in the Rooms Version 6, we strongly recommend that you set up custom roles for your company. If you do not, all new users will be added as administrators. For more information, see [Roles][Roles].\n\n        [Roles]: https://developers.docusign.com/docs/rooms-api/reference/Roles/Roles/\n\n        **Note**:  This method is used only with Rooms v6. To invite a user in Rooms v5, see the following Members methods:\n\n        - [InviteClassicAdmin][InviteClassicAdmin]\n        - [InviteClassicAgent][InviteClassicAgent]\n        - [InviteClassicManager][InviteClassicManager]\n\n        [InviteClassicAdmin]:   https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteClassicAdmin/\n        [InviteClassicAgent]:   https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteClassicAgent/\n        [InviteClassicManager]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteClassicManager/\n      operationId: Invite User to Account\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The id of the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about the user that you are inviting.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/UserToInvite'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserToInvite'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UserToInvite'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/UserToInvite'\n        required: false\n      responses:\n        201:\n          description: User successfully invited.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: InviteUser\n      x-ds-method: InviteUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/invite_classic_admin:\n    post:\n      tags:\n      - Users\n      summary: Invites a user to a v5 company account as an Admin.\n      description: |\n        Invites a new user to join a company account on Rooms Version 5 as an Admin.\n\n        To invite users to a company in Rooms Version 5, you must either be an Admin or a Manager for whom the `canManageCompanyMembers` permission is set to **true**.\n\n        **Note**: If you are using Rooms Version 6, use the [Users::InviteUser][UsersInviteUser] method instead.\n\n        [UsersInviteUser]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteUser/```\n      operationId: Invite Classic Admin\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the person who you want to invite.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/ClassicAdminToInvite'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClassicAdminToInvite'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ClassicAdminToInvite'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/ClassicAdminToInvite'\n        required: false\n      responses:\n        201:\n          description: User successfully invited.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: InviteClassicAdmin\n      x-ds-method: InviteClassicAdmin\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/invite_classic_manager:\n    post:\n      tags:\n      - Users\n      summary: Invites a user to a v5 company account as a Manager.\n      description: |\n        Invites a new user to join a company account on Rooms Version 5 as a Manager.\n\n        To invite users to a company in Rooms Version 5, you must either be an Admin or a Manager for whom the `canManageCompanyMembers` permission is set to **true**.\n\n        **Note**: If you are using Rooms Version 6, use the [Users_InviteUser][UsersInviteUser] method instead.\n\n        [UsersInviteUser]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteUser/```\n      operationId: InviteClassic Manager\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the person who you want to invite.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/ClassicManagerToInvite'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClassicManagerToInvite'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ClassicManagerToInvite'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/ClassicManagerToInvite'\n        required: false\n      responses:\n        201:\n          description: User successfully invited.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: InviteClassicManager\n      x-ds-method: InviteClassicManager\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/invite_classic_agent:\n    post:\n      tags:\n      - Users\n      summary: Invites a user to a v5 company account as an Agent.\n      description: |\n        Invites a new user to join a company account on Rooms Version 5 as an Agent.\n\n        To invite users to a company in Rooms Version 5, you must either be an Admin or a Manager for whom the `canManageCompanyMembers` permission is set to **true**.\n\n        **Note**: If you are using Rooms Version 6, use the [Users_InviteUser][UsersInviteUser] method instead.\n\n        [UsersInviteUser]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/InviteUser/```\n      operationId: Invite Classic Agent\n      parameters:\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about the person who you want to invite.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/ClassicAgentToInvite'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClassicAgentToInvite'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/ClassicAgentToInvite'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/ClassicAgentToInvite'\n        required: false\n      responses:\n        201:\n          description: User successfully invited.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: InviteClassicAgent\n      x-ds-method: InviteClassicAgent\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/{userId}/reinvite:\n    post:\n      tags:\n      - Users\n      summary: Reinvites a user to join a company account.\n      description: |-\n        Reinvites an unactivated user to join a company account. You can use this method with either Rooms Version 5 or Rooms Version 6.\n\n        Invitations expire after 30 days and can no longer be accepted. Use this method to send a new copy of an invitation to a pending user.\n      operationId: Reinvite User\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: User successfully reinvited.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: ReinviteUser\n      x-ds-method: ReinviteUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\n  /v2/accounts/{accountId}/users/{userId}/add_to_office:\n    post:\n      tags:\n      - Users\n      summary: Adds a user to an office.\n      description: |-\n        Adds an existing user to a single office. You specify the office to which you want to add the user in the `designatedOffice` request body.\n\n        To add a user to multiple offices, you must make this call separately for each office.\n\n        **Note**: The `accessLevel` of the user that you are adding must be `contributor` or `office`.\n\n        ## Permissions\n\n        You must also have the correct **Member Management** permissions.\n\n        **Rooms Version 5**: `canManageCompanyMembers` must be set to **true**.\n\n        **Rooms Version 6**: You must have at least one of the following permissions set to **true**, depending on the level of the user that you want to add or remove:\n\n        - `canManageMemberLowerAccessLevel`: Users can add and remove other users who have a lower access level than their own (in offices or regions that they oversee) from a region or office. They can also modify those users.\n        - `canManageMemberSameAccessLevel`: Users can add and remove other users who have the same access level as their own (in offices or regions that they oversee or belong to) from a region or office.  They can also modify those users.\n      operationId: Add User To Office\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about the office that you want to add a member to or remove a member from.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n        required: false\n      responses:\n        204:\n          description: User successfully added to the office.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: AddUserToOffice\n      x-ds-method: AddUserToOffice\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/{userId}/remove_from_office:\n    post:\n      tags:\n      - Users\n      summary: Removes a user from an office.\n      description: |-\n        Removes a user from a single office. You specify the office from which you want to remove the user in the `designatedOffice` request body.\n\n        The user still maintains their other office, region, company, and account associations.\n\n        **Note**: You cannot remove a user from their default office. You must first assign the user a different default office by using the [Users::updateUser][updateUser] method.\n\n        [updateUser]: https://developers.docusign.com/docs/rooms-api/reference/Users/Users/UpdateUser/\n\n        ## Permissions\n\n        You must have the correct **Member Management** permissions.\n\n        **Rooms Version 5**: `canManageCompanyMembers` must be set to **true**.\n\n        **Rooms Version 6**: You must have at least one of the following permissions set to **true**, depending on the level of the user that you want to add or remove:\n\n        - `canManageMemberLowerAccessLevel`: Users can add or remove other users who have a lower access level than their own (in offices or regions that they oversee) from a region or office.\n        - `canManageMemberSameAccessLevel`: Users can modify other users who have the same access level as their own (in offices or regions that they oversee or belong to) from a region or office.\n      operationId: Remove User From Office\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about the office that you want to add a member to or remove a member from.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedOffice'\n        required: false\n      responses:\n        204:\n          description: User successfully removed from the office.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RemoveUserFromOffice\n      x-ds-method: RemoveUserFromOffice\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/{userId}/add_to_region:\n    post:\n      tags:\n      - Users\n      summary: Adds a user to a region.\n      description: |-\n        Adds an existing user to a region. You specify the region to which you want to add the user in the `designatedRegion` request body.\n\n        To add a user to multiple regions, you must make this call separately for each region.\n\n        **Note**: The `accessLevel` of the user that you are adding must be `region`.\n\n        ## Permissions\n\n        You must also have the correct **Member Management** permissions.\n\n        **Rooms Version 5**: `canManageCompanyMembers` must be set to **true**.\n\n        **Rooms Version 6**: You must have at least one of the following permissions set to **true**, depending on the level of the user that you want to add or remove:\n\n        - `canManageMemberLowerAccessLevel`: Users can add or remove other users who have a lower access level than their own (in offices or regions that they oversee).\n        - `canManageMemberSameAccessLevel`: Users can modify other users who have the same access level as their own (in offices or regions that they oversee or belong to).\n      operationId: Add User To Region\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally-unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about the region associated with the member.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n        required: false\n      responses:\n        204:\n          description: User successfully added to the region.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: AddUserToRegion\n      x-ds-method: AddUserToRegion\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/{userId}/remove_from_region:\n    post:\n      tags:\n      - Users\n      summary: Removes a user from a region.\n      description: |-\n        Removes a user from a single region. You specify the region from which you want to remove the user in the `designatedRegion` request body.\n\n        The user still maintains their other region, company, and account associations.\n\n        ## Permissions\n\n        You must have the correct **Member Management** permissions.\n\n        **Rooms Version 5**: `canManageCompanyMembers` must be set to **true**.\n\n        **Rooms Version 6**: You must have at least one of the following permissions set to **true**, depending on the level of the user that you want to add or remove:\n\n        - `canManageMemberLowerAccessLevel`: Users can add or remove other users who have a lower access level than their own (in offices or regions that they oversee) from a region or office.\n        - `canManageMemberSameAccessLevel`: Users can modify other users who have the same access level as their own (in offices or regions that they oversee or belong to) from a region or office.\n\n        **Note**: You cannot remove a user from the region that contains their default office. You must first change the user's default office by using the Users::UpdateUser method.\n      operationId: Remove User From Region\n      parameters:\n      - name: userId\n        in: path\n        description: (Required) The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: (Required) The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information about the region associated with the member.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/DesignatedRegion'\n        required: false\n      responses:\n        204:\n          description: User successfully removed from the region.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: RemoveUserFromRegion\n      x-ds-method: RemoveUserFromRegion\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/{userId}/lock:\n    post:\n      tags:\n      - Users\n      summary: Locks a user's account.\n      description: \"Locks the account of the specified user. Use the `reason` property\\\n        \\ in the request body to specify why the account was locked.\\n\\n## Permissions\\n\\\n        \\n**Rooms Version 6**: \\nTo lock a user who has a lower access level than\\\n        \\ you, you must have the `canManageMemberLowerAccessLevel` permission set\\\n        \\ to **true**.\\nTo lock a user who has the same access level as you, you must\\\n        \\ have the `canManageMemberSameAccessLevel` permission set to **true** \\n\\n\\\n        **Rooms Version 5**: \\nTo lock a user, you must have the `canManageCompanyMembers`\\\n        \\ permission set to **true**.\\n\"\n      operationId: Lock User\n      parameters:\n      - name: userId\n        in: path\n        description: User Id of the user attempting to be locked.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Details about a locked account.\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/LockedOutDetails'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LockedOutDetails'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/LockedOutDetails'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/LockedOutDetails'\n        required: false\n      responses:\n        204:\n          description: User has been successfully locked out.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: LockUser\n      x-ds-method: LockUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\n      x-codegen-request-body-name: body\n  /v2/accounts/{accountId}/users/{userId}/unlock:\n    post:\n      tags:\n      - Users\n      summary: Unlocks  a user's account.\n      description: \"Unlocks the account of  the specified user.\\n\\n## Permissions\\n\\\n        \\n**Rooms Version 6**: \\nTo unlock a user who has a lower access level than\\\n        \\ you, you must have the `canManageMemberLowerAccessLevel` permission set\\\n        \\ to **true**.\\nTo unlock a user who has the same access level as you, you\\\n        \\ must have the `canManageMemberSameAccessLevel` permission set to **true**\\\n        \\ \\n\\n**Rooms Version 5**: \\nTo unlock a user, you must have the `canManageCompanyMembers`\\\n        \\ permission set to **true**.\\n\"\n      operationId: Unlock User\n      parameters:\n      - name: userId\n        in: path\n        description: The id of the user.\n        required: true\n        schema:\n          type: integer\n          format: int32\n      - name: accountId\n        in: path\n        description: The globally unique identifier (GUID) for the account.\n        required: true\n        schema:\n          type: string\n      responses:\n        204:\n          description: User has been successfully unlocked.\n          content: {}\n        400:\n          description: Bad request. See ErrorCode and Message for details\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n        401:\n          description: Not authorized to make this request.\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n      x-ds-methodname: UnlockUser\n      x-ds-method: UnlockUser\n      x-ds-service: Users\n      x-ds-in-sdk: true\ncomponents:\n  schemas:\n    FieldsCustomDataFilterType:\n      type: string\n      description: \"\"\n      enum:\n      - None\n      - IsRequiredOnCreate\n      - IsRequiredOnSubmit\n      x-ds-definition-name: FieldsCustomDataFilterType\n      x-ms-summary: \"\"\n    AccountSummary:\n      type: object\n      properties:\n        companyId:\n          type: integer\n          description: The id of the company.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the company.\n          readOnly: true\n        companyVersion:\n          description: \"Product version\"\n          $ref: '#/components/schemas/ProductVersion'\n        docuSignAccountGuid:\n          type: string\n          description: The globally-unique identifier (GUID) for the DocuSign Rooms\n            account.\n          readOnly: true\n        defaultFieldSetId:\n          type: string\n          description: The id of the company's default field set. A field set is a\n            set of data fields and the information about those data fields that the\n            system uses to configure rooms. It corresponds to the **Admin \u003e Company\n            \u003e Room Details** area in the console.\n          format: uuid\n          readOnly: true\n        requireOfficeLibraryAssignments:\n          type: boolean\n          description: \"Require office library assignments\"\n          readOnly: true\n      description: Contains details about a company account.\n      x-ds-definition-name: AccountSummary\n      x-ms-summary: Contains details about a company account.\n    DesignatedOffice:\n      required:\n      - officeId\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: (Required) The id of the office. This is the id that the system\n            generated when you created the office.\n          format: int32\n      description: This object contains information about the office that you want\n        to add a member to or remove a member from.\n      x-ds-definition-name: DesignatedOffice\n      x-ms-summary: This object contains information about the office that you want\n        to add a member to or remove a member from.\n    DesignatedRegion:\n      required:\n      - regionId\n      type: object\n      properties:\n        regionId:\n          type: integer\n          description: (Required) The id of the region. This is the id that the system\n            generated when you created the region.\n          format: int32\n      description: This object contains information about the region associated with\n        the member.\n      x-ds-definition-name: DesignatedRegion\n      x-ms-summary: This object contains information about the region associated with\n        the member.\n    Document:\n      required:\n      - base64Contents\n      - name\n      type: object\n      properties:\n        documentId:\n          type: integer\n          description: The ID of the document.\n          format: int32\n        name:\n          type: string\n          description: The file name associated with the document.\n        roomId:\n          type: integer\n          description: The id of the room associated with the document.\n          format: int32\n        ownerId:\n          type: integer\n          description: The id of the user who owns the document.\n          format: int32\n        size:\n          type: integer\n          description: The size of the document in bytes.\n          format: int64\n        folderId:\n          type: integer\n          description: The id of the folder that holds the document.\n          format: int32\n        createdDate:\n          type: string\n          description: |-\n            The date and time when the document was created. This is a read-only value that the service assigns.\n\n            Example: `2019-11-11T17:15:14.82`\n          format: date-time\n        isSigned:\n          type: boolean\n          description: When set to **true**, indicates that the document is signed.\n        contentType:\n          type: string\n          description: \"Content type\"\n        base64Contents:\n          type: string\n          description: The base64-encoded contents of the document. This property\n            is only included in the response when you use the `includeContents` query\n            parameter and set it to **true**.\n      description: Contains information about a document.\n      x-ds-definition-name: Document\n      x-ms-summary: Contains information about a document.\n    DocumentUser:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n        documentId:\n          type: integer\n          description: The ID of the document.\n          format: int32\n        name:\n          type: string\n          description: The file name associated with the document.\n        hasAccess:\n          type: boolean\n          description: '**True** if the user `userId` has access to this document.'\n        canApproveTask:\n          type: boolean\n          description: '**True** if the user `userId` has can approve a task for this\n            document.'\n        canAssignToTaskList:\n          type: boolean\n          description: '**True** if the user `userId` can assign this document to\n            a task list.'\n        canCopy:\n          type: boolean\n          description: '**True** if the user `userId` can make a copy of this document.'\n        canDelete:\n          type: boolean\n          description: '**True** if the user `userId` can delete this document.'\n        canRemoveFromTaskList:\n          type: boolean\n          description: '**True** if the user `userId` can remove this document from\n            a task list.'\n        canRemoveApproval:\n          type: boolean\n          description: '**True** if the user `userId` can remove approval for this\n            document.'\n        canRename:\n          type: boolean\n          description: '**True** if the user `userId` can rename this document.'\n        canShare:\n          type: boolean\n          description: '**True** if the user `userId` can share this document.'\n        canViewActivity:\n          type: boolean\n          description: '**True** if the user `userId` can view activity on this document.'\n      description: \"\"\n      x-ds-definition-name: DocumentUser\n      x-ms-summary: \"\"\n    DocumentUserForCreate:\n      required:\n      - userId\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n      description: \"User information to grant access\"\n      x-ds-definition-name: DocumentUserForCreate\n      x-ms-summary: \"\"\n    AccessLevel:\n      type: string\n      description: \"Access level\"\n      enum:\n      - Contributor\n      - Office\n      - Region\n      - Company\n      - Admin\n      x-ds-definition-name: AccessLevel\n      x-ms-summary: \"\"\n    AccountStatus:\n      type: string\n      description: \"\"\n      enum:\n      - Active\n      - Pending\n      x-ds-definition-name: AccountStatus\n      x-ms-summary: \"\"\n    MemberSortingOption:\n      type: string\n      description: \"\"\n      enum:\n      - FirstNameAsc\n      - LastNameAsc\n      - EmailAsc\n      - FirstNameDesc\n      - LastNameDesc\n      - EmailDesc\n      x-ds-definition-name: MemberSortingOption\n      x-ms-summary: \"\"\n    ProductVersion:\n      type: string\n      description: \"Product version\"\n      enum:\n      - v5\n      - v6\n      x-ds-definition-name: ProductVersion\n      x-ms-summary: \"\"\n    RoomStatus:\n      type: string\n      description: \"\"\n      enum:\n      - Active\n      - Pending\n      - Closed\n      - Open\n      x-ds-definition-name: RoomStatus\n      x-ms-summary: \"\"\n    RoomUserSortingOption:\n      type: string\n      description: \"\"\n      enum:\n      - FirstNameAsc\n      - LastNameAsc\n      - EmailAsc\n      - FirstNameDesc\n      - LastNameDesc\n      - EmailDesc\n      x-ds-definition-name: RoomUserSortingOption\n      x-ms-summary: \"\"\n    ESignAccountRoleSettings:\n      type: object\n      properties:\n        allowAccountManagement:\n          type: boolean\n          description: |+\n            A Boolean specifying whether users with this eSignature permission profile can manage the Rooms account. This property is read only and has the following values:\n\n            - `DS Admin` permission profile: **true**\n            - `DS Sender` permission profile: **false**\n            - `DS Viewer` permission profile: **false**\n\n\n\n\n      description: This object contains details about the permissions associated with\n        a eSignature permission profile.\n      x-ds-definition-name: ESignAccountRoleSettings\n      x-ms-summary: This object contains details about the permissions associated\n        with a eSignature permission profile.\n    ESignPermissionProfile:\n      type: object\n      properties:\n        eSignPermissionProfileId:\n          type: string\n          description: When an administrator or authorized member invites a new user\n            to become an account member, the system also creates an eSignature account\n            for the invitee at the same time. The `eSignPermissionProfileId` is the\n            id of the eSignature permission set to assign to the member.\n        name:\n          type: string\n          description: 'The name of the eSignature permission profile. Valid values\n            are:'\n        settings:\n          $ref: '#/components/schemas/ESignAccountRoleSettings'\n      description: 'When an administrator or authorized member invites a new user\n        to become an account member, the system also creates an eSignature account\n        for the invitee at the same time. This object contains information about the\n        eSignature permission profile, which controls member access to the eSignature\n        account. '\n      x-ds-definition-name: ESignPermissionProfile\n      x-ms-summary: 'When an administrator or authorized member invites a new user\n        to become an account member, the system also creates an eSignature account\n        for the invitee at the same time. This object contains information about the\n        eSignature permission profile, which controls member access to the eSignature\n        account. '\n    ESignPermissionProfileList:\n      type: object\n      properties:\n        permissionProfiles:\n          type: array\n          description: An array of eSignature `permissionProfile` objects.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/ESignPermissionProfile'\n      description: This object contains a list of eSignature permission profiles.\n      x-ds-definition-name: ESignPermissionProfileList\n      x-ms-summary: This object contains a list of eSignature permission profiles.\n    CustomData:\n      type: object\n      properties:\n        isRequiredOnCreate:\n          type: boolean\n          description: When set to **true**, the field is required when a new room\n            is created.\n          readOnly: true\n        isRequiredOnSubmit:\n          type: boolean\n          description: When set to **true**, the field is required when a room is\n            submitted for review.\n          readOnly: true\n      description: Contains information about whether the field is required when a\n        room is created or submitted for review.\n      x-ds-definition-name: CustomData\n      x-ms-summary: Contains information about whether the field is required when\n        a room is created or submitted for review.\n    DependsOn:\n      type: object\n      properties:\n        actionType:\n          type: string\n          description: |-\n            The child field action that depends on the parent field.\n\n            Example: `visibility`\n\n            For example, in the console, you must select a country for a list of states to become visible.\n          readOnly: true\n        parentApiName:\n          type: string\n          description: |-\n            The name that the Rooms API uses for the parent field.\n\n            Example: `country`\n          readOnly: true\n      description: Contains information about a parent field on which this field depends.\n      x-ds-definition-name: DependsOn\n      x-ms-summary: Contains information about a parent field on which this field\n        depends.\n    Field:\n      type: object\n      properties:\n        fieldId:\n          type: string\n          description: An id that uniquely identifies the instance of a `fieldDefinition`\n            within a field set.\n          format: uuid\n          readOnly: true\n        fieldDefinitionId:\n          type: string\n          description: The id of the DocuSign field definition from which this field\n            derives. When an Admin user configures a field set by using the API, this\n            is the id that they use to add this field definition to the field set.\n            The original field definition associated with this id contains more information\n            about the field, such as the default title, default API name, and configurations\n            such as the maximum length or the maximum value allowed.\n          format: uuid\n          readOnly: true\n        title:\n          type: string\n          description: |-\n            The human-readable title or name of the field.\n\n            Example: `Company contact name`\n          readOnly: true\n        apiName:\n          type: string\n          description: \"The name that the Rooms API uses for the field. \\n\\nExample:\\\n            \\ `companyContactName`\\n\\n**Note**: When you create a new room, you use\\\n            \\ the `apiName` values for fields to specify the details that you want\\\n            \\ to appear on the room's **Details** tab.\"\n          readOnly: true\n        type:\n          type: string\n          description: |+\n            The type of field. The valid values are:\n\n            - `Date`\n            - `Text`\n            - `Checkbox`\n            - `Currency`\n            - `Numeric`\n            - `SelectList`\n            - `TextArea`\n            - `Percentage`\n            - `Integer`\n\n          readOnly: true\n        fields:\n          type: array\n          description: An array of subfields.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Field'\n        configuration:\n          $ref: '#/components/schemas/FieldConfiguration'\n        customData:\n          $ref: '#/components/schemas/CustomData'\n      description: Contains details about a field in a field set.\n      x-ds-definition-name: Field\n      x-ms-summary: Contains details about a field in a field set.\n    FieldConfiguration:\n      type: object\n      properties:\n        maxValue:\n          type: number\n          description: The maximum value allowed for the field.\n          format: double\n          readOnly: true\n        minValue:\n          type: number\n          description: The minimum value allowed for the field.\n          format: double\n          readOnly: true\n        multipleOf:\n          type: number\n          description: This property is used for validation. When you set a number\n            value for this property, the value for the field must be a multiple of\n            it.\n          format: double\n          readOnly: true\n        maxLength:\n          type: integer\n          description: The maximum length of the field.\n          format: int32\n          readOnly: true\n        minLength:\n          type: integer\n          description: The minimum length of the field.\n          format: int32\n          readOnly: true\n        pattern:\n          type: string\n          description: The regular expression pattern to use to validate the value\n            of the field.\n          readOnly: true\n        isPublisher:\n          type: boolean\n          description: When set to **true**, the field is a parent field on which\n            one or more child fields depend.\n          readOnly: true\n        dependsOn:\n          type: array\n          description: This property applies to child fields. It contains information\n            about the parent field that must have a value set in order for this field\n            to have a value. For example, you must specify a country before you can\n            select a state.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/DependsOn'\n        options:\n          type: array\n          description: An array of options in a list.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/SelectListFieldOption'\n      description: Contains details about how a field is configured.\n      x-ds-definition-name: FieldConfiguration\n      x-ms-summary: Contains details about how a field is configured.\n    FieldData:\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: object\n          description: \"Field data is a collection of name/value pairs where the names\\\n            \\ correspond to the fields in the room's **Details** tab. The value of\\\n            \\ name/value object can be a field data collection itself. These collections\\\n            \\ are implemented as JSON objects.\\n\\nFor example, the field data for\\\n            \\ fields named \\\"Tax annual amount\\\" and \\\"buyer1\\\" might look like this:\\\n            \\ \\n\\n\\n```\\n{\\n  \\\"data\\\": {\\n    \\\"taxAnnualAmount\\\": 3389.12,\\n   \\\n            \\ \\\"buyer1\\\": {\\n      \\\"email\\\": \\\"lizzy@example.com\\\",\\n      \\\"country\\\"\\\n            : \\\"England\\\",\\n      \\\"businessPhone\\\": null,\\n      \\\"name\\\": \\\"Elizabeth\\\n            \\ Bennet\\\",\\n      \\\"homePhone\\\": null,\\n      \\\"city\\\": \\\"Meryton\\\",\\n\\\n            \\      \\\"address2\\\": null,\\n      \\\"postalCode\\\": null,\\n      \\\"state\\\"\\\n            : \\\"Hertfordshire\\\",\\n      \\\"company\\\": null,\\n      \\\"cellPhone\\\": null,\\n\\\n            \\      \\\"address1\\\": \\\"Longbourn Estate\\\"\\n    }\\n  }\\n}\\n```\\n\\n\"\n      description: The field data associated with a room. See [Rooms::GetRoomFieldData](/rooms-api/reference/Rooms/Rooms/GetRoomFieldData).\n      x-ds-definition-name: FieldData\n      x-ms-summary: The field data associated with a room. See [Rooms::GetRoomFieldData](/rooms-api/reference/Rooms/Rooms/GetRoomFieldData).\n    FieldDataForCreate:\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: object\n          description: \"Field data is a collection of name/value pairs where the names\\\n            \\ correspond to the fields in the room's **Details** tab. The value of\\\n            \\ name/value object can be a field data collection itself. These collections\\\n            \\ are implemented as JSON objects.\\n\\nFor example, the field data for\\\n            \\ fields named \\\"Tax annual amount\\\" and \\\"buyer1\\\" might look like this:\\\n            \\ \\n\\n\\n```\\n{\\n  \\\"data\\\": {\\n    \\\"taxAnnualAmount\\\": 3389.12,\\n   \\\n            \\ \\\"buyer1\\\": {\\n      \\\"email\\\": \\\"lizzy@example.com\\\",\\n      \\\"country\\\"\\\n            : \\\"England\\\",\\n      \\\"businessPhone\\\": null,\\n      \\\"name\\\": \\\"Elizabeth\\\n            \\ Bennet\\\",\\n      \\\"homePhone\\\": null,\\n      \\\"city\\\": \\\"Meryton\\\",\\n\\\n            \\      \\\"address2\\\": null,\\n      \\\"postalCode\\\": null,\\n      \\\"state\\\"\\\n            : \\\"Hertfordshire\\\",\\n      \\\"company\\\": null,\\n      \\\"cellPhone\\\": null,\\n\\\n            \\      \\\"address1\\\": \\\"Longbourn Estate\\\"\\n    }\\n  }\\n}\\n```\\n\\n\"\n      description: Contains key-value pairs that specify the properties of the room\n        and their values.\n      x-ds-definition-name: FieldDataForCreate\n      x-ms-summary: Contains key-value pairs that specify the properties of the room\n        and their values.\n    FieldDataForUpdate:\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: object\n          description: \"Field data is a collection of name/value pairs where the names\\\n            \\ correspond to the fields in the room's **Details** tab. The value of\\\n            \\ name/value object can be a field data collection itself. These collections\\\n            \\ are implemented as JSON objects.\\n\\nFor example, the field data for\\\n            \\ fields named \\\"Tax annual amount\\\" and \\\"buyer1\\\" might look like this:\\\n            \\ \\n\\n\\n```\\n{\\n  \\\"data\\\": {\\n    \\\"taxAnnualAmount\\\": 3389.12,\\n   \\\n            \\ \\\"buyer1\\\": {\\n      \\\"email\\\": \\\"lizzy@example.com\\\",\\n      \\\"country\\\"\\\n            : \\\"England\\\",\\n      \\\"businessPhone\\\": null,\\n      \\\"name\\\": \\\"Elizabeth\\\n            \\ Bennet\\\",\\n      \\\"homePhone\\\": null,\\n      \\\"city\\\": \\\"Meryton\\\",\\n\\\n            \\      \\\"address2\\\": null,\\n      \\\"postalCode\\\": null,\\n      \\\"state\\\"\\\n            : \\\"Hertfordshire\\\",\\n      \\\"company\\\": null,\\n      \\\"cellPhone\\\": null,\\n\\\n            \\      \\\"address1\\\": \\\"Longbourn Estate\\\"\\n    }\\n  }\\n}\\n```\\n\\n\"\n      description: The field data to update. When updating field data, specify only\n        the fields being updated.\n      x-ds-definition-name: FieldDataForUpdate\n      x-ms-summary: The field data to update. When updating field data, specify only\n        the fields being updated.\n    FieldSet:\n      type: object\n      properties:\n        fieldSetId:\n          type: string\n          description: |\n            The id of the field set.\n\n            Example: `4aef602b-xxxx-xxxx-xxxx-08d76696f678`\n          format: uuid\n          readOnly: true\n        title:\n          type: string\n          description: The title or name of the field set.\n          readOnly: true\n        fields:\n          type: array\n          description: An array of fields.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Field'\n      description: Contains details about a field set.\n      x-ds-definition-name: FieldSet\n      x-ms-summary: Contains details about a field set.\n    SelectListFieldOption:\n      type: object\n      properties:\n        id:\n          type: object\n          description: |-\n            The id of the list option.\n\n            Example: `AU`\n          readOnly: true\n        title:\n          type: string\n          description: |-\n            The title or name of the list option.\n\n            Example: `Australia`\n          readOnly: true\n        order:\n          type: integer\n          description: |-\n            The order of the list option in the list.\n\n            Example: `3`\n          format: int32\n          readOnly: true\n      description: Contains details about an option in a list.\n      x-ds-definition-name: SelectListFieldOption\n      x-ms-summary: Contains details about an option in a list.\n    ExternalFormFillSession:\n      type: object\n      properties:\n        url:\n          type: string\n          description: The URL for the new form fill session.\n          format: uri\n      description: Contains the URL for the new form fill session.\n      x-ds-definition-name: ExternalFormFillSession\n      x-ms-summary: Contains the URL for the new form fill session.\n    ExternalFormFillSessionForCreate:\n      required:\n      - formId\n      - roomId\n      type: object\n      properties:\n        formId:\n          type: string\n          description: |\n            (Required) The id of the form.\n\n            Example: `5be324eb-xxxx-xxxx-xxxx-208065181be9`\n        roomId:\n          type: integer\n          description: (Required) The id of the room.\n          format: int32\n        xFrameAllowedUrl:\n          type: string\n          description: (Optional) This property specifies the origin on which the\n            page is allowed to display in a frame.\n      description: Contains the details required to create a form fill session.\n      x-ds-definition-name: ExternalFormFillSessionForCreate\n      x-ms-summary: Contains the details required to create a form fill session.\n    FormDetails:\n      type: object\n      properties:\n        formId:\n          type: string\n          description: |\n            The id of the form.\n\n            Example: `5be324eb-xxxx-xxxx-xxxx-208065181be9`\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          description: |-\n            The name of the form.\n\n            Example: `MORe Private Network Addendum`\n          readOnly: true\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n          readOnly: true\n        lastUpdatedDate:\n          type: string\n          description: |-\n            The UTC date and time when the item was last updated. This is a read-only value that the service assigns.\n\n            Example: 2019-07-17T17:45:42.783Z\n          format: date-time\n          readOnly: true\n        availableOnDate:\n          type: string\n          description: The UTC DateTime when the form was made available or published.\n            (It is possible for a form to be published but not yet available.)\n          format: date-time\n          readOnly: true\n        ownerName:\n          type: string\n          description: |-\n            The name of the organization that owns the form.\n\n            Example: `Mainstreet organization of Realtors`\n          readOnly: true\n        version:\n          type: string\n          description: \"The version of the form. \\n\\nExample: `1`\"\n          readOnly: true\n        numberOfPages:\n          type: integer\n          description: |-\n            The number of pages in the form.\n\n            Example: `2`\n          format: int32\n          readOnly: true\n      description: This resource contains details about a form, such as the date it\n        was created and last updated, the number of pages, the form owner, and other\n        information.\n      x-ds-definition-name: FormDetails\n      x-ds-category: Forms\n      x-ds-order: \"10\"\n      x-ms-summary: This resource contains details about a form, such as the date\n        it was created and last updated, the number of pages, the form owner, and\n        other information.\n    FormForAdd:\n      required:\n      - formId\n      type: object\n      properties:\n        formId:\n          type: string\n          description: (Required) The id of the form.\n          format: uuid\n      description: Contains details about the form that you want to add.\n      x-ds-definition-name: FormForAdd\n      x-ms-summary: Contains details about the form that you want to add.\n    FormGroup:\n      type: object\n      properties:\n        formGroupId:\n          type: string\n          description: |\n            The ID of the form group.\n\n            Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        officeIds:\n          uniqueItems: true\n          type: array\n          description: An array of office IDs.\n          readOnly: true\n          items:\n            type: integer\n            format: int32\n        forms:\n          type: array\n          description: A list of forms.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/GroupForm'\n      description: Result from getting a form group.\n      x-ds-definition-name: FormGroup\n      x-ms-summary: Result from getting a form group.\n    FormGroupForCreate:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the group.\n      description: Request object for FormGroup::CreateFormGroup.\n      x-ds-definition-name: FormGroupForCreate\n      x-ms-summary: Request object for FormGroup::CreateFormGroup.\n    FormGroupFormToAssign:\n      required:\n      - formId\n      type: object\n      properties:\n        formId:\n          type: string\n          description: |\n            The id of the form.\n\n            Example: `5be324eb-xxxx-xxxx-xxxx-208065181be9`\n          format: uuid\n        isRequired:\n          type: boolean\n          description: '**True** if the form is required.'\n      description: \"Group information to assign form\"\n      x-ds-definition-name: FormGroupFormToAssign\n      x-ms-summary: \"\"\n    FormGroupForUpdate:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the office.\n      description: \"\"\n      x-ds-definition-name: FormGroupForUpdate\n      x-ms-summary: \"\"\n    FormGroupSummary:\n      type: object\n      properties:\n        formGroupId:\n          type: string\n          description: |\n            The ID of the form group.\n\n            Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n          readOnly: true\n        name:\n          type: string\n          description: \"The name of the form group. \\n\\nExample: `Apartment Rental`\"\n          readOnly: true\n        formCount:\n          type: integer\n          description: |-\n            The number of forms in the form group.\n\n            Example: `10`\n          format: int32\n          readOnly: true\n      description: Contains details about a form group.\n      x-ds-definition-name: FormGroupSummary\n      x-ms-summary: Contains details about a form group.\n    FormGroupSummaryList:\n      type: object\n      properties:\n        formGroups:\n          type: array\n          description: A list of form groups.\n          items:\n            $ref: '#/components/schemas/FormGroupSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Contains a list of form groups.\n      x-ds-definition-name: FormGroupSummaryList\n      x-ms-summary: Contains a list of form groups.\n    FormLibrarySummary:\n      type: object\n      properties:\n        formsLibraryId:\n          type: string\n          description: |\n            The id of the form library.\n\n            Example: `402c6e2f-xxxx-xxxx-xxxx-ff3f249f6da9`\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          description: |-\n            The name of the form library.\n\n            Example: `MOR - Mainstreet Organization of Realtors`\n          readOnly: true\n        formCount:\n          type: integer\n          description: \"The number of forms in the form library. \\n\\nExample: `50`\"\n          format: int32\n          readOnly: true\n      description: Contains details about a specific form library.\n      x-ds-definition-name: FormLibrarySummary\n      x-ms-summary: Contains details about a specific form library.\n    FormLibrarySummaryList:\n      type: object\n      properties:\n        formsLibrarySummaries:\n          type: array\n          description: A list of form libraries.\n          items:\n            $ref: '#/components/schemas/FormLibrarySummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Contains a list of forms libraries.\n      x-ds-definition-name: FormLibrarySummaryList\n      x-ms-summary: Contains a list of forms libraries.\n    FormSummary:\n      type: object\n      properties:\n        libraryFormId:\n          type: string\n          description: |\n            The id of the form.\n\n            Example: `301f560d-xxxx-xxxx-xxxx-063a47cc12c2`\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          description: \"The name of the form. \\n\\nExample: `Short Sale Supplement\\\n            \\ to Marketing Agreement`\"\n          readOnly: true\n        lastUpdatedDate:\n          type: string\n          description: |-\n            The date and time when the form was last updated.\n\n            Example: `2017-08-11T19:58:36.18`\n          format: date-time\n          readOnly: true\n      description: Contains details about a form in a form library.\n      x-ds-definition-name: FormSummary\n      x-ms-summary: Contains details about a form in a form library.\n    FormSummaryList:\n      type: object\n      properties:\n        forms:\n          type: array\n          description: A list of forms.\n          items:\n            $ref: '#/components/schemas/FormSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Contains a list of forms in a form library.\n      x-ds-definition-name: FormSummaryList\n      x-ms-summary: Contains a list of forms in a form library.\n    GroupForm:\n      type: object\n      properties:\n        formId:\n          type: string\n          description: |\n            The id of the form.\n\n            Example: `5be324eb-xxxx-xxxx-xxxx-208065181be9`\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        isRequired:\n          type: boolean\n          description: '**True** if the form is required.'\n          readOnly: true\n        lastUpdatedDate:\n          type: string\n          description: |-\n            The UTC date and time when the item was last updated. This is a read-only value that the service assigns.\n\n            Example: 2019-07-17T17:45:42.783Z\n          format: date-time\n          readOnly: true\n      description: Description of a single form in a group.\n      x-ds-definition-name: GroupForm\n      x-ms-summary: Description of a single form in a group.\n    ActivityType:\n      type: object\n      properties:\n        activityTypeId:\n          type: string\n          description: |-\n            The id of the activity type.\n\n            Example: `movefrominbx`\n        name:\n          type: string\n          description: |-\n            The name of the activity type.\n\n            Example: `Document Moved from Inbox`\n      description: Details about an activity type.\n      x-ds-definition-name: ActivityType\n      x-ms-summary: Details about an activity type.\n    ClosingStatus:\n      type: object\n      properties:\n        closingStatusId:\n          type: string\n          description: |-\n            The id of the closing status.\n\n            Example: `exp`\n        name:\n          type: string\n          description: |-\n            The name of the closing status.\n\n            Example: `Listing Expired`\n      description: Contains information about a closing status, or reason for closing\n        a room.\n      x-ds-definition-name: ClosingStatus\n      x-ms-summary: Contains information about a closing status, or reason for closing\n        a room.\n    ContactSide:\n      type: object\n      properties:\n        contactSideId:\n          type: string\n          description: |-\n            The id of the contact side.\n\n            Example: `L`\n        name:\n          type: string\n          description: |-\n            The name of the contact side.\n\n            Example: `Listing`\n      description: Details about a contact side.\n      x-ds-definition-name: ContactSide\n      x-ms-summary: Details about a contact side.\n    Country:\n      type: object\n      properties:\n        countryId:\n          type: string\n          description: \"The two-letter code for the country. \\n\\nExample: `NZ`\"\n        name:\n          type: string\n          description: \"The name of the country. \\n\\nExample: `New Zealand`\"\n      description: Contains details about a supported country.\n      x-ds-definition-name: Country\n      x-ms-summary: Contains details about a supported country.\n    Currency:\n      type: object\n      properties:\n        currencyId:\n          type: string\n          description: |-\n            The three-letter code for the currency.\n\n            Example: `CAD`\n        name:\n          type: string\n          description: |-\n            The name of the currency.\n\n            Example: `Canadian Dollar`\n      description: Contains details about a supported currency.\n      x-ds-definition-name: Currency\n      x-ms-summary: Contains details about a supported currency.\n    FinancingType:\n      type: object\n      properties:\n        financingTypeId:\n          type: string\n          description: |-\n            The id of the financing type.\n\n            Example: `conv` (for `Conventional`)\n        name:\n          type: string\n          description: |-\n            The name of the financing type. Possible values are:\n\n            - `Cash`\n            - `Conventional`\n            - `FHA`\n            - `VA`\n            - `USDA`\n            - `Bitcoin`\n            - `Other`\n      description: Contains information about a financing type.\n      x-ds-definition-name: FinancingType\n      x-ms-summary: Contains information about a financing type.\n    GlobalActivityTypes:\n      type: object\n      properties:\n        activityTypes:\n          type: array\n          description: A list of activity types.\n          items:\n            $ref: '#/components/schemas/ActivityType'\n      description: Contains a list of activity types.\n      x-ds-definition-name: GlobalActivityTypes\n      x-ms-summary: Contains a list of activity types.\n    GlobalClosingStatuses:\n      type: object\n      properties:\n        closingStatuses:\n          type: array\n          description: A list of closing statuses (reasons for closing a room).\n          items:\n            $ref: '#/components/schemas/ClosingStatus'\n      description: Contains a list of valid closing statuses, or reasons for closing\n        a room.\n      x-ds-definition-name: GlobalClosingStatuses\n      x-ms-summary: Contains a list of valid closing statuses, or reasons for closing\n        a room.\n    GlobalContactSides:\n      type: object\n      properties:\n        contactSides:\n          type: array\n          description: A list of contact sides.\n          items:\n            $ref: '#/components/schemas/ContactSide'\n      description: Contains a list of contact sides.\n      x-ds-definition-name: GlobalContactSides\n      x-ms-summary: Contains a list of contact sides.\n    GlobalCountries:\n      type: object\n      properties:\n        countries:\n          type: array\n          description: An array of country objects.\n          items:\n            $ref: '#/components/schemas/Country'\n      description: Contains a list of supported countries.\n      x-ds-definition-name: GlobalCountries\n      x-ms-summary: Contains a list of supported countries.\n    GlobalCurrencies:\n      type: object\n      properties:\n        currencies:\n          type: array\n          description: A list of currency objects.\n          items:\n            $ref: '#/components/schemas/Currency'\n      description: Contains a list of supported currencies.\n      x-ds-definition-name: GlobalCurrencies\n      x-ms-summary: Contains a list of supported currencies.\n    GlobalFinancingTypes:\n      type: object\n      properties:\n        financingTypes:\n          type: array\n          description: A list of financing types.\n          items:\n            $ref: '#/components/schemas/FinancingType'\n      description: Contains a list of financing types.\n      x-ds-definition-name: GlobalFinancingTypes\n      x-ms-summary: Contains a list of financing types.\n    GlobalOriginsOfLeads:\n      type: object\n      properties:\n        originsOfLeads:\n          type: array\n          description: A list of origins of leads.\n          items:\n            $ref: '#/components/schemas/OriginOfLead'\n      description: Contains a list of origins of leads.\n      x-ds-definition-name: GlobalOriginsOfLeads\n      x-ms-summary: Contains a list of origins of leads.\n    GlobalPropertyTypes:\n      type: object\n      properties:\n        propertyTypes:\n          type: array\n          description: A list of property types.\n          items:\n            $ref: '#/components/schemas/PropertyType'\n      description: Contains a list of property types.\n      x-ds-definition-name: GlobalPropertyTypes\n      x-ms-summary: Contains a list of property types.\n    GlobalRoomContactTypes:\n      type: object\n      properties:\n        roomContactTypes:\n          type: array\n          description: A list of room contact types.\n          items:\n            $ref: '#/components/schemas/RoomContactType'\n      description: Contains a list of room contact types.\n      x-ds-definition-name: GlobalRoomContactTypes\n      x-ms-summary: Contains a list of room contact types.\n    GlobalSellerDecisionTypes:\n      type: object\n      properties:\n        sellerDecisionTypes:\n          type: array\n          description: A list of seller decision types.\n          items:\n            $ref: '#/components/schemas/SellerDecisionType'\n      description: Contains a list of seller decision types.\n      x-ds-definition-name: GlobalSellerDecisionTypes\n      x-ms-summary: Contains a list of seller decision types.\n    GlobalSpecialCircumstanceTypes:\n      type: object\n      properties:\n        specialCircumstanceTypes:\n          type: array\n          description: A list of special circumstance types.\n          items:\n            $ref: '#/components/schemas/SpecialCircumstanceType'\n      description: Contains a list of special circumstance types.\n      x-ds-definition-name: GlobalSpecialCircumstanceTypes\n      x-ms-summary: Contains a list of special circumstance types.\n    GlobalStates:\n      type: object\n      properties:\n        states:\n          type: array\n          description: A list of states.\n          items:\n            $ref: '#/components/schemas/State'\n      description: Contains a list of supported states.\n      x-ds-definition-name: GlobalStates\n      x-ms-summary: Contains a list of supported states.\n    GlobalTaskDateTypes:\n      type: object\n      properties:\n        taskDateTypes:\n          type: array\n          description: A list of task date types.\n          items:\n            $ref: '#/components/schemas/TaskDateType'\n      description: Contains a list of task date types.\n      x-ds-definition-name: GlobalTaskDateTypes\n      x-ms-summary: Contains a list of task date types.\n    GlobalTaskResponsibilityTypes:\n      type: object\n      properties:\n        taskResponsibilityTypes:\n          type: array\n          description: A list of task responsibility types.\n          items:\n            $ref: '#/components/schemas/TaskResponsibilityType'\n      description: Contains a list of task responsibility types.\n      x-ds-definition-name: GlobalTaskResponsibilityTypes\n      x-ms-summary: Contains a list of task responsibility types.\n    GlobalTaskStatuses:\n      type: object\n      properties:\n        taskStatuses:\n          type: array\n          description: \"\"\n          items:\n            $ref: '#/components/schemas/TaskStatus'\n      description: \"\"\n      x-ds-definition-name: GlobalTaskStatuses\n      x-ms-summary: \"\"\n    GlobalTimeZones:\n      type: object\n      properties:\n        timeZones:\n          type: array\n          description: A list of time zones.\n          items:\n            $ref: '#/components/schemas/TimeZone'\n      description: Contains a list of time zones.\n      x-ds-definition-name: GlobalTimeZones\n      x-ms-summary: Contains a list of time zones.\n    GlobalTransactionSides:\n      type: object\n      properties:\n        transactionSides:\n          type: array\n          description: A list of transaction sides.\n          items:\n            $ref: '#/components/schemas/TransactionSide'\n      description: Contains a list of transaction sides.\n      x-ds-definition-name: GlobalTransactionSides\n      x-ms-summary: Contains a list of transaction sides.\n    OriginOfLead:\n      type: object\n      properties:\n        originOfLeadId:\n          type: string\n          description: |-\n            The id of the origin of lead.\n\n            Example: `tru` (for `Trulia`)\n        name:\n          type: string\n          description: |-\n            The name of the origin of lead. Possible values are:\n\n            - `Realtor.com`\n            - `Trulia`\n            - `Zillow`\n            - `Company Website`\n            - `Agent Website`\n            - `Other Online`\n            - `Mobile App`\n            - `Social Media`\n            - `Personal Referral`\n            - `Company Referral`\n            - `Repeat Client`\n            - `Corporate Relocation`\n            - `Print Marketing`\n            - `Prospecting`\n            - `Other`\n            - `REO (Real Estate Owned)`\n      description: Contains information about an origin of lead.\n      x-ds-definition-name: OriginOfLead\n      x-ms-summary: Contains information about an origin of lead.\n    PropertyType:\n      type: object\n      properties:\n        propertyTypeId:\n          type: string\n          description: |-\n            The id of the property type.\n\n            Example: `resd` (for `Residential Detached`)\n        name:\n          type: string\n          description: |\n            The name of the property type. Possible values are:\n\n            - `Residential Detached`\n            - `Residential Attached`\n            - `New Construction`\n            - `Residential Developed Lots`\n            - `Land/Farm`\n            - `Rental`\n            - `Commercial`\n            - `Condominium`\n            - `Mobile Home`\n      description: Contains information about a property type.\n      x-ds-definition-name: PropertyType\n      x-ms-summary: Contains information about a property type.\n    RoomContactType:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |-\n            The id of the room contact type.\n\n            Example: `lisagent` (for `Listing Agent`)\n        name:\n          type: string\n          description: |-\n            The name of the room contact type. Possible values are:\n\n            - `Seller`\n            - `Listing Agent`\n            - `Buyer`\n            - `Buyer Agent`\n            - `Service Provider`\n            - `Transaction Coordinator`\n            - `Mortgage Provider`\n            - `Title Provider`\n            - `Insurance Provider`\n            - `Home Warranty Provider`\n            - `Survey Provider`\n            - `Escrow Provider`\n            - `Buyer Broker`\n            - `Listing Broker`\n      description: Contains information about a room contact type.\n      x-ds-definition-name: RoomContactType\n      x-ms-summary: Contains information about a room contact type.\n    SellerDecisionType:\n      type: object\n      properties:\n        sellerDecisionTypeId:\n          type: string\n          description: |-\n            The id of the seller decision type.\n\n            Example: `appr` (for `Approved`)\n        name:\n          type: string\n          description: |-\n            The name of the seller decision type. Possible values are:\n\n            - `Pending`\n            - `Approved`\n            - `Countered`\n            - `Rejected`\n            - `Pending Rejection`\n      description: Contains information about a seller decision type.\n      x-ds-definition-name: SellerDecisionType\n      x-ms-summary: Contains information about a seller decision type.\n    SpecialCircumstanceType:\n      type: object\n      properties:\n        specialCircumstanceTypeId:\n          type: string\n          description: |-\n            The id of the special circumstance type.\n\n            Example: `ss` (for `Short Sale`)\n        name:\n          type: string\n          description: |-\n            The name of the special circumstance type. Possible values are:\n\n            - `Short Sale`\n            - `Foreclosure`\n            - `Corporate Owned`\n            - `Historical`\n            - `Investor Owned`\n            - `HUD`\n            - `Estate Sale`\n            - `Relocation`\n            - `Contingency`\n      description: Contains information about a special circumstance type.\n      x-ds-definition-name: SpecialCircumstanceType\n      x-ms-summary: Contains information about a special circumstance type.\n    State:\n      type: object\n      properties:\n        stateId:\n          type: string\n          description: |-\n            A concatenation of the two-letter country code with the state/province/region of the office address.\n\n            Example: `US-OH` (for Ohio)\n        name:\n          type: string\n          description: |-\n            The name of the state. Possible values are:\n\n            - `Alberta`\n            - `Auckland`\n            - `New South Wales`\n            - `Alabama`\n            - `Alaska`\n            - `Bay of Plenty`\n            - `British Columbia`\n            - `Queensland`\n            - `South Australia`\n            - `Manitoba`\n            - `Canterbury`\n            - `Arizona`\n            - `Arkansas`\n            - `New Brunswick`\n            - `Tasmania`\n            - `Hawke's Bay`\n            - `Manawatu-Wanganui`\n            - `Victoria`\n            - `Newfoundland and Labrador`\n            - `California`\n            - `Colorado`\n            - `Western Australia`\n            - `Northwest Territories`\n            - `Northland`\n            - `Otago`\n            - `Australian Capital Territory`\n            - `Nova Scotia`\n            - `Connecticut`\n            - `Delaware`\n            - `Nunavut`\n            - `Northern Territory`\n            - `Southland`\n            - `Taranaki`\n            - `Ontario`\n            - `District of Columbia`\n            - `Florida`\n            - `Prince Edward Island`\n            - `Waikato`\n            - `Wellington`\n            - `Quebec`\n            - `Georgia`\n            - `Guam`\n            - `Saskatchewan`\n            - `West Coast`\n            - `Gisborne District`\n            - `Yukon`\n            - `Hawaii`\n            - `Idaho`\n            - `Marlborough District`\n            - `Nelson City`\n            - `Illinois`\n            - `Indiana`\n            - `Tasman District`\n            - `Chatham Islands Territory`\n            - `Iowa`\n            - `Kansas`\n            - `Kentucky`\n            - `Louisiana`\n            - `Maine`\n            - `Maryland`\n            - `Massachusetts`\n            - `Michigan`\n            - `Minnesota`\n            - `Mississippi`\n            - `Missouri`\n            - `Montana`\n            - `Nebraska`\n            - `Nevada`\n            - `New Hampshire`\n            - `New Jersey`\n            - `New Mexico`\n            - `New York`\n            - `North Carolina`\n            - `North Dakota`\n            - `Ohio`\n            - `Oklahoma`\n            - `Oregon`\n            - `Pennsylvania`\n            - `Puerto Rico`\n            - `Rhode Island`\n            - `South Carolina`\n            - `South Dakota`\n            - `Tennessee`\n            - `Texas`\n            - `US Virgin Islands`\n            - `Utah`\n            - `Vermont`\n            - `Virginia`\n            - `Washington`\n            - `West Virginia`\n            - `Wisconsin`\n            - `Wyoming`\n      description: Contains information about a state.\n      x-ds-definition-name: State\n      x-ms-summary: Contains information about a state.\n    TaskDateType:\n      type: object\n      properties:\n        taskDateTypeId:\n          type: string\n          description: |-\n            The id of the task date type.\n\n            Example: `tdd` (for `Task Due Date`)\n        name:\n          type: string\n          description: \"The name of the task date type. \\n\\nPossible values are:\\n\\\n            \\n- `Specific Calendar Date`\\n- `Task Due Date`\\n- `Actual Close Date`\\n\\\n            - `Binding Date`\\n- `Contingency Removal Date`\\n- `Contract Date`\\n- `Expected\\\n            \\ Closing Date`\\n- `Listing Date`\\n- `Listing Expiration Date`\\n- `Offer\\\n            \\ Date`\"\n      description: Contains information about a task date type.\n      x-ds-definition-name: TaskDateType\n      x-ms-summary: Contains information about a task date type.\n    TaskResponsibilityType:\n      type: object\n      properties:\n        taskResponsibilityTypeId:\n          type: string\n          description: The id of the task responsibility type.\n        name:\n          type: string\n          description: |-\n            The name of the task responsibility type. The possible values are:\n\n            - `Assignee`\n            - `Watcher`\n            - `Reviewer`\n      description: Contains information about a task responsibility type.\n      x-ds-definition-name: TaskResponsibilityType\n      x-ms-summary: Contains information about a task responsibility type.\n    TaskStatus:\n      type: object\n      properties:\n        taskStatusId:\n          type: string\n          description: \"\"\n        name:\n          type: string\n          description: The name of the office.\n      description: \"\"\n      x-ds-definition-name: TaskStatus\n      x-ms-summary: \"\"\n    TimeZone:\n      type: object\n      properties:\n        timeZoneId:\n          type: string\n          description: |-\n            The id of the time zone.\n\n            Example: `brisbane`\n        name:\n          type: string\n          description: |-\n            The name of the time zone.\n\n            Example: `Eastern Australia (Brisbane)`\n      description: Contains information about a time zone.\n      x-ds-definition-name: TimeZone\n      x-ms-summary: Contains information about a time zone.\n    TransactionSide:\n      type: object\n      properties:\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n        name:\n          type: string\n          description: |\n            The name of the transaction side. Valid values are:\n\n            - `List Side`\n            - `Buy Side`\n            - `List \u0026 Buy Side`\n            - `Refinance`\n      description: Contains information about a real estate transaction side.\n      x-ds-definition-name: TransactionSide\n      x-ms-summary: Contains information about a real estate transaction side.\n    Office:\n      required:\n      - name\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: The id of the office. This is the id that the system generated\n            when you created the office.\n          format: int32\n        name:\n          type: string\n          description: The name of the office.\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n        address1:\n          type: string\n          description: First line of the office street address.\n        address2:\n          type: string\n          description: Second line of the office street address.\n        city:\n          type: string\n          description: City name or metropolitan area of the office address.\n        stateId:\n          type: string\n          description: |-\n            A concatenation of the two-letter country code with the state/province/region of the office address.\n\n            Example: `US-OH` (for Ohio)\n        postalCode:\n          type: string\n          description: Postal code or ZIP code of the office address.\n        countryId:\n          type: string\n          description: The two-letter country code of the office address (for example,\n            \"UK\" for United Kingdom).\n        timeZoneId:\n          type: string\n          description: |-\n            The id of the time zone for the office address.\n\n            Example: `eastern` (for the Eastern US Time Zone)\n        phone:\n          type: string\n          description: Phone number of the office.\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n      description: Contains information about an office.\n      x-ds-definition-name: Office\n      x-ms-summary: Contains information about an office.\n    OfficeForCreate:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the office.\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n        address1:\n          type: string\n          description: First line of the office street address.\n        address2:\n          type: string\n          description: Second line of the office street address.\n        city:\n          type: string\n          description: City name or metropolitan area of the office address.\n        stateId:\n          type: string\n          description: |-\n            A concatenation of the two-letter country code with the state/province/region of the office address.\n\n            Example: `US-OH` (for Ohio)\n        postalCode:\n          type: string\n          description: Postal code or ZIP code of the office address.\n        countryId:\n          type: string\n          description: The two-letter country code of the office address (for example,\n            \"UK\" for United Kingdom).\n        timeZoneId:\n          type: string\n          description: |-\n            The id of the time zone for the office address.\n\n            Example: `eastern` (for the Eastern US Time Zone)\n        phone:\n          type: string\n          description: Phone number of the office.\n      description: Contains details about the office that you want to create.\n      x-ds-definition-name: OfficeForCreate\n      x-ms-summary: Contains details about the office that you want to create.\n    OfficeReferenceCount:\n      type: object\n      properties:\n        referenceType:\n          type: string\n          description: The type of object referencing the office.\n        referencedCount:\n          type: integer\n          description: The number of objects of this type referencing the office.\n          format: int32\n          readOnly: true\n      description: A complex element containing the number and type of each object\n        referencing the office.\n      x-ds-definition-name: OfficeReferenceCount\n      x-ms-summary: A complex element containing the number and type of each object\n        referencing the office.\n    OfficeReferenceCountList:\n      type: object\n      properties:\n        referencesCounts:\n          type: array\n          description: A list of each type of object and the number of objects of\n            that type referencing the office.\n          items:\n            $ref: '#/components/schemas/OfficeReferenceCount'\n      description: Contains a list of each type of object and the number of objects\n        of that type referencing the office.\n      x-ds-definition-name: OfficeReferenceCountList\n      x-ms-summary: Contains a list of each type of object and the number of objects\n        of that type referencing the office.\n    OfficeSummary:\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: The id of the office. This is the id that the system generated\n            when you created the office.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n          readOnly: true\n        address1:\n          type: string\n          description: First line of the office street address.\n          readOnly: true\n        address2:\n          type: string\n          description: Second line of the office street address.\n          readOnly: true\n        city:\n          type: string\n          description: City name or metropolitan area of the office address.\n          readOnly: true\n        stateId:\n          type: string\n          description: |-\n            A concatenation of the two-letter country code with the state/province/region of the office address.\n\n            Example: `US-OH` (for Ohio)\n          readOnly: true\n        postalCode:\n          type: string\n          description: Postal code or ZIP code of the office address.\n          readOnly: true\n        countryId:\n          type: string\n          description: The two-letter country code of the office address (for example,\n            \"UK\" for United Kingdom).\n          readOnly: true\n        timeZoneId:\n          type: string\n          description: |-\n            The id of the time zone for the office address.\n\n            Example: `eastern` (for the Eastern US Time Zone)\n          readOnly: true\n        phone:\n          type: string\n          description: Phone number of the office.\n          readOnly: true\n        createdDate:\n          type: string\n          description: UTC datetime that the office was created (for example, \"2019-07-17T17:45:42.783\").\n            Note that the service assigns this value, so it is read-only.\n          format: date-time\n          readOnly: true\n      description: A complex element containing summary information on an office;\n        the elements of this object are identical to those of the `Offices` object.\n      x-ds-definition-name: OfficeSummary\n      x-ms-summary: A complex element containing summary information on an office;\n        the elements of this object are identical to those of the `Offices` object.\n    OfficeSummaryList:\n      type: object\n      properties:\n        officeSummaries:\n          type: array\n          description: A list of `OfficeSummary` objects containing summary information\n            about an office.\n          items:\n            $ref: '#/components/schemas/OfficeSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The index position within the total result set from which returned\n            values start.\n          format: int32\n        endPosition:\n          type: integer\n          description: The index position within the total result set at which returned\n            values end.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Object that contains a summary of information about a requested\n        group of offices in the Rooms account.\n      x-ds-definition-name: OfficeSummaryList\n      x-ms-summary: Object that contains a summary of information about a requested\n        group of offices in the Rooms account.\n    Region:\n      required:\n      - name\n      type: object\n      properties:\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n        name:\n          type: string\n          description: The name of the office.\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n      description: Contains information about a region.\n      x-ds-definition-name: Region\n      x-ms-summary: Contains information about a region.\n    RegionReferenceCount:\n      type: object\n      properties:\n        referenceType:\n          type: string\n          description: The type of object referencing the region.\n        referenceCount:\n          type: integer\n          description: The number of objects of this type referencing the region.\n          format: int32\n      description: A complex element containing the number and type of each object\n        referencing the region.\n      x-ds-definition-name: RegionReferenceCount\n      x-ms-summary: A complex element containing the number and type of each object\n        referencing the region.\n    RegionReferenceCountList:\n      type: object\n      properties:\n        referenceCounts:\n          type: array\n          description: A list of each type of object and the number of objects of\n            that type referencing the region.\n          items:\n            $ref: '#/components/schemas/RegionReferenceCount'\n      description: Contains a list of each type of object and the number of objects\n        of that type referencing the region.\n      x-ds-definition-name: RegionReferenceCountList\n      x-ms-summary: Contains a list of each type of object and the number of objects\n        of that type referencing the region.\n    RegionSummary:\n      type: object\n      properties:\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n        name:\n          type: string\n          description: String that specifies the region name.\n        createdDate:\n          type: string\n          description: UTC datetime that the region was created (for example \"2019-06-27T19:32:46.943\").\n            Note that the service assigns this value, so it is read-only.\n          format: date-time\n      description: A complex element containing summary information on a region; the\n        elements of this object are identical to those of the `Regions` object.\n      x-ds-definition-name: RegionSummary\n      x-ms-summary: A complex element containing summary information on a region;\n        the elements of this object are identical to those of the `Regions` object.\n    RegionSummaryList:\n      type: object\n      properties:\n        regionSummaries:\n          type: array\n          description: A list of `RegionSummary` objects containing summary information\n            on a region; the elements of this object are identical to those of the\n            `Regions` object.\n          items:\n            $ref: '#/components/schemas/RegionSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Object that contains a summary of information about a requested\n        group of regions in the Rooms account.\n      x-ds-definition-name: RegionSummaryList\n      x-ms-summary: Object that contains a summary of information about a requested\n        group of regions in the Rooms account.\n    AssignableRoles:\n      type: object\n      properties:\n        currentRoleId:\n          type: integer\n          description: The id of the invitee's company-level role. This property lets\n            the requester know what room-level role will give the user the same permissions\n            that they have at the company level. A value is returned only when both\n            the requester and the invitee are internal to the company.\n          format: int32\n        roles:\n          type: array\n          description: An array of `role` objects.\n          items:\n            $ref: '#/components/schemas/RoleSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: This complex type contains information about assignable roles.\n      x-ds-definition-name: AssignableRoles\n      x-ms-summary: This complex type contains information about assignable roles.\n    Permissions:\n      type: object\n      properties:\n        canAddUsersToRooms:\n          type: boolean\n          description: When set to **true**, users can see the **Invite** button on\n            the room's **People** tab and can invite people into a room.\n        canCreateRooms:\n          type: boolean\n          description: When set to **true**, users can see the **New** button on the\n            **Rooms** tab and can create a room.\n        canSubmitRoomsForReview:\n          type: boolean\n          description: When set to **true**, users can submit rooms for review that\n            are owned by them or someone they manage.\n        canCloseRooms:\n          type: boolean\n          description: When set to **true**, users can review and close rooms that\n            are owned by them or someone they manage.\n        canReopenRooms:\n          type: boolean\n          description: When set to **true**, users can reopen rooms that are owned\n            by them or someone they manage.\n        canDeleteOwnedRooms:\n          type: boolean\n          description: When set to **true**, the user can delete rooms that are owned\n            by them or someone they manage.\n        autoAccessToRooms:\n          type: boolean\n          description: When set to **true**, users are automatically added to new\n            rooms when someone with an internal role in their office or region creates\n            or is invited to a room.\n        canExportRoomActivityDetailsPeople:\n          type: boolean\n          description: When set to **true**, users can export the details, people,\n            and history of a room to a PDF or CSV file.\n        isVisibleInRooms:\n          type: boolean\n          description: When set to **true**, users who also have the `autoAccessToRooms`\n            permission enabled are visible in those rooms.\n        canCopyRoomDetails:\n          type: boolean\n          description: When set to **true**, users see a **Copy** room option in the\n            room **Actions** menu, which copies the room's detail information to populate\n            a new room.\n        canEditAnyRoomRole:\n          type: boolean\n          description: When set to **true**, users see a **Edit** room option in the\n            room **Actions** menu, which edits the room's role information.\n        canEditInvitedRoomRole:\n          type: boolean\n          description: When set to **true**, users see a **Edit** room option in the\n            room **Actions** menu, which edits the invited room's role information.\n        canEditRoomSide:\n          type: boolean\n          description: When set to **true**, users see a **Edit** room option in the\n            room **Actions** menu, which edits the room's side information.\n        canManageAnyUserRoomAccess:\n          type: boolean\n          description: When set to **true**, users see a **Manage** room option in the\n            room **Actions** menu, which edits the room's access information.\n        canManageInvitedUserRoomAccess:\n          type: boolean\n          description: When set to **true**, users see a **Manage** room option in the\n            room **Actions** menu, which edits the invited room's access information.\n        isHiddenInRoom:\n          type: boolean\n          description: When set to **true**, shows if he is hidden in room.\n        canManageRoomOwners:\n          type: boolean\n          description: When set to **true**, users see a **Manage** room option.\n        canDeleteRooms:\n          type: boolean\n          description: When set to **true**, users see a **Delete** room option.\n        canConnectToMortgageCadence:\n          type: boolean\n          description: When set to **true**, users see a **ConnectToMortgageCadence** room option.\n        canViewRoomDetails:\n          type: boolean\n          description: When set to **true**, users can view all room detail fields\n            that the company Admin has set to **Use**.\n        canViewAndEditRoomDetails:\n          type: boolean\n          description: When set to **true**, users can view and make edits to any\n            room detail fields.\n        canSendRoomDetailsToLoneWolf:\n          type: boolean\n          description: When set to **true**, users see a **SendRoomDetailsToLoneWolf** room option.\n        canAddDocuments:\n          type: boolean\n          description: When set to **true**, users can add documents to rooms and\n            share the documents that they own with other people in the room.\n        canAddDocumentsFromFormGroups:\n          type: boolean\n          description: When set to **true**, users can add documents from form groups\n            to rooms.\n        canAddDocumentsFromFormLibraries:\n          type: boolean\n          description: When set to **true**, users can add documents from form libraries\n            to rooms.\n        documentsViewableByOthersInRoomFromOffice:\n          type: boolean\n          description: When a user for whom this permission is set to **true** adds\n            a document, the document is automatically shared with other room users\n            that are in the user's office.\n        documentsAutoOwnedByPeers:\n          type: boolean\n          description: When a user for whom this permission is set to **true** adds\n            a document, the document is automatically seen and owned by those users'\n            peers. Peers are others in the same office or region who have the same\n            access level as the user.\n        canDeleteOwnedDocuments:\n          type: boolean\n          description: When set to **true**, users can delete documents that they\n            own from rooms.\n        canManageSharedDocs:\n          type: boolean\n          description: When set to **true**, users can manage all documents, including\n            ones that another user has shared with them.\n        canManageFormGroups:\n          type: boolean\n          description: When set to **true**, users have access to **Admin \u003e Forms**\n            and can manage form groups and form libraries for the company.\n        canShareDocsNotOwned:\n          type: boolean\n          description: When set to **true**, users can share documents that they do\n            not own (documents that another user has shared with them).\n        canAddTasksToAnyTaskLists:\n          type: boolean\n          description: When set to **true**, users can add tasks to any task list,\n            including lists that they do not own.\n        canEditEditableTasks:\n          type: boolean\n          description: When set to **true**, users can edit editable tasks.\n        canEditAnyTasks:\n          type: boolean\n          description: When set to **true**, users can edit tasks in rooms, even if\n            the task owner has not marked the task as editable.\n        canDeleteDeletableTasks:\n          type: boolean\n          description: When set to **true**, users can delete deletable tasks.\n        canDeleteAnyTasks:\n          type: boolean\n          description: When set to **true**, users can delete tasks, even if the task\n            owner has not marked the task as deletable.\n        canApplyTaskList:\n          type: boolean\n          description: When set to **true**, users see the **Attach Task List** option\n            in the room's **Actions** menu and can apply task lists to rooms.\n        canRemoveAnyTaskList:\n          type: boolean\n          description: |-\n            When set to **true**, users can use the **Remove Task List** option in the room's **Actions** menu to remove task lists owned by others.\n\n            **Note**: Users can already remove task lists that they own.\n        canSubmitTaskList:\n          type: boolean\n          description: When set to **true**, users can use the **Submit Task List**\n            option in the room's **Actions** menu to submit task lists for review.\n        canAutoSubmitTaskList:\n          type: boolean\n          description: When set to **true**, users can use the **Submit Task List**\n            option in the room's **Actions** menu to submit task lists for review.\n        canReviewTaskList:\n          type: boolean\n          description: When set to **true**, users can approve or decline a task list.\n            Declining a task list sends it back to open status for the assignee to\n            complete. The assignee also receives a notification.\n        canAutoApproveTaskList:\n          type: boolean\n          description: When set to **true** and a room is approved, the task lists\n            associated with the room auto-approve if all of the tasks are approved.\n        canManageTaskTemplatesForAllRegionsAllOffices:\n          type: boolean\n          description: When set to **true**, users have access to the **Admin \u003e Company\n            \u003e Task List Templates** menu so that they can create, edit, and delete\n            task list templates for all regions and offices.\n        canApplyRoomTemplates:\n          type: boolean\n          description: When set to **true**, users can apply a room template when\n            they create a room.\n        canAddTasksToRooms:\n          type: boolean\n          description: When set to **true**, users can add tasks to rooms.\n        canReviewAnyTask:\n          type: boolean\n          description: When set to **true**, users can review tasks of rooms.\n        canManageDocsOnAnyTask:\n          type: boolean\n          description: When set to **true**, users can add manage docs on any task of rooms.\n        canAddMemberAndSetRoleLowerAccessLevel:\n          type: boolean\n          description: When set to **true**, users can add other users with a lower\n            access level than their own to offices or regions that they oversee and\n            set those users' roles.\n        canAddMemberAndSetRoleSameAccessLevel:\n          type: boolean\n          description: When set to **true**, users can add other users with the same\n            access level as their own to offices or regions that they oversee and\n            set those users' roles.\n        canChangeMemberRoleLowerAccessLevel:\n          type: boolean\n          description: When set to **true**, users can edit the roles of other users\n            who have a lower access level than their own and that belong to offices\n            or regions that they oversee.\n        canChangeMemberRoleSameAccessLevel:\n          type: boolean\n          description: When set to **true**, users can edit the roles of other users\n            who have the same access level as their own and that belong to offices\n            or regions that they oversee.\n        canManageMemberLowerAccessLevel:\n          type: boolean\n          description: When set to **true**, users can change the access level, office,\n            region, and eSignature permission set of other users who have a lower\n            access level than their own.\n        canManageMemberSameAccessLevel:\n          type: boolean\n          description: When set to **true**, users can change the access level, office,\n            region, and eSignature permission set of other users who have the same\n            access level as their own.\n        canRemoveCompanyMemberLowerAccessLevel:\n          type: boolean\n          description: When set to **true**, users can remove other users who have\n            a lower access level than their own and that belong to offices or regions\n            that they oversee from the company account.\n        canRemoveCompanyMemberSameAccessLevel:\n          type: boolean\n          description: When set to **true**, users can remove other users who have\n            the same access level as their own and that belong to offices or regions\n            that they oversee from the company account.\n        canManageAccount:\n          type: boolean\n          description: When set to **true**, users can access the **Company Settings**\n            tab under **Rooms \u003e Admin \u003e Company** to manage company account settings\n            and change the company name, contact information, currency, offices, and\n            regions.\n        canManageLogo:\n          type: boolean\n          description: When set to **true**, users can access the **Company Logo**\n            section in **Company Settings** to add or change the company logo.\n        canManageRolesAndPermissions:\n          type: boolean\n          description: When set to **true**, users can add manage roles and permissions of rooms.\n        canManageRoomDetails:\n          type: boolean\n          description: When set to **true**, users see the **Room Details** tab under\n            **Rooms \u003e Admin \u003e Company** and can use it to configure room details.\n            They can also add additional contact fields.\n        canManageRoomTemplates:\n          type: boolean\n          description: When set to **true**, users see the **Room Templates** option\n            in the **Rooms \u003e Admin** menu, which enables them to add, edit, and delete\n            room templates.\n        canManageIntegrationSettings:\n          type: boolean\n          description: When set to **true**, users can add manage integration settings of rooms.\n      description: Contains details about permissions.\n      x-ds-definition-name: Permissions\n      x-ms-summary: Contains details about permissions.\n    Role:\n      type: object\n      properties:\n        roleId:\n          type: integer\n          description: In Rooms v6, this is the id of the company role assigned to\n            the user.\n          format: int32\n        legacyRoleId:\n          type: string\n          description: The legacy name of the role in Rooms Version 5.\n        name:\n          type: string\n          description: The name of the role.\n        isDefaultForAdmin:\n          type: boolean\n          description: When **true**, the role is the default for account administrators.\n        isExternal:\n          type: boolean\n          description: When set to **true**, the role is an external role. You assign\n            external roles to people from outside your company when you invite them\n            into a room.\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n        isAssigned:\n          type: boolean\n          description: When set to **true**, indicates that this role is currently\n            assigned to a user.\n        permissions:\n          $ref: '#/components/schemas/Permissions'\n      description: Contains details about a company role.\n      x-ds-definition-name: Role\n      x-ms-summary: Contains details about a company role.\n    RoleForCreate:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the role.\n        isExternal:\n          type: boolean\n          description: When set to **true**, the role is an external role. You assign\n            external roles to people from outside your company when you invite them\n            into a room.\n        permissions:\n          $ref: '#/components/schemas/Permissions'\n      description: Contains details about the role that you want to create.\n      x-ds-definition-name: RoleForCreate\n      x-ms-summary: Contains details about the role that you want to create.\n    RoleForUpdate:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the role.\n        isExternal:\n          type: boolean\n          description: When set to **true**, the role is an external role. You assign\n            external roles to people from outside your company when you invite them\n            into a room.\n        permissions:\n          $ref: '#/components/schemas/Permissions'\n      description: This request object contains the details to use for the update.\n      x-ds-definition-name: RoleForUpdate\n      x-ms-summary: This request object contains the details to use for the update.\n    RoleSummary:\n      type: object\n      properties:\n        roleId:\n          type: integer\n          description: In Rooms v6, this is the id of the company role assigned to\n            the user.\n          format: int32\n        legacyRoleId:\n          type: string\n          description: The legacy name of the role in Rooms Version 5.\n        name:\n          type: string\n          description: The name of the role.\n        isDefaultForAdmin:\n          type: boolean\n          description: When **true**, the role is the default for account administrators.\n        isExternal:\n          type: boolean\n          description: When set to **true**, the role is an external role. You assign\n            external roles to people from outside your company when you invite them\n            into a room.\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n      description: Contains details about a role.\n      x-ds-definition-name: RoleSummary\n      x-ms-summary: Contains details about a role.\n    RoleSummaryList:\n      type: object\n      properties:\n        roles:\n          type: array\n          description: An array of `role` objects.\n          items:\n            $ref: '#/components/schemas/RoleSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: This complex type contains details about the roles that are associated\n        with an account.\n      x-ds-definition-name: RoleSummaryList\n      x-ms-summary: This complex type contains details about the roles that are associated\n        with an account.\n    Room:\n      type: object\n      properties:\n        roomId:\n          type: integer\n          description: The id of the room.\n          format: int32\n        companyId:\n          type: integer\n          description: The id of the company.\n          format: int32\n        name:\n          type: string\n          description: The name of the room.\n        officeId:\n          type: integer\n          description: The id of the office. This is the id that the system generated\n            when you created the office.\n          format: int32\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n        submittedForReviewDate:\n          type: string\n          description: |-\n            The UTC DateTime when the room was submitted for review.\n\n            **Note**: In Rooms v5, this is when an agent submitted the room to a manager. In Rooms v6, this is when a member with a role for which the **Submit rooms for review** permission is set to **true** submitted the room to a member with a role for which the **Review and close rooms** permission is set to **true**.\n          format: date-time\n        closedDate:\n          type: string\n          description: The UTC date and time when the room was closed.\n          format: date-time\n        rejectedDate:\n          type: string\n          description: The date on which the reviewer rejected the room. For example,\n            a reviewer might reject closing a room if documentation is missing or\n            the details are inaccurate.\n          format: date-time\n        createdByUserId:\n          type: integer\n          description: The id of the user who created the room.\n          format: int32\n        rejectedByUserId:\n          type: integer\n          description: The id of the user who rejected the room.\n          format: int32\n        closedStatusId:\n          type: string\n          description: \"The reason why a room was closed. Possible values are:\\n\\n\\\n            - `sold`: Property sold.\\n- `dup`: Duplicate room.\\n- `escrcncl`: Escrow\\\n            \\ canceled.\\n- `inspctn`: Inspection issues.\\n- `exp`: Listing expired.\\n\\\n            - `lostbuy`: Buyer withdrew.\\n- `list`: Listing withdrawn. \\n- `newlist`:\\\n            \\ New listing.\\n- `offrrjct`: Offer not accepted.\\n- `pend`: Pending.\\\n            \\ An agent might use this status to temporarily hide a room from their\\\n            \\ Active rooms view if they are blocked on a task. When they are ready\\\n            \\ to reopen the room, they can quickly find it by filtering for rooms\\\n            \\ in `pending` status.\\n- `lstcanc`: Listing canceled. \\n- `lstleave`:\\\n            \\ Listing released.\\n- `sellwtdw`: Seller withdrew.\\n- `nofin`: Buyer\\\n            \\ unable to finance.\\n- `disciss`: Property disclosure issue.\\n- `appiss`:\\\n            \\ Appraisal issues.\\n- `mtgiss`: Mortgage issues. Use when details about\\\n            \\ why the buyer wasn't able to obtain financing are unknown.\\n- `zoniss`:\\\n            \\ Zoning issues.\\n- `attiss`: Attorney review issues.\\n- `proplsd`: Property\\\n            \\ leased. Use for the list side of the transaction.\\n- `tenlease`: Tenant\\\n            \\ signed lease. Use when an agent helps renters find a to lease.   \"\n        fieldData:\n          $ref: '#/components/schemas/FieldData'\n      description: Contains details about a room.\n      x-ds-definition-name: Room\n      x-ms-summary: Contains details about a room.\n    RoomDocument:\n      type: object\n      properties:\n        documentId:\n          type: integer\n          description: The ID of the document.\n          format: int32\n        name:\n          type: string\n          description: |-\n            The file name of the document.\n\n            Example: `Short Sale Supplement to Marketing Agreement.pdf`\n        ownerId:\n          type: integer\n          description: The id of the user who owns the document.\n          format: int32\n        size:\n          type: integer\n          description: The size of the document in bytes.\n          format: int64\n        folderId:\n          type: integer\n          description: The id of the folder the document is in.\n          format: int32\n        createdDate:\n          type: string\n          description: \"The UTC date and time that the document was created or uploaded.\\\n            \\ \\n\\nExample: `2019-07-25T22:18:56.95Z`\\n\"\n          format: date-time\n        isSigned:\n          type: boolean\n          description: When set to **true**, this property indicates that the document\n            is signed.\n        docuSignFormId:\n          type: string\n          description: The id of the corresponding DocuSign form.\n        isArchived:\n          type: boolean\n          description: '**True** if the document is archived.'\n        isVirtual:\n          type: boolean\n          description: '**True** if the document is virtual.'\n        owner:\n          description: \"Room document owner\"\n          $ref: '#/components/schemas/RoomDocumentOwner'\n      description: An individual document in a room.\n      x-ds-definition-name: RoomDocument\n      x-ms-summary: An individual document in a room.\n    RoomDocumentList:\n      type: object\n      properties:\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n        documents:\n          type: array\n          description: An array of room documents.\n          items:\n            $ref: '#/components/schemas/RoomDocument'\n      description: A list of documents in a room.\n      x-ds-definition-name: RoomDocumentList\n      x-ms-summary: A list of documents in a room.\n    RoomFolder:\n      type: object\n      properties:\n        roomFolderId:\n          type: integer\n          description: The ID of the folder.\n          format: int32\n        name:\n          type: string\n          description: The name of the folder.\n        isDefault:\n          type: boolean\n          description: When **true**, this is the default folder.\n      description: Information about a room folder.\n      x-ds-definition-name: RoomFolder\n      x-ms-summary: Information about a room folder.\n    RoomFolderList:\n      type: object\n      properties:\n        folders:\n          type: array\n          description: An array of room folders.\n          items:\n            $ref: '#/components/schemas/RoomFolder'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: A list of room folder results.\n      x-ds-definition-name: RoomFolderList\n      x-ms-summary: A list of room folder results.\n    RoomForCreate:\n      required:\n      - name\n      - roleId\n      type: object\n      properties:\n        name:\n          type: string\n          description: (Required) The name of the room.\n        roleId:\n          type: integer\n          description: (Required) The id of the role that the owner has in the room.\n          format: int32\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n\n            **Note**: This property is required for real estate companies, and otherwise ignored.\n        ownerId:\n          type: integer\n          description: The id of the user who owns the room.\n          format: int32\n        templateId:\n          type: integer\n          description: (Optional) The id of the template to use to create the room.\n          format: int32\n        officeId:\n          type: integer\n          description: '(Optional) The id of the office associated with the room.\n            Required when creating a room on behalf of someone else or a Manager-owned\n            room. '\n          format: int32\n        fieldData:\n          $ref: '#/components/schemas/FieldDataForCreate'\n      description: This request object contains the details about the new room.\n      x-ds-definition-name: RoomForCreate\n      x-ms-summary: This request object contains the details about the new room.\n    RoomInvite:\n      required:\n      - email\n      - firstName\n      - lastName\n      - roleId\n      type: object\n      properties:\n        email:\n          type: string\n          description: The user's email address.\n        firstName:\n          type: string\n          description: The user's first name.\n        lastName:\n          type: string\n          description: The user's last name.\n        roleId:\n          type: integer\n          description: |-\n            In Rooms Version 6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who are not part of your organization.\n\n            **Note**: If you are using Rooms Version 6, you must enter a `roleId` in requests. If you are using Rooms Version 5, you must use one of the Users::InviteClassic methods with the `titleId` property instead.\n          format: int32\n        transactionSideId:\n          type: string\n          description: Required for a real estate company; otherwise ignored.\n      description: The information to use for the invitation.\n      x-ds-definition-name: RoomInvite\n      x-ms-summary: The information to use for the invitation.\n    RoomInviteResponse:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n          readOnly: true\n        roomId:\n          type: integer\n          description: The id of the room.\n          format: int32\n          readOnly: true\n        email:\n          type: string\n          description: The user's email address.\n          readOnly: true\n        firstName:\n          type: string\n          description: The user's first name.\n          readOnly: true\n        lastName:\n          type: string\n          description: The user's last name.\n          readOnly: true\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n          readOnly: true\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n          readOnly: true\n      description: Information about the sent invitation.\n      x-ds-definition-name: RoomInviteResponse\n      x-ms-summary: Information about the sent invitation.\n    RoomPicture:\n      type: object\n      properties:\n        url:\n          type: string\n          description: The URL for the uploaded picture.\n      description: This response object contains the URL for the uploaded picture.\n      x-ds-definition-name: RoomPicture\n      x-ms-summary: This response object contains the URL for the uploaded picture.\n    RoomSummary:\n      type: object\n      properties:\n        roomId:\n          type: integer\n          description: The id of the room.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the room.\n          readOnly: true\n        officeId:\n          type: integer\n          description: The id of the office. This is the id that the system generated\n            when you created the office.\n          format: int32\n          readOnly: true\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n          readOnly: true\n        submittedForReviewDate:\n          type: string\n          description: |-\n            The UTC DateTime when the room was submitted for review.\n\n            **Note**: In Rooms v5, this is when an agent submitted the room to a manager. In Rooms v6, this is when a member with a role for which the **Submit rooms for review** permission is set to **true** submitted the room to a member with a role for which the **Review and close rooms** permission is set to **true**.\n          format: date-time\n          readOnly: true\n        closedDate:\n          type: string\n          description: The UTC date and time when the room was closed.\n          format: date-time\n          readOnly: true\n        rejectedDate:\n          type: string\n          description: The date on which the reviewer rejected the room. For example,\n            a reviewer might reject closing a room if documentation is missing or\n            the details are inaccurate.\n          format: date-time\n          readOnly: true\n        createdByUserId:\n          type: integer\n          description: The id of the user who created the room.\n          format: int32\n          readOnly: true\n        rejectedByUserId:\n          type: integer\n          description: The id of the user who rejected the room.\n          format: int32\n          readOnly: true\n        closedStatusId:\n          type: string\n          description: \"The reason why a room was closed. Possible values are:\\n\\n\\\n            - `sold`: Property sold.\\n- `dup`: Duplicate room.\\n- `escrcncl`: Escrow\\\n            \\ canceled.\\n- `inspctn`: Inspection issues.\\n- `exp`: Listing expired.\\n\\\n            - `lostbuy`: Buyer withdrew.\\n- `list`: Listing withdrawn. \\n- `newlist`:\\\n            \\ New listing.\\n- `offrrjct`: Offer not accepted.\\n- `pend`: Pending.\\\n            \\ An agent might use this status to temporarily hide a room from their\\\n            \\ Active rooms view if they are blocked on a task. When they are ready\\\n            \\ to reopen the room, they can quickly find it by filtering for rooms\\\n            \\ in `pending` status.\\n- `lstcanc`: Listing canceled. \\n- `lstleave`:\\\n            \\ Listing released.\\n- `sellwtdw`: Seller withdrew.\\n- `nofin`: Buyer\\\n            \\ unable to finance.\\n- `disciss`: Property disclosure issue.\\n- `appiss`:\\\n            \\ Appraisal issues.\\n- `mtgiss`: Mortgage issues. Use when details about\\\n            \\ why the buyer wasn't able to obtain financing are unknown.\\n- `zoniss`:\\\n            \\ Zoning issues.\\n- `attiss`: Attorney review issues.\\n- `proplsd`: Property\\\n            \\ leased. Use for the list side of the transaction.\\n- `tenlease`: Tenant\\\n            \\ signed lease. Use when an agent helps renters find a to lease.   \"\n          readOnly: true\n        fieldDataLastUpdatedDate:\n          type: string\n          description: \"Field data last updated date\"\n          format: date-time\n          readOnly: true\n      description: This object contains details about a room.\n      x-ds-definition-name: RoomSummary\n      x-ms-summary: This object contains details about a room.\n    RoomSummaryList:\n      type: object\n      properties:\n        rooms:\n          type: array\n          description: An array of `roomSummary` objects.\n          items:\n            $ref: '#/components/schemas/RoomSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: This complex type contains details about rooms.\n      x-ds-definition-name: RoomSummaryList\n      x-ms-summary: This complex type contains details about rooms.\n    RoomTemplate:\n      type: object\n      properties:\n        roomTemplateId:\n          type: integer\n          description: The id of the room template.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        taskTemplateCount:\n          type: integer\n          description: The total number of task templates that the room template uses.\n          format: int32\n          readOnly: true\n      description: Contains details about a room template.\n      x-ds-definition-name: RoomTemplate\n      x-ms-summary: Contains details about a room template.\n    RoomTemplatesSummaryList:\n      type: object\n      properties:\n        roomTemplates:\n          type: array\n          description: An array of `roomTemplate` objects.\n          items:\n            $ref: '#/components/schemas/RoomTemplate'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: This complex type contains information about room templates.\n      x-ds-definition-name: RoomTemplatesSummaryList\n      x-ms-summary: This complex type contains information about room templates.\n    RoomUser:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n        email:\n          type: string\n          description: The user's email address.\n        firstName:\n          type: string\n          description: The user's first name.\n        lastName:\n          type: string\n          description: The user's last name.\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n        roleId:\n          type: integer\n          description: The id of the user's role.\n          format: int32\n        isRevoked:\n          type: boolean\n          description: When set to **true**, indicates that the user's access to the\n            room has been revoked.\n        invitedByUserId:\n          type: integer\n          description: The `userId` of the person who invited the room user to the\n            room.\n          format: int32\n      description: This object contains details about a specific room member.\n      x-ds-definition-name: RoomUser\n      x-ms-summary: This object contains details about a specific room member.\n    RoomUserForUpdate:\n      type: object\n      properties:\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n      description: This request object contains the information that you want to update\n        for the room user.\n      x-ds-definition-name: RoomUserForUpdate\n      x-ms-summary: This request object contains the information that you want to\n        update for the room user.\n    RoomUserRemovalDetail:\n      type: object\n      properties:\n        revocationDate:\n          type: string\n          description: |-\n            The date on which the users room access should be revoked\n            in ISO 8601 fomat: `1973-12-31T07:54Z`.\n          format: date-time\n      description: Details for removal.\n      x-ds-definition-name: RoomUserRemovalDetail\n      x-ms-summary: Details for removal.\n    RoomUsersResult:\n      type: object\n      properties:\n        users:\n          type: array\n          description: An array of `RoomUser` objects.\n          items:\n            $ref: '#/components/schemas/RoomUserSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: This complex type contains details about the users associated with\n        a room.\n      x-ds-definition-name: RoomUsersResult\n      x-ms-summary: This complex type contains details about the users associated\n        with a room.\n    RoomUserSummary:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n          readOnly: true\n        email:\n          type: string\n          description: The user's email address.\n          readOnly: true\n        firstName:\n          type: string\n          description: The user's first name.\n          readOnly: true\n        lastName:\n          type: string\n          description: The user's last name.\n          readOnly: true\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n          readOnly: true\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n          readOnly: true\n        titleId:\n          type: integer\n          description: |-\n            In Rooms Version 5, this is the id of the custom job title for a Manager role within your company. For example, your company might have the custom job titles \"Transaction Coordinator\" and \"Office Manager\".\n\n            **Note**: If you are using Rooms Version 5, you must enter a `titleId` when using the Users::InviteClassicManager method. (The `titleId` property is empty for Agent users on Rooms Version 5.) If you are using Rooms Version 6, use the Users::InviteUser method with the `roleId` property instead.\n          format: int32\n          readOnly: true\n        companyName:\n          type: string\n          description: The company name.\n          readOnly: true\n        roleName:\n          type: string\n          description: \"Role name\"\n          readOnly: true\n      description: Contains details about a room user.\n      x-ds-definition-name: RoomUserSummary\n      x-ms-summary: Contains details about a room user.\n    TaskList:\n      type: object\n      properties:\n        taskListId:\n          type: integer\n          description: The id of the task list.\n          format: int32\n        name:\n          type: string\n          description: The name of the task list.\n        taskListTemplateId:\n          type: integer\n          description: The id of the task list template used to create the task list.\n          format: int32\n        submittedForReviewDate:\n          type: string\n          description: The UTC DateTime when the task list was submitted for review.\n          format: date-time\n        approvalDate:\n          type: string\n          description: The UTC DateTime when the task list was approved.\n          format: date-time\n        rejectedDate:\n          type: string\n          description: 'The UTC DateTime when the reviewer rejected the task list. '\n          format: date-time\n        createdDate:\n          type: string\n          description: |-\n            The UTC date and time when the task list was created. This is a read-only value that the service assigns.\n\n            Example: 2019-07-17T17:45:42.783Z\n          format: date-time\n        approvedByUserId:\n          type: integer\n          description: The id of the user who approved the task list.\n          format: int32\n        rejectedByUserId:\n          type: integer\n          description: The id of the user who rejected the task list.\n          format: int32\n        comment:\n          type: string\n          description: Contains a comment about the task list.\n        tasks:\n          type: array\n          description: A list of tasks in the task list.\n          items:\n            $ref: '#/components/schemas/TaskSummary'\n      description: This response object contains details about the new task list.\n      x-ds-definition-name: TaskList\n      x-ms-summary: This response object contains details about the new task list.\n    TaskListForCreate:\n      type: object\n      properties:\n        taskListTemplateId:\n          type: integer\n          description: (Required) The id of the task list template.\n          format: int32\n      description: Contains information about the task list template to use to create\n        the new task list.\n      x-ds-definition-name: TaskListForCreate\n      x-ms-summary: Contains information about the task list template to use to create\n        the new task list.\n    TaskListSummary:\n      type: object\n      properties:\n        taskListId:\n          type: integer\n          description: The id of the task list.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the task list.\n          readOnly: true\n        taskListTemplateId:\n          type: integer\n          description: The id of the task list template.\n          format: int32\n          readOnly: true\n        submittedForReviewDate:\n          type: string\n          description: The UTC DateTime when the task list was submitted for review.\n          format: date-time\n          readOnly: true\n        approvalDate:\n          type: string\n          description: The UTC DateTime when the task list was approved.\n          format: date-time\n          readOnly: true\n        rejectedDate:\n          type: string\n          description: The date on which the reviewer rejected the task list.\n          format: date-time\n          readOnly: true\n        createdDate:\n          type: string\n          description: |-\n            The UTC date and time when the task list was created. This is a read-only value that the service assigns.\n\n            Example: 2019-07-17T17:45:42.783Z\n          format: date-time\n          readOnly: true\n        approvedByUserId:\n          type: integer\n          description: The id of the user who approved the task list.\n          format: int32\n          readOnly: true\n        rejectedByUserId:\n          type: integer\n          description: The id of the user who rejected the task list.\n          format: int32\n          readOnly: true\n        comment:\n          type: string\n          description: Contains a user comment about the task list.\n          readOnly: true\n      description: Contains information about a task list.\n      x-ds-definition-name: TaskListSummary\n      x-ms-summary: Contains information about a task list.\n    TaskListSummaryList:\n      type: object\n      properties:\n        taskListSummaries:\n          type: array\n          description: A list of task list summaries.\n          items:\n            $ref: '#/components/schemas/TaskListSummary'\n      description: Contains a list of task list summaries.\n      x-ds-definition-name: TaskListSummaryList\n      x-ms-summary: Contains a list of task list summaries.\n    TaskSummary:\n      type: object\n      properties:\n        taskId:\n          type: integer\n          description: The id of the task list.\n          format: int32\n        name:\n          type: string\n          description: The name of the task list.\n        requiresApproval:\n          type: boolean\n          description: When set to **true**, the task must be completed and reviewed\n            before it can be closed.\n        dueDateTypeId:\n          type: string\n          description: The id of the due date type (such as Actual Close Date or Contract\n            Date).\n        dueDateOffset:\n          type: integer\n          description: The number of days before or after the due date (specified\n            by the `dueDateTypeId`) within which the task must be completed. A negative\n            number indicates that the task must be completed within a certain number\n            of days before the due date. A positive number indicates that the task\n            must be completed within a certain number of days after the due date.\n          format: int32\n        fixedDueDate:\n          type: string\n          description: |-\n            A specific calendar due date for the task.\n\n            In the API, this value is a UTC DateTime that does not actually include a time.\n\n            Example: 2019-07-17T00:00:00.000Z\n          format: date-time\n        ownerUserId:\n          type: integer\n          description: The id of the user who owns the task.\n          format: int32\n        completionDate:\n          type: string\n          description: |-\n            The UTC DateTime when the task was completed.\n\n            Example: 2019-07-17T17:45:42.783Z\n          format: date-time\n        approvalDate:\n          type: string\n          description: |-\n            The UTC DateTime when the task was approved.\n\n            Example: 2019-07-17T17:45:42.783Z\n          format: date-time\n        rejectedDate:\n          type: string\n          description: The date on which the reviewer rejected the task.\n          format: date-time\n        createdDate:\n          type: string\n          description: \"\\t\\nThe UTC date and time when the task was created. This\\\n            \\ is a read-only value that the service assigns.\\n\\nExample: 2019-07-17T17:45:42.783Z\"\n          format: date-time\n        isDocumentTask:\n          type: boolean\n          description: When set to **true**, the task is associated with a document.\n        requiresReview:\n          type: boolean\n          description: When set to **true**, the task is optional. If the task is\n            completed (if a document is added or the task is marked complete), it\n            must be reviewed before it can be closed.\n      description: Contains information about a task list.\n      x-ds-definition-name: TaskSummary\n      x-ms-summary: Contains information about a task list.\n    TaskListTemplate:\n      type: object\n      properties:\n        taskListTemplateId:\n          type: integer\n          description: The id of the task list template.\n          format: int32\n        name:\n          type: string\n          description: The name of the task list template.\n        taskCount:\n          type: integer\n          description: The total number of tasks in the task list template.\n          format: int32\n        tasksWithDocumentsCount:\n          type: integer\n          description: The number of tasks in the task list template that have documents\n            associated with them.\n          format: int32\n      description: Contains details about a task list template.\n      x-ds-definition-name: TaskListTemplate\n      x-ms-summary: Contains details about a task list template.\n    TaskListTemplateList:\n      type: object\n      properties:\n        taskListTemplates:\n          type: array\n          description: A list of task list templates.\n          items:\n            $ref: '#/components/schemas/TaskListTemplate'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Contains a list of task list templates.\n      x-ds-definition-name: TaskListTemplateList\n      x-ms-summary: Contains a list of task list templates.\n    ClassicAdminToInvite:\n      required:\n      - email\n      - firstName\n      - lastName\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: (Required) The user's first name.\n        lastName:\n          type: string\n          description: (Required) The user's last name.\n        email:\n          type: string\n          description: (Required) The user's email address.\n      description: This request object contains details about the person who you want\n        to invite.\n      x-ds-definition-name: ClassicAdminToInvite\n      x-ms-summary: This request object contains details about the person who you\n        want to invite.\n    ClassicAgentToInvite:\n      required:\n      - email\n      - firstName\n      - lastName\n      - officeId\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: (Required) The user's first name.\n        lastName:\n          type: string\n          description: (Required) The user's last name.\n        email:\n          type: string\n          description: (Required) The user's email address.\n        officeId:\n          type: integer\n          description: (Required) The id of the office. This is the id that the system\n            generated when you created the office.\n          format: int32\n        companyTypeId:\n          type: string\n          description: \"Company type ID\"\n        eSignPermissionProfileId:\n          type: string\n          description: (Required) When an administrator or authorized member invites\n            a new user to become an account member, the system also creates an eSignature\n            account for the invitee at the same time. The `eSignPermissionProfileId`\n            is the id of the eSignature permission set to assign to the member.\n      description: This request object contains details about the person who you want\n        to invite.\n      x-ds-definition-name: ClassicAgentToInvite\n      x-ms-summary: This request object contains details about the person who you\n        want to invite.\n    ClassicManagerPermissions:\n      type: object\n      properties:\n        isVisibleInTransactionRooms:\n          type: boolean\n          description: |-\n            When set to **true**, the user is visible in company rooms.\n\n            **Note**: Inherited managers are automatically added to rooms and are visible in those rooms unless this setting is set to **false**. Inherited managers are users who oversee others and have the **auto-access to rooms of members the user manages** permission enabled.\n        canDeleteCompanyRooms:\n          type: boolean\n          description: When set to **true**, the user can delete company rooms.\n        canDeleteCompanyDocuments:\n          type: boolean\n          description: When set to **true**, the user can delete company documents.\n        canManageCompanyRooms:\n          type: boolean\n          description: When set to **true**, the user can manage company rooms.\n        canManageCompanyAccount:\n          type: boolean\n          description: When set to **true**, the user can manage the company's account.\n        canManageCompanySharedLibrary:\n          type: boolean\n          description: When set to **true**, the user can manage the company's shared\n            library.\n        canManageCompanyMembers:\n          type: boolean\n          description: When set to **true**, the user can manage other users on the\n            company's account.\n        canCloseCompanyRooms:\n          type: boolean\n          description: When set to **true**, the user can close company rooms.\n        canApproveCompanyChecklists:\n          type: boolean\n          description: When set to **true**, the user can approve company checklists.\n        isCompanySystemAdmin:\n          type: boolean\n          description: When set to **true**, the user is a system administrator for\n            the company.\n        isRegionManager:\n          type: boolean\n          description: When set to **true**, the user is a region manager.\n        isOfficeManager:\n          type: boolean\n          description: When set to **true**, the user is an office manager.\n        autoAccessToCompanyRooms:\n          type: boolean\n          description: When set to **true**, the user is automatically added to new\n            company rooms and is visible in those rooms.\n      description: This object contains details about user permissions. These permissions\n        are associated only with Rooms v5.\n      x-ds-definition-name: ClassicManagerPermissions\n      x-ms-summary: This object contains details about user permissions. These permissions\n        are associated only with Rooms v5.\n    ClassicManagerToInvite:\n      required:\n      - accessLevel\n      - defaultOfficeId\n      - email\n      - firstName\n      - lastName\n      - permissions\n      - titleId\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: (Required) The user's first name.\n        lastName:\n          type: string\n          description: (Required) The user's last name.\n        email:\n          type: string\n          description: (Required) The user's email address.\n        defaultOfficeId:\n          type: integer\n          description: (Required) The id of the user's default office.\n          format: int32\n        titleId:\n          type: integer\n          description: |-\n            (Required) In Rooms v5, this is the id of the custom job title for a Manager role within your company. For example, your company might have the custom job titles \"Transaction Coordinator\" and \"Office Manager\".\n\n            **Note**: If you are using Rooms v6, use the Users::InviteUser method with the roleId property instead.\n          format: int32\n        accessLevel:\n          $ref: '#/components/schemas/AccessLevel'\n        permissions:\n          $ref: '#/components/schemas/ClassicManagerPermissions'\n        offices:\n          type: array\n          description: |-\n            An array of office ids for the offices to which the user belongs.\n\n            **Note**: You only specify the `offices` property when the user's `accessLevel` is `office`.\n          items:\n            type: integer\n            format: int32\n        regions:\n          type: array\n          description: |-\n            An array of region ids for the regions to which the user belongs.\n\n            **Note**: You only specify the `regions` property when the user's `accessLevel` is `region`.\n          items:\n            type: integer\n            format: int32\n        eSignPermissionProfileId:\n          type: string\n          description: (Required) When an administrator or authorized member invites\n            a new user to become an account member, the system also creates an eSignature\n            account for the invitee at the same time. The eSignPermissionProfileId\n            is the id of the eSignature permission set to assign to the member.\n      description: This request object contains details about the person who you want\n        to invite.\n      x-ds-definition-name: ClassicManagerToInvite\n      x-ms-summary: This request object contains details about the person who you\n        want to invite.\n    LockedOutDetails:\n      required:\n      - reason\n      type: object\n      properties:\n        reason:\n          type: string\n          description: The reason the account was locked.\n      description: Details about a locked account.\n      x-ds-definition-name: LockedOutDetails\n      x-ms-summary: Details about a locked account.\n    User:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n        email:\n          type: string\n          description: The user's email address.\n        firstName:\n          type: string\n          description: The user's first name.\n        lastName:\n          type: string\n          description: The user's last name.\n        isLockedOut:\n          type: boolean\n          description: When set to **true**, an administrator has locked the user's\n            account. For example, an administrator might want to lock an agent's account\n            after they leave the brokerage until they determine how to transfer the\n            agent's rooms and data to another active user.\n        status:\n          type: string\n          description: |-\n            The user's status. Read only. Possible values are:\n\n            - `Active`: The user is active.\n            - `Pending`: The user has been invited but has not yet accepted the invitation.\n        accessLevel:\n          $ref: '#/components/schemas/AccessLevel'\n        defaultOfficeId:\n          type: integer\n          description: The id of the user's default office.\n          format: int32\n        titleId:\n          type: integer\n          description: |-\n            In Rooms Version 5, this is the id of the custom job title for a Manager role within your company. For example, your company might have the custom job titles \"Transaction Coordinator\" and \"Office Manager\".\n\n            **Note**: If you are using Rooms Version 5, you must enter a `titleId` when using the Users::InviteClassicManager method. (The `titleId` property is empty for Agent users on Rooms Version 5.) If you are using Rooms Version 6, use the Users::InviteUser method with the `roleId` property instead.\n          format: int32\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n        profileImageUrl:\n          type: string\n          description: The URL for the user's profile image.\n        offices:\n          type: array\n          description: An array of office ids for the offices in which a user with\n            an `Office` or `Contributor` `accessLevel` has been granted the ability\n            to participate.\n          items:\n            type: integer\n            format: int32\n        regions:\n          type: array\n          description: An array of region ids for the regions in which a user with\n            the `Region accessLevel` has been granted the ability to participate.\n          items:\n            type: integer\n            format: int32\n        permissions:\n          $ref: '#/components/schemas/ClassicManagerPermissions'\n      description: Contains details about a user.\n      x-ds-definition-name: User\n      x-ms-summary: Contains details about a user.\n    UserForUpdate:\n      required:\n      - defaultOfficeId\n      type: object\n      properties:\n        defaultOfficeId:\n          type: integer\n          description: (Required) The id of the user's default office.\n          format: int32\n      description: 'This request object contains the information to use to update\n        a user''s default office. '\n      x-ds-definition-name: UserForUpdate\n      x-ms-summary: 'This request object contains the information to use to update\n        a user''s default office. '\n    UserSummary:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n          readOnly: true\n        email:\n          type: string\n          description: The user's email address.\n          readOnly: true\n        firstName:\n          type: string\n          description: The user's first name.\n          readOnly: true\n        lastName:\n          type: string\n          description: The user's last name.\n          readOnly: true\n        isLockedOut:\n          type: boolean\n          description: When set to **true**, an administrator has locked the user's\n            account. For example, an administrator might want to lock an agent's account\n            after they leave the brokerage until they determine how to transfer the\n            agent's rooms and data to another active user.\n          readOnly: true\n        status:\n          type: string\n          description: |-\n            The user's status. Possible values are:\n\n            - `Active`\n            - `Pending`\n          readOnly: true\n        accessLevel:\n          $ref: '#/components/schemas/AccessLevel'\n        defaultOfficeId:\n          type: integer\n          description: The id of the user's default office.\n          format: int32\n          readOnly: true\n        titleId:\n          type: integer\n          description: |-\n            In Rooms Version 5, this is the id of the custom job title for a Manager role within your company. For example, your company might have the custom job titles \"Transaction Coordinator\" and \"Office Manager\".\n\n            **Note**: If you are using Rooms Version 5, you must enter a `titleId` when using the Users::InviteClassicManager method. (The `titleId` property is empty for Agent users on Rooms Version 5.) If you are using Rooms Version 6, use the Users::InviteUser method with the `roleId` property instead.\n          format: int32\n          readOnly: true\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n          readOnly: true\n        profileImageUrl:\n          type: string\n          description: The URL for the user's profile image.\n          readOnly: true\n      description: Contains details about a user.\n      x-ds-definition-name: UserSummary\n      x-ms-summary: Contains details about a user.\n    UserSummaryList:\n      type: object\n      properties:\n        userSummaries:\n          type: array\n          description: A list of users.\n          items:\n            $ref: '#/components/schemas/UserSummary'\n        resultSetSize:\n          type: integer\n          description: The number of results returned in this response.\n          format: int32\n        startPosition:\n          type: integer\n          description: The starting zero-based index position of the results set.\n            When this property is used as a query parameter, the default value is\n            `0`.\n          format: int32\n        endPosition:\n          type: integer\n          description: The last zero-based index position in the result set.\n          format: int32\n          readOnly: true\n        nextUri:\n          type: string\n          description: The URI for the next chunk of records based on the search request.\n            This property is `null` for the last set of search results.\n        priorUri:\n          type: string\n          description: The URI for the previous chunk of records based on the search\n            request. This property is `null` for the first set of search results.\n        totalRowCount:\n          type: integer\n          description: \"Total row count\"\n          format: int32\n      description: Contains a list of users.\n      x-ds-definition-name: UserSummaryList\n      x-ms-summary: Contains a list of users.\n    UserToInvite:\n      required:\n      - accessLevel\n      - defaultOfficeId\n      - eSignPermissionProfileId\n      - email\n      - firstName\n      - lastName\n      - roleId\n      type: object\n      properties:\n        firstName:\n          type: string\n          description: (Required) The user's first name.\n        lastName:\n          type: string\n          description: (Required) The user's last name.\n        email:\n          type: string\n          description: (Required) The user's email address.\n        roleId:\n          type: integer\n          description: |\n            (Required) In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who are not part of your organization.\n          format: int32\n        accessLevel:\n          $ref: '#/components/schemas/AccessLevel'\n        defaultOfficeId:\n          type: integer\n          description: (Required) The id of the user's default office.\n          format: int32\n        regions:\n          type: array\n          description: An array of region ids for the regions in which a user with\n            the `Region accessLevel` has been granted the ability to participate.\n            If the value for `accessLevel` is `Region`, this property is required.\n          items:\n            type: integer\n            format: int32\n        offices:\n          type: array\n          description: An array of office ids for the offices in which a user with\n            an `Office` or `Contributor` `accessLevel` has been granted the ability\n            to participate. If the value for `accessLevel` is `Office`, this property\n            is required.\n          items:\n            type: integer\n            format: int32\n        eSignPermissionProfileId:\n          type: string\n          description: (Required) When an administrator or authorized member invites\n            a new user to become an account member, the system also creates an eSignature\n            account for the invitee at the same time. The eSignPermissionProfileId\n            is the id of the eSignature permission set to assign to the member.\n        redirectUrl:\n          type: string\n          description: URL to redirect to after inviting.\n          format: uri\n      description: This request object contains information about the user that you\n        are inviting.\n      x-ds-definition-name: UserToInvite\n      x-ms-summary: This request object contains information about the user that you\n        are inviting.\n    ApiError:\n      type: object\n      properties:\n        errorCode:\n          type: string\n          description: The code associated with the error condition.\n        message:\n          type: string\n          description: A brief message describing the error condition.\n      description: This object describes errors that occur. It is valid only for responses\n        and ignored in requests.\n      x-ds-definition-name: ApiError\n      x-ms-summary: This object describes errors that occur. It is valid only for\n        responses and ignored in requests.\n    RoomDocumentOwner:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n        firstName:\n          type: string\n          description: The user's first name.\n        lastName:\n          type: string\n          description: The user's last name.\n        companyName:\n          type: string\n          description: The company name.\n        imageSrc:\n          type: string\n          description: The source of the user's profile picture.\n      description: \"Room document owner\"\n      x-ds-definition-name: RoomDocumentOwner\n      x-ms-summary: \"\"\n    Accounts:\n      type: object\n      properties:\n        companyId:\n          type: integer\n          description: The id of the company.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        companyVersion:\n          description: \"Product version\"\n          $ref: '#/components/schemas/ProductVersion'\n        docuSignAccountGuid:\n          type: string\n          description: The globally-unique identifier (GUID) for the DocuSign Rooms\n            account.\n          readOnly: true\n        defaultFieldSetId:\n          type: string\n          description: The id of the company's default field set. A field set is a\n            set of data fields and the information about those data fields that the\n            system uses to configure rooms. It corresponds to the **Admin \u003e Company\n            \u003e Room Details** area in the console.\n          format: uuid\n          readOnly: true\n        requireOfficeLibraryAssignments:\n          type: boolean\n          description: \"Require office library assignments\"\n          readOnly: true\n      description: Information about accounts.\n      x-ds-definition-name: AccountSummary\n      x-ds-category: Accounts\n      x-ds-order: \"10\"\n      x-ms-summary: Information about accounts.\n    # Documents:\n    #   required:\n    #   - base64Contents\n    #   - name\n    #   type: object\n    #   properties:\n    #     documentId:\n    #       type: integer\n    #       description: The ID of the document.\n    #       format: int32\n    #     name:\n    #       type: string\n    #       description: The name of the document.\n    #     roomId:\n    #       type: integer\n    #       description: The id of the room the document belongs to.\n    #       format: int32\n    #     ownerId:\n    #       type: integer\n    #       description: The id of the user who owns the document.\n    #       format: int32\n    #     size:\n    #       type: integer\n    #       description: The size of the document in bytes. This is the number of bytes\n    #         in the _decoded_ document, not the size of `base64Contents`.\n    #       format: int64\n    #     folderId:\n    #       type: integer\n    #       description: The id of the folder the document is in.\n    #       format: int32\n    #     createdDate:\n    #       type: string\n    #       description: \"The UTC DateTime when the document was created. \\n\\nExample:\\\n    #         \\ `2019-07-25T22:18:56.95Z`\"\n    #       format: date-time\n    #     isSigned:\n    #       type: boolean\n    #       description: '**True** if the document is signed.'\n    #     contentType:\n    #       type: string\n    #       description: \"\"\n    #     base64Contents:\n    #       type: string\n    #       description: |-\n    #         In a response, when the query parameter `includeContents` is **true**, the base64-encoded contents of the document.\n\n    #         In a request, the base64-encoded contents of the document to add.\n    #   description: Information about a document. This object is read-only when used\n    #     as a response.\n    #   x-ds-definition-name: Document\n    #   x-ds-category: Documents\n    #   x-ds-order: \"10\"\n    #   x-ms-summary: Information about a document. This object is read-only when used\n    #     as a response.\n    ESignPermissionProfiles:\n      type: object\n      properties:\n        eSignPermissionProfileId:\n          type: string\n          description: When an administrator or authorized member invites a new user\n            to become an account member, the system also creates an eSignature account\n            for the invitee at the same time. The `eSignPermissionProfileId` is the\n            id of the eSignature permission set to assign to the member.\n        name:\n          type: string\n          description: The name of the eSignature permission profile.\n        settings:\n          $ref: '#/components/schemas/ESignAccountRoleSettings'\n      description: When you create or invite a new member in Rooms, the system creates\n        an eSignature account for the member at the same time.\n      x-ds-definition-name: ESignPermissionProfile\n      x-ds-category: ESignPermissionProfiles\n      x-ds-order: \"10\"\n      x-ms-summary: When you create or invite a new member in Rooms, the system creates\n        an eSignature account for the member at the same time.\n    Fields:\n      type: object\n      properties:\n        fieldId:\n          type: string\n          description: |\n            The id of the field.\n\n            Example: `10318d28-xxxx-xxxx-xxxx-d3df664f602c`\n          format: uuid\n          readOnly: true\n        fieldDefinitionId:\n          type: string\n          description: The id of the DocuSign field definition from which this field\n            derives. When an Admin user configures a field set by using the API, this\n            is the id that they use to add this field definition to the field set.\n            The original field definition associated with this id contains more information\n            about the field, such as the default title, default API name, and configurations\n            such as the maximum length or the maximum value allowed.\n          format: uuid\n          readOnly: true\n        title:\n          type: string\n          description: \"Title of the fields\"\n          readOnly: true\n        apiName:\n          type: string\n          description: \"The name that the Rooms API uses for the field. \\n\\nExample:\\\n            \\ `companyContactName`\\n\\n**Note**: When you create a new room, you use\\\n            \\ the `apiName` values for fields to specify the details that you want\\\n            \\ to appear on the room's **Details** tab.\"\n          readOnly: true\n        type:\n          type: string\n          description: \"Type of the fields\"\n          readOnly: true\n        fields:\n          type: array\n          description: An array of fields.\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/Field'\n        configuration:\n          $ref: '#/components/schemas/FieldConfiguration'\n        customData:\n          $ref: '#/components/schemas/CustomData'\n      description: The fields resource provides a method that enables you to retrieve\n        a specific field set. This is a set of fields that can appear on a room's\n        **Details** tab.\n      x-ds-definition-name: Field\n      x-ds-category: Fields\n      x-ds-order: \"10\"\n      x-ms-summary: The fields resource provides a method that enables you to retrieve\n        a specific field set. This is a set of fields that can appear on a room's\n        **Details** tab.\n    ExternalFormFillSessions:\n      type: object\n      properties:\n        url:\n          type: string\n          description: \"URL for a new external form fill session\"\n          format: uri\n      description: This resource provides a method that returns a URL for a new external\n        form fill session, based on the `roomId` and `formId` that you specify in\n        the `formFillSessionForCreate` request body.\n      x-ds-definition-name: ExternalFormFillSession\n      x-ds-category: Forms\n      x-ds-order: \"10\"\n      x-ms-summary: This resource provides a method that returns a URL for a new external\n        form fill session, based on the `roomId` and `formId` that you specify in\n        the `formFillSessionForCreate` request body.\n    FormGroups:\n      type: object\n      properties:\n        formGroupId:\n          type: string\n          description: |\n            The ID of the form group.\n\n            Example: `7b879c89-xxxx-xxxx-xxxx-819d6a85e0a1`\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        formCount:\n          type: integer\n          description: \"The number of forms in the form library. \\n\\nExample: `50`\"\n          format: int32\n          readOnly: true\n      description: The `FormGroups` resource enables you to create and manage custom\n        groups of association forms.\n      x-ds-definition-name: FormGroupSummary\n      x-ds-category: Forms\n      x-ds-order: \"10\"\n      x-ms-summary: The `FormGroups` resource enables you to create and manage custom\n        groups of association forms.\n    FormLibraries:\n      type: object\n      properties:\n        formsLibraryId:\n          type: string\n          description: |\n            The id of the form library.\n\n            Example: `402c6e2f-xxxx-xxxx-xxxx-ff3f249f6da9`\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          description: The name of the office.\n          readOnly: true\n        formCount:\n          type: integer\n          description: \"The number of forms in the form library. \\n\\nExample: `50`\"\n          format: int32\n          readOnly: true\n      description: 'The `FormLibraries` resource enables you to access standard real\n        estate industry association forms and add them to rooms. '\n      x-ds-definition-name: FormLibrarySummary\n      x-ds-category: Forms\n      x-ds-order: \"10\"\n      x-ms-summary: 'The `FormLibraries` resource enables you to access standard real\n        estate industry association forms and add them to rooms. '\n    ClosingStatuses:\n      type: object\n      properties:\n        closingStatusId:\n          type: string\n          description: |-\n            The id of the closing status.\n\n            Example: `exp`\n        name:\n          type: string\n          description: The name of the office.\n      description: |\n        This resource provides a method that enables you retrieve a list of closing statuses, or valid reasons for closing a room.\n      x-ds-definition-name: ClosingStatus\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: |\n        This resource provides a method that enables you retrieve a list of closing statuses, or valid reasons for closing a room.\n    ContactSides:\n      type: object\n      properties:\n        contactSideId:\n          type: string\n          description: |-\n            The id of the contact side.\n\n            Example: `L`\n        name:\n          type: string\n          description: The name of the office.\n      description: The `ContactSides` resource provides a method that enables you\n        to retrieve a list of valid values for transaction contact sides.\n      x-ds-definition-name: ContactSide\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `ContactSides` resource provides a method that enables you\n        to retrieve a list of valid values for transaction contact sides.\n    Countries:\n      type: object\n      properties:\n        countryId:\n          type: string\n          description: The two-letter country code of the office address (for example,\n            \"UK\" for United Kingdom).\n        name:\n          type: string\n          description: The name of the office.\n      description: The `Countries` resource provide a method that enables you to retrieve\n        a list of countries in which you can create an office.\n      x-ds-definition-name: Country\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `Countries` resource provide a method that enables you to\n        retrieve a list of countries in which you can create an office.\n    Currencies:\n      type: object\n      properties:\n        currencyId:\n          type: string\n          description: |-\n            The three-letter code for the currency.\n\n            Example: `CAD`\n        name:\n          type: string\n          description: The name of the office.\n      description: The `Currencies` method provides a resource that enables you to\n        retrieve a list currencies that you can use for listing, offer, and loan amounts.\n      x-ds-definition-name: Currency\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `Currencies` method provides a resource that enables you to\n        retrieve a list currencies that you can use for listing, offer, and loan amounts.\n    FinancingTypes:\n      type: object\n      properties:\n        financingTypeId:\n          type: string\n          description: |-\n            The id of the financing type.\n\n            Example: `conv` (for `Conventional`)\n        name:\n          type: string\n          description: The name of the office.\n      description: This resource provides a method that enables you to retrieve a\n        list of financing types.\n      x-ds-definition-name: FinancingType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: This resource provides a method that enables you to retrieve a\n        list of financing types.\n    OriginsOfLeads:\n      type: object\n      properties:\n        originOfLeadId:\n          type: string\n          description: |-\n            The id of the origin of lead.\n\n            Example: `tru` (for `Trulia`)\n        name:\n          type: string\n          description: The name of the office.\n      description: The `OriginsOfLeads` resource enables you to get a list of origins\n        of leads (such as Trulia or Zillow) that you can specify for rooms.\n      x-ds-definition-name: OriginOfLead\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `OriginsOfLeads` resource enables you to get a list of origins\n        of leads (such as Trulia or Zillow) that you can specify for rooms.\n    PropertyTypes:\n      type: object\n      properties:\n        propertyTypeId:\n          type: string\n          description: |-\n            The id of the property type.\n\n            Example: `resd` (for `Residential Detached`)\n        name:\n          type: string\n          description: The name of the office.\n      description: The `OriginsOfLeads` resource enables you to get a list of property\n        types (such as ????) that you can specify for rooms.\n      x-ds-definition-name: PropertyType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `OriginsOfLeads` resource enables you to get a list of property\n        types (such as ????) that you can specify for rooms.\n    RoomContactTypes:\n      type: object\n      properties:\n        id:\n          type: string\n          description: |-\n            The id of the room contact type.\n\n            Example: `lisagent` (for `Listing Agent`)\n        name:\n          type: string\n          description: The name of the office.\n      description: The `RoomContactTypes` resource provides a method that enables\n        you to retrieve a list of room contact types, such as Buyer, Seller, and Listing\n        Agent.\n      x-ds-definition-name: RoomContactType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `RoomContactTypes` resource provides a method that enables\n        you to retrieve a list of room contact types, such as Buyer, Seller, and Listing\n        Agent.\n    SellerDecisionTypes:\n      type: object\n      properties:\n        sellerDecisionTypeId:\n          type: string\n          description: |-\n            The id of the seller decision type.\n\n            Example: `appr` (for `Approved`)\n        name:\n          type: string\n          description: The name of the seller decision type.\n      description: Contains information about a seller decision type.\n      x-ds-definition-name: SellerDecisionType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: Contains information about a seller decision type.\n    SpecialCircumstanceTypes:\n      type: object\n      properties:\n        specialCircumstanceTypeId:\n          type: string\n          description: |-\n            The id of the special circumstance type.\n\n            Example: `ss` (for `Short Sale`)\n        name:\n          type: string\n          description: The name of the office.\n      description: The `SpecialCircumstanceTypes` resource provides a method that\n        enables you to retrieve a list of special circumstance types, such as `Short\n        Sale` and `Foreclosure`. These are the values that you can select for the\n        **Special circumstances** field that appears on the **Room Details** page.\n      x-ds-definition-name: SpecialCircumstanceType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `SpecialCircumstanceTypes` resource provides a method that\n        enables you to retrieve a list of special circumstance types, such as `Short\n        Sale` and `Foreclosure`. These are the values that you can select for the\n        **Special circumstances** field that appears on the **Room Details** page.\n    States:\n      type: object\n      properties:\n        stateId:\n          type: string\n          description: |-\n            A concatenation of the two-letter country code with the state/province/region of the office address.\n\n            Example: `US-OH` (for Ohio)\n        name:\n          type: string\n          description: The name of the office.\n      description: The `States` resource provides a method that enables you to retrieve\n        a list of states and state ids that the Rooms API uses.\n      x-ds-definition-name: State\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `States` resource provides a method that enables you to retrieve\n        a list of states and state ids that the Rooms API uses.\n    TaskDateTypes:\n      type: object\n      properties:\n        taskDateTypeId:\n          type: string\n          description: |-\n            The id of the task date type.\n\n            Example: `tdd` (for `Task Due Date`)\n        name:\n          type: string\n          description: The name of the office.\n      description: This resource provides a method that returns a list of date types\n        that you can use with tasks, such as `Actual Close Date` and `Task Due Date`.\n      x-ds-definition-name: TaskDateType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: This resource provides a method that returns a list of date types\n        that you can use with tasks, such as `Actual Close Date` and `Task Due Date`.\n    TaskResponsibilityTypes:\n      type: object\n      properties:\n        taskResponsibilityTypeId:\n          type: string\n          description: The id of the task responsibility type.\n        name:\n          type: string\n          description: The name of the office.\n      description: 'The `TaskResponsibilityTypes` resource enables you to return a\n        list of responsibility types that you can assign to users when you add them\n        to a task. '\n      x-ds-definition-name: TaskResponsibilityType\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: 'The `TaskResponsibilityTypes` resource enables you to return\n        a list of responsibility types that you can assign to users when you add them\n        to a task. '\n    TaskStatuses:\n      type: object\n      properties:\n        taskStatusId:\n          type: string\n          description: \"\"\n        name:\n          type: string\n          description: The name of the office.\n      description: \"\"\n      x-ds-definition-name: TaskStatus\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: \"\"\n    TimeZones:\n      type: object\n      properties:\n        timeZoneId:\n          type: string\n          description: |-\n            The id of the time zone for the office address.\n\n            Example: `eastern` (for the Eastern US Time Zone)\n        name:\n          type: string\n          description: The name of the office.\n      description: The `TimeZones` resource enables you to list the time zones that\n        you can assign to an office.\n      x-ds-definition-name: TimeZone\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: The `TimeZones` resource enables you to list the time zones that\n        you can assign to an office.\n    TransactionSides:\n      type: object\n      properties:\n        transactionSideId:\n          type: string\n          description: |-\n            The id of the transaction side. Valid values are:\n\n            - `buy`\n            - `sell`\n            - `listbuy`\n            - `refi`\n        name:\n          type: string\n          description: The name of the office.\n      description: \"The `TransactionSides` resource provides a method that enables\\\n        \\ you to list possible real estate transaction sides. \\n\"\n      x-ds-definition-name: TransactionSide\n      x-ds-category: GlobalResources\n      x-ds-order: \"10\"\n      x-ms-summary: \"The `TransactionSides` resource provides a method that enables\\\n        \\ you to list possible real estate transaction sides. \\n\"\n    Offices:\n      required:\n      - name\n      type: object\n      properties:\n        officeId:\n          type: integer\n          description: The id of the office. This is the id that the system generated\n            when you created the office.\n          format: int32\n        name:\n          type: string\n          description: The name of the office.\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n        address1:\n          type: string\n          description: First line of the office street address.\n        address2:\n          type: string\n          description: Second line of the office street address.\n        city:\n          type: string\n          description: City name or metropolitan area of the office address.\n        stateId:\n          type: string\n          description: |-\n            A concatenation of the two-letter country code with the state/province/region of the office address.\n\n            Example: `US-OH` (for Ohio)\n        postalCode:\n          type: string\n          description: Postal code or ZIP code of the office address.\n        countryId:\n          type: string\n          description: The two-letter country code of the office address (for example,\n            \"UK\" for United Kingdom).\n        timeZoneId:\n          type: string\n          description: |-\n            The id of the time zone for the office address.\n\n            Example: `eastern` (for the Eastern US Time Zone)\n        phone:\n          type: string\n          description: Phone number of the office.\n        createdDate:\n          type: string\n          description: |-\n            The UTC DateTime when the office was created.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n            **Note**: This value is read-only.\n          format: date-time\n      description: Object that contains information about an office in the Rooms account.\n      x-ds-definition-name: Office\n      x-ds-category: Offices\n      x-ds-order: \"10\"\n      x-ms-summary: Object that contains information about an office in the Rooms\n        account.\n    Regions:\n      required:\n      - name\n      type: object\n      properties:\n        regionId:\n          type: integer\n          description: The id of the region. This is the id that the system generated\n            when you created the region.\n          format: int32\n        name:\n          type: string\n          description: String that specifies the region name.\n        createdDate:\n          type: string\n          description: UTC datetime that the region was created (for example \"2019-06-27T19:32:46.943\").\n            Note that the service assigns this value, so it is read-only.\n          format: date-time\n      description: \"\"\n      x-ds-definition-name: Region\n      x-ds-category: Regions\n      x-ds-order: \"10\"\n      x-ms-summary: \"\"\n    Roles:\n      type: object\n      properties:\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n        legacyRoleId:\n          type: string\n          description: The legacy name of the role in Rooms Version 5.\n        name:\n          type: string\n          description: \"The name of the role. \\n\\nExamples: \\n\\n- `Agent`\\n- `Default\\\n            \\ Admin`\"\n        isDefaultForAdmin:\n          type: boolean\n          description: When **true**, the role is the default for account administrators.\n        isExternal:\n          type: boolean\n          description: When set to **true**, the role is an external role. You assign\n            external roles to people from outside your company when you invite them\n            into a room.\n        createdDate:\n          type: string\n          description: The UTC DateTime when the role was created.\n          format: date-time\n        isAssigned:\n          type: boolean\n          description: When set to **true**, indicates that this role is currently\n            assigned to a user.\n        permissions:\n          $ref: '#/components/schemas/Permissions'\n      description: This object contains information about a role.\n      x-ds-definition-name: Role\n      x-ds-category: Roles\n      x-ds-order: \"10\"\n      x-ms-summary: This object contains information about a role.\n    Rooms:\n      type: object\n      properties:\n        roomId:\n          type: integer\n          description: The id of the room.\n          format: int32\n        companyId:\n          type: integer\n          description: The id of the company.\n          format: int32\n        name:\n          type: string\n          description: |-\n            The name of the room.\n\n            Maximum Length: 100 characters.\n        officeId:\n          type: integer\n          description: The id of the office. This is the id that the system generated\n            when you created the office.\n          format: int32\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n        submittedForReviewDate:\n          type: string\n          description: |-\n            The UTC DateTime when the room was submitted for review.\n\n            **Note**: In Rooms v5, this is when an agent submitted the room to a manager. In Rooms v6, this is when a member with a role for which the **Submit rooms for review** permission is set to **true** submitted the room to a member with a role for which the **Review and close rooms** permission is set to **true**.\n          format: date-time\n        closedDate:\n          type: string\n          description: The UTC date and time when the room was closed.\n          format: date-time\n        rejectedDate:\n          type: string\n          description: The date on which the reviewer rejected the room. For example,\n            a reviewer might reject closing a room if documentation is missing or\n            the details are inaccurate.\n          format: date-time\n        createdByUserId:\n          type: integer\n          description: The id of the user who created the room.\n          format: int32\n        rejectedByUserId:\n          type: integer\n          description: The id of the user who rejected the room.\n          format: int32\n        closedStatusId:\n          type: string\n          description: \"The reason why a room was closed. Possible values are:\\n\\n\\\n            - `sold`: Property sold.\\n- `dup`: Duplicate room.\\n- `escrcncl`: Escrow\\\n            \\ canceled.\\n- `inspctn`: Inspection issues.\\n- `exp`: Listing expired.\\n\\\n            - `lostbuy`: Buyer withdrew.\\n- `list`: Listing withdrawn. \\n- `newlist`:\\\n            \\ New listing.\\n- `offrrjct`: Offer not accepted.\\n- `pend`: Pending.\\\n            \\ An agent might use this status to temporarily hide a room from their\\\n            \\ Active rooms view if they are blocked on a task. When they are ready\\\n            \\ to reopen the room, they can quickly find it by filtering for rooms\\\n            \\ in `pending` status.\\n- `lstcanc`: Listing canceled. \\n- `lstleave`:\\\n            \\ Listing released.\\n- `sellwtdw`: Seller withdrew.\\n- `nofin`: Buyer\\\n            \\ unable to finance.\\n- `disciss`: Property disclosure issue.\\n- `appiss`:\\\n            \\ Appraisal issues.\\n- `mtgiss`: Mortgage issues. Use when details about\\\n            \\ why the buyer wasn't able to obtain financing are unknown.\\n- `zoniss`:\\\n            \\ Zoning issues.\\n- `attiss`: Attorney review issues.\\n- `proplsd`: Property\\\n            \\ leased. Use for the list side of the transaction.\\n- `tenlease`: Tenant\\\n            \\ signed lease. Use when an agent helps renters find a to lease.   \"\n        fieldData:\n          $ref: '#/components/schemas/FieldData'\n      description: The Rooms resource provides methods that enable you to create and\n        manage rooms. In Rooms for Real Estate, a room is a collaborative digital\n        space corresponding to a specific property. In Rooms for Mortgages, a room\n        corresponds to a specific loan.\n      x-ds-definition-name: Room\n      x-ds-category: Rooms\n      x-ds-order: \"10\"\n      x-ms-summary: The Rooms resource provides methods that enable you to create\n        and manage rooms. In Rooms for Real Estate, a room is a collaborative digital\n        space corresponding to a specific property. In Rooms for Mortgages, a room\n        corresponds to a specific loan.\n    RoomFolders:\n      type: object\n      properties:\n        roomFolderId:\n          type: integer\n          description: \"\"\n          format: int32\n        name:\n          type: string\n          description: The name of the office.\n        isDefault:\n          type: boolean\n          description: \"\"\n      description: \"\"\n      x-ds-definition-name: RoomFolder\n      x-ds-category: Rooms\n      x-ds-order: \"10\"\n      x-ms-summary: \"\"\n    RoomTemplates:\n      type: object\n      properties:\n        roomTemplateId:\n          type: integer\n          description: The id of the room template.\n          format: int32\n          readOnly: true\n        name:\n          type: string\n          description: The name of the room template.\n          readOnly: true\n        taskTemplateCount:\n          type: integer\n          description: The total number of task templates that the room template uses.\n          format: int32\n          readOnly: true\n      description: The room template resources provides a method that enables you\n        to retrieve the room templates associated with an account.\n      x-ds-definition-name: RoomTemplate\n      x-ds-category: RoomTemplates\n      x-ds-order: \"10\"\n      x-ms-summary: The room template resources provides a method that enables you\n        to retrieve the room templates associated with an account.\n    TaskLists:\n      type: object\n      properties:\n        taskListId:\n          type: integer\n          description: The id of the task list.\n          format: int32\n        name:\n          type: string\n          description: The name of the office.\n        taskListTemplateId:\n          type: integer\n          description: The id of the task list template.\n          format: int32\n        submittedForReviewDate:\n          type: string\n          description: |-\n            The UTC DateTime when the room was submitted for review.\n\n            **Note**: In Rooms v5, this is when an agent submitted the room to a manager. In Rooms v6, this is when a member with a role for which the **Submit rooms for review** permission is set to **true** submitted the room to a member with a role for which the **Review and close rooms** permission is set to **true**.\n          format: date-time\n        approvalDate:\n          type: string\n          description: \"Approval date\"\n          format: date-time\n        rejectedDate:\n          type: string\n          description: The date on which the reviewer rejected the room. For example,\n            a reviewer might reject closing a room if documentation is missing or\n            the details are inaccurate.\n          format: date-time\n        createdDate:\n          type: string\n          description: |+\n            The UTC date and time when the item was created. This is a read-only value that the service assigns.\n\n            Example: `2019-07-17T17:45:42.783Z`\n\n          format: date-time\n        approvedByUserId:\n          type: integer\n          description: \"Approved by user ID\"\n          format: int32\n        rejectedByUserId:\n          type: integer\n          description: The id of the user who rejected the room.\n          format: int32\n        comment:\n          type: string\n          description: \"Task comments\"\n        tasks:\n          type: array\n          description: A list of tasks in the task list.\n          items:\n            $ref: '#/components/schemas/TaskSummary'\n      description: The `TaskLists` resource helps you keep track of the documents\n        and activities you must complete before you can close a room.\n      x-ds-definition-name: TaskList\n      x-ds-category: TaskLists\n      x-ds-order: \"10\"\n      x-ms-summary: The `TaskLists` resource helps you keep track of the documents\n        and activities you must complete before you can close a room.\n    TaskListTemplates:\n      type: object\n      properties:\n        taskListTemplateId:\n          type: integer\n          description: The id of the task list template.\n          format: int32\n        name:\n          type: string\n          description: The name of the office.\n        taskCount:\n          type: integer\n          description: The total number of tasks in the task list template.\n          format: int32\n        tasksWithDocumentsCount:\n          type: integer\n          description: The number of tasks in the task list template that have documents\n            associated with them.\n          format: int32\n      description: |\n        A task list template is a custom task list that can be added to rooms.\n      x-ds-definition-name: TaskListTemplate\n      x-ds-category: TaskLists\n      x-ds-order: \"10\"\n      x-ms-summary: |\n        A task list template is a custom task list that can be added to rooms.\n    Users:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: The id of the user.\n          format: int32\n        email:\n          type: string\n          description: The user's email address.\n        firstName:\n          type: string\n          description: The user's first name.\n        lastName:\n          type: string\n          description: The user's last name.\n        isLockedOut:\n          type: boolean\n          description: When set to **true**, an administrator has locked the user's\n            account. For example, an administrator might want to lock an agent's account\n            after they leave the brokerage until they determine how to transfer the\n            agent's rooms and data to another active user.\n        status:\n          type: string\n          description: Valid values are 'Active', 'Pending'\n        accessLevel:\n          description: \"Access level\"\n          $ref: '#/components/schemas/AccessLevel'\n        defaultOfficeId:\n          type: integer\n          description: The id of the user's default office.\n          format: int32\n        titleId:\n          type: integer\n          description: |-\n            In Rooms Version 5, this is the id of the custom job title for a Manager role within your company. For example, your company might have the custom job titles \"Transaction Coordinator\" and \"Office Manager\".\n\n            **Note**: If you are using Rooms Version 5, you must enter a `titleId` when using the Users::InviteClassicManager method. (The `titleId` property is empty for Agent users on Rooms Version 5.) If you are using Rooms Version 6, use the Users::InviteUser method with the `roleId` property instead.\n          format: int32\n        roleId:\n          type: integer\n          description: |-\n            In Rooms v6, this is the id of the company role assigned to the user.\n\n            You can assign external roles to users who aren't a part of your organization.\n\n            **Note**: If you are using Rooms v6, you must enter a `roleId` in requests. If you are using Rooms v5, you must enter a value for the `titleId` property instead.\n          format: int32\n        profileImageUrl:\n          type: string\n          description: The URL for the user's profile image.\n        offices:\n          type: array\n          description: An array of office ids for the offices in which a user with\n            an `Office` or `Contributor` `accessLevel` has been granted the ability\n            to participate.\n          items:\n            type: integer\n            format: int32\n        regions:\n          type: array\n          description: An array of region ids for the regions in which a user with\n            the `Region accessLevel` has been granted the ability to participate.\n          items:\n            type: integer\n            format: int32\n        permissions:\n          $ref: '#/components/schemas/ClassicManagerPermissions'\n      description: The Users resource provides methods that enable you to add, update,\n        delete, and manage users. A user is a person who is either added to a room\n        (as a participant), or who is a member of a company.\n      x-ds-definition-name: User\n      x-ds-category: Users\n      x-ds-order: \"10\"\n      x-ms-summary: The Users resource provides methods that enable you to add, update,\n        delete, and manage users. A user is a person who is either added to a room\n        (as a participant), or who is a member of a company.\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    oAuth2Auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://developers.docusign.com/platform/auth/)\n      flows:\n        implicit:\n          authorizationUrl: https://account-d.docusign.com/oauth/auth\n          scopes: \n            dtr.rooms.read: Read rooms data.\n            dtr.rooms.write: Update the data of a room.\n            dtr.documents.read: Read documents from DocuSign Rooms.\n            dtr.documents.write: Write documents to DocuSign Rooms.\n            dtr.profile.read: Read profile data for accounts or signers associated with your company.\n            dtr.profile.write: Write profile data to accounts or signers associated with your company.\n            dtr.company.read: Read information from all rooms and profiles associated with your company.\n            dtr.company.write: Write information to all rooms and profiles associated with your company.\n            room_forms: Use endpoints related to the forms feature.\n            signature: The eSignature API signature scope is required to call the GetESignPermissionProfiles method.\n        authorizationCode:\n          authorizationUrl: https://account-d.docusign.com/oauth/auth\n          tokenUrl: https://account-d.docusign.com/oauth/token\n          scopes: \n            dtr.rooms.read: Read rooms data.\n            dtr.rooms.write: Update the data of a room.\n            dtr.documents.read: Read documents from DocuSign Rooms.\n            dtr.documents.write: Write documents to DocuSign Rooms.\n            dtr.profile.read: Read profile data for accounts or signers associated with your company.\n            dtr.profile.write: Write profile data to accounts or signers associated with your company.\n            dtr.company.read: Read information from all rooms and profiles associated with your company.\n            dtr.company.write: Write information to all rooms and profiles associated with your company.\n            room_forms: Use endpoints related to the forms feature.\n            signature: The eSignature API signature scope is required to call the GetESignPermissionProfiles method.\nx-ds-categories:\n- name: Accounts\n  summary: Information about accounts.\n  description: Information about accounts.\n- name: Documents\n  summary: Information about documents.\n  description: Information about documents.\n- name: ESignPermissionProfiles\n  summary: A permission profile is a standard set of user permissions that you can\n    apply to individual users or the users in a group. This functionality makes it\n    easier to manage permissions for a large number of users.\n  description: |-\n    When you create or invite a new member in Rooms, the system creates an eSignature account for the member at the same time. This section shows you how to retrieve a list of eSignature permission profiles that the current user can assign to a new member.\n\n    You can use the API only to retrieve and assign eSignature permission profiles. You create and modify permission profiles in the DocuSign console.\n- name: Fields\n  summary: This section shows you how to retrieve a specific field set. This is a\n    set of fields that can appear on a room's **Details** tab.\n  description: Information about field sets.\n- name: Forms\n  summary: |+\n    The Forms feature of DocuSign Rooms for Real Estate enables provides access to standard industry association forms that you can add to rooms.\n\n    **Note**: Forms is not a default feature and is currently only available in Rooms for Real Estate. To request access to Forms, contact your DocuSign Account Manager.\n\n  description: \"## Form groups\\n\\nWith the appropriate permissions, form administrators\\\n    \\ at your company can create form groups, or curated set of forms gathered from\\\n    \\ the association **form libraries** to which DocuSign provides access. Form groups\\\n    \\ enable agents to know which forms to add to rooms based on the type of transaction\\\n    \\ they are working on. When creating groups, administrators can make certain forms\\\n    \\ required, ensuring compliance. If you don't create groups, agents will have\\\n    \\ to choose forms they need from a list of association forms.\\n\\n## Permissions\\n\\\n    \\nTo manage forms, you must have the `canManageFormGroups` permission, which enables\\\n    \\ you to access the **Forms** tab in **Admin**. For all other roles, assign permissions\\\n    \\ based on how these users will be working with forms. If no form permissions\\\n    \\ are enabled for these roles, users cannot add forms to rooms.\\n\\nForm administrators\\\n    \\ must have the `canManageFormGroups` permission assigned to their user role.\\\n    \\ This gives them access to the **Forms** tab in **Admin**. However, you should\\\n    \\ also consider the user's access level. For example, if the user has access to\\\n    \\ specific offices, they can only administer form groups for those offices. \\n\"\n- name: GlobalResources\n  summary: The Global Resources category organizes resource that are used throughout\n    the Rooms API. You typically use these resources when you create or update a room,\n    region, office, or user.\n  description: |-\n    This section shows you how to retrieve the following Global Resources:\n\n    - Activity Types\n    - Closing Statuses\n    - Contact Sides\n    - Countries\n    - Currencies\n    - Financing Types\n    - Origins of Leads\n    - Property Types\n    - Room Contact Types\n    - Seller Decision Types\n    - Special Circumstances Types\n    - States\n    - Task Date Types\n    - Task Responsibility Types\n    - Time Zones\n    - Transaction Sides\n- name: Offices\n  summary: You can use the API to manage offices in your Rooms account.\n  description: This section shows you how to create and manage offices.\n- name: Regions\n  summary: You can use the API to manage regions associated with your Rooms account.\n  description: This section shows you how to create and manage regions for a Rooms\n    account.\n- name: Roles\n  summary: 'The Roles resource enables you to easily manage user permissions. '\n  description: |-\n    Each role is associated with specific permissions. Each new member is assigned a role when you create them, automatically granting them the permissions associated with that role.\n\n    Roles use the following permission types to control the actions that users can perform:\n\n    - Room\n    - Room Details\n    - Documents\n    - Envelopes\n    - Member Management\n    - Company Settings\n\n    ## Roles in Rooms v5\n\n    Rooms v5 has three predefined roles:\n\n    - **Admin**: This role can manage all members and company settings.\n    - **Manager**: This role is designed to manage rooms in one or more offices or regions. Depending on the permissions that you set for the individual member in the `ClassicManagerPermissions`, managers can also perform additional tasks, such as managing member accounts and company account information.\n    - **Agent**: This role is for contributors who only have access to rooms that they create or that are created for them. Agents cannot manage company settings or other members.\n\n    However, you can reconfigure the `permissions` for these roles in the `Members` object.\n\n    [members]: ./Members. h t m l Fix this when we can link to objects.\n    [ClassicMemberPermissions]: ./definition/ClassicManagerPermissions. h t m l\n\n    ## Roles in Rooms v6\n\n    Rooms v6 enables you to fully configure custom roles containing permissions that make sense for your company. Because each new member is assigned a role, you must set up these roles before you can invite members to join your account.\n\n    In Rooms v6, permissions for roles are tied to the `roleId` property and not yet exposed. You can learn more about these permission types and configure them in the console.\n\n    ### Internal and External Roles\n\n    In Rooms v6, a role can be either internal or external. You assign internal roles to people inside your company. You assign external roles to people outside your company when you invite them to a room.\n\n    Each member inside your company has a default company role. However, they can also be assigned additional roles with different permissions on a per-room basis. Regardless of the member's default company role, what they can do in a room is entirely controlled by their role in that particular room.\n- name: Rooms\n  summary: This section shows you how to create and mange rooms. In Rooms for Real\n    Estate, a room is a collaborative digital space corresponding to a specific property.\n    In Rooms for Mortgages, a room corresponds to a specific loan.\n  description: |\n    A room can hold documents, envelopes, a list of tasks comprising a workflow, and other related information. You can invite others to this space and assign them permissions on a per-room basis. The documentation in this section shows you how to perform these and other tasks.\n- name: RoomTemplates\n  summary: 'Room templates enable your company to standardize the new rooms that users\n    create. '\n  description: This section shows you how to retrieve room templates. You can perform\n    additional room template tasks in the console.\n- name: TaskLists\n  summary: The TaskLists resource helps you keep track of the documents and activities\n    you must complete before you can close a room.\n  description: Your administrator may also have created custom task list templates\n    that can be added to rooms. If your administrator created room templates, those\n    room templates may include task lists for you to use.\n- name: Users\n  summary: The Users resource provides methods that enable you to add, update, delete,\n    and manage users.\n  description: A user is a person who is either added to a room (as a participant),\n    or who is a member of a company. This section shows you how to manage users, including\n    how to update and delete National Association of REALTORSÂ® member numbers.\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v2/accounts/{accountId}/form_groups/{formGroupId}/revoke_office_access/{officeId}: post: operation \"Revoke Office Access From Form Group\": security: unknown security schema \"Bearer\""
}