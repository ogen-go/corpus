{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-traffic-generator/models"
		},
		"file": {
			"name": "control.yaml",
			"size": 0,
			"path": "control/control.yaml",
			"byteSize": 6908,
			"content": "openapi: 3.1.0\ninfo:\n  title: Control models\n  description: \u003e-\n    All control schemas\n  version: ^0.0.0\ncomponents:\n  schemas:\n    Link.State:\n      description: \u003e-\n        Port link state.\n      type: object\n      required: [state]\n      properties:\n        port_names:\n          description: \u003e-\n            The names of port objects to.\n            An empty or null list will control all port objects.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Port/properties/name'\n          x-field-uid: 1\n        state:\n          description: \u003e-\n            The link state.\n          type: string\n          x-field-uid: 2\n          x-enum:\n            up:\n              x-field-uid: 1\n            down:\n              x-field-uid: 2\n    Transmit.State:\n      description: \u003e-\n        Flow transmit state.\n      type: object\n      required: [state]\n      properties:\n        flow_names:\n          description: \u003e-\n            The names of flows to which the transmit state will be applied to.\n            If the list of flow_names is empty or null the state will be applied\n            to all configured flows.\n\n            If the list is not empty any flow that is not included in the list\n            of flow_names MUST be ignored and not included in the state change.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Flow/properties/name'\n          x-field-uid: 1\n        state:\n          description: \u003e-\n            The transmit state.\n\n            If the value of the state property is 'start' then all flows\n            defined by the 'flow_names' property will be started and the metric\n            counters MUST be cleared prior to starting the flow(s).\n\n            If the value of the state property is 'stop' then all flows\n            defined by the 'flow_names' property will be stopped and the metric\n            counters MUST NOT be cleared.\n\n            If the value of the state property is 'pause' then all flows\n            defined by the 'flow_names' property will be paused and the metric\n            counters MUST NOT be cleared.\n\n            If the value of the state property is 'resume' then any paused flows\n            defined by the 'flow_names' property will start transmit at the\n            point at which they were paused. Any flow that is stopped will\n            start transmit at the beginning of the flow.\n            The flow(s) MUST NOT have their metric counters cleared.\n          type: string\n          x-field-uid: 2\n          x-enum:\n            start:\n              x-field-uid: 1\n            stop:\n              x-field-uid: 2\n            pause:\n              x-field-uid: 3\n            resume:\n              x-field-uid: 4\n    Capture.State:\n      description: \u003e-\n        Control port capture state\n      type: object\n      required: [state]\n      properties:\n        port_names:\n          description: \u003e-\n            The names of ports to which the capture state will be applied to.\n            If the list of port_names is empty or null the state will be applied\n            to all configured ports.\n\n            If the list is not empty any port that is not included in the list\n            of port_names MUST be ignored and not included in the state change.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Port/properties/name'\n          x-field-uid: 1\n        state:\n          description: \u003e-\n            The capture state.\n          type: string\n          x-field-uid: 2\n          x-enum:\n            start:\n              x-field-uid: 1\n            stop:\n              x-field-uid: 2\n    Flows.Update:\n      description: \u003e-\n        A container of flows with associated properties to be updated without\n        affecting the flows current transmit state.\n      type: object\n      required: [property_names, flows]\n      properties:\n        property_names:\n          description: \u003e-\n            Flow properties to be updated without affecting the transmit state.\n          type: array\n          items:\n            type: string\n            x-enum:\n              rate:\n                x-field-uid: 1\n              size:\n                x-field-uid: 2\n          x-field-uid: 1\n        flows:\n          description: \u003e-\n            The list of configured flows for which given property will be updated.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n          x-field-uid: 2\n    Route.State:\n      description: \u003e-\n        Sets the device route state\n      type: object\n      required: [state]\n      properties:\n        names:\n          description: \u003e-\n            The names of device route objects to control.\n            If no names are specified then all route objects that match the\n            x-constraint will be affected.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Bgp.V4RouteRange/properties/name'\n          - '/components/schemas/Bgp.V6RouteRange/properties/name'\n          - '/components/schemas/Isis.V4RouteRange/properties/name'\n          - '/components/schemas/Isis.V6RouteRange/properties/name'\n          x-field-uid: 1\n        state:\n          description: \u003e-\n            Route specific states\n          type: string\n          x-field-uid: 2\n          x-enum:\n            withdraw:\n              x-field-uid: 1\n            advertise:\n              x-field-uid: 2\n    Ping.Request:\n      description: \u003e-\n        Ping request details\n      type: object\n      properties:\n        endpoints:\n          description: Array of ping requests\n          type: array\n          items:\n            $ref: './ping.yaml#/components/schemas/Ping'\n          x-field-uid: 1\n    Protocol.State:\n      description: \u003e-\n        Sets all configured protocols to `start` or `stop` state. Setting protocol state to `start` \n        shall be a no-op if preceding `set_config` API call was made with \n        `config.options.protocol_options.auto_start_all` set to `true` or if all the configured protocols are already started.\n      type: object\n      required: [state]\n      properties:\n        state:\n          description: \u003e-\n            Protocol specific states\n          type: string\n          x-field-uid: 1\n          x-enum:\n            start:\n              x-field-uid: 1\n            stop:\n              x-field-uid: 2\n    Device.State:\n      description: \u003e-\n        Sets attributes for the requested state/actions to be performed on device(s)\n      type: object\n      properties:\n        choice:\n          type: string\n          x-field-uid: 1\n          x-enum:\n            lacp_member_state:\n              x-field-uid: 1\n        lacp_member_state:\n          $ref: './lacp.yaml#/components/schemas/LacpMember.State'\n          x-field-uid: 2\n",
			"canonicalURL": "/github.com/open-traffic-generator/models@6c4f484452b0a35ac9f87d643b452533414a5ec4/-/blob/control/control.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/open-traffic-generator/models/blob/6c4f484452b0a35ac9f87d643b452533414a5ec4/control/control.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Flows.Update\": resolve \"#/components/schemas/Flows.Update\": property \"flows\": items: at control/control.yaml:141:19: $ref: resolve \"#/components/schemas/Flow\": resolve: can't find value for \"components/schemas/Flow\""
}