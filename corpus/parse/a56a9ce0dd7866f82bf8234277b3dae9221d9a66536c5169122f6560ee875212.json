{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GemeenteUtrecht/zaakafhandelcomponent"
		},
		"file": {
			"name": "kownsl.yaml",
			"size": 0,
			"path": "backend/src/zac/tests/schemas/kownsl.yaml",
			"byteSize": 30017,
			"content": "openapi: 3.0.3\ninfo:\n  title: Kownsl - advices and approvals\n  version: 0.1.0\n  description: |2\n\n    Manage case-oriented advices and approvals.\n\n    Kownsl allows you to store review requests on a case with (a subset of) its documents,\n    and present the review requests to assignees. The advice or approval from reviewers\n    is subsequently again stored in Kownsl.\n\n    This component publishes notifications on the `kownsl` channel.\n  contact:\n    url: https://github.com/GemeenteUtrecht/kownsl\n  license:\n    name: UNLICENSED\npaths:\n  /api/v1/review-requests:\n    get:\n      operationId: review_requests_list\n      description: |-\n        CRUD operations on review requests.\n\n        Note that the list endpoint _requires_ a filter parameter.\n      summary: List review requests\n      parameters:\n      - in: query\n        name: for_zaak\n        schema:\n          type: string\n          format: uri\n        description: URL reference to the zaak in the API.\n      tags:\n      - review-requests\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryReviewRequest'\n          description: ''\n    post:\n      operationId: review_requests_create\n      description: |-\n        CRUD operations on review requests.\n\n        Note that the list endpoint _requires_ a filter parameter.\n      summary: Create a review request\n      tags:\n      - review-requests\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReviewRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ReviewRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ReviewRequest'\n        required: true\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReviewRequest'\n          description: ''\n  /api/v1/review-requests/{request__uuid}/advices:\n    get:\n      operationId: review_requests_advices_list\n      description: |-\n        Manage advices for a given review request.\n\n        Advices can only be created if the end-user has not submitted an advice yet and they\n        are listed in the user deadlines.\n      summary: List advices\n      parameters:\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - advices\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Advice'\n          description: ''\n    post:\n      operationId: review_requests_advices_create\n      description: |-\n        Manage advices for a given review request.\n\n        Advices can only be created if the end-user has not submitted an advice yet and they\n        are listed in the user deadlines.\n      summary: Register an advice\n      parameters:\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - advices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Advice'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Advice'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Advice'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Advice'\n          description: ''\n  /api/v1/review-requests/{request__uuid}/advices/{id}:\n    get:\n      operationId: review_requests_advices_retrieve\n      description: |-\n        Manage advices for a given review request.\n\n        Advices can only be created if the end-user has not submitted an advice yet and they\n        are listed in the user deadlines.\n      summary: Retrieve advice details\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this advies.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - advices\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Advice'\n          description: ''\n    put:\n      operationId: review_requests_advices_update\n      description: |-\n        Manage advices for a given review request.\n\n        Advices can only be created if the end-user has not submitted an advice yet and they\n        are listed in the user deadlines.\n      summary: Replace an advice\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this advies.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - advices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Advice'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Advice'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Advice'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Advice'\n          description: ''\n    patch:\n      operationId: review_requests_advices_partial_update\n      description: |-\n        Manage advices for a given review request.\n\n        Advices can only be created if the end-user has not submitted an advice yet and they\n        are listed in the user deadlines.\n      summary: Update an advice\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this advies.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - advices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAdvice'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedAdvice'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedAdvice'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Advice'\n          description: ''\n    delete:\n      operationId: review_requests_advices_destroy\n      description: |-\n        Manage advices for a given review request.\n\n        Advices can only be created if the end-user has not submitted an advice yet and they\n        are listed in the user deadlines.\n      summary: Destroy an advice\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this advies.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - advices\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v1/review-requests/{request__uuid}/approvals:\n    get:\n      operationId: review_requests_approvals_list\n      description: |-\n        Manage approvals for a given review request.\n\n        Approvals can only be created if the end-user has not submitted an approval yet and\n        they are listed in the user deadlines.\n      summary: List approvals\n      parameters:\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - approvals\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Approval'\n          description: ''\n    post:\n      operationId: review_requests_approvals_create\n      description: |-\n        Manage approvals for a given review request.\n\n        Approvals can only be created if the end-user has not submitted an approval yet and\n        they are listed in the user deadlines.\n      summary: Register an approval\n      parameters:\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - approvals\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Approval'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Approval'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Approval'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approval'\n          description: ''\n  /api/v1/review-requests/{request__uuid}/approvals/{id}:\n    get:\n      operationId: review_requests_approvals_retrieve\n      description: |-\n        Manage approvals for a given review request.\n\n        Approvals can only be created if the end-user has not submitted an approval yet and\n        they are listed in the user deadlines.\n      summary: Retrieve approval details\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this accordering.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - approvals\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approval'\n          description: ''\n    put:\n      operationId: review_requests_approvals_update\n      description: |-\n        Manage approvals for a given review request.\n\n        Approvals can only be created if the end-user has not submitted an approval yet and\n        they are listed in the user deadlines.\n      summary: Replace an approval\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this accordering.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - approvals\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Approval'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Approval'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Approval'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approval'\n          description: ''\n    patch:\n      operationId: review_requests_approvals_partial_update\n      description: |-\n        Manage approvals for a given review request.\n\n        Approvals can only be created if the end-user has not submitted an approval yet and\n        they are listed in the user deadlines.\n      summary: Update an approval\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this accordering.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - approvals\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedApproval'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedApproval'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedApproval'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Approval'\n          description: ''\n    delete:\n      operationId: review_requests_approvals_destroy\n      description: |-\n        Manage approvals for a given review request.\n\n        Approvals can only be created if the end-user has not submitted an approval yet and\n        they are listed in the user deadlines.\n      summary: Destroy an approval\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this accordering.\n        required: true\n      - in: path\n        name: request__uuid\n        schema:\n          type: string\n          format: uuid\n        description: ID of the parent review request.\n        required: true\n      tags:\n      - approvals\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v1/review-requests/{uuid}:\n    get:\n      operationId: review_requests_retrieve\n      description: |-\n        CRUD operations on review requests.\n\n        Note that the list endpoint _requires_ a filter parameter.\n      summary: Retrieve review request details\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - review-requests\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReviewRequest'\n          description: ''\n    put:\n      operationId: review_requests_update\n      description: |-\n        CRUD operations on review requests.\n\n        Note that the list endpoint _requires_ a filter parameter.\n      summary: Replace a review request\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - review-requests\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReviewRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ReviewRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ReviewRequest'\n        required: true\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReviewRequest'\n          description: ''\n    patch:\n      operationId: review_requests_partial_update\n      description: |-\n        CRUD operations on review requests.\n\n        Note that the list endpoint _requires_ a filter parameter.\n      summary: Update a review request\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - review-requests\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedReviewRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedReviewRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedReviewRequest'\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReviewRequest'\n          description: ''\n    delete:\n      operationId: review_requests_destroy\n      description: |-\n        CRUD operations on review requests.\n\n        Note that the list endpoint _requires_ a filter parameter.\n      summary: Destroy a review request\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - review-requests\n      security:\n      - ZGWAuthentication: []\n      - cookieAuth: []\n      - tokenAuth: []\n      responses:\n        '204':\n          description: No response body\ncomponents:\n  schemas:\n    Advice:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        author:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n          description: Author of the review\n        group:\n          type: string\n          default: ''\n          description: Group for which the user has submitted the review.\n        advice:\n          type: string\n          description: Het inhoudelijke advies\n          maxLength: 1000\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentAdvice'\n          description: (New) versions of documents that were uploaded as part of the\n            advice round.\n      required:\n      - author\n      - created\n    Approval:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        author:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n          description: Author of the review\n        group:\n          type: string\n          default: ''\n          description: Group for which the user has submitted the review.\n        approved:\n          type: boolean\n          description: Vink dit aan om akkoord te gaan met het/de document(en).\n        toelichting:\n          type: string\n          description: Voeg een toelichting toe aan de accordering.\n      required:\n      - author\n      - created\n    DocumentAdvice:\n      type: object\n      properties:\n        content:\n          type: string\n          format: binary\n          writeOnly: true\n          description: Content of file\n        size:\n          type: integer\n          writeOnly: true\n          description: Size of file\n          minimum: 0\n        name:\n          type: string\n          writeOnly: true\n          description: Name of file\n        document:\n          type: string\n          format: uri\n          description: URL-referentie naar het brondocument in de Documenten API.\n            Deze mag de 'versie' querystring parameter bevatten.\n          maxLength: 1000\n        editedDocument:\n          type: string\n          format: uri\n          writeOnly: true\n          description: URL reference to Documenten API document, including `?versie=`\n            parameter.\n        sourceVersion:\n          type: integer\n          readOnly: true\n        adviceVersion:\n          type: integer\n          readOnly: true\n      required:\n      - adviceVersion\n      - document\n      - sourceVersion\n    PatchedAdvice:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        author:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n          description: Author of the review\n        group:\n          type: string\n          default: ''\n          description: Group for which the user has submitted the review.\n        advice:\n          type: string\n          description: Het inhoudelijke advies\n          maxLength: 1000\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/DocumentAdvice'\n          description: (New) versions of documents that were uploaded as part of the\n            advice round.\n    PatchedApproval:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        author:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n          description: Author of the review\n        group:\n          type: string\n          default: ''\n          description: Group for which the user has submitted the review.\n        approved:\n          type: boolean\n          description: Vink dit aan om akkoord te gaan met het/de document(en).\n        toelichting:\n          type: string\n          description: Voeg een toelichting toe aan de accordering.\n    PatchedReviewRequest:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        forZaak:\n          type: string\n          format: uri\n          description: URL reference to the zaak in the API.\n          maxLength: 1000\n        reviewType:\n          $ref: '#/components/schemas/ReviewTypeEnum'\n        documents:\n          type: array\n          items:\n            type: string\n            format: uri\n        frontendUrl:\n          type: string\n          readOnly: true\n          description: The frontend URL for reviewers to submit their review.\n        numAdvices:\n          type: integer\n          readOnly: true\n          description: The number of advices registered for this request.\n        numApprovals:\n          type: integer\n          readOnly: true\n          description: The number of approvals registered for this request. Note that\n            does not mean they are all positive approvals - this includes the rejections.\n        numAssignedUsers:\n          type: integer\n          maximum: 32767\n          minimum: 0\n        toelichting:\n          type: string\n        userDeadlines:\n          type: object\n          additionalProperties: {}\n        requester:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n        metadata:\n          type: object\n          additionalProperties: {}\n          description: Metadata that may be relevant for the process.\n        zaakDocuments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ZaakDocument'\n          readOnly: true\n          description: The documents with their download url and relevant metadata.\n        reviews:\n          type: array\n          items:\n            type: object\n            additionalProperties: {}\n          readOnly: true\n          description: Previous advices or approvals.\n    ReviewRequest:\n      type: object\n      properties:\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        forZaak:\n          type: string\n          format: uri\n          description: URL reference to the zaak in the API.\n          maxLength: 1000\n        reviewType:\n          $ref: '#/components/schemas/ReviewTypeEnum'\n        documents:\n          type: array\n          items:\n            type: string\n            format: uri\n        frontendUrl:\n          type: string\n          readOnly: true\n          description: The frontend URL for reviewers to submit their review.\n        numAdvices:\n          type: integer\n          readOnly: true\n          description: The number of advices registered for this request.\n        numApprovals:\n          type: integer\n          readOnly: true\n          description: The number of approvals registered for this request. Note that\n            does not mean they are all positive approvals - this includes the rejections.\n        numAssignedUsers:\n          type: integer\n          maximum: 32767\n          minimum: 0\n        toelichting:\n          type: string\n        userDeadlines:\n          type: object\n          additionalProperties: {}\n        requester:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n        metadata:\n          type: object\n          additionalProperties: {}\n          description: Metadata that may be relevant for the process.\n        zaakDocuments:\n          type: array\n          items:\n            $ref: '#/components/schemas/ZaakDocument'\n          readOnly: true\n          description: The documents with their download url and relevant metadata.\n        reviews:\n          type: array\n          items:\n            type: object\n            additionalProperties: {}\n          readOnly: true\n          description: Previous advices or approvals.\n      required:\n      - created\n      - forZaak\n      - frontendUrl\n      - id\n      - numAdvices\n      - numApprovals\n      - requester\n      - reviewType\n      - reviews\n      - zaakDocuments\n    ReviewTypeEnum:\n      enum:\n      - advice\n      - approval\n      type: string\n    SummaryReviewRequest:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        reviewType:\n          $ref: '#/components/schemas/ReviewTypeEnum'\n        numAdvices:\n          type: integer\n          readOnly: true\n          description: The number of advices registered for this request.\n        numApprovals:\n          type: integer\n          readOnly: true\n          description: The number of approvals registered for this request. Note that\n            does not mean they are all positive approvals - this includes the rejections.\n        numAssignedUsers:\n          type: integer\n          maximum: 32767\n          minimum: 0\n        completed:\n          type: integer\n          readOnly: true\n          description: The number of completed requests.\n        userDeadlines:\n          type: object\n          additionalProperties: {}\n        advices:\n          type: array\n          items:\n            $ref: '#/components/schemas/Advice'\n        approvals:\n          type: array\n          items:\n            $ref: '#/components/schemas/Approval'\n      required:\n      - advices\n      - approvals\n      - completed\n      - id\n      - numAdvices\n      - numApprovals\n      - reviewType\n    User:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Required. 150 characters or fewer.\n          maxLength: 150\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n        fullName:\n          type: string\n          description: The full name of the requesting user.\n      required:\n      - fullName\n      - username\n    ZaakDocument:\n      type: object\n      properties:\n        bronorganisatie:\n          type: string\n        identificatie:\n          type: string\n        downloadUrl:\n          type: string\n          readOnly: true\n          description: URL to download the document\n        name:\n          type: string\n          readOnly: true\n        extra:\n          type: string\n          readOnly: true\n        title:\n          type: string\n          readOnly: true\n      required:\n      - bronorganisatie\n      - downloadUrl\n      - extra\n      - identificatie\n      - name\n      - title\n  securitySchemes:\n    ZGWAuthentication:\n      type: http\n      in: beader\n      bearerFormat: JWT\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: Session\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\n",
			"canonicalURL": "/github.com/GemeenteUtrecht/zaakafhandelcomponent@309dfea76b97d5ee8fb5ca856851bdb2619afb18/-/blob/backend/src/zac/tests/schemas/kownsl.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GemeenteUtrecht/zaakafhandelcomponent/blob/309dfea76b97d5ee8fb5ca856851bdb2619afb18/backend/src/zac/tests/schemas/kownsl.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/review-requests\": get: operation \"review_requests_list\": security: parse security scheme \"ZGWAuthentication\": http: at backend/src/zac/tests/schemas/kownsl.yaml:1055:7: invalid \"scheme\": \"\""
}