{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/observatorium/api"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "client/spec.yaml",
			"byteSize": 7757,
			"content": "openapi: 3.0.0\ninfo:\n  description: The Observatorium API\n  version: \"0.0.1\"\n  title: Observatorium API\n  license:\n    name: Apache 2.0\n    url: \"http://www.apache.org/licenses/LICENSE-2.0.html\"\ntags:\n  - name: observatoriumv1\n    description: Calls related to Observatorium\n# Keeping all the API paths here, but likely need to separate it out to another file,\n# once paths for other signals are also added.\npaths:\n  /api/metrics/v1/{tenant}/api/v1/rules/raw:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n    get:\n      tags:\n        - rulesrawv1\n      summary: Lists all configured rules for a tenant in YAML form\n      operationId: getRawRules\n      description: |\n        You can list all configured rules for a tenant in YAML form\n      responses:\n        \"200\":\n          description: all rules for a tenant\n          content:\n            application/yaml:\n              schema:\n                $ref: ./models/models.yaml#/components/schemas/RulesRaw\n        \"401\":\n          description: error finding tenant ID\n        \"403\":\n          description: unauthorized\n        \"500\":\n          description: server side error while listing rules\n    put:\n      tags:\n        - rulesrawv1\n      summary: Set/overwrite the rules for a tenant\n      operationId: setRawRules\n      description: You can set rules for a tenant\n      responses:\n        \"200\":\n          description: successfully updated rules file\n        \"401\":\n          description: error finding tenant ID\n        \"403\":\n          description: unauthorized\n        \"500\":\n          description: server error while saving rules\n      requestBody:\n        content:\n          application/yaml:\n            schema:\n              $ref: ./models/models.yaml#/components/schemas/RulesRaw\n        description: Rules to set for a tenant\n  /api/metrics/v1/{tenant}/api/v1/rules:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n      - in: query\n        name: type\n        description: type of Rules\n        schema:\n          type: string\n          enum:\n            - alert\n            - record\n      - in: query\n        name: match[]\n        description: Repeated label selector argument\n        schema:\n          type: array\n          items:\n            type: string\n    get:\n      tags:\n        - rulesv1\n      summary: Get Rules for a tenant in JSON form\n      operationId: getRules\n      description: |\n        You can get rules for a tenant with health data\n      responses:\n        \"2XX\":\n          description: rule for a tenant\n          content:\n            application/json:\n              schema:\n                $ref: ./responses/responses.yaml#/components/schemas/RulesResponse\n        \"4XX\":\n          description: Bad request\n        \"5XX\":\n          description: Server side error\n  /api/metrics/v1/{tenant}/api/v1/labels:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n      - $ref: ./parameters/parameters.yaml#/components/parameters/optionalSeriesMatcher\n      - $ref: ./parameters/parameters.yaml#/components/parameters/startTS\n      - $ref: ./parameters/parameters.yaml#/components/parameters/endTS\n    get:\n      tags:\n        - labelsv1\n      summary: Get all labels for a tenant\n      operationId: getLabels\n      description: |\n        You can get labels for a tenant\n      responses:\n        \"2XX\":\n          description: labels for a tenant\n          content:\n            application/json:\n              schema:\n                $ref: ./responses/responses.yaml#/components/schemas/LabelsResponse\n        \"4XX\":\n          description: Bad request\n        \"5XX\":\n          description: Server side error\n  /api/metrics/v1/{tenant}/api/v1/label/{label_name}/values:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n      - in: path\n        name: label_name\n        description: label name to get values for\n        required: true\n        schema:\n          type: string\n      - $ref: ./parameters/parameters.yaml#/components/parameters/optionalSeriesMatcher\n      - $ref: ./parameters/parameters.yaml#/components/parameters/startTS\n      - $ref: ./parameters/parameters.yaml#/components/parameters/endTS\n    get:\n      tags:\n        - labelvaluesv1\n      summary: Get label values for a tenant\n      operationId: getLabelValues\n      description: |\n        You can get label values for a label of a tenant\n      responses:\n        \"2XX\":\n          description: label values for a tenant\n          content:\n            application/json:\n              schema:\n                $ref: ./responses/responses.yaml#/components/schemas/LabelValuesResponse\n        \"4XX\":\n          description: Bad request\n        \"5XX\":\n          description: Server side error\n  /api/metrics/v1/{tenant}/api/v1/query:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n      - $ref: ./parameters/parameters.yaml#/components/parameters/query\n      - $ref: ./parameters/parameters.yaml#/components/parameters/queryTimeout\n      - in: query\n        name: time\n        description: Evaluation timestamp\n        schema:\n          type: string\n          format: rfc3339 | unix_timestamp\n    get:\n      tags:\n        - queryv1\n      summary: Evaluate instant queries for a tenant\n      operationId: getInstantQuery\n      description: |\n        You can evaluate instant queries for a tenant\n      responses:\n        \"2XX\":\n          description: instance query result for a tenant\n          content:\n            application/json:\n              schema:\n                $ref: ./responses/responses.yaml#/components/schemas/QueryResponse\n        \"4XX\":\n          description: Bad request\n        \"5XX\":\n          description: Server side error\n  /api/metrics/v1/{tenant}/api/v1/query_range:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n      - $ref: ./parameters/parameters.yaml#/components/parameters/query\n      - $ref: ./parameters/parameters.yaml#/components/parameters/startTS\n      - $ref: ./parameters/parameters.yaml#/components/parameters/endTS\n      - $ref: ./parameters/parameters.yaml#/components/parameters/queryTimeout\n      - in: query\n        name: step\n        description: Query resolution step width\n        schema:\n          type: string\n    get:\n      tags:\n        - queryv1\n      summary: Evaluate range queries for a tenant\n      operationId: getRangeQuery\n      description: |\n        You can evaluate range queries for a tenant\n      responses:\n        \"2XX\":\n          description: range query result for a tenant\n          content:\n            application/json:\n              schema:\n                $ref: ./responses/responses.yaml#/components/schemas/QueryRangeResponse\n        \"4XX\":\n          description: Bad request\n        \"5XX\":\n          description: Server side error\n  /api/metrics/v1/{tenant}/api/v1/series:\n    parameters:\n      - $ref: ./parameters/parameters.yaml#/components/parameters/tenant\n      - $ref: ./parameters/parameters.yaml#/components/parameters/seriesMatcher\n      - $ref: ./parameters/parameters.yaml#/components/parameters/startTS\n      - $ref: ./parameters/parameters.yaml#/components/parameters/endTS\n    get:\n      tags:\n        - seriesv1\n      summary: Get series for a tenant\n      operationId: getSeries\n      description: |\n        You can get series for a tenant\n      responses:\n        \"2XX\":\n          description: series for a tenant\n          content:\n            application/json:\n              schema:\n                $ref: ./responses/responses.yaml#/components/schemas/SeriesResponse\n        \"4XX\":\n          description: Bad request\n        \"5XX\":\n          description: Server side error"
		}
	},
	"Error": "parse: parse spec: parse operations: /api/metrics/v1/{tenant}/api/v1/label/{label_name}/values: parameters: parse parameter \"\": resolve \"./parameters/parameters.yaml#/components/parameters/tenant\" reference: invalid parameter reference"
}