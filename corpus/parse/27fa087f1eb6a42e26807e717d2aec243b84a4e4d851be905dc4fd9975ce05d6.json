{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swiss-ssi-group/MattrGlobalAspNetCore"
		},
		"file": {
			"name": "platform-public-bundle.yml",
			"size": 0,
			"path": "src/MattrOpenApiNswag/platform-public-bundle.yml",
			"byteSize": 192159,
			"content": "openapi: 3.0.2\ninfo:\n  title: Platform Core API\n  version: v1.0.1\n  description: |\n    # Introduction\n    The Platform Core API defines a set of capabilities that can be used to manage a tenant of the MATTR Platform.\n\n    The API can be used to manage Decentralised Identifiers, issue Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs.\n\n    ## API Reference Versioning\n    A previous version of the API Reference can be [accessed here](/api-ref-previous).\n\n    # Pagination\n    Most list operations in the API use pagination that can be controlled by a cursor method using the `cursor` and `limit` query parameters.\n\n    **Example on [Retrieve List of Credentials](#operation/retrieveListCreds)**\n    ```\n    GET https://tenant.vii.mattr.global/core/v1/credentials\n    ?limit=100\n    \u0026cursor=Y3JlYXRlZEF0PTIwMjAtMTAtMDhUMjMlM0ExMyUzQTE3Ljg5NtZGUxZWEyNzQ4MWI4\n    ```\n\n    * The `nextCursor` is found at the start of each returned range of credential entries and identifies the last object in the list.\n    * The `limit` determines how many entries are returned in that request, with a maximum value of 1000.\n\n    Requesting a page after the last value in the list will return an empty `data` object.\n\n    ``` json\n    {\n    \"data\": []\n    }\n    ```\n\n    Not using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n\n    # Authorization\n    Access to the API is granted by our authorization provider, as part of onboarding you will be provided with client credentials to make a call to the auth provider and receive a bearer token.\n    This token is then used in an `authorization` header on all calls idenitfied as requiring `bearerAuth` (this is required for the majorty of management operations).\n\n    \u003cSecurityDefinitions /\u003e\n  contact:\n    email: support@mattr.global\ntags:\n  - name: Security\n  - name: DIDs\n  - name: Credentials\n  - name: Revocation\n  - name: Presentations\n  - name: Messaging\n  - name: OIDC Issuer Auth\n  - name: OIDC Issuers\n  - name: OIDC Issuer Client\n  - name: OIDC Verifier Auth\n  - name: OIDC Verifiers\n  - name: OIDC Verifier Client\nx-tagGroups:\n  - name: Access\n    tags:\n      - Security\n  - name: Platform Core\n    tags:\n      - DIDs\n      - Credentials\n      - Revocation\n      - Presentations\n      - Messaging\n  - name: OIDC Bridge\n    tags:\n      - OIDC Issuer Auth\n      - OIDC Issuers\n      - OIDC Issuer Client\n      - OIDC Verifier Auth\n      - OIDC Verifiers\n      - OIDC Verifier Client\nsecurity:\n  - bearerAuth: []\npaths:\n  /.well-known/did-configuration:\n    get:\n      security: []\n      tags:\n        - DIDs\n      summary: Well known DID configuration\n      description: |\n        Returns a list of Decentralized Identifier (DID) Configuration entries from the tenant.\n\n        See https://identity.foundation/.well-known/resources/did-configuration/\n\n        These entries are automatically configured for **all** DIDs created by the tenant and is used for any party wanting to establish the relationship between domain ownership and the DIDs by exposing cryptographic proofs.\n\n        This endpoint is unprotected, public facing and can be determinisically found at the root of the tenant subdomian or alias by any party wishing to discover the domain to DID relationship.\n      responses:\n        '200':\n          description: List of DID Configuration entries\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dids.v1_GetDidConfigJsonldResponse'\n              examples:\n                Example:\n                  value:\n                    entries:\n                      - '@context':\n                          - 'https://www.w3.org/2018/credentials/v1'\n                          - 'https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld'\n                        type:\n                          - VerifiableCredential\n                          - DomainLinkageCredential\n                        issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                        issuanceDate: '2020-11-01T21:33:38.398Z'\n                        credentialSubject:\n                          id: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                          origin: tenant.vii.mattr.global\n                        proof:\n                          jws: eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..sOuFZV7lrUdxzOaRrCYoD9bbgxp3oEX1fceFFwxekjvJBzbI_ZzKL8-vPWOoFY200KTPwLYcEPhto0GQfM0iDg\n                          type: Ed25519Signature2018\n                          created: '2020-11-01T21:33:38Z'\n                          proofPurpose: assertionMethod\n                          verificationMethod: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                      - '@context':\n                          - 'https://www.w3.org/2018/credentials/v1'\n                          - 'https://w3c-ccg.github.io/ldp-bbs2020/context/v1'\n                          - 'https://identity.foundation/.well-known/contexts/did-configuration-v0.0.jsonld'\n                        type:\n                          - VerifiableCredential\n                          - DomainLinkageCredential\n                        issuer: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v'\n                        issuanceDate: '2020-11-01T21:33:38.427Z'\n                        credentialSubject:\n                          id: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v'\n                          origin: product-team.platform.staging.mattrlabs.io\n                        proof:\n                          type: BbsBlsSignature2020\n                          created: '2020-11-01T21:33:38Z'\n                          proofValue: itoN9nPf6ut0/IxkNp+qesJOju9hV1BYxFMkP4VynqUxFalmQV4PQ6wJhqz5KJppC39+VL+19CxVjPXUXaIDVGRs7WPDGbLaGeViu1Mm4nZCgJbptdw8HOkkpZZ21SCaTN+bok2IG5XRH+QsBWH/cA==\n                          proofPurpose: assertionMethod\n                          verificationMethod: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v#zUC75v2eWSVhTC9XtyYci1cdrHNze4Wwzgv92GUDXeYQEkfZuu2CavRBVFkk9mnpToxiUMacjgYAx9JBmuoJXWc7YCRDDjTD5ocunta9DJrdmgCdAmuFCUfBPTo4GAnTY7x4582'\n      operationId: wellKnownDidConfig\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/.well-known/did-configuration \\\n              --header 'Accept: application/json'\n  '/v1/dids/{id}':\n    get:\n      tags:\n        - DIDs\n      summary: Resolve a DID\n      description: |-\n        Resolves the DID provided in the path to its DID Document from the DID method and method identifier. The DID Document may contain cryptographic material like a public key and service endpoints.\n\n        Example:\n\n        `did:sov:1234556` -  will be referenced on the Sovrin network\n        `did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9` - the public key is encapsulated in the DID\n\n        #### Returns\n\n        The DID Document is returned along with meta-data already held about the DID by the tenant;\n        - Registration Status: Given there can be a lag in writing on-ledger DIDs this status will be updated over a short timeframe (usually within 10 minutes).\n        - Registered: Timestamp of registration.\n        - Keys: A reference to the Keys in a KMS\n      responses:\n        '200':\n          description: A DID Document and meta-data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dids.v1_GetDidResponse'\n              examples:\n                'Example did:key':\n                  value:\n                    didDocument:\n                      '@context': 'https://w3.org/ns/did/v1'\n                      id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      publicKey:\n                        - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                          type: Ed25519VerificationKey2018\n                          controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                          publicKeyBase58: 6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\n                      authentication:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      assertionMethod:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      capabilityDelegation:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      capabilityInvocation:\n                        - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      keyAgreement:\n                        - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G'\n                          type: X25519KeyAgreementKey2019\n                          controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                          publicKeyBase58: CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\n                    registrationStatus: COMPLETED\n                    localMetadata:\n                      keys:\n                        - kmsKeyId: 6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\n                          didDocumentKeyId: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                      registered: 1588562204304\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                '404':\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      operationId: resolveDid\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/dids/did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    delete:\n      description: Delete a DID\n      tags:\n        - DIDs\n      summary: Delete a DID\n      responses:\n        '204':\n          description: DID successfully deleted\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                '404':\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      operationId: deleteDid\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/core/v1/dids/did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    parameters:\n      - $ref: '#/components/parameters/Did'\n  /v1/dids:\n    get:\n      tags:\n        - DIDs\n      summary: Retrieve a list of DIDs\n      parameters:\n        - $ref: '#/components/parameters/Common_Limit'\n        - $ref: '#/components/parameters/Common_Cursor'\n      description: |\n        Returns a list of all DIDs (Decentralized Identifiers) managed by the tenant and their associated meta-data.\n      responses:\n        '200':\n          description: A list of DIDs\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dids.v1_GetDidsResponse'\n              examples:\n                Example:\n                  value:\n                    nextCursor: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    data:\n                      - did: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                        localMetadata:\n                          keys:\n                            - kmsKeyId: 5jFLoKmMPgqWaV1Ler5yaECr6XjDX6DPymZhYpVnLDVh\n                              didDocumentKeyId: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                          registered: 1586312761694\n                      - did: 'did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT'\n                        localMetadata:\n                          keys:\n                            - kmsKeyId: 2ezhxiEP6mgmMoWwaa3KJqS6GhPfYHpQTKvCAtPYCib5\n                              didDocumentKeyId: 'did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT#z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT'\n                          registered: 1586841097944\n      operationId: retrieveListOfDids\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/dids \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    post:\n      tags:\n        - DIDs\n      summary: Create a DID\n      description: |-\n        Takes a supported DID Method and generates keys and associated information for a new DID and registers the DID Document if applicable.\n\n        Methods supported:\n        - key\n        - web\n        - sov\n\n        \u003e During a trial any did:sov DIDs will not reside on the Sovrin MainNet, and when migrating to the MainNet any sov DIDs will be removed. Any did:sov DIDs created using this endpoint should be considered as experimental as well as any credentials created using them.\n\n        #### Creating did:key\n        A DID with a DID method of key can be created as follows.\n\n        * `{\"method\": \"key\", \"options\": {\"keyType\": \"ed25519\"}}`\n        * `{\"method\": \"key\", \"options\": {\"keyType\": \"bls12381g2\"}}`\n\n        If no options are provided, a DID will be created with an ed25519 key type.\n\n        If the key type in options is set to `bls12381g2` a DID will be created with a BLS key type which supports BBS+ signatures for issuing ZKP-enabled credentials.\n        \u003e A DID created with an experimental `bls12381g2` key type can only be used for issuing credentials.\n\n        #### Creating did:web\n        A DID with a DID method of web can be created as follows.\n\n        * `{\"method\": \"web\", \"options\": {\"domain\": \"mattr.global\"}}`\n\n        The returned initial DID Document then needs to be hosted so that it is accessible from the domain provided in the options, e.g. https://mattr.global/.well-known/did.json.\n\n        When the DID Document is not available for download from the domain, the Registration Status of the DID is PROCESSING.\n\n        Once the DID Document can be downloaded from the domain, the Registration Status will be COMPLETED.\n\n        Note that the tenant will be able to prove ownership of the keys associated with the did:web DID Document through the well-known endpoint, i.e. https://tenant.vii.mattr.global/.well-known/did-configuration, while the DID Document hosted on the domain links the DID to a domain.\n\n        #### Creating did:sov\n        A DID with a DID method of sov can be created as follows.\n\n        * `{\"method\": \"sov\"}`\n\n        The Registration Status of the DID is updated over a short timeframe due to the lag incurred in registering the DID Document, which may take up to 10 minutes.\n        \u003e  During a trial DID Documents are anchored on a private Indy pool not the Sovrin MainNet. Please [contact us](https://mattr.global/contact/) to discuss further options.\n\n        #### Returns\n        The DID, associated metadata and registration status.\n\n        Unsupported Methods result in a 400 response with an \"Invalid value\" message.\n      requestBody:\n        description: Options for creating the decentralized identifier\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dids.v1_CreateDidDocument'\n            examples:\n              'Create did:key':\n                value:\n                  method: key\n                  options:\n                    keyType: ed25519\n      responses:\n        '201':\n          description: DID document created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dids.v1_CreateDidResponse'\n              examples:\n                'did:key':\n                  value:\n                    did: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n                    registrationStatus: COMPLETED\n                    localMetadata:\n                      keys:\n                        - kmsKeyId: D6EjPbBioWJb4WSEYrPHuUrDXbCTkNEfmB91p8MdkvVT\n                          didDocumentKeyId: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq#z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n                      registered: 1588741969938\n                      initialDidDocument:\n                        '@context': 'https://w3.org/ns/did/v1'\n                        id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        publicKey:\n                          - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                            type: Ed25519VerificationKey2018\n                            controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                            publicKeyBase58: 6Prt5jwEFEDtz1sPwQSdqNH6Nf5fy87dpPg23CGWPanm\n                        authentication:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        assertionMethod:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        capabilityDelegation:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        capabilityInvocation:\n                          - 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                        keyAgreement:\n                          - id: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9#z6LSo9fse5qkJjkZTSHRP69mvEw381Tww3umcjXaXQ7Zz71G'\n                            type: X25519KeyAgreementKey2019\n                            controller: 'did:key:z6Mkjr7vfzBfamiN6Wi6cyQUgTq6CEMXP1MzWQawsUEXJoa9'\n                            publicKeyBase58: CUVi7n2tDH2pN3uerSdpbeiZGrvqESjcjkou2wU3GjEW\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Unsupported method:\n                  value:\n                    code: BadRequest\n                    message: Bad Request\n                    details:\n                      - value: xxx\n                        msg: Invalid value\n                        param: method\n                        location: body\n      operationId: createDid\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/dids \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{   \"method\":\"key\",\n                          \"options\": {\n                              \"keyType\":\"ed25519\"\n                          }\n                      }'\n  /v1/credentials:\n    post:\n      tags:\n        - Credentials\n      summary: Create a verifiable credential\n      requestBody:\n        description: The credential payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credentials.v1_CreateCredentialRequest'\n            examples:\n              Create a Credential:\n                value:\n                  '@context':\n                    - 'https://www.w3.org/2018/credentials/v1'\n                    - 'https://schema.org'\n                  subjectId: 'did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                  type:\n                    - VerifiableCredential\n                    - AlumniCredential\n                  claims:\n                    givenName: Jamie\n                    familyName: Doe\n                    alumniOf: Example University\n                  issuer:\n                    id: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    name: Example University\n                  persist: true\n                  tag: identifier123\n                  revocable: true\n      responses:\n        '201':\n          description: Credential created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credentials.v1_CreateCredentialResponse'\n        '400':\n          description: 'Bad request, Invalid request body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      description: |\n        Creates a Verifiable Credential (VC or just Credential) in a JSON-LD format adhering to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n\n        **Creating the Payload:**\n\n        The values required by the operation are validated where available and used to construct the Verifiable Credential.\n\n        The Credential is issued using JSON-LD with linked data proofs, the `type` values of the Credential and the Subject Claims must be represented by a schema in `@context`.\n        \u003e The schema `https://www3.org/2018/credentials/v1` is always required in addition any `@context` values, so that the Credential can be referenced.\n\n        \u003e The `type` value of `VerifiableCredential` must be used as the *first* value in the array to conform to the [W3C VC Data Model spec]( https://www.w3.org/TR/vc-data-model/).\n\n        **Subject Identifiers**\n\n        In general, the Subject identifier in the `subjectId` field should have been authentically bound to the subject and authenticated against the information used in the claims, for example by using an OpenID Connect authentication flow or another mechanism including out-of-band processes.\n\n        Credentials may be issued without subject identifiers, this covers uses-cases, where the credential cannot or does not need to be adequately bound to a Subject DID and may be treated as a bearer credential or reissued at a later time once the credential can be bound.\n\n        **ZKP-enabled BBS+ credential:**\n\n        If you wish to issue a ZKP-enabled Verifiable Credential, the provided `issuer` `id` must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential. Note that the schema `https://w3c-ccg.github.io/ldp-bbs2020/context/v1` will automatically be added to the `@context` in the credential.\n\n        \u003e During Preview this feature is experimental. It may change over time and may require credentials to be reissued.\n\n        **Credential meta-data:**\n\n        Setting the `persist` value to `true` will store the entire credential contents as well as the meta-data on the platform. If set to `false` only the credential meta-data is held on the platform:\n        - `id`\n        - `tag` (optional)\n        - `credentialStatus` (optional)\n        - `issuanceDate`\n\n        The optional `tag` value can be used to externally reference the issued credential.\n\n        #### Returns\n        On success, the Verifiable Credential is always provided in the response along with meta-data.\n        Subject bound credential should be delivered to the intended subject.\n      operationId: createCredential\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"@context\":[\"https://www.w3.org/2018/credentials/examples/v1\" , \"https://www.w3.org/2018/credentials/v1\"],\n                       \"subjectId\":\"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n                       \"type\":[\"AlumniCredential\"],\n                       \"claims\":{\"givenName\":\"Jamie\",\n                                 \"familyName\":\"Doe\",\n                                 \"alumniOf\":\"Example University\"},\n                       \"issuer\":{\"id\":\"did:key:z6Mkg7FkYxUpSKBEUJMeG91A9vz66GfWxB4m9Lq81AMZ7wNT\",\n                                 \"name\":\"Example University\"},\n                       \"persist\":true,\n                       \"revocable\":true\n                      }'\n    get:\n      tags:\n        - Credentials\n      summary: Retrieve list of credential data\n      parameters:\n        - schema:\n            type: string\n            example: identifier123\n          in: query\n          name: tag\n          description: The optional external reference to filter on\n        - schema:\n            type: string\n            example: AlumniCredential\n          in: query\n          name: type\n          description: The optional credential type to filter on\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned credential entries, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of credential entries\n      responses:\n        '200':\n          description: Returns a page of credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credentials.v1_GetCredentialsResponse'\n              examples:\n                List of credential data:\n                  value:\n                    nextCursor: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n                    data:\n                      - id: 873277c0-a162-11ea-8a1d-a111119347e6\n                        credential:\n                          '@context':\n                            - 'https://www.w3.org/2018/credentials/v1'\n                            - 'https://schema.org'\n                          type:\n                            - VerifiableCredential\n                            - AlumniCredential\n                          issuer:\n                            id: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                            name: 'https://tenant.vii.mattr.global'\n                          issuanceDate: '2020-05-02T12:06:29.156Z'\n                          credentialSubject:\n                            id: 'did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                            givenName: Jamie\n                            familyName: Doe\n                          proof:\n                            type: Ed25519Signature2018\n                            created: '2020-05-02T12:06:29Z'\n                            jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                            proofPurpose: assertionMethod\n                            verificationMethod: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                        tag: identifier123\n                        issuanceDate: '2020-05-02T12:06:29.156Z'\n                      - id: 9043aa74-eb08-11ea-adc1-0242ac120002\n                        tag: identifier124\n                        credentialStatus:\n                          id: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                          type: RevocationList2020Status\n                          revocationListCredential: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                          revocationListIndex: 1\n                        issuanceDate: '2020-10-06T03:21:02.397Z'\n        '400':\n          description: Bad query parameters in request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Cursor not found:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: xxxx\n                        msg: id and createdAt is missing\n                        param: cursor\n                        location: query\n                Limit exceeded:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - value: '1001'\n                        msg: Invalid value\n                        param: limit\n                        location: query\n      operationId: retrieveListCreds\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |\n        Returns a list of all credential data stored in the tenant.\n\n        **In the list**\n\n        Inside the `data` array, there is an body for each credential issued on the platform, in addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n        \u003e Credentials issued via the OIDC Bridge are set not to be persisted.\n\n        **Pagination**\n\n        Pagination can be controlled by a cursor method using the `cursor`and `limit` query parameters. The `nextCursor` is found at the start of each returned range of credential entries and the `limit` determines how many entries are returned in that request, with a maximum value of `1000`.\n\n        Not using a query parameter defaults the response to return the first range of credential entries with a limit of 100.\n\n        \u003e The optional `tag` filter or the Credential `type` can be used to retrieve credential data.\n  '/v1/credentials/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n        description: Credential ID\n    get:\n      tags:\n        - Credentials\n      summary: Retrieve credential data\n      responses:\n        '200':\n          description: Credential returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credentials.v1_GetCredentialResponse'\n              examples:\n                With persisted credential:\n                  value:\n                    id: 873277c0-a162-11ea-8a1d-a111119347e6\n                    credential:\n                      '@context':\n                        - 'https://www.w3.org/2018/credentials/v1'\n                        - 'https://schema.org'\n                      type:\n                        - VerifiableCredential\n                        - AlumniCredential\n                      issuer:\n                        id: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                        name: 'https://tenant.vii.mattr.global'\n                      issuanceDate: '2020-05-02T12:06:29.156Z'\n                      credentialStatus:\n                        id: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                        type: RevocationList2020Status\n                        revocationListCredential: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                        revocationListIndex: 4\n                      credentialSubject:\n                        id: 'did:key:z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n                        givenName: Jamie\n                        familyName: Doe\n                      proof:\n                        type: Ed25519Signature2018\n                        created: '2020-05-02T12:06:29Z'\n                        jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                        proofPurpose: assertionMethod\n                        verificationMethod: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                    tag: identifier123\n                    credentialStatus:\n                      id: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n                      type: RevocationList2020Status\n                      revocationListCredential: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                      revocationListIndex: 4\n                    issuanceDate: '2020-05-02T12:06:29.156Z'\n                No persisted credential:\n                  value:\n                    id: 9043aa74-eb08-11ea-adc1-0242ac120002\n                    tag: identifier124\n                    issuanceDate: '2020-05-02T12:06:29.156Z'\n        '400':\n          description: Credential ID not in a UUID format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      operationId: retrieveCredential\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials/873277c0-a162-11ea-8a1d-a111119347e6 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Get data for a previously created credential using its ID.\n\n        In addition to the `id` the body will contain optionally added meta-data and may contain the entire credential contents if `persist` was invoked during credential creation.\n\n        \u003e Credentials issued via the OIDC Bridge do not have their contents persisted.\n    delete:\n      tags:\n        - Credentials\n      summary: Remove credential data\n      responses:\n        '204':\n          description: Credential deleted\n        '400':\n          description: Invalid id parameter format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Credential ID not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      operationId: removeCredential\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials/873277c0-a162-11ea-8a1d-a111119347e6 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Remove all stored credential data from the tenant using its ID.\n\n        \u003e The entire entry including meta-data and the credential contents is removed from the system and cannot be recovered.\n  /v1/credentials/verify:\n    post:\n      operationId: verify-credential\n      tags:\n        - Credentials\n      summary: Verify a credential\n      description: |-\n        Send any JSON-LD Verifiable Credential that conforms to the [W3C Verifiable Credentials data model](https://www.w3.org/TR/vc-data-model/) to perform verification checks and return a response:\n        - Issuer DID can be resolved\n        - JSON-LD context is valid for subject claims\n        - Proof is valid \u0026 the credential has not been tampered with\n        - Is not in a revoked status on a RevocationList2020\n        This endpoint can be used to check any Credential issued by any service provider.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credentials.v1_VerifyCredentialRequest'\n      responses:\n        '200':\n          description: Credential has been processed\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  verified:\n                    type: boolean\n                  reason:\n                    type: string\n                    minLength: 1\n                    example: Credential has been revoked\n                    description: Reason for verification failure\n                required:\n                  - verified\n              examples:\n                Credential Pass:\n                  value:\n                    verified: true\n                Credential Revoked:\n                  value:\n                    verified: false\n                    reason: Credential has been revoked\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials/verify \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\n                        \"credential\": {\n                          \"@context\": [\n                            \"https://www.w3.org/2018/credentials/v1\",\n                            \"https://schema.org\"\n                          ],\n                          \"type\": [\n                            \"VerifiableCredential\",\n                            \"Course\"\n                          ],\n                          \"issuer\": {\n                            \"id\": \"did:key:z6MknFBDVf6bd9AU9EkRyHpVz2tQXdnYL1tbhCkFiRx1uCkh\",\n                            \"name\": \"tenant\"\n                          },\n                          \"issuanceDate\": \"2020-11-30T02:56:46.133Z\",\n                          \"credentialSubject\": {\n                            \"id\": \"did:key:z6MkfxQU7dy8eKxyHpG267FV23agZQu9zmokd8BprepfHALi\",\n                            \"givenName\": \"Chris\",\n                            \"familyName\": \"Shin\",\n                            \"educationalCredentialAwarded\": \"Certificate Name\"\n                          },\n                          \"proof\": {\n                            \"type\": \"Ed25519Signature2018\",\n                            \"created\": \"2020-11-30T02:56:46Z\",\n                            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..p98wThckxfBf5NWy6vjsctkWVXHZ9hfov-yW-g_HYoi2fBRh19iiYf5CiAYEaPiX9ePJl7aeyeyLlZ_wVdHxAw\",\n                            \"proofPurpose\": \"assertionMethod\",\n                            \"verificationMethod\": \"did:key:z6MknFBDVf6bd9AU9EkRyHpVz2tQXdnYL1tbhCkFiRx1uCkh#z6MknFBDVf6bd9AU9EkRyHpVz2tQXdnYL1tbhCkFiRx1uCkh\"\n                          }\n                        }\n                      }'\n  '/v1/credentials/{id}/revocation-status':\n    post:\n      tags:\n        - Revocation\n      summary: Set credential revocation status\n      description: |\n        A credential can be revoked by setting the revocation status.\n      requestBody:\n        description: Setting the revocation status\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Credentials.v1_SetRevocationStatus'\n            examples:\n              Example:\n                value:\n                  isRevoked: true\n      responses:\n        '200':\n          description: The revocation status has been set\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Credential not revocable:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: credential not revocable\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Credential does not exist:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: not found\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Revocation list is not found:\n                  value:\n                    code: string\n                    message: string\n                    details:\n                      - {}\n      operationId: setRevocationStatus\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials/a80a5e7e-1972-4be6-8a4e-2adf09badf24/revocation-status \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"isRevoked\": true}'\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n        name: id\n        in: path\n        required: true\n        description: Credential ID\n    get:\n      tags:\n        - Revocation\n      summary: Retrieve credential revocation status\n      responses:\n        '200':\n          description: Credential status\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Credentials.v1_RevocationStatusResponse'\n              examples:\n                Revocation Status:\n                  value:\n                    isRevoked: false\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Credential not revocable:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: credential not revocable\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Credential does not exist:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: path\n                        msg: not found\n                        param: id\n                        value: a80a5e7e-1972-4be6-8a4e-2adf09badf24\n                Revocation list is not found:\n                  value:\n                    code: string\n                    message: string\n                    details:\n                      - {}\n      operationId: getRevocationStatus\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/credentials/a80a5e7e-1972-4be6-8a4e-2adf09badf24/revocation-status \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      description: |-\n        Retrieve the revocation status of a certain credential.\n\n\n        #### Returns\n        The revocation status of the credential\n  '/v1/revocation-lists/{id}':\n    get:\n      tags:\n        - Revocation\n      summary: Retrieve revocation list\n      responses:\n        '200':\n          description: The revocation list\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifiableCredential'\n              examples:\n                Revocation List:\n                  value:\n                    id: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n                    '@context':\n                      - 'https://www.w3.org/2018/credentials/v1'\n                      - 'https://w3id.org/vc-revocation-list-2020/v1'\n                    type:\n                      - VerifiableCredential\n                      - RevocationList2020Credential\n                    issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n                    issuanceDate: '2020-05-02T12:06:29.156Z'\n                    credentialSubject:\n                      type: RevocationList2020\n                      encodedList: H4sIAAAAAAAAA-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA\n                    proof:\n                      type: Ed25519Signature2018\n                      created: '2020-05-02T12:06:29Z'\n                      jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n                      proofPurpose: assertionMethod\n                      verificationMethod: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6Mkvji7zrwyFATXUzGNBSCnrPaZy7H3BWUnihrHvZdkEd9y'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Revocation list is not found:\n                  value:\n                    code: NotFound\n                    message: Resource Not Found\n      operationId: retrieveRevocationList\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n      security: []\n      description: |-\n        Retrieve the revocation list that contains the revocation status of a number of credentials.\n\n\n        #### Returns\n        The revocation list\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: cc641396-3750-43c8-b8b8-f30d74eb3fb3\n        name: id\n        in: path\n        required: true\n        description: Revocation list ID\n  '/v1/credentials/{id}/revocation-status/notification':\n    parameters:\n      - $ref: '#/components/parameters/Id'\n    post:\n      summary: Create a revocation message payload\n      operationId: createRevNotification\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  id:\n                    type: string\n                    minLength: 1\n                  type:\n                    type: string\n                    minLength: 1\n                  to:\n                    type: array\n                    items:\n                      required:\n                        - string\n                      properties: {}\n                  from:\n                    type: string\n                    minLength: 1\n                  created_time:\n                    type: number\n                  body:\n                    type: object\n                    properties:\n                      revocationListCredential:\n                        type: string\n                        minLength: 1\n                      revocationListIndex:\n                        type: string\n                        minLength: 1\n                      isRevoked:\n                        type: boolean\n                    required:\n                      - revocationListCredential\n                      - revocationListIndex\n                      - isRevoked\n                required:\n                  - id\n                  - type\n                  - to\n                  - from\n                  - created_time\n                  - body\n      description: |-\n        Create a payload that can form a message in the JWM format that can be used in sending notifications to subjects based on the revocation status of their issued credentials.\n\n        - Use a DID setup on the tenant as the `from` value, this should be a DID with a key type suitable for messaging (not a BLS key type)\n        - Include a SubjectDID as the `to` value - this value is only used in the message construction, it should be the same value as the intended recipient.\n\n\n        To send a notification to the Subject DID holder, use the payload with the /messaging/encrypt and /messaging/send endpoints.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePayloadRequest'\n        description: Create a JWM message payload\n      tags:\n        - Revocation\n  /v1/messaging/sign:\n    post:\n      tags:\n        - Messaging\n      summary: Sign a message\n      requestBody:\n        description: Sign message request\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SignMessageRequest'\n      responses:\n        '200':\n          description: Message signed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignMessageResponse'\n        '400':\n          description: Error signing message\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      description: |-\n        Creates a signed message in the form of a JWS (JSON Web Signature) using the a specific Key from the DID (Decentralized Identifier) supplied in the request.\n\n        `didUrl` must be a reference to a key that supports signing. \n        Use the `authentication` key value from the DID Document.\n\n        ```\n        {\n          \"didDocument\": {\n            \"@context\": \"https://w3.org/ns/did/v1\",\n            \"id\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\",\n            \"authentication\": [\n              \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5#z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n            ]\n          }}\n        ```\n\n        #### Returns\n\n        A JWS in compact serialization form signed by the did supplied in the request\n      operationId: signMessage\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/messaging/sign \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"didUrl\":\"did:example:12344#1\", \"payload\": { \"msg\": \"this is a payload\"}}'\n  /v1/messaging/verify:\n    post:\n      tags:\n        - Messaging\n      summary: Verify a message\n      requestBody:\n        description: JWS to verify\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyRequest'\n            examples:\n              Request:\n                value:\n                  jws: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n      responses:\n        '200':\n          description: 'Verification has been performed, see response body for result'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyMessageResponse'\n              examples:\n                Verified:\n                  value:\n                    payload: payload\n                    didUrl: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    did: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    verified: true\n                Verified false:\n                  value:\n                    payload: payload\n                    didUrl: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE#z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    did: 'did:key:z6Mkqh5teM4EiYkBVNPJiYhwMJ9D9MqdAi2RoNYGJspKdpWE'\n                    verified: false\n        '400':\n          description: Invalid JWS\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Verification failed:\n                  value:\n                    code: BadRequest\n                    message: Verification failed\n      description: |-\n        Provide a signed payload in the form of a JWS (JSON Web Signature) that has been signed by a DID (Decentralized Identifier) and get a response indicating if the signature verification was successful and the DID that was used to originally sign the payload.\n\n        One use case for verifying a JWS with a DID is when the Mobile Wallet App sends a Request Object to an OpenID Provider as part of the Authorization Code Flow (as per https://openid.net/specs/openid-connect-core-1_0-final.html#RequestObject). The Request Object is wrapped in a JWS with a signature that is generated from the Subject DID on the mobile app. Therefore verifying the JWS proves that the mobile app has access to the private key of the Subject DID.\n\n        #### Returns\n\n        Indicates if the JWS payload was untampered and that the signature is valid by verifying that the kid in the JWS header is the same as the `iss` value in the Request Object, which could for instance be the Subject DID.\n        The DID used is returned as both the full `didUrl` including fragment pointer to the DID Document and the `did` which can be used for Credential creation.\n      operationId: verifyJws\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/messaging/verify \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"jws\":\"eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa3FoNXRlTTRFaVlrQlZOUEppWWh3TUo5RDlNcWRBaTJSb05ZR0pzcEtkcFdFI3o2TWtxaDV0ZU00RWlZa0JWTlBKaVlod01KOUQ5TXFkQWkyUm9OWUdKc3BLZHBXRSJ9.cGF5bG9hZA.ShzO4OlV3Db1Y3KUK5ww4PHB_wW2WF8LxE-pHUkbqDX3LUobaC9DF_72cJd8F3nRQCD8sRRXXoHMHuamB4_ZDg\"}'\n  /v1/messaging/encrypt:\n    post:\n      tags:\n        - Messaging\n      summary: Encrypt a message\n      operationId: encryptMessage\n      requestBody:\n        description: Encryption params\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                senderDidUrl:\n                  type: string\n                recipientDidUrls:\n                  type: array\n                  items:\n                    type: string\n                payload:\n                  type: object\n              required:\n                - senderDidUrl\n                - recipientDidUrls\n                - payload\n            examples:\n              Encrypt message:\n                value:\n                  senderDidUrl: 'did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy'\n                  recipientDidUrls:\n                    - 'did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d'\n                    - 'did:key:z6MkgxxdrThaRd7HbeAA4pYEwAgKT6ZXy2aNTcPkmeF1yWHN'\n                  payload:\n                    id: 731961f2-bdc3-4f1e-8d59-cc308fd60ec8\n                    type: 'https://mattr.global/schemas/verifiable-credential/offer/OidcCredentialProvider'\n                    from: 'did:key:z6MkndAHigYrXNpape7jgaC7jHiWwxzB3chuKUGXJg2b5RSj'\n                    created_time: '1616466734'\n                    body:\n                      uri: 'openid://discovery?issuer=https://tenant.vii.mattr.global/ext/oidc/v1/issuers/0dceeddd-f717-4bf2-b520-b3ddcd104a60'\n      responses:\n        '200':\n          description: Message encrypted\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  jwe:\n                    type: object\n                    properties:\n                      protected:\n                        type: string\n                        minLength: 1\n                      recipients:\n                        type: array\n                        uniqueItems: true\n                        minItems: 1\n                        items:\n                          required:\n                            - encryption_key\n                          properties:\n                            header:\n                              type: object\n                              properties:\n                                alg:\n                                  type: string\n                                  minLength: 1\n                                kid:\n                                  type: string\n                                  minLength: 1\n                                epk:\n                                  type: object\n                                  properties:\n                                    kty:\n                                      type: string\n                                      minLength: 1\n                                    crv:\n                                      type: string\n                                      minLength: 1\n                                    x:\n                                      type: string\n                                      minLength: 1\n                                  required:\n                                    - kty\n                                    - crv\n                                    - x\n                                skid:\n                                  type: string\n                                  minLength: 1\n                              required:\n                                - alg\n                                - kid\n                                - epk\n                                - skid\n                            encryption_key:\n                              type: string\n                              minLength: 1\n                      ciphertext:\n                        type: string\n                        minLength: 1\n                      iv:\n                        type: string\n                        minLength: 1\n                      tag:\n                        type: string\n                        minLength: 1\n                    required:\n                      - protected\n                      - recipients\n                      - ciphertext\n                      - iv\n                      - tag\n                required:\n                  - jwe\n              examples:\n                Encrypted message:\n                  value:\n                    jwe:\n                      protected: eyJhbGciOiJYQzIwUCJ9\n                      recipients:\n                        - header:\n                            alg: ECDH-1PU+A256KW\n                            kid: 'did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d#z6LSsvqSJkBvVEsDC8cxMHuQ3sKoLRMXB1MdtoLrMUq6A8Rg'\n                            epk:\n                              kty: OKP\n                              crv: x25519\n                              x: JOLnYaD7L-Rszz7fczPhn6MkNre25PUsztzB1RHoz14\n                            skid: 'did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v#z6LScyz3YLToyoKwZE6Tfq65hgZUkZdHrC4ZqohcUH9X6Twx'\n                          encryption_key: ag5iKzjJOth9Wa68dCVKJW_vnO_Ga0zSJgQp5rIUg69HCzIjuNYhDg\n                        - header:\n                            alg: ECDH-1PU+A256KW\n                            kid: 'did:key:z6MkgxxdrThaRd7HbeAA4pYEwAgKT6ZXy2aNTcPkmeF1yWHN#z6LSgDiT1CkducmcSPaq9E1Uj1qdSXBjsUNqqLQLrUu8EHWd'\n                            epk:\n                              kty: OKP\n                              crv: x25519\n                              x: gDYW7rhG3cBqFp9trFETtlut6QJxYVVSoVWL7eN1bzE\n                            skid: 'did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v#z6LScyz3YLToyoKwZE6Tfq65hgZUkZdHrC4ZqohcUH9X6Twx'\n                          encryption_key: F5R5ZW7Yk7_iWT5kUWqv3w_tLI7V86tLRthjy_SSbGQ2pFyXKni_gA\n                      ciphertext: xpW-D6sDPpWc_jk87nEyxPX7JQV8_OZpaQft7ySQ5XmNhoj-lQyDkXDncOCyhB7yMSdZrRBNQjKxlEbpY_WLk1hBoWfsTeszVSAuFbX_VKUSJ7GR6rcnWGVNgDfKS8GsyC_owtswXatkF_65_mzFOygctkUmd2eI5bcpQpWjhw2vqnvnWkb7l2J27aWFF_c9cu52dB559j8lwLYyYC9oSMgV5piB6ppfrWBGo_DigjxvJcAYcjFYqFcT6A1nphPhwVTQ2HNfJodbQoseHub8UQdG4qAOcggq5DI84tbqor1SU9rdPH03jPkLgoO_aeXyJg5meITXoFSiu_tRfvf8QQ6vKq6pkTTXs8zKXcBCGhGIyKBNBG4R4RIY1UffTMnJQQQGBble3P06pGOnsnSop0BtygelB9M0ZEwnAUSAQqN1RR4AQwWcn9nH6hHEu1pMhSvhCuFNAPWS-hg24JGGw8Xe3EEZlLH0PM8qpUAfksPq\n                      iv: FJq5zKvuPiUQIdRcMtiChHCJByuY8XK9\n                      tag: u8kT0VAAtTswjGXxNpuX0g==\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Sender DID not found:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: Resource Not Found\n                        param: senderDidUrl\n                        value: 'did:key:z6MkopLiuMudqeRm1KvQ24jyUfn6pciePNomKqpsiMgeg4nT#z6LSmWEcPwNbxCgbuSMGTz1Gddnf9MsVSMJCfgPtksgThLvi'\n      description: |\n        Encrypts a payload using a JWM format.\n\n        The `senderDidUrl` must be a reference to a key that supports key agreement. \n        Use the `id` value from the `keyAgreement` list in the DID Document.\n\n        ```\n        \"keyAgreement\": [\n                {\n                  \"id\": \"did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy\",\n                  \"type\": \"X25519KeyAgreementKey2019\",\n                  \"controller\": \"did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua\",\n                  \"publicKeyBase58\": \"9eZxm1JBe5wjK2oWzPthGQxD4tcinm5dEoJiEyHD71rD\"\n                  }\n              ]\n        ```\n\n        ### Returns\n  /v1/messaging/decrypt:\n    post:\n      tags:\n        - Messaging\n      summary: Decrypt a message\n      operationId: decryptMessage\n      requestBody:\n        description: Decryption params\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                jwe:\n                  type: string\n              required:\n                - jwe\n      responses:\n        '200':\n          description: Message Decrypted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DecryptMessageResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Recipient DID not found:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n      description: Decrypt a message where the tenant manages the Keys for the `recipientDidUrl`\n  /v1/messaging/send:\n    post:\n      summary: Send a message\n      operationId: sendMessage\n      description: |-\n        Send an ecrypted JWM format DIDComm message to a DID service endpoint.\n\n        In order to successfully route messages to their intended recipients the endpoint will resolve a public DID Document and look-up the service endpoint.\n\n        This endpoint only accepts Encrypted JWM payloads to ensure that messages sent for recipients are encrypted-at-rest whilst in messaging inboxes. \n        The JWM should be encrypted for the recipient based on a key available in the DID Document.\n      tags:\n        - Messaging\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendMessageRequest'\n            examples:\n              Send message:\n                value:\n                  to: 'did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d'\n                  message:\n                    protected: eyJhbGciOiJYQzIwUCJ9\n                    recipients:\n                      - header:\n                          alg: ECDH-1PU+A256KW\n                          kid: 'did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d#z6LSsvqSJkBvVEsDC8cxMHuQ3sKoLRMXB1MdtoLrMUq6A8Rg'\n                          epk:\n                            kty: OKP\n                            crv: x25519\n                            x: kYsO02jWHATTJel6OpePqlkdDmKlE5VOr18UblgL8W0\n                          skid: 'did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy'\n                        encryption_key: n1VUf5SQdSFNtb8DHzYfJJ_lFhJcGDAPJWG8Y1W3d2qYyPzyxMhyaA\n                      - header:\n                          alg: ECDH-1PU+A256KW\n                          kid: 'did:key:z6MkgxxdrThaRd7HbeAA4pYEwAgKT6ZXy2aNTcPkmeF1yWHN#z6LSgDiT1CkducmcSPaq9E1Uj1qdSXBjsUNqqLQLrUu8EHWd'\n                          epk:\n                            kty: OKP\n                            crv: x25519\n                            x: P3jcIMPGK8thxyHxUsWB5fEsLnltJqRDWMNywtexk24\n                          skid: 'did:key:z6Mko4PvuwKzmjtaKTEV6ZhMSYqX5myTSe3L3Md4feiwCoua#z6LSkKk8HK73jYfUQRBHX3Qeb1Agv39qVNFn7n2PjRvjpPcy'\n                        encryption_key: 5ZOTqwj8NredkXEOp4ZDLL1ohRQqNTS508BTkLlUVCkDoYvizCIdrg\n                    ciphertext: Dl4zBqMeEDwcnyyc17nYvSQ048fcsha_Lm0dfer1nqfo5y8oHvD2VGNTp_lawNJMWCzQF3NDZxxKFz__wTUeHCqisCE_DWbjo_W-R3avzW9S-JFajv9NRtjlfd5yp-1TtD2N5d-8oTtMGdAxq3dftN2Od1xRe4stubJBebl3nf8-lG99DIVGdL8Y-D98kFDxnMxgCKn4RXyHnMowFWlhQCooLeYqo8aWjqVFkzuJzn-p47W7rV9BCuoVThhVuNkjQm_dhBrqu0QMpjJucz7OvOHp0mojdYNKwvWT6dfOVNXetMlKjWCGtCTNFaDTGLc4agdcTjAlaF1iedcVXDOLqVvEugXWGlusE3a68y6gmPnqHjXR6CsEfPwkb5hKKtsyrh1eHu_9UUang5o6N76mummVw4UZkDF6tP1PVGPvyctz82tthnOcjO5mZQG41xfMEMNxWtF8P8wCh4LotpdexXtYigzBgkI1Qoa_FK1czYWAUovysAJCTOZtmg==\n                    iv: jSd3E-ElCHE-QhSDxrQ-Jv4eQhkxOj0s\n                    tag: dbDolGVDdvYsYdn-vVrICw==\n        description: ''\n      responses:\n        '200':\n          description: Message sent\n        '400':\n          description: Error sending message\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /oidc/v1/issuers:\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    post:\n      operationId: createOidcIssuer\n      tags:\n        - OIDC Issuers\n      summary: Create an OIDC Issuer\n      description: |\n        Create a new OIDC Credential Issuer for this tenant.\n\n        The Credential information defines a descriptive name for the Credential to be issued as well as the `issuerDid` and `type` that the issued Credential will contain. The `context` is used to define the JSON-LD schema for the JSON-LD terms.\n\n        The Federated Provider details are used to obtain the values for the new credential. The OIDC provider will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are provided in the `url`, `scope`, `clientId` and `clientSecret` attributes. If no `scope` is provided, the default value `openid profile email` will be used.\n\n        \u003e The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported`.\n\n        Claim mappings are used to map OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential. The defined claims are also used for display purposes in a client, like a Mobile Wallet.\n\n        **ZKP-enabled BBS+ credential:**\n        If you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n        \u003e ZKP-enabled BBS+ credentials are an experimental feature, credentials issued to the mobile wallet will not be validated at this time.\n      requestBody:\n        description: The issuer payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerRequest'\n      responses:\n        '201':\n          description: Issuer created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: Invalid value\n                        param: url\n      x-codeSamples:\n        - lang: curl\n          source: \"curl --request POST \\\\\\n  --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers \\\\\\n  --header 'Accept: application/json' \\\\\\n  --header 'Content-Type: application/json' \\\\\\n  --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\\\\n  --data '{\\\"credential\\\": {\\n             \\\"issuerDid\\\": \\\"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\\\",\\n          \\t \\\"name\\\": \\\"University Attendance Credential\\\",\\n          \\t \\\"context\\\": [\\n          \\t   \\\"https://schema.org\\\"\\n          \\t ],\\n          \\t \\\"type\\\": [\\n          \\t   \\\"AlumniCredential\\\"\\n          \\t ]\\n           },\\n           \\\"federatedProvider\\\": {\\n          \\t \\\"url\\\": \\\"https://example-university.au.auth0.com\\\",\\n          \\t \\\"scope\\\": [\\n          \\t   \\\"openid\\\",\\n          \\t   \\\"profile\\\",\\n          \\t   \\\"email\\\"\\n          \\t ],\\n          \\t \\\"clientId\\\": \\\"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\\\",\\n          \\t \\\"clientSecret\\\": \\\"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\\\"\\n           },\\n           \\\"claimMappings\\\": [\\n          \\t {\\n          \\t   \\\"jsonLdTerm\\\": \\\"alumniOf\\\",\\n          \\t   \\\"oidcClaim\\\": \\\"alumni_of\\\"\\n          \\t }\\n           ]\\n          }'\\n\"\n    get:\n      operationId: getOidcIssuers\n      tags:\n        - OIDC Issuers\n      summary: Retrieve list of OIDC Issuers\n      description: |\n        Returns a list of all OIDC Issuers in the Tenant.\n      parameters:\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned issuer entries, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of issuer entries\n      responses:\n        '200':\n          description: Returns a page of issuers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_GetOidcIssuersResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: query\n                        msg: Failed to decode base64url data\n                        param: cursor\n                        value: abc\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/issuers/{id}':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - $ref: '#/components/parameters/IssuerId'\n    get:\n      operationId: getOidcIssuer\n      tags:\n        - OIDC Issuers\n      summary: Retrieve an OIDC Issuer\n      description: Retrieve an OIDC Issuer by providing an Issuer ID.\n      responses:\n        '200':\n          description: Retrieved Issuer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: issuerId\n                        value: abc\n        '404':\n          description: The Issuer is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Issuer not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: issuerId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      operationId: updateOidcIssuer\n      tags:\n        - OIDC Issuers\n      summary: Update an OIDC Issuer\n      description: |\n        Update an OIDC Credential Issuer.\n\n        The `issuerDid` is the Issuer DID that will be used in the issued Credential.\n\n        The `credentialName` describes the Credential and `credentialTypes` defines the Credential Types for the issued Credential.\n\n        In order for the tenant to issue a new credential, the OIDC bridge will federate the authentication request to the OpenID Provider of the Issuer. The details of the Issuer OpenID Provider are provided in the `federatedProviderUrl`, `federatedProviderScope`, `federatedProviderClientId` and `federatedProviderClientSecret` attributes. If no `federatedProviderScope` is provided, the default value `openid profile email` will be used.\n\n        \u003e The `/.well-known/openid-configuration` endpoint of the federated provider needs to contain values for the `authorization_endpoint`, `token_endpoint` and `scopes_supported` which needs to contain `openid` and `profile`.\n\n        Claim mappings are used to map OpenID Connect terms used by federated providers and clients to JSON-LD terms used in a Credential. The `jsonLdContext` is used to define the JSON-LD schema for the JSON-LD terms. The defined claims are also used for display purposes in a client, like a Mobile Wallet.\n\n        **ZKP-enabled BBS+ credential:**\n        If you wish to offer a ZKP-enabled Verifiable Credential, the provided issuer DID must be a did:key with a key type of bls12381g2. The platform will automatically detect this capability and issue a ZKP-enabled BBS+ credential.\n\n        \u003e ZKP-enabled BBS+ credentials are an experimental feature, credentials issued to the mobile wallet will not be validated at this time.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerRequest'\n        description: Update an Issuer\n      responses:\n        '200':\n          description: Successfully updated the Issuer\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: Invalid value\n                        param: url\n        '404':\n          description: The Issuer is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Issuer not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: issuerId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: \"curl --request PUT \\\\\\n  --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599 \\\\\\n  --header 'Accept: application/json' \\\\\\n  --header 'Content-Type: application/json' \\\\\\n  --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\\\\n  --data '{\\\"credential\\\": {\\n             \\\"issuerDid\\\": \\\"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\\\",\\n          \\t \\\"name\\\": \\\"University Attendance Credential\\\",\\n          \\t \\\"context\\\": [\\n          \\t   \\\"https://schema.org\\\"\\n          \\t ],\\n          \\t \\\"type\\\": [\\n          \\t   \\\"AlumniCredential\\\"\\n          \\t ]\\n           },\\n           \\\"federatedProvider\\\": {\\n          \\t \\\"url\\\": \\\"https://example-university.au.auth0.com\\\",\\n          \\t \\\"scope\\\": [\\n          \\t   \\\"openid\\\",\\n          \\t   \\\"profile\\\",\\n          \\t   \\\"email\\\"\\n          \\t ],\\n          \\t \\\"clientId\\\": \\\"vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\\\",\\n          \\t \\\"clientSecret\\\": \\\"QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\\\"\\n           },\\n           \\\"claimMappings\\\": [\\n          \\t {\\n          \\t   \\\"jsonLdTerm\\\": \\\"alumniOf\\\",\\n          \\t   \\\"oidcClaim\\\": \\\"alumni_of\\\"\\n          \\t }\\n           ]\\n          }'\\n\"\n    delete:\n      operationId: deleteOidcIssuer\n      tags:\n        - OIDC Issuers\n      summary: Remove an OIDC Issuer\n      description: |\n        Removes an OIDC Issuer by providing an Issuer ID.\n      responses:\n        '204':\n          description: Issuer deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: issuerId\n                        value: abc\n        '404':\n          description: The Issuer is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Issuer not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: issuerId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/issuers/{id}/clients':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - $ref: '#/components/parameters/IssuerId'\n    post:\n      operationId: createOidcIssuerClient\n      tags:\n        - OIDC Issuer Client\n      summary: Create a Client\n      description: |\n        Issuer clients are required to be created in the system for custom digital wallets and VC Issue flows that are enbled through the OIDC Credential Provider.\n\n        The Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n        \u003e When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n      requestBody:\n        description: The client payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientRequest'\n      responses:\n        '201':\n          description: Client created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: redirectUris is not array of strings\n                        param: redirectUris\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"name\": \"OIDC Client\",\n                       \"redirectUris\": [\n                         \"https://example.com/callback\"\n                       ],\n                       \"responseTypes\": [\n                         \"code\"\n                       ],\n                       \"grantTypes\": [\n                         \"authorization_code\"\n                       ],\n                       \"tokenEndpointAuthMethod\": \"client_secret_post\",\n                       \"idTokenSignedResponseAlg\": \"ES256\",\n                       \"applicationType\": \"web\"\n                      }'\n    get:\n      operationId: getOidcIssuerClients\n      tags:\n        - OIDC Issuer Client\n      summary: Retrieve list of Clients\n      description: |\n        Returns a list of all OIDC Issuer Clients in the Tenant.\n      parameters:\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned client entries, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of client entries\n      responses:\n        '200':\n          description: Returns a page of clients\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_GetOidcIssuerClientsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: query\n                        msg: Failed to decode base64url data\n                        param: cursor\n                        value: abc\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/issuers/{id}/clients/{clientId}':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - $ref: '#/components/parameters/IssuerId'\n      - schema:\n          type: string\n          format: uuid\n          example: 6a860559-21a3-4b57-9a2b-aaea3ba4683d\n        name: clientId\n        in: path\n        required: true\n        description: Client ID\n    get:\n      operationId: getOidcIssuerClient\n      tags:\n        - OIDC Issuer Client\n      summary: Retrieve a Client\n      description: Retrieve an OIDC Issuer Client by providing a Client ID.\n      responses:\n        '200':\n          description: Retrieved Client\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: clientId\n                        value: abc\n        '404':\n          description: The Client is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Client not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: clientId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients/6a860559-21a3-4b57-9a2b-aaea3ba4683d \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      operationId: updateOidcIssuerClient\n      tags:\n        - OIDC Issuer Client\n      summary: Update a Client\n      description: |\n        Update an OIDC Issuer Client.\n\n        The Client endpoint accepts OpenID Connect standard registration parameters.\n\n        \u003e When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientRequest'\n        description: Update a client\n      responses:\n        '200':\n          description: Successfully updated a Client\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: redirectUris is not array of strings\n                        param: redirectUris\n        '404':\n          description: The Client is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Client not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: clientId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients/6a860559-21a3-4b57-9a2b-aaea3ba4683d \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"name\": \"OIDC Client\",\n                       \"redirectUris\": [\n                         \"https://example.com/callback\"\n                       ],\n                       \"responseTypes\": [\n                         \"code\"\n                       ],\n                       \"grantTypes\": [\n                         \"authorization_code\"\n                       ],\n                       \"tokenEndpointAuthMethod\": \"client_secret_post\",\n                       \"idTokenSignedResponseAlg\": \"ES256\",\n                       \"applicationType\": \"web\"\n                      }'\n    delete:\n      operationId: deleteOidcIssuerClient\n      tags:\n        - OIDC Issuer Client\n      summary: Remove a Client\n      description: |\n        Removes an OIDC Issuer Client by providing a Client ID.\n      responses:\n        '204':\n          description: Client deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: clientId\n                        value: abc\n        '404':\n          description: The Client is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Client not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: clientId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients/6a860559-21a3-4b57-9a2b-aaea3ba4683d \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/issuers/{id}/.well-known/openid-configuration':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: 983c0a86-204f-4431-9371-f5a22e506599\n        name: id\n        in: path\n        required: true\n        description: Issuer ID\n    get:\n      operationId: issuerWellKnownOidcConfig\n      security: []\n      tags:\n        - OIDC Issuer Auth\n      summary: Well Known OpenId Configuration\n      description: |\n        The standard OpenID Connect Well Known configuration metadata endpoint.\n\n        This endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n      responses:\n        '200':\n          description: Returns OpenID configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-issuer.v1_OpenIdConfiguration'\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/.well-known/openid-configuration \\\n              --header 'Accept: application/json'\n  '/oidc/v1/issuers/{id}/token':\n    post:\n      summary: IssuerToken\n      operationId: issuertoken\n      description: Internal only\n      tags:\n        - Issuer Token\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n    parameters:\n      - $ref: '#/components/parameters/IssuerId'\n  '/oidc/v1/issuers/{id}/authorize':\n    get:\n      summary: IssuerAuth\n      operationId: issuerAuth\n      description: Internal only\n      tags:\n        - Issuer Auth\n      responses:\n        '200':\n          description: OK\n    parameters:\n      - $ref: '#/components/parameters/IssuerId'\n  '/oidc/v1/issuers/{id}/offers':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - $ref: '#/components/parameters/IssuerId'\n    post:\n      summary: Create an OpenId credential offer payload\n      operationId: CreateOidcOfferPayload\n      tags:\n        - OIDC Issuers\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: object\n                properties:\n                  id:\n                    type: string\n                    minLength: 1\n                  type:\n                    type: string\n                    minLength: 1\n                  to:\n                    type: array\n                    items:\n                      required:\n                        - string\n                      properties: {}\n                  from:\n                    type: string\n                    minLength: 1\n                  created_time:\n                    type: number\n                  body:\n                    type: object\n                    properties:\n                      uri:\n                        type: string\n                        minLength: 1\n                    required:\n                      - uri\n                required:\n                  - id\n                  - type\n                  - to\n                  - from\n                  - created_time\n                  - body\n              examples:\n                Message payload:\n                  value:\n                    id: 733d1de2-9286-447e-a701-29b1292089d0\n                    type: 'https://mattr.global/schemas/verifiable-credential/offer/OidcCredentialProvider'\n                    to:\n                      - 'did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d'\n                    from: 'did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v'\n                    created_time: 1616052936783\n                    body:\n                      uri: 'openid://discovery?issuer=https://tenant.vii.mattr.global/ext/oidc/v1/issuers/58ab2731-16a3-4c4c-a3b2-89fd242d1685'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePayloadRequest'\n            examples:\n              Create payload:\n                value:\n                  from: 'did:key:z6MkreuqFq6WrwozTeGKuUDz8bniTFRNAg8f3ZB862YdLp7v'\n                  to:\n                    - 'did:key:z6MkgmEkNM32vyFeMXcQA7AfQDznu47qHCZpy2AYH2Dtdu1d'\n        description: Create a message payload for an Offer\n      description: |-\n        Create a payload that can form a message in the JWM format that can be used in sending notifications to subjects to start an OIDC Issuer credential offer flow.\n\n        - Use a DID setup on the tenant as the `from` value, this should be a DID with a key type suitable for messaging (not a BLS key type)\n        - Include a SubjectDID as the `to` value - this value is only used in the message construction, it should be the same value as the intended recipient.\n\n        To send a notification to the Subject DID holder, use the payload with the /messaging/encrypt and /messaging/send endpoints.\n  /oidc/v1/verifiers:\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    post:\n      operationId: createOidcVerifier\n      tags:\n        - OIDC Verifiers\n      summary: Create an OIDC Verifier\n      description: |\n        Create a new OIDC Credential Verifier for this tenant.\n\n        The `verifierDid` is the Verifier DID that will be used to securely send the Credential to.\n\n        The `presentationTemplateId` references the Presentation Template that defines what Credential is being requested for presentation.\n\n        Claim mappings are used to map JSON-LD terms used in a Credential to OpenID Connect terms used by clients.\n      requestBody:\n        description: The verifier payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierRequest'\n      responses:\n        '201':\n          description: Verifier created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: Invalid value\n                        param: presentationTemplateId\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n                       \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n                       \"claimMappings\": [\n                         {\n                           \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n                           \"oidcClaim\": \"alumni_of\"\n                         }\n                       ]\n                      }'\n    get:\n      operationId: getOidcVerifiers\n      tags:\n        - OIDC Verifiers\n      summary: Retrieve list of OIDC Verifiers\n      description: |\n        Returns a list of all OIDC Verifiers in the Tenant.\n      parameters:\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned verifier entries, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of verifier entries\n      responses:\n        '200':\n          description: Returns a page of Verifiers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_GetOidcVerifiersResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: query\n                        msg: Failed to decode base64url data\n                        param: cursor\n                        value: abc\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/verifiers/{id}':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - $ref: '#/components/parameters/VerifierId'\n    get:\n      operationId: getOidcVerifier\n      tags:\n        - OIDC Verifiers\n      summary: Retrieve an OIDC Verifier\n      description: Retrieve an OIDC Verifier by providing a Verifier ID.\n      responses:\n        '200':\n          description: Retrieved Verifier\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: verifierId\n                        value: abc\n        '404':\n          description: The Verifier is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Verifier not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: verifierId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      operationId: updateOidcVerifier\n      tags:\n        - OIDC Verifiers\n      summary: Update an OIDC Verifier\n      description: |\n        Update an OIDC Credential Verifier.\n\n        The `verifierDid` is the Verifier DID that will be used to securely send the Credential to.\n\n        The `presentationTemplateId` references the Presentation Template that defines what Credential is being requested for presentation.\n\n        Claim mappings are used to map JSON-LD terms used in a Credential to OpenID Connect terms used by clients.  The `jsonLdContext` is used to define the JSON-LD schema for the JSON-LD terms.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierRequest'\n        description: Update a verifier\n      responses:\n        '200':\n          description: Successfully updated a Verifier\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: Invalid value\n                        param: presentationTemplateId\n        '404':\n          description: The Verifier is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Verifier not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: verifierId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"verifierDid\": \"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\",\n                       \"presentationTemplateId\": \"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\",\n                       \"claimMappings\": [\n                         {\n                           \"jsonLdFqn\": \"http://schema.org/alumniOf\",\n                           \"oidcClaim\": \"alumni_of\"\n                         }\n                       ]\n                      }'\n    delete:\n      operationId: deleteOidcVerifier\n      tags:\n        - OIDC Verifiers\n      summary: Remove an OIDC Verifier\n      description: |\n        Removes an OIDC Verifier by providing a Verifier ID.\n      responses:\n        '204':\n          description: Verifier deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: verifierId\n                        value: abc\n        '404':\n          description: The Verifier is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Verifier not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: verifierId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/verifiers/{id}/clients':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: 41458e5a-9092-40b7-9a26-d4eb43c5792f\n        name: id\n        in: path\n        required: true\n        description: Verifier ID\n    post:\n      operationId: createOidcVerifierClient\n      tags:\n        - OIDC Verifier Client\n      summary: Create a Client\n      description: |\n        Relying party clients are required to be created in the system for Authorization and VC Verify flows that are enbled through OIDC.\n\n        The Create Client endpoint accepts OpenID Connect standard registration parameters.\n\n        \u003e When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n      requestBody:\n        description: The client payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientRequest'\n      responses:\n        '201':\n          description: Client created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: redirectUris is not array of strings\n                        param: redirectUris\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/clients \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"name\": \"OIDC Client\",\n                       \"redirectUris\": [\n                         \"https://example.com/callback\"\n                       ],\n                       \"responseTypes\": [\n                         \"code\"\n                       ],\n                       \"grantTypes\": [\n                         \"authorization_code\"\n                       ],\n                       \"tokenEndpointAuthMethod\": \"client_secret_post\",\n                       \"idTokenSignedResponseAlg\": \"ES256\",\n                       \"applicationType\": \"web\",\n                       \"logoUri\": \"https://example.com/logo.png\"\n                      }'\n    get:\n      operationId: getOidcVerifierClients\n      tags:\n        - OIDC Verifier Client\n      summary: Retrieve list of Clients\n      description: |\n        Returns a list of all OIDC Verifier Clients in the Tenant.\n      parameters:\n        - schema:\n            type: number\n            example: 2\n            maximum: 1000\n            minimum: 1\n          in: query\n          name: limit\n          description: 'Range size of returned client entries, default 100'\n        - schema:\n            type: string\n            example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n          in: query\n          name: cursor\n          description: Starting point for the range of client entries\n      responses:\n        '200':\n          description: Returns a page of clients\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_GetOidcVerifierClientsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: query\n                        msg: Failed to decode base64url data\n                        param: cursor\n                        value: abc\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/clients \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/verifiers/{id}/clients/{clientId}':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - $ref: '#/components/parameters/VerifierId'\n      - schema:\n          type: string\n          format: uuid\n          example: da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d\n        name: clientId\n        in: path\n        required: true\n        description: Client ID\n    get:\n      operationId: getOidcVerifierClient\n      tags:\n        - OIDC Verifier Client\n      summary: Retrieve a Client\n      description: Retrieve an OIDC Verifier Client by providing a Client ID.\n      responses:\n        '200':\n          description: Retrieved Client\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: clientId\n                        value: abc\n        '404':\n          description: The Client is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Client not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: clientId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/clients/da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      operationId: updateOidcVerifierClient\n      tags:\n        - OIDC Verifier Client\n      summary: Update a Client\n      description: |\n        Update an OIDC Verifier Client.\n\n        The Client endpoint accepts OpenID Connect standard registration parameters.\n\n        \u003e When dealing with personal identity information it is strongly recommended to follow the Authorization Code Flow which ensures sensitive data is transmitted via the `/token` endpoint back-channel.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientRequest'\n        description: Update a client\n      responses:\n        '200':\n          description: Successfully updated a Client\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: redirectUris is not array of strings\n                        param: redirectUris\n        '404':\n          description: The Client is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Client not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: clientId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request PUT \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/clients/da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"name\": \"OIDC Client\",\n                       \"redirectUris\": [\n                         \"https://example.com/callback\"\n                       ],\n                       \"responseTypes\": [\n                         \"code\"\n                       ],\n                       \"grantTypes\": [\n                         \"authorization_code\"\n                       ],\n                       \"tokenEndpointAuthMethod\": \"client_secret_post\",\n                       \"idTokenSignedResponseAlg\": \"ES256\",\n                       \"applicationType\": \"web\",\n                       \"logoUri\": \"https://example.com/logo.png\"\n                      }'\n    delete:\n      operationId: deleteOidcVerifierClient\n      tags:\n        - OIDC Verifier Client\n      summary: Remove a Client\n      description: |\n        Removes an OIDC Verifier Client by providing a Client ID.\n      responses:\n        '204':\n          description: Client deleted\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Invalid value\n                        param: clientId\n                        value: abc\n        '404':\n          description: The Client is not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Client not found:\n                  value:\n                    code: NotFound\n                    message: Validation Error\n                    details:\n                      - location: params\n                        msg: Resource Not Found\n                        param: clientId\n                        value: a368cfb4-9537-4439-acc6-ce3cf2287eb7\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/clients/da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/oidc/v1/verifiers/{id}/.well-known/openid-configuration':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n          example: 41458e5a-9092-40b7-9a26-d4eb43c5792f\n        name: id\n        in: path\n        required: true\n        description: Verifier ID\n    get:\n      operationId: verifierWellKnownOidcConfig\n      security: []\n      tags:\n        - OIDC Verifier Auth\n      summary: Well Known OpenId Configuration\n      description: |\n        The standard OpenID Connect Well Known configuration metadata endpoint.\n\n        This endpoint is unprotected, public facing and can be used by any party wishing to discover the OpenID Connect capabilities.\n      responses:\n        '200':\n          description: Returns OpenID configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OpenIdConfiguration'\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/.well-known/openid-configuration \\\n              --header 'Accept: application/json'\n  '/oidc/v1/verifiers/{id}/token':\n    servers:\n      - url: 'https://tenant.vii.mattr.global/ext'\n    post:\n      operationId: verifierRetrieveToken\n      tags:\n        - OIDC Verifier Auth\n      summary: Retrieve Token\n      description: |-\n        \u003e OIDC Token endpoint\n\n        The OpenId Connect `/token` endpoint is used to obtain the `access_token` and `id_token` by presenting a valid authorization `code`\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TokenRequest'\n        description: Token endpoint request\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/ext/oidc/v1/verifiers/41458e5a-9092-40b7-9a26-d4eb43c5792f/token \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/x-www-form-urlencoded' \\\n              --data 'client_id=G1s1EPMml4L0zFd63drft' \\\n              --data 'client_secret=REPLACE_CLIENT_SECRET' \\\n              --data 'grant_type=authorization_code' \\\n              --data 'code=REPLACE_CODE' \\\n              --data 'redirect_uri=https://example.com'\n    parameters:\n      - $ref: '#/components/parameters/VerifierId'\n  /v1/presentations/templates:\n    post:\n      operationId: createPresTemplate\n      tags:\n        - Presentations\n      summary: Create a presentation template\n      description: |-\n        A Presentation Request Template defines which credentials are required for presentation. This is used to create the actual Presentation Request, which is used by the Mobile Wallet to select which credential it should display to the Holder, asking for confirmation to be used in the Presentation to be sent.\n\n        ### Creating the payload \n        The `domain` value must always match the domain of the tenant being used.\n\n        The `name` value is a convenience attribute for quickly determining the intended purpose of a created template.\n\n        The Presentation Request `query` follows the  [Verifiable Presentation Request Specification](https://w3c-ccg.github.io/vp-request-spec/).\n\n        The following query methods have been enabled:\n\n        - Query by Example\n        - Query by Frame\n        - DID Auth\n\n        Query can accept an array of types, which makes is possible to construct complex presentation requests from the template, however creating a valid Presentation Template does not ensure that logically valid Presentation Request is created or that a credential holder would be able to satisfy the request.\n\n        ### Query by Example\n        This is a basic form of requesting credential information, it is possible to limit the request based on:\n        - Credential Type - based on the `type` of the credential\n        - Specific Trusted Issuer DIDs - an array of DIDs that the credential must have been issued by one of.\n\n        ### Query by Frame\n        Used primary for requesting specific claims from ZKP-enabled credentials, only the claims requested in the frame will be derived and sent in the presentation.\n        - Credential Type - If an array should match the exact `type` used in the Credential otherwise a string is required to be `VerifiableCredential`.\n        - CredentialSubject - request specific claims from a credential subject.\n        - Specific Trusted Issuer DIDs - an array of DIDs that the credential must have been issued by one of, ensure this DID is of a BLS key type that has issued a ZKP-enabled credential.\n\n        ### DID Auth\n        The type of Template will result in a DID Auth flow resulting in just the Subject DID from the holder to be provided in the response to the Presentation Request.\n        - DIDAuth\n\n        ## Returns\n        On Success, the response from the endpoint always include the Presentation Template ID, this UUID is required in OIDC Bridge Verifier instance setup and using the Verify using a Callback method. The Presentation Request endpoint uses this ID to determine the exact type of request message to create.\n      requestBody:\n        description: The template\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Presentations.v1_CreatePresentationTemplate'\n            examples:\n              Query by Example:\n                value:\n                  domain: tenant.vii.mattr.global\n                  name: alumni_credential_request\n                  query:\n                    - type: QueryByExample\n                      credentialQuery:\n                        - required: true\n                          reason: We need you to prove your alumni membership.\n                          example:\n                            '@context':\n                              - 'https://schema.org'\n                            type: AlumniCredential\n                            trustedIssuer:\n                              - required: true\n                                issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n              Query by Frame:\n                value:\n                  domain: tenant.vii.mattr.global\n                  name: zkp-certificate-presentation\n                  query:\n                    - type: QueryByFrame\n                      credentialQuery:\n                        - reason: Please provide your educational award and surname from your Certificate\n                          frame:\n                            '@context':\n                              - 'https://www.w3.org/2018/credentials/v1'\n                              - 'https://w3id.org/vc-revocation-list-2020/v1'\n                              - 'https://schema.org'\n                            type:\n                              - VerifiableCredential\n                              - AlumniCredential\n                            credentialSubject:\n                              '@explicit': true\n                              educationalCredentialAwarded: {}\n                              familyName: {}\n                          trustedIssuer:\n                            - issuer: 'did:key:zUC7KmMGXt7fs9URk9EDqWLfpCjVTtfFMexViLLkPPUfm9j4heqvk9JkLarva3sP54FGjFNLpwc63ZTef2aR2cPssFbyDj75kopYqWL16j7JigA2BAvJcwnaKvKPUybxbroRg1v'\n                              required: true\n                          required: true\n              DID Auth:\n                value:\n                  name: did-auth\n                  domain: tenant.vii.mattr.global\n                  query:\n                    - type: DIDAuth\n      responses:\n        '201':\n          description: Template created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Presentations.v1_PresentationTemplateResponse'\n              examples:\n                Created:\n                  value:\n                    id: 364b6a1b-3600-4927-a6ac-4d66aa6bbac3\n                    domain: tenant.vii.mattr.global\n                    name: alumni_credential_request\n                    query:\n                      - type: QueryByExample\n                        credentialQuery:\n                          - required: true\n                            reason: We need you to prove your alumni membership.\n                            example:\n                              '@context':\n                                - 'https://schema.org'\n                              type: AlumniCredential\n                              trustedIssuer:\n                                - required: true\n                                  issuer: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n        '400':\n          description: 'Bad request, Invalid request body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://tenant.vii.mattr.global/core/v1/presentations/templates \\\n              --header 'Accept: application/json' \\\n              --header 'Content-Type: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\n              --data '{\"domain\": \"tenant.vii.mattr.global\",\n                       \"name\": \"alumni_credential_request\",\n                       \"query\": [\n                        {\n                          \"type\": \"QueryByExample\",\n                          \"credentialQuery\": [\n                            {\n                              \"required\": true,\n                              \"reason\": \"We need you to prove your alumni membership.\",\n                              \"example\": {\n                                \"@context\": [\n                                  \"https://schema.org\"\n                                ],\n                                \"type\": \"AlumniCredential\",\n                                \"trustedIssuer\": [\n                                  {\n                                    \"required\": true,\n                                    \"issuer\": \"did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5\"\n                                  }\n                                ]\n                              }\n                            }\n                          ]\n                        }\n                       ]\n                      }'\n    get:\n      operationId: retrievePresTemplates\n      tags:\n        - Presentations\n      summary: Retrieve a list of presentation templates\n      description: |-\n        Returns a list of all Presentation Templates on the tenant.\n\n        Use the `name` value to determine the intended purpose of the templates.\n      responses:\n        '200':\n          description: All templates\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Presentations.v1_PresentationTemplateArrayResponse'\n      parameters:\n        - $ref: '#/components/parameters/Common_Limit'\n        - $ref: '#/components/parameters/Common_Cursor'\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/presentations/templates \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n  '/v1/presentations/templates/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: Presentation template ID\n        schema:\n          type: string\n    get:\n      operationId: retrievePresTemplate\n      tags:\n        - Presentations\n      summary: Retrieve a presentation template\n      description: Retrive a Presentation Template by providing a template ID\n      responses:\n        '200':\n          description: Template returned\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Presentations.v1_PresentationTemplateResponse'\n        '400':\n          description: Invalid templateId parameter format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request GET \\\n              --url https://tenant.vii.mattr.global/core/v1/presentations/templates/364b6a1b-3600-4927-a6ac-4d66aa6bbac3 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    delete:\n      operationId: removePresTemplate\n      tags:\n        - Presentations\n      summary: Delete presentation template\n      description: Delete a Presentation Template\n      responses:\n        '204':\n          description: Template deleted\n        '400':\n          description: Invalid templateId parameter format\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request DELETE \\\n              --url https://tenant.vii.mattr.global/core/v1/presentations/templates/364b6a1b-3600-4927-a6ac-4d66aa6bbac3 \\\n              --header 'Accept: application/json' \\\n              --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN'\n    put:\n      summary: Update presentation template\n      operationId: updatePresTemplate\n      tags:\n        - Presentations\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Presentations.v1_PresentationTemplateResponse'\n      description: |-\n        Update a Presentation Template using the template `id`.\n\n        Follows the same structure as the Create a Presentation Template endpoint.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Presentations.v1_UpdatePresentationTemplate'\n        description: ''\n  /v1/presentations/requests:\n    post:\n      operationId: createPresRequest\n      tags:\n        - Presentations\n      summary: Create a presentation request\n      description: |\n        Creates a short lived Presentation Request.\n\n        ### Creating the payload\n        A `challenge` can be used to collerate requests\n        The `DID` is used a Verifier DID to prove the authenticity of the Request to holders\n        Any `callbackUrl` provide will be called on receipt of the response to the Presentation Request.\n        If no `expiresTime` is provided, a default of 5 minutes will be used.\n\n        ### Returns\n        The `request` object holds the Presentation Request in the form of a constructed JWM message.\n\n        The `request` needs to be [signed](#operation/signMessage) and conveyed to the holder, using techniques like a QR, deeplink or [encrypted](#operation/encryptMessage) and sent via a [notification message](#operation/sendMessage).\n      requestBody:\n        description: The presentation request payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Presentations.v1_CreatePresentationRequestRequest'\n      responses:\n        '201':\n          description: Presentation Request created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Presentations.v1_CreatePresentationRequestResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Bad Request:\n                  value:\n                    code: BadRequest\n                    message: Validation Error\n                    details:\n                      - location: body\n                        msg: Invalid value\n                        param: callbackUrl\n      x-codeSamples:\n        - lang: curl\n          source: \"curl --request POST \\\\\\n  --url https://tenant.vii.mattr.global/core/v1/presentations/requests \\\\\\n  --header 'Accept: application/json' \\\\\\n  --header 'Content-Type: application/json' \\\\\\n  --header 'Authorization: Bearer REPLACE_ACCESS_TOKEN' \\\\\\n  --data '{\\n          \\t\\\"challenge\\\": \\\"e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60\\\",\\n          \\t\\\"did\\\": \\\"did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq\\\",\\n          \\t\\\"templateId\\\": \\\"364b6a1b-3600-4927-a6ac-4d66aa6bbac3\\\",\\n          \\t\\\"expiresTime\\\": 2594859115000,\\n          \\t\\\"callbackUrl\\\": \\\"https://tenant.vii.mattr.global/core/v1/presentations/response\\\"\\n          }'\\n\"\n  /oauth/token:\n    servers:\n      - url: 'https://auth.mattr.global'\n    post:\n      summary: Create API Auth Token\n      operationId: authToken\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  access_token:\n                    type: string\n                    example: s2dgbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6s2dcaEROemRDf5gbRVEwTTVSVFE0TmtZME9UZzVNVEpDTlVJNFJqRTBPREExTmpZMk1qazFPQSJ9.eyJodHRwOi8vbWF0dHIvdGVuYW50LWlkIjoiZWI5ZTdiMTQtMzY2ZS00NzAxLTg4OTctMTIwZmI5MTQ0YmFjIiwiaXNzIjoiaHR0cHM6Ly9tYXR0ci1wcm9kLmF1LmF1dGgwLmNvbS8iLCJzdWIiOiJSZUhOOTJXNHA0TWVkWmJub1dBczUxRWZxVXQ0VDk2Y0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9wbGF0Zm9ybS5tYXR0ci5nbG9iYWwiLCJpYXQiOjE1OTE4NDk4MTMsImV4cCI6MTU5MTkzNjIxMywiYXpwIjoiUmVITjkyVzRwNE1lZFpibm9XQXM1MUVmcVV0NFQ5NmMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMifQ.kZt6mteIwNqdXO8CjqnsjENCgMV2-v7VMn2gtiqIuTNSxBZxk1OkeXERMuRcZpxqIjXi7SdHshQZ9wG_Cmrns_7bG5Pq-qiKCjDOK3pi6smvws02GmDH9nK4_el9zJ92_bDA0p4T6pT0ldcSAMya7ZwTz3-PYQ3pwCwiDEMWFXPtGilfHTBDmrzCUcanmErhZcopo8agtnozuIkbdZoKGkEdXO2J59PrAerBwIbhoYYgkreWIZtlbhGHueYj43ymDOHHl3I7s7zAuK1geJX4W3baKzTMPncUyGrHrOS6OI-ZodHs7kDhTyghJ13GxRy9ikAI3mXz79plZw0qxys2ed\n                    description: JWT used for access to APIs requiring bearer token auth\n                  expires_in:\n                    type: number\n                    example: 86400\n                    description: Time in ms to expiry\n                  token_type:\n                    type: string\n                    example: Bearer\n                    description: Denotes token type\n                required:\n                  - access_token\n                  - expires_in\n                  - token_type\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: string\n                  error_description:\n                    type: string\n              examples:\n                Invalid credentials:\n                  value:\n                    error: access_denied\n                    error_description: Unauthorized\n      description: |-\n        Authorization endpoint for gaining token used for API requests requiring `bearerAuth`.\n\n        You will be provided the required `client_id` and `client_secret` as part of onboarding.\n      security: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                client_id:\n                  type: string\n                  description: Client ID for your tenant\n                  example: htf792W4p4MedZbnoWAs51EfqUt4d2\n                client_secret:\n                  type: string\n                  description: Client seceret for your tenant\n                  example: d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\n                audience:\n                  type: string\n                  description: Use provided value\n                  example: 'https://vii.mattr.global'\n                grant_type:\n                  type: string\n                  description: Use provided value\n                  example: client_credentials\n              required:\n                - client_id\n                - client_secret\n                - audience\n                - grant_type\n            examples:\n              Request:\n                value:\n                  client_id: htf792W4p4MedZbnoWAs51EfqUt4d2\n                  client_secret: d3fYDX7FjPg1D1h2viARXsolPByQ9vMfg8LHylBy8F4s5KJLB4HhHGOxxqJnSj3G\n                  audience: 'https://vii.mattr.global'\n                  grant_type: client_credentials\n      tags:\n        - Security\n      x-codeSamples:\n        - lang: curl\n          source: |\n            curl --request POST \\\n              --url https://auth.mattr.global/oauth/token/ \\\n              --header 'Content-Type: application/json' \\\n              --data '{\"client_id\": \"KWdv9qo9Vnl9rrCRB7sfGKFTp4uO09im\",\n                       \"client_secret\": \"ztJe2GVpOb1_rUo9Vnl9rrCRB7sfGKFTp4uO0DOfLnA5FSz96wbrzgJMQ\",\n                       \"audience\": \"https://vii.mattr.global\",\n                       \"grant_type\": \"client_credentials\"\n                      }'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n    clientRegistrationAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: Client registration_access_token\n  schemas:\n    CreatePayloadRequest:\n      description: Create a payload\n      type: object\n      properties:\n        from:\n          type: string\n          minLength: 1\n          description: DID on the tenant used in a message\n        to:\n          type: array\n          description: List of SubjectDIDs\n          items:\n            type: string\n      required:\n        - from\n        - to\n    CredentialStatus:\n      type: object\n      description: Credential status location information\n      properties:\n        id:\n          type: string\n          description: Unique ID for the credential status\n          example: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n        type:\n          type: string\n          description: Indicates that the status contains revocation information\n          example: RevocationList2020Status\n        revocationListIndex:\n          type: integer\n          example: 1\n          description: The location within the revocation list for the credential\n        revocationListCredential:\n          type: string\n          description: The location of the revocation list\n          example: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n    DecryptMessageResponse:\n      type: object\n      properties:\n        payload:\n          oneOf:\n            - type: string\n            - type: object\n        senderDidUrl:\n          type: string\n        senderPublicJwk:\n          type: object\n        recipientDidUrl:\n          type: string\n    ED25519Signature2018:\n      type: object\n      properties:\n        type:\n          type: string\n          example: Ed25519Signature2018\n        created:\n          type: string\n          format: date-time\n          example: '2020-05-02T12:06:29Z'\n        jws:\n          type: string\n          description: Compact form of JWS\n          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n        proofPurpose:\n          type: string\n          example: assertionMethod\n        verificationMethod:\n          type: string\n          example: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n    ErrorResponse:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n        details:\n          type: array\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: The value that was provided\n              msg:\n                type: string\n                example: Invalid value\n                description: Description of why the request is invalid\n              param:\n                type: string\n                example: id\n                description: The parameter that is invalid\n              location:\n                type: string\n                example: body\n                description: 'The location in either body, query, path or params'\n    InitialTokenRequest:\n      type: object\n      properties:\n        client_id:\n          oneOf:\n            - example: G1s1EPMml4L0zFd63R1YP\n          type: string\n        client_secret:\n          type: string\n          example: aYzQUXD0VtlNHhTnxt6cyJeMgLczIBm-AA87STG0narCG8P0iL78fAO7TcWjPBYKwpoZY7Sw8MWNwvqf5VVqFw\n        grant_type:\n          type: string\n          example: authorization_code\n        code:\n          type: string\n          example: shdT2ks5tg9b\n        redirect_uri:\n          type: string\n          format: uri\n          example: 'https://my-client-rp.example.com'\n    JSONObjectMessage:\n      type: object\n      description: A JSON Object plaintext message\n      example:\n        msg: this is a message\n    OpenIdConfiguration:\n      type: object\n      properties:\n        authorization_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize'\n        claims_parameter_supported:\n          type: boolean\n          example: true\n        claims_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - sub\n            - sid\n            - auth_time\n            - iss\n        code_challenge_methods_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - S256\n        end_session_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end'\n        grant_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - implicit\n            - authorization_code\n            - refresh_token\n        id_token_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - ES256\n        issuer:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global'\n        jwks_uri:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks'\n        registration_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients'\n        request_object_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - RS256\n            - PS256\n            - ES256\n            - EdDSA\n        request_parameter_supported:\n          type: boolean\n          example: true\n        request_uri_parameter_supported:\n          type: boolean\n          example: true\n        require_request_uri_registration:\n          type: boolean\n          example: true\n        response_modes_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - form_post\n            - fragment\n            - query\n        response_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - code id_token\n            - code\n            - id_token\n            - none\n        scopes_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - openid\n            - offline_access\n        subject_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - public\n        token_endpoint_auth_methods_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - none\n            - client_secret_basic\n            - client_secret_jwt\n            - client_secret_post\n            - private_key_jwt\n        token_endpoint_auth_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - RS256\n            - PS256\n            - ES256\n            - EdDSA\n        token_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token'\n        userinfo_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me'\n        userinfo_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - ES256\n        claim_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - normal\n    RefreshTokenRequest:\n      type: object\n      properties:\n        client_id:\n          type: string\n        client_secret:\n          type: string\n        grant_type:\n          type: string\n          example: authorization_code\n        refresh_token:\n          type: string\n        redirect_uri:\n          type: string\n          format: uri\n    SendMessageRequest:\n      type: object\n      properties:\n        to:\n          type: string\n          description: recipient DID\n        message:\n          oneOf:\n            - type: string\n            - type: object\n          description: JWE message\n    SignMessageRequest:\n      type: object\n      required:\n        - didUrl\n        - payload\n      properties:\n        didUrl:\n          type: string\n          description: The did keyId that will be used to sign the message with.\n          example: 'did:example:abcdefghijkl#key1'\n        payload:\n          $ref: '#/components/schemas/JSONObjectMessage'\n    SignMessageResponse:\n      title: SignMessageResponse\n      type: string\n      description: Signed message in a response\n      example: eyJhbGciOiJFZERTQSIsImtpZCI6ImRpZDprZXk6ejZNa21mazNtMldIQlVxVm94SlZ3R1NQejVrYmFKNnpBMXRwN1JRWUJiUUdtczNoI3o2TWttZmszbTJXSEJVcVZveEpWd0dTUHo1a2JhSjZ6QTF0cDdSUVlCYlFHbXMzaCJ9.eyJtc2ciOiJUaGlzIGlzIGEgcGF5bG9hZCJ9.5E9qEmmSOMHLABAr4A9VzuNKFaO4EDo2GSCMoxQm9zsE7eCmEEuaAxtNhOUdd-Wvj64vqBBVl84XB1Yg7X9wBg\n      required:\n        - ciphertext\n    TokenRequest:\n      oneOf:\n        - $ref: '#/components/schemas/InitialTokenRequest'\n        - $ref: '#/components/schemas/RefreshTokenRequest'\n    TokenResponse:\n      type: object\n      properties:\n        access_token:\n          type: string\n        token_type:\n          type: string\n          enum:\n            - bearer\n        refresh_token:\n          type: string\n        expires_in:\n          type: integer\n        id_token:\n          type: string\n    VerifiableCredential:\n      type: object\n      properties:\n        '@context':\n          type: array\n          example:\n            - 'https://www.w3.org/2018/credentials/v1'\n            - 'https://www.w3.org/2018/credentials/examples/v1'\n          items:\n            type: string\n            minLength: 1\n            example: '\"https://www.w3.org/2018/credentials/v1\", \"https://www.w3.org/2018/credentials/examples/v1\"'\n        type:\n          type: array\n          example:\n            - VerifiableCredential\n            - AlumniCredential\n          items:\n            type: string\n            minLength: 1\n            example: '\"AlumniCredential\", \"VerifiableCredential\"'\n        issuer:\n          description: Includes issuer id (did) and its domain (inside name parameter)\n          oneOf:\n            - type: object\n              properties:\n                id:\n                  type: string\n                  example: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n                name:\n                  type: string\n                  example: Example University\n            - type: string\n              properties: {}\n        issuanceDate:\n          type: string\n          format: date-time\n          example: '2020-05-02T12:06:29.156Z'\n        credentialStatus:\n          $ref: '#/components/schemas/CredentialStatus'\n        credentialSubject:\n          type: object\n          example:\n            id: 'did:example:abcdb1f712ebc6f1c276e12ec21'\n            givenName: Jamie\n            familyName: Doe\n          properties:\n            id:\n              type: string\n              example: 'did:key:z6MkoPL5UbUcmKstxgftmFQfy246ocJ3YpJntgRM9f9eAWNY'\n            givenName:\n              type: string\n              example: Jamie\n            familyName:\n              type: string\n              example: Doe\n            alumniOf:\n              type: string\n              example: Example University\n        proof:\n          $ref: '#/components/schemas/ED25519Signature2018'\n      required:\n        - '@context'\n        - type\n        - issuanceDate\n        - credentialSubject\n        - proof\n    VerifyMessageResponse:\n      type: object\n      properties:\n        didUrl:\n          type: string\n          description: The didUrl included on the jws object\n          example: 'did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri#z6MkiKdPk7cYsCySi8BgPnjsZpUkb3aoHsBN4NQKQCSDKEdU'\n        did:\n          type: string\n          description: The did parsed from the didUrl\n          example: 'did:key:z6MkqesDwy7M5wPEoodrMSwgQFFWwEDtmx8X4V1zF7zho3ri'\n        verified:\n          type: boolean\n          description: Result of jws verification\n          example: true\n        payload:\n          oneOf:\n            - type: string\n            - type: object\n          description: The payload of the verified message\n    VerifyRequest:\n      type: object\n      properties:\n        jws:\n          type: string\n          description: Compact form of JWS\n          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n    Credentials.v1_CreateCredentialRequest:\n      type: object\n      properties:\n        '@context':\n          type: array\n          description: 'Additional to any JSON-LD contexts ''https://www.w3.org/2018/credentials/v1'' is always required.'\n          minLength: 1\n          example:\n            - 'https://www.w3.org/2018/credentials/v1'\n            - 'https://schema.org'\n          items:\n            type: string\n        subjectId:\n          type: string\n          description: 'Generally a DID, identifier of who/what the subject is'\n          example: 'did:example:abcdb1f712ebc6f1c276e12ec21'\n          minLength: 1\n        tag:\n          type: string\n          description: 'An optional tag to filter by, will not be part of the issued credential'\n          example: identifier123\n          minLength: 1\n          maxLength: 1024\n        type:\n          type: array\n          example: '[VerifiableCredential, AlumniCredential]'\n          description: 'Types for the Credential, VerifiableCredential must be the first value'\n          items:\n            type: string\n            description: 'Describes the additional specific types of the claimed data, must be within the scope of @context, resulting credential will always includes VerifiableCredential'\n        claims:\n          type: object\n          description: Each value is a claim that is defined by one of the JSON-LD schemas.\n          minItems: 1\n          example:\n            givenName: Jamie\n            familyName: Doe\n            alumniOf: \u003cspan lang=\"en\"\u003eExample University\u003c/span\u003e\n        issuer:\n          type: object\n          description: Includes Issuer id (DID) and domain name\n          required:\n            - id\n            - name\n          properties:\n            id:\n              type: string\n              example: 'did:issuer:abcdb1f712ebc6f1c276e12ec21'\n            name:\n              type: string\n              example: 'https://example.edu/issuers/565049'\n        persist:\n          type: boolean\n          description: Flag to indicate whether the full credential should be stored in platform\n        revocable:\n          type: boolean\n          description: Flag to indicate if the credential needs to support revocation\n      required:\n        - '@context'\n        - type\n        - claims\n        - issuer\n    Credentials.v1_CreateCredentialResponse:\n      type: object\n      x-examples: {}\n      title: ''\n      properties:\n        id:\n          type: string\n          example: 873277c0-a162-11ea-8a1d-a111119347e6\n        credential:\n          $ref: '#/components/schemas/VerifiableCredential'\n        tag:\n          type: string\n          example: identifier123\n        credentialStatus:\n          $ref: '#/components/schemas/Credentials.v1_CredentialStatus'\n        issuanceDate:\n          type: string\n          example: '2020-05-02T12:06:29.156Z'\n      required:\n        - id\n        - credential\n        - issuanceDate\n    Credentials.v1_CredentialStatus:\n      type: object\n      description: Credential status location information\n      properties:\n        id:\n          type: string\n          description: Unique ID for the credential status\n          example: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3#1'\n        type:\n          type: string\n          description: Indicates that the status contains revocation information\n          example: RevocationList2020Status\n        revocationListIndex:\n          type: integer\n          example: 1\n          description: The location within the revocation list for the credential\n        revocationListCredential:\n          type: string\n          description: The location of the revocation list\n          example: 'https://tenant.vii.mattr.global/core/v1/revocation-lists/cc641396-3750-43c8-b8b8-f30d74eb3fb3'\n    Credentials.v1_GetCredentialResponse:\n      type: object\n      x-examples: {}\n      title: ''\n      properties:\n        id:\n          type: string\n          example: 873277c0-a162-11ea-8a1d-a111119347e6\n        credential:\n          $ref: '#/components/schemas/VerifiableCredential'\n        tag:\n          type: string\n          example: identifier123\n        credentialStatus:\n          $ref: '#/components/schemas/Credentials.v1_CredentialStatus'\n        issuanceDate:\n          type: string\n          example: '2020-05-02T12:06:29.156Z'\n      required:\n        - id\n        - issuanceDate\n    Credentials.v1_GetCredentialsResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Credentials.v1_GetCredentialResponse'\n    Credentials.v1_RevocationStatusResponse:\n      type: object\n      properties:\n        isRevoked:\n          type: boolean\n          description: 'true if the credential is revoked, false otherwise'\n          example: false\n      required:\n        - isRevoked\n      description: ''\n      title: ''\n    Credentials.v1_SetRevocationStatus:\n      type: object\n      properties:\n        isRevoked:\n          type: boolean\n          description: 'true if the credential is revoked, false otherwise'\n          example: false\n      required:\n        - isRevoked\n      description: ''\n      title: ''\n    Credentials.v1_VerifyCredentialRequest:\n      title: VerifyCredentialRequest\n      type: object\n      properties:\n        credential:\n          $ref: '#/components/schemas/VerifiableCredential'\n    Dids.v1_CreateDidDocument:\n      type: object\n      properties:\n        method:\n          type: string\n          enum:\n            - key\n            - web\n            - sov\n        options:\n          type: object\n          description: 'To define a key type for a did:key or to define a domain for did:web'\n          minItems: 1\n          example:\n            keyType: bls12381g2\n      required:\n        - method\n      description: ''\n      title: ''\n    Dids.v1_CreateDidResponse:\n      type: object\n      properties:\n        registrationStatus:\n          type: string\n        did:\n          type: string\n          example: 'did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr'\n        metadata:\n          $ref: '#/components/schemas/Dids.v1_DidMetadata'\n    Dids.v1_DidDocument:\n      type: object\n    Dids.v1_DidMetadata:\n      type: object\n      required:\n        - keys\n      properties:\n        registered:\n          type: number\n          description: Timestamp of when the DID was registered\n          example: 1583233799656\n        keys:\n          type: array\n          description: An array of keys that describe the relationship between keys listed in the DID document and keys that exist in a connected KMS.\n          items:\n            $ref: '#/components/schemas/Dids.v1_DidMetadataKey'\n        initialDidDocument:\n          type: object\n          description: The DID document that was created for the DID\n          items:\n            $ref: '#/components/schemas/Dids.v1_DidDocument'\n    Dids.v1_DidMetadataKey:\n      type: object\n      properties:\n        kmsKeyId:\n          type: string\n          example: ad8facc7-e7f6-4af6-9baa-2f7abd71c928\n        didDocumentKeyId:\n          type: string\n          example: 'did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH#z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH'\n    Dids.v1_GetDidConfigJsonldResponse:\n      type: object\n      properties:\n        entries:\n          type: array\n          items:\n            $ref: '#/components/schemas/VerifiableCredential'\n    Dids.v1_GetDidResponse:\n      type: object\n      properties:\n        didDocument:\n          $ref: '#/components/schemas/Dids.v1_DidDocument'\n        registrationStatus:\n          type: string\n        localMetadata:\n          $ref: '#/components/schemas/Dids.v1_DidMetadata'\n    Dids.v1_GetDidsResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          type: array\n          items:\n            type: object\n            required:\n              - did\n              - localMetadata\n            properties:\n              did:\n                type: string\n                example: 'did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr'\n              localMetadata:\n                $ref: '#/components/schemas/Dids.v1_DidMetadata'\n    Oidc-issuer.v1_CreateOidcIssuerClientRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Meaningful name for this Client\n          example: OIDC Client for Wallet\n        redirectUris:\n          type: array\n          items:\n            type: string\n            format: uri\n          description: Redirection URI to which the response will be sent\n          example:\n            - 'https://example.com/callback'\n        responseTypes:\n          type: array\n          items:\n            type: string\n          description: Determines the authorization processing flow\n          example:\n            - code\n        grantTypes:\n          type: array\n          items:\n            type: string\n          description: OAuth Grant Type\n          example:\n            - authorization_code\n        tokenEndpointAuthMethod:\n          type: string\n          description: OAuth Token Endpoint Authentication Method\n          example: client_secret_post\n        idTokenSignedResponseAlg:\n          type: string\n          description: 'Algorithm must match configured jwks, defaults to RS256'\n          example: ES256\n        applicationType:\n          type: string\n          example: web\n      required:\n        - name\n        - redirectUris\n    Oidc-issuer.v1_CreateOidcIssuerClientResponse:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Client id\n              example: 6a860559-21a3-4b57-9a2b-aaea3ba4683d\n            secret:\n              type: string\n              description: Client secret\n              example: PiMkTfrEmPTKRFiPzjMFvYkYu.FwR.iZGFnC\n        - $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientRequest'\n    Oidc-issuer.v1_CreateOidcIssuerRequest:\n      type: object\n      properties:\n        credential:\n          type: object\n          required:\n            - issuerDid\n            - name\n            - context\n            - type\n          description: Credential information\n          properties:\n            issuerDid:\n              type: string\n              description: The Issuer DID\n              example: 'did:key:z6MkjBWPPa1njEKygyr3LR3pRKkqv714vyTkfnUdP6ToFSH5'\n            name:\n              type: string\n              description: Meaningful name for the Credential\n              example: University Attendance Credential\n            context:\n              type: array\n              description: JSON-LD schema where the term is referenced\n              example:\n                - 'https://schema.org'\n              items:\n                type: string\n                format: uri\n            type:\n              type: array\n              description: The Credential Type\n              example:\n                - AlumniCredential\n              items:\n                type: string\n        federatedProvider:\n          type: object\n          required:\n            - url\n            - clientId\n            - clientSecret\n          description: Federated OIDC Provider details\n          properties:\n            url:\n              type: string\n              format: uri\n              description: Base url for provider well-known endpoint\n              example: 'https://example-university.au.auth0.com'\n            scope:\n              type: array\n              description: OIDC scope associated with claims in the provider\n              example:\n                - openid\n                - profile\n                - email\n              items:\n                type: string\n            clientId:\n              type: string\n              description: Client ID configured in the provider\n              example: vJ0SCKchr4XjC0xHNE8DkH6Pmlg2lkCN\n            clientSecret:\n              type: string\n              description: Client secret configured in the provider\n              example: QNwfa4Yi4Im9zy1u_15n7SzWKt-9G5cdH0r1bONRpUPfN-UIRaaXv_90z8V6-OjH\n        claimMappings:\n          type: array\n          description: Map OpenID Connect terms to JSON-LD terms\n          items:\n            type: object\n            required:\n              - jsonLdTerm\n              - oidcClaim\n            properties:\n              jsonLdTerm:\n                type: string\n                description: The credential claim name in JSON-LD terms\n                example: alumniOf\n              oidcClaim:\n                type: string\n                description: The credential claim name in OIDC terms\n                example: alumni_of\n      required:\n        - credential\n        - federatedProvider\n        - claimMappings\n    Oidc-issuer.v1_CreateOidcIssuerResponse:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Issuer id\n              example: 983c0a86-204f-4431-9371-f5a22e506599\n            federatedProvider:\n              type: object\n              properties:\n                callbackUrl:\n                  type: string\n                  format: uri\n                  description: URL where the authorization code gets sent\n                  example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/federated/callback'\n        - $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerRequest'\n    Oidc-issuer.v1_GetOidcIssuerClientsResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerClientResponse'\n    Oidc-issuer.v1_GetOidcIssuersResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          $ref: '#/components/schemas/Oidc-issuer.v1_CreateOidcIssuerResponse'\n    Oidc-issuer.v1_OpenIdConfiguration:\n      type: object\n      properties:\n        authorization_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/authorize'\n        claims_parameter_supported:\n          type: boolean\n          example: true\n        claims_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - sub\n            - sid\n            - auth_time\n            - iss\n        code_challenge_methods_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - S256\n        end_session_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/session/end'\n        grant_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - implicit\n            - authorization_code\n            - refresh_token\n        id_token_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - ES256\n        issuer:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global'\n        jwks_uri:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/jwks'\n        registration_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/clients'\n        request_object_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - RS256\n            - PS256\n            - ES256\n            - EdDSA\n        request_parameter_supported:\n          type: boolean\n          example: true\n        request_uri_parameter_supported:\n          type: boolean\n          example: true\n        require_request_uri_registration:\n          type: boolean\n          example: true\n        response_modes_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - form_post\n            - fragment\n            - query\n        response_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - code id_token\n            - code\n            - id_token\n            - none\n        scopes_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - openid\n            - offline_access\n        subject_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - public\n        token_endpoint_auth_methods_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - none\n            - client_secret_basic\n            - client_secret_jwt\n            - client_secret_post\n            - private_key_jwt\n        token_endpoint_auth_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - RS256\n            - PS256\n            - ES256\n            - EdDSA\n        token_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/token'\n        userinfo_endpoint:\n          type: string\n          format: uri\n          example: 'https://tenant.vii.mattr.global/ext/oidc/v1/issuers/983c0a86-204f-4431-9371-f5a22e506599/me'\n        userinfo_signing_alg_values_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - HS256\n            - ES256\n        claim_types_supported:\n          type: array\n          items:\n            type: string\n          example:\n            - normal\n    Oidc-verifier.v1_CreateOidcVerifierClientRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Meaningful name for this Client\n          example: OIDC Client for the verifier\n        redirectUris:\n          type: array\n          items:\n            type: string\n            format: uri\n          description: Redirection URI to which the response will be sent\n          example:\n            - 'https://example.com/callback'\n        responseTypes:\n          type: array\n          items:\n            type: string\n          description: Determines the authorization processing flow\n          example:\n            - code\n        grantTypes:\n          type: array\n          items:\n            type: string\n          description: OAuth Grant Type\n          example:\n            - authorization_code\n        tokenEndpointAuthMethod:\n          type: string\n          description: OAuth Token Endpoint Authentication Method\n          example: client_secret_post\n        idTokenSignedResponseAlg:\n          type: string\n          description: 'Algorithm must match configured jwks, defaults to RS256'\n          example: ES256\n        applicationType:\n          type: string\n          example: web\n        logoUri:\n          type: string\n          format: uri\n          description: The logo to display above the QR code\n          example: 'https://example.com/logo.png'\n      required:\n        - name\n        - redirectUris\n    Oidc-verifier.v1_CreateOidcVerifierClientResponse:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Client id\n              example: da9bb6e4-c9ae-4468-b6ac-72b90d6efd5d\n            secret:\n              type: string\n              description: Client secret\n              example: H2epdcmNJ46hXJo5opdzvhbZK9W2ZGPkQh.E\n        - $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientRequest'\n    Oidc-verifier.v1_CreateOidcVerifierRequest:\n      type: object\n      properties:\n        verifierDid:\n          type: string\n          description: The Verifier DID\n          example: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n        presentationTemplateId:\n          type: string\n          format: uuid\n          description: Presentation Template ID used to request certain credentials\n          example: 364b6a1b-3600-4927-a6ac-4d66aa6bbac3\n        claimMappings:\n          type: array\n          items:\n            type: object\n            required:\n              - jsonLdFqn\n              - oidcClaim\n            properties:\n              jsonLdFqn:\n                type: string\n                description: Fully qualified JSON-LD term\n                example: 'http://schema.org/alumniOf'\n              oidcClaim:\n                type: string\n                description: The credential claim name in OIDC terms\n                example: alumni_of\n          description: Map OpenID Connect terms to JSON-LD terms\n      required:\n        - verifierDid\n        - presentationTemplateId\n        - claimMappings\n    Oidc-verifier.v1_CreateOidcVerifierResponse:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Verifier id\n              example: 41458e5a-9092-40b7-9a26-d4eb43c5792f\n        - $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierRequest'\n    Oidc-verifier.v1_GetOidcVerifierClientsResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierClientResponse'\n    Oidc-verifier.v1_GetOidcVerifiersResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          $ref: '#/components/schemas/Oidc-verifier.v1_CreateOidcVerifierResponse'\n    Presentations.v1_CreatePresentationDidAuthTemplate:\n      type: object\n      title: DIDAuth\n      properties:\n        type:\n          type: string\n          description: DIDAuth\n          example: DIDAuth\n      required:\n        - type\n    Presentations.v1_CreatePresentationQueryByExample:\n      type: object\n      x-examples: {}\n      title: QueryByExample\n      properties:\n        type:\n          type: string\n          example: QueryByExample\n        credentialQuery:\n          type: array\n          uniqueItems: true\n          minItems: 1\n          items:\n            type: object\n            minProperties: 1\n            properties:\n              required:\n                type: boolean\n              reason:\n                type: string\n              example:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    '@context':\n                      type: array\n                      description: array of contexts\n                      items: {}\n                    type:\n                      type: string\n                    trustedIssuer:\n                      type: array\n                      description: array of trusted issuers\n                      items:\n                        type: object\n                        properties:\n                          required:\n                            type: boolean\n                          issuer:\n                            type: string\n                        required:\n                          - required\n                          - issuer\n                  required:\n                    - '@context'\n                    - type\n                    - trustedIssuer\n            required:\n              - required\n              - example\n      required:\n        - type\n        - credentialQuery\n    Presentations.v1_CreatePresentationQueryByFrame:\n      type: object\n      title: QueryByFrame\n      properties:\n        type:\n          type: string\n        credentialQuery:\n          type: array\n          uniqueItems: true\n          minItems: 1\n          items:\n            type: object\n            properties:\n              reason:\n                type: string\n              frame:\n                type: object\n                required:\n                  - '@context'\n                  - type\n                  - credentialSubject\n                properties:\n                  '@context':\n                    type: array\n                    items:\n                      type: object\n                  type:\n                    type: string\n                    example: VerifiableCredential\n                  credentialSubject:\n                    type: object\n                    required:\n                      - '@explicit'\n                      - educationalCredentialAwarded\n                      - familyName\n                    properties:\n                      '@explicit':\n                        type: boolean\n                      educationalCredentialAwarded:\n                        type: object\n                      familyName:\n                        type: object\n              trustedIssuer:\n                type: array\n                uniqueItems: true\n                minItems: 0\n                items:\n                  type: object\n                  properties:\n                    required:\n                      type: boolean\n                    issuer:\n                      type: string\n                  required:\n                    - required\n                    - issuer\n            required:\n              - reason\n              - frame\n              - trustedIssuer\n      required:\n        - type\n        - credentialQuery\n    Presentations.v1_CreatePresentationRequestRequest:\n      type: object\n      required:\n        - templateId\n        - did\n      properties:\n        challenge:\n          type: string\n          description: Challenge can be used to match the response to a request\n          example: 64e45290-9980-11ea-b872-f1bee5fb328f\n        did:\n          type: string\n          description: DID of the Verifier\n          example: 'did:key:z6Mkt7bFYc4V2HdAxwhMtaY6cgJckYXwhYdPLJCcnVqzrkpr'\n        templateId:\n          type: string\n          description: Presentation Request Template id\n          example: 64e45290-9980-11ea-b872-f1bee5fb328f\n        expiresTime:\n          type: number\n          description: Unix timestamp in ms after which the request will be expired\n          example: 1592955632103\n        callbackUrl:\n          type: string\n          format: uri\n          description: Endpoint that will receive the Verifiable Presentation\n          example: 'https://tenant.vii.mattr.global/core/v1/presentations/response'\n    Presentations.v1_CreatePresentationRequestResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Presentation Request id\n          example: c74128a0-9949-11ea-9554-b5a630b3c119\n        callbackUrl:\n          type: string\n          format: uri\n          description: Endpoint that will receive the Verifiable Presentation\n          example: 'https://tenant.vii.mattr.global/core/v1/presentations/response'\n        request:\n          type: object\n          description: Presentation Request Details\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Presentation Request id\n              example: c74128a0-9949-11ea-9554-b5a630b3c119\n            type:\n              type: string\n              format: uri\n              description: Presentation Request schema\n              example: 'https://mattr.global/schemas/verifiable-presentation/request/QueryByExample'\n            from:\n              type: string\n              description: Verifier DID\n              example: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n            created_time:\n              type: number\n              description: Creation time\n              example: 1606709582907\n            expires_time:\n              type: number\n              description: Expiry time\n              example: 2594859115000\n            reply_url:\n              type: string\n              description: Endpoint that will receive the Verifiable Presentation\n              example: 'https://tenant.vii.mattr.global/core/v1/presentations/response'\n            reply_to:\n              type: array\n              description: Verifier DID\n              items:\n                type: string\n                example: 'did:key:z6MkrYVmyqSA93o4B1GwERM8kaQDMAUKAFV2TC3weQKeg9Gq'\n            body:\n              description: Definition of what type of Credential is being requested\n              allOf:\n                - $ref: '#/components/schemas/Presentations.v1_PresentationTemplateResponse'\n                - type: object\n                  properties:\n                    challenge:\n                      type: string\n                      format: uuid\n                      description: Challenge to match the response to a request\n                      example: e1b35ae0-9e0e-11ea-9bbf-a387b27c9e60\n    Presentations.v1_CreatePresentationTemplate:\n      type: object\n      title: PresentationTemplate\n      description: ''\n      properties:\n        domain:\n          type: string\n          description: Must match domain of the tenant\n        name:\n          type: string\n          description: Internal descriptor only\n        query:\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/Presentations.v1_CreatePresentationQueryByExample'\n              - $ref: '#/components/schemas/Presentations.v1_CreatePresentationQueryByFrame'\n              - $ref: '#/components/schemas/Presentations.v1_CreatePresentationDidAuthTemplate'\n      required:\n        - domain\n        - name\n        - query\n    Presentations.v1_PresentationTemplateArrayResponse:\n      type: object\n      properties:\n        nextCursor:\n          type: string\n          example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1hNjZmZmVhNS04NDhlLTQzOWQtODBhNC1kZGE1NWY1M2UzNmM\n          description: Starting point for next cursor to use in a page\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Presentations.v1_PresentationTemplateResponse'\n    Presentations.v1_PresentationTemplateResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: 64e45290-9980-11ea-b872-f1bee5fb328f\n        domain:\n          type: string\n          example: tenant.vii.mattr.global\n        name:\n          type: string\n          example: alumni_credential_request\n        query:\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/Presentations.v1_CreatePresentationQueryByExample'\n              - $ref: '#/components/schemas/Presentations.v1_CreatePresentationQueryByFrame'\n              - $ref: '#/components/schemas/Presentations.v1_CreatePresentationDidAuthTemplate'\n      required:\n        - id\n        - domain\n        - name\n        - query\n    Presentations.v1_UpdatePresentationTemplate:\n      title: UpdatePresentationTemplate\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: string\n        - $ref: '#/components/schemas/Presentations.v1_CreatePresentationTemplate'\n  parameters:\n    Common_Cursor:\n      schema:\n        type: string\n        example: Y3JlYXRlZEF0PTIwMjAtMDgtMjVUMDY6NDY6MDkuNTEwWiZpZD1h\n      in: query\n      name: cursor\n      description: Starting point for the list\n    Common_Limit:\n      schema:\n        type: number\n        example: 2\n        maximum: 1000\n        minimum: 1\n        default: 100\n      in: query\n      name: limit\n      description: 'Range size of the list, default 100'\n    Id:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 873277c0-a162-11ea-8a1d-a111119347e6\n      description: Credential ID\n    Did:\n      name: id\n      in: path\n      description: Issuer ID\n      schema:\n        type: string\n        format: uuid\n        example: 41458e5a-9092-40b7-9a26-d4eb43c5792f\n      required: true\n    IssuerId:\n      name: id\n      in: path\n      description: Issuer ID\n      schema:\n        type: string\n        format: uuid\n        example: 41458e5a-9092-40b7-9a26-d4eb43c5792f\n      required: true\n    VerifierId:\n      name: id\n      in: path\n      required: true\n      description: Verifier ID\n      schema:\n        type: string\n        format: uuid\n        example: 41458e5a-9092-40b7-9a26-d4eb43c5792f\nservers:\n  - url: 'https://tenant.vii.mattr.global/core'\n    variables:\n      tenant-subdomain:\n        default: tenant\n        description: Demo Tenant"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Dids.v1_DidMetadata\": parse schema: property \"initialDidDocument\": parse schema: object cannot contain 'items' field"
}