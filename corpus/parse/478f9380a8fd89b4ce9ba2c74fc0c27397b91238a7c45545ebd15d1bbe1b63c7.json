{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dyte-in/docs"
		},
		"file": {
			"name": "v2.yaml",
			"size": 0,
			"path": "static/api/v2.yaml",
			"byteSize": 114399,
			"content": "openapi: 3.0.0\nx-stoplight:\n  id: f49d2395cc273\nservers:\n  - url: 'https://api.cluster.dyte.in/v2'\n    description: ''\n    variables: {}\ninfo:\n  version: v2\n  title: Dyte REST APIs V2\n  description: |-\n    Next generation APIs.\n\n    ## Rate Limiting\n\n    Rate limits specify the maximum number of requests (GET, POST, PUT, or DELETE) a user can make in a given time period. When you exceed a rate limit, the API request fails and returns the HTTP 429 status code. The HTTP 429 status code indicates that the user made too many requests in a given period of time (\"rate limiting\").\n\n    We apply rate limits at the IP address level.\n\n    ### Rate Limit by IP Address\n\n    The rate limit threshold is set at 500 calls per minute per IP address. After 500 calls, a 429 status code is sent, and access to any of our APIs is denied. \n\n    Note: Rate limit is applied at the domain level, which means that all APIs are included in the threshold.\n\n    | Number of Requests | Resources | Time Window | Status Code Returned when Threshold Exceeds |\n    |--|--|--|--|\n    | 500 | Per IP | Per minute | HTTP 429 |\n\n    ### Sample\n\n    The following sample shows the API response for the status code 429.\n\n    ```http\n    HTTP/1.1 429 Too Many Requests\n    retry-after: 4\n    x-envoy-ratelimited: true\n    date: Tue, 06 Sep 2022 08:32:55 GMT\n    server: envoy\n    ```\n\n    ### Why Do You Set a Rate Limit?\n\n    Rate limiting is required to prevent the network from becoming overloaded as a result of numerous requests. This could be due to hacking activity, overuse of the Dyte APIs by a bot, or a bug in the code. Setting a rate limit helps to prevent this type of API overuse.\n\n    Setting a rate limit also protects us from various types of attacks, such as:\n    - [Brute Force Attack](https://www.fortinet.com/resources/cyberglossary/brute-force-attack)\n    - [DDOS attack](https://aws.amazon.com/shield/ddos-attack-protection/)\n    - [Web-scraping](https://www.geeksforgeeks.org/what-is-web-scraping-and-how-to-use-it/)\n  termsOfService: ''\n  license:\n    name: ''\npaths:\n  /livestreams:\n    post:\n      summary: Create an independent livestream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              x-examples:\n                example-1:\n                  name: prdmmp-xhycsl-asdf\n              properties:\n                name:\n                  type: string\n                  description: Name of the livestream\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  nullable: true\n            examples:\n              example-1:\n                value:\n                  name: prdmmp-xhycsl\n        description: ''\n      parameters:\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n          example: Basic  MGVlYWE0ODAtZDEwMi00YmEyLTg5ZmEtZWI2YTg1ZGFiZTlkOjZiY2FhYzg1YzIzMzEyMGFhYjVh\n      responses:\n        '201':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: null\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                      name:\n                        type: string\n                        nullable: true\n                      meeting_id:\n                        type: string\n                        nullable: true\n                      ingest_seconds:\n                        type: number\n                      viewer_seconds:\n                        type: number\n                      ingest_server:\n                        type: string\n                      id:\n                        type: string\n                      stream_key:\n                        type: string\n                      playback_url:\n                        type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    data:\n                      status: OFFLINE\n                      name: Livestreaming-Demo\n                      meeting_id: null\n                      ingest_seconds: 0\n                      viewer_seconds: 0\n                      ingest_server: 'rtmps://2ec802dd47b0.global-contribute.live-video.net:443/app/'\n                      id: 78dd0b50-4147-4bb8-88d3-2ccc2e98bff0\n                      stream_key: sk_ap-south-1_BSErwBSdrcWn_0eG01cFGCJcRcCsflOAX3Eu4B3RyRX\n                      playback_url: 'https://2ec802dd47b0.ap-south-1.playback.live-video.net/api/video/v1/ap-south-1.944908621410.channel.Jk1l97eJF0ME.m3u8'\n      description: 'Creates an independent livestream for the given organization ID. You can generate credentials for livestreaming independently using an ingest server and a stream key, and then distribute them freely using a playback URL.'\n      tags:\n        - Live streams\n    get:\n      operationId: fetch_all_livestreams\n      summary: Fetch all livestreams\n      parameters:\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n          example: Basic  NzBjNWQzOTEtNGJhYy00Y2YzLTk5MDctYmVjMjA1Nzk4YWRiOmQyNzBmYjJmOGNiNGUzZWY1MGI1\n        - schema:\n            type: boolean\n            default: false\n          in: query\n          name: excludeMeetings\n          description: Exclude livestreams done for a meeting\n        - schema:\n            type: integer\n          in: query\n          name: limit\n        - schema:\n            type: integer\n          in: query\n          name: offset\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: null\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      limit:\n                        type: integer\n                      total:\n                        type: integer\n                      total_count:\n                        type: integer\n                      page_count:\n                        type: integer\n                      current_page:\n                        type: integer\n                      livestreams:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            status:\n                              type: string\n                            name:\n                              type: string\n                              nullable: true\n                            meeting_id:\n                              type: string\n                              nullable: true\n                            ingest_seconds:\n                              type: number\n                            viewer_seconds:\n                              type: number\n                            ingest_server:\n                              type: string\n                            id:\n                              type: string\n                            stream_key:\n                              type: string\n                            playback_url:\n                              type: string\n              examples:\n                example-0:\n                  summary: Get All Live streams Of An Org Staging Success\n                  value:\n                    success: true\n                    message: ''\n                    data:\n                      limit: 10\n                      total: 17\n                      total_count: 17\n                      page_count: 2\n                      current_page: 1\n                      livestreams:\n                        - status: OFFLINE\n                          name: prdmmp-xhycsl\n                          meeting_id: null\n                          ingest_seconds: 0\n                          viewer_seconds: 0\n                          ingest_server: 'rtmps://2ec802dd47b0.global-contribute.live-video.net:443/app/'\n                          id: 82e363e9-6ce2-462a-a9e5-37068a729548\n                          stream_key: sk_ap-south-1_6z1GZy7HtfQh_9qCdXZVrLV8E2xDxrkPO0uzXSvB2Eg\n                          playback_url: 'https://2ec802dd47b0.ap-south-1.playback.live-video.net/api/video/v1/ap-south-1.944908621410.channel.rHYG1VHblte6.m3u8'\n        '201':\n          description: Created\n      description: 'Returns details of all livestreams for the given organization ID. This includes both independent livestreams and the meetings that are livestreamed by that organization. To get the details of only independent livestreams that are not associated with a meeting, use the `excludeMeetings` query parameter.'\n      tags:\n        - Live streams\n  '/meetings/{meeting_id}/livestreams':\n    post:\n      summary: Start livestreaming a meeting\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              x-examples:\n                example-1:\n                  name: prdmmp-xhycsl\n              properties:\n                name:\n                  type: string\n                  pattern: '^[a-zA-Z0-9-_]*$'\n                  nullable: true\n            examples:\n              example-1:\n                value:\n                  name: prdmmp-xhycsl\n      parameters:\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n          example: Basic  NzBjNWQzOTEtNGJhYy00Y2YzLTk5MDctYmVjMjA1Nzk4YWRiOmQyNzBmYjJmOGNiNGUzZWY1MGI1\n      responses:\n        '201':\n          description: Created\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: null\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                      name:\n                        type: string\n                        nullable: true\n                      meeting_id:\n                        type: string\n                      ingest_server:\n                        type: string\n                      id:\n                        type: string\n                      stream_key:\n                        type: string\n                      playback_url:\n                        type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    data:\n                      status: OFFLINE\n                      name: null\n                      meeting_id: 188566bc-8770-4ca0-9eb3-24b594ecaf7e\n                      ingest_server: 'rtmps://2ec802dd47b0.global-contribute.live-video.net:443/app/'\n                      id: 7088bba8-f522-49a8-b59b-3cd0e946bbb0\n                      stream_key: sk_ap-south-1_AfnVpeYZjidO_fBpWKody7sDUOEfy9Zc6XAZegkR0Va\n                      playback_url: 'https://2ec802dd47b0.ap-south-1.playback.live-video.net/api/video/v1/ap-south-1.944908621410.channel.rVKA2KM5Lunt.m3u8'\n            application/xml:\n              schema:\n                type: object\n                properties: {}\n      description: Starts livestreaming a meeting for the given meeting ID.\n      tags:\n        - Live streams\n    get:\n      summary: Fetch all livestreams for a meeting\n      parameters:\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n          example: Basic  NzBjNWQzOTEtNGJhYy00Y2YzLTk5MDctYmVjMjA1Nzk4YWRiOmQyNzBmYjJmOGNiNGUzZWY1MGI1\n        - schema:\n            type: integer\n          in: query\n          name: limit\n        - schema:\n            type: integer\n          in: query\n          name: offset\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: null\n                properties:\n                  success:\n                    type: boolean\n                  message:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      limit:\n                        type: integer\n                      total:\n                        type: integer\n                      total_count:\n                        type: integer\n                      page_count:\n                        type: integer\n                      current_page:\n                        type: integer\n                      livestreams:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            status:\n                              type: string\n                            name:\n                              type: string\n                              nullable: true\n                            meeting_id:\n                              type: string\n                            ingest_seconds:\n                              type: number\n                            viewer_seconds:\n                              type: number\n                            ingest_server:\n                              type: string\n                            id:\n                              type: string\n                            stream_key:\n                              type: string\n                            playback_url:\n                              type: string\n              examples:\n                example-0:\n                  summary: Get LiveStream From StreamId Success\n                  value:\n                    success: true\n                    message: ''\n                    data:\n                      limit: 10\n                      total: 1\n                      total_count: 1\n                      page_count: 1\n                      curren_page: 1\n                      livestreams:\n                        - status: OFFLINE\n                          name: null\n                          meeting_id: 188566bc-8770-4ca0-9eb3-24b594ecaf7e\n                          ingest_seconds: 171\n                          viewer_seconds: 160.15999992\n                          ingest_server: 'rtmps://2ec802dd47b0.global-contribute.live-video.net:443/app/'\n                          id: 7088bba8-f522-49a8-b59b-3cd0e946bbb0\n                          stream_key: sk_ap-south-1_AfnVpeYZjidO_fBpWKody7sDUOEfy9Zc6XAZegkR0Va\n                          playback_url: 'https://2ec802dd47b0.ap-south-1.playback.live-video.net/api/video/v1/ap-south-1.944908621410.channel.rVKA2KM5Lunt.m3u8'\n      description: Returns details of all livestreams for the given meeting ID.\n      tags:\n        - Live streams\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        required: true\n        description: ID of the meeting\n  '/meetings/{meeting_id}/active-livestream/stop':\n    post:\n      operationId: stop_livestreaming\n      summary: Stop livestreaming a meeting\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                name: prdmmp-xhycsl\n      parameters:\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n          example: Basic  NzBjNWQzOTEtNGJhYy00Y2YzLTk5MDctYmVjMjA1Nzk4YWRiOmQyNzBmYjJmOGNiNGUzZWY1MGI1\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                x-examples: null\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    data:\n                      message: livestream stopped\n      description: Stops active livestreaming of a meeting for the given meeting ID.\n      tags:\n        - Live streams\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        required: true\n        description: ID of the meeting\n  '/livestreams/{stream_id}':\n    get:\n      summary: Fetch livestream details using stream ID\n      parameters:\n        - name: Authorization\n          in: header\n          schema:\n            type: string\n          example: Basic  NzBjNWQzOTEtNGJhYy00Y2YzLTk5MDctYmVjMjA1Nzk4YWRiOmQyNzBmYjJmOGNiNGUzZWY1MGI1\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: null\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                      name:\n                        type: string\n                        nullable: true\n                      meeting_id:\n                        type: string\n                      ingest_seconds:\n                        type: number\n                      viewer_seconds:\n                        type: number\n                      ingest_server:\n                        type: string\n                      id:\n                        type: string\n                      stream_key:\n                        type: string\n                      playback_url:\n                        type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    data:\n                      status: OFFLINE\n                      name: null\n                      meeting_id: 188566bc-8770-4ca0-9eb3-24b594ecaf7e\n                      ingest_seconds: 171\n                      viewer_seconds: 160.15999992\n                      ingest_server: 'rtmps://2ec802dd47b0.global-contribute.live-video.net:443/app/'\n                      id: 7088bba8-f522-49a8-b59b-3cd0e946bbb0\n                      stream_key: sk_ap-south-1_AfnVpeYZjidO_fBpWKody7sDUOEfy9Zc6XAZegkR0Va\n                      playback_url: 'https://2ec802dd47b0.ap-south-1.playback.live-video.net/api/video/v1/ap-south-1.944908621410.channel.rVKA2KM5Lunt.m3u8'\n      description: Fetch details of a livestream for the given stream ID.\n      tags:\n        - Live streams\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: stream_id\n        in: path\n        required: true\n        description: ID of the livestream\n  '/meetings/{meeting_id}/active-livestream':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        required: true\n        description: ID of the meeting\n    get:\n      summary: Fetch active livestreams for a meeting\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples: null\n                properties:\n                  success:\n                    type: boolean\n                  data:\n                    type: object\n                    properties:\n                      status:\n                        type: string\n                      name:\n                        type: string\n                        nullable: true\n                      meeting_id:\n                        type: string\n                      ingest_seconds:\n                        type: integer\n                      viewer_seconds:\n                        type: integer\n                      ingest_server:\n                        type: string\n                      id:\n                        type: string\n                      stream_key:\n                        type: string\n                      playback_url:\n                        type: string\n              examples:\n                example-1:\n                  value:\n                    success: true\n                    data:\n                      status: LIVE\n                      name: null\n                      meeting_id: 188566bc-8770-4ca0-9eb3-24b594ecaf7e\n                      ingest_seconds: 0\n                      viewer_seconds: 0\n                      ingest_server: 'rtmps://2ec802dd47b0.global-contribute.live-video.net:443/app/'\n                      id: 7088bba8-f522-49a8-b59b-3cd0e946bbb0\n                      stream_key: sk_ap-south-1_AfnVpeYZjidO_fBpWKody7sDUOEfy9Zc6XAZegkR0Va\n                      playback_url: 'https://2ec802dd47b0.ap-south-1.playback.live-video.net/api/video/v1/ap-south-1.944908621410.channel.rVKA2KM5Lunt.m3u8'\n      operationId: get-v2-meetings-meetingId-active-livestream\n      description: Returns details of all active livestreams for the given meeting ID.\n      tags:\n        - Live streams\n      parameters:\n        - schema:\n            type: string\n          in: header\n          name: Authorization\n  '/meetings/{meeting_id}/active-session':\n    get:\n      summary: Fetch details of an active session\n      description: Returns details of an ongoing active session for the given meeting ID.\n      operationId: GetActiveSession\n      parameters:\n        - $ref: '#/components/parameters/meetingId'\n      tags:\n        - Active session\n      responses:\n        '200':\n          $ref: '#/components/responses/GetActiveSession'\n        '404':\n          $ref: '#/components/responses/GetActiveSessionNotFound'\n  '/meetings/{meeting_id}/active-session/kick':\n    post:\n      summary: Kick participants from an active session\n      description: Kicks one or more participants from an active session using user ID or custom participant ID.\n      operationId: KickPartcipants\n      parameters:\n        - $ref: '#/components/parameters/meetingId'\n      tags:\n        - Active session\n      requestBody:\n        $ref: '#/components/requestBodies/KickParticipantsBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/KickParticipants'\n        '404':\n          $ref: '#/components/responses/ParticipantNotFound'\n  '/meetings/{meeting_id}/active-session/kick-all':\n    post:\n      summary: Kick all participants\n      description: Kicks all participants from an active session for the given meeting ID.\n      operationId: KickAllParticipants\n      parameters:\n        - $ref: '#/components/parameters/meetingId'\n      tags:\n        - Active session\n      responses:\n        '200':\n          $ref: '#/components/responses/KickAllParticipants'\n  '/meetings/{meeting_id}/active-session/mute':\n    post:\n      summary: Mute participants of an active session\n      description: Mutes one or more participants from an active session using user ID or custom participant ID.\n      operationId: MuteParticipants\n      parameters:\n        - $ref: '#/components/parameters/meetingId'\n      tags:\n        - Active session\n      requestBody:\n        $ref: '#/components/requestBodies/KickParticipantsBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/MuteParticipants'\n  '/meetings/{meeting_id}/active-session/mute-all':\n    post:\n      summary: Mute all participants\n      description: Mutes all participants of an active session for the given meeting ID.\n      operationId: MuteAllParticipants\n      parameters:\n        - $ref: '#/components/parameters/meetingId'\n      tags:\n        - Active session\n      requestBody:\n        $ref: '#/components/requestBodies/MuteAllParticipantsBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/MuteAllParticipants'\n  '/meetings/{meeting_id}/active-session/poll':\n    post:\n      summary: Create a poll\n      description: Creates a new poll in an active session for the given meeting ID.\n      operationId: CreatePoll\n      parameters:\n        - $ref: '#/components/parameters/meetingId'\n      tags:\n        - Active session\n      requestBody:\n        $ref: '#/components/requestBodies/CreatePollBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreatePoll'\n  /sessions:\n    get:\n      summary: Fetch all sessions of an organization\n      description: Returns details of all sessions of an organization.\n      operationId: GetSessions\n      tags:\n        - Sessions\n      parameters:\n        - $ref: '#/components/parameters/pageNo'\n        - $ref: '#/components/parameters/perPage'\n        - $ref: '#/components/parameters/sortOrder'\n        - $ref: '#/components/parameters/startTime'\n        - $ref: '#/components/parameters/endTime'\n        - $ref: '#/components/parameters/participants'\n        - $ref: '#/components/parameters/status'\n        - schema:\n            type: string\n          in: query\n          name: search\n          description: 'Search string that matches sessions based on meeting title, meeting ID, and session ID'\n        - schema:\n            type: string\n          in: query\n          name: associated_id\n          description: ID of the meeting that sessions should be associated with\n      responses:\n        '200':\n          $ref: '#/components/responses/GetSessions'\n  '/sessions/{session_id}':\n    get:\n      summary: Fetch details of a session\n      description: Returns data of the given session ID including recording details.\n      operationId: GetSessionDetails\n      tags:\n        - Sessions\n      responses:\n        '200':\n          $ref: '#/components/responses/GetSessionDetails'\n    parameters:\n      - schema:\n          type: string\n        name: session_id\n        in: path\n        required: true\n        description: ID of the session\n  '/sessions/{session_id}/participants':\n    get:\n      summary: Fetch participants list of a session\n      description: Returns a list of participants for the given session ID.\n      operationId: GetSessionParticipants\n      tags:\n        - Sessions\n      parameters:\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/pageNo'\n        - $ref: '#/components/parameters/perPage'\n        - $ref: '#/components/parameters/sortOrder'\n        - $ref: '#/components/parameters/participantsSortBy'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetSessionParticipants'\n    parameters:\n      - schema:\n          type: string\n        name: session_id\n        in: path\n        required: true\n        description: ID of the session\n  '/sessions/{session_id}/participants/{participant_id}':\n    get:\n      summary: Fetch details of a participant\n      description: Returns details of the given participant ID along with call statistics for the given session ID.\n      operationId: GetParticipantDetails\n      tags:\n        - Sessions\n      responses:\n        '200':\n          $ref: '#/components/responses/GetParticipantDetails'\n    parameters:\n      - schema:\n          type: string\n        name: participant_id\n        in: path\n        required: true\n        description: ID of the participant\n      - schema:\n          type: string\n        name: session_id\n        in: path\n        required: true\n        description: ID of the session\n  '/sessions/{session_id}/chat':\n    get:\n      summary: Fetch all chat messages of a session\n      description: 'Returns a URL to download all chat messages of the session ID in CSV format. By default, this endpoint is disabled for your organization. Please contact us if you wish to enable it for your organization.'\n      operationId: GetSessionChat\n      tags:\n        - Sessions\n      responses:\n        '200':\n          $ref: '#/components/responses/GetSessionChat'\n    parameters:\n      - schema:\n          type: string\n        name: session_id\n        in: path\n        required: true\n        description: ID of the session\n  /analytics/stats:\n    get:\n      summary: Fetch statistics of an organization\n      description: Returns complete statistics of an organization for the given time period.\n      operationId: GetOverallStats\n      tags:\n        - Analytics\n      parameters:\n        - $ref: '#/components/parameters/startDate'\n        - $ref: '#/components/parameters/endDate'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetOverallStats'\n  /webhooks:\n    summary: Represents webhooks for organization\n    description: Represents webhooks for organization\n    get:\n      summary: Fetch all webhooks details\n      tags:\n        - Webhooks\n      description: Returns details of all webhooks for an organization.\n      operationId: getAllWebhooks\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhooksListSuccessResponse'\n              example:\n                type: 'object,'\n                value: |\n                  {\n                    success: true,\n                    data: [\n                      {\n                        id: '901e9adf-ebd9-41f0-9098-28171bc04ddd',\n                        name: 'test',\n                        events: [ 'meeting.started' ],\n                        url: 'https://testURL.com',\n                        created_at: '2021-09-09T10:25:12.330Z',\n                        updated_at: '2021-09-09T10:25:12.330Z'\n                      }\n                    ]\n                  }\n        '401':\n          description: Invalid credentials\n          content:\n            application/json:\n              example: |\n                {\n                  message: \"Unauthorized\"\n                }\n    post:\n      summary: Add a webhook\n      tags:\n        - Webhooks\n      description: Adds a new webhook to an organization.\n      operationId: addWebhook\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebhookRequest'\n            example:\n              type: object\n              value:\n                name: All events webhook\n                url: 'https://webhook.site/b23a5bbd-c7b0-4ced-a9e2-78ae7889897e'\n                events:\n                  - meeting.started\n                  - meeting.ended\n                  - meeting.participantJoined\n                  - meeting.participantLeft\n                  - recording.statusUpdate\n                  - livestreaming.statusUpdate\n      responses:\n        '201':\n          description: Webhook registered successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSuccessResponse'\n              example:\n                type: object\n                value: |\n                  {\n                    success: true,\n                    data: {\n                      id: '901e9adf-ebd9-41f0-9098-28171bc04ddd',\n                      name: 'test',\n                      events: [ 'meeting.started' ],\n                      url: 'https://testURL.com',\n                      created_at: '2021-09-09T10:25:12.330Z',\n                      updated_at: '2021-09-09T10:25:12.330Z'\n                    }\n                  }\n        '400':\n          description: Error - malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example:\n                type: object\n                value: |\n                  {\n                    success: false,\n                    error: { code: 400, message: 'BAD_REQUEST: \"name\" is required' }\n                  }\n        '401':\n          description: Invalid credentials\n          content:\n            application/json:\n              example: |\n                {\n                  message: \"Unauthorized\"\n                }\n  '/webhooks/{webhook_id}':\n    summary: Represents a single webhook\n    description: Represents a single webhook for an organization by ID\n    get:\n      summary: Fetch details of a webhook\n      description: Returns webhook details for the given webhook ID.\n      tags:\n        - Webhooks\n      operationId: getWebhook\n      parameters: null\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSuccessResponse'\n              example: |\n                {\n                  success: true,\n                  data: {\n                    id: '901e9adf-ebd9-41f0-9098-28171bc04ddd',\n                    name: 'test',\n                    events: [ 'meeting.started' ],\n                    url: 'https://testURL.com',\n                    created_at: '2021-09-09T10:25:12.330Z',\n                    updated_at: '2021-09-09T10:25:12.330Z'\n                  }\n                }\n        '400':\n          description: Error - malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example: |\n                {\n                  success: false,\n                  error: { code: 400, message: 'BAD_REQUEST: \"id\" must be a valid GUID' }\n                }\n        '401':\n          description: Invalid credentials\n          content:\n            application/json:\n              example: |\n                {\n                  message: \"Unauthorized\"\n                }\n    put:\n      summary: Replace a webhook\n      description: Replace all details for the given webhook ID.\n      tags:\n        - Webhooks\n      operationId: replaceWebhook\n      parameters: null\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebhookRequest'\n            example: |\n              {\n                name: 'test',\n                events: [ 'meeting.started' ],\n                url: 'https://testURL.com'\n              }\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSuccessResponse'\n              example: |\n                {\n                  success: true,\n                  data: {\n                    id: '901e9adf-ebd9-41f0-9098-28171bc04ddd',\n                    name: 'test',\n                    events: [ 'meeting.started' ],\n                    url: 'https://testURL.com',\n                    created_at: '2021-09-09T10:25:12.330Z',\n                    updated_at: '2021-09-09T10:25:12.376Z'\n                  }\n                }\n        '400':\n          description: Error - malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example: |\n                {\n                  success: false,\n                  error: { code: 400, message: 'BAD_REQUEST: \"id\" must be a valid GUID' }\n                }\n        '401':\n          description: Invalid credentials\n          content:\n            application/json:\n              example: |\n                {\n                  message: \"Unauthorized\"\n                }\n    patch:\n      summary: Edit a webhook\n      description: Edits the webhook details for the given webhook ID.\n      tags:\n        - Webhooks\n      operationId: editWebhook\n      parameters: null\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchWebhookRequest'\n            example: |\n              {\n                name: 'test2',\n                events: [ 'meeting.ended' ],\n                url: 'https://testURL2.com'\n              }\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSuccessResponse'\n              example: |\n                {\n                  success: true,\n                  data: {\n                    id: '901e9adf-ebd9-41f0-9098-28171bc04ddd',\n                    name: 'test2',\n                    events: [ 'meeting.ended' ],\n                    url: 'https://testURL2.com',\n                    created_at: '2021-09-09T10:25:12.330Z',\n                    updated_at: '2021-09-09T10:25:12.367Z'\n                  }\n                }\n        '400':\n          description: Error - malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example: |\n                {\n                  success: false,\n                  error: { code: 400, message: 'BAD_REQUEST: \"id\" must be a valid GUID' }\n                }\n        '401':\n          description: Invalid credentials\n          content:\n            application/json:\n              example: |\n                {\n                  message: \"Unauthorized\"\n                }\n    delete:\n      summary: Delete a webhook\n      description: Removes a webhook for the given webhook ID.\n      tags:\n        - Webhooks\n      operationId: deleteWebhook\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSuccessResponse'\n              example: |\n                {\n                  success: true,\n                  data: {\n                    id: '901e9adf-ebd9-41f0-9098-28171bc04ddd',\n                    name: 'test2',\n                    events: [ 'meeting.ended' ],\n                    url: 'https://testURL2.com',\n                    created_at: '2021-09-09T10:25:12.330Z',\n                    updated_at: '2021-09-09T10:25:12.367Z'\n                  }\n                }\n        '400':\n          description: Error - malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              example: |\n                {\n                  success: false,\n                  error: { code: 400, message: 'BAD_REQUEST: \"id\" must be a valid GUID' }\n                }\n        '401':\n          description: Invalid credentials\n          content:\n            application/json:\n              example: |\n                {\n                  message: \"Unauthorized\"\n                }\n    parameters:\n      - schema:\n          type: string\n        name: webhook_id\n        in: path\n        required: true\n        description: ID of the webhook\n  /orgs:\n    get:\n      summary: Fetch organization details of all users\n      description: Returns organization details of all the users.\n      tags:\n        - Organizations\n      operationId: getAllOrgs\n      security:\n        - userAuth: []\n      parameters:\n        - in: query\n          name: per_page\n          schema:\n            type: integer\n            minimum: 1\n          description: Number of values to return in a single page. Default value is 25.\n        - in: query\n          name: page_no\n          schema:\n            type: integer\n            minimum: 1\n          description: The page number to return. Default value is 1.\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationListSuccessResponse'\n        '400':\n          description: Malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      summary: Create an organization\n      description: Creates an organization. The authenticated user becomes the owner of the organization.\n      tags:\n        - Organizations\n      operationId: createOrg\n      security:\n        - userAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrganizationRequest'\n      responses:\n        '201':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationSuccessResponse'\n        '400':\n          description: Malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '409':\n          description: Organization with the provided name already exists\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/orgs/{org_id}':\n    get:\n      summary: Fetch details of an organization\n      description: Returns organization details for the given organization ID. The user must be the organization's owner.\n      tags:\n        - Organizations\n      operationId: getOrg\n      security:\n        - userAuth: []\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationSuccessResponse'\n        '400':\n          description: Malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: User is not authorized to perform this operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    patch:\n      summary: Edit details of an organization\n      description: Edits organization details for the given organization ID. The user must be the organization's owner.\n      tags:\n        - Organizations\n      operationId: editOrg\n      security:\n        - userAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchOrganizationRequest'\n      responses:\n        '200':\n          description: Operation successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationSuccessResponse'\n        '400':\n          description: Malformed request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '401':\n          description: Unauthorized user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    parameters:\n      - schema:\n          type: string\n        name: org_id\n        in: path\n        required: true\n        description: ID of the organization\n  /meetings:\n    get:\n      summary: Fetch all meetings for an organization\n      tags:\n        - Meetings\n      responses:\n        '200':\n          $ref: '#/components/responses/GetAllMeetings'\n      operationId: get_all_meetings\n      description: Returns all meetings for an organization.\n      parameters:\n        - $ref: '#/components/parameters/pageNo'\n        - $ref: '#/components/parameters/perPage'\n        - $ref: '#/components/parameters/startTime'\n        - $ref: '#/components/parameters/endTime'\n        - $ref: '#/components/parameters/search'\n    post:\n      summary: Create a meeting\n      operationId: create_meeting\n      responses:\n        '201':\n          $ref: '#/components/responses/GetMeeting'\n      description: Create a meeting for an organization.\n      requestBody:\n        $ref: '#/components/requestBodies/CreateMeetingBody'\n      tags:\n        - Meetings\n  '/meetings/{meeting_id}':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        description: ID of the meeting\n        required: true\n    get:\n      summary: Fetch a meeting for an organization\n      tags:\n        - Meetings\n      responses:\n        '200':\n          $ref: '#/components/responses/GetMeeting'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      operationId: get_meeting\n      description: Returns a meeting details in an organization for the given meeting ID.\n    patch:\n      summary: Update a meeting\n      operationId: update_meeting\n      responses:\n        '200':\n          $ref: '#/components/responses/GetMeeting'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      description: Updates a meeting in an organization for the given meeting ID.\n      requestBody:\n        $ref: '#/components/requestBodies/CreateMeetingBody'\n      tags:\n        - Meetings\n  '/meetings/{meeting_id}/participants':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        description: ID of the meeting\n        required: true\n    get:\n      summary: Fetch all participants of a meeting\n      tags:\n        - Meetings\n      responses:\n        '200':\n          $ref: '#/components/responses/GetAllParticipants'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      operationId: get_meeting_participants\n      description: Returns all participants detail for the given meeting ID.\n      parameters:\n        - $ref: '#/components/parameters/pageNo'\n        - $ref: '#/components/parameters/perPage'\n    post:\n      summary: Add a participant\n      operationId: add_participant\n      responses:\n        '201':\n          $ref: '#/components/responses/AddParticipant'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      description: Adds a participant to the given meeting ID.\n      requestBody:\n        $ref: '#/components/requestBodies/AddParticipantBody'\n      tags:\n        - Meetings\n  '/meetings/{meeting_id}/participants/{participant_id}':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        description: ID of the meeting\n        required: true\n      - schema:\n          type: string\n        name: participant_id\n        in: path\n        required: true\n        description: ID of the participant\n    get:\n      summary: Fetch a participant detail\n      tags:\n        - Meetings\n      responses:\n        '200':\n          $ref: '#/components/responses/GetParticipant'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      operationId: get_meeting_participant\n      description: Returns a participant details for the given participant and meeting ID.\n      parameters: []\n    patch:\n      summary: Edit a participant's detail\n      operationId: edit_participant\n      responses:\n        '200':\n          $ref: '#/components/responses/AddParticipant'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      description: Updates a participant's details for the given participant and meeting ID.\n      requestBody:\n        $ref: '#/components/requestBodies/EditParticipantBody'\n      tags:\n        - Meetings\n    delete:\n      summary: Delete a participant\n      operationId: delete_meeting_participant\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteParticipant'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      description: Deletes a participant for the given meeting and partcipant ID.\n      tags:\n        - Meetings\n  '/meetings/{meeting_id}/participants/{participant_id}/token':\n    parameters:\n      - schema:\n          type: string\n          format: uuid\n        name: meeting_id\n        in: path\n        description: ID of the meeting\n        required: true\n      - schema:\n          type: string\n        name: participant_id\n        in: path\n        required: true\n        description: ID of the participant\n    post:\n      summary: Refresh participant token\n      tags:\n        - Meetings\n      responses:\n        '200':\n          $ref: '#/components/responses/RegenToken'\n        '500':\n          $ref: '#/components/responses/GenericError'\n      operationId: regenerate_token\n      description: Regenerates authentication token for the given meeting and participant ID.\n      parameters: []\n  /recordings:\n    get:\n      summary: Fetch all recordings for an organization\n      tags:\n        - Recordings\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRecordings'\n      operationId: get_all_recordings\n      description: 'Returns all recordings for an organization. If the `meeting_id` parameter is passed, returns all recordings for the given meeting ID.'\n      security:\n        - Authorization: []\n        - Bearer: []\n      parameters:\n        - schema:\n            type: string\n            format: uuid\n          in: query\n          name: meeting_id\n          required: false\n          description: ID of a meeting. Optional. Will limit results to only this meeting if passed.\n        - $ref: '#/components/parameters/pageNo'\n        - $ref: '#/components/parameters/perPage'\n        - schema:\n            type: boolean\n          in: query\n          name: expired\n          required: false\n          description: 'If passed, only shows expired/non-expired recordings on Dyte''s bucket'\n        - $ref: '#/components/parameters/search'\n        - $ref: '#/components/parameters/recordingSortBy'\n        - $ref: '#/components/parameters/sortOrder'\n        - $ref: '#/components/parameters/startTime'\n        - $ref: '#/components/parameters/endTime'\n        - $ref: '#/components/parameters/recordingStatus'\n    post:\n      summary: Start recording a meeting\n      operationId: start_recording\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRecording'\n      description: 'Starts recording a meeting. The meeting can be started by an organization admin directly, or a participant with permissions to start a recording, based on the type of authorization used.'\n      security:\n        - Authorization: []\n        - Bearer: []\n      requestBody:\n        $ref: '#/components/requestBodies/StartRecording'\n      tags:\n        - Recordings\n  '/recordings/active-recordings/{meeting_id}':\n    parameters:\n      - schema:\n          type: string\n        name: meeting_id\n        in: path\n        required: true\n        description: ID of the meeting\n    get:\n      summary: Fetch active recording\n      tags:\n        - Recordings\n      operationId: get_active_recording\n      description: Returns the active recording details for the given meeting ID.\n      security:\n        - Authorization: []\n        - Bearer: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetActiveRecording'\n        '404':\n          $ref: '#/components/responses/GenericError'\n  '/recordings/{recording_id}':\n    parameters:\n      - schema:\n          type: string\n        name: recording_id\n        in: path\n        required: true\n        description: ID of the recording\n    get:\n      summary: Fetch details of a recording\n      tags:\n        - Recordings\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRecording'\n        '':\n          $ref: '#/components/responses/GetRecording'\n      operationId: get_one_recording\n      description: Returns details of a recording for the given recording ID.\n      security:\n        - Authorization: []\n        - Bearer: []\n    put:\n      summary: Stop recording\n      operationId: stop_recording\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRecording'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                action:\n                  type: string\n                  enum:\n                    - stop\n              required:\n                - action\n        description: ''\n      tags:\n        - Recordings\n      description: Stops recording for the given recording ID.\n  /presets:\n    get:\n      summary: Fetch all presets\n      tags:\n        - Presets\n      responses:\n        '200':\n          $ref: '#/components/responses/GetAllPresets'\n      operationId: get-presets\n      parameters:\n        - $ref: '#/components/parameters/perPage'\n        - $ref: '#/components/parameters/pageNo'\n      description: Fetches all the presets belonging to an organization.\n    post:\n      summary: Create a preset\n      operationId: post-presets\n      responses:\n        '200':\n          $ref: '#/components/responses/GetPresetBody'\n      description: Creates a preset belonging to the current organization\n      requestBody:\n        $ref: '#/components/requestBodies/CreatePresetBody'\n      tags:\n        - Presets\n  '/presets/{preset_id}':\n    parameters:\n      - schema:\n          type: string\n        name: preset_id\n        in: path\n        required: true\n        description: ID of the preset to fetch\n    get:\n      summary: Fetch details of a preset\n      tags:\n        - Presets\n      responses:\n        '200':\n          $ref: '#/components/responses/GetPresetBody'\n      operationId: get-presets-preset_id\n      description: Fetches details of a preset using the provided preset ID\n    delete:\n      summary: Delete a preset\n      operationId: delete-presets-preset_id\n      responses:\n        '200':\n          $ref: '#/components/responses/GetPresetBody'\n      description: Deletes a preset using the provided preset ID\n      tags:\n        - Presets\n    patch:\n      summary: Update a preset\n      operationId: patch-presets-preset_id\n      responses:\n        '200':\n          $ref: '#/components/responses/GetPresetBody'\n      description: Update a preset by the provided preset ID\n      requestBody:\n        $ref: '#/components/requestBodies/CreatePresetBody'\n      tags:\n        - Presets\ncomponents:\n  schemas:\n    Webhook:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: 0d1f069d-43bb-489a-ad8c-7eb95592ba8e\n          description: ID of the webhook\n          readOnly: true\n        name:\n          type: string\n          example: All events webhook\n          description: Name of the webhook\n        url:\n          type: string\n          format: uri\n          example: 'https://webhook.site/b23a5bbd-c7b0-4ced-a9e2-78ae7889897e'\n          description: URL the webhook will send events to\n        events:\n          type: array\n          example:\n            - meeting.started\n            - meeting.ended\n            - meeting.participantJoined\n            - meeting.participantLeft\n            - recording.statusUpdate\n            - livestreaming.statusUpdate\n          description: Events this webhook will send updates for\n          items:\n            type: string\n            enum:\n              - meeting.started\n              - meeting.ended\n              - meeting.participantJoined\n              - meeting.participantLeft\n              - recording.statusUpdate\n              - livestreaming.statusUpdate\n        created_at:\n          type: string\n          format: date-time\n          example: '2022-05-28T07:01:53.075Z'\n          description: Timestamp when this webhook was created\n        updated_at:\n          type: string\n          format: date-time\n          example: '2022-05-28T07:01:53.075Z'\n          description: Timestamp when this webhook was updated\n      required:\n        - id\n        - name\n        - url\n        - events\n        - created_at\n        - updated_at\n    WebhookSuccessResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: true\n        data:\n          $ref: '#/components/schemas/Webhook'\n      required:\n        - success\n        - data\n    WebhooksListSuccessResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Webhook'\n      required:\n        - success\n        - data\n    ErrorResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: false\n          description: Whether the operation succeeded or not\n        error:\n          type: object\n          required:\n            - code\n            - message\n          description: Object containing details of the error that occurred\n          properties:\n            code:\n              type: number\n              example: 404\n              description: Error code\n            message:\n              type: string\n              example: 'Error: resource not found'\n              description: Error message\n      required:\n        - success\n        - error\n    WebhookRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: All events webhook\n          description: Name of the webhook\n        url:\n          type: string\n          format: uri\n          example: 'https://webhook.site/#!/b23a5bbd-c7b0-4ced-a9e2-78ae7889897e'\n          description: URL this webhook will send events to\n        events:\n          type: array\n          example:\n            - meeting.started\n            - meeting.ended\n            - meeting.participantJoined\n            - meeting.participantLeft\n            - recording.statusUpdate\n            - livestreaming.statusUpdate\n          description: Events that this webhook will get triggered by\n          items:\n            type: string\n            enum:\n              - meeting.started\n              - meeting.ended\n              - meeting.participantJoined\n              - meeting.participantLeft\n              - recording.statusUpdate\n              - livestreaming.statusUpdate\n      required:\n        - name\n        - url\n        - events\n    PatchWebhookRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the webhook\n        url:\n          type: string\n          format: uri\n          example: 'https://webhook.site/b23a5bbd-c7b0-4ced-a9e2-78ae7889897e'\n          description: URL the webhook will send events to\n        events:\n          type: array\n          description: Events that the webhook will get triggered by\n          items:\n            type: string\n            enum:\n              - meeting.started\n              - meeting.ended\n              - meeting.participantJoined\n              - meeting.participantLeft\n              - recording.statusUpdate\n              - livestreaming.statusUpdate\n    ActiveSession:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the session\n          readOnly: true\n        associated_id:\n          type: string\n          description: 'ID of the meeting this session is associated with. In the case of V2 meetings, it is always a UUID. In V1 meetings, it is a room name of the form `abcdef-ghijkl`'\n        meeting_display_name:\n          type: string\n          description: Title of the meeting this session belongs to\n        type:\n          type: string\n          description: type of session\n          enum:\n            - meeting\n            - livestream\n            - participant\n        status:\n          type: string\n          description: current status of session\n          enum:\n            - LIVE\n            - ENDED\n        live_participants:\n          type: number\n          description: number of participants currently in the session\n        max_concurrent_participants:\n          type: number\n          description: number of maximum participants that were in the session\n        minutes_consumed:\n          type: number\n          description: number of minutes consumed since the session started\n        organization_id:\n          type: string\n          description: Organization id that hosted this session\n        started_at:\n          type: string\n          description: timestamp when session started\n        created_at:\n          type: string\n          description: timestamp when session created\n        updated_at:\n          type: string\n          description: timestamp when session was last updated\n        ended_at:\n          type: string\n          description: timestamp when session ended\n        meta:\n          type: object\n          description: Any meta data about session.\n      required:\n        - id\n        - associated_id\n        - meeting_display_name\n        - type\n        - status\n        - live_participants\n        - max_concurrent_participants\n        - minutes_consumed\n        - organization_id\n        - started_at\n        - created_at\n        - updated_at\n    GenericErrorResponse:\n      type: object\n      properties:\n        success:\n          type: boolean\n          description: Success status of the request.\n          default: false\n        error:\n          type: object\n          required:\n            - code\n            - message\n          properties:\n            code:\n              type: number\n              description: HTTP status code of the error.\n            message:\n              type: string\n              description: Error message describing what went wrong.\n      required:\n        - success\n        - error\n    ChatMessage:\n      type: object\n      properties:\n        chat_download_url:\n          type: string\n          description: URL where the chat logs can be downloaded\n        chat_download_url_expiry:\n          type: string\n          description: Time when the download URL will expire\n      required:\n        - chat_download_url\n        - chat_download_url_expiry\n    SessionParticipant:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the session participant\n        created_at:\n          type: string\n        updated_at:\n          type: string\n        name:\n          type: string\n          description: Name of the session participant.\n        email:\n          type: string\n          description: Email of the session participant.\n        picture:\n          type: string\n          description: A URL pointing to a picture of the participant.\n      required:\n        - id\n        - created_at\n        - updated_at\n      title: SessionParticipant\n    Poll:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the poll\n          readOnly: true\n        question:\n          type: string\n          description: Question asked by the poll\n        options:\n          type: array\n          description: Answer options\n          items:\n            type: object\n            properties:\n              text:\n                type: string\n                description: Text of the answer option\n              count:\n                type: number\n              votes:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    name:\n                      type: string\n                  required:\n                    - id\n                    - name\n            required:\n              - text\n              - count\n              - votes\n        anonymous:\n          type: boolean\n        hide_votes:\n          type: boolean\n        created_by:\n          type: string\n        voted:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - question\n        - options\n    ParticipantsList:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Participant ID. This maps to the corresponding peerId.\n        user_id:\n          type: string\n          description: User id for this participant.\n        custom_participant_id:\n          type: string\n          description: ID passed by client to create this participant.\n        display_name:\n          type: string\n          description: Display name of participant when joining the session.\n        role:\n          type: string\n          description: Role of the participant.\n        joined_at:\n          type: string\n          description: timestamp at which participant joined the session.\n        left_at:\n          type: string\n          description: timestamp at which participant left the session.\n        duration:\n          type: number\n          description: number of minutes for which the participant was in the session.\n        created_at:\n          type: string\n          description: timestamp when this participant was created.\n        updated_at:\n          type: string\n          description: timestamp when this participant's data was last updated.\n    ParticipantPeerStats:\n      type: object\n      properties:\n        peer_stats:\n          type: object\n          properties:\n            config:\n              type: string\n            status:\n              type: string\n            device_info:\n              type: object\n              properties:\n                browser:\n                  type: string\n                browser_version:\n                  type: string\n                cpus:\n                  type: number\n                engine:\n                  type: string\n                is_mobile:\n                  type: boolean\n                memory:\n                  type: number\n                os:\n                  type: string\n                os_version:\n                  type: string\n                sdk_name:\n                  type: string\n                sdk_version:\n                  type: string\n                user_agent:\n                  type: string\n                webgl_support:\n                  type: string\n            events:\n              type: array\n              items:\n                type: object\n                properties:\n                  timestamp:\n                    type: string\n                  type:\n                    type: string\n            ip_information:\n              type: object\n              properties:\n                city:\n                  type: string\n                country:\n                  type: string\n                ip_location:\n                  type: string\n                ipv4:\n                  type: string\n                org:\n                  type: string\n                portal:\n                  type: string\n                region:\n                  type: string\n                timezone:\n                  type: string\n            precall_network_information:\n              type: object\n              properties:\n                backend_rtt:\n                  type: number\n                turn_connectivity:\n                  type: boolean\n                effective_networktype:\n                  type: string\n                throughtput:\n                  type: number\n                jitter:\n                  type: number\n                rtt:\n                  type: number\n                reflexive_connectivity:\n                  type: boolean\n                relay_connectivity:\n                  type: boolean\n                fractional_loss:\n                  type: number\n    ParticipantQualityStats:\n      type: object\n      properties:\n        quality_stats:\n          type: array\n          items:\n            type: object\n            properties:\n              peer_id:\n                type: string\n              audio_bandwidth:\n                type: number\n              video_bandwidth:\n                type: number\n              average_quality:\n                type: number\n              start:\n                type: string\n              end:\n                type: string\n              audio_packet_loss:\n                type: number\n              video_packet_loss:\n                type: number\n              audio_stats:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    concealment_events:\n                      type: number\n                    packets_lost:\n                      type: number\n                    jitter:\n                      type: number\n                    quality:\n                      type: number\n              video_stats:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    frame_width:\n                      type: number\n                    frame_height:\n                      type: number\n                    frames_dropped:\n                      type: number\n                    frames_per_second:\n                      type: number\n                    packets_lost:\n                      type: number\n                    jitter:\n                      type: number\n                    quality:\n                      type: number\n    OverallStats:\n      type: object\n      properties:\n        day_wise:\n          type: array\n          items:\n            type: object\n            properties:\n              date:\n                type: string\n              sessions_count:\n                type: number\n              sessions_minutes_consumed:\n                type: number\n              recordings_minutes_consumed:\n                type: number\n        total_sessions_count:\n          type: number\n        total_sessions_minutes_consumed:\n          type: number\n        total_recordings_minutes_consumed:\n          type: number\n    OrganizationRequest:\n      type: object\n      required:\n        - name\n        - contact\n        - website\n      properties:\n        name:\n          description: Must be a unique organization name\n          type: string\n          example: Dyte\n        contact:\n          type: string\n          example: 778-330-2389\n        website:\n          type: string\n          format: uri\n          example: 'https://www.dyte.io'\n        feature_flags:\n          type: array\n          items:\n            type: string\n        preferred_region:\n          type: string\n          enum:\n            - ap-south-1\n            - ap-southeast-1\n            - us-west-1\n          default: ap-south-1\n          example: us-west-1\n    PatchOrganizationRequest:\n      type: object\n      properties:\n        name:\n          description: Must be a unique organization name\n          type: string\n        contact:\n          type: string\n        website:\n          type: string\n          format: uri\n          example: 'https://www.dyte.io'\n        feature_flags:\n          type: array\n          items:\n            type: string\n        preferred_region:\n          type: string\n          enum:\n            - ap-south-1\n            - ap-southeast-1\n            - us-west-1\n    OrganizationData:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: bbb0e958-93ce-41c7-9745-16e7aa51c568\n          description: ID of the organization\n        name:\n          description: Must be a unique organization name\n          type: string\n          example: Dyte\n        contact:\n          type: string\n          example: 778-330-2389\n        website:\n          type: string\n          format: uri\n          example: 'https://www.dyte.io'\n        apikey:\n          type: string\n          example: 4deeb3d8e8b5e74d5522\n        preferred_region:\n          type: string\n          example: us-west-1\n        feature_flags:\n          type: array\n          items:\n            type: string\n        created_at:\n          type: string\n          format: date-time\n          example: '2022-05-28T08:18:34.804Z'\n        updated_at:\n          type: string\n          format: date-time\n          example: '2022-05-28T08:18:34.804Z'\n      required:\n        - id\n        - name\n        - contact\n        - website\n        - apikey\n        - preferred_region\n        - feature_flags\n        - created_at\n        - updated_at\n    OrganizationSuccessResponse:\n      type: object\n      required:\n        - success\n        - data\n      properties:\n        success:\n          type: boolean\n          example: true\n        data:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationData'\n    OrganizationListSuccessResponse:\n      type: object\n      required:\n        - success\n        - data\n        - paging\n      properties:\n        success:\n          type: boolean\n          example: true\n        data:\n          type: array\n          items:\n            allOf:\n              - $ref: '#/components/schemas/OrganizationData'\n        paging:\n          type: object\n          properties:\n            total_count:\n              type: number\n              example: 30\n            start_offset:\n              type: number\n              example: 1\n            end_offset:\n              type: number\n              example: 30\n          required:\n            - total_count\n            - start_offset\n            - end_offset\n    Meeting:\n      type: object\n      x-examples:\n        Example 1:\n          preferred_region: ap-south-1\n          waiting_room: false\n          id: 7f951e37-492b-45dd-8256-7f1660341c17\n          record_on_start: false\n          created_at: '2022-11-04T18:22:11.369Z'\n          updated_at: '2022-11-04T18:22:11.369Z'\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: ID of the meeting.\n          readOnly: true\n        preferred_region:\n          type: string\n          enum:\n            - ap-south-1\n            - ap-southeast-1\n            - us-west-1\n          description: Region this meeting will be created in.\n          nullable: true\n        record_on_start:\n          type: boolean\n          description: Whether the meeting will be recorded as soon as someone joinrs or not.\n        created_at:\n          type: string\n          format: date-time\n          description: Timestamp the object was created at.\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          description: Timestamp the object was updated at.\n          readOnly: true\n      required:\n        - id\n        - created_at\n        - updated_at\n    PagingResponse:\n      title: PagingResponse\n      x-stoplight:\n        id: xogzxduy48b20\n      type: object\n      properties:\n        success:\n          type: boolean\n          example: true\n        data:\n          type: array\n          items: {}\n        paging:\n          type: object\n          required:\n            - total_count\n            - start_offset\n            - end_offset\n          properties:\n            total_count:\n              type: number\n              example: 30\n            start_offset:\n              type: number\n              example: 1\n            end_offset:\n              type: number\n              example: 30\n      required:\n        - success\n        - data\n        - paging\n    GenericSuccessResponse:\n      title: GenericSuccessResponse\n      x-stoplight:\n        id: 6g2id76io3wuw\n      type: object\n      properties:\n        success:\n          type: boolean\n          default: true\n          description: Success status of the operation\n        data:\n          type: object\n          description: Data returned by the operation\n      required:\n        - success\n    Participant:\n      title: Participant\n      x-stoplight:\n        id: oqlh14sj8p2i5\n      type: object\n      description: Represents a participant.\n      properties:\n        id:\n          type: string\n          description: ID of the participant.\n          format: uuid\n        name:\n          type: string\n          description: Name of the participant.\n          nullable: true\n        picture:\n          type: string\n          format: uri\n          description: URL to a picture of the participant.\n          nullable: true\n        client_specific_id:\n          type: string\n          description: ID used internally by the client.\n        preset_name:\n          type: string\n          description: Preset applied to the participant.\n        created_at:\n          type: string\n          format: date-time\n          description: When this object was created.\n        updated_at:\n          type: string\n          format: date-time\n          description: When this object was updated.\n      required:\n        - id\n        - client_specific_id\n        - preset_name\n        - created_at\n        - updated_at\n    Recording:\n      title: Recording\n      x-stoplight:\n        id: 25dzhno3e2es1\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of the recording\n          format: uuid\n          readOnly: true\n        download_url:\n          type: string\n          format: uri\n          description: URL where the recording can be downloaded.\n          nullable: true\n          readOnly: true\n        download_url_expiry:\n          type: string\n          format: date-time\n          description: Timestamp when the download URL expires.\n          nullable: true\n          readOnly: true\n        file_size:\n          type: number\n          description: 'File size of the recording, in bytes.'\n          nullable: true\n          readOnly: true\n        session_id:\n          type: string\n          format: uuid\n          description: ID of the meeting session this recording is for.\n          nullable: true\n          readOnly: true\n        output_file_name:\n          type: string\n          description: File name of the recording.\n        status:\n          type: string\n          enum:\n            - INVOKED\n            - RECORDING\n            - UPLOADING\n            - UPLOADED\n            - ERRORED\n          description: Current status of the recording.\n        invoked_time:\n          type: string\n          description: Timestamp when this recording was invoked.\n          format: date-time\n        started_time:\n          type: string\n          format: date-time\n          description: Timestamp when this recording actually started after being invoked. Usually a few seconds after `invoked_time`.\n          nullable: true\n        stopped_time:\n          type: string\n          format: date-time\n          description: Timestamp when this recording was stopped. Optional; is present only when the recording has actually been stopped.\n          nullable: true\n      required:\n        - id\n        - download_url\n        - download_url_expiry\n        - file_size\n        - session_id\n        - output_file_name\n        - status\n        - invoked_time\n        - started_time\n        - stopped_time\n    StorageConfig:\n      title: StorageConfig\n      x-stoplight:\n        id: tt67la5u5qhyv\n      type: object\n      nullable: true\n      properties:\n        type:\n          type: string\n          enum:\n            - aws\n            - azure\n            - digitalocean\n          description: Type of storage media.\n        access_key:\n          type: string\n          description: 'Access key of the storage medium. Note that this field is not readable by clients, only writeable.'\n          writeOnly: true\n        secret_key:\n          type: string\n          description: 'Secret key of the storage medium. Similar to `access_key`, it is only writeable by clients, not readable.'\n        bucket:\n          type: string\n          description: Name of the storage medium's bucket.\n        region:\n          type: string\n          description: Region of the storage medium.\n          example: us-east-1\n        path:\n          type: string\n          description: Path relative to the bucket root at which the recording will be placed.\n      required:\n        - type\n        - access_key\n        - secret_key\n        - bucket\n    PresetListItem:\n      title: PresetListItem\n      x-stoplight:\n        id: 92m0mrllbxmgq\n      type: object\n      description: Returned by Get All Presets route\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: ID of the preset\n        name:\n          type: string\n          description: Name of the preset\n        created_at:\n          type: string\n          format: date-time\n          description: Timestamp this preset was created at\n        updated_at:\n          type: string\n          format: date-time\n          description: Timestamp this preset was last updated\n    Preset:\n      title: Preset\n      x-stoplight:\n        id: xntgc715hdevf\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the preset\n        config:\n          type: object\n          required:\n            - view_type\n            - max_video_streams\n            - max_screenshare_count\n            - media\n          properties:\n            view_type:\n              type: string\n              enum:\n                - GROUP_CALL\n                - WEBINAR\n                - AUDIO_ROOM\n              description: Type of the meeting\n            max_video_streams:\n              type: object\n              description: Maximum number of streams that are visible on a device\n              required:\n                - mobile\n                - desktop\n              properties:\n                mobile:\n                  type: integer\n                  description: Maximum number of streams visible on mobile devices\n                desktop:\n                  type: integer\n                  description: Maximum number of video streams visible on desktop devices\n            max_screenshare_count:\n              type: integer\n              description: Maximum number of screen shares that can be active at a given time\n            media:\n              type: object\n              description: 'Media configuration options. eg: Video quality'\n              required:\n                - video\n                - screenshare\n              properties:\n                video:\n                  type: object\n                  description: Configuration options for participant videos\n                  required:\n                    - quality\n                    - frame_rate\n                  properties:\n                    quality:\n                      type: string\n                      enum:\n                        - hd\n                        - vga\n                        - qvga\n                      description: Video quality of participants\n                    frame_rate:\n                      type: integer\n                      maximum: 30\n                      description: Frame rate of participants' video\n                screenshare:\n                  type: object\n                  description: Configuration options for participant screen shares\n                  required:\n                    - quality\n                    - frame_rate\n                  properties:\n                    quality:\n                      type: string\n                      enum:\n                        - hd\n                        - vga\n                        - qvga\n                      description: 'Quality of screen share '\n                    frame_rate:\n                      type: integer\n                      description: Frame rate of screen share\n        permissions:\n          type: object\n          required:\n            - accept_waiting_requests\n            - can_accept_production_requests\n            - can_edit_display_name\n            - can_spotlight\n            - is_recorder\n            - disable_participant_audio\n            - disable_participant_screensharing\n            - disable_participant_video\n            - kick_participant\n            - pin_participant\n            - can_record\n            - waiting_room_type\n            - plugins\n            - connected_meetings\n            - polls\n            - media\n            - chat\n            - hidden_participant\n            - show_participant_list\n            - can_change_participant_permissions\n          properties:\n            accept_waiting_requests:\n              type: boolean\n              description: Whether this participant can accept waiting requests\n            can_accept_production_requests:\n              type: boolean\n            can_edit_display_name:\n              type: boolean\n            can_spotlight:\n              type: boolean\n            is_recorder:\n              type: boolean\n              default: false\n              readOnly: true\n            disable_participant_audio:\n              type: boolean\n            disable_participant_screensharing:\n              type: boolean\n            disable_participant_video:\n              type: boolean\n            kick_participant:\n              type: boolean\n            pin_participant:\n              type: boolean\n            can_record:\n              type: boolean\n            waiting_room_type:\n              type: string\n              enum:\n                - SKIP\n                - ON_PRIVILEGED_USER_ENTRY\n                - SKIP_ON_ACCEPT\n              description: Waiting room type\n            plugins:\n              type: object\n              required:\n                - can_close\n                - can_start\n                - can_edit_config\n                - config\n              description: Plugin permissions\n              properties:\n                can_close:\n                  type: boolean\n                  description: Can close plugins that are already open\n                can_start:\n                  type: boolean\n                  description: Can start plugins\n                can_edit_config:\n                  type: boolean\n                  description: Can edit plugin config\n                config:\n                  oneOf:\n                    - type: string\n                      format: uuid\n                    - type: object\n                      properties:\n                        access_control:\n                          type: string\n                          enum:\n                            - FULL_ACCESS\n                            - VIEW_ONLY\n                        handles_view_only:\n                          type: boolean\n            connected_meetings:\n              type: object\n              required:\n                - can_alter_connected_meetings\n                - can_switch_connected_meetings\n                - can_switch_to_parent_meeting\n              properties:\n                can_alter_connected_meetings:\n                  type: boolean\n                can_switch_connected_meetings:\n                  type: boolean\n                can_switch_to_parent_meeting:\n                  type: boolean\n            polls:\n              type: object\n              required:\n                - can_create\n                - can_vote\n                - can_view\n              description: Poll permissions\n              properties:\n                can_create:\n                  type: boolean\n                  description: Can create polls\n                can_vote:\n                  type: boolean\n                  description: Can vote on polls\n                can_view:\n                  type: boolean\n                  description: Can view polls\n            media:\n              type: object\n              required:\n                - video\n                - audio\n                - screenshare\n              description: Media permissions\n              properties:\n                video:\n                  type: object\n                  required:\n                    - can_produce\n                  description: Video permissions\n                  properties:\n                    can_produce:\n                      type: string\n                      enum:\n                        - ALLOWED\n                        - NOT_ALLOWED\n                        - CAN_REQUEST\n                      description: Can produce video\n                audio:\n                  type: object\n                  required:\n                    - can_produce\n                  description: Audio permissions\n                  properties:\n                    can_produce:\n                      type: string\n                      enum:\n                        - ALLOWED\n                        - NOT_ALLOWED\n                        - CAN_REQUEST\n                      description: Can produce audio\n                screenshare:\n                  type: object\n                  required:\n                    - can_produce\n                  description: Screenshare permissions\n                  properties:\n                    can_produce:\n                      type: string\n                      enum:\n                        - ALLOWED\n                        - NOT_ALLOWED\n                        - CAN_REQUEST\n                      description: Can produce screen share video\n            chat:\n              type: object\n              required:\n                - public\n                - private\n              description: Chat permissions\n              properties:\n                public:\n                  type: object\n                  required:\n                    - can_send\n                    - text\n                    - files\n                  properties:\n                    can_send:\n                      type: boolean\n                      description: Can send messages in general\n                    text:\n                      type: boolean\n                      description: Can send text messages\n                    files:\n                      type: boolean\n                      description: Can send file messages\n                private:\n                  type: object\n                  required:\n                    - can_send\n                    - can_receive\n                    - text\n                    - files\n                  properties:\n                    can_send:\n                      type: boolean\n                    can_receive:\n                      type: boolean\n                    text:\n                      type: boolean\n                    files:\n                      type: boolean\n            hidden_participant:\n              type: boolean\n              description: Whether this participant is visible to others or not\n            show_participant_list:\n              type: boolean\n            can_change_participant_permissions:\n              type: boolean\n      required:\n        - name\n        - config\n        - permissions\n  parameters:\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      style: simple\n      schema:\n        type: string\n        example: application/json\n    streamId:\n      name: stream_id\n      in: path\n      required: true\n      style: simple\n      description: ID of the livestream\n      schema:\n        type: number\n    meetingId:\n      name: meeting_id\n      in: path\n      required: true\n      description: ID of the meeting\n      schema:\n        type: string\n    sessionId:\n      name: session_id\n      in: path\n      required: true\n      description: ID of the session\n      schema:\n        type: string\n    participantId:\n      name: participant_id\n      in: path\n      required: true\n      description: ID of the participant\n      schema:\n        type: string\n    pageNo:\n      name: page_no\n      in: query\n      required: false\n      schema:\n        type: number\n        minimum: 0\n      description: Page number to start from\n      allowEmptyValue: true\n    perPage:\n      name: per_page\n      in: query\n      required: false\n      schema:\n        type: number\n        minimum: 0\n      description: Number of results per page\n      allowEmptyValue: true\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n      description: String to search for\n    sortOrder:\n      name: sort_order\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - ASC\n          - DESC\n    startTime:\n      name: start_time\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n      description: Timestamp to start from\n    endTime:\n      name: end_time\n      in: query\n      required: false\n      schema:\n        type: string\n        format: date-time\n      description: Time to end results at\n    participants:\n      name: participants\n      in: query\n      required: false\n      schema:\n        type: string\n      example: '1:10'\n    status:\n      name: status\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - LIVE\n          - ENDED\n    recordingStatus:\n      name: status\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - INVOKED\n            - RECORDING\n            - UPLOADING\n            - UPLOADED\n      description: Filter by one or more recording status\n      explode: false\n    recordingSortBy:\n      name: sort_by\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - invokedTime\n    participantsSortBy:\n      name: sort_by\n      in: query\n      schema:\n        type: string\n        enum:\n          - joinedAt\n          - duration\n    startDate:\n      name: start_date\n      in: query\n      schema:\n        type: string\n      example: '2022-09-01'\n      description: Date to start from\n    endDate:\n      name: end_date\n      in: query\n      schema:\n        type: string\n      example: '2022-09-22'\n  requestBodies:\n    KickParticipantsBody:\n      description: Request body for kicking participants from an active session. Only one of `participant_id` or `custom_participant_id` is required.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              participant_ids:\n                type: array\n                items:\n                  type: string\n              custom_participant_ids:\n                type: array\n                items:\n                  type: string\n    MuteAllParticipantsBody:\n      description: Request body for muting all participants in an active session.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              allow_unmute:\n                type: boolean\n                description: 'if false, participants won''t be able to unmute themselves after they are muted'\n    CreatePollBody:\n      description: Request body for creating a new poll\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              question:\n                type: string\n                description: Question of the poll\n              options:\n                type: array\n                description: Different options for the question\n                items:\n                  type: string\n              anonymous:\n                type: boolean\n                description: if voters on a poll are anonymous\n              hide_votes:\n                type: boolean\n                description: if votes on an option are visible before a person votes\n    CreateMeetingBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              title:\n                type: string\n                description: Title of the meeting\n                nullable: true\n              preferred_region:\n                type: string\n                enum:\n                  - ap-south-1\n                  - ap-southeast-1\n                  - us-west-1\n                description: Region that this meeting should be created in\n                nullable: true\n              record_on_start:\n                type: boolean\n                default: false\n                description: Whether to start recording this meeting immediately on start\n                nullable: true\n              live_stream_on_start:\n                type: boolean\n                default: false\n                description: Whether to start livestreaming this meeting immediately on start\n                nullable: true\n      description: Create meeting body\n    AddParticipantBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              name:\n                type: string\n                description: Name of the participant. Optional.\n                example: Mary Sue\n                nullable: true\n              picture:\n                type: string\n                example: 'https://i.imgur.com/test.jpg'\n                format: uri\n                description: URL pointing to a picture to use for the participant. Optional.\n                nullable: true\n              preset_name:\n                type: string\n                description: Name of the preset to apply to this participant.\n              client_specific_id:\n                type: string\n                description: ID used internally by the client.\n            required:\n              - preset_name\n              - client_specific_id\n    EditParticipantBody:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              name:\n                type: string\n                example: Jane Doe\n                description: Name of the participant. Optional.\n                nullable: true\n              picture:\n                type: string\n                format: uri\n                description: URL to a picture for the participant. Optional.\n                nullable: true\n              preset_name:\n                type: string\n                description: Name of the preset to apply to this participant. Optional.\n                nullable: true\n    StartRecording:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              meeting_id:\n                type: string\n                format: uuid\n                description: ID of the meeting to record.\n              storage_config:\n                $ref: '#/components/schemas/StorageConfig'\n            required:\n              - meeting_id\n    CreatePresetBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Preset'\n  responses:\n    GetActiveSession:\n      description: Active Session Success response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                $ref: '#/components/schemas/ActiveSession'\n          examples:\n            activeSessionSuccess:\n              $ref: '#/components/examples/GetActiveSessionSuccessResponse'\n    GetActiveSessionNotFound:\n      description: Active Session is not found for the given meetingId\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericErrorResponse'\n          examples:\n            activeSessionNotFound:\n              $ref: '#/components/examples/GetActiveSessionNotFoundResponse'\n    KickParticipants:\n      description: Kick participants success response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  action:\n                    type: string\n                  participants:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/SessionParticipant'\n    ParticipantNotFound:\n      description: No participant found for the given `participant_id` or `custom_participant_id`\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericErrorResponse'\n          examples:\n            participantNotFound:\n              $ref: '#/components/examples/ParticipantNotFoundResponse'\n    KickAllParticipants:\n      description: Kick all participants from a meeeting\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  action:\n                    type: string\n                  kicked_participants_count:\n                    type: number\n    MuteParticipants:\n      description: Mute one or more participants of a meeting\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  action:\n                    type: string\n                  participants:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/SessionParticipant'\n    MuteAllParticipants:\n      description: Mute all participants of a meeting\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  action:\n                    type: string\n                  muted_participants_count:\n                    type: number\n    CreatePoll:\n      description: response for creating a poll\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  action:\n                    type: string\n                  poll:\n                    $ref: '#/components/schemas/Poll'\n    GetSessions:\n      description: Get all sessions success response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  sessions:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ActiveSession'\n    GetSessionDetails:\n      description: Get details about a particular session\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  session:\n                    $ref: '#/components/schemas/ActiveSession'\n    GetSessionParticipants:\n      description: Get participants list of a particular session\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  participants:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ParticipantsList'\n    GetParticipantDetails:\n      description: Returns details of a participant along with callstats data.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  participant:\n                    allOf:\n                      - $ref: '#/components/schemas/ParticipantsList'\n                      - $ref: '#/components/schemas/ParticipantPeerStats'\n                      - $ref: '#/components/schemas/ParticipantQualityStats'\n    GetSessionChat:\n      description: Returns all chat messages of a session.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                $ref: '#/components/schemas/ChatMessage'\n    GetOverallStats:\n      description: Returns overall and daywise stats of an organization\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              success:\n                type: boolean\n              data:\n                type: object\n                properties:\n                  stats:\n                    $ref: '#/components/schemas/OverallStats'\n          example:\n            $ref: '#'\n    GetMeeting:\n      description: Success Response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Meeting'\n    GetAllMeetings:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/PagingResponse'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Meeting'\n    GenericError:\n      description: Failure response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GenericErrorResponse'\n    GetAllParticipants:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/PagingResponse'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Participant'\n    AddParticipant:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    allOf:\n                      - $ref: '#/components/schemas/Participant'\n                      - type: object\n                        properties:\n                          token:\n                            type: string\n                            description: Auth token that can be used for joining a meeting from the client side.\n                        required:\n                          - token\n    GetParticipant:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Participant'\n                required:\n                  - data\n    DeleteParticipant:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      client_specific_id:\n                        type: string\n                      preset_id:\n                        type: string\n                        format: uuid\n                        description: ID of the preset applied to this participant.\n                      created_at:\n                        type: string\n                        format: date-time\n                        description: Timestamp this object was created at.\n                      updated_at:\n                        type: string\n                        format: date-time\n                        description: Timestamp this object was updated at.\n                    required:\n                      - client_specific_id\n                      - preset_id\n                      - created_at\n                      - updated_at\n    RegenToken:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - token\n                    properties:\n                      token:\n                        type: string\n                        description: Regenerated auth token for this participant.\n                required:\n                  - data\n    GetRecordings:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      allOf:\n                        - $ref: '#/components/schemas/Recording'\n                        - type: object\n                          properties:\n                            storage_config:\n                              $ref: '#/components/schemas/StorageConfig'\n                        - type: object\n                          properties:\n                            meeting:\n                              $ref: '#/components/schemas/Meeting'\n    GetRecording:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    allOf:\n                      - $ref: '#/components/schemas/Recording'\n                      - type: object\n                        properties:\n                          storage_config:\n                            $ref: '#/components/schemas/StorageConfig'\n    GetActiveRecording:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Recording'\n                required:\n                  - data\n    GetAllPresets:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/PagingResponse'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PresetListItem'\n    GetPresetBody:\n      description: Success response\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/GenericSuccessResponse'\n              - type: object\n                properties:\n                  data:\n                    allOf:\n                      - type: object\n                        properties:\n                          id:\n                            type: string\n                            format: uuid\n                            description: ID of the preset\n                        required:\n                          - id\n                      - $ref: '#/components/schemas/Preset'\n                required:\n                  - data\n  examples:\n    GetActiveSessionSuccessResponse:\n      summary: Success response for fetching active session\n      value:\n        success: true\n        data:\n          id: 813432c7-3c5a-45e2-9acf-eef7061c7584\n          associated_id: 6bf2b8be-04dd-4191-b602-1128921a306b\n          type: meeting\n          status: LIVE\n          live_participants: 1\n          max_concurrent_participants: 2\n          minutes_consumed: 2.3434\n          started_at: '2022-01-12T14:21:34.388Z'\n          ended_at: 'null'\n          created_at: '2022-01-12T14:21:34.398Z'\n          updated_at: '2022-01-12T14:26:00.784Z'\n    GetActiveSessionNotFoundResponse:\n      summary: Active Session not found\n      value:\n        success: false\n        error:\n          code: 404\n          message: No active session found for meeting_id 6bf2b8be-04dd-4191-b602-1128921a306b\n    ParticipantNotFoundResponse:\n      summary: Participant Not Found\n      value:\n        success: false\n        error:\n          code: 404\n          message: No user found with id 813432c7-3c5a-45e2-9acf-eef7061c7584\n    OverallStatsSuccessResponse:\n      summary: Overall Stats response\n      value:\n        success: true\n        data:\n          stats:\n            dayWise:\n              - date: '2022-09-01'\n                sessions_count: 12\n                sessions_minutes_consumed: 756.12\n                recordings_minutes_consumed: 123.45\n              - date: '2022-09-02'\n                sessions_count: 14\n                sessions_minutes_consumed: 567.11\n                recordings_minutes_consumed: 345.4432\n            total_sessions_count: 26\n            total_sessions_minutes_consumed: 1323.23\n            total_recordings_minutes_consumed: 468.8932\n  securitySchemes:\n    Authorization:\n      type: http\n      scheme: basic\n    Bearer:\n      type: http\n      scheme: bearer\n      description: Provide bearer token for a participant who has permissions for recording. Note that this is only useful for the recording routes\ntags:\n  - name: Meetings\n  - name: Presets\n  - name: Sessions\n  - name: Recordings\n  - name: Webhooks\n  - name: Active session\n  - name: Live streams\n  - name: Analytics\n  - name: Organizations\nexternalDocs:\n  url: 'https://docs.dyte.io'\n  description: ''\nsecurity:\n  - Authorization: []\n",
			"canonicalURL": "/github.com/dyte-in/docs@d67bbbebef35b9b22b5b9b89493a62b00a8a94bf/-/blob/static/api/v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dyte-in/docs/blob/d67bbbebef35b9b22b5b9b89493a62b00a8a94bf/static/api/v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/orgs\": get: operation \"getAllOrgs\": security: at static/api/v2.yaml:1128:11: unknown security scheme \"userAuth\""
}