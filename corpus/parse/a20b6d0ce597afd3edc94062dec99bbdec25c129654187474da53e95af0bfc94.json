{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aerogear/charmil-host-example"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "pkg/api/ams/amsclient/api/openapi.yaml",
			"byteSize": 230654,
			"content": "openapi: 3.0.0\ninfo:\n  description: Manage user subscriptions and clusters\n  title: Account Management Service API\n  version: 0.0.1\nservers:\n- description: Main (production) server\n  url: https://api.openshift.com\n- description: Staging server\n  url: https://api.stage.openshift.com\n- description: current domain\n  url: /\npaths:\n  /api/accounts_mgmt/v1/access_token:\n    post:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessTokenCfg'\n          description: access token from registries in docker format\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cannot find registry\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Return access token generated from registries in docker format\n  /api/accounts_mgmt/v1/accounts:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Supplies a comma-separated list of fields to be returned.\n          Fields of sub-structures and of arrays use \u003cstructure\u003e.\u003cfield\u003e notation.\n          \u003cstucture\u003e.* means all field of a structure\n          Example: For each Subscription to get id, href, plan(id and kind) and labels (all fields)\n\n          ```\n          ocm get subscriptions --parameter fields=id,href,plan.id,plan.kind,labels.* --parameter fetchLabels=true\n          ```\n        explode: true\n        in: query\n        name: fields\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the capabilities on a subscription in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchCapabilities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountList'\n          description: A JSON array of account objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of accounts\n    post:\n      parameters:\n      - description: If true, instructs API to avoid making any changes, but rather\n          run through validations only.\n        explode: true\n        in: query\n        name: dryRun\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Account'\n        description: Account data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Account can be created without dryRun parameter\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Account already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating the account\n      security:\n      - Bearer: []\n      summary: Create a new account\n  /api/accounts_mgmt/v1/accounts/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the capabilities on a subscription in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchCapabilities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Account found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No account with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get an account by id\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountPatchRequest'\n        description: Updated account data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Account updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No account with specified id exists\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Account already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating account\n      security:\n      - Bearer: []\n      summary: Update an account\n  /api/accounts_mgmt/v1/accounts/{id}/labels:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelList'\n          description: A JSON array of label\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of labels\n    post:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: Label data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Created or updated label successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating the label\n      security:\n      - Bearer: []\n      summary: Create a new label or update an existing label\n  /api/accounts_mgmt/v1/accounts/{id}/labels/{key}:\n    delete:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Label successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No label with specified key on specified organizations id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the label\n      security:\n      - Bearer: []\n      summary: Delete a label\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Labels found by key\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No label with specified key on specified organizations id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get subscription labels by label key\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: Label data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Created or updated label successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Label already exists and cannot be updated\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating organizations label\n      security:\n      - Bearer: []\n      summary: Create a new label or update an existing label\n  /api/accounts_mgmt/v1/cluster_authorizations:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClusterAuthorizationRequest'\n        description: Cluster and authorization data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterAuthorizationResponse'\n          description: The authorization is successful, the requested cluster has\n            a valid subscription and is within resource limits.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: AMS subscription exists but is associated with another account\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: The limits for this subscription are exceeded.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Other cluster authorization error\n      security:\n      - Bearer: []\n      summary: Authorizes new cluster creation against an exsiting RH Subscription.\n  /api/accounts_mgmt/v1/cluster_registrations:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClusterRegistrationRequest'\n        description: Cluster and authorization data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterRegistrationResponse'\n          description: A cluster with the specified cluster_id exists and belongs\n            to the user with the specified registry credential token\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterRegistrationResponse'\n          description: No cluster with the specified cluster exists, one was successfully\n            created and associated with the account with the specified registry credential\n            token\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Registry credential token is invalid\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cluster with specified cluster_id already associated with another\n            user\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: cluster_id provided is invalid\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Too many clusters have been associated with this user recently\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Other cluster registration error\n      security:\n      - Bearer: []\n      summary: Finds or creates a cluster registration with a registy credential token\n        and cluster ID\n  /api/accounts_mgmt/v1/current_account:\n    get:\n      parameters:\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Account found via JWT\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get the authenticated account\n  /api/accounts_mgmt/v1/errors:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorList'\n          description: A JSON array or errors\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      summary: Returns a list of errors\n  /api/accounts_mgmt/v1/errors/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Error found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No error with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      summary: Get an error by id\n  /api/accounts_mgmt/v1/feature_toggles/{id}/query:\n    post:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FeatureToggleQueryRequest'\n        description: The context of the query\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FeatureToggle'\n          description: Feature toggle found by id\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Query a feature toggle by id\n  /api/accounts_mgmt/v1/labels:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelList'\n          description: A JSON array of label objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of labels\n  /api/accounts_mgmt/v1/metrics:\n    get:\n      parameters:\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsList'\n          description: A JSON array of metrics objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of metrics\n  /api/accounts_mgmt/v1/notify:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRequest'\n        description: The contents of the notification to send to the owner of a cluster/subscription\n          in addition to the set of template parameters which are sent automatically\n          ACCOUNT_USERNAME, FIRST_NAME, LAST_NAME, ORGANIZATION_NAME, ORGANIZATION_EXTERNAL_ID\n        required: true\n      responses:\n        \"202\":\n          description: Notification created and queued to be sent soon\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Notify the owner of cluster/subscription\n  /api/accounts_mgmt/v1/organizations:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the capabilities on a subscription in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchCapabilities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |-\n          Supplies a comma-separated list of fields to be returned.\n          Fields of sub-structures and of arrays use \u003cstructure\u003e.\u003cfield\u003e notation.\n          \u003cstucture\u003e.* means all field of a structure\n          Example: For each Subscription to get id, href, plan(id and kind) and labels (all fields)\n\n          ```\n          ocm get subscriptions --parameter fields=id,href,plan.id,plan.kind,labels.* --parameter fetchLabels=true\n          ```\n        explode: true\n        in: query\n        name: fields\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationList'\n          description: A JSON array of organization objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of organizations\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n        description: Organization data\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Organization already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating the organization\n      security:\n      - Bearer: []\n      summary: Create a new organization\n  /api/accounts_mgmt/v1/organizations/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the capabilities on a subscription in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchCapabilities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n          description: Organization found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No organization with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get an organization by id\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OrganizationPatchRequest'\n        description: Updated organization data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n          description: Organization updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No organization with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating organization\n      security:\n      - Bearer: []\n      summary: Update an organization\n  /api/accounts_mgmt/v1/organizations/{id}/labels:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelList'\n          description: A JSON array of label\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of labels\n    post:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: Label data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Created or updated label successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating the label\n      security:\n      - Bearer: []\n      summary: Create a new label or update an existing label\n  /api/accounts_mgmt/v1/organizations/{id}/labels/{key}:\n    delete:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Label successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No label with specified key on specified organizations id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the label\n      security:\n      - Bearer: []\n      summary: Delete a label\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Labels found by key\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No label with specified key on specified organizations id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get subscription labels by label key\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: Label data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Created or updated label successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Label already exists and cannot be updated\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating organizations label\n      security:\n      - Bearer: []\n      summary: Create a new label or update an existing label\n  /api/accounts_mgmt/v1/organizations/{id}/summary_dashboard:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Summary'\n          description: A JSON array of metrics objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a summary of organizations clusters based on metrics\n  /api/accounts_mgmt/v1/organizations/{orgId}/quota_cost:\n    get:\n      parameters:\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: If true, includes the related resources in the output. Could\n          slow request response time.\n        explode: true\n        in: query\n        name: fetchRelatedResources\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuotaCostList'\n          description: A JSON array of QuotaCost objects\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No organization with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred when getting this resource\n      security:\n      - Bearer: []\n      summary: Returns a summary of quota cost\n  /api/accounts_mgmt/v1/organizations/{orgId}/quota_summary:\n    get:\n      deprecated: true\n      parameters:\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QuotaSummaryList'\n          description: A JSON array of QuotaSummary objects\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No organization with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred when getting this resource\n      security:\n      - Bearer: []\n      summary: Returns a summary of resource quota\n  /api/accounts_mgmt/v1/organizations/{orgId}/resource_quota:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceQuotaList'\n          description: A JSON array of ResourceQuota objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No organization with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred when getting this resource\n      security:\n      - Bearer: []\n      summary: Returns a list of resource quota objects\n    post:\n      parameters:\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceQuotaRequest'\n        description: Resource quota data\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceQuota'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: ResourceQuota already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating the resource quota\n      security:\n      - Bearer: []\n      summary: Create a new resource quota\n  /api/accounts_mgmt/v1/organizations/{orgId}/resource_quota/{quotaId}:\n    delete:\n      parameters:\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of quota\n        explode: false\n        in: path\n        name: quotaId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Resource Quota successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Resource Quota with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the Resource Quota\n      security:\n      - Bearer: []\n      summary: Delete a resource quota\n    get:\n      parameters:\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of quota\n        explode: false\n        in: path\n        name: quotaId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceQuota'\n          description: Resource quota found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No resource quota with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred when getting this resource\n      security:\n      - Bearer: []\n      summary: Get a resource quota by id\n    patch:\n      parameters:\n      - description: The id of organization\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of quota\n        explode: false\n        in: path\n        name: quotaId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceQuotaRequest'\n        description: Updated resource quota data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceQuota'\n          description: Resource Quota updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No resource quota with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating resource quota\n      security:\n      - Bearer: []\n      summary: Update a resource quota\n  /api/accounts_mgmt/v1/plans:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanList'\n          description: Plans list\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get all plans\n  /api/accounts_mgmt/v1/plans/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plan'\n          description: Plan found\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No plan with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a plan by id\n  /api/accounts_mgmt/v1/pull_secrets:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PullSecretRequest'\n        description: Identifier of the resource in the external service that this\n          pull secret relates to\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessTokenCfg'\n          description: access token from registries in docker format\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Cannot find registry\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Return access token generated from registries in docker format\n  /api/accounts_mgmt/v1/pull_secrets/{externalResourceId}:\n    delete:\n      parameters:\n      - description: The external resource id of record\n        explode: false\n        in: path\n        name: externalResourceId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Pull secret successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to delete pull secret\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No Pull secret with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the pull secret\n      security:\n      - Bearer: []\n      summary: Delete a pull secret\n  /api/accounts_mgmt/v1/registries:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryList'\n          description: A JSON array of registry objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of registries\n  /api/accounts_mgmt/v1/registries/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Registry'\n          description: Registry found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No registry with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get an registry by id\n  /api/accounts_mgmt/v1/registry_credentials:\n    get:\n      description: List Registry Credentials\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryCredentialList'\n          description: A JSON array of RegistryCredential objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not allowed to list RegistryCredentials\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistryCredential'\n        description: Registry credential data\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryCredential'\n          description: Registry credential created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not allowed to create RegistryCredentials\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: A RegistryCredential with this type already exists for this\n            user\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unable to create Registry Credential\n      security:\n      - Bearer: []\n      summary: Request the creation of a registry credential\n  /api/accounts_mgmt/v1/registry_credentials/{id}:\n    delete:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Registry credential successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No registry credential with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the registry credential\n      security:\n      - Bearer: []\n      summary: Delete a registry credential by id\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryCredential'\n          description: Registry credential found\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No registry credential with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a registry credentials by id\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistryCredentialPatchRequest'\n        description: Updated registry credential data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegistryCredential'\n          description: Registry credential updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not allowed to update registry credential or the specified\n            field(s)\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No registry credential with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating registry credential\n      security:\n      - Bearer: []\n      summary: Update a registry credential\n  /api/accounts_mgmt/v1/reserved_resources:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReservedResourceList'\n          description: A JSON array of reserved resource objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of reserved resources\n  /api/accounts_mgmt/v1/resource_quota:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceQuotaList'\n          description: A JSON array of ResourceQuota objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred when getting this resource\n      security:\n      - Bearer: []\n      summary: Returns a list of resource quota objects\n  /api/accounts_mgmt/v1/role_bindings:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleBindingList'\n          description: A JSON array of role binding objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of role bindings\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleBindingCreateRequest'\n        description: Role binding data\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleBinding'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Role binding already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating role binding\n      security:\n      - Bearer: []\n      summary: Create a new role binding\n  /api/accounts_mgmt/v1/role_bindings/{id}:\n    delete:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Role binding successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No role binding with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the role binding\n      security:\n      - Bearer: []\n      summary: Delete a role binding\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleBinding'\n          description: Role binding found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No role binding with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a role binding\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RoleBindingRequest'\n        description: Updated role binding data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleBinding'\n          description: Role Binding updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No role binding with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating role binding\n      security:\n      - Bearer: []\n      summary: Update a role binding\n  /api/accounts_mgmt/v1/roles:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleList'\n          description: A JSON array of role objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of roles\n  /api/accounts_mgmt/v1/roles/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Role'\n          description: Role found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No role with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a role by id\n  /api/accounts_mgmt/v1/sku_rules:\n    get:\n      parameters:\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SkuRulesList'\n          description: A JSON array of sku rules objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of UHC product SKU Rules\n  /api/accounts_mgmt/v1/sku_rules/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SkuRules'\n          description: sku rules found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No sku rules with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a sku rules by id\n  /api/accounts_mgmt/v1/skus:\n    get:\n      parameters:\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SkuList'\n          description: A JSON array of sku objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of UHC product SKUs\n  /api/accounts_mgmt/v1/skus/{id}:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SKU'\n          description: sku found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No sku with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a sku by id\n  /api/accounts_mgmt/v1/subscriptions:\n    get:\n      parameters:\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: If true, includes the account reference information in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchAccounts\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the capabilities on a subscription in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchCapabilities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: |-\n          Supplies a comma-separated list of fields to be returned.\n          Fields of sub-structures and of arrays use \u003cstructure\u003e.\u003cfield\u003e notation.\n          \u003cstucture\u003e.* means all field of a structure\n          Example: For each Subscription to get id, href, plan(id and kind) and labels (all fields)\n\n          ```\n          ocm get subscriptions --parameter fields=id,href,plan.id,plan.kind,labels.* --parameter fetchLabels=true\n          ```\n        explode: true\n        in: query\n        name: fields\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the criteria to filter the subscription resource based on their labels.\n          A label is represented as a `key=value` pair,\n\n          ```\n          labels = \"foo=bar\"\n          ```\n\n          and multiple labels are separated by comma,\n\n          ```\n          labels = \"foo=bar,fooz=barz\"\n          ```\n        explode: true\n        in: query\n        name: labels\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionList'\n          description: A JSON array of subscription objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of subscriptions\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionCreateRequest'\n        description: Subscription Creation data\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Subscription already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating subscription\n      security:\n      - Bearer: []\n      summary: Create a new subscription\n  /api/accounts_mgmt/v1/subscriptions/{id}:\n    delete:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: Subscription deprovisioned by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No subscription with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Deletes a subscription by id\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: If true, includes the account reference information in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchAccounts\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the labels on a subscription/organization/account\n          in the output. Could slow request response time.\n        explode: true\n        in: query\n        name: fetchLabels\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, includes the capabilities on a subscription in the output.\n          Could slow request response time.\n        explode: true\n        in: query\n        name: fetchCapabilities\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: If true, fetches, from the clusters service, the total numbers\n          of CPU's and sockets under an obligation, and includes in the output. Could\n          slow request response time.\n        explode: true\n        in: query\n        name: fetchCpuAndSocket\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: Subscription found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No subscription with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get a subscription by id\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPatchRequest'\n        description: Updated subscription data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: Subscription updated successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not allowed to update subscriptions or the specified field(s)\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No subscription with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating subscription\n      security:\n      - Bearer: []\n      summary: Update a subscription\n  /api/accounts_mgmt/v1/subscriptions/{id}/labels:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LabelList'\n          description: A JSON array of label\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of labels\n    post:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: Label data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Created or updated label successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating the label\n      security:\n      - Bearer: []\n      summary: Create a new label or update an existing label\n  /api/accounts_mgmt/v1/subscriptions/{id}/labels/{key}:\n    delete:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Label successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No label with specified key on specified subscription id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the label\n      security:\n      - Bearer: []\n      summary: Delete a label\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Labels found by key\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No label with specified key on specified subscription id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get subscription labels by label key\n    patch:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The key of the label\n        explode: false\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n        description: Label data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: Created or updated label successfully\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Label already exists and cannot be updated\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error updating subscription label\n      security:\n      - Bearer: []\n      summary: Create a new label or update an existing label\n  /api/accounts_mgmt/v1/subscriptions/{id}/notify:\n    post:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationRequest'\n        description: The contents of the notification to send to the owner of a subscription\n          in addition to the set of template parameters which are sent automatically\n          ACCOUNT_USERNAME, FIRST_NAME, LAST_NAME, ORGANIZATION_NAME, ORGANIZATION_EXTERNAL_ID\n        required: true\n      responses:\n        \"202\":\n          description: Notification created and queued to be sent soon\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Notify the owner of a subscription\n  /api/accounts_mgmt/v1/subscriptions/{id}/reserved_resources:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReservedResourceList'\n          description: A JSON array of reserved resource objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of reserved resources\n  /api/accounts_mgmt/v1/subscriptions/{id}/support_cases:\n    get:\n      parameters:\n      - description: The id of record\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          description: A JSON array of support cases objects\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of open support creates opened against the external\n        cluster id of this subscrption\n  /api/accounts_mgmt/v1/subscriptions/{subId}/notification_contacts:\n    get:\n      parameters:\n      - description: The id of subscription\n        explode: false\n        in: path\n        name: subId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Page number of record list when record list exceeds specified\n          page size\n        explode: true\n        in: query\n        name: page\n        required: false\n        schema:\n          default: 1\n          minimum: 1\n          type: integer\n        style: form\n      - description: Maximum number of records to return\n        explode: true\n        in: query\n        name: size\n        required: false\n        schema:\n          default: 100\n          minimum: 0\n          type: integer\n        style: form\n      - description: |-\n          Specifies the search criteria. The syntax of this parameter is\n          similar to the syntax of the _where_ clause of an SQL statement,\n          using the names of the json attributes / column names of the account.\n          For example, in order to retrieve all the accounts with a username\n          starting with `my`:\n\n          ```sql\n          username like 'my%'\n          ```\n\n          The search criteria can also be applied on related resource.\n          For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n          ```sql\n          labels.key = 'foo' and labels.value = 'bar'\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          all the accounts that the user has permission to see will be\n          returned.\n        explode: true\n        in: query\n        name: search\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Supplies a comma-separated list of fields to be returned.\n          Fields of sub-structures and of arrays use \u003cstructure\u003e.\u003cfield\u003e notation.\n          \u003cstucture\u003e.* means all field of a structure\n          Example: For each Subscription to get id, href, plan(id and kind) and labels (all fields)\n\n          ```\n          ocm get subscriptions --parameter fields=id,href,plan.id,plan.kind,labels.* --parameter fetchLabels=true\n          ```\n        explode: true\n        in: query\n        name: fields\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: |-\n          Specifies the order by criteria. The syntax of this parameter is\n          similar to the syntax of the _order by_ clause of an SQL statement,\n          but using the names of the json attributes / column of the account.\n          For example, in order to retrieve all accounts ordered by username:\n\n          ```sql\n          username asc\n          ```\n\n          Or in order to retrieve all accounts ordered by username _and_ first name:\n\n          ```sql\n          username asc, firstName asc\n          ```\n\n          If the parameter isn't provided, or if the value is empty, then\n          no explicit ordering will be applied.\n        explode: true\n        in: query\n        name: orderBy\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountList'\n          description: A JSON array of account objects that are notification contacts\n            for this subscription\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Returns a list of notification contacts for the given subscription\n    post:\n      parameters:\n      - description: The id of subscription\n        explode: false\n        in: path\n        name: subId\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NotificationContactCreateRequest'\n        description: Add a notification contact by an account's username\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Account'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Notification contact already exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred creating notification contact\n      security:\n      - Bearer: []\n      summary: Add an account as a notification contact to this subscription\n  /api/accounts_mgmt/v1/subscriptions/{subId}/notification_contacts/{accountId}:\n    delete:\n      parameters:\n      - description: The id of subscription\n        explode: false\n        in: path\n        name: subId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of account\n        explode: false\n        in: path\n        name: accountId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: Notification contact deleted by subscription and account id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No notification contact with specified subscription and account\n            id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Deletes a notification contact by subscription and account id\n  /api/accounts_mgmt/v1/subscriptions/{subId}/reserved_resources/{reservedResourceId}:\n    get:\n      parameters:\n      - description: The id of subscription\n        explode: false\n        in: path\n        name: subId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The id of reserved resource\n        explode: false\n        in: path\n        name: reservedResourceId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReservedResource'\n          description: Reserved resources found by id\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No reserved resources with specified id exists\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: Get reserved resources by id\n  /api/accounts_mgmt/v1/support_cases:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SupportCasesRequest'\n        description: The contents of the support case to be created\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SupportCasesCreatedResponse'\n          description: Support case created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred\n      security:\n      - Bearer: []\n      summary: create a support case for the subscription\n  /api/accounts_mgmt/v1/support_cases/{caseId}:\n    delete:\n      parameters:\n      - description: The id of a support case\n        explode: false\n        in: path\n        name: caseId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Support case successfully deleted\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: No support case with specified case id on specified subscription\n            id exists\n        \"405\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Not allowed to close a case that is already closed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: An unexpected error occurred deleting the support case\n      security:\n      - Bearer: []\n      summary: Delete a support case\n  /api/accounts_mgmt/v1/token_authorization:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenAuthorizationRequest'\n        description: Token authorization data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenAuthorizationResponse'\n          description: The account belongs to the user with the specified registry\n            credential token\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Registry credential token is invalid\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Other token authorization error\n      security:\n      - Bearer: []\n      summary: Finds the account owner of the provided token\n  /api/authorizations/v1/access_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessReview'\n        description: Access review data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessReviewResponse'\n          description: Review successfully generated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported action, non-existent resource type, or non-existent\n            account\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating access review\n      security:\n      - Bearer: []\n      summary: Review an account's access to perform an action on a particular resource\n        or resource type\n  /api/authorizations/v1/capability_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CapabilityReviewRequest'\n        description: Capability review data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CapabilityReview'\n          description: Successful review\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform capability reviews\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating capability review\n      security:\n      - Bearer: []\n      summary: Review an account's capabilities\n  /api/authorizations/v1/export_control_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportControlReviewRequest'\n        description: Export control review data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportControlReview'\n          description: Successful review\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating access review\n      security:\n      - Bearer: []\n      summary: |\n        Determine whether a user is restricted from downloading Red Hat software based on export control compliance.\n  /api/authorizations/v1/resource_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceReviewRequest'\n        description: Resource review data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceReview'\n          description: Successful review\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform resource reviews\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported action or non-existent resource type\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating access review\n      security:\n      - Bearer: []\n      summary: Obtain resource ids for resources an account may perform the specified\n        action upon. Resource ids returned as [\"*\"] is shorthand for all ids.\n  /api/authorizations/v1/self_access_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SelfAccessReview'\n        description: Self access review data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessReviewResponse'\n          description: Review successfully generated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported action or non-existent resource type\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating access review\n      security:\n      - Bearer: []\n      summary: Review your ability to perform an action on a particular resource or\n        resource type\n  /api/authorizations/v1/self_resource_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SelfResourceReviewRequest'\n        description: Self resource review data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SelfResourceReview'\n          description: Successful review\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform self resource reviews\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported action or non-existent resource type\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating access review\n      security:\n      - Bearer: []\n      summary: Obtain resource ids for resources you may perform the specified action\n        upon. Resource ids returned as [\"*\"] is shorthand for all ids.\n  /api/authorizations/v1/self_terms_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SelfTermsReview'\n        description: Data to check self terms for\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TermsReviewResponse'\n          description: Review successfully generated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported action or non-existent resource type\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating terms review\n      security:\n      - Bearer: []\n      summary: Review your status of Terms\n  /api/authorizations/v1/terms_review:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TermsReview'\n        description: Data to check terms for\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TermsReviewResponse'\n          description: Review successfully generated\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Validation errors occurred\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Auth token is invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unauthorized to perform operation\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unsupported action, non-existent resource type, or non-existent\n            account\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Unexpected error occurred while generating terms review\n      security:\n      - Bearer: []\n      summary: Review an account's status of Terms\ncomponents:\n  parameters:\n    accountId:\n      description: The id of account\n      explode: false\n      in: path\n      name: accountId\n      required: true\n      schema:\n        type: string\n      style: simple\n    caseId:\n      description: The id of a support case\n      explode: false\n      in: path\n      name: caseId\n      required: true\n      schema:\n        type: string\n      style: simple\n    dryRun:\n      description: If true, instructs API to avoid making any changes, but rather\n        run through validations only.\n      explode: true\n      in: query\n      name: dryRun\n      required: false\n      schema:\n        type: boolean\n      style: form\n    externalResourceId:\n      description: The external resource id of record\n      explode: false\n      in: path\n      name: externalResourceId\n      required: true\n      schema:\n        type: string\n      style: simple\n    fetchAccounts:\n      description: If true, includes the account reference information in the output.\n        Could slow request response time.\n      explode: true\n      in: query\n      name: fetchAccounts\n      required: false\n      schema:\n        type: boolean\n      style: form\n    fetchCapabilities:\n      description: If true, includes the capabilities on a subscription in the output.\n        Could slow request response time.\n      explode: true\n      in: query\n      name: fetchCapabilities\n      required: false\n      schema:\n        type: boolean\n      style: form\n    fetchCpuAndSocket:\n      description: If true, fetches, from the clusters service, the total numbers\n        of CPU's and sockets under an obligation, and includes in the output. Could\n        slow request response time.\n      explode: true\n      in: query\n      name: fetchCpuAndSocket\n      required: false\n      schema:\n        type: boolean\n      style: form\n    fetchLabels:\n      description: If true, includes the labels on a subscription/organization/account\n        in the output. Could slow request response time.\n      explode: true\n      in: query\n      name: fetchLabels\n      required: false\n      schema:\n        type: boolean\n      style: form\n    fetchRelatedResources:\n      description: If true, includes the related resources in the output. Could slow\n        request response time.\n      explode: true\n      in: query\n      name: fetchRelatedResources\n      required: false\n      schema:\n        type: boolean\n      style: form\n    fields:\n      description: |-\n        Supplies a comma-separated list of fields to be returned.\n        Fields of sub-structures and of arrays use \u003cstructure\u003e.\u003cfield\u003e notation.\n        \u003cstucture\u003e.* means all field of a structure\n        Example: For each Subscription to get id, href, plan(id and kind) and labels (all fields)\n\n        ```\n        ocm get subscriptions --parameter fields=id,href,plan.id,plan.kind,labels.* --parameter fetchLabels=true\n        ```\n      explode: true\n      in: query\n      name: fields\n      required: false\n      schema:\n        type: string\n      style: form\n    id:\n      description: The id of record\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n      style: simple\n    key:\n      description: The key of the label\n      explode: false\n      in: path\n      name: key\n      required: true\n      schema:\n        type: string\n      style: simple\n    labels:\n      description: |-\n        Specifies the criteria to filter the subscription resource based on their labels.\n        A label is represented as a `key=value` pair,\n\n        ```\n        labels = \"foo=bar\"\n        ```\n\n        and multiple labels are separated by comma,\n\n        ```\n        labels = \"foo=bar,fooz=barz\"\n        ```\n      explode: true\n      in: query\n      name: labels\n      required: false\n      schema:\n        type: string\n      style: form\n    orderBy:\n      description: |-\n        Specifies the order by criteria. The syntax of this parameter is\n        similar to the syntax of the _order by_ clause of an SQL statement,\n        but using the names of the json attributes / column of the account.\n        For example, in order to retrieve all accounts ordered by username:\n\n        ```sql\n        username asc\n        ```\n\n        Or in order to retrieve all accounts ordered by username _and_ first name:\n\n        ```sql\n        username asc, firstName asc\n        ```\n\n        If the parameter isn't provided, or if the value is empty, then\n        no explicit ordering will be applied.\n      explode: true\n      in: query\n      name: orderBy\n      required: false\n      schema:\n        type: string\n      style: form\n    orgId:\n      description: The id of organization\n      explode: false\n      in: path\n      name: orgId\n      required: true\n      schema:\n        type: string\n      style: simple\n    page:\n      description: Page number of record list when record list exceeds specified page\n        size\n      explode: true\n      in: query\n      name: page\n      required: false\n      schema:\n        default: 1\n        minimum: 1\n        type: integer\n      style: form\n    quotaId:\n      description: The id of quota\n      explode: false\n      in: path\n      name: quotaId\n      required: true\n      schema:\n        type: string\n      style: simple\n    reservedResourceId:\n      description: The id of reserved resource\n      explode: false\n      in: path\n      name: reservedResourceId\n      required: true\n      schema:\n        type: string\n      style: simple\n    search:\n      description: |-\n        Specifies the search criteria. The syntax of this parameter is\n        similar to the syntax of the _where_ clause of an SQL statement,\n        using the names of the json attributes / column names of the account.\n        For example, in order to retrieve all the accounts with a username\n        starting with `my`:\n\n        ```sql\n        username like 'my%'\n        ```\n\n        The search criteria can also be applied on related resource.\n        For example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n        ```sql\n        labels.key = 'foo' and labels.value = 'bar'\n        ```\n\n        If the parameter isn't provided, or if the value is empty, then\n        all the accounts that the user has permission to see will be\n        returned.\n      explode: true\n      in: query\n      name: search\n      required: false\n      schema:\n        type: string\n      style: form\n    size:\n      description: Maximum number of records to return\n      explode: true\n      in: query\n      name: size\n      required: false\n      schema:\n        default: 100\n        minimum: 0\n        type: integer\n      style: form\n    subId:\n      description: The id of subscription\n      explode: false\n      in: path\n      name: subId\n      required: true\n      schema:\n        type: string\n      style: simple\n  schemas:\n    AccessReview:\n      example:\n        subscription_id: subscription_id\n        cluster_id: cluster_id\n        cluster_uuid: cluster_uuid\n        account_username: account_username\n        organization_id: organization_id\n        resource_type: AddOn\n        action: get\n      properties:\n        account_username:\n          type: string\n        action:\n          enum:\n          - get\n          - list\n          - create\n          - delete\n          - update\n          type: string\n        cluster_id:\n          type: string\n        cluster_uuid:\n          type: string\n        organization_id:\n          type: string\n        resource_type:\n          enum:\n          - AddOn\n          - Flavour\n          - Account\n          - AccountPool\n          - Cluster\n          - Plan\n          - Subscription\n          - Organization\n          - Role\n          - Permission\n          - RoleBinding\n          - Registry\n          - RegistryCredential\n          - CurrentAccount\n          - AccessReview\n          - SelfAcccessReview\n          - ResourceReview\n          - SelfResourceReview\n          - ClusterRegistration\n          - AccessToken\n          - ClusterAuthorization\n          - SelfManagedCluster\n          - RedhatManagedCluster\n          - ExportControlReview\n          - ClusterLog\n          - ClusterCredential\n          - ClusterMetric\n          - ResourceQuota\n          - ReservedResource\n          - Dashboard\n          - ClusterProviderAndRegion\n          - ServiceLog\n          - InternalServiceLog\n          - CSLogs\n          - QuotaSummary\n          - SubscriptionLabel\n          - OrganizationLabel\n          - SubscriptionLabelInternal\n          - SelfAccessReview\n          - SubscriptionInternal\n          type: string\n        subscription_id:\n          type: string\n      required:\n      - account_username\n      - action\n      - resource_type\n      type: object\n    AccessReviewResponse:\n      example:\n        subscription_id: subscription_id\n        cluster_id: cluster_id\n        account_id: account_id\n        cluster_uuid: cluster_uuid\n        allowed: true\n        organization_id: organization_id\n        resource_type: AddOn\n        action: get\n      properties:\n        account_id:\n          type: string\n        action:\n          enum:\n          - get\n          - list\n          - create\n          - delete\n          - update\n          type: string\n        allowed:\n          type: boolean\n        cluster_id:\n          type: string\n        cluster_uuid:\n          type: string\n        organization_id:\n          type: string\n        resource_type:\n          enum:\n          - AddOn\n          - Flavour\n          - Account\n          - AccountPool\n          - Cluster\n          - Plan\n          - Subscription\n          - Organization\n          - Role\n          - Permission\n          - RoleBinding\n          - Registry\n          - RegistryCredential\n          - CurrentAccount\n          - AccessReview\n          - SelfAcccessReview\n          - ResourceReview\n          - SelfResourceReview\n          - ClusterRegistration\n          - AccessToken\n          - ClusterAuthorization\n          - SelfManagedCluster\n          - RedhatManagedCluster\n          - ExportControlReview\n          - ClusterLog\n          - ClusterCredential\n          - ClusterMetric\n          - ResourceQuota\n          - ReservedResource\n          - Dashboard\n          - ClusterProviderAndRegion\n          - ServiceLog\n          - InternalServiceLog\n          - CSLogs\n          - QuotaSummary\n          - SubscriptionLabel\n          - OrganizationLabel\n          - SubscriptionLabelInternal\n          - SelfAccessReview\n          - SubscriptionInternal\n          type: string\n        subscription_id:\n          type: string\n      required:\n      - allowed\n      type: object\n    AccessTokenCfg:\n      example:\n        auths:\n          key: '{}'\n      properties:\n        auths:\n          additionalProperties: true\n          type: object\n      required:\n      - auths\n      type: object\n    Account:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Account_allOf'\n    AccountList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/AccountList_allOf'\n    AccountPatchRequest:\n      example:\n        service_account: true\n        ban_code: ban_code\n        organization_id: organization_id\n        last_name: last_name\n        ban_description: ban_description\n        banned: true\n        first_name: first_name\n        email: email\n      properties:\n        ban_code:\n          type: string\n        ban_description:\n          type: string\n        banned:\n          type: boolean\n        email:\n          format: email\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        organization_id:\n          type: string\n        service_account:\n          type: boolean\n      type: object\n    AccountReference:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/AccountReference_allOf'\n    Capability:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Capability_allOf'\n    CapabilityReview:\n      example:\n        result: result\n      properties:\n        result:\n          type: string\n      required:\n      - result\n      type: object\n    CapabilityReviewRequest:\n      example:\n        subscription_id: subscription_id\n        capability: manage_cluster_admin\n        cluster_id: cluster_id\n        account_username: account_username\n        organization_id: organization_id\n        type: Cluster\n      properties:\n        account_username:\n          type: string\n        capability:\n          enum:\n          - manage_cluster_admin\n          type: string\n        cluster_id:\n          type: string\n        organization_id:\n          type: string\n        subscription_id:\n          type: string\n        type:\n          enum:\n          - Cluster\n          type: string\n      required:\n      - account_username\n      - capability\n      - type\n      type: object\n    ClusterAuthorizationRequest:\n      example:\n        availability_zone: availability_zone\n        byoc: true\n        resources:\n        - null\n        - null\n        display_name: display_name\n        cloud_account_id: cloud_account_id\n        cluster_id: cluster_id\n        disconnected: true\n        managed: true\n        account_username: account_username\n        product_id: osd\n        reserve: true\n        cloud_provider_id: cloud_provider_id\n        external_cluster_id: external_cluster_id\n        product_category: assistedInstall\n      properties:\n        account_username:\n          type: string\n        availability_zone:\n          type: string\n        byoc:\n          type: boolean\n        cloud_account_id:\n          type: string\n        cloud_provider_id:\n          type: string\n        cluster_id:\n          type: string\n        disconnected:\n          type: boolean\n        display_name:\n          type: string\n        external_cluster_id:\n          type: string\n        managed:\n          type: boolean\n        product_category:\n          enum:\n          - assistedInstall\n          type: string\n        product_id:\n          default: osd\n          enum:\n          - ocp\n          - osd\n          - osdtrial\n          - moa\n          - rhmi\n          type: string\n        reserve:\n          type: boolean\n        resources:\n          items:\n            $ref: '#/components/schemas/ReservedResource'\n          type: array\n      required:\n      - account_username\n      - cluster_id\n      type: object\n    ClusterAuthorizationResponse:\n      example:\n        allowed: true\n        organization_id: organization_id\n        subscription:\n          kind: kind\n          href: href\n          id: id\n        excess_resources:\n        - null\n        - null\n      properties:\n        allowed:\n          type: boolean\n        excess_resources:\n          items:\n            $ref: '#/components/schemas/ExcessResource'\n          type: array\n        organization_id:\n          type: string\n        subscription:\n          $ref: '#/components/schemas/ObjectReference'\n      required:\n      - allowed\n      - excess_resources\n      type: object\n    ClusterMetricsNodes:\n      properties:\n        compute:\n          type: double\n        infra:\n          type: double\n        master:\n          type: double\n        total:\n          type: double\n      type: object\n    ClusterRegistrationRequest:\n      example:\n        cluster_id: cluster_id\n        authorization_token: authorization_token\n      properties:\n        authorization_token:\n          type: string\n        cluster_id:\n          type: string\n      type: object\n    ClusterRegistrationResponse:\n      example:\n        cluster_id: cluster_id\n        account_id: account_id\n        expires_at: expires_at\n        authorization_token: authorization_token\n      properties:\n        account_id:\n          type: string\n        authorization_token:\n          type: string\n        cluster_id:\n          type: string\n        expires_at:\n          description: Cluster Registration expiration in Unix time\n          type: string\n      type: object\n    ClusterResource:\n      properties:\n        total:\n          $ref: '#/components/schemas/ClusterResource_total'\n        updated_timestamp:\n          format: date-time\n          type: string\n        used:\n          $ref: '#/components/schemas/ClusterResource_total'\n      required:\n      - total\n      - updated_timestamp\n      - used\n      type: object\n    ClusterUpgrade:\n      properties:\n        available:\n          type: boolean\n        state:\n          type: string\n        updated_timestamp:\n          format: date-time\n          type: string\n        version:\n          type: string\n      type: object\n    EphemeralResourceQuota:\n      properties:\n        allowed:\n          type: integer\n        availability_zone_type:\n          type: string\n        byoc:\n          type: boolean\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n        sku:\n          type: string\n        sku_count:\n          type: integer\n      type: object\n    Error:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Error_allOf'\n    ErrorList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ErrorList_allOf'\n    ExcessResource:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ExcessResource_allOf'\n    ExportControlReview:\n      example:\n        restricted: true\n      properties:\n        restricted:\n          type: boolean\n      required:\n      - restricted\n      type: object\n    ExportControlReviewRequest:\n      example:\n        ignore_cache: true\n        account_username: account_username\n      properties:\n        account_username:\n          type: string\n        ignore_cache:\n          type: boolean\n      required:\n      - account_username\n      type: object\n    FeatureToggle:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/FeatureToggle_allOf'\n    FeatureToggleQueryRequest:\n      allOf:\n      - $ref: '#/components/schemas/FeatureToggleQueryRequest_allOf'\n    Label:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Label_allOf'\n    LabelList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/LabelList_allOf'\n    List:\n      properties:\n        kind:\n          type: string\n        page:\n          type: integer\n        size:\n          type: integer\n        total:\n          type: integer\n      required:\n      - items\n      - kind\n      - page\n      - size\n      - total\n      type: object\n    Metric:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Metric_allOf'\n    MetricsList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/MetricsList_allOf'\n    NotificationContactCreateRequest:\n      example:\n        account_identifier: account_identifier\n      properties:\n        account_identifier:\n          type: string\n      type: object\n    NotificationRequest:\n      example:\n        subscription_id: subscription_id\n        cluster_id: cluster_id\n        template_name: template_name\n        include_red_hat_associates: true\n        template_parameters:\n        - name: name\n          content: content\n        - name: name\n          content: content\n        cluster_uuid: cluster_uuid\n        bcc_address: bcc_address\n        subject: subject\n      properties:\n        bcc_address:\n          type: string\n        cluster_id:\n          type: string\n        cluster_uuid:\n          type: string\n        include_red_hat_associates:\n          type: boolean\n        subject:\n          type: string\n        subscription_id:\n          type: string\n        template_name:\n          type: string\n        template_parameters:\n          items:\n            $ref: '#/components/schemas/TemplateParameter'\n          type: array\n      required:\n      - subject\n      - template_name\n      type: object\n    ObjectReference:\n      example:\n        kind: kind\n        href: href\n        id: id\n      properties:\n        href:\n          type: string\n        id:\n          type: string\n        kind:\n          type: string\n      type: object\n    OneMetric:\n      properties:\n        cloud_provider:\n          type: string\n        cluster_type:\n          type: string\n        compute_nodes_cpu:\n          $ref: '#/components/schemas/ClusterResource'\n        compute_nodes_memory:\n          $ref: '#/components/schemas/ClusterResource'\n        compute_nodes_sockets:\n          $ref: '#/components/schemas/ClusterResource'\n        console_url:\n          type: string\n        cpu:\n          $ref: '#/components/schemas/ClusterResource'\n        critical_alerts_firing:\n          type: double\n        health_state:\n          enum:\n          - healthy\n          - unhealthy\n          - unknown\n          type: string\n        memory:\n          $ref: '#/components/schemas/ClusterResource'\n        nodes:\n          $ref: '#/components/schemas/ClusterMetricsNodes'\n        openshift_version:\n          type: string\n        operating_system:\n          type: string\n        operators_condition_failing:\n          type: double\n        region:\n          type: string\n        sockets:\n          $ref: '#/components/schemas/ClusterResource'\n        state:\n          type: string\n        state_description:\n          type: string\n        storage:\n          $ref: '#/components/schemas/ClusterResource'\n        subscription_cpu_total:\n          type: double\n        subscription_obligation_exists:\n          type: double\n        subscription_socket_total:\n          type: double\n        upgrade:\n          $ref: '#/components/schemas/ClusterUpgrade'\n      required:\n      - HealthState\n      - cloud_provider\n      - cluster_type\n      - compute_nodes_cpu\n      - compute_nodes_memory\n      - compute_nodes_sockets\n      - console_url\n      - cpu\n      - critical_alerts_firing\n      - memory\n      - nodes\n      - openshift_version\n      - operating_system\n      - operators_condition_failing\n      - region\n      - sockets\n      - state\n      - state_description\n      - storage\n      - subscription_cpu_total\n      - subscription_obligation_exists\n      - subscription_socket_total\n      - upgrade\n      type: object\n    Organization:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Organization_allOf'\n    OrganizationList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/OrganizationList_allOf'\n    OrganizationPatchRequest:\n      example:\n        ebs_account_id: ebs_account_id\n        name: name\n        external_id: external_id\n      properties:\n        ebs_account_id:\n          type: string\n        external_id:\n          type: string\n        name:\n          type: string\n      type: object\n    Permission:\n      allOf:\n      - $ref: '#/components/schemas/Permission_allOf'\n    PermissionList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/PermissionList_allOf'\n    Plan:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Plan_allOf'\n    PlanList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/PlanList_allOf'\n    PullSecretRequest:\n      example:\n        external_resource_id: external_resource_id\n      properties:\n        external_resource_id:\n          type: string\n      required:\n      - external_resource_id\n      type: object\n    QuotaCost:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/QuotaCost_allOf'\n    QuotaCostList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/QuotaCostList_allOf'\n    QuotaSummary:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/QuotaSummary_allOf'\n    QuotaSummaryList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/QuotaSummaryList_allOf'\n    Registry:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Registry_allOf'\n    RegistryAddress:\n      additionalProperties:\n        properties:\n          auth:\n            type: string\n          email:\n            format: email\n            type: string\n        type: object\n      type: object\n    RegistryCreateRequest:\n      allOf:\n      - $ref: '#/components/schemas/RegistryRequest'\n      - required:\n        - name\n        - type\n        - url\n      type: object\n    RegistryCredential:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/RegistryCredential_allOf'\n    RegistryCredentialList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/RegistryCredentialList_allOf'\n    RegistryCredentialPatchRequest:\n      example:\n        account_id: account_id\n        external_resource_id: external_resource_id\n        registry_id: registry_id\n        token: token\n        username: username\n      properties:\n        account_id:\n          type: string\n        external_resource_id:\n          type: string\n        registry_id:\n          type: string\n        token:\n          type: string\n        username:\n          type: string\n      type: object\n    RegistryList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/RegistryList_allOf'\n    RegistryRequest:\n      properties:\n        cloudAlias:\n          type: boolean\n        name:\n          type: string\n        org_name:\n          type: string\n        team_name:\n          type: string\n        type:\n          type: string\n        url:\n          type: string\n      type: object\n    RelatedResource:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/RelatedResource_allOf'\n    ReservedResource:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ReservedResource_allOf'\n    ReservedResourceList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ReservedResourceList_allOf'\n    ResourceQuota:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/ResourceQuota_allOf'\n    ResourceQuotaList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/ResourceQuotaList_allOf'\n    ResourceQuotaRequest:\n      example:\n        sku_count: 6\n        allowed: 0\n        sku: sku\n        type: Config\n      properties:\n        allowed:\n          type: integer\n        sku:\n          type: string\n        sku_count:\n          type: integer\n        type:\n          enum:\n          - Config\n          - Manual\n          - Subscription\n          type: string\n      required:\n      - count\n      - sku\n      type: object\n    ResourceReview:\n      example:\n        subscription_ids:\n        - subscription_ids\n        - subscription_ids\n        account_username: account_username\n        cluster_uuids:\n        - cluster_uuids\n        - cluster_uuids\n        resource_type: Cluster\n        action: get\n        cluster_ids:\n        - cluster_ids\n        - cluster_ids\n        organization_ids:\n        - organization_ids\n        - organization_ids\n      properties:\n        account_username:\n          type: string\n        action:\n          enum:\n          - get\n          - list\n          - create\n          - delete\n          - update\n          type: string\n        cluster_ids:\n          items:\n            type: string\n          type: array\n        cluster_uuids:\n          items:\n            type: string\n          type: array\n        organization_ids:\n          items:\n            type: string\n          type: array\n        resource_type:\n          enum:\n          - Cluster\n          - Subscription\n          type: string\n        subscription_ids:\n          items:\n            type: string\n          type: array\n      required:\n      - account_username\n      - action\n      - cluster_ids\n      - cluster_uuids\n      - organization_ids\n      - resource_type\n      - subscription_ids\n      type: object\n    ResourceReviewRequest:\n      example:\n        account_username: account_username\n        resource_type: Cluster\n        action: get\n      properties:\n        account_username:\n          type: string\n        action:\n          enum:\n          - get\n          - delete\n          - update\n          type: string\n        resource_type:\n          enum:\n          - Cluster\n          - Subscription\n          type: string\n      type: object\n    Role:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Role_allOf'\n    RoleBinding:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/RoleBinding_allOf'\n    RoleBindingCreateRequest:\n      allOf:\n      - $ref: '#/components/schemas/RoleBindingRequest'\n      - required:\n        - account_id\n        - role_id\n        - type\n    RoleBindingList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/RoleBindingList_allOf'\n    RoleBindingRequest:\n      example:\n        subscription_id: subscription_id\n        account_id: account_id\n        role_id: role_id\n        organization_id: organization_id\n        config_managed: true\n        type: type\n      properties:\n        account_id:\n          type: string\n        config_managed:\n          type: boolean\n        organization_id:\n          type: string\n        role_id:\n          type: string\n        subscription_id:\n          type: string\n        type:\n          type: string\n      type: object\n    RoleList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/RoleList_allOf'\n    SKU:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/SKU_allOf'\n    SelfAccessReview:\n      example:\n        subscription_id: subscription_id\n        cluster_id: cluster_id\n        cluster_uuid: cluster_uuid\n        organization_id: organization_id\n        resource_type: AddOn\n        action: get\n      properties:\n        action:\n          enum:\n          - get\n          - list\n          - create\n          - delete\n          - update\n          type: string\n        cluster_id:\n          type: string\n        cluster_uuid:\n          type: string\n        organization_id:\n          type: string\n        resource_type:\n          enum:\n          - AddOn\n          - Flavour\n          - Account\n          - AccountPool\n          - Cluster\n          - Plan\n          - Subscription\n          - Organization\n          - Role\n          - Permission\n          - RoleBinding\n          - Registry\n          - RegistryCredential\n          - CurrentAccount\n          - AccessReview\n          - SelfAcccessReview\n          - ResourceReview\n          - SelfResourceReview\n          - ClusterRegistration\n          - AccessToken\n          - ClusterAuthorization\n          - SelfManagedCluster\n          - RedhatManagedCluster\n          - ExportControlReview\n          - ClusterLog\n          - ClusterCredential\n          - ClusterMetric\n          - ResourceQuota\n          - ReservedResource\n          - Dashboard\n          - ClusterProviderAndRegion\n          - ServiceLog\n          - InternalServiceLog\n          - CSLogs\n          - QuotaSummary\n          - SubscriptionLabel\n          - OrganizationLabel\n          - SubscriptionLabelInternal\n          - SelfAccessReview\n          - SubscriptionInternal\n          type: string\n        subscription_id:\n          type: string\n      required:\n      - action\n      - resource_type\n      type: object\n    SelfResourceReview:\n      example:\n        subscription_ids:\n        - subscription_ids\n        - subscription_ids\n        cluster_uuids:\n        - cluster_uuids\n        - cluster_uuids\n        resource_type: Cluster\n        action: get\n        cluster_ids:\n        - cluster_ids\n        - cluster_ids\n        organization_ids:\n        - organization_ids\n        - organization_ids\n      properties:\n        action:\n          enum:\n          - get\n          - list\n          - create\n          - delete\n          - update\n          type: string\n        cluster_ids:\n          items:\n            type: string\n          type: array\n        cluster_uuids:\n          items:\n            type: string\n          type: array\n        organization_ids:\n          items:\n            type: string\n          type: array\n        resource_type:\n          enum:\n          - Cluster\n          - Subscription\n          type: string\n        subscription_ids:\n          items:\n            type: string\n          type: array\n      required:\n      - action\n      - cluster_ids\n      - cluster_uuids\n      - organization_ids\n      - resource_type\n      - subscription_ids\n      type: object\n    SelfResourceReviewRequest:\n      example:\n        resource_type: Cluster\n        action: get\n      properties:\n        action:\n          enum:\n          - get\n          - delete\n          - update\n          type: string\n        resource_type:\n          enum:\n          - Cluster\n          - Subscription\n          type: string\n      type: object\n    SelfTermsReview:\n      example:\n        event_code: event_code\n        site_code: site_code\n      properties:\n        event_code:\n          type: string\n        site_code:\n          type: string\n      type: object\n    SkuList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/SkuList_allOf'\n    SkuRules:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/SkuRules_allOf'\n    SkuRulesList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/SkuRulesList_allOf'\n    Subscription:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Subscription_allOf'\n    SubscriptionCreateRequest:\n      example:\n        cluster_uuid: cluster_uuid\n        console_url: console_url\n        display_name: display_name\n        plan_id: OCP\n        status: Disconnected\n      properties:\n        cluster_uuid:\n          type: string\n        console_url:\n          type: string\n        display_name:\n          type: string\n        plan_id:\n          enum:\n          - OCP\n          type: string\n        status:\n          enum:\n          - Disconnected\n          type: string\n      required:\n      - cluster_uuid\n      - plan_id\n      - status\n      type: object\n    SubscriptionList:\n      allOf:\n      - $ref: '#/components/schemas/List'\n      - $ref: '#/components/schemas/SubscriptionList_allOf'\n    SubscriptionPatchRequest:\n      example:\n        service_level: L1-L3\n        usage: Production\n        region_id: region_id\n        cpu_total: 0\n        support_level: Eval\n        trial_end_date: 2000-01-23T04:56:07.000+00:00\n        display_name: display_name\n        socket_total: 6\n        product_bundle: Openshift\n        consumer_uuid: consumer_uuid\n        cloud_account_id: cloud_account_id\n        cluster_id: cluster_id\n        provenance: provenance\n        console_url: console_url\n        managed: true\n        organization_id: organization_id\n        creator_id: creator_id\n        cloud_provider_id: cloud_provider_id\n        system_units: Cores/vCPU\n        external_cluster_id: external_cluster_id\n        cluster_billing_model: standard\n        plan_id: plan_id\n        released: true\n        status: status\n      properties:\n        cloud_account_id:\n          type: string\n        cloud_provider_id:\n          type: string\n        cluster_billing_model:\n          enum:\n          - standard\n          - marketplace\n          type: string\n        cluster_id:\n          type: string\n        console_url:\n          type: string\n        consumer_uuid:\n          type: string\n        cpu_total:\n          type: integer\n        creator_id:\n          type: string\n        display_name:\n          type: string\n        external_cluster_id:\n          type: string\n        managed:\n          type: boolean\n        organization_id:\n          type: string\n        plan_id:\n          type: string\n        product_bundle:\n          enum:\n          - Openshift\n          - JBoss-Middleware\n          - IBM-CloudPak\n          type: string\n        provenance:\n          type: string\n        region_id:\n          type: string\n        released:\n          type: boolean\n        service_level:\n          enum:\n          - L1-L3\n          - L3-only\n          type: string\n        socket_total:\n          type: integer\n        status:\n          type: string\n        support_level:\n          enum:\n          - Eval\n          - Standard\n          - Premium\n          - Self-Support\n          - None\n          type: string\n        system_units:\n          enum:\n          - Cores/vCPU\n          - Sockets\n          type: string\n        trial_end_date:\n          format: date-time\n          type: string\n        usage:\n          enum:\n          - Production\n          - Development/Test\n          - Disaster Recovery\n          - Academic\n          type: string\n      type: object\n    Summary:\n      allOf:\n      - $ref: '#/components/schemas/ObjectReference'\n      - $ref: '#/components/schemas/Summary_allOf'\n    SummaryMetrics:\n      allOf:\n      - $ref: '#/components/schemas/SummaryMetrics_allOf'\n    SummaryVector:\n      allOf:\n      - $ref: '#/components/schemas/SummaryVector_allOf'\n    SupportCasesCreatedResponse:\n      example:\n        severity: severity\n        subscription_id: subscription_id\n        summary: summary\n        cluster_id: cluster_id\n        cluster_uuid: cluster_uuid\n        caseNumber: caseNumber\n        description: description\n        uri: uri\n        status: status\n      properties:\n        caseNumber:\n          type: string\n        cluster_id:\n          type: string\n        cluster_uuid:\n          type: string\n        description:\n          type: string\n        severity:\n          type: string\n        status:\n          type: string\n        subscription_id:\n          type: string\n        summary:\n          type: string\n        uri:\n          type: string\n      type: object\n    SupportCasesRequest:\n      example:\n        severity: 1 (Urgent)\n        summary: summary\n        account_number: account_number\n        product: OpenShift Container Platform\n        description: description\n        contact_sso_name: contact_sso_name\n        version: \"4.4\"\n        case_language: case_language\n        openshift_cluster_id: openshift_cluster_id\n        subscription_id: subscription_id\n        event_stream_id: event_stream_id\n        cluster_id: cluster_id\n        cluster_uuid: cluster_uuid\n      properties:\n        account_number:\n          type: string\n        case_language:\n          type: string\n        cluster_id:\n          type: string\n        cluster_uuid:\n          type: string\n        contact_sso_name:\n          type: string\n        description:\n          type: string\n        event_stream_id:\n          type: string\n        openshift_cluster_id:\n          type: string\n        product:\n          default: OpenShift Container Platform\n          type: string\n        severity:\n          enum:\n          - 1 (Urgent)\n          - 2 (High)\n          - 3 (Normal)\n          - 4 (Low)\n          type: string\n        subscription_id:\n          type: string\n        summary:\n          type: string\n        version:\n          default: \"4.4\"\n          type: string\n      required:\n      - description\n      - severity\n      - summary\n      type: object\n    TemplateParameter:\n      example:\n        name: name\n        content: content\n      properties:\n        content:\n          type: string\n        name:\n          type: string\n      required:\n      - content\n      - name\n      type: object\n    TermsReview:\n      example:\n        event_code: event_code\n        account_username: account_username\n        site_code: site_code\n      properties:\n        account_username:\n          type: string\n        event_code:\n          type: string\n        site_code:\n          type: string\n      required:\n      - account_username\n      type: object\n    TermsReviewResponse:\n      example:\n        account_id: account_id\n        terms_available: true\n        organization_id: organization_id\n        terms_required: true\n        redirect_url: redirect_url\n      properties:\n        account_id:\n          type: string\n        organization_id:\n          type: string\n        redirect_url:\n          type: string\n        terms_available:\n          type: boolean\n        terms_required:\n          type: boolean\n      required:\n      - account_id\n      - organization_id\n      - terms_available\n      - terms_required\n      type: object\n    TokenAuthorizationRequest:\n      example:\n        authorization_token: authorization_token\n      properties:\n        authorization_token:\n          type: string\n      type: object\n    TokenAuthorizationResponse:\n      example: {}\n      properties:\n        account:\n          $ref: '#/components/schemas/Account'\n      type: object\n    Account_allOf:\n      properties:\n        ban_code:\n          type: string\n        ban_description:\n          type: string\n        banned:\n          default: false\n          type: boolean\n        capabilities:\n          items:\n            $ref: '#/components/schemas/Capability'\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        email:\n          format: email\n          type: string\n        first_name:\n          type: string\n        labels:\n          items:\n            $ref: '#/components/schemas/Label'\n          type: array\n        last_name:\n          type: string\n        organization:\n          $ref: '#/components/schemas/Organization'\n        organization_id:\n          type: string\n        service_account:\n          default: false\n          type: boolean\n        updated_at:\n          format: date-time\n          type: string\n        username:\n          type: string\n      required:\n      - username\n      type: object\n    AccountList_allOf:\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/Account'\n          type: array\n      type: object\n    AccountReference_allOf:\n      properties:\n        email:\n          type: string\n        name:\n          type: string\n        username:\n          type: string\n      type: object\n    Capability_allOf:\n      properties:\n        inherited:\n          type: boolean\n        name:\n          type: string\n        value:\n          type: string\n      required:\n      - inherited\n      - name\n      - value\n      type: object\n    ClusterResource_total:\n      properties:\n        unit:\n          type: string\n        value:\n          type: double\n      required:\n      - unit\n      - value\n      type: object\n    Error_allOf:\n      properties:\n        code:\n          type: string\n        operation_id:\n          type: string\n        reason:\n          type: string\n      type: object\n    ErrorList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Error'\n          type: array\n      type: object\n    ExcessResource_allOf:\n      properties:\n        availability_zone_type:\n          type: string\n        billing_model:\n          type: string\n        byoc:\n          type: boolean\n        count:\n          type: integer\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n      required:\n      - byoc\n      type: object\n    FeatureToggle_allOf:\n      properties:\n        enabled:\n          default: false\n          type: boolean\n      required:\n      - enabled\n      type: object\n    FeatureToggleQueryRequest_allOf:\n      properties:\n        organization_id:\n          type: string\n      required:\n      - organization_id\n      type: object\n    Label_allOf:\n      properties:\n        account_id:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        internal:\n          type: boolean\n        key:\n          type: string\n        organization_id:\n          type: string\n        subscription_id:\n          type: string\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        value:\n          type: string\n      required:\n      - internal\n      - key\n      - value\n      type: object\n    LabelList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Label'\n          type: array\n      type: object\n    Metric_allOf:\n      properties:\n        external_id:\n          type: string\n        health_state:\n          type: string\n        id:\n          type: string\n        metrics:\n          type: string\n        query_timestamp:\n          format: date-time\n          type: string\n      type: object\n    MetricsList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Metric'\n          type: array\n      type: object\n    Organization_allOf:\n      properties:\n        capabilities:\n          items:\n            $ref: '#/components/schemas/Capability'\n          type: array\n        created_at:\n          format: date-time\n          type: string\n        ebs_account_id:\n          type: string\n        external_id:\n          type: string\n        labels:\n          items:\n            $ref: '#/components/schemas/Label'\n          type: array\n        name:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      type: object\n    OrganizationList_allOf:\n      properties:\n        items:\n          items:\n            allOf:\n            - $ref: '#/components/schemas/Organization'\n          type: array\n      type: object\n    Permission_allOf:\n      properties:\n        action:\n          enum:\n          - get\n          - list\n          - create\n          - delete\n          - update\n          type: string\n        resource:\n          type: string\n      type: object\n    PermissionList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Permission'\n          type: array\n      type: object\n    Plan_allOf:\n      properties:\n        category:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n      type: object\n    PlanList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Plan'\n          type: array\n      type: object\n    QuotaCost_allOf:\n      properties:\n        allowed:\n          type: integer\n        consumed:\n          type: integer\n        organization_id:\n          type: string\n        quota_id:\n          type: string\n        related_resources:\n          items:\n            $ref: '#/components/schemas/RelatedResource'\n          type: array\n      required:\n      - allowed\n      - consumed\n      - quota_id\n      type: object\n    QuotaCostList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/QuotaCost'\n          type: array\n      type: object\n    QuotaSummary_allOf:\n      properties:\n        allowed:\n          type: integer\n        availability_zone_type:\n          type: string\n        byoc:\n          type: boolean\n        organization_id:\n          type: string\n        reserved:\n          type: integer\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n      required:\n      - allowed\n      - availability_zone_type\n      - byoc\n      - reserved\n      - resource_name\n      - resource_type\n      type: object\n    QuotaSummaryList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/QuotaSummary'\n          type: array\n      type: object\n    Registry_allOf:\n      properties:\n        cloudAlias:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        name:\n          type: string\n        org_name:\n          type: string\n        team_name:\n          type: string\n        type:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        url:\n          type: string\n      type: object\n    RegistryCredential_allOf:\n      properties:\n        account:\n          $ref: '#/components/schemas/ObjectReference'\n        created_at:\n          format: date-time\n          type: string\n        external_resource_id:\n          type: string\n        registry:\n          $ref: '#/components/schemas/ObjectReference'\n        token:\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        username:\n          type: string\n      type: object\n    RegistryCredentialList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/RegistryCredential'\n          type: array\n      type: object\n    RegistryList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Registry'\n          type: array\n      type: object\n    RelatedResource_allOf:\n      properties:\n        availability_zone_type:\n          type: string\n        billing_model:\n          type: string\n        byoc:\n          type: string\n        cloud_provider:\n          type: string\n        cost:\n          type: integer\n        product:\n          type: string\n        product_id:\n          type: string\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n      required:\n      - availability_zone_type\n      - billing_model\n      - byoc\n      - cloud_provider\n      - cost\n      - product\n      - resource_anme\n      - resource_type\n      type: object\n    ReservedResource_allOf:\n      properties:\n        availability_zone_type:\n          type: string\n        billing_model:\n          type: string\n        byoc:\n          type: boolean\n        cluster:\n          type: boolean\n        count:\n          type: integer\n        created_at:\n          format: date-time\n          type: string\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n        subscription:\n          $ref: '#/components/schemas/ObjectReference'\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - byoc\n      type: object\n    ReservedResourceList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ReservedResource'\n          type: array\n      type: object\n    ResourceQuota_allOf:\n      properties:\n        allowed:\n          type: integer\n        availability_zone_type:\n          type: string\n        byoc:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        organization_id:\n          type: string\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n        sku:\n          type: string\n        sku_count:\n          type: integer\n        type:\n          enum:\n          - Config\n          - Manual\n          - Subscription\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - allowed\n      - byoc\n      - resource_name\n      - resource_type\n      type: object\n    ResourceQuotaList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/ResourceQuota'\n          type: array\n      type: object\n    Role_allOf:\n      properties:\n        name:\n          type: string\n        permissions:\n          items:\n            $ref: '#/components/schemas/Permission'\n          type: array\n      type: object\n    RoleBinding_allOf:\n      properties:\n        account:\n          $ref: '#/components/schemas/ObjectReference'\n        config_managed:\n          type: boolean\n        created_at:\n          format: date-time\n          type: string\n        organization:\n          $ref: '#/components/schemas/ObjectReference'\n        role:\n          $ref: '#/components/schemas/ObjectReference'\n        subscription:\n          $ref: '#/components/schemas/ObjectReference'\n        type:\n          enum:\n          - Application\n          - Subscription\n          - Organization\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n      type: object\n    RoleBindingList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/RoleBinding'\n          type: array\n      type: object\n    RoleList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Role'\n          type: array\n      type: object\n    SKU_allOf:\n      properties:\n        availability_zone_type:\n          type: string\n        byoc:\n          type: boolean\n        id:\n          type: string\n        resource_name:\n          type: string\n        resource_type:\n          type: string\n        resources:\n          items:\n            $ref: '#/components/schemas/EphemeralResourceQuota'\n          type: array\n      required:\n      - byoc\n      type: object\n    SkuList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/SKU'\n          type: array\n      type: object\n    SkuRules_allOf:\n      properties:\n        allowed:\n          type: integer\n        quota_id:\n          type: string\n        sku:\n          type: string\n      type: object\n    SkuRulesList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/SkuRules'\n          type: array\n      type: object\n    Subscription_allOf:\n      properties:\n        capabilities:\n          items:\n            $ref: '#/components/schemas/Capability'\n          type: array\n        cloud_account_id:\n          type: string\n        cloud_provider_id:\n          type: string\n        cluster_billing_model:\n          type: string\n        cluster_id:\n          type: string\n        console_url:\n          type: string\n        consumer_uuid:\n          type: string\n        cpu_total:\n          type: integer\n        created_at:\n          format: date-time\n          type: string\n        creator:\n          $ref: '#/components/schemas/AccountReference'\n        display_name:\n          type: string\n        external_cluster_id:\n          type: string\n        labels:\n          items:\n            $ref: '#/components/schemas/Label'\n          type: array\n        last_reconcile_date:\n          description: Last time this subscription were reconciled about cluster usage\n          format: date-time\n          type: string\n        last_released_at:\n          description: Last time status was set to Released for this cluster/subscription\n            in Unix time\n          format: date-time\n          type: string\n        last_telemetry_date:\n          description: Last telemetry authorization request for this cluster/subscription\n            in Unix time\n          format: date-time\n          type: string\n        managed:\n          type: boolean\n        metrics:\n          items:\n            $ref: '#/components/schemas/OneMetric'\n          maxItems: 1\n          type: array\n        notification_contacts:\n          items:\n            $ref: '#/components/schemas/Account'\n          type: array\n        organization_id:\n          type: string\n        plan:\n          $ref: '#/components/schemas/Plan'\n        product_bundle:\n          enum:\n          - Openshift\n          - JBoss-Middleware\n          - IBM-CloudPak\n          type: string\n        provenance:\n          type: string\n        region_id:\n          type: string\n        released:\n          type: boolean\n        service_level:\n          enum:\n          - L1-L3\n          - L3-only\n          type: string\n        socket_total:\n          type: integer\n        status:\n          type: string\n        support_level:\n          enum:\n          - Eval\n          - Standard\n          - Premium\n          - Self-Support\n          - None\n          type: string\n        system_units:\n          enum:\n          - Cores/vCPU\n          - Sockets\n          type: string\n        trial_end_date:\n          description: If the subscription is a trial, date the trial ends\n          format: date-time\n          type: string\n        updated_at:\n          format: date-time\n          type: string\n        usage:\n          enum:\n          - Production\n          - Development/Test\n          - Disaster Recovery\n          - Academic\n          type: string\n      required:\n      - managed\n      type: object\n    SubscriptionList_allOf:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Subscription'\n          type: array\n      type: object\n    Summary_allOf:\n      properties:\n        metrics:\n          items:\n            $ref: '#/components/schemas/SummaryMetrics'\n          type: array\n        name:\n          type: string\n      required:\n      - metrics\n      type: object\n    SummaryMetrics_allOf:\n      properties:\n        name:\n          type: string\n        vector:\n          items:\n            $ref: '#/components/schemas/SummaryVector'\n          type: array\n      type: object\n    SummaryVector_allOf:\n      properties:\n        time:\n          format: date-time\n          type: string\n        value:\n          type: double\n      type: object\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/accounts_mgmt/v1/subscriptions/{id}: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/Subscription\": parse schema: allOf: [1]: parse schema: reference \"#/components/schemas/Subscription_allOf\": parse schema: metrics: parse schema: item: parse schema: reference \"#/components/schemas/OneMetric\": parse schema: compute_nodes_cpu: parse schema: reference \"#/components/schemas/ClusterResource\": parse schema: total: parse schema: reference \"#/components/schemas/ClusterResource_total\": parse schema: value: parse schema: unexpected schema type: \"double\""
}