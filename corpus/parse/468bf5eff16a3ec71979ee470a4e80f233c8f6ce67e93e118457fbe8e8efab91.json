{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/openaq.local/2.0.0/openapi.yaml",
			"byteSize": 144879,
			"content": "openapi: 3.0.2\nservers:\n  - url: http://openaq.local\ninfo:\n  description: API for OpenAQ LCS\n  title: OpenAQ\n  version: 2.0.0\n  x-apisguru-categories:\n    - location\n  x-origin:\n    - format: openapi\n      url: https://docs.openaq.org/openapi.json\n      version: \"3.0\"\n  x-providerName: openaq.local\npaths:\n  /favicon.ico:\n    get:\n      operationId: favico_favicon_ico_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n      summary: Favico\n  /ping:\n    get:\n      description: |-\n        Sanity check.\n        This will let the user know that the service is operational.\n        And this path operation will:\n        * show a lifesign\n      operationId: pong_ping_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n      summary: Pong\n  /v1/cities:\n    get:\n      operationId: cities_getv1_v1_cities_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CitiesOrder\"\n            default: city\n            description: Order by a field\n        - in: query\n          name: entity\n          required: false\n          schema:\n            title: Entity\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQCitiesResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Provides a simple listing of cities within the platform\n      tags:\n        - v1\n  /v1/countries:\n    get:\n      operationId: countries_getv1_v1_countries_get\n      parameters:\n        - in: query\n          name: limit\n          required: false\n          schema:\n            default: 200\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CountriesOrder\"\n            default: country\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQCountriesResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Countries Getv1\n      tags:\n        - v1\n  \"/v1/countries/{country_id}\":\n    get:\n      operationId: countries_get_v1_countries__country_id__get\n      parameters:\n        - in: path\n          name: country_id\n          required: true\n          schema:\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - in: query\n          name: limit\n          required: false\n          schema:\n            default: 200\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CountriesOrder\"\n            default: country\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQCountriesResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Countries Get\n      tags:\n        - v1\n  /v1/latest:\n    get:\n      operationId: latest_v1_get_v1_latest_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location_id\n          required: false\n          schema:\n            title: Location Id\n            type: integer\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Latest V1 Get\n      tags:\n        - v1\n  \"/v1/latest/{location_id}\":\n    get:\n      operationId: latest_v1_get_v1_latest__location_id__get\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            title: Location Id\n            type: integer\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Latest V1 Get\n      tags:\n        - v1\n  /v1/locations:\n    get:\n      operationId: locationsv1_get_v1_locations_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location_id\n          required: false\n          schema:\n            title: Location Id\n            type: integer\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Locationsv1 Get\n      tags:\n        - v1\n  \"/v1/locations/{location_id}\":\n    get:\n      operationId: locationsv1_get_v1_locations__location_id__get\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            title: Location Id\n            type: integer\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Locationsv1 Get\n      tags:\n        - v1\n  /v1/measurements:\n    get:\n      operationId: measurements_get_v1_v1_measurements_get\n      parameters:\n        - in: query\n          name: format\n          required: false\n          schema:\n            title: Format\n            type: string\n        - in: query\n          name: date_from\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            default: 2000-01-01T00:00:00+00:00\n            title: Date From\n        - in: query\n          name: date_to\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            default: 2021-08-23T09:48:00+00:00\n            title: Date To\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location_id\n          required: false\n          schema:\n            title: Location Id\n            type: integer\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/MeasOrder\"\n            default: datetime\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n        - in: query\n          name: project\n          required: false\n          schema:\n            title: Project\n            type: integer\n        - in: query\n          name: entity\n          required: false\n          schema:\n            $ref: \"#/components/schemas/EntityTypes\"\n        - in: query\n          name: sensorType\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SensorTypes\"\n        - in: query\n          name: value_from\n          required: false\n          schema:\n            title: Value From\n            type: number\n        - in: query\n          name: value_to\n          required: false\n          schema:\n            title: Value To\n            type: number\n        - in: query\n          name: include_fields\n          required: false\n          schema:\n            title: Include Fields\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Measurements Get V1\n      tags:\n        - v1\n  /v1/parameters:\n    get:\n      operationId: parameters_getv1_v1_parameters_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - in: query\n          name: sourceName\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - in: query\n          name: sourceId\n          required: false\n          schema:\n            items:\n              type: integer\n            title: Sourceid\n            type: array\n        - in: query\n          name: sourceSlug\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourceslug\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            anyOf:\n              - type: string\n              - type: string\n              - type: string\n            default: id\n            title: Order By\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQParametersResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Parameters Getv1\n      tags:\n        - v1\n  /v1/sources:\n    get:\n      operationId: sources_v1_get_v1_sources_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - in: query\n          name: name\n          required: false\n          schema:\n            title: Name\n            type: string\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SourcesV1Order\"\n            default: name\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Sources V1 Get\n      tags:\n        - v1\n  /v2/averages:\n    get:\n      operationId: averages_v2_get_v2_averages_get\n      parameters:\n        - in: query\n          name: date_from\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            default: 2000-01-01T00:00:00+00:00\n            title: Date From\n        - in: query\n          name: date_to\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            default: 2021-08-23T09:48:00+00:00\n            title: Date To\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: project_id\n          required: false\n          schema:\n            title: Project Id\n            type: integer\n        - in: query\n          name: project\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Project\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Define sort order.\n        - in: query\n          name: spatial\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Spatial\"\n        - in: query\n          name: temporal\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Temporal\"\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              type: string\n            title: Location\n            type: array\n        - in: query\n          name: group\n          required: false\n          schema:\n            default: false\n            title: Group\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Averages V2 Get\n      tags:\n        - v2\n  /v2/cities:\n    get:\n      operationId: cities_get_v2_cities_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CitiesOrder\"\n            default: city\n            description: Order by a field\n        - in: query\n          name: entity\n          required: false\n          schema:\n            title: Entity\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQCitiesResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Provides a simple listing of cities within the platform\n      tags:\n        - v2\n  /v2/countries:\n    get:\n      operationId: countries_get_v2_countries_get\n      parameters:\n        - in: query\n          name: limit\n          required: false\n          schema:\n            default: 200\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CountriesOrder\"\n            default: country\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQCountriesResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Countries Get\n      tags:\n        - v2\n  \"/v2/countries/{country_id}\":\n    get:\n      operationId: countries_get_v2_countries__country_id__get\n      parameters:\n        - in: path\n          name: country_id\n          required: true\n          schema:\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - in: query\n          name: limit\n          required: false\n          schema:\n            default: 200\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CountriesOrder\"\n            default: country\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQCountriesResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Countries Get\n      tags:\n        - v2\n  /v2/latest:\n    get:\n      operationId: latest_get_v2_latest_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location_id\n          required: false\n          schema:\n            title: Location Id\n            type: integer\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Latest Get\n      tags:\n        - v2\n  \"/v2/latest/{location_id}\":\n    get:\n      operationId: latest_get_v2_latest__location_id__get\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            title: Location Id\n            type: integer\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Latest Get\n      tags:\n        - v2\n  /v2/locations:\n    get:\n      operationId: locations_get_v2_locations_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location_id\n          required: false\n          schema:\n            title: Location Id\n            type: integer\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Locations Get\n      tags:\n        - v2\n  /v2/locations/tiles/mobile-generalized/tiles.json:\n    get:\n      operationId: mobilegentilejson_v2_locations_tiles_mobile_generalized_tiles_json_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TileJSON\"\n          description: Return a tilejson\n      summary: Mobilegentilejson\n      tags:\n        - v2\n  \"/v2/locations/tiles/mobile-generalized/{z}/{x}/{y}.pbf\":\n    get:\n      operationId: get_mobilegentile_v2_locations_tiles_mobile_generalized__z___x___y__pbf_get\n      parameters:\n        - in: path\n          name: z\n          required: true\n          schema:\n            title: Z\n            type: integer\n        - in: path\n          name: x\n          required: true\n          schema:\n            title: X\n            type: integer\n        - in: path\n          name: y\n          required: true\n          schema:\n            title: Y\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            anyOf:\n              - type: integer\n              - type: string\n            title: Parameter\n        - description: limit data to location id\n          in: query\n          name: location\n          required: false\n          schema:\n            description: limit data to location id\n            items:\n              type: integer\n            title: Location\n            type: array\n        - in: query\n          name: lastUpdatedFrom\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Lastupdatedfrom\n        - in: query\n          name: lastUpdatedTo\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Lastupdatedto\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: project\n          required: false\n          schema:\n            title: Project\n            type: integer\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/x-protobuf: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Get Mobilegentile\n      tags:\n        - v2\n  /v2/locations/tiles/mobile/tiles.json:\n    get:\n      operationId: mobiletilejson_v2_locations_tiles_mobile_tiles_json_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TileJSON\"\n          description: Return a tilejson\n      summary: Mobiletilejson\n      tags:\n        - v2\n  \"/v2/locations/tiles/mobile/{z}/{x}/{y}.pbf\":\n    get:\n      operationId: get_mobiletile_v2_locations_tiles_mobile__z___x___y__pbf_get\n      parameters:\n        - in: path\n          name: z\n          required: true\n          schema:\n            title: Z\n            type: integer\n        - in: path\n          name: x\n          required: true\n          schema:\n            title: X\n            type: integer\n        - in: path\n          name: y\n          required: true\n          schema:\n            title: Y\n            type: integer\n        - in: query\n          name: dateFrom\n          required: true\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Datefrom\n        - in: query\n          name: dateTo\n          required: true\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Dateto\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            anyOf:\n              - type: integer\n              - type: string\n            title: Parameter\n        - description: limit data to location id\n          in: query\n          name: location\n          required: false\n          schema:\n            description: limit data to location id\n            items:\n              type: integer\n            title: Location\n            type: array\n        - in: query\n          name: lastUpdatedFrom\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Lastupdatedfrom\n        - in: query\n          name: lastUpdatedTo\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Lastupdatedto\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: project\n          required: false\n          schema:\n            title: Project\n            type: integer\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/x-protobuf: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Get Mobiletile\n      tags:\n        - v2\n  /v2/locations/tiles/tiles.json:\n    get:\n      operationId: tilejson_v2_locations_tiles_tiles_json_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TileJSON\"\n          description: Return a tilejson\n      summary: Tilejson\n      tags:\n        - v2\n  /v2/locations/tiles/viewer:\n    get:\n      operationId: demo_v2_locations_tiles_viewer_get\n      responses:\n        \"200\":\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Successful Response\n      summary: Demo\n      tags:\n        - v2\n  \"/v2/locations/tiles/{z}/{x}/{y}.pbf\":\n    get:\n      operationId: get_tile_v2_locations_tiles__z___x___y__pbf_get\n      parameters:\n        - in: path\n          name: z\n          required: true\n          schema:\n            title: Z\n            type: integer\n        - in: path\n          name: x\n          required: true\n          schema:\n            title: X\n            type: integer\n        - in: path\n          name: y\n          required: true\n          schema:\n            title: Y\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            anyOf:\n              - type: integer\n              - type: string\n            title: Parameter\n        - description: limit data to location id\n          in: query\n          name: location\n          required: false\n          schema:\n            description: limit data to location id\n            items:\n              type: integer\n            title: Location\n            type: array\n        - in: query\n          name: lastUpdatedFrom\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Lastupdatedfrom\n        - in: query\n          name: lastUpdatedTo\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            title: Lastupdatedto\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: project\n          required: false\n          schema:\n            title: Project\n            type: integer\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/x-protobuf: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Get Tile\n      tags:\n        - v2\n  \"/v2/locations/{location_id}\":\n    get:\n      operationId: locations_get_v2_locations__location_id__get\n      parameters:\n        - in: path\n          name: location_id\n          required: true\n          schema:\n            title: Location Id\n            type: integer\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Sort Direction\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n            description: Sort Direction\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - description: Order by a field\n          in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/LocationsOrder\"\n            default: lastUpdated\n            description: Order by a field\n        - description: Location is mobile\n          in: query\n          name: isMobile\n          required: false\n          schema:\n            description: Location is mobile\n            title: Ismobile\n            type: boolean\n        - description: Data is the product of a previous analysis/aggregation and not raw measurements\n          in: query\n          name: isAnalysis\n          required: false\n          schema:\n            description: Data is the product of a previous analysis/aggregation and not raw measurements\n            title: Isanalysis\n            type: boolean\n        - description: Name of the data source\n          in: query\n          name: sourceName\n          required: false\n          schema:\n            description: Name of the data source\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - description: Source entity type.\n          in: query\n          name: entity\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/EntityTypes\"\n            description: Source entity type.\n        - description: Type of Sensor\n          in: query\n          name: sensorType\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SensorTypes\"\n            description: Type of Sensor\n        - description: Model Name of Sensor\n          in: query\n          name: modelName\n          required: false\n          schema:\n            description: Model Name of Sensor\n            items:\n              type: string\n            title: Modelname\n            type: array\n        - description: Manufacturer of Sensor\n          in: query\n          name: manufacturerName\n          required: false\n          schema:\n            description: Manufacturer of Sensor\n            items:\n              type: string\n            title: Manufacturername\n            type: array\n        - in: query\n          name: dumpRaw\n          required: false\n          schema:\n            default: false\n            title: Dumpraw\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Locations Get\n      tags:\n        - v2\n  /v2/manufacturers:\n    get:\n      operationId: mfr_get_v2_manufacturers_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n      summary: Mfr Get\n      tags:\n        - v2\n  /v2/measurements:\n    get:\n      operationId: measurements_get_v2_measurements_get\n      parameters:\n        - in: query\n          name: format\n          required: false\n          schema:\n            title: Format\n            type: string\n        - in: query\n          name: date_from\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            default: 2000-01-01T00:00:00+00:00\n            title: Date From\n        - in: query\n          name: date_to\n          required: false\n          schema:\n            anyOf:\n              - format: date-time\n                type: string\n              - format: date\n                type: string\n            default: 2021-08-23T09:48:00+00:00\n            title: Date To\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: desc\n        - in: query\n          name: has_geo\n          required: false\n          schema:\n            title: Has Geo\n            type: boolean\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: coordinates\n          required: false\n          schema:\n            pattern: ^-?\\d{1,2}\\.?\\d{0,8},-?1?\\d{1,2}\\.?\\d{0,8}$\n            title: Coordinates\n            type: string\n        - in: query\n          name: radius\n          required: false\n          schema:\n            default: 1000\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Radius\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: \"\n\n            \\        Limit results by a certain city or cities.\n\n            \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n            \\        \"\n          in: query\n          name: city\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain city or cities.\n\n              \\        (ex. ?city=Chicago or ?city=Chicago\u0026city=Boston)\n\n              \\        \"\n            items:\n              type: string\n            title: City\n            type: array\n        - in: query\n          name: location_id\n          required: false\n          schema:\n            title: Location Id\n            type: integer\n        - in: query\n          name: location\n          required: false\n          schema:\n            items:\n              anyOf:\n                - type: integer\n                - type: string\n            title: Location\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/MeasOrder\"\n            default: datetime\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n        - in: query\n          name: project\n          required: false\n          schema:\n            title: Project\n            type: integer\n        - in: query\n          name: entity\n          required: false\n          schema:\n            $ref: \"#/components/schemas/EntityTypes\"\n        - in: query\n          name: sensorType\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SensorTypes\"\n        - in: query\n          name: value_from\n          required: false\n          schema:\n            title: Value From\n            type: number\n        - in: query\n          name: value_to\n          required: false\n          schema:\n            title: Value To\n            type: number\n        - in: query\n          name: include_fields\n          required: false\n          schema:\n            title: Include Fields\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Measurements Get\n      tags:\n        - v2\n  /v2/models:\n    get:\n      operationId: model_get_v2_models_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n      summary: Model Get\n      tags:\n        - v2\n  /v2/parameters:\n    get:\n      operationId: parameters_get_v2_parameters_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - in: query\n          name: sourceName\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - in: query\n          name: sourceId\n          required: false\n          schema:\n            items:\n              type: integer\n            title: Sourceid\n            type: array\n        - in: query\n          name: sourceSlug\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourceslug\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            anyOf:\n              - type: string\n              - type: string\n              - type: string\n            default: id\n            title: Order By\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQParametersResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Parameters Get\n      tags:\n        - v2\n  /v2/projects:\n    get:\n      operationId: projects_get_v2_projects_get\n      parameters:\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: project_id\n          required: false\n          schema:\n            title: Project Id\n            type: integer\n        - in: query\n          name: project\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Project\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/ProjectsOrder\"\n            default: lastUpdated\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n        - in: query\n          name: entity\n          required: false\n          schema:\n            title: Entity\n            type: string\n        - in: query\n          name: sensorType\n          required: false\n          schema:\n            title: Sensortype\n            type: string\n        - in: query\n          name: sourceName\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourcename\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQProjectsResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Projects Get\n      tags:\n        - v2\n  \"/v2/projects/{project_id}\":\n    get:\n      operationId: projects_get_v2_projects__project_id__get\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          schema:\n            title: Project Id\n            type: integer\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. /US)\n\n            \\        \"\n          in: query\n          name: country_id\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. /US)\n\n              \\        \"\n            maxLength: 2\n            minLength: 2\n            pattern: \"[a-zA-Z][a-zA-Z]\"\n            title: Country Id\n            type: string\n        - description: \"\n\n            \\        Limit results by a certain country using two letter country code.\n\n            \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n            \\        \"\n          in: query\n          name: country\n          required: false\n          schema:\n            description: \"\n\n              \\        Limit results by a certain country using two letter country code.\n\n              \\        (ex. ?country=US or ?country=US\u0026country=MX)\n\n              \\        \"\n            items:\n              maxLength: 2\n              minLength: 2\n              pattern: \"[a-zA-Z][a-zA-Z]\"\n              type: string\n            title: Country\n            type: array\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - in: query\n          name: parameter_id\n          required: false\n          schema:\n            title: Parameter Id\n            type: integer\n        - in: query\n          name: parameter\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Parameter\n            type: array\n        - in: query\n          name: unit\n          required: false\n          schema:\n            items:\n              type: string\n            title: Unit\n            type: array\n        - in: query\n          name: project\n          required: false\n          schema:\n            items:\n              anyOf:\n                - exclusiveMinimum: true\n                  maximum: 2147483647\n                  minimum: 0\n                  type: integer\n                - type: string\n            title: Project\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/ProjectsOrder\"\n            default: lastUpdated\n        - in: query\n          name: isMobile\n          required: false\n          schema:\n            title: Ismobile\n            type: boolean\n        - in: query\n          name: isAnalysis\n          required: false\n          schema:\n            title: Isanalysis\n            type: boolean\n        - in: query\n          name: entity\n          required: false\n          schema:\n            title: Entity\n            type: string\n        - in: query\n          name: sensorType\n          required: false\n          schema:\n            title: Sensortype\n            type: string\n        - in: query\n          name: sourceName\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourcename\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQProjectsResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Projects Get\n      tags:\n        - v2\n  /v2/sources:\n    get:\n      operationId: sources_get_v2_sources_get\n      parameters:\n        - description: Change the number of results returned.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            description: Change the number of results returned.\n            exclusiveMinimum: true\n            maximum: 100000\n            minimum: 0\n            title: Limit\n            type: integer\n        - description: Paginate through results.\n          in: query\n          name: page\n          required: false\n          schema:\n            default: 1\n            description: Paginate through results.\n            exclusiveMinimum: true\n            maximum: 6000\n            minimum: 0\n            title: Page\n            type: integer\n        - in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            maximum: 10000\n            minimum: 0\n            title: Offset\n            type: integer\n        - description: Define sort order.\n          in: query\n          name: sort\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/Sort\"\n            default: asc\n            description: Define sort order.\n        - in: query\n          name: sourceName\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourcename\n            type: array\n        - in: query\n          name: sourceId\n          required: false\n          schema:\n            items:\n              type: integer\n            title: Sourceid\n            type: array\n        - in: query\n          name: sourceSlug\n          required: false\n          schema:\n            items:\n              type: string\n            title: Sourceslug\n            type: array\n        - in: query\n          name: order_by\n          required: false\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/SourcesOrder\"\n            default: sourceName\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Sources Get\n      tags:\n        - v2\n  \"/v2/sources/readme/{slug}\":\n    get:\n      operationId: readme_get_v2_sources_readme__slug__get\n      parameters:\n        - in: path\n          name: slug\n          required: true\n          schema:\n            title: Slug\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Readme Get\n      tags:\n        - v2\n  /v2/summary:\n    get:\n      operationId: summary_get_v2_summary_get\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenAQResult\"\n          description: Successful Response\n      summary: Summary Get\n      tags:\n        - v2\ncomponents:\n  schemas:\n    CitiesOrder:\n      description: An enumeration.\n      enum:\n        - city\n        - country\n        - firstUpdated\n        - lastUpdated\n      title: CitiesOrder\n      type: string\n    CitiesRow:\n      properties:\n        city:\n          title: City\n          type: string\n        count:\n          title: Count\n          type: integer\n        country:\n          title: Country\n          type: string\n        firstUpdated:\n          format: date-time\n          title: Firstupdated\n          type: string\n        lastUpdated:\n          format: date-time\n          title: Lastupdated\n          type: string\n        locations:\n          title: Locations\n          type: integer\n        parameters:\n          items:\n            type: string\n          title: Parameters\n          type: array\n      required:\n        - city\n        - count\n        - locations\n        - firstUpdated\n        - lastUpdated\n        - parameters\n      title: CitiesRow\n      type: object\n    CountriesOrder:\n      description: An enumeration.\n      enum:\n        - country\n        - firstUpdated\n        - lastUpdated\n        - locations\n        - count\n      title: CountriesOrder\n      type: string\n    CountriesRow:\n      properties:\n        cities:\n          title: Cities\n          type: integer\n        code:\n          title: Code\n          type: string\n        count:\n          title: Count\n          type: integer\n        firstUpdated:\n          format: date-time\n          title: Firstupdated\n          type: string\n        lastUpdated:\n          format: date-time\n          title: Lastupdated\n          type: string\n        locations:\n          title: Locations\n          type: integer\n        name:\n          title: Name\n          type: string\n        parameters:\n          items:\n            type: string\n          title: Parameters\n          type: array\n        sources:\n          title: Sources\n          type: integer\n      required:\n        - code\n        - name\n        - locations\n        - firstUpdated\n        - lastUpdated\n        - parameters\n        - count\n        - cities\n        - sources\n      title: CountriesRow\n      type: object\n    EntityTypes:\n      description: An enumeration.\n      enum:\n        - government\n        - community\n        - research\n      title: EntityTypes\n      type: string\n    HTTPValidationError:\n      properties:\n        detail:\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          title: Detail\n          type: array\n      title: HTTPValidationError\n      type: object\n    LocationsOrder:\n      description: An enumeration.\n      enum:\n        - city\n        - country\n        - location\n        - sourceName\n        - firstUpdated\n        - lastUpdated\n        - count\n        - random\n      title: LocationsOrder\n      type: string\n    MeasOrder:\n      description: An enumeration.\n      enum:\n        - city\n        - country\n        - location\n        - datetime\n      title: MeasOrder\n      type: string\n    Meta:\n      properties:\n        found:\n          default: 0\n          title: Found\n          type: integer\n        license:\n          default: CC BY 4.0d\n          title: License\n          type: string\n        limit:\n          default: 100\n          title: Limit\n          type: integer\n        name:\n          default: openaq-api\n          title: Name\n          type: string\n        page:\n          default: 1\n          title: Page\n          type: integer\n        website:\n          default: /\n          title: Website\n          type: string\n      title: Meta\n      type: object\n    OpenAQCitiesResult:\n      properties:\n        meta:\n          allOf:\n            - $ref: \"#/components/schemas/Meta\"\n          default:\n            found: 0\n            license: CC BY 4.0d\n            limit: 100\n            name: openaq-api\n            page: 1\n            website: /\n          title: Meta\n        results:\n          items:\n            $ref: \"#/components/schemas/CitiesRow\"\n          title: Results\n          type: array\n      required:\n        - results\n      title: OpenAQCitiesResult\n      type: object\n    OpenAQCountriesResult:\n      properties:\n        meta:\n          allOf:\n            - $ref: \"#/components/schemas/Meta\"\n          default:\n            found: 0\n            license: CC BY 4.0d\n            limit: 100\n            name: openaq-api\n            page: 1\n            website: /\n          title: Meta\n        results:\n          items:\n            $ref: \"#/components/schemas/CountriesRow\"\n          title: Results\n          type: array\n      required:\n        - results\n      title: OpenAQCountriesResult\n      type: object\n    OpenAQParametersResult:\n      properties:\n        meta:\n          allOf:\n            - $ref: \"#/components/schemas/Meta\"\n          default:\n            found: 0\n            license: CC BY 4.0d\n            limit: 100\n            name: openaq-api\n            page: 1\n            website: /\n          title: Meta\n        results:\n          items:\n            $ref: \"#/components/schemas/ParametersRow\"\n          title: Results\n          type: array\n      required:\n        - results\n      title: OpenAQParametersResult\n      type: object\n    OpenAQProjectsResult:\n      properties:\n        meta:\n          allOf:\n            - $ref: \"#/components/schemas/Meta\"\n          default:\n            found: 0\n            license: CC BY 4.0d\n            limit: 100\n            name: openaq-api\n            page: 1\n            website: /\n          title: Meta\n        results:\n          items:\n            $ref: \"#/components/schemas/ProjectsRow\"\n          title: Results\n          type: array\n      required:\n        - results\n      title: OpenAQProjectsResult\n      type: object\n    OpenAQResult:\n      properties:\n        meta:\n          allOf:\n            - $ref: \"#/components/schemas/Meta\"\n          default:\n            found: 0\n            license: CC BY 4.0d\n            limit: 100\n            name: openaq-api\n            page: 1\n            website: /\n          title: Meta\n        results:\n          default: []\n          items: {}\n          title: Results\n          type: array\n      title: OpenAQResult\n      type: object\n    ParametersRow:\n      properties:\n        description:\n          title: Description\n          type: string\n        displayName:\n          title: Displayname\n          type: string\n        id:\n          title: Id\n          type: integer\n        isCore:\n          title: Iscore\n          type: boolean\n        maxColorValue:\n          title: Maxcolorvalue\n          type: number\n        name:\n          title: Name\n          type: string\n        preferredUnit:\n          title: Preferredunit\n          type: string\n      required:\n        - id\n        - name\n        - displayName\n        - description\n        - preferredUnit\n      title: ParametersRow\n      type: object\n    ProjectParameterDetails:\n      properties:\n        average:\n          title: Average\n          type: number\n        count:\n          title: Count\n          type: integer\n        displayName:\n          title: Displayname\n          type: string\n        firstUpdated:\n          format: date-time\n          title: Firstupdated\n          type: string\n        lastUpdated:\n          format: date-time\n          title: Lastupdated\n          type: string\n        lastValue:\n          title: Lastvalue\n          type: number\n        locations:\n          title: Locations\n          type: integer\n        parameter:\n          title: Parameter\n          type: string\n        parameterId:\n          title: Parameterid\n          type: integer\n        unit:\n          title: Unit\n          type: string\n      required:\n        - unit\n        - count\n        - average\n        - lastValue\n        - locations\n        - parameter\n        - lastUpdated\n        - firstUpdated\n        - parameterId\n      title: ProjectParameterDetails\n      type: object\n    ProjectsOrder:\n      description: An enumeration.\n      enum:\n        - id\n        - name\n        - subtitle\n        - firstUpdated\n        - lastUpdated\n      title: ProjectsOrder\n      type: string\n    ProjectsRow:\n      properties:\n        bbox:\n          items:\n            type: number\n          title: Bbox\n          type: array\n        countries:\n          items:\n            type: string\n          title: Countries\n          type: array\n        entity:\n          title: Entity\n          type: string\n        firstUpdated:\n          format: date-time\n          title: Firstupdated\n          type: string\n        id:\n          title: Id\n          type: integer\n        isAnalysis:\n          title: Isanalysis\n          type: boolean\n        isMobile:\n          title: Ismobile\n          type: boolean\n        lastUpdated:\n          format: date-time\n          title: Lastupdated\n          type: string\n        locationIds:\n          items:\n            type: integer\n          title: Locationids\n          type: array\n        locations:\n          title: Locations\n          type: integer\n        measurements:\n          title: Measurements\n          type: integer\n        name:\n          title: Name\n          type: string\n        parameters:\n          items:\n            $ref: \"#/components/schemas/ProjectParameterDetails\"\n          title: Parameters\n          type: array\n        sensorType:\n          title: Sensortype\n          type: string\n        sources:\n          items: {}\n          title: Sources\n          type: array\n        subtitle:\n          title: Subtitle\n          type: string\n      required:\n        - id\n        - name\n        - subtitle\n        - locations\n        - locationIds\n        - parameters\n        - measurements\n        - firstUpdated\n        - lastUpdated\n      title: ProjectsRow\n      type: object\n    SensorTypes:\n      description: An enumeration.\n      enum:\n        - reference grade\n        - low-cost sensor\n      title: SensorTypes\n      type: string\n    Sort:\n      description: An enumeration.\n      enum:\n        - asc\n        - desc\n      title: Sort\n      type: string\n    SourcesOrder:\n      description: An enumeration.\n      enum:\n        - sourceName\n        - firstUpdated\n        - lastUpdated\n      title: SourcesOrder\n      type: string\n    SourcesV1Order:\n      description: An enumeration.\n      enum:\n        - name\n      title: SourcesV1Order\n      type: string\n    Spatial:\n      description: An enumeration.\n      enum:\n        - country\n        - location\n        - project\n        - total\n      title: Spatial\n      type: string\n    Temporal:\n      description: An enumeration.\n      enum:\n        - day\n        - month\n        - year\n        - moy\n        - dow\n        - hour\n        - hod\n      title: Temporal\n      type: string\n    TileJSON:\n      description: |-\n        TileJSON model.\n        Based on https://github.com/mapbox/tilejson-spec/tree/master/2.2.0\n      properties:\n        attribution:\n          title: Attribution\n          type: string\n        bounds:\n          default:\n            - -180\n            - -90\n            - 180\n            - 90\n          items:\n            type: number\n          title: Bounds\n          type: array\n        data:\n          default: []\n          items:\n            type: string\n          title: Data\n          type: array\n        description:\n          title: Description\n          type: string\n        grids:\n          default: []\n          items:\n            type: string\n          title: Grids\n          type: array\n        legend:\n          title: Legend\n          type: string\n        maxzoom:\n          default: 30\n          maximum: 30\n          minimum: 0\n          title: Maxzoom\n          type: integer\n        minzoom:\n          default: 0\n          maximum: 30\n          minimum: 0\n          title: Minzoom\n          type: integer\n        name:\n          title: Name\n          type: string\n        scheme:\n          default: xyz\n          title: Scheme\n          type: string\n        template:\n          title: Template\n          type: string\n        tilejson:\n          default: 2.2.0\n          title: Tilejson\n          type: string\n        tiles:\n          items:\n            type: string\n          title: Tiles\n          type: array\n        version:\n          default: 1.0.0\n          title: Version\n          type: string\n      required:\n        - tiles\n      title: TileJSON\n      type: object\n    ValidationError:\n      properties:\n        loc:\n          items:\n            type: string\n          title: Location\n          type: array\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n      required:\n        - loc\n        - msg\n        - type\n      title: ValidationError\n      type: object\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@297a6aabc26a26ce6a88a81c8a82120430c15265/-/blob/APIs/openaq.local/2.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/297a6aabc26a26ce6a88a81c8a82120430c15265/APIs/openaq.local/2.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"OpenAQCountriesResult\": parse schema: property \"meta\": at 1:3021: parse schema: infer default type: invalid value \"{\\\"found\\\":0,\\\"license\\\":\\\"CC BY 4.0d\\\",\\\"limit\\\":100,\\\"name\\\":\\\"openaq-api\\\",\\\"page\\\":1,\\\"website\\\":\\\"/\\\"}\""
}