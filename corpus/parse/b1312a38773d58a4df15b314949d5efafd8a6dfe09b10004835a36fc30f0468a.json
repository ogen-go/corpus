{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "talk.yaml",
			"size": 0,
			"path": "v1/talk.yaml",
			"byteSize": 5790,
			"content": "openapi: 3.0.1\ninfo:\n  version: 0.1.0\n  title: MediaWiki Structured Talk page API\n  description: API for retrieving structured representation of the talk page\n  termsOfService: https://www.mediawiki.org/wiki/REST_API#Terms_and_conditions\n  contact:\n    name: Product Infrastructure\n    url: https://www.mediawiki.org/wiki/Wikimedia_Product/Wikimedia_Product_Infrastructure_team\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\npaths:\n  /talk/{title}:\n    x-route-filters:\n      - path: ./lib/access_check_filter.js\n        options:\n          redirect_cache_control: '{{options.response_cache_control}}'\n      - path: lib/security_response_header_filter.js\n    get: \u0026talk_title_revision_get_spec\n      tags:\n        - Talk pages\n      summary: Get structured talk page contents\n      description: |\n        Gets structured talk page contents for the provided title.\n\n        Stability: [experimental](https://www.mediawiki.org/wiki/Wikimedia_Product/Wikimedia_Product_Infrastructure_team/API_endpoint_stability_policy#Experimental)\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - name: redirect\n          in: query\n          description: |\n            Requests for [redirect pages](https://www.mediawiki.org/wiki/Help:Redirects) return HTTP 302 with a redirect target in `Location` header and content in the body.\n            To get a 200 response instead, supply `false` to the `redirect` parameter.\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: structured talk page JSON.\n          headers:\n            ETag:\n              description: |\n                Syntax: \"{revision}/{tid}\". Example: \"701384379/154d7bca-c264-11e5-8c2f-1b51b33b59fc\"\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8; profile=\"https://www.mediawiki.org/wiki/Specs/Talk/0.1.0\":\n              schema:\n                type: string\n        301:\n          description: |\n            A permanent redirect is returned if the supplied article title was not in the normalized form.\n            To avoid this kind of redirect, you can use the [mediawiki-title](https://github.com/wikimedia/mediawiki-title) library to perform\n            title normalization client-side.\n\n            Beware that redirected pre-flighted cross-origin requests (such as those sending custom request headers like `Api-User-Agent`)\n            will fail in most current browsers [due to a spec bug](https://github.com/whatwg/fetch/issues/204).\n        302:\n          description: |\n            The page is a [redirect page](https://www.mediawiki.org/wiki/Help:Redirects).\n            The `location` header points to the redirect target.\n            If you would like to avoid automatically following redirect pages, set the `redirect=false` query parameter.\n\n            Beware that redirected pre-flighted cross-origin requests (such as those sending custom request headers like `Api-User-Agent`)\n            will fail in most current browsers [due to a spec bug](https://github.com/whatwg/fetch/issues/204).\n        404:\n          description: Unknown page title\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-request-handler:\n        - get_from_pcs:\n            request:\n              method: get\n              headers:\n                accept-language: '{{accept-language}}'\n              uri: '{{options.host}}/{domain}/v1/page/talk/{title}{/revision}'\n            return:\n              status: 200\n              headers: '{{ get_from_pcs.headers }}'\n              body: '{{get_from_pcs.body}}'\n      x-monitor: true\n      x-amples:\n        - title: Get structured talk page for enwiki Salt article\n          request:\n            params:\n              domain: en.wikipedia.org\n              title: Salt\n          response:\n            status: 200\n            headers:\n              content-type: /application\\/json; charset=utf-8; profile=\".+Talk.+\"/\n              etag: /.+/\n            body:\n              topics:\n                - id: /.+/\n                  replies:\n                    - sha: /.+/\n                      depth: /.+/\n                      html: /.*/\n                  depth: /.+/\n                  html: /.*/\n                  shas:\n                    html: /.+/\n                    indicator: /.+/\n\n  /talk/{title}/{revision}:\n    get:\n      \u003c\u003c: *talk_title_revision_get_spec\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - name: revision\n          in: path\n          description: |\n            Optional page revision. Note that older revisions are not stored, so request latency with the revision would be higher.\n          required: true\n          schema:\n            type: integer\n        - name: redirect\n          in: query\n          description: |\n            Requests for [redirect pages](https://www.mediawiki.org/wiki/Help:Redirects) return HTTP 302 with a redirect target in `Location` header and content in the body.\n            To get a 200 response instead, supply `false` to the `redirect` parameter.\n          schema:\n            type: boolean\n      x-monitor: false\n",
			"canonicalURL": "/github.com/wikimedia/restbase@d2d75af3f73e783a693a7ef86a2847f0c0e39c1d/-/blob/v1/talk.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wikimedia/restbase/blob/d2d75af3f73e783a693a7ef86a2847f0c0e39c1d/v1/talk.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/talk/{title}\": get: responses: 404: content: application/problem+json: schema: parse schema: at 1:2698: find schema: resolve: can't find value for \"components/schemas/problem\""
}