{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tatumio/tatum-blockchain-connector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "hyperledger-fabric-connector/module/openapi.yaml",
			"byteSize": 5289,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api-eu1.tatum.io'\ninfo:\n  version: 1.0.0\n  title: Tatum Hyperledger Fabric API\ntags:\n  - description: |\n      <p>Hyperledger FAbric is an open-source, private-permissioned blockchain. It provides enhanced enterprise functionality with multiple pluggable consensus mechanisms, enterprise-grade permissions management, and transaction privacy features. <br/>\n      The Hyperledger Fabric network is not run by Tatum, developers should connect to their own private instance. For testing purposes, there is a playground Fabric implementation available at <b>http://ec2-35-159-31-167.eu-central-1.compute.amazonaws.com:8080/</b>.</p>\n    name: Blockchain / Fabric\npaths:\n  /v3/fabric/data:\n    post:\n      description: |\n        <h4>2 credit per API call.</h4><br/>\n        <p>Store data on the Hyperledger under the key.</p>\n      operationId: FabricGenerateAccount\n      parameters:\n        - in: header\n          name: x-fabric-endpoint\n          required: true\n          description: URL of the Fabric network\n          schema:\n            type: string\n            example: http://ec2-35-159-31-167.eu-central-1.compute.amazonaws.com:8080/\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - key\n                - data\n                - chain\n              properties:\n                key:\n                  description: Key, under which the data will be stored.\n                  example: key_1\n                  type: string\n                data:\n                  description: Data, which will be stored under the key.\n                  maxLength: 130000\n                  type: string\n                  example: Data to store.\n                chain:\n                  type: string\n                  description: Chain to store data on.\n                  enum:\n                    - FABRIC\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  txId:\n                    example: 'key_1'\n                    type: string\n                    description: Key, under which the data was stored.\n                required:\n                  - txId\n          description: OK\n        400: &API400\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error400\"\n          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.\n        401: &API401\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error401\"\n          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.\n        403: &API403\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403\"\n        500: &API500\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error500\"\n          description: Internal server error. There was an error on the server during the processing of the request.\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Store data\n      tags:\n        - Blockchain / Fabric\n  /v3/fabric/data/{key}:\n    get:\n      description: |\n        <h4>1 credit per API call.</h4><br/>\n        <p>Get data from Fabroc</p>\n      operationId: FabricGetData\n      parameters:\n        - in: header\n          name: x-fabric-endpoint\n          required: true\n          description: URL of the Fabric network\n          schema:\n            type: string\n            example: http://ec2-35-159-31-167.eu-central-1.compute.amazonaws.com:8080/\n        - description: Key to obtain data.\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n            example: \"key_1\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    example: My data.\n                    type: string\n                    description: Stored data.\n                required:\n                  - data\n          description: OK\n        400:\n          <<: *API400\n        401:\n          <<: *API401\n        403:\n          <<: *API403\n        500:\n          <<: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Gat data\n      tags:\n        - Blockchain / Fabric\ncomponents:\n  securitySchemes:\n    X-Api-Key:\n      description: |\n        To maintain the highest security level, Tatum requires X-API-Key HTTP header.\n        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.\n        Each X-API-Key is bound to the test or production blockchains.\n      in: header\n      name: x-api-key\n      type: apiKey\n",
			"canonicalURL": "/github.com/tatumio/tatum-blockchain-connector@9ea9ff222ff68d2630da1f70e841a31becc00872/-/blob/hyperledger-fabric-connector/module/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tatumio/tatum-blockchain-connector/blob/9ea9ff222ff68d2630da1f70e841a31becc00872/hyperledger-fabric-connector/module/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v3/fabric/data\": at 1:476: post: operation \"FabricGenerateAccount\": at 1:484: responses: 400: at 1:1594: content: application/json: at 1:1625: schema: at 1:1635: parse schema: resolve \"#/components/schemas/Error400\": find schema: resolve \"#/components/schemas/Error400\": can't find value for \"components/schemas/Error400\""
}