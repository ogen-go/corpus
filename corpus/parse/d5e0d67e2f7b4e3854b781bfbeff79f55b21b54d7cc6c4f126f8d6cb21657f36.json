{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/d-vignesh/Todo-App-with-OpenAPI"
		},
		"file": {
			"name": "todo.yml",
			"size": 0,
			"path": "todo.yml",
			"byteSize": 4100,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: Todo app OAS\n  description: OpenApi specification for a todo application\n  version: 1.0.0\n\nservers:\n  - url: http://localhost:32208/\n\ncomponents:\n  schemas:\n    Todo:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n        user:\n          type: string\n          format: uuid\n        task:\n          type: string\n        status:\n          type: string\n          enum:\n            - on_hold\n            - working\n            - done\n        created_at:\n          type: string\n          format: date-time\n        completed_at:\n          type: string\n          format: date-time\n      required:\n        - user\n        - task\n        - status\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n      required:\n        - code\n        - message\n\npaths:\n  /todos:\n    post:\n      description: Creates a new todo \n      operationId: createTodo\n      requestBody:\n        description: Todo to add\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Todo'\n      responses:\n        '201': \n          description: Todo creation response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Todo'\n        default:\n          description: unexpected error \n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    get:\n      description: Returns all the todo's of the user\n      operationId: getTodos\n      parameters:\n        - name: user\n          in: query\n          description: ID of the user\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: status\n          in: query\n          description: filter todo's by status\n          schema:\n            type: string\n            enum:\n              - on_hold\n              - working\n              - done\n      responses:\n        '200':\n          description: get todo's response \n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Todo'\n        default:\n          description: unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n  /todos/{todoId}:\n    put:\n      description: Updates the status of a todo\n      operationId: updateTodo\n      parameters:\n        - name: todoId\n          in: path \n          description: Id of the todo \n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        description: status of the todo\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                task:\n                  type: string\n                status:\n                  type: string\n                  enum:\n                    - on_hold\n                    - working\n                    - done\n        responses:\n          '200':\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Todo'\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Error'\n    delete:\n      description: delete a todo\n      operationId: deleteTodo\n      parameters:\n        - name: todoId\n          in: path\n          description: Id of the todo\n          required: true\n          schema: \n            type: integer\n            format: int32\n      responses:\n        '204':\n          description: no content\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n\n\n\n",
			"canonicalURL": "/github.com/d-vignesh/Todo-App-with-OpenAPI@2e6179b886e2f971f2838095f727b480e7aa805a/-/blob/todo.yml",
			"externalURLs": [
				{
					"url": "https://github.com/d-vignesh/Todo-App-with-OpenAPI/blob/2e6179b886e2f971f2838095f727b480e7aa805a/todo.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/todos/{todoId}\": put: operation \"updateTodo\": at todo.yml:116:7: responses: no responses"
}