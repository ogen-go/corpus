{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OneraHub/WhatsOpt"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 15911,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  title: WhatsOpt API\n  version: v1\n  contact:\n    name: API Support\n    email: remi.lafage@onera.fr\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n- url: https://ether.onera.fr/whatsopt\n  description: External production server\n- url: https://selene.onecert.fr/whatsopt\n  description: Internal production server\n- url: https://erebe.onecert.fr/whatsopt\n  description: Internal staging server\n- url: http://persephone:3000\n  description: Development server\n- url: http://localhost:3000\n  description: Docker development server\npaths:\n  \"/api/v1/analyses\":\n    get:\n      summary: Get analyses\n      tags:\n      - Multi-Disciplinary Analyses\n      security:\n      - Token: []\n      responses:\n        '200':\n          description: List analyses\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                    name:\n                      type: string\n                    created_at:\n                      type: string\n                      format: date-time\n                    updated_at:\n                      type: string\n                      format: date-time\n                  required:\n                  - id\n                  - name\n                  - created_at\n                  - updated_at\n  \"/api/v1/analyses/{id}\":\n    get:\n      summary: Get analysis details\n      tags:\n      - Multi-Disciplinary Analyses\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: Analysis identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: return analysis information\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AnalysisInfo\"\n  \"/api/v1/analyses/{id}.xdsm\":\n    get:\n      summary: Get XDSMjs format for given analysis\n      tags:\n      - Multi-Disciplinary Analyses\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: Analysis identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: return XDSM structure\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Xdsm\"\n  \"/api/v1/meta_models\":\n    get:\n      summary: Get meta-models\n      tags:\n      - Meta-Modeling\n      security:\n      - Token: []\n      responses:\n        '200':\n          description: List meta-models\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                    reference_analysis:\n                      \"$ref\": \"#components/schemas/AnalysisInfo\"\n                  required:\n                  - id\n                  - reference_analysis\n  \"/api/v1/meta_models/{id}\":\n    get:\n      summary: Get meta-model details\n      tags:\n      - Meta-Modeling\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: Meta-model identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: return meta-model information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                  reference_analysis:\n                    \"$ref\": \"#components/schemas/AnalysisInfo\"\n                  surrogate_kind:\n                    type: string\n                    enum:\n                    - SMT_KRIGING\n                    - SMT_KPLS\n                    - SMT_KPLSK\n                    - SMT_LS\n                    - SMT_QP\n                    - OPENTURNS_PCE\n                  xlabels:\n                    type: array\n                    items:\n                      type: string\n                  ylabels:\n                    type: array\n                    items:\n                      type: string\n    put:\n      summary: Predict using the meta-model\n      description: Compute y responses at given x points\n      tags:\n      - Meta-Modeling\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: MetaModel identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: y predictions at x points in matrix format (nsample, nydim)\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  y:\n                    \"$ref\": \"#/components/schemas/Matrix\"\n        '404':\n          description: MetaModel not found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: 'x points where to predict using matrix format (nsampling,\n                nxdim) \u003cbr/\u003e           where \u003cstrong\u003ensampling\u003c/strong\u003e is the number\n                of points and \u003cstrong\u003enxdim\u003c/strong\u003e the dimension of x\u003cbr/\u003e           Each\n                column corresponds to the various values of an input variables of\n                the metamodel. \u003cbr/\u003e           For one sampling point x (x_1, x_2,\n                ..., x_nxdim), x_* values consist of input variables listed in *lexical\n                order* \u003cbr/\u003e           When a variable is multidimensional it should\n                be expanded as variable''s size scalar values\u003cbr/\u003e           (example:\n                z of shape (m, p, q) will expands in ''z[0]'', ''z[1]'', ..., ''z[m*p*q-1]'',\n                ''z[m*p*q]'' scalar values).'\n              type: object\n              properties:\n                meta_model:\n                  type: object\n                  properties:\n                    x:\n                      \"$ref\": \"#/components/schemas/Matrix\"\n  \"/api/v1/optimizations\":\n    post:\n      summary: Create an optimization context\n      description: Initialize optimization context specifying design space and constraints\n      tags:\n      - Optimization\n      security:\n      - Token: []\n      parameters: []\n      responses:\n        '201':\n          description: Optimization successfully created\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: |-\n                Optmization context: xlimits and optional constraints \u003cbr/\u003e\n                          * xlimits: design space in matrix format (nxdim, 2). The ith row is [lower bound, upper bound] of the ith design variable. \u003c/br\u003e\n                          * cstr_specs: constraint c specification either *c\u003cbound*, *c\u003ebound*, *c=bound* (default is *\u003c0*)\n              type: object\n              properties:\n                optimization:\n                  type: object\n                  properties:\n                    xlimits:\n                      \"$ref\": \"#/components/schemas/XLimits\"\n                    cstr_specs:\n                      type: array\n                      items:\n                        \"$ref\": \"#/components/schemas/ConstraintSpec\"\n                  required:\n                  - xlimits\n              required:\n              - optimization\n  \"/api/v1/optimizations/{id}\":\n    put:\n      summary: Ask for next optimal x suggestion where f(x suggestion) is expected\n        to be minimal\n      description: Compute next x sample point suggestion regarding provided x, y\n        which result of previous function f evaluations \u003cbr/\u003e       and optional constraint\n        functions g1, g2, ..., gn specified at optimization creation. \u003c/br\u003e       Previous\n        evaluations should result from an initial DOE execution followed by previous\n        call evaluation on previous suggestions.\n      tags:\n      - Optimization\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: Optimization identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: x suggestion computation started\n          content: {}\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: 'x, y sampling points using matrix format (nsample, nxdim),\n                (nsampling, nydim) \u003cbr/\u003e           where \u003cstrong\u003ensampling\u003c/strong\u003e\n                is the number of sample points, \u003cstrong\u003enxdim\u003c/strong\u003e the dimension\n                of x and\u003cbr/\u003e           \u003cstrong\u003enydim\u003c/strong\u003e the dimension of y.\n                \u003cbr/\u003e           Each column of x corresponds to the various values\n                of an *input variables* of the optimized function. \u003cbr/\u003e           Each\n                column of y corresponds to the various values of an *output variables*\n                of the optimized function. \u003cbr/\u003e           y sampling result from\n                the concatenation of the objective function f scalar result (required)\n                and optional \u003cbr /\u003e           contraint functions g1, g2, etc evaluated\n                at a given sampling point x. \u003cbr/\u003e           For one sampling point\n                x (x_1, x_2, ..., x_nxdim), x_* values consist of input variables\n                listed in *lexical order* \u003cbr/\u003e           For one sampling result\n                y (y_1, y_2, ..., y_nydim), x_* values consist of output variables\n                listed in *lexical order* \u003cbr/\u003e           When a variable is multidimensional\n                it should be expanded as variable''s size scalar values\u003cbr/\u003e           (example:\n                z of shape (m, p, q) will expands in ''z[0]'', ''z[1]'', ..., ''z[m*p*q-1]'',\n                ''z[m*p*q]'' scalar values).'\n              type: object\n              properties:\n                optimization:\n                  type: object\n                  properties:\n                    x:\n                      \"$ref\": \"#/components/schemas/Matrix\"\n                    y:\n                      \"$ref\": \"#/components/schemas/Matrix\"\n    get:\n      summary: Retrieve optimization result\n      tags:\n      - Optimization\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: Optimization identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Retrieve current optimization result\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Optimization result\n                properties:\n                  id:\n                    type: number\n                  kind:\n                    type: string\n                  inputs:\n                    type: object\n                    properties:\n                      x:\n                        \"$ref\": \"#components/schemas/Matrix\"\n                      y:\n                        \"$ref\": \"#components/schemas/Matrix\"\n                  outputs:\n                    type: object\n                    properties:\n                      x_suggested:\n                        \"$ref\": \"#components/schemas/RowVector\"\n                        nullable: true\n                      status:\n                        type: integer\n                        enum:\n                        - -1\n                        - 0\n                        - 1\n                        - 2\n                        - 3\n                        - 4\n                    required:\n                    - x_suggested\n                    - status\n                  created_at:\n                    type: string\n                    format: date-time\n                  updated_at:\n                    type: string\n                    format: date-time\n                required:\n                - inputs\n                - outputs\n    delete:\n      summary: Destroy optimization context\n      tags:\n      - Optimization\n      security:\n      - Token: []\n      parameters:\n      - name: id\n        in: path\n        description: Optimization identifier\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: Optimization context successfully deleted\n          content: {}\ncomponents:\n  schemas:\n    AnalysisInfo:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        owner_email:\n          type: string\n          format: email\n        notes:\n          type: string\n    AnalysisAttributes:\n      type: object\n      properties:\n        name:\n          type: string\n        disciplines_attributes:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              variables_attributes:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    io_mode:\n                      type: string\n                      enum:\n                      - in\n                      - out\n              sub_analysis_attributes:\n                \"$ref\": \"#/components/schemas/AnalysisAttributes\"\n    ConstraintSpec:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n          - \"\u003c\"\n          - \"\u003e\"\n          - \"=\"\n          default: \"\u003c\"\n        bound:\n          type: number\n          format: double\n          default: 0.0\n    Error:\n      type: object\n      properties:\n        message:\n          type: string\n    Interval:\n      type: array\n      items:\n        type: number\n        format: double\n      minItems: 2\n      maxItems: 2\n    Matrix:\n      description: list of row vectors\n      type: array\n      items:\n        \"$ref\": \"#components/schemas/RowVector\"\n      minItems: 1\n    RowVector:\n      type: array\n      items:\n        type: number\n        format: double\n      minItems: 1\n    XLimits:\n      description: design space (nxdim intervals)\n      type: array\n      items:\n        \"$ref\": \"#components/schemas/Interval\"\n      minItems: 1\n    Xdsm:\n      type: object\n      additionalProperties:\n        type: object\n        properties:\n          nodes:\n            type: array\n            items:\n              type: object\n              properties:\n                id:\n                  type: string\n                name:\n                  type: string\n                type:\n                  type: string\n          edges:\n            type: array\n            items:\n              type: object\n              properties:\n                from:\n                  type: string\n                to:\n                  type: string\n                name:\n                  type: string\n  securitySchemes:\n    Token:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Enter your API key with the format **Token \u0026lt;API key\u0026gt;**\nsecurity:\n- Token: []\ntags:\n- name: Multi-Disciplinary Analyses\n  description: Operations for using analyses created in WhatsOpt\n- name: Meta-Modeling\n  description: Operations for using meta-models created in WhatsOpt\n- name: Optimization\n  description: Operations for using Onera SEGOMOE optimizer\nexternalDocs:\n  description: Find out more on WhatsOpt\n  url: http://github.com/OneraHub/WhatsOpt\n",
			"canonicalURL": "/github.com/OneraHub/WhatsOpt@d6c58221d1c8b5866e8a032db8fee22de18b4329/-/blob/swagger/v1/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OneraHub/WhatsOpt/blob/d6c58221d1c8b5866e8a032db8fee22de18b4329/swagger/v1/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Matrix\": parse schema: item: parse schema: resolve \"#components/schemas/RowVector\": find schema: resolve \"#components/schemas/RowVector\": invalid pointer \"components/schemas/RowVector\": pointer must start with '/'"
}