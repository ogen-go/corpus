{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cam-inc/viron"
		},
		"file": {
			"name": "users.yaml",
			"size": 0,
			"path": "example/nodejs/src/openapi/users.yaml",
			"byteSize": 4279,
			"content": "openapi: 3.0.2\ninfo:\n  version: 0.0.1\n  title: '@viron/example-nodejs users'\n  description: users api specifications\n  x-pages:\n    - id: user\n      group: 管理画面/ユーザー\n      title: ユーザー情報\n      description: |\n        # ユーザー情報の管理\n        ユーザーデータの **作成・更新・削除** を行います。\n      contents:\n        - title: ユーザー情報\n          type: table\n          operationId: listUsers\n          pagination: true\n          actions:\n            # CSVダウンロード\n            - operationId: downloadResources\n              defaultParametersValue:\n                resourceName: users\n                format: csv\n          resourceId: user\n\ntags:\n  - name: user\n\npaths:\n  /users:\n    get:\n      operationId: listUsers\n      tags:\n        - user\n      summary: list users\n      description: ユーザー一覧\n      parameters:\n        - $ref: './components.yaml#/components/parameters/PagerSizeQueryParam'\n        - $ref: './components.yaml#/components/parameters/PagerPageQueryParam'\n        - $ref: './components.yaml#/components/parameters/SortQueryParam'\n        - $ref: '#/components/parameters/UserIdQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserListWithPager'\n      security:\n        - jwt: []\n\n    post:\n      operationId: createUser\n      tags:\n        - user\n      summary: create user\n      description: ユーザー作成\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCreatePayload'\n      responses:\n        201:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      security:\n        - jwt: []\n\n  /users/{userId}:\n    put:\n      operationId: updateUser\n      tags:\n        - user\n      summary: update user\n      description: ユーザー更新\n      parameters:\n        - $ref: '#/components/parameters/UserIdPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserUpdatePayload'\n      responses:\n        204:\n          description: OK\n      security:\n        - jwt: []\n\n    delete:\n      operationId: removeUser\n      tags:\n        - user\n      summary: remove user\n      description: ユーザー削除\n      parameters:\n        - $ref: '#/components/parameters/UserIdPathParam'\n      responses:\n        204:\n          description: OK\n      security:\n        - jwt: []\n\ncomponents:\n  parameters:\n    UserIdPathParam:\n      name: userId\n      in: path\n      schema:\n        type: string\n      required: true\n\n    UserIdQueryParam:\n      name: userId\n      in: query\n      schema:\n        type: string\n      required: false\n\n  schemas:\n    UserListWithPager:\n      allOf:\n        - $ref: './components.yaml#/components/schemas/Pager'\n        - type: object\n          properties:\n            list:\n              $ref: '#/components/schemas/UserList'\n          required:\n            - list\n\n    UserList:\n      type: array\n      items:\n        $ref: '#/components/schemas/User'\n\n    User:\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n        name:\n          description: 名前\n          type: string\n        nickName:\n          description: ニックネーム\n          type: string\n        createdAt:\n          $ref: './components.yaml#/components/schemas/CreatedAt'\n        updatedAt:\n          $ref: './components.yaml#/components/schemas/UpdatedAt'\n      required:\n        - id\n        - name\n\n    UserCreatePayload:\n      type: object\n      properties:\n        name:\n          description: 名前\n          type: string\n        nickName:\n          description: ニックネーム\n          type: string\n      required:\n        - name\n\n    UserUpdatePayload:\n      type: object\n      properties:\n        name:\n          description: 名前\n          type: string\n        nickName:\n          description: ニックネーム\n          type: string\n      required:\n        - name\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"UserListWithPager\": parse schema: allOf: [0]: parse schema: resolve \"./components.yaml#/components/schemas/Pager\": find schema: external base \"./components.yaml\" is not supported"
}