{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "ingest.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/ingest.yml",
			"byteSize": 21275,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Ingest Services\n  version: v6\npaths:\n  /ingests:\n    get:\n      operationId: _rest_v6_ingest_list\n      summary: Ingest List\n      description: Returns a list of all ingests\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: order\n          schema:\n            type: string\n          description: \"One or more fields to use when ordering the results. |\n                        Duplicate it to multi-sort, (ex: order=host_name\u0026order=created) |\n                        Nested objects require a delimiter (ex: order=source_file__created) |\n                        Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n        - in: query\n          name: status\n          schema:\n            type: string\n          description: \"Return only ingests with a status matching this string.\n                        Choices: [TRANSFERRING, TRANSFERRED, DEFERRED, INGESTING, INGESTED, ERRORED, DUPLICATE]\"\n        - in: query\n          name: scan_id\n          schema:\n            type: integer\n          description: Return only ingests created by a given scan process identifier.\n            Duplicate it to filter by multiple values.\n        - in: query\n          name: strike_id\n          schema:\n            type: integer\n          description: Return only ingests created by a given strike process identifier.\n            Duplicate it to filter by multiple values.\n        - in: query\n          name: file_name\n          schema:\n            type: string\n          description: Return only ingests with a specific file name.\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ingest_list'\n  /ingests/{id}/:\n    get:\n      operationId: _rest_v6_ingest_details\n      summary: Ingest Details\n      description: Returns a specific ingest and all its related model information\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing node\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ingest_details'\n  /ingests/status/:\n    get:\n      operationId: _rest_v6_ingest_status\n      summary: Ingest Status\n      description: \"Returns status summary information (counts, file sizes) for completed ingests grouped into 1 hour time slots.\n                    NOTE: Time range must be within a one month period (31 days).\"\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: use_ingest_time\n          schema:\n            type: boolean\n          description: Whether to group counts by ingest time or data time.\n            Ingest time is when the strike process registered the file.\n            Data time is the time when the data was collected by a sensor.\n            Defaults to False (data time).\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ingest_status_list'\n\ncomponents:\n  schemas:\n    ingest_list:\n      title: Ingest List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters\n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ingest_details'\n          description: List of ingest objects\n    ingest_details:\n      title: Ingest Details\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        file_name:\n          type: string\n          description: The name of the file being ingested.\n          example: file_name.txt\n        scan:\n          $ref: '#/components/schemas/scan'\n        strike:\n          $ref: '#/components/schemas/strike_details'\n        status:\n          type: string\n          description: \"The current status of the ingest.\n                        Choices: [TRANSFERRING, TRANSFERRED, DEFERRED, INGESTING, INGESTED, ERRORED, DUPLICATE]\"\n          example: INGESTED\n        bytes_transferred:\n          type: integer\n          description: The total number of bytes transferred so far.\n          example: 1234\n        transfer_started:\n          type: string\n          format: date-time\n          description: When the transfer was started.\n          example: 2015-09-10T14:48:08.920Z\n        transfer_ended:\n          type: string\n          format: date-time\n          description: When the transfer ended.\n          example: 2015-09-10T14:48:08.956Z\n        media_type:\n          type: string\n          description: The IANA media type of the file.\n          example: text/plain\n        file_size:\n          type: integer\n          description: The size of the file in bytes.\n          example: 1234\n        data_type_tags:\n          type: array\n          style: simple\n          items:\n            type: string\n          description: A list of string data type \"tags\" for the file.\n        file_path:\n          type: string\n          description: The relative path of the file in the workspace.\n          example: the/current/path/file_name.txt\n        workspace:\n          $ref: '#/components/schemas/workspace_base'\n        new_file_path:\n          type: string\n          description: The relative path for where the file should be moved as part of ingesting.\n          example: the/new/path/file_name.txt\n        new_workspace:\n          $ref: '#/components/schemas/workspace_base'\n        job:\n          $ref: '#/components/schemas/job'\n        ingest_started:\n          type: string\n          format: date-time\n          description: When the ingest was started.\n          example: 2015-09-10T15:24:53.503Z\n        ingest_ended:\n          type: string\n          format: date-time\n          description: When the ingest ended.\n          example: 2015-09-10T15:24:53.987Z\n        source_file:\n          $ref: '#/components/schemas/source_file'\n        data_started:\n          type: string\n          format: date-time\n          description: The start time of the source data being ingested.\n          example: 2015-09-10T15:24:53.503Z\n        data_ended:\n          type: string\n          format: date-time\n          description: The end time of the source data being ingested.\n          example: 2015-09-10T15:24:53.987Z\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n\n    scan:\n      title: Scan Details\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        name:\n          type: string\n          description: The identifying name of the Scan process used for queries.\n          example: my-scan-process\n        title:\n          type: string\n          description: The human readable display name of the Scan process.\n          example: My Scan Process\n        description:\n          type: string\n          description: A longer description of the Scan process.\n          example: This is my Scan process for detecting my favorite files!\n        file_count:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        job:\n          $ref: '#/components/schemas/job'\n        dry_run_job:\n          $ref: '#/components/schemas/job'\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n        configuration:\n          $ref: '#/components/schemas/scan_config'\n\n    scanner:\n      title: Scanner\n      type: object\n      properties:\n        type:\n          type: string\n          description: The type is a required string that specifies the type of the scanner to use.\n            The other fields that configure the scanner are based upon the type of the scanner in the type field.\n            Certain scanner types may only be used on workspaces with corresponding broker types. The valid scanner types are dir and s3\n          example: dir\n        transfer_suffix:\n          type: string\n          description: The transfer_suffix field is an optional string that defines a suffix that is\n            used on the file names to indicate that files are still transferring and have not yet finished\n            being copied into the scanned directory. Only used with dir scanners. Defaults to _tmp if not specified\n          example: _tmp\n      required:\n      - type\n\n    ingest_file:\n      title: File Ingest Rule\n      type: object\n      properties:\n        filename_regex:\n          type: string\n          description: The filename_regex field is a required string that defines a regular expression to check against\n            the names of new files in the scanned workspace. When a new file appears in the workspace, the file’s name\n            is checked against each expression in order of the files_to_ingest array. If an expression matches the new\n            file name in the workspace, that file is ingested according to the other fields in the JSON object and all\n            subsequent rules in the list are ignored (first rule matched is applied).\n          example: \"*.txt\"\n        data_types:\n          type: array\n          style: simple\n          items:\n            type: string\n          description: The data_types field is an optional list of strings. Any file that matches the corresponding file\n            name regular expression will have these data type strings “tagged” with the file. If not provided, data_types\n            defaults to an empty array.\n          example: []\n        new_workspace:\n          type: string\n          description: The new_workspace field optionally specifies the name of a new workspace to which the file should\n            be copied. This allows the ingest process to move files to a different workspace after they appear in the\n            scanned workspace.\n          example: my-new-workspace\n        new_file_path:\n          type: string\n          description: The new_file_path field is an optional string that specifies a new relative path for storing new\n            files. If new_workspace is also specified, the file is moved to the new workspace at this new path location\n            (instead of using the current path the new file originally came in on). If new_workspace is not specified,\n            the file is moved to this new path location within the original scanned workspace. In either of these cases,\n            three additional and dynamically named directories, for the current year, month, and day, will be appended to\n            the new_file_path value automatically by the Scale system (i.e. workspace_path/YYYY/MM/DD).\n          example: the/new/path/\n\n    dir_monitor:\n      title: Directory Monitor\n      type: object\n      properties:\n        type:\n          type: string\n          description: The type is a required string that specifies the type of monitor to use.\n            The other fields that configure the monitor are based upon the type of the monitor in the type field.\n            Certain monitor types may only be used on workspaces with corresponding broker types. The valid\n            monitor types are dir-watcher and s3\n          example: dir-watcher\n        transfer_suffix:\n          type: string\n          description: The transfer_suffix field is an optional string that defines a suffix that is\n            used on the file names to indicate that files are still transferring and have not yet finished\n            being copied into the scanned directory. Only used with dir monitors.\n          example: _tmp\n      required:\n      - type\n\n    s3_monitor:\n      title: S3 Monitor\n      type: object\n      properties:\n        type:\n          type: string\n          description: The type is a required string that specifies the type of monitor to use.\n            The other fields that configure the monitor are based upon the type of the monitor in the type field.\n            Certain monitor types may only be used on workspaces with corresponding broker types. The valid\n            monitor types are dir-watcher and s3\n          example: dir-watcher\n        sqs_name:\n          type: string\n          description: The sqs_name field is a required string that defines the name of the SQS queue\n            that should be polled for object creation notifications that describe new files in the S3 bucket.\n          example: my-sqs\n        credentials:\n          $ref: './workspace.yml#/components/schemas/credentials'\n        region_name:\n          type: string\n          description: The region_name is an optional string that specifies the AWS region where the\n            SQS Queue is located. This is not always required, as environment variables or configuration\n            files could set the default region, but it is a highly recommended setting for explicitly\n            indicating the SQS region.\n          example: us-east-1\n      required:\n      - type\n      - sqs_name\n\n    source_file:\n      title: Source File\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        workspace:\n          $ref: './workspace.yml#/components/schemas/workspace_base'\n        file_name:\n          type: string\n          description: The name of the source file.\n          example: my_file.kml\n        media_type:\n          type: string\n          description: The IANA media type of the source file.\n          example: application/vnd.google-earth.kml+xml\n        file_size:\n          type: integer\n          description: The size of the file in bytes.\n          example: 1234\n        data_type_tags:\n          type: array\n          style: simple\n          items:\n            type: string\n          description: A list of string data type \"tags\" for the file.\n        is_deleted:\n          type: boolean\n          description: Whether the source file has been deleted.\n          example: True\n        uuid:\n          type: string\n          description: A unique identifier that stays stable across multiple job execution runs.\n          example: c8928d9183fc99122948e7840ec9a0fd\n        url:\n          type: string\n          format: uri\n          description: The absolute URL to use for downloading the file.\n          example: http://host.com/file/path/my_file.kml\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        deleted:\n          type: string\n          format: date-time\n          description: When the source file was deleted.\n          example: 2015-09-10T15:24:53.987Z\n        data_started:\n          type: string\n          format: date-time\n          description: When collection of the underlying data file started.\n          example: 2015-09-10T15:24:53.503Z\n        data_ended:\n          type: string\n          format: date-time\n          description: When collection of the underlying data file ended.\n          example: 2015-09-10T15:24:53.987Z\n        geometry:\n          type: string\n          description: The full geospatial geometry footprint of the source file. (WKT format)\n          example: POLYGON((11 -11,22 -22,33 -33,44 -44))\n        center_point:\n          type: string\n          description: The central geospatial location of the source file.\n          example: POINT(11 -11)\n        meta_data:\n          $ref: './scale_file#/components/schemas/metadata'\n        countries:\n          type: array\n          style: simple\n          items:\n            type: string\n          description: A list of zero or more strings with the ISO3 country codes for countries\n            contained in the geographic boundary of this file.\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n        is_parsed:\n          type: boolean\n          description: Whether this source file was successfully parsed and ingested into the system.\n          example: True\n        parsed:\n          type: string\n          format: date-time\n          description: When the source file was originally parsed by Scale.\n          example: 2015-09-10T15:24:53.987Z\n      required:\n      - id\n\n    ingest_status_list:\n      title: Ingest Status List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters\n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ingest_status'\n          description: List of ingest status objects\n\n    ingest_status:\n      title: Ingest Status\n      type: object\n      properties:\n        strike:\n          $ref: './strike.yml#/components/schemas/strike_base'\n        most_recent:\n          type: string\n          format: date-time\n          description: The date/time when the strike process last completed an ingest.\n          example: 2015-09-10T15:24:53.987Z\n        files:\n          type: integer\n          description: The total number files ingested by the strike process.\n          example: 1234\n        size:\n          type: integer\n          description: The total size of files ingested by the strike process in bytes.\n          example: 1234\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/ingest_stats'\n          description: List of ingest statistics grouped into 1 hour time slots.\n\n    ingest_stats:\n      title: Ingest Statistics\n      type: object\n      properties:\n        time:\n          type: string\n          format: date-time\n          description: The date/time when the strike process last completed an ingest.\n          example: 2015-09-10T15:24:53.987Z\n        files:\n          type: integer\n          description: The number of files ingested by the strike process within the time slot.\n          example: 10\n        size:\n          type: integer\n          description: The size of files ingested by the strike process in bytes within the time slot.\n          example: 123456789\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"s3_monitor\": parse schema: property \"credentials\": parse schema: resolve \"./workspace.yml#/components/schemas/credentials\": find schema: external base \"./workspace.yml\" is not supported"
}