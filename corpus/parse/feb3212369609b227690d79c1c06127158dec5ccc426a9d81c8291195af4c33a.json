{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/citycoins/api"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "static/openapi.yml",
			"byteSize": 44083,
			"content": "openapi: 3.0.2\ninfo:\n  title: CityCoins API\n  description: A simple API to interact with Stacks and CityCoins data. See the [CityCoins documentation site](https://docs.citycoins.co/developer-resources/api) or [GitHub for more info.](https://github.com/citycoins/api)\n  version: 2.0.0\nservers:\n  - url: https://api.citycoins.co\n    description: Main\n  - url: https://citycoins-api.citycoins.workers.dev\n    description: Development\ntags:\n  - name: Activation\n    description: Endpoints for interacting with [CityCoins activation data](https://docs.citycoins.co/core-protocol/registration-and-activation)\n    externalDocs:\n      description: Contract Functions Reference\n      url: https://docs.citycoins.co/contract-functions/activation\n  - name: Mining\n    description: Endpoints for interacting with [CityCoins mining data](https://docs.citycoins.co/core-protocol/mining-citycoins)\n    externalDocs:\n      description: Contract Functions Reference\n      url: https://docs.citycoins.co/contract-functions/mining\n  - name: Mining Claims\n    description: Endpoints for interacting with [CityCoins mining claims data](https://docs.citycoins.co/core-protocol/mining-citycoins)\n    externalDocs:\n      description: Contract Functions Reference\n      url: https://docs.citycoins.co/contract-functions/mining-claims\n  - name: Stacking\n    description: Endpoints for interacting with [CityCoins stacking data](https://docs.citycoins.co/core-protocol/stacking-citycoins)\n    externalDocs:\n      description: Contract Functions Reference\n      url: https://docs.citycoins.co/contract-functions/stacking\n  - name: Stacking Claims\n    description: Endpoints for interacting with [CityCoins stacking claims data](https://docs.citycoins.co/core-protocol/stacking-citycoins)\n    externalDocs:\n      description: Contract Functions Reference\n      url: https://docs.citycoins.co/contract-functions/stacking-claims\n  - name: Token\n    description: Endpoints for interacting with [CityCoins token data](https://docs.citycoins.co/core-protocol/token-configuration)\n    externalDocs:\n      description: Contract Functions Reference\n      url: https://docs.citycoins.co/contract-functions/token\n  - name: Stacks\n    description: Wrappers and tools using the [Stacks Blockchain API](https://hirosystems.github.io/stacks-blockchain-api/)\n    externalDocs:\n      description: Hiro Documentation Reference\n      url: https://docs.hiro.so/get-started/stacks-blockchain-api\n  - name: Tools\n    description: Wrappers for complex contract interactions and external data\npaths:\n  /stacks/get-block-height:\n    get:\n      summary: Get Stacks Block Height\n      description: Get the current Stacks block height\n      tags:\n        - Stacks\n      parameters:\n        - $ref: '#/components/parameters/format'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /stacks/get-bns-name/{address}:\n    get:\n      summary: Get BNS Name\n      description: Get the BNS name for a given Stacks address\n      tags:\n        - Stacks\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /stacks/get-stx-balance/{address}:\n    get:\n      summary: Get Stacks Balance\n      description: Get the STX balance in uSTX for a given Stacks address\n      tags:\n        - Stacks\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /stacks/get-date-at-block/{blockheight}:\n    get:\n      summary: Get Date at Block Height\n      description: Get the ISO-formatted date for a given Stacks block height\n      tags:\n        - Stacks\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/blockheight'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/activation/get-activation-block:\n    get:\n      summary: Get Activation Block\n      description: Get the Stacks block height the token contract was activated at for a given CityCoin\n      tags:\n        - Activation\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/activation/get-activation-target:\n    get:\n      summary: Get Activation Target\n      description: Get the Stacks block height the core contract was activated at for a given CityCoin\n      tags:\n        - Activation\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/activation/get-city-wallet:\n    get:\n      summary: Get City Wallet Address\n      description: Get the city wallet address set in the auth contract for a given CityCoin and version.\n      tags:\n        - Activation\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n  \n  /{version}/{cityname}/activation/get-registered-users-nonce:\n    get:\n      summary: Get Registered Users\n      description: Get the total number of users assigned an ID from the core contract for a given CityCoin\n      tags:\n        - Activation\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/activation/get-user/{userid}:\n    get:\n      summary: Get User\n      description: Get the Stacks address for a given CityCoin and user ID\n      tags:\n        - Activation\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/userid'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/activation/get-user-id/{address}:\n    get:\n      summary: Get User ID\n      description: Get the CityCoins user ID from the core contract for a given CityCoin and Stacks address\n      tags:\n        - Activation\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining/get-block-winner-id/{blockheight}:\n    get:\n      summary: Get Block Winner ID\n      description: Gets the winning user ID for a given blockheight only *after the miner claims the reward*\n      tags:\n        - Mining\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining/get-mining-stats-at-block/{blockheight}/{default}:\n    get:\n      summary: Get Mining Stats\n      description: Get the mining stats for a given CityCoin and Stacks block height\n      tags:\n        - Mining\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n        - $ref: '#/components/parameters/default'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  amount:\n                    type: string\n                  amountToCity:\n                    type: string\n                  amountToStackers:\n                    type: string\n                  minersCount:\n                    type: string\n                  rewardClaimed:\n                    type: boolean\n              examples:\n                \"0\":\n                  value: \n                    amount: \"253600601\"\n                    amountToCity: \"76080180\"\n                    amountToStackers: \"177520421\"\n                    minersCount: \"6\"\n                    rewardClaimed: true\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining/get-miner-at-block/{blockheight}/{userid}/{default}:\n    get:\n      summary: Get Miner Info\n      description: Get the miner details for a given CityCoin, Stacks block height, and user ID.\n      tags:\n        - Mining\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n        - $ref: '#/components/parameters/userid'\n        - $ref: '#/components/parameters/default'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  lowValue:\n                    type: string\n                  highValue:\n                    type: string\n                  ustx:\n                    type: string\n                  winner:\n                    type: boolean\n              examples:\n                \"0\":\n                  value:\n                    lowValue: \"1000001\"\n                    highValue: \"41000000\"\n                    ustx: \"40000000\"\n                    winner: true\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining/get-last-high-value-at-block//{blockheight}:\n    get:\n      summary: Get Last High Value at Block\n      description: Gets the last high value at the specified block used to determine the winner by the VRF, and increases with each miner commitment.\n      tags:\n        - Mining\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonBoolean'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining/has-mined-at-block/{blockheight}/{userid}:\n    get:\n      summary: Has Mined at Block\n      description: Check if a the user has mined with a given CityCoin, Stacks block height, and user ID.\n      tags:\n        - Mining\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n        - $ref: '#/components/parameters/userid'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonBoolean'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining-claims/can-claim-mining-reward/{blockheight}/{address}:\n    get:\n      summary: Can Claim Mining Reward\n      description: Returns a boolean value indicating if the user's principal won and is eligible to claim the block reward at a given block height.\n      tags:\n        - Mining Claims\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonBoolean'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/mining-claims/is-block-winner/{blockheight}/{address}:\n    get:\n      summary: Is Block Winner\n      description: Returns a boolean value indicating if the user's principal won at a given block height.\n      tags:\n        - Mining Claims\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonBoolean'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/stacking/get-stacking-stats-at-cycle/{cycleid}/{default}:\n    get:\n      summary: Get Stacking Stats\n      description: Get the stacking stats for a given CityCoin and reward cycle ID\n      tags:\n        - Stacking\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/cycleid'\n        - $ref: '#/components/parameters/default'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  amountToken:\n                    type: string\n                  amountUstx:\n                    type: string\n              examples:\n                \"0\":\n                  value:\n                    amountToken: \"1281126283\"\n                    amountUstx: \"6617244628227\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/stacking/get-stacker-at-cycle/{cycleid}/{userid}/{default}:\n    get:\n      summary: Get Stacker Info\n      description: Get the amount stacked and amount to return for a given CityCoin, reward cycle ID, and user ID.\n      tags:\n        - Stacking\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/cycleid'\n        - $ref: '#/components/parameters/userid'\n        - $ref: '#/components/parameters/default'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  amountStacked:\n                    type: string\n                  toReturn:\n                    type: string\n              examples:\n                \"0\":\n                  value: \n                    amountStacked: \"0\"\n                    toReturn: \"0\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/stacking/get-reward-cycle/{blockheight}:\n    get:\n      summary: Get Reward Cycle\n      description: Get the reward cycle for a given CityCoin and Stacks block height\n      tags:\n        - Stacking\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/stacking/get-first-stacks-block-in-reward-cycle/{cycleid}:\n    get:\n      summary: Get First Block In Reward Cycle\n      description: Get the first Stacks block in a reward cycle for the given CityCoin and reward cycle ID\n      tags:\n        - Stacking\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/cycleid'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/stacking/stacking-active-at-cycle/{cycleid}:\n    get:\n      summary: Stacking Active at Cycle\n      description: Returns a boolean value indicating if stacking is active at a given reward cycle, meaning a positive number of CityCoins are Stacked for that cycle.\n      tags:\n        - Stacking\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/cycleid'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonBoolean'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/stacking-claims/get-stacking-reward/{cycleid}/{userid}:\n    get:\n      summary: Get Stacking Reward\n      description: |\n        Gets the amount of STX a user can claim in a given reward cycle in uSTX. This method will only return a positive value if\n        - the current block height is in a subsequent reward cycle\n        - the Stacker locked up CityCoins in the target reward cycle\n        - the Stacker locked up enough CityCoins to receive at least one uSTX\n      tags:\n        - Stacking Claims\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/cycleid'\n        - $ref: '#/components/parameters/userid'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-coinbase-amount/{blockheight}:\n    get:\n      summary: Get Coinbase Amount\n      description: Get the coinbase amount for a given CityCoin and Stacks block height\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-coinbase-amounts:\n    get:\n      summary: Get Coinbase Amounts\n      description: Gets the coinbase amounts for each coinbase threshold for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  coinbaseAmount1:\n                    type: string\n                  coinbaseAmount2:\n                    type: string\n                  coinbaseAmount3:\n                    type: string\n                  coinbaseAmount4:\n                    type: string\n                  coinbaseAmount5:\n                    type: string\n                  coinbaseAmountBonus:\n                    type: string\n                  coinbaseAmountDefault:\n                    type: string\n              examples:\n                \"0\":\n                  value: \n                    coinbaseAmount1: \"100000000000\"\n                    coinbaseAmount2: \"50000000000\"\n                    coinbaseAmount3: \"25000000000\"\n                    coinbaseAmount4: \"12500000000\"\n                    coinbaseAmount5: \"6250000000\"\n                    coinbaseAmountBonus: \"250000000000\"\n                    coinbaseAmountDefault: \"3125000000\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-coinbase-thresholds:\n    get:\n      summary: Get Coinbase Thresholds\n      description: Get the coinbase thresholds (Stacks block heights) for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/blockheight'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  coinbaseThreshold1:\n                    type: string\n                  coinbaseThreshold2:\n                    type: string\n                  coinbaseThreshold3:\n                    type: string\n                  coinbaseThreshold4:\n                    type: string\n                  coinbaseThreshold5:\n                    type: string\n              examples:\n                \"0\":\n                  value: \n                    coinbaseThreshold1: \"59497\"\n                    coinbaseThreshold2: \"109497\"\n                    coinbaseThreshold3: \"209497\"\n                    coinbaseThreshold4: \"409497\"\n                    coinbaseThreshold5: \"809497\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-name:\n    get:\n      summary: Get Token Name\n      description: Get the SIP-010 name for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{versions}/{cityname}/token/get-symbol:\n    get:\n      summary: Get Token Symbol\n      description: Get the SIP-010 symbol for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-decimals:\n    get:\n      summary: Get Token Decimals\n      description: Get the SIP-010 decimals for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-balance/{address}:\n    get:\n      summary: Get Token Balance\n      description: Get the token balance for a given CityCoin and Stacks address\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-total-supply:\n    get:\n      summary: Get Total Supply (single)\n      description: Get the SIP-010 total supply for a given CityCoin and version\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonNumber'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{cityname}/token/get-total-supply:\n    get:\n      summary: Get Total Supply (all)\n      description: |\n        Get the SIP-010 total supply for a given CityCoin across all versions.\n\n        Note: This will return the value in \"CityCoins\" not \"micro-CityCoins\" with 6 decimal places added to the calculation.\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /token/get-total-supply/{cityname}:\n    get:\n      summary: Get Total Supply (legacy)\n      description: |\n        Get the SIP-010 total supply for a given CityCoin across all versions.\n\n        Note: This will return the value in \"CityCoins\" not \"micro-CityCoins\" with 6 decimal places added to the calculation.\n\n        This endpoint is deprecated in favor of the new format `/{cityname}/token/get-total-supply` but will remain active until all known external services are converted.\n      deprecated: true\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-token-uri:\n    get:\n      summary: Get Token URI\n      description: Get the token URI URL for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonString'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/token/get-token-uri-json:\n    get:\n      summary: Get Token URI JSON\n      description: Get the contents of the token URI URL for a given CityCoin\n      tags:\n        - Token\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  image:\n                    type: string\n                  name:\n                    type: string\n                  description:\n                    type: string\n              examples:\n                \"0\":\n                  value: \n                    name: \"MiamiCoin\"\n                    description: \"A CityCoin for Miami, ticker is MIA, Stack it to earn Stacks (STX)\"\n                    image: \"https://cdn.citycoins.co/logos/miamicoin.png\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /tools/get-city-list:\n    get:\n      summary: Get City List\n      description: Get the list of city short names supported by the API.\n      tags:\n        - Tools\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/citylist'\n              examples:\n                \"0\":\n                  value: [\"mia\", \"nyc\"]\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{cityname}/tools/get-city-info:\n    get:\n      summary: Get City Info\n      description: Gets the basic info about a city including available and current contract versions.\n      tags:\n        - Tools\n      parameters:\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cityinfo'\n              examples:\n                \"0\":\n                  value:\n                    fullName: \"Miami\"\n                    logo: \"https://cdn.citycoins.co/brand/MIA_Miami/Coins/SVG/MiamiCoin_StandAlone_Coin.svg\"\n                    versions: [\"v1\", \"v2\"]\n                    currentVersion: \"v2\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /tools/get-full-city-info:\n    get:\n      summary: Get Full City Info\n      description: Gets the full city information data for all known cities supported by the API.\n      tags:\n        - Tools\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cityinfolist'\n              examples:\n                \"0\":\n                  value:\n                    \"mia\":\n                      fullName: \"Miami\"\n                      logo: \"https://cdn.citycoins.co/brand/MIA_Miami/Coins/SVG/MiamiCoin_StandAlone_Coin.svg\"\n                      versions: [\"v1\", \"v2\"]\n                      currentVersion: \"v2\"\n                    \"nyc\":\n                      fullName: \"New York City\"\n                      logo: \"https://cdn.citycoins.co/brand/NYC_NewYorkCity/Coins/SVG/CC_NYCCoin_StandAloneCoin.svg\"\n                      versions: [\"v1\", \"v2\"]\n                      currentVersion: \"v2\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n                \n  /{version}/{cityname}/tools/get-city-configuration:\n    get:\n      summary: Get City Configuration\n      description: Get the city configuration data depending on the select version and city name.\n      tags:\n        - Tools\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: '#/components/schemas/cityconfig'\n              examples:\n                \"0\":\n                  value:\n                    cityName: \"Miami\"\n                    deployed: true\n                    deployer: \"SP466FNC0P7JWTNM2R9T199QRZN1MYEDTAR0KP27\"\n                    auth:\n                      name: \"miamicoin-auth\"\n                      initialized: true\n                    core:\n                      name: \"miamicoin-core-v1\"\n                      activated: false\n                      startBlock: 24497\n                      shutdown: true\n                      shutdownBlock: 58917\n                    token:\n                      name: \"miamicoin-token\"\n                      activated: true\n                      activationBlock: 24497\n                      displayName: \"MiamiCoin\"\n                      tokenName: \"miamicoin\"\n                      symbol: \"MIA\"\n                      decimals: 0\n                      logo: \"https://cdn.citycoins.co/logos/miamicoin.png\"\n                      uri: \"https://cdn.citycoins.co/metadata/miamicoin.json\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{cityname}/tools/get-full-city-configuration:\n    get:\n      summary: Get Full City Configuration\n      description: Gets the full city configuration data including all versions depending on the select city name.\n      tags:\n        - Tools\n      parameters:\n        - $ref: '#/components/parameters/cityname'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                additionalProperties:\n                  $ref: '#/components/schemas/cityconfig'\n              examples:\n                \"0\":\n                  value:\n                    \"v1\":\n                      cityName: \"Miami\"\n                      deployed: true\n                      deployer: \"SP466FNC0P7JWTNM2R9T199QRZN1MYEDTAR0KP27\"\n                      auth:\n                        name: \"miamicoin-auth\"\n                        initialized: true\n                      core:\n                        name: \"miamicoin-core-v1\"\n                        activated: false\n                        startBlock: 24497\n                        shutdown: true\n                        shutdownBlock: 58917\n                      token:\n                        name: \"miamicoin-token\"\n                        activated: true\n                        activationBlock: 24497\n                        displayName: \"MiamiCoin\"\n                        tokenName: \"miamicoin\"\n                        symbol: \"MIA\"\n                        decimals: 0\n                        logo: \"https://cdn.citycoins.co/logos/miamicoin.png\"\n                        uri: \"https://cdn.citycoins.co/metadata/miamicoin.json\"\n                    \"v2\":\n                      cityName: \"Miami\"\n                      deployed: true\n                      deployer: \"SP1H1733V5MZ3SZ9XRW9FKYGEZT0JDGEB8Y634C7R\"\n                      auth:\n                        name: \"miamicoin-auth-v2\"\n                        initialized: true\n                      core:\n                        name: \"miamicoin-core-v2\"\n                        activated: false\n                        startBlock: 58921\n                        shutdown: false\n                      token:\n                        name: \"miamicoin-token-v2\"\n                        activated: true\n                        activationBlock: 24497\n                        displayName: \"MiamiCoin\"\n                        tokenName: \"miamicoin\"\n                        symbol: \"MIA\"\n                        decimals: 6\n                        logo: \"https://cdn.citycoins.co/logos/miamicoin.png\"\n                        uri: \"https://cdn.citycoins.co/metadata/miamicoin.json\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/tools/get-prices/{currency}:\n    get:\n      summary: Get Prices\n      description: |\n        Get the prices for STX or a given CityCoin, optionally specifying the currency\n        - if no currency is specified, the default currency is `usd`\n        - for this tool, the `:cityname` endpoint also accepts `stx` to show the current STX price\n      tags:\n        - Tools\n      parameters:\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/currency'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  coingecko:\n                    type: number\n              examples:\n                \"0\":\n                  value:\n                    coingecko: \"0.1234\"\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\n  /{version}/{cityname}/tools/proof-of-hodl/{address}:\n    get:\n      summary: Check Proof of Hodl\n      description: Check whether the user is holding or stacking a given CityCoin at a given address\n      tags:\n        - Tools\n      parameters:\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/version'\n        - $ref: '#/components/parameters/cityname'\n        - $ref: '#/components/parameters/address'\n      responses:\n        \"200\":\n          $ref: '#/components/responses/200SuccessJsonBoolean'\n        \"400\":\n          $ref: '#/components/responses/400BadRequest'\n        \"404\":\n          $ref: '#/components/responses/404NotFound'\n\ncomponents:\n  #-------------------------------\n  # Reusable operation parameters\n  #-------------------------------\n  parameters:\n    address: \n      in: path\n      name: address\n      required: true\n      schema:\n        type: string\n      description: The Stacks address to query\n    blockheight:\n      in: path\n      name: blockheight\n      required: true\n      schema:\n        type: string\n      description: The Stacks block height to query, or `current` for the current block height\n    cityname:\n      in: path\n      name: cityname\n      required: true\n      schema:\n        type: string\n        enum: [mia, nyc]\n      description: The CityCoin symbol to query\n    currency:\n      in: path\n      name: currency\n      required: true\n      schema:\n        type: string\n        enum: [usd, eur, btc, sats]\n      description: The currency to query, defaults to `usd` if left blank, full list of supported currencies can be found at https://api.coingecko.com/api/v3/simple/supported_vs_currencies\n    cycleid:\n      in: path\n      name: cycleid\n      required: true\n      schema:\n        type: string\n      description: The reward cycle ID to query, or `current` for the current reward cycle ID\n    userid:\n      in: path\n      name: userid\n      required: true\n      schema:\n        type: string\n      description: The user ID stored in a CityCoins core contract for a Stacks address\n    version:\n      in: path\n      name: version\n      required: true\n      schema:\n        type: string\n        enum: [v1, v2]\n      description: The major CityCoins contract version.\n    default:\n      in: path\n      name: default\n      required: true\n      schema:\n        type: string\n        enum: [\"true\", \"false\"]\n      description: (Optional) Toggle calling the `or-default` version of the function which returns an empty value instead of an error. Defaults to `false`.\n    format:\n      in: query\n      name: format\n      schema:\n        type: string\n        enum: [\"json\", \"raw\"]\n      description: (Optional) The output format for the response. Defaults to `json`.\n  # Reusable objects\n  schemas:\n    citylist:\n      type: array\n      items:\n        type: string\n      enum: [mia, nyc]\n    cityinfo:\n      type: object\n      properties:\n        fullName:\n          type: string\n        logo:\n          type: string\n        versions:\n          $ref: '#/components/schemas/citylist'\n        currentVersion:\n          type: string\n    cityinfolist:\n      type: object\n      properties:\n        cityname:\n          $ref: '#/components/schemas/citylist'\n      additionalProperties:\n        $ref: '#/components/schemas/cityinfo'\n    cityconfig:\n      type: object\n      properties:\n        cityName:\n          type: string\n        deployed:\n          type: boolean\n        deployer:\n          type: string\n        auth:\n          type: object\n          properties:\n            name:\n              type: string\n            initialized:\n              type: boolean\n        core:\n          type: object\n          properties:\n            name:\n              type: string\n            activated:\n              type: boolean\n            startBlock:\n              type: number\n            shutdown:\n              type: boolean\n            shutdownBlock:\n              type: number\n        token:\n          type: object\n          properties:\n            name:\n              type: string\n            activated:\n              type: boolean\n            activationBlock:\n              type: number\n            displayName:\n              type: string\n            tokenName:\n              type: string\n            symbol:\n              type: string\n            decimals:\n              type: number\n            logo:\n              type: string\n            uri:\n              type: string\n  #-------------------------------\n  # Reusable responses\n  #-------------------------------\n  responses:\n    200SuccessJsonNumber:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              value:\n                type: number\n    200SuccessJsonString:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              value:\n                type: string\n    200SuccessJsonBoolean:\n      description: Success\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              value:\n                type: boolean\n    400BadRequest:\n      description: Bad Request\n      content:\n        text/plain;charset=UTF-8:\n          schema:\n            type: string\n    404NotFound:\n      description: Not Found\n      content:\n        text/plain;charset=UTF-8:\n          schema:\n            type: string\n",
			"canonicalURL": "/github.com/citycoins/api@fe4d6ac03894724e8392bc7f5b63171c4cfc056d/-/blob/static/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/citycoins/api/blob/fe4d6ac03894724e8392bc7f5b63171c4cfc056d/static/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"cityinfo\": parse schema: property \"versions\": at 1:3284: parse schema: resolve \"#/components/schemas/citylist\": parse enum values: parse value \"\\\"mia\\\"\": expected type \"array\", got \"string\""
}