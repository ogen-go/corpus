{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "scan.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/scan.yml",
			"byteSize": 10519,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Scan Services\n  version: v6\npaths:\n  /scans/:\n    get:\n      operationId: _rest_v6_scan_list\n      summary: Scan List\n      description: Returns a list of all scan processes\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: Return only Scan processes with a given name.\n            Duplicate it to filter by multiple values.\n        - in: query\n          name: order\n          schema:\n            type: string\n          description: \"One or more fields to use when ordering the results.\n                        Duplicate it to multi-sort, (ex: order=host_name\u0026order=created)\n                        Nested objects require a delimiter (ex: order=source_file__created)\n                        Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scan_list'\n    post:\n      operationId: _rest_v6_scan_create\n      summary: Create Scan\n      description: Creates a new Scan process and places it onto the queue.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/scan_post'\n      responses:\n        '201':\n          description: The 201 CREATED response indicates a successful request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scan_details'\n\n  /scans/{id}/:\n    get:\n      operationId: _rest_v6_scan_details\n      summary: Scan Details\n      description: Returns a specific scan process and all its related model information\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing scan process\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scan_details'\n    patch:\n      operationId: _rest_v6_scan_edit\n      summary: Edit Scan\n      description: Edits an existing Scan process with associated configuration.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing scan process\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/scan_post'\n      responses:\n        '204':\n          description: The 204 No content response indicates a successful edit\n\n  /scans/validation/:\n    post:\n      operationId: _rest_v6_scan_validate\n      summary: Validate Scan\n      description: Validates a new Scan process configuration without actually saving it.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/scan_process'\n      responses:\n        '200':\n          description: The 200 OK response indicates a valid scan configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validation'\n\n  /scans/{id}/process/:\n    patch:\n      operationId: _rest_v6_scan_process\n      summary: Process Scan\n      description: Launches an existing Scan with associated configuration\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing scan process\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/scan_process'\n      responses:\n        '201':\n          description: The 201 CREATED response indicates a successful request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/scan_details'\n\n  /scans/cancel/{id}/:\n    patch:\n      operationId: _rest_v6_scan_cancel\n      summary: Cancel Scan\n      description: Cancels a Scan and associated ingest jobs\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing scan process\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/scan_process'\n      responses:\n        '202':\n          description: The 202 ACCEPTED response indicates a successful request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/cancel_scan'\n\ncomponents:\n  schemas:\n    scan_list:\n      title: Scan List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters\n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/scan_base'\n          description: List of scan process objects\n\n    scan_base:\n      title: Scan Base\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        name:\n          type: string\n          description: The identifying name of the Scan process used for queries.\n          example: my-scan-process\n        title:\n          type: string\n          description: The human readable display name of the Scan process.\n          example: My Scan Process\n        description:\n          type: string\n          description: A longer description of the Scan process.\n          example: This is my Scan process for detecting my favorite files!\n        file_count:\n          type: integer\n          description: Count of files identified from last scan operation (either dry run or ingest)\n          example: 50\n        job:\n          $ref: '#/components/schemas/job_base'\n        dry_run_job:\n          $ref: '#/components/schemas/job_base'\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n\n    scan_post:\n      title: Scan Post\n      type: object\n      required: [title, configuration]\n      properties:\n        title:\n          type: string\n          description: The human readable display name of the Scan process.\n            This will be used to generate the name field\n          example: My Scan Process\n        description:\n          type: string\n          description: A longer description of the Scan process.\n          example: This is my Scan process for detecting my favorite files!\n        configuration:\n          $ref: '#/components/schemas/scan_config'\n\n    scan_process:\n      title: Scan Process\n      type: object\n      properties:\n        ingest:\n          type: boolean\n          description: Whether a dry run or ingest triggering scan should be run.\n            Defaults to false when unset.\n          example: true\n\n    scan_details:\n      allOf:\n        - ref: '#/components/schemas/scan_base'\n        - title: Scan Details\n        - type: object\n          properties:\n            configuration:\n              $ref: '#/components/schemas/scan_config'\n\n    scan_config:\n      title: Scan Configuration\n      type: object\n      properties:\n        workspace:\n          type: string\n          description: The workspace field is a required string that specifies\n            the name of the workspace that is being scanned. The type of the\n            workspace (its broker type) will determine which types of monitor\n            can be used.\n          example: my-host-workspace\n        scanner:\n          $ref: '#/components/schemas/scanner'\n        recursive:\n          type: boolean\n          description: Indicates whether a scanner should be limited to the root\n            of a workspace or traverse the entire tree. If ommitted, the default\n            is true for full tree recursion.\n        files_to_ingest:\n          type: array\n          items:\n            $ref: '#/components/schemas/ingest_file'\n          description: List of ingest objects\n        recipe:\n          type: object\n          properties:\n            name:\n              type: string\n              description: Specifies the name of the recipe the Scan will attempt\n                to start when the file is ingested.\n              example: my-recipe\n            revision_num:\n              type: integer\n              description: Optional. Specifies the revision number of the recipe \n                 the Scan will attempt to start when the file is ingested.\n              example: 1\n\n    cancel_scan:\n      title: Cancel Scan\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The id of the scan that has been canceled\n          example: 1\n        canceled_jobs:\n          type: array\n          items:\n            type: integers\n          description: The list of job ids that have been canceled\n          example: [1,2]\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"scan_list\": parse schema: property \"results\": parse schema: item: parse schema: resolve \"#/components/schemas/scan_base\": parse schema: property \"dry_run_job\": parse schema: resolve \"#/components/schemas/job_base\": find schema: resolve \"#/components/schemas/job_base\": can't find value for \"components/schemas/job_base\""
}