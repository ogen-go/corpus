{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gs1/EPCIS"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "REST Bindings/openapi.yaml",
			"byteSize": 178239,
			"content": "openapi: \"3.0.3\"\ninfo:\n  version: 2.0.0\n  title: EPCIS 2.0 REST Bindings\n  license:\n    name: Apache2\ntags:\n  - name: 'Top-level'\n    description: |\n      Endpoints to browse or retrieve information about EPCIS resources:\n      - events\n      - types of events\n      - electronic product codes\n      - business steps\n      - business locations\n      - read points\n      - dispositions\n  - name: 'Events'\n    description: |\n      Endpoints that allow you to retrieve EPCIS events as Web resources.\n  - name: 'Capture'\n    description: |\n      Endpoints to capture EPCIS events in bulk or individually.\n  - name: 'Queries'\n    description: |\n      Endpoints to create large named or anonymous queries using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e. Named queries have a custom\n      name and are stored until deleted by the user. Anonymous queries are not persisted and only available to the caller.\n      EPCIS events queries also support query subscription.\n  - name: 'Subscriptions'\n    description: |\n      EPCIS 2.0 supports query subscriptions using Webhooks or Websockets.\n  - name: 'Discovery'\n    description: |\n      Endpoints to obtain information about the endpoint, such as EPCIS and CBV versions or custom vocabularies.\n\npaths:\n  /:\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query server settings, EPCIS version(s) and related vocabularies/standards.\n      description: |\n        `OPTIONS` on the root path gives the client an overview of the server's EPCIS-related configurations.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Discovery'\n      summary: Returns the list of top level resources available for this EPCIS repository.\n      parameters:\n        - $ref: '#/components/parameters/GS1-Extensions'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n      description: |\n        This endpoint returns all the top-level resources currently available in the repository.\n      responses:\n        '200':\n          $ref: '#/components/responses/200SupportedTopLevel'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n    \n\n  /capture:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Discover the settings of the capture interface.\n      description: |\n        The `OPTIONS` method is used as a discovery service for `/capture`. It describes\n\n        - which EPCIS and CBV versions are supported,\n        - the EPCIS and CBV extensions,\n        - the maximum payload size as count of EPCIS events (`GS1-EPCIS-Capture-Limit` header) or as a maximum payload size in bytes (`GS1-EPCIS-Capture-File-Size-Limit` header)\n        - what the server will do if an error occurred during capture (`GS1-Capture-Error-Behaviour` header).\n\n        The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.\n      responses:\n        '204':\n          $ref: '#/components/responses/204CaptureEndpointDiscovery'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    post:\n      tags:\n        - 'Capture'\n      summary: Asynchronous capture endpoint for one or more EPCIS events. \n      \n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Version'\n        - $ref: '#/components/parameters/GS1-CBV-Version'\n        - $ref: '#/components/parameters/GS1-Capture-Error-Behaviour'\n\n      description: |\n        EPCIS events are added in bulk using the capture interface. Four design considerations were made to remain compatible with EPCIS 1.2:\n\n        - EPCIS 2.0 keeps event IDs optional. If event IDs are missing, the server should populate the event ID with a unique value.\n        Otherwise, it won't be possible to retrieve these events by eventID.\n        - By default, EPCIS events are only stored if the entire capture job was successful. This behaviour can be changed with the `GS1-Capture-Error-Behaviour` header.\n        - EPCIS master data can be captured in the header (`epcisHeader`) of an `EPCISDocument`.\n        - This endpoint should support both `EPCISDocument` and `EPCISQueryDocument` as input.\n\n        To prevent timeouts for large payloads, the client potentially may need to split the payload into several capture calls. To that end, the server can specify a capture\n        limit (number of EPCIS events) and file size limit (payload size).\n\n        A successful capturing of events does not guarantee that events will be stored. Instead, the server returns a\n        capture id, which the client can use to obtain information about the capture job.\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n                    oneOf:\n                      - $ref: '#/components/schemas/EPCISQueryDocument'\n                      - $ref: '#/components/schemas/EPCISDocument'      \n      responses:\n        '202':\n          description: |\n            Successfully received one or more EPCIS events. The request returns a unique\n            capture job URL in the Location header.\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Location:\n              description: |\n                Absolute or relative URL of the capture job\n              schema:\n                example: \"/id9261379075\"\n                type: string\n                format: uri\n\n        '400':\n          description: |\n            An error occurred while receiving EPCIS events. All events are rejected. This is not to be confused with\n            an error while capturing EPCIS events. To monitor the capture job, use the `/capture/{captureID}` endpoint.\n          content:\n            application/problem+json:\n              schema:\n                allOf:\n                  - properties:\n                      status:\n                        type: integer\n                        enum:\n                          - 400\n                        default: 400\n                      type:\n                        type: string\n                        format: uri\n                        enum:\n                          - epcisException:ValidationException\n                  - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n            application/problem+xml:\n              schema:\n                allOf:\n                  - properties:\n                      status:\n                        type: integer\n                        enum:\n                          - 400\n                        default: 400\n                      type:\n                        type: string\n                        format: uri\n                        enum:\n                          - epcisException:ValidationException\n                  - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '413':\n          $ref: '#/components/responses/413CapturePayloadTooLarge'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '415':\n          $ref: '#/components/responses/415UnsupportedMediaType'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Capture'\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-Extensions'\n      summary: Returns a list of capture jobs.\n      description: |\n        When EPCIS events are added through the capture interface, the capture process can run asynchronously. If the payload\n        is syntactically correct and the client is allowed to call `/capture`, the server returns a `202` HTTP response code. \n        This endpoint returns all capture jobs that were created\n        and supports pagination.\n      responses:\n        '200':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            A capture job document has at least the following properties:\n\n            - `running`: whether or not the capture job is still active.\n            - `success`: whether or not at least one error occurred.\n            - `captureErrorBehaviour`: GS1-Capture-Error-Behaviour header value provided with POST data to capture.\n            - `errors` or `errorFile`: with the errors if `success` is `false`.\n\n            ### captureErrorBehaviour value is `rollback`\n\n            | Capture job `running` | Capture job `success` | Capture job outcome |\n            |:--------|:---------|:---------|\n            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |\n            | `true` | `false` | At least one error occurred. Rollback is in progress. |\n            | `false` | `true` | All EPCIS events are captured. |\n            | `false` | `false` | All EPCIS events are rejected. |\n\n            ### captureErrorBehaviour value is `proceed`\n\n            | Capture job `running` | Capture job `success` | Capture job outcome |\n            |:--------|:---------|:---------|\n            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |\n            | `true` | `false` | At least one error occurred but more EPCIS events are currently being captured. |\n            | `false` | `true` | All EPCIS events were captured without an error. |\n            | `false` | `false` | Some EPCIS events were captured but errors occurred. |\n\n            If `success` is `false`, check the `errors` or `errorFile` property for details.\n          content:\n            application/json:\n              example: [\n                {\n                  \"captureID\": \"id261378658356\",\n                  \"createdAt\": \"2021-07-21T17:32:28Z\",\n                  \"finishedAt\" : \"2022-01-21T17:45:28Z\",\n                  \"running\": false,\n                  \"success\": true,\n                  \"captureErrorBehaviour\": \"rollback\",\n                  \"errors\": [ ]\n                },\n                {\n                  \"captureID\": \"id9261379075\",\n                  \"createdAt\": \"2021-08-21T17:32:28Z\",\n                  \"running\": true,\n                  \"success\": true,\n                  \"captureErrorBehaviour\": \"proceed\",\n                  \"errors\": [ ]\n                }]\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CaptureJob'\n                uniqueItems: true\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n  /capture/{captureID}:\n    parameters:\n      - in: path\n        name: captureID\n        example: id9261379075\n        description: A unique value identifying a capture job generated by the server.\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/GS1-Extensions' \n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the capture job endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used for a given capture job.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n      tags:\n        - 'Capture'\n      summary: Returns information about the capture job.\n      description: |\n        When EPCIS events are added through the capture interface, the capture process can run asynchronously. If the payload\n        is syntactically correct and the client is allowed to call `/capture`, the server returns a `202` HTTP response code. \n        This endpoint exposes the state of the capture job to the client.\n      responses:\n        '200':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n          description: |\n            A capture job document has at least the following properties:\n\n            - `running`: whether or not the capture job is still active.\n            - `success`: whether or not at least one error occurred.\n            - `captureErrorBehaviour`: GS1-Capture-Error-Behaviour header value provided with POST data to capture.\n            - `errors` or `errorFile`: with the errors if `success` is `false`.\n\n            ### captureErrorBehaviour value is `rollback`\n\n            | Capture job `running` | Capture job `success` | Capture job outcome |\n            |:--------|:---------|:---------| \n            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |\n            | `true` | `false` | At least one error occurred. Rollback is in progress. |\n            | `false` | `true` | All EPCIS events are captured. |\n            | `false` | `false` | All EPCIS events are rejected. |\n\n            ### captureErrorBehaviour value is `proceed`\n\n            | Capture job `running` | Capture job `success` | Capture job outcome |\n            |:--------|:---------|:---------|\n            | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |\n            | `true` | `false` | At least one error occurred but more EPCIS events are currently being captured. |\n            | `false` | `true` | All EPCIS events were captured without an error. |\n            | `false` | `false` | Some EPCIS events were captured but errors occurred. |\n\n            If `success` is `false`, check the `errors` or `errorFile` property for details.\n          content:\n            application/json:             \n              example: {\n                  \"captureID\": \"id261378658356\",\n                  \"createdAt\": \"2021-07-21T17:32:28Z\",\n                  \"finishedAt\" : \"2022-01-21T17:45:28Z\",\n                  \"running\": false,\n                  \"success\": true,\n                  \"captureErrorBehaviour\": \"rollback\",\n                  \"errors\": [ ]\n                }\n              schema:\n                $ref: '#/components/schemas/CaptureJob'\n            application/xml:             \n              example: \n                  \"captureID\": \"id261378658356\"\n                  \"running\": false\n                  \"success\": true\n                  \"captureErrorBehaviour\": \"rollback\"\n                  \"createdAt\": \"2021-07-21T17:32:28Z\"\n                  \"finishedAt\" : \"2022-01-21T17:45:28Z\"\n              schema:\n                $ref: '#/components/schemas/CaptureJob'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n  /events:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata for the EPCIS events endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204WritableResourcesDiscovery'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '409':\n          $ref: '#/components/responses/409ResourceAlreadyExistsException'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n        - 'Events'\n      summary: Returns all EPCIS events available in the EPCIS repository.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      description: |\n        This endpoint allows querying EPCIS events that are currently in the repository. \n        Events can be filtered through URL query string parameters as specified by the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e.\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n    post:\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Version'\n        - $ref: '#/components/parameters/GS1-CBV-Version'\n      tags:\n        - 'Capture'\n      summary: Synchronous capture interface for a single EPCIS event.\n      description: |\n        An individual EPCIS event can be created by making a `POST` request on the `/events` resource. Alternatively, the client can also use the `/capture`\n        interface and capture a single event.\n      requestBody:\n        required: true\n        description: A single EPCIS event.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SingleEvent'\n\n      responses:\n        '201':\n          description: |\n            Successfully created (captured) the EPCIS event. The request returns the URL of newly created\n            EPCIS event in the Location header.\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Location:\n              description: |\n                Absolute or relative URL of the newly captured EPCIS event. \n              schema:\n                example: \"https://example.com/events/cc979570-74a3-4dc7-8f3e-2e747d6d31ec\"\n                type: string\n                format: uri\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleEvent'\n        '400':\n          description: An error occurred while creating the EPCIS event. The event was rejected.\n          content:\n            application/problem+json:\n              schema:\n                allOf:\n                  - properties:\n                      status:\n                        type: integer\n                        enum:\n                          - 400\n                        default: 400\n                      type:\n                        type: string\n                        format: uri\n                        enum:\n                          - epcisException:ValidationException\n                  - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '413':\n          $ref: '#/components/responses/413CapturePayloadTooLarge'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '415':\n          $ref: '#/components/responses/415UnsupportedMediaType'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /events/{eventID}:\n    parameters:\n      - $ref: '#/components/parameters/EventID'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata for the endpoint to access an individual EPCIS event.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n          \n    get:\n      tags:\n        - 'Events'\n      summary: Returns an individual EPCIS event.\n      parameters:\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      description: |\n        This endpoint accesses individual events using their unique identifier. The response body is an `EPCISQueryDocument` \n        enclosing the unique event and error declarations.\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocumentSinglePage'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /eventTypes:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata for the EPCIS event types endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n        - 'Discovery'\n      summary: Returns all EPCIS event types currently available in the EPCIS repository.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-Extensions'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n      description: \n        EPCIS event types specify the schema of an event. This endpoint returns the 5 standard event types as well as any custom event types supported by this repository. \n      responses:\n        '200':\n          $ref: '#/components/responses/200SupportedEventTypes'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /eventTypes/{eventType}:\n    parameters:\n      - $ref: '#/components/parameters/EventType'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata of the EPCIS event type endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      summary: Returns all sub-resources of an EPCIS event type.\n      description: |\n        This endpoint returns all sub-resources of an EPCIS event type, which currently is `events`. A server may\n        add additional endpoints, for example `schema` to access the EPCIS event type schema.\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n      responses:\n        '200':\n          $ref: '#/components/responses/200TopLevelOrEventTypeSubResource'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /eventTypes/{eventType}/events:\n    parameters:\n      - $ref: '#/components/parameters/EventType'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access EPCIS events by event type.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Events'\n      summary: |\n        Returns EPCIS events of a given an EPCIS event type.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      description: |\n        This endpoint returns all EPCIS events of a specific EPCIS event type up to the amount defined in `perPage`.\n        The server returns a 'Link' header to point to the remaining results.\n\n        The client can further restrict the list of events returned by filtering events using the EPCIS query\n        language using URL query string parameters as specified by the\u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e.  \n        The parameter `eventCountLimit` is used to restrict the maximum number of\n        events to be returned in total, whereas `perPage` restricts the number of events to return per page or paginated results.\n\n\n        Example:\n\n        ```\n        https://example.com/eventTypes/ObjectEvent/events?EQ_bizStep=shipping%7Cdecommissioning\u0026GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00\n        ```\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /epcs:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata related to the electronic product codes endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n      summary: Returns known electronic product codes.\n      description: \n        An endpoint to list all electronic product codes known to this repository.\n      responses:\n        '200':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Link:\n               $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            Returns a list of electronic product codes. If there are more electronic product codes than specified by the\n            `perPage` parameter, the client will be given the URL to retrieve more electronic product codes in the\n            `Link` header.\n            If the client specifies extension mappings, the response will use them where they match. Otherwise,\n            the full resource address is used.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UriCollection'\n              example: {\n                  \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",            \n                  \"type\": \"Collection\",\n                  \"member\": [\n                    \"urn:jaif:id:obj:37SUN321456789A111222333AB+123456789012\",\n                    \"urn:epc:id:sgtin:0614141.107346.2018\",\n                    \"https://example.com/01/04012345123456/21/abc234\",\n                    \"urn:epc:id:sgtin:0614141.107346.2017\"\n                  ]\n                }\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /epcs/{epc}:\n    parameters:\n      - $ref: '#/components/parameters/EPC'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata of the electronic product code.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n          '204':\n            $ref: '#/components/responses/204DefaultDiscoveryResponse'\n          '401':\n            $ref: '#/components/responses/401UnauthorizedRequest'\n          '403':\n            $ref: '#/components/responses/403ClientUnauthorized'\n          '404':\n            $ref: '#/components/responses/404ResourceNotFound'\n          '406':\n            $ref: '#/components/responses/406NotAcceptable'\n          '500':\n            $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      summary: Returns all sub-resources of an electronic product code.\n      description: |\n        This endpoint returns all sub-resources of an electronic product code, which currently is `events`.\n      responses:\n        '200':\n          $ref: '#/components/responses/200TopLevelOrEventTypeSubResource'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /epcs/{epc}/events:\n    parameters:\n      - $ref: '#/components/parameters/EPC'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access EPCIS events by EPC in a URN or constrained GS1 Digital Link form (URL encoded).\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Events'\n      summary: Returns EPCIS events matching the specified electronic product code.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n\n      description: |\n        This endpoint helps to navigate EPCIS events by electronic product codes. It returns\n        EPCIS events up to the amount defined in `perPage`. If applicable, the server returns a `Link` header to point to the remaining\n        results. Optionally, EPCIS events can be further filtered using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e in as query string parameters.\n\n        Example 1 - EPC in a URN form with \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e filtering\n\n        ```\n        https://example.com/epcs/urn:epc:id:sgtin:0614141.107346.2018?EQ_bizStep=shipping%7Cdecommissioning\u0026GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00\n        ```\n        \n        Example 2  - EPC in a constrained GS1 Digital Link form (URL encoded)\n        ```\n        https://example.com/epcs/https:%2f%2fexample.org%2f01%2f1234567089012400\n        ```\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n\n  /bizSteps:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata related to the business steps endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      summary: Returns known business steps.\n      description: \n        This endpoint returns the CBV standard business steps as well as any custom business steps supported by this repository.\n      responses:\n        '200':\n          headers:\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            Returns a list of business steps. If there are more business steps than specified by the\n            `perPage` parameter, the client will be given the URL to retrieve more business steps in the `Link` header.\n            If the client specifies extension mappings, the response will use them where they match. Otherwise,\n            the full resource address is used.\n          content:\n            application/json:\n              schema: \n                $ref: '#/components/schemas/BizStepCollection'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /bizSteps/{bizStep}:\n    parameters:\n      - $ref: '#/components/parameters/BizStep'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query metadata of the endpoint to access an individual business step.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      summary: Returns all sub-resources of a business step.\n      description: |\n        This endpoint returns all sub-resources of a business step, which currently is `events`.\n      responses:\n        '200':\n          $ref: '#/components/responses/200TopLevelOrEventTypeSubResource'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n\n  /bizSteps/{bizStep}/events:\n    parameters:\n      - $ref: '#/components/parameters/BizStep'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access EPCIS events by business step.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Events'\n      summary: Returns all EPCIS events related to the business step.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      description: |\n        This endpoint helps to navigate EPCIS events by business steps. It returns\n        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the\n        remaining results.  Optionally, EPCIS events can be further filtered using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e in as query\n        string parameters.\n\n        Example:\n\n        ```\n        https://example.com/bizSteps/receiving?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00\n        ```\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /bizLocations:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata related to the business locations endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n      summary: Returns known business locations.\n      description: |\n        An endpoint to list all the business locations known to this repository.\n      responses:\n        '200':\n          headers:\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            Returns a list of business locations. If there are more business locations than specified by the\n            `perPage` parameter, the client will be given the URL to retrieve more business locations in the `Link` header.\n            If the client specifies extension mappings, the response will use them where they match. Otherwise,\n            the full resource address is used.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UriCollection'\n              example: {\n                \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n                \"type\": \"Collection\",\n                \"member\": [\"urn:epc:id:sgln:9524987.20000.0\"]\n              }\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /bizLocations/{bizLocation}:\n    parameters:\n      - $ref: '#/components/parameters/BizLocation'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access an individual business location.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      summary: Returns all sub-resources of a business location.\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n      description: |\n        This endpoint returns all sub-resources of a business location, which currently is `events`.\n      responses:\n        '200':\n          $ref: '#/components/responses/200TopLevelOrEventTypeSubResource'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /readPoints:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata related to the read points endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n      summary: Returns known read points.\n      description: \n        An endpoint to list all read points known to this repository.\n      responses:\n        '200':\n          headers:\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            Returns a list of read points. If there are more read points than specified by the\n            `perPage` parameter, the client will be given the URL to retrieve more read points in the `Link` header.\n            If the client specifies extension mappings, the response will use them where they match. Otherwise,\n            the full resource address is used.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UriCollection'\n              example: {\n                 \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n                 \"type\": \"Collection\",\n                 \"member\": [\n                  \"urn:epc:id:sgln:9524678.90000.WarehouseD2\",\n                  \"urn:epc:id:sgln:9524678.90000.WarehouseD1\"\n                ]\n              }\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /readPoints/{readPoint}:\n    parameters:\n      - $ref: '#/components/parameters/ReadPoint'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access an individual read point.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      summary: Returns all sub-resources of a read point.\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n      description: |\n        This endpoint returns all sub-resources of a read point, which currently is `events`.\n      responses:\n        '200':\n          $ref: '#/components/responses/200TopLevelOrEventTypeSubResource'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /readPoints/{readPoint}/events:\n    parameters:\n      - $ref: '#/components/parameters/ReadPoint'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access EPCIS events by read point.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Events'\n      summary: Returns all EPCIS events related to the read point.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      description: |\n        This endpoint helps to navigate EPCIS events by read points. It returns\n        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the remaining\n        results.\n\n        Optionally, EPCIS events can be further filtered using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e in as query string parameters.\n\n        Example:\n\n        ```\n        https://example.com/readPoints/urn:epc:id:sgln:0012345.11111.400?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00\n        ```\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /dispositions:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata related to the dispositions endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Top-level'\n      parameters:\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      summary: Returns known dispositions.\n      description: |\n        This endpoint returns the CBV standard dispositions as well as any custom dispositions supported by this repository.\n      responses:\n        '200':\n          headers:\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            Returns a list of dispositions. If there are more dispositions than specified by the\n            `perPage` parameter, the client will be given the URL to retrieve more dispositions in the `Link` header.\n            If the client specifies extension mappings, the response will use them where they match. Otherwise,\n            the full resource address is used.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DispositionCollection'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /dispositions/{disposition}:\n    parameters:\n      - $ref: '#/components/parameters/GS1-Extensions'\n      - $ref: '#/components/parameters/Disposition'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access an individual disposition.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n        \n    get:\n      tags:\n        - 'Top-level'\n      summary: Returns all sub-resources of a disposition.\n      description: |\n        This endpoint returns all sub-resources of a disposition, which currently is `events`.\n      responses:\n        '200':\n          $ref: '#/components/responses/200TopLevelOrEventTypeSubResource'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /dispositions/{disposition}/events:\n    parameters:\n      - $ref: '#/components/parameters/Disposition'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint to access EPCIS events by disposition.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Events'\n      summary: Returns all EPCIS events related to the disposition.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n\n      description: |\n        This endpoint helps to navigate EPCIS events by dispositions. It returns\n        EPCIS events up to the amount defined in `perPage`. The server returns a `Link` header to point to the remaining\n        results.\n        Optionally, EPCIS events can be further filtered using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e in as query string parameters.\n\n        Example:\n\n        ```\n        https://example.com/dispositions/in_progress?GE_eventTime=2015-03-15T00%3A00%3A00.000-04%3A00\n        ```\n      responses:\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '400':\n          $ref: '#/components/responses/400QueryIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /queries:\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the EPCIS queries endpoint.\n      parameters:\n        - $ref: '#/components/parameters/GS1-Extensions'\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204WritableResourcesDiscovery'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '409':\n          $ref: '#/components/responses/409ResourceAlreadyExistsException'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Queries'\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-Extensions'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n      summary: Returns a list of queries available.\n      description: |\n        An endpoint to list named queries.\n        This endpoint supports pagination.\n      responses:\n        '200':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: |\n            Queries are like views that are created using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e. Each query object\n            consists of a query name and the query definition. Performing a `GET` on `/queries` lists all\n            existing queries.\n          content:\n            application/json:\n              example: |\n                [{\n                  \"query\": {\n                  \"EQ_bizStep\": [\n                      \"shipping\",\n                      \"receiving\"\n                  ],\n                  \"eventType\": [\"ObjectEvent\"]\n                },\n                \"name\": \"myQuery\"\n                }]\n              schema:\n                description: The query name.\n                type: array\n                items:\n                  allOf:\n                    - type: object\n                      required:\n                        - name\n                      properties:\n                        name:\n                          $ref: '#/components/schemas/QueryName'\n                    - $ref: '#/components/schemas/QueryDefinition'\n                uniqueItems: true\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n    post:\n      tags:\n        - 'Queries'\n      summary: |\n        Creates a named EPCIS events query.\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Version'\n        - $ref: '#/components/parameters/GS1-CBV-Version'\n        - $ref: '#/components/parameters/GS1-Extensions'\n      description: |\n        Creating a named query creates a view on the events in the repository, accessible through its events resource.\n        To obtain the named query results, the client can use the URL in the `Location` header. The client can also use this URL to start a query subscription immediately after creating the query.\n      requestBody:\n        $ref: '#/components/requestBodies/CreateQuery'\n      responses:\n        '201':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Location:\n              description: |\n                Absolute or relative URL of the created query. The client can use the `Location` URL to obtain the named query definition.\n              schema:\n                example: \"https://www.example.com/queries/myQuery\"\n                type: string\n                format: uri\n          description: Creates the named query.\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '409':\n          $ref: '#/components/responses/409ResourceAlreadyExistsException'\n        '415':\n          $ref: '#/components/responses/415UnsupportedMediaType'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /queries/{queryName}:\n    parameters:\n      - $ref: '#/components/parameters/QueryName'\n    get:\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-Extensions'\n      tags:\n        - 'Queries'\n      summary: Returns the query definition.\n      responses:\n        '200':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-CBV-Version:\n              $ref: '#/components/headers/GS1-CBV-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n          description: |\n            Queries are like views that are created using the \u003ca href=\"https://github.com/gs1/EPCIS/tree/master/REST%20Bindings/query-schema.json\"\u003eEPCIS Query Language\u003c/a\u003e. Each query object\n            consists of a query name and the query definition.\n          content:\n            application/json:\n              example: {\n                \"name\": \"myQuery\",\n                \"query\": {\n                  \"EQ_bizStep\": [\n                      \"shipping\",\n                      \"receiving\"\n                  ],\n                  \"eventType\": [\"ObjectEvent\"]\n                }\n              }\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - type: object\n                      required:\n                        - name\n                      properties:\n                        name:\n                          type: string\n                    - $ref: '#/components/schemas/QueryDefinition'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '413':\n          $ref: '#/components/responses/413QueryScopeOrSize'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    options:\n      parameters:\n        - $ref: '#/components/parameters/GS1-Extensions'\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the named queries endpoint.\n      description: |\n        EPCIS 2.0 supports a number of custom headers to describe custom vocabularies and support multiple versions\n        of EPCIS and CBV. The `OPTIONS` method allows the client to discover which vocabularies and EPCIS and CBV\n        versions are used.\n      responses:\n        '204':\n          $ref: '#/components/responses/204RemovableResourcesDiscovery'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    delete:\n      tags:\n        - 'Queries'\n      summary: Removes a named query and forcibly unsubscribes all active subscriptions, whether by WebSockets or Webhooks\n      responses:\n        '204':\n          $ref: '#/components/responses/204QueryDeleted'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /queries/{queryName}/subscriptions:\n    parameters:\n      - $ref: '#/components/parameters/QueryName'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the subscriptions endpoint.\n      description: |\n        The `OPTIONS` method is used as a discovery service for query subscriptions.\n      responses:\n        '204':\n          $ref:  '#/components/responses/204WritableResourcesDiscovery'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Queries'\n        - 'Subscriptions'\n      summary: Returns active subscriptions with the option to use pagination if needed.\n      parameters:\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n      description: |\n        The `GET` endpoint is to list all active subscriptions on that query.\n      responses:\n        '200':\n          headers:\n            GS1-EPCIS-Version:\n              $ref: '#/components/headers/GS1-EPCIS-Version'\n            GS1-Extensions:\n              $ref: '#/components/headers/GS1-Extensions'\n            Link:\n              $ref: '#/components/headers/Link'\n            GS1-Next-Page-Token-Expires:\n              $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n          description: Returns active subscriptions.\n          content:\n            application/json:\n              example: [\n                {\n                  \"subscriptionID\": \"df5a33e3-5aa3-4403-ae01-99b83234e27b\",\n                  \"createdAt\": \"2017-08-21T17:32:28Z\",\n                  \"schedule\": {\n                    \"hour\": \"1\",\n                    \"minute\": \"5\"\n                  }\n                },\n                {\n                  \"subscriptionID\": \"df5a33e3-5aa3-5504-bf12-88c94345f38c\",\n                  \"createdAt\": \"2017-07-21T17:32:28Z\",\n                  \"stream\": true\n                }\n              ]\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/AbstractQuerySubscriptionResponse'\n                    - oneOf:\n                        - $ref: '#/components/schemas/QueryScheduleSubscription'\n                        - $ref: '#/components/schemas/QueryStreamSubscription'\n\n        '400':\n          $ref: '#/components/responses/400SubscriptionIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    post:\n      tags:\n        - 'Queries'\n        - 'Subscriptions'\n      summary: Creates a query subscription.\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Version'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n      description: |\n        EPCIS 2.0 implementations must support Webhook subscriptions. \n        Creating a query subscription requires the client to provide a single endpoint to which the\n        server will send events (as `EPCISQueryDocument`) and an optional string `signatureToken`. \n        This `signatureToken` must be generated by the client and is used by the server to authenticate itself and sign messages when sending events. The signature must be contained on the `GS1-Signature` HTTP header of the server request. \n        \n        The choice of signature type is implementation specific but examples would be using HMAC with SHA-256 directly or a wrapper supporting various symmetric or asymetric \n        cryptographic algorithms such as Json Web Signature (JWS).\n\n        When the client subscribes to a query, it must either set `stream` to `true`, to be notified whenever a new EPCIS\n        event matches the query, or the client must define a query schedule. If these are missing the query subscription is invalid because the server won't\n        know when to notify a client.\n\n        ## Scheduled query: Receive query results at 1.05am\n\n        A scheduled query subscription is a time-based query execution. EPCIS 2.0 scheduled queries are scheduled\n        in the same manner as cron jobs.\n\n        For example, this query subscription is scheduled to trigger every morning at 1.05am. By setting\n        `reportIfEmpty` to `true`, the client's callback URL (`dest`) will be called even if there are no new events that match\n        the query.\n\n        ```\n        POST /queries/MyQuery/subscriptions\n        {\n          \"dest\": \"https://client.example.com/queryCallback\",\n          \"signatureToken\": \"13df38d8275b13f05704629e5f1cf3d45d6132d5\",\n          \"reportIfEmpty\": true,\n          \"schedule\": {\n            \"hour\":\"1\",\n            \"minute\": \"5\"\n          }\n        }\n        ```\n\n        ## Streaming query subscription: Whenever a captured EPCIS event matches the query criteria\n\n        If no query schedule is specified, the client must explicitly set `stream` to `true`. This restriction is to\n        prevent clients from accidentally subscribing to EPCIS event streams.\n\n        ```\n        POST /queries/MyQuery/subscriptions\n        {\n          \"dest\": \"https://client.example.com/queryCallback\",\n          \"signatureToken\": \"13df38d8275b13f05704629e5f1cf3d45d6132d5\",\n          \"stream\": true\n        }\n        ```\n\n      requestBody:\n        content:\n          application/json:\n            example: {\n              \"dest\": \"https://client.example.com/queryCallback\",\n              \"signatureToken\": \"13df38d8275b13f05704629e5f1cf3d45d6132d5\",\n              \"schedule\": { \"hour\": \"1\", \"minute\": \"5\" }\n            }\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/AbstractQuerySubscription'\n                - oneOf:\n                    - $ref: '#/components/schemas/QueryScheduleSubscription'\n                    - $ref: '#/components/schemas/QueryStreamSubscription'\n      responses:\n        '201':\n          headers:\n            Location:\n              description: |\n                The server creates a new subscription for each client and query subscription. The client needs that URL\n                to unsubscribe by deleting this resource. The `Location` URL must point to the `subscriptionID` returned\n                in the response body. Note that for security reasons the response should not\n                return the secret.\n              schema:\n                type: string\n                format: uri\n                example: 'https://www.example.com/queries/MyQuery/subscriptions/df5a33e3-5aa3'\n          description: Query subscription successful. The subscription is valid until the client unsubscribes.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/AbstractQuerySubscriptionResponse'\n                  - oneOf:\n                      - $ref: '#/components/schemas/QueryScheduleSubscription'\n                      - $ref: '#/components/schemas/QueryStreamSubscription'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '415':\n          $ref: '#/components/responses/415UnsupportedMediaType'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n      callbacks:\n        querySubscriptionResults:\n          '{$request.body#/dest}':\n            post:\n              summary: Callback invoked by the server to provide the query result to the client.\n              parameters:\n                - $ref: '#/components/parameters/GS1-Signature'\n              requestBody:\n                description: |\n                  The server sends the query result to the client as a series of `EPCISQueryDocument`. There is no pagination for a `POST` request, the\n                  server must either send each EPCIS event individually or group EPCIS events in manageable batches.\n\n                  If an error occurs server-side, the server must send the error in the format that is already used for\n                  returning `4xx` or `5xx` responses.\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      oneOf:\n                        - $ref: '#/components/schemas/EPCISQueryDocument'\n                        - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n              responses:\n                '200':\n                  description: Webhook successfully processed the server request.\n                '401':\n                  $ref: '#/components/responses/401UnauthorizedRequest'\n                '403':\n                  $ref: '#/components/responses/403ClientUnauthorized'\n                '413':\n                  description: |\n                    The `POST` request is too large. The client can't handle a payload of this size at once and\n                    asks the server to send EPCIS events in smaller batches.\n                  content:\n                    application/problem+json:\n                      schema:\n                        allOf:\n                          - properties:\n                              status:\n                                type: integer\n                                enum:\n                                  - 413\n                                default: 413\n                              type:\n                                type: string\n                                format: uri\n                                enum:\n                                  - epcisException:QueryTooComplexException\n                          - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n                '415':\n                  $ref: '#/components/responses/415UnsupportedMediaType'\n  /queries/{queryName}/subscriptions/{subscriptionID}:\n    parameters:\n      - $ref: '#/components/parameters/QueryName'\n      - in: path\n        name: subscriptionID\n        required: true\n        example: df5a33e3-5aa3-4403-ae01-99b83234e27b\n        schema:\n          $ref: '#/components/schemas/subscriptionID'\n    options:\n      parameters:\n        - $ref: '#/components/parameters/GS1-Extensions'\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the endpoint for an individual subscription.\n      description: |\n        The `OPTIONS` method is used to discover capabilities for a query subscription.\n      responses:\n        '204':\n          $ref: '#/components/responses/204SubscriptionEndpointDiscovery'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Queries'\n        - 'Subscriptions'\n      summary: Returns the details of a subscription. This method is useful to verify if a subscription is still active.\n      parameters:\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-Extensions'\n      responses:\n        '200':\n          headers:\n            'GS1-Extensions': \n              $ref: '#/components/headers/GS1-Extensions'\n            GS1-EPCIS-Version: \n              $ref: '#/components/headers/GS1-EPCIS-Version'\n          description: |\n            The `GET` method on a query subscription allows the client to get the details of an individual subscription.\n          content:\n            application/json:\n              example:\n                {\n                  \"subscriptionID\": \"7cec849f-72f7-4a9d-bc86-080d3c5b7c98\",\n                  \"queryName\": \"GetIlmdExtension\",\n                  \"dest\": \"http://example.com/testWebhookSubscription\",\n                  \"initialRecordTime\": \"2022-01-06T06:52:24.880Z\",\n                  \"reportIfEmpty\": true,\n                  \"schedule\": {\n                      \"second\": \"0/30\"\n                  },\n                  \"createdAt\": \"2022-01-06T06:52:24.889Z\",\n                  \"lastNotifiedAt\": \"2022-01-08T06:51:21.889Z\"\n                }\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/AbstractQuerySubscriptionResponse'\n                  - oneOf:\n                      - $ref: '#/components/schemas/QueryScheduleSubscription'\n                      - $ref: '#/components/schemas/QueryStreamSubscription'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    delete:\n      operationId: unsubscribe\n      tags:\n        - 'Queries'\n        - 'Subscriptions'\n      summary: Unsubscribes a client by deleting the query subscription.\n      responses:\n        '204':\n          description: Client unsubscribed from query.\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /queries/{queryName}/events:\n    parameters:\n      - $ref: '#/components/parameters/QueryName'\n      - $ref: '#/components/parameters/GS1-Extensions'\n    options:\n      tags:\n        - 'Discovery'\n      summary: Query the metadata of the EPCIS events query result endpoint.\n      description: |\n        The `OPTIONS` method is used to discover capabilities for named queries. It describes which EPCIS and CBV\n        versions are used in the query result supported as well as EPCIS and CBV extensions.\n\n      responses:\n        '204':\n          $ref: '#/components/responses/204DefaultDiscoveryResponse'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n    get:\n      tags:\n        - 'Queries'\n        - 'Events'\n      summary: |\n        Returns EPCIS events with the option to use pagination if needed. This endpoint supports query subscriptions\n        using WebSockets.\n      parameters:\n        - $ref: '#/components/parameters/Upgrade'\n        - $ref: '#/components/parameters/Connection'\n        - $ref: '#/components/parameters/GS1-Query-ReportIfEmpty'\n        - $ref: '#/components/parameters/GS1-Query-InitialRecordTime'\n        - $ref: '#/components/parameters/GS1-Query-Second'\n        - $ref: '#/components/parameters/GS1-Query-Minute'\n        - $ref: '#/components/parameters/GS1-Query-Hour'\n        - $ref: '#/components/parameters/GS1-Query-DayOfMonth'\n        - $ref: '#/components/parameters/GS1-Query-Month'\n        - $ref: '#/components/parameters/GS1-Query-DayOfWeek'\n        - $ref: '#/components/parameters/GS1-Query-Stream'\n        # Common /events parameters\n        - $ref: '#/components/parameters/NextPageToken'\n        - $ref: '#/components/parameters/PerPage'\n        - $ref: '#/components/parameters/GS1-CBV-Min'\n        - $ref: '#/components/parameters/GS1-CBV-Max'\n        - $ref: '#/components/parameters/GS1-EPCIS-Min'\n        - $ref: '#/components/parameters/GS1-EPCIS-Max'\n        - $ref: '#/components/parameters/GS1-EPC-Format'\n        - $ref: '#/components/parameters/GS1-CBV-XML-Format'\n\n      description: |\n        The `GET` endpoint  is to retrieve results of a named query.\n        Furthermore, this endpoint can also be used to subscribe to queries using Websocket. To do this, the client\n        must specify the query schedule or set the `stream` parameter to `true` as a URL query string parameter. Please\n        note that scheduling parameters and the `stream` parameter are mutually exclusive.\n\n        ## Scheduled query: Receive query results at 1.05am\n\n        Handshake from client for scheduled query:\n\n        ```\n        GET https://example.com/queries/MyQuery/events?minute=5\u0026hour=1\n        Host: example.com\n        Upgrade: websocket\n        Connection: Upgrade\n        ```\n\n        Handshake from the server:\n\n        ```\n        HTTP/1.1 101 Switching Protocols\n        Upgrade: websocket\n        Connection: Upgrade\n        ```\n\n        ## Streaming query subscription: Whenever a captured EPCIS event matches the query criteria\n\n        Handshake from client for streaming:\n\n        ```\n        GET https://example.com/queries/MyQuery/events?stream=true\n        Host: example.com\n        Upgrade: websocket\n        Connection: Upgrade\n        ```\n\n        Handshake from the server:\n\n        ```\n        HTTP/1.1 101 Switching Protocols\n        Upgrade: websocket\n        Connection: Upgrade\n        ```\n      responses:\n        '101':\n          $ref: '#/components/responses/101WebsocketCreated'\n        '200':\n          $ref: '#/components/responses/200EPCISQueryDocument'\n        '400':\n          $ref: '#/components/responses/400SubscriptionIssues'\n        '401':\n          $ref: '#/components/responses/401UnauthorizedRequest'\n        '403':\n          $ref: '#/components/responses/403ClientUnauthorized'\n        '404':\n          $ref: '#/components/responses/404ResourceNotFound'\n        '414':\n          $ref: '#/components/responses/414URLTooLong'\n        '413':\n          $ref: '#/components/responses/413QueryScopeOrSize'\n        '406':\n          $ref: '#/components/responses/406NotAcceptable'\n        '500':\n          $ref: '#/components/responses/500ImplementationException'\n\n  /nextPageToken/{token}:\n    parameters:\n      - $ref: '#/components/parameters/Token'\n    delete:\n      tags:\n        - 'Queries'\n      summary: Optional endpoint that allows on-demand release of any resources associated with `nextPageToken`.\n      responses:\n        '204':\n          $ref: '#/components/responses/204NextPageTokenInvalidated'\n        '501':\n          $ref: '#/components/responses/501NotImplemented'\n\ncomponents:\n  responses:\n    101WebsocketCreated:\n      description: |\n        Create a WebSocket connection to subscribe to queries. Upon subscription, the server SHALL send all new events\n        to subscribing clients. If multiple clients have the same query, each client will receive events which they are\n        authorized to see.\n      headers:\n        Upgrade:\n          required: true\n          schema:\n            type: string\n            default: websocket\n        Connection:\n          required: true\n          schema:\n            type: string\n            default: upgrade\n        GS1-Query-Min-Record-Time:\n          required: false\n          schema:\n            $ref: '#/components/schemas/GS1-Query-Min-Record-Time'\n    200TopLevelOrEventTypeSubResource:\n      headers:\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n      description: Returns a sub-resource list that contains at least the `events` sub-resource.\n      content:\n        application/json:\n          example:\n           { \n             \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n             \"type\": \"Collection\",\n             \"member\": [\"events\"]\n           }\n          schema:\n            $ref: '#/components/schemas/ResourceCollection'\n    200EPCISQueryDocument:\n      headers:\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        Link:\n          $ref: '#/components/headers/Link'\n        GS1-Next-Page-Token-Expires:\n          $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n      description: Contains EPCIS events.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EPCISQueryDocument'\n        application/xml:\n          schema:\n            $ref: '#/components/schemas/EPCISXMLQueryDocument'\n    200EPCISQueryDocumentSinglePage:\n      headers:\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n      description: EPCIS Query Document containing events with the requested `eventID`.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EPCISQueryDocument'\n        application/xml:\n          schema:\n            $ref: '#/components/schemas/EPCISXMLQueryDocument'\n    204NextPageTokenInvalidated:\n      description: nextPageToken invalidated successfully.\n    200SupportedTopLevel:\n      description: Returns all supported EPCIS top-level resources.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TopLevelResourceCollection'\n          example: {\n            \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n            \"type\": \"Collection\",\n            \"member\": [\n              \"queries\",\n              \"capture\",\n              \"events\",\n              \"eventTypes\",\n              \"epcs\", \n              \"readPoints\",\n              \"bizLocations\",\n              \"dispositions\",\n              \"bizSteps\"\n            ]\n          }\n        application/xml:\n          schema:\n            $ref: '#/components/schemas/TopLevelResourceCollection'\n          example: {\n            \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n            \"type\": \"Collection\",\n            \"member\": [\n              \"queries\",\n              \"capture\",\n              \"events\",\n              \"eventTypes\",\n              \"epcs\", \n              \"readPoints\",\n              \"bizLocations\",\n              \"dispositions\",\n              \"bizSteps\"\n            ]\n          }\n    200SupportedEventTypes:\n      description: Returns all supported EPCIS event types.\n      headers:\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        Link:\n          $ref: '#/components/headers/Link'\n        GS1-Next-Page-Token-Expires:\n          $ref: '#/components/headers/GS1-Next-Page-Token-Expires'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EventTypeCollection'\n    204DefaultDiscoveryResponse:\n      description: |\n        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.\n        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and\n        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.\n      headers:\n        Allow:\n          description: Lists the set of methods supported by the resource. \n          schema:\n            example: OPTIONS, GET\n            type: string\n            default: 'OPTIONS, GET'\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-EPCIS-Min:\n          $ref: '#/components/headers/GS1-EPCIS-Min'\n        GS1-EPCIS-Max:\n          $ref: '#/components/headers/GS1-EPCIS-Max'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-CBV-Min:\n          $ref: '#/components/headers/GS1-CBV-Min'\n        GS1-CBV-Max:\n          $ref: '#/components/headers/GS1-CBV-Max'\n        GS1-EPC-Format:\n          $ref: '#/components/headers/GS1-EPC-Format'\n        GS1-CBV-XML-Format:\n          $ref: '#/components/headers/GS1-CBV-XML-Format'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        GS1-Vendor-Version:\n          $ref: '#/components/headers/GS1-Vendor-Version'\n    204WritableResourcesDiscovery:\n      description: |\n        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.\n        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and\n        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.\n      headers:\n        Allow:\n          description: Lists the set of methods supported by the resource. \n          schema:\n            example: OPTIONS, GET, POST\n            type: string\n            default: 'OPTIONS, GET, POST'\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-EPCIS-Min:\n          $ref: '#/components/headers/GS1-EPCIS-Min'\n        GS1-EPCIS-Max:\n          $ref: '#/components/headers/GS1-EPCIS-Max'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-CBV-Min:\n          $ref: '#/components/headers/GS1-CBV-Min'\n        GS1-CBV-Max:\n          $ref: '#/components/headers/GS1-CBV-Max'\n        GS1-EPC-Format:\n          $ref: '#/components/headers/GS1-EPC-Format'\n        GS1-CBV-XML-Format:\n          $ref: '#/components/headers/GS1-CBV-XML-Format'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        GS1-Vendor-Version:\n          $ref: '#/components/headers/GS1-Vendor-Version'\n    204RemovableResourcesDiscovery:\n      description: |\n        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.\n        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and\n        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.\n      headers:\n        Allow:\n          description: Lists the set of methods supported by the resource. \n          schema:\n            example: OPTIONS, GET, DELETE\n            type: string\n            default: 'OPTIONS, GET, DELETE'\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-EPCIS-Min:\n          $ref: '#/components/headers/GS1-EPCIS-Min'\n        GS1-EPCIS-Max:\n          $ref: '#/components/headers/GS1-EPCIS-Max'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-CBV-Min:\n          $ref: '#/components/headers/GS1-CBV-Min'\n        GS1-CBV-Max:\n          $ref: '#/components/headers/GS1-CBV-Max'\n        GS1-EPC-Format:\n          $ref: '#/components/headers/GS1-EPC-Format'\n        GS1-CBV-XML-Format:\n          $ref: '#/components/headers/GS1-CBV-XML-Format'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        GS1-Vendor-Version:\n          $ref: '#/components/headers/GS1-Vendor-Version'\n    204CaptureEndpointDiscovery:\n      description: |\n        The `OPTIONS` method is used to discover capabilities for EPCIS 2.0 endpoints.\n        It describes which EPCIS and CBV versions are supported and used for the top-level resource as well as EPCIS and\n        CBV extensions. The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.\n      headers:\n        Allow:\n          description: Lists the set of methods supported by the resource. \n          schema:\n            example: OPTIONS, POST, GET\n            type: string\n            default: OPTIONS, POST, GET\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-EPCIS-Min:\n          $ref: '#/components/headers/GS1-EPCIS-Min'\n        GS1-EPCIS-Max:\n          $ref: '#/components/headers/GS1-EPCIS-Max'\n        GS1-CBV-Version:\n          $ref: '#/components/headers/GS1-CBV-Version'\n        GS1-CBV-Min:\n          $ref: '#/components/headers/GS1-CBV-Min'\n        GS1-CBV-Max:\n          $ref: '#/components/headers/GS1-CBV-Max'\n        GS1-EPC-Format:\n          $ref: '#/components/headers/GS1-EPC-Format'\n        GS1-CBV-XML-Format:\n          $ref: '#/components/headers/GS1-CBV-XML-Format'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        GS1-Vendor-Version:\n          $ref: '#/components/headers/GS1-Vendor-Version'\n        GS1-EPCIS-Capture-Limit:\n          $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'\n        GS1-EPCIS-Capture-File-Size-Limit:\n          $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'\n        GS1-Capture-Error-Behaviour:\n          $ref: '#/components/headers/GS1-Capture-Error-Behaviour'\n    204SubscriptionEndpointDiscovery:\n      description: |\n        The `OPTIONS` method returns information describing individual query subscriptions.\n        The list of headers is not exhaustive. It only describes the functionality specific to EPCIS 2.0.\n      headers:\n        Allow:\n          description: Lists the set of methods supported by the resource. \n          schema:\n            example: OPTIONS, DELETE, GET\n            type: string\n            default: OPTIONS, DELETE, GET\n        GS1-EPCIS-Version:\n          $ref: '#/components/headers/GS1-EPCIS-Version'\n        GS1-EPCIS-Min:\n          $ref: '#/components/headers/GS1-EPCIS-Min'\n        GS1-EPCIS-Max:\n          $ref: '#/components/headers/GS1-EPCIS-Max'\n        GS1-Extensions:\n          $ref: '#/components/headers/GS1-Extensions'\n        GS1-Vendor-Version:\n          $ref: '#/components/headers/GS1-Vendor-Version'\n        GS1-Query-Min-Record-Time:\n          $ref: '#/components/headers/GS1-Query-Min-Record-Time'\n\n    204QueryDeleted:\n      description: Query deleted and clients disconnected.\n    400SubscriptionIssues:\n      description: An issue with a subscription occurred.\n      content:\n        application/json:\n          schema:\n            example:\n              type: \"epcisException:SubscriptionControlsException\"\n              title: \"Subscription error\"\n              status: 400\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 400\n                    default: 400\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:SubscriptionControlsException\n                      - epcisException:ValidationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/xml:\n          schema:\n            example:\n              type: \"epcisException:SubscriptionControlsException\"\n              title: \"Subscription error\"\n              status: 400\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 400\n                    default: 400\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:SubscriptionControlsException\n                      - epcisException:ValidationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    400QueryIssues:\n      description: Query exceptions defined in EPCIS.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:QueryValidationException\"\n              title: \"EPCIS query exception\"\n              status: 400\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 400\n                    default: 400\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:QueryValidationException\n                      - epcisException:QueryParameterException\n                      - epcisException:ValidationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    401UnauthorizedRequest:\n      description: Authorization information is missing or invalid.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:SecurityException\"\n              title: \"Unauthorised request\"\n              status: 401\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 401\n                    default: 401\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:SecurityException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:SecurityException\"\n              title: \"Unauthorised request\"\n              status: 401\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 401\n                    default: 401\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:SecurityException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    403ClientUnauthorized:\n      description: Client is unauthorized to access this resource.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:SecurityException\"\n              title: \"Access to resource forbidden\"\n              status: 403\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 403\n                    default: 403\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:SecurityException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:SecurityException\"\n              title: \"Access to resource forbidden\"\n              status: 403\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 403\n                    default: 403\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:SecurityException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    404ResourceNotFound:\n      description: At least one resource was not found. For example, the EPCIS event does not exist or the query does not exist.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:NoSuchResourceException\"\n              title: \"Resource not found\"\n              status: 404\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 404\n                    default: 404\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:NoSuchNameException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:NoSuchNameException\"\n              title: \"Resource not found\"\n              status: 404\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 404\n                    default: 404\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:NoSuchNameException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    413CapturePayloadTooLarge:\n      headers:\n        GS1-EPCIS-Capture-Limit:\n          $ref: '#/components/headers/GS1-EPCIS-Capture-Limit'\n        GS1-EPCIS-Capture-File-Size-Limit:\n          $ref: '#/components/headers/GS1-EPCIS-Capture-File-Size-Limit'\n      description: |\n        The `POST` request is too large. It exceeds the limits set in `GS1-EPCIS-Capture-Limit` and/or\n        `GS1-EPCIS-Capture-File-Size-Limit`.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:CaptureLimitExceededException\"\n              title: \"Capture Payload too large\"\n              status: 413\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 413\n                    default: 413\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:CaptureLimitExceededException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:CaptureLimitExceededException\"\n              title: \"Capture Payload too large\"\n              status: 413\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 413\n                    default: 413\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:CaptureLimitExceededException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    413QueryScopeOrSize:\n      description: Query result is too large.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:QueryTooComplexException\"\n              title: \"Capture Payload too large\"\n              status: 413\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 413\n                    default: 413\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:QueryTooLargeException\n                      - epcisException:QueryTooComplexException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:QueryTooComplexException\"\n              title: \"Capture Payload too large\"\n              status: 413\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 413\n                    default: 413\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:QueryTooLargeException\n                      - epcisException:QueryTooComplexException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    414URLTooLong:\n      description: URL is too long. This is usually a problem with large EPCIS queries in the URL.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:URITooLongException\"\n              title: \"URI Too Long\"\n              status: 414\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 414\n                    default: 414\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:URITooLongException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:URITooLongException\"\n              title: \"URI Too Long\"\n              status: 414\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 414\n                    default: 414\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:URITooLongException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    406NotAcceptable:\n      description: |\n        The server cannot return the response as requested. \n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:NotAcceptableException\"\n              title: \"Conflicting request and response headers\"\n              status: 406\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 406\n                    default: 406\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:NotAcceptableException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:NotAcceptableException\"\n              title: \"Conflicting request and response headers\"\n              status: 406\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 406\n                    default: 406\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:NotAcceptableException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    409ResourceAlreadyExistsException:\n      description: |\n        A resource with the provided identifier already exists. E.g., a named query or an event.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:ResourceAlreadyExistsException\"\n              title: \"A resource with the provided identifier already exists.\"\n              status: 409\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 406\n                    default: 406\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:ResourceAlreadyExistsException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:ResourceAlreadyExistsException\"\n              title: \"A resource with the provided identifier already exists.\"\n              status: 409\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 406\n                    default: 406\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:ResourceAlreadyExistsException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'              \n    415UnsupportedMediaType:\n      description: |\n        The client sent data in a format that is not supported by the server.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:UnsupportedMediaTypeException\"\n              title: \"Unsupported Media Type\"\n              status: 415\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 415\n                    default: 415\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:UnsupportedMediaTypeException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:UnsupportedMediaTypeException\"\n              title: \"Unsupported Media Type\"\n              status: 415\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 415\n                    default: 415\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:IUnsupportedMediaTypeException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    500ImplementationException:\n      description: An error occurred on the backend.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:ImplementationException\"\n              title: \"A server-side error occurred\"\n              status: 500\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 500\n                    default: 500\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:ImplementationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:ImplementationException\"\n              title: \"A server-side error occurred\"\n              status: 500\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 500\n                    default: 500\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:ImplementationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n    501NotImplemented:\n      description: Functionality not supported by server.\n      content:\n        application/problem+json:\n          schema:\n            example:\n              type: \"epcisException:ImplementationException\"\n              title: \"Functionality not supported by server\"\n              status: 501\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 501\n                    default: 501\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:ImplementationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n        application/problem+xml:\n          schema:\n            example:\n              type: \"epcisException:ImplementationException\"\n              title: \"Functionality not supported by server\"\n              status: 501\n            allOf:\n              - properties:\n                  status:\n                    type: integer\n                    enum:\n                      - 501\n                    default: 501\n                  type:\n                    type: string\n                    format: uri\n                    enum:\n                      - epcisException:ImplementationException\n              - $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n  schemas:\n    LDContext:\n      description: JSON-LD @context. \n      anyOf:\n        - type: array\n          items:\n              anyOf:\n              - type: string\n                format: uri\n              - type: object\n        - type: string \n          format: uri\n        - type: object\n    Location:\n      description: Location header of a resource.\n      type: string\n      format: uri\n      example: /eventTypes/ObjectEvent/events/eventId123\n    RFC7807ProblemResponseBody:\n      description: A response as specified in [RFC 7807](https://tools.ietf.org/html/rfc7807).\n      type: object\n      required:\n        - type\n        - title\n      properties:\n        type:\n          type: string\n          format: uri\n        title:\n          type: string\n        status:\n          type: integer\n        detail:\n          type: string\n        instance:\n          type: string\n          format: uri\n      xml:\n        name: \"EPCISException\"\n        prefix: \"epcis\"\n        namespace: \"urn:epcglobal:epcis:xsd:2\"\n        \n\n    QueryDefinition:\n      example:\n        { \n          \"name\" : \"UniqueQueryName\",\n          \"query\": {\n            \"eventType\": [ \"ObjectEvent\" ] ,\n            \"EQ_bizStep\": [\n                \"shipping\",\n                \"receiving\" ]\n          }\n        }\n      description: |\n        Creating a new query with query body.\n      type: object\n      required:\n        - name\n        - query\n      properties:\n        name:\n          type: string\n        query:\n          $ref: '#/components/schemas/EPCISEventsQuery'\n\n    EPCISEventsQuery:\n      type: object\n      description: An EPCIS event query.\n      example:\n        {\n          \"eventType\": [\"ObjectEvent\"],\n          \"EQ_bizStep\": [\n              \"shipping\",\n              \"receiving\" ]\n        }\n      externalDocs:\n        url: query-schema.json\n      items:\n        type: object\n    subscriptionID:\n      description: The ID of a WebHook subscription.\n      example: df5a33e3-5aa3-4403-ae01-99b83234e27b\n      type: string\n    dest: \n      description: Callback URL to receive EPCIS resources and errors.\n      type: string\n      format: uri\n      example: https://client.example.com/queryCallback\n    QueryName:\n      description: Unique query name.\n      type: string\n      example: myQuery\n    SingleEvent:\n      description: |\n        A single EPCIS event. The full schema is specified in the JSON-Schema documentation.\n      type: object\n      required:\n        - 'type'\n      properties:\n        '@context':\n          type: array\n          items:\n            anyOf:\n              - type: string\n                format: uri\n              - type: object\n        'type':\n          type: string\n          example: ObjectEvent\n      externalDocs:\n        description: |\n          A SingleEvent that must be validated with the external JSON Schema.\n        url: ../JSON/EPCIS-JSON-Schema.json\n      example:\n        {\n          \"@context\": \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n          \"type\": \"ObjectEvent\",\n          \"action\": \"OBSERVE\",\n          \"bizStep\": \"inspecting\",\n          \"eventTime\": \"2021-05-05T15:00:00.000+01:00\",\n          \"eventTimeZoneOffset\": \"+01:00\",\n          \"readPoint\": {\n            \"id\": \"urn:epc:id:sgln:4012345.00005.0\"\n          },\n          \"epcList\": [\n              \"urn:epc:id:sgtin:4012345.011111.9876\"\n          ],\n          \"sensorElementList\": [\n            {\n              \"sensorMetadata\": {\n                \"time\": \"2019-04-02T14:05:00.000+01:00\",\n                \"deviceID\": \"urn:epc:id:giai:4000001.111\",\n                \"deviceMetadata\": \"https://id.gs1.org/8004/4000001111\",\n                \"rawData\": \"https://example.org/8004/401234599999\"\n              },\n              \"sensorReport\": [\n                {\n                  \"type\": \"gs1:Temperature\",\n                  \"value\": 26.0,\n                  \"uom\": \"CEL\"\n                },\n                {\n                  \"type\": \"gs1:AbsoluteHumidity\",\n                  \"value\": 12.1,\n                  \"uom\": \"A93\"\n                },\n                {\n                  \"type\": \"gs1:Speed\",\n                  \"value\": 160.0,\n                  \"uom\": \"KMH\"\n                },\n                {\n                  \"type\": \"gs1:Illuminance\",\n                  \"value\": 800.0,\n                  \"uom\": \"LUX\"\n                }\n              ]\n            },\n            {\n              \"sensorMetadata\": {\n                \"time\": \"2019-04-02T14:35:00.000+01:00\",\n                \"deviceID\": \"urn:epc:id:giai:4000001.111\",\n                \"deviceMetadata\": \"https://id.gs1.org/8004/4000001111\",\n                \"rawData\": \"https://example.org/8004/401234599999\"\n              },\n              \"sensorReport\": [\n                {\n                  \"type\": \"gs1:Temperature\",\n                  \"value\": 26.1,\n                  \"uom\": \"CEL\"\n                },\n                {\n                  \"type\": \"gs1:AbsoluteHumidity\",\n                  \"value\": 12.2,\n                  \"uom\": \"A93\"\n                },\n                {\n                  \"type\": \"gs1:Speed\",\n                  \"value\": 161.0,\n                  \"uom\": \"KMH\"\n                },\n                {\n                  \"type\": \"gs1:Illuminance\",\n                  \"value\": 801.0,\n                  \"uom\": \"LUX\"\n                }\n              ]\n            },\n            {\n              \"sensorMetadata\": {\n                \"time\": \"2019-04-02T14:55:00.000+01:00\",\n                \"deviceID\": \"urn:epc:id:giai:4000001.111\",\n                \"deviceMetadata\": \"https://id.gs1.org/8004/4000001111\",\n                \"rawData\": \"https://example.org/8004/401234599999\"\n              },\n              \"sensorReport\": [\n                {\n                  \"type\": \"gs1:Temperature\",\n                  \"value\": 26.2,\n                  \"uom\": \"CEL\"\n                },\n                {\n                  \"type\": \"gs1:AbsoluteHumidity\",\n                  \"value\": 12.2,\n                  \"uom\": \"A93\"\n                },\n                {\n                  \"type\": \"gs1:Speed\",\n                  \"value\": 162.0,\n                  \"uom\": \"KMH\"\n                },\n                {\n                  \"type\": \"gs1:Illuminance\",\n                  \"value\": 802.0,\n                  \"uom\": \"LUX\"\n                }\n              ]\n            }\n          ]\n        }\n    EPCISDocument:\n      description: A collection of EPCIS resources.\n      type: object\n      required:\n        - '@context'\n        - schemaVersion\n        - creationDate\n        - 'type'\n        - epcisBody\n      properties:\n        '@context':\n          type: array\n          items:\n            anyOf:\n              - type: string\n                format: uri\n              - type: object\n        'type':\n          type: string\n          enum: \n            - EPCISDocument\n          example: EPCISDocument\n        schemaVersion:\n          type: number\n        creationDate:\n          type: string\n          format: date-time\n        format:\n          type: string\n          example: \"application/ld+json\"\n        epcisBody:\n          type: object\n          properties:\n            eventList:\n              type: array\n              uniqueItems: true\n              items:\n                type: object\n          required:\n            - eventList\n        epcisHeader:\n          type: object\n          properties:\n            epcisMasterData:\n              type: object\n              properties:\n                vocabularyList:\n                  type: array\n                  uniqueItems: true\n                  items:\n                    type: object\n\n      example:\n        {\n          \"@context\": [\n              \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n              { \"example\": \"http://ns.example.com/epcis/\" } ],\n          \"type\": \"EPCISDocument\",\n          \"schemaVersion\": 2.0,\n          \"creationDate\": \"2021-07-11T11:30:47.0Z\",\n          \"epcisBody\": {\n            \"eventList\": [\n              {\n                \"eventID\": \"_:event1\",\n                \"type\": \"ObjectEvent\",\n                \"action\": \"OBSERVE\",\n                \"bizStep\": \"shipping\",\n                \"disposition\": \"in_transit\",\n                \"epcList\": [ \"urn:epc:id:sgtin:0614141.107346.2017\",\"urn:epc:id:sgtin:0614141.107346.2018\" ],\n                \"eventTime\": \"2022-01-08T20:33:31.116-06:00\",\n                \"eventTimeZoneOffset\": \"-06:00\",\n                \"readPoint\": { \"id\": \"urn:epc:id:sgln:0614141.07346.1234\" },\n                \"bizTransactionList\": [\n                  { \"type\": \"po\", \"bizTransaction\": \"http://transaction.acme.com/po/12345678\" } ]\n              },\n              {\n                \"eventID\": \"_:event2\",\n                \"type\": \"ObjectEvent\",\n                \"action\": \"OBSERVE\",\n                \"bizStep\": \"receiving\",\n                \"disposition\": \"in_progress\",\n                \"epcList\": [ \"urn:epc:id:sgtin:0614141.107346.2018\" ],\n                \"eventTime\": \"2022-01-08T20:33:32.116-06:00\",\n                \"eventTimeZoneOffset\": \"-06:00\",\n                \"readPoint\": { \"id\": \"urn:epc:id:sgln:0012345.11111.400\" },\n                \"bizLocation\": { \"id\": \"urn:epc:id:sgln:0012345.11111.0\" },\n                \"bizTransactionList\": [\n                  { \"type\": \"po\", \"bizTransaction\": \"http://transaction.acme.com/po/12345678\" },\n                  { \"type\": \"desadv\", \"bizTransaction\": \"urn:epcglobal:cbv:bt:0614141073467:1152\" }\n                ],\n                \"example:myField\": \"Example of a vendor/user extension\"\n              }\n            ]\n          }\n        }\n      externalDocs:\n        description: |\n          An EPCIS document that must be validated with the [JSON schema](../JSON/EPCIS-JSON-Schema.json) or\n          [SHACL file](../JSON/EPCIS-SHACL.ttl).\n        url: ../JSON/EPCIS-SHACL.ttl\n    CaptureJob:\n      description: |\n        When EPCIS events are added through the capture interface, the capture process can run asynchronously. If the payload\n        is syntactically correct and the client is allowed to call `/capture`, the server returns a `202` HTTP response code. This\n        does not guarantee successful storage of all EPCIS events. The capture job exposes the state of the capture job to the client.\n\n        A capture job document has at least the following properties:\n\n        - `running`: whether or not the capture job is still active.\n        - `success`: whether or not at least one error occurred.\n        - `captureErrorBehaviour`: GS1-Capture-Error-Behaviour header value provided with POST data to capture.\n        - `errors` or `errorFile`: with the errors if `success` is `false`.\n\n        ### captureErrorBehaviour value is `rollback`\n\n        | Capture job `running` | Capture job `success` | Capture job outcome |\n        |:--------|:---------|:---------|\n        | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |\n        | `true` | `false` | At least one error occurred. Rollback is in progress. |\n        | `false` | `true` | All EPCIS events are captured. |\n        | `false` | `false` | All EPCIS events are rejected. |\n\n        ### captureErrorBehaviour value is `proceed`\n\n        | Capture job `running` | Capture job `success` | Capture job outcome |\n        |:--------|:---------|:---------|\n        | `true` | `true` | Still capturing EPCIS events. No errors occurred so far. |\n        | `true` | `false` | At least one error occurred but more EPCIS events are currently being captured. |\n        | `false` | `true` | All EPCIS events were captured without an error. |\n        | `false` | `false` | Some EPCIS events were captured but errors occurred. |\n\n        If `success` is `false`, check the `errors` or `errorFile` property for details.\n      example: {\n        \"captureID\": \"id9261379075\",\n        \"createdAt\": \"2022-01-21T17:32:28Z\",\n        \"finishedAt\" : \"2022-01-21T17:45:28Z\",\n        \"running\": false,\n        \"success\": true,\n        \"captureErrorBehaviour\": \"rollback\",\n        \"errors\": [ ]\n      }\n      type: object\n      allOf:\n        - properties:\n            captureID:\n              example: id9261379075\n              description: A unique value identifying a capture job generated by the server.\n              type: string\n              xml:\n                attribute: true\n            running:\n              description: |\n                If the job is still running, the state is `true`, otherwise `false`.\n              type: boolean\n              example: true\n              xml:\n                attribute: true\n            success:\n              description: |\n                If `success` is `false`, there was at least one error. Otherwise, `success` is `true`.\n                If the `GS1-Capture-Error-Behaviour` header is `rollback`, `success` being `false` aborts the capture\n                job and rejects all EPCIS events related to the job.\n                If `GS1-Capture-Error-Behaviour` header is `proceed`, some EPCIS events might still be captured, even\n                if `success` is `false`.\n              type: boolean\n              example: false\n              xml:\n                attribute: true\n            createdAt:\n              description: \"When the capture job started\"\n              example: \"2022-01-21T17:32:28Z\"\n              type: string\n              format: date-time\n            finishedAt:\n              description: \"When the capture job finished executing\"\n              example: \"2022-01-21T17:45:28Z\"\n              type: string\n              format: date-time\n            captureErrorBehaviour:\n              description: \"GS1-Capture-Error-Behaviour header value provided with POST data to capture\"\n              example: \"rollback\"\n              type: string\n              enum:\n                - 'rollback'\n                - 'proceed'\n        - oneOf:\n            - properties:\n                errors:\n                  description: |\n                    If the job was successful, the array is empty.\n                  default: []\n                  example: []\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/RFC7807ProblemResponseBody'\n            - properties:\n                errorFile:\n                  description: |\n                    Instead of returning errors in the `errors` property, the server can also write errors to a logfile,\n                    and share the URL with the client.\n                  example: ''\n                  type: string\n                  format: uri\n      xml:\n        name: \"EPCISCaptureJob\"\n        prefix: \"epcis\"\n        namespace: \"urn:epcglobal:epcis:xsd:2\"\n    EPCISQueryDocument:\n      description: A collection of EPCIS resources.\n      type: object\n      required:\n        - '@context'\n        - 'type'\n        - epcisBody\n      properties:\n        '@context':\n          type: array\n          items:\n            uniqueItems: true\n            anyOf:\n              - type: string\n                format: uri\n              - type: object\n        'type':\n          type: string\n          enum: \n            - EPCISQueryDocument\n          example: EPCISQueryDocument\n        schemaVersion:\n          type: string\n          pattern: ^\\d+(\\.\\d+)*$\n          example: \"2.0\"\n        creationDate:\n          type: string\n          format: date-time\n        epcisBody:\n          type: object\n          properties:\n            queryResults:\n              type: object\n              properties:\n                queryName:\n                  $ref: '#/components/schemas/QueryName'\n                subscriptionID:\n                  $ref: '#/components/schemas/subscriptionID'\n                resultsBody:\n                  type: object\n                  required:\n                    - eventList\n                  properties:\n                    eventList:\n                      type: array\n                      items:\n                        type: object\n        epcisHeader:\n          type: object \n          properties:\n            epcisMasterData:\n              type: object\n              properties:\n                vocabularyList:\n                  type: array\n                  uniqueItems: true\n                  items:\n                    type: object\n\n      example:\n              {\n        \"@context\": [\n          \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n          {\n            \"example\": \"http://ns.example.com/epcis/\"\n          }\n        ],\n        \"id\": \"_:document1\",\n        \"type\": \"EPCISQueryDocument\",\n        \"schemaVersion\": \"2.0\",\n        \"creationDate\": \"2005-07-11T11:30:47.0Z\",\n        \"epcisBody\": {\n          \"queryResults\": {\n            \"subscriptionID\": \"32d2aec1-a6d2-46d9-900a-24124288cce1\",\n            \"queryName\": \"SimpleEventQuery\",\n            \"resultsBody\": {\n              \"eventList\": [\n                {\n                  \"eventID\": \"ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0\",\n                  \"type\": \"ObjectEvent\",\n                  \"action\": \"OBSERVE\",\n                  \"bizStep\": \"shipping\",\n                  \"disposition\": \"in_transit\",\n                  \"epcList\": [\n                    \"urn:epc:id:sgtin:0614141.107346.2017\",\n                    \"urn:epc:id:sgtin:0614141.107346.2018\"\n                  ],\n                  \"eventTime\": \"2005-04-03T20:33:31.116000-06:00\",\n                  \"eventTimeZoneOffset\": \"-06:00\",\n                  \"readPoint\": {\n                    \"id\": \"urn:epc:id:sgln:0614141.07346.1234\"\n                  },\n                  \"bizTransactionList\": [\n                    {\n                      \"type\": \"po\",\n                      \"bizTransaction\": \"http://transaction.acme.com/po/12345678\"\n                    }\n                  ]\n                },\n                {\n                  \"eventID\": \"cc979570-74a3-4dc7-8f3e-2e747d6d31ec\",\n                  \"type\": \"ObjectEvent\",\n                  \"action\": \"OBSERVE\",\n                  \"bizStep\": \"receiving\",\n                  \"disposition\": \"in_progress\",\n                  \"epcList\": [\n                    \"urn:epc:id:sgtin:0614141.107346.2018\"\n                  ],\n                  \"eventTime\": \"2005-04-04T20:33:31.116-06:00\",\n                  \"eventTimeZoneOffset\": \"-06:00\",\n                  \"readPoint\": {\n                    \"id\": \"urn:epc:id:sgln:0012345.11111.400\"\n                  },\n                  \"bizLocation\": {\n                    \"id\": \"urn:epc:id:sgln:0012345.11111.0\"\n                  },\n                  \"bizTransactionList\": [\n                    {\n                      \"type\": \"po\",\n                      \"bizTransaction\": \"http://transaction.acme.com/po/12345678\"\n                    },\n                    {\n                      \"type\": \"desadv\",\n                      \"bizTransaction\": \"urn:epcglobal:cbv:bt:0614141073467:1152\"\n                    }\n                  ],\n                  \"example:myField\": \"Example of a vendor/user extension\"\n                }\n              ]\n            }\n          }\n        }\n      }\n      externalDocs:\n        description: |\n          An EPCIS document that must be validated with the [JSON schema](../JSON/EPCIS-JSON-Schema.json) or\n          [SHACL file](../JSON/EPCIS-SHACL.ttl).\n        url: ../JSON/EPCIS-SHACL.ttl\n\n    EPCISXMLQueryDocument:\n      description: A collection of EPCIS resources.\n      type: object\n      xml:\n        name: \"EPCISQueryDocument\"\n        prefix: \"epcis\"\n        namespace: \"urn:epcglobal:epcis-query:xsd:2\"\n\n      externalDocs:\n        description: |\n          An EPCIS document that must be validated with the [XML Schema](../XSD/EPCglobal-epcis-query-2_0.xsd)\n        url: ../XSD/EPCglobal-epcis-query-2_0.xsd\n\n    Link:\n      description: |\n        A pagination header link. This header works together with the `perPage` and `nextPageToken` query string\n        parameters.\n      type: string\n      format: uri\n      example: \n        '\u003chttps://example.com/epcis/events?perPage=30\u0026nextPageToken=3A15506738749783AU6D7DENAKwM2gQRRwGrataeq\u003e; rel=\"next\"'\n\n    PerPage:\n      description: |\n        This parameter helps to control the amount of data returned to the client through pagination.\n        In the case of EPCIS events, `perPage` specifies the maximum number of events in a response to the client.\n        It does not mandate that the server reaches this limit. For example, if the server sees that some EPCIS events are very\n        large, the server can decide to return fewer events to avoid creating an error because the response body is too\n        large.\n\n        As long as there are more resources to retrieve, the `Link` header contains the URL of the next page and\n        the attribute `rel=\"next\"`. The last page is indicated by the absence of the `rel=\"next\"`. Depending on the\n        implementation, there can be a global upper limit for the `perPage` value that the client cannot override,\n        which should be stated in the documentation.\n      type: integer\n      default: 30\n    NextPageToken:\n      description: |\n        Parameter that points to the next list of results when requesting a list of events that is larger than the value\n        specified with the `perPage` parameter. Some technologies refer to this as scrolling.\n        A `nextPageToken` may be invalidated through timeout. It is up to the specific implementation to provide\n        the mechanisms for invalidating tokens.\n      type: string\n      example: '3A15506738749783AU6D7DENAKwM2gQRRwGrataeq'\n    Upgrade:\n      type: string\n      description: The `Upgrade` and `Connection` headers are needed to open a Websocket for queries.\n      default: websocket\n      example: websocket\n    Connection:\n      example: Upgrade\n      description: The `Upgrade` and `Connection` headers are needed to open a Websocket for queries.\n      type: string\n      default: upgrade\n    EventTypeCollection:\n      type: object\n      description: Event type item list\n      example: {\n          \"@context\": [\"https://gs1.github.io/EPCIS/epcis-context.jsonld\", { \"ex\": \"https://example.org/myCustomEventTypes/\" }],\n              \"type\": \"Collection\",\n              \"member\": [\n                \"AggregationEvent\",\n                \"AssociationEvent\",\n                \"ObjectEvent\",\n                \"TransactionEvent\",\n                \"TransformationEvent\",\n                \"ex:aCustomEventType\"\n            ]\n      }\n      required: \n        - '@context'\n        - 'type'\n        - member\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LDContext'\n        'type':\n          type: string\n          enum: \n            - Collection\n        member:\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/EPCISEventTypes'\n              - type: string\n                format: uri\n          uniqueItems: true\n    EPCISEventTypes:\n      type: string\n      description: The five types of EPCIS events.\n      example:\n        - AggregationEvent\n        - AssociationEvent\n        - ObjectEvent\n        - TransactionEvent\n        - TransformationEvent\n      enum:\n        - AggregationEvent\n        - AssociationEvent\n        - ObjectEvent\n        - TransactionEvent\n        - TransformationEvent\n    TopLevelResources:\n      type: string\n      description: The seven top level resources of an EPCIS.\n      example:\n        - events\n        - eventTypes\n        - epcs\n        - bizSteps\n        - bizLocations\n        - readPoints\n        - dispositions\n        - capture\n        - queries\n      enum:\n        - events\n        - eventTypes\n        - epcs\n        - bizSteps\n        - bizLocations\n        - readPoints\n        - dispositions\n        - capture\n        - queries\n    TopLevelResourceCollection:\n      type: object\n      required:\n        - '@context'\n        - 'type'\n        - member\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LDContext'\n        'type':\n          type: string\n          enum: \n            - 'Collection'\n        member:\n          type: array\n          items:\n            $ref: '#/components/schemas/TopLevelResources'\n          uniqueItems: true\n          minItems: 9\n    BizStepCollection:\n      example: {\n        \"@context\": [\n          \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n          {\n            \"ex\": \"https://example.org/myCustomBizSteps/\"\n          }\n        ],\n        \"type\": \"Collection\",\n        \"member\": [\n          'accepting',\n          'arriving',\n          'assembling',\n          'collecting',\n          'commissioning',\n          'consigning',\n          'creating_class_instance',\n          'cycle_counting',\n          'decommissioning',\n          'departing',\n          'destroying',\n          'disassembling',\n          'dispensing',\n          'encoding',\n          'entering_exiting',\n          'holding',\n          'inspecting',\n          'installing',\n          'killing',\n          'loading',\n          'other',\n          'packing',\n          'picking',\n          'receiving',\n          'removing',\n          'repackaging',\n          'repairing',\n          'replacing',\n          'reserving',\n          'retail_selling',\n          'sampling',\n          'sensor_reporting',\n          'shipping',\n          'staging_outbound',\n          'stock_taking',\n          'stocking',\n          'storing',\n          'transporting',\n          'unloading',\n          'unpacking',\n          'void_shipping',\n          'ex:aCustomBizStep'\n        ]\n      }\n      type: object\n      required:\n        - '@context'\n        - 'type'\n        - member\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LDContext'\n        'type':\n          type: string\n          enum: \n            - 'Collection'\n        member:\n          type: array\n          items:\n            type: string\n          uniqueItems: true\n    DispositionCollection:\n      example: {\n        \"@context\": [\n          \"https://gs1.github.io/EPCIS/epcis-context.jsonld\",\n          {\n            \"ex\": \"https://example.org/myCustomDispositions/\"\n          }\n        ],\n        \"type\": \"Collection\",\n        \"member\": [\n          'active',\n          'available',\n          'completeness_inferred',\n          'completeness_verified',\n          'conformant',\n          'container_closed',\n          'container_open',\n          'damaged',\n          'destroyed',\n          'dispensed',\n          'disposed',\n          'encoded',\n          'expired',\n          'in_progress',\n          'in_transit',\n          'inactive',\n          'mismatch_class',\n          'mismatch_instance',\n          'mismatch_quantity',\n          'needs_replacement',\n          'no_pedigree_match',\n          'non_conformant',\n          'non_sellable_other',\n          'partially_dispensed',\n          'recalled',\n          'reserved',\n          'retail_sold',\n          'returned',\n          'sellable_accessible',\n          'sellable_not_accessible',\n          'stolen',\n          'unavailable',\n          'unknown',\n          'ex:aCustomDisposition'\n        ]\n      }\n      type: object\n      required:\n        - '@context'\n        - 'type'\n        - member\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LDContext'\n        'type':\n          type: string\n          enum: \n            - 'Collection'\n        member:\n          type: array\n          items:\n            type: string\n          uniqueItems: true\n    UriCollection:\n      description: A list of items which are URIs such as EPCs or business locations. \n      type: object\n      required:\n        - '@context'\n        - 'type'\n        - member\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LDContext'\n        'type':\n          type: string\n          enum: \n            - 'Collection'\n        member:\n          type: array\n          items:\n            type: string\n            format: uri\n          uniqueItems: true\n    ResourceCollection:\n      description: A collection of sub-resources that includes at least the `events` one. \n      type: object\n      required:\n        - '@context'\n        - 'type'\n        - member\n      properties:\n        '@context':\n          $ref: '#/components/schemas/LDContext'\n        'type':\n          type: string\n          enum: \n            - 'Collection'\n        member:\n          type: array\n          items:\n            type: string\n            minLength: 1\n            enum:\n              - events\n          uniqueItems: true\n          minItems: 1\n    AbstractQuerySubscription:\n      example: {\n        \"dest\": \"https://client.example.com/queryCallback\",\n        \"signatureToken\": \"13df38d8275b13f05704629e5f1cf3d45d6132d5\"\n      }\n      type: object\n      description: |\n        This schema contains shared features of EPCIS query subscriptions. If the schema is used in a response, the\n        `secret` should not be fully revealed.\n      required:\n        - dest\n        - secret\n      properties:\n        dest:\n          $ref: '#/components/schemas/dest'\n        signatureToken:\n          example: '13df38d8275b13f05704629e5f1cf3d45d6132d5'\n          type: string\n          description: Secret generated by the client for the server.\n        initialRecordTime:\n          $ref: '#/components/schemas/GS1-Query-InitialRecordTime'\n    \n    AbstractQuerySubscriptionResponse:\n      example: {\n        \"dest\": \"https://client.example.com/queryCallback\",\n        \"subscriptionID\" : \"df5a33e3-5aa3-4403-ae01-99b83234e27b\",\n        \"stream\": true,\n        \"createdAt\": \"2017-08-21T17:32:28Z\",\n        \"lastNotifiedAt\": \"2022-01-08T06:51:21.889Z\"\n      }\n      type: object\n      description: |\n        This schema contains shared features of EPCIS query subscriptions response.\n      required:\n        - dest\n        - subscriptionID\n        - createdAt\n      properties:\n        dest:\n          $ref: '#/components/schemas/dest'\n        subscriptionID:\n          $ref: '#/components/schemas/subscriptionID'\n        createdAt:\n          example: \"2022-02-27T17:32:28Z\"\n          type: string\n          format: date-time\n        lastNotifiedAt:\n          example: \"2022-07-09T17:32:28Z\"\n          type: string\n          format: date-time\n          description: The last time the target client was notified and responded with a 200 OK.   \n        initialRecordTime:\n          $ref: '#/components/schemas/GS1-Query-InitialRecordTime'\n        minRecordTime:\n          $ref: '#/components/schemas/GS1-Query-Min-Record-Time'\n        epcFormat:\n            $ref: '#/components/schemas/GS1-EPC-Format'\n\n    QueryStreamSubscription:\n      description: |\n        If no query schedule is specified, the client must explicitly set `stream` to `true`. This restriction is to\n        prevent clients from accidentally subscribing to EPCIS event streams.\n\n        Example:\n\n        ```\n        POST /queries/MyQuery/subscriptions\n        {\n          \"dest\": \"https://client.example.com/queryCallback\",\n          \"signatureToken\": \"13df38d8275b13f05704629e5f1cf3d45d6132d5\",\n          \"stream\": true\n        }\n        ```\n      type: object\n      example: { \"stream\":true }\n      required:\n        - stream\n      properties:\n        stream:\n          $ref: '#/components/schemas/GS1-Query-Stream'\n\n    QueryScheduleSubscription:\n      description: |\n        A scheduled query subscription is a time-based query execution scheduler. EPCIS 2.0 scheduled queries are scheduled\n        in the same manner as cron jobs.\n\n        For example, this query subscription is scheduled to trigger every morning at 1.05am. By setting\n        `reportIfEmpty` to `true`, the client's callback URL will be called even if there are no new events that match\n        the query.\n\n        ```\n        POST /queries/MyQuery/subscriptions\n        {\n          \"dest\": \"https://client.example.com/queryCallback\",\n          \"signatureToken\": \"13df38d8275b13f05704629e5f1cf3d45d6132d5\",\n          \"reportIfEmpty\": true,\n          \"schedule\": {\n            \"hour\":\"1\",\n            \"minute\": \"5\"\n          }\n        }\n        ```\n      type: object\n      example: { \"schedule\": {\"hour\":\"1\", \"minute\": \"5\"} }\n      required:\n        - schedule\n      properties:\n        reportIfEmpty:\n          $ref: '#/components/schemas/GS1-Query-ReportIfEmpty'\n        schedule:\n          type: object\n          properties:\n            second:\n              $ref: '#/components/schemas/GS1-Query-Second'\n            minute:\n              $ref: '#/components/schemas/GS1-Query-Minute'\n            hour:\n              $ref: '#/components/schemas/GS1-Query-Hour'\n            dayOfMonth:\n              $ref: '#/components/schemas/GS1-Query-DayOfMonth'\n            month:\n              $ref: '#/components/schemas/GS1-Query-Month'\n            dayOfWeek:\n              $ref: '#/components/schemas/GS1-Query-DayOfWeek'\n    GS1-Signature:\n      description: |\n        Used to sign events sent by the repository to subscribers. The choice of signature type is implementation specific but examples would be using HMAC with SHA-256 directly or a wrapper supporting various symmetric or asymetric \n        cryptographic algorithms such as Json Web Signature (JWS). \n      type: string\n      example: \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n    GS1-Query-InitialRecordTime:\n      description: |\n        Used to specify a time to constrain what resources are considered when processing a query\n        subscription. This value only applies the first time a subscriber receives events. If omitted, the default\n        value is the current time.\n      type: string\n      format: date-time\n      example: \"2020-04-04T20:33:31.116-06:00\"\n    GS1-Query-Min-Record-Time:\n      example: \"2020-04-04T20:33:31.116-06:00\"\n      description: |\n       Used to specify the smallest possible record time for EPCIS events in an outstanding query subscription.\n      type: string\n      format: date-time\n    GS1-Query-ReportIfEmpty:\n      example: false\n      type: boolean\n      default: false\n      description: Flag to specify subscribed clients should be notified if the query result is empty.\n    GS1-Query-Second:\n      description: |\n        Specifies that the query time must have a matching seconds value. The range for this parameter is 0\n        through 59, inclusive.\n      example: 0\n      type: string\n      pattern: \"(\\\\g\u003celement\u003e,)*\\\\g\u003celement\u003e|(?\u003celement\u003e(\\\\g\u003cnumber\u003e|\\\\g\u003crange\u003e))|(?\u003crange\u003e(\\\\[\\\\g\u003cnumber\u003e\\\\-\\\\g\u003cnumber\u003e\\\\]))|(?\u003cnumber\u003e([0-59]))\"\n    GS1-Query-Minute:\n      description: |\n        Specifies that the query time must have a matching minute value. The range for this parameter is 0 through 59,\n        inclusive.\n      example: 5\n      type: string\n      pattern: \"(\\\\g\u003celement\u003e,)*\\\\g\u003celement\u003e|(?\u003celement\u003e(\\\\g\u003cnumber\u003e|\\\\g\u003crange\u003e))|(?\u003crange\u003e(\\\\[\\\\g\u003cnumber\u003e\\\\-\\\\g\u003cnumber\u003e\\\\]))|(?\u003cnumber\u003e([0-59]))\"\n    GS1-Query-Hour:\n      description: |\n        Specifies that the query time must have a matching hour value. The range for this parameter is 0 through 23,\n        inclusive, with 0 denoting the hour that begins at midnight, and 23 denoting the hour that ends at midnight.\n      example: 1\n      type: string\n      pattern: \"(\\\\g\u003celement\u003e,)*\\\\g\u003celement\u003e|(?\u003celement\u003e(\\\\g\u003cnumber\u003e|\\\\g\u003crange\u003e))|(?\u003crange\u003e(\\\\[\\\\g\u003cnumber\u003e\\\\-\\\\g\u003cnumber\u003e\\\\]))|(?\u003cnumber\u003e([0-23]))\"\n    GS1-Query-DayOfMonth:\n      description: |\n        Specifies that the query time must have a matching day of month value. The range for this parameter is 1 through\n        31, inclusive.\n      example: 1\n      type: string\n      pattern: \"(\\\\g\u003celement\u003e,)*\\\\g\u003celement\u003e|(?\u003celement\u003e(\\\\g\u003cnumber\u003e|\\\\g\u003crange\u003e))|(?\u003crange\u003e(\\\\[\\\\g\u003cnumber\u003e\\\\-\\\\g\u003cnumber\u003e\\\\]))|(?\u003cnumber\u003e([1-31]))\"\n    GS1-Query-Month:\n      description: |\n        Specifies that the query time must have a matching month value. The range for this parameter is 1 through 12,\n        inclusive.\n      example: 1\n      type: string\n      pattern: \"(\\\\g\u003celement\u003e,)*\\\\g\u003celement\u003e|(?\u003celement\u003e(\\\\g\u003cnumber\u003e|\\\\g\u003crange\u003e))|(?\u003crange\u003e(\\\\[\\\\g\u003cnumber\u003e\\\\-\\\\g\u003cnumber\u003e\\\\]))|(?\u003cnumber\u003e([1-12]))\"\n    GS1-Query-DayOfWeek:\n      description: |\n        Specifies that the query time must have a matching day of week value. The range for this parameter is 1 through\n        7, inclusive, with 1 denoting Monday, 2 denoting Tuesday, and so forth, up to 7 denoting Sunday.\n      example: 1\n      type: string\n      pattern: \"(\\\\g\u003celement\u003e,)*\\\\g\u003celement\u003e|(?\u003celement\u003e(\\\\g\u003cnumber\u003e|\\\\g\u003crange\u003e))|(?\u003crange\u003e(\\\\[\\\\g\u003cnumber\u003e\\\\-\\\\g\u003cnumber\u003e\\\\]))|(?\u003cnumber\u003e([1-7]))\"\n    GS1-Query-Stream:\n      type: boolean\n      description: |\n        If no schedule is specified and `stream` is `true`, the standing subscription SHALL report immediately whenever a\n        captured EPCIS event matches the query criteria.\n      default: true\n      enum:\n        - true\n\n\n    # describe header schema\n    version:\n      type: string\n      pattern: ^\\d+(\\.\\d+)*$\n      \n    GS1-EPCIS-Version:\n      allOf: \n        - example: \"2.0\"\n        - $ref: '#/components/schemas/version'\n    GS1-EPCIS-Min:\n      allOf: \n        - example: \"1.0\"\n        - $ref: '#/components/schemas/version'\n    GS1-EPCIS-Max:\n      allOf:\n        - example: \"2.0\"\n        - $ref: '#/components/schemas/version'\n\n    GS1-CBV-Version:\n      allOf:\n        - example: \"2.0\"\n        - $ref: '#/components/schemas/version'\n    GS1-CBV-Min:\n      allOf:\n        - example: \"1.2\"\n        - $ref: '#/components/schemas/version'\n    GS1-CBV-Max:\n      allOf:\n        - example: \"2.0\"\n        - $ref: '#/components/schemas/version'\n\n    GS1-EPC-Format:\n      example: Always_GS1_Digital_Link\n      type: string\n      enum:\n        - No_Preference\n        - Always_GS1_Digital_Link\n        - Always_EPC_URN\n        - Never_Translates\n    \n    GS1-CBV-XML-Format:\n      example: Always_Web_URI\n      type: string\n      enum:\n        - No_Preference\n        - Always_Web_URI\n        - Always_URN\n        - Never_Translates\n    GS1-Extensions:\n      example: |\n        example-epc-ext=http://org1.example.com/epcis/,\n        example-epc-ext2=http://vendor.example.com/epcis/\n      type: object\n    GS1-Vendor-Version:\n      example: example-version-1.0\n      anyOf:\n        - type: string\n        - type: object\n    GS1-EPCIS-Capture-Limit:\n      example: 500\n      type: integer\n      minimum: 1\n    GS1-EPCIS-Capture-File-Size-Limit:\n      example: 1024\n      type: integer\n      minimum: 1\n    GS1-Capture-Error-Behaviour:\n      example: 'rollback'\n      type: string\n      default: 'rollback'\n      enum:\n        - 'rollback'\n        - 'proceed'\n        - 'all'\n    GS1-Next-Page-Token-Expires:\n      example: '2017-07-21T17:32:28Z'\n      type: string\n      format: date-time\n\n  parameters:\n    # Top-level resource instances\n    EPC:\n      description: An electronic product code value.\n      example: urn:epc:id:sgtin:0614141.107346.2018\n      required: true\n      in: path\n      name: epc\n      schema:\n        type: string\n        format: uri\n    BizStep:\n      description: A business step value.\n      example: urn:epcglobal:cbv:bizstep:receiving\n      required: true\n      in: path\n      name: bizStep\n      schema:\n        type: string\n        format: uri\n    BizLocation:\n      description: A business location value.\n      example: urn:epc:id:sgln:0012345.11111.0\n      required: true\n      in: path\n      name: bizLocation\n      schema:\n        type: string\n        format: uri\n    ReadPoint:\n      description: A read point value.\n      example: urn:epc:id:sgln:0012345.11111.400\n      required: true\n      in: path\n      name: readPoint\n      schema:\n        type: string\n        format: uri\n    Disposition:\n      description: A disposition value.\n      example: in_progress\n      required: true\n      in: path\n      name: disposition\n      schema:\n        type: string\n        format: uri\n    EventID:\n      name: eventID\n      in: path\n      description: |\n        The ID of an EPCIS event. An EPCIS event ID must be unique across all events in the system.\n      required: true\n      example: \"ni:///sha-256;df7bb3c352fef055578554f09f5e2aa41782150ced7bd0b8af24dd3ccb30ba69?ver=CBV2.0\"\n      schema:\n        type: string\n        format: uri\n    EventType:\n      name: eventType\n      in: path\n      example: ObjectEvent\n      required: true\n      description: |\n        Names of EPCIS event types.\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/EPCISEventTypes'\n    QueryName:\n      in: path\n      name: queryName\n      description: The name of an EPCIS event query.\n      required: true\n      schema:\n        $ref: '#/components/schemas/QueryName'\n    Token:\n      in: path\n      name: token\n      required: true\n      schema:\n        $ref: '#/components/schemas/NextPageToken'\n    PerPage:\n      in: query\n      name: perPage\n      schema:\n        $ref: '#/components/schemas/PerPage'\n    NextPageToken:\n      in: query\n      name: nextPageToken\n      schema:\n        $ref: '#/components/schemas/NextPageToken'\n    Upgrade:\n      in: header\n      name: Upgrade\n      required: false\n      schema:\n        $ref: '#/components/schemas/Upgrade'\n    Connection:\n      in: header\n      name: Connection\n      required: false\n      schema:\n        $ref: '#/components/schemas/Connection'\n    GS1-Signature:\n      in: header\n      name: GS1-Signature\n      description: Header containing the signature of events sent by the respository to a subscriber.\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Signature'\n    GS1-Query-Second:\n      in: query\n      name: second\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-Second'\n    GS1-Query-Minute:\n      in: query\n      name: minute\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-Minute'\n    GS1-Query-Hour:\n      in: query\n      name: hour\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-Hour'\n    GS1-Query-DayOfMonth:\n      in: query\n      name: dayOfMonth\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-DayOfMonth'\n    GS1-Query-Month:\n      in: query\n      name: month\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-Month'\n    GS1-Query-DayOfWeek:\n      in: query\n      name: dayOfWeek\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-DayOfWeek'\n    GS1-Query-ReportIfEmpty:\n      in: query\n      name: reportIfEmpty\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-ReportIfEmpty'\n    GS1-Query-Stream:\n      in: query\n      name: stream\n      schema:\n        $ref: '#/components/schemas/GS1-Query-Stream'\n    GS1-Query-InitialRecordTime:\n      in: query\n      name: initialRecordTime\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Query-InitialRecordTime'\n    # request headers from schema\n    GS1-EPCIS-Version:\n      in: header\n      name: GS1-EPCIS-Version\n      description: |\n        The EPCIS version.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Version'\n    GS1-EPCIS-Min:\n      in: header\n      name: GS1-EPCIS-Min\n      description: |\n        The lowest EPCIS version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Min'\n    GS1-EPCIS-Max:\n      in: header\n      name: GS1-EPCIS-Max\n      description: \n        The highest EPCIS version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Max'\n    GS1-CBV-Version:\n      in: header\n      name: GS1-CBV-Version\n      description: |\n        The Core Business Vocabulary version.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-Version'\n    GS1-CBV-Min:\n      in: header\n      name: GS1-CBV-Min\n      description: |\n        The lowest Core Business Vocabulary version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-Min'\n    GS1-CBV-Max:\n      in: header\n      name: GS1-CBV-Max\n      description: |\n        The highest Core Business Vocabulary version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-Max'\n    GS1-EPC-Format:\n      in: header\n      name: GS1-EPC-Format\n      description: |\n       Header used by the client to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.\n       It is also used by the server to announce which EPC formats are supported. \n       If absent the default value is `Always_GS1_Digital_Link`:\n\n        - No_Preference: No preference in the representation, i.e. any format is accepted.\n        - Always_GS1_Digital_Link: URIs are returned as GS1 Digital Link.\n        - Always_EPC_URN: URIs are returned as URN.\n        - Never_Translates: EPCs are never translated, i.e. the original format is kept.\n      schema:\n        $ref: '#/components/schemas/GS1-EPC-Format'\n    GS1-CBV-XML-Format:\n      in: header\n      name: GS1-CBV-XML-Format\n      description: |\n        When requesting XML content-type only, users can use this header to request\n        receiving events with CBV values in either URN or Web URI format.\n        This option is not available for JSON/JSON-LD.\n\n        - No_Preference: The server chooses the representation.\n        - Always_Web_URI: CBV values are returned as Web URI.\n        - Always_URN: CBV values are returned as URNs.\n        - Never_Translates: The original format is kept.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-XML-Format'\n    GS1-Extensions:\n      in: header\n      name: GS1-Extensions\n      description: |\n        Specific EPCIS or CBV extensions supported (e.g., for FIT).\n      schema:\n        $ref: '#/components/schemas/GS1-Extensions'\n      style: simple\n      explode: true\n    GS1-Capture-Error-Behaviour:\n      name: GS1-Capture-Error-Behaviour\n      description: |\n        A header to control how the capture interface will behave in case of an error:\n        - `rollback`: \"All or nothing\". Either the capture job is entirely successful or all EPCIS events are rejected.\n        - `proceed`: \"Greedy capture\". The capture interface tries to capture as many EPCIS events as possible, even if there are errors.\n        The default behaviour is `rollback`, as in EPCIS 1.2.\n      in: header\n      required: false\n      schema:\n        $ref: '#/components/schemas/GS1-Capture-Error-Behaviour'\n\n  headers:\n    GS1-EPCIS-Version:\n      description: The EPCIS version.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Version'\n    GS1-EPCIS-Min:\n      description: The lowest EPCIS version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Min'\n    GS1-EPCIS-Max:\n      description: The highest EPCIS version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Max'\n    GS1-CBV-Version:\n      description: The Core Business Vocabulary version.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-Version'\n    GS1-CBV-Min:\n      description: The lowest Core Business Vocabulary version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-Min'\n    GS1-CBV-Max:\n      description: The highest Core Business Vocabulary version supported.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-Max'\n    GS1-EPC-Format:\n      description: |\n        Header to indicate whether EPCs are expressed as GS1 Digital Link URIs or as EPC URNs.\n      schema:\n        $ref: '#/components/schemas/GS1-EPC-Format'\n    GS1-CBV-XML-Format:\n      description: |\n        When requesting XML content-type only, users can use this header to request\n        receiving events with CBV values in either URN or Web URI format.\n      schema:\n        $ref: '#/components/schemas/GS1-CBV-XML-Format'\n    GS1-Extensions:\n      description: Specific EPCIS or CBV extensions supported (e.g., for FIT).\n      schema:\n        $ref: '#/components/schemas/GS1-Extensions'\n    GS1-Vendor-Version:\n      description: A versioning scheme that can be freely chosen by the vendor.\n      schema:\n        $ref: '#/components/schemas/GS1-Vendor-Version'\n    GS1-EPCIS-Capture-Limit:\n      description: The maximum number of EPCIS events that can be captured per call.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Capture-Limit'\n    GS1-Query-Min-Record-Time:\n      description: Informs about the smallest possible record time for EPCIS events in an outstanding query subscription.\n      schema:\n        $ref: '#/components/schemas/GS1-Query-Min-Record-Time'\n    GS1-EPCIS-Capture-File-Size-Limit:\n      description: The maximum event document length in octets (8-bit bytes) for capture operations.\n      schema:\n        $ref: '#/components/schemas/GS1-EPCIS-Capture-File-Size-Limit'\n    GS1-Capture-Error-Behaviour:\n      description: |\n        A header to control how the capture interface will behave in case of an error:\n\n        - `rollback`: \"All or nothing\". Either the capture job is entirely successful or all EPCIS events are rejected.\n        - `proceed`: \"Greedy capture\". The capture interface tries to capture as many EPCIS events as possible, even if there are errors.\n        - `all`: This is to be used only by the server to announce it supports both `rollback` and `proceed`.\n\n        The default behaviour is `rollback`, as in EPCIS 1.2.\n      schema:\n        $ref: '#/components/schemas/GS1-Capture-Error-Behaviour'\n    GS1-Next-Page-Token-Expires:\n      description: The expiry time for `nextPageToken`.\n      schema:\n        $ref: '#/components/schemas/GS1-Next-Page-Token-Expires'\n    Link:\n      description: |\n        A pagination header link. This header works together with the `perPage` and `nextPageToken` query string\n        parameters.\n        As long as there are more resources to retrieve, the `Link` header contains the URL of the next page and\n        the attribute `rel=\"next\"`. The last page is indicated by the absence of the `rel=\"next\"`.\n      schema:\n        $ref: '#/components/schemas/Link'\n\n  requestBodies:\n    CreateQuery:\n      description: Creates and executes new EPCIS events query.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/QueryDefinition'\n\n"
		}
	},
	"Error": "parse: parse spec: paths: /queries/{queryName}: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: allOf: [1]: parse schema: reference \"#/components/schemas/QueryDefinition\": parse schema: query: parse schema: reference \"#/components/schemas/EPCISEventsQuery\": parse schema: object cannot contain 'items' field"
}