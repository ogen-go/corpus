{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Banjerr/OpenTerps"
		},
		"file": {
			"name": "spc_0903acfbadb04e8fb6d8402c0dc35b84.yml",
			"size": 0,
			"path": ".insomnia/ApiSpec/spc_0903acfbadb04e8fb6d8402c0dc35b84.yml",
			"byteSize": 22415,
			"content": "_id: spc_0903acfbadb04e8fb6d8402c0dc35b84\ntype: ApiSpec\nparentId: wrk_212b84192cbf45aca779664c81b27fd7\nmodified: 1606416232885\ncreated: 1603052058352\nfileName: OpenTerps 0.0.1\ncontents: \u003e-\n  openapi: 3.0.0\n\n  info:\n    description: \u003e-\n      An Open API that contains information about terpenes, the benefits, and the\n      cannabis varieties that contain them.\n    version: 0.0.5\n    title: OpenTerps\n    termsOfService: 'https://wayhigh.we.bs'\n    contact:\n      email: benjamminredden@gmail.com\n    license:\n      name: Apache 2.0\n      url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  tags:\n    - name: cannabis\n      description: The plant.\n    - name: terpene\n      description: One of the most important parts of the cannabis plant.\n    - name: benefit\n      description: The benefit of said terpenes.\n    - name: taste\n      description: The taste of said terpenes.\n    - name: smell\n      description: The smell of said terpenes.\n  paths:\n    /terpenes/{terpeneId}:\n      get:\n        tags:\n          - terpene\n        summary: Returns terpenes and their associated attributes\n        description: Returns all terpenes in the system\n        operationId: getTerpenes\n        parameters:\n          - name: terpeneId\n            in: path\n            description: Terpene id to get\n            required: true\n            schema:\n              type: integer\n              format: int64\n        responses:\n          '200':\n            description: successful operation\n            content:\n              application/xml:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Cannabis'\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Cannabis'\n      post:\n        tags:\n          - terpene\n        summary: Add a new terpene to the api\n        description: Add new terpene to the api\n        operationId: postTerpene\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: terpeneId\n            in: path\n            description: Terpene id to post\n            required: true\n            schema:\n              type: integer\n              format: int64\n        requestBody:\n          $ref: '#/components/requestBodies/Terpene'\n        responses:\n          '405':\n            description: Invalid input\n      patch:\n        tags:\n          - terpene\n        summary: Update an existing terpene\n        description: Update terpene in the api\n        operationId: updateTerpene\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: terpeneId\n            in: path\n            description: Terpene id to update\n            required: true\n            schema:\n              type: integer\n              format: int64\n        requestBody:\n          $ref: '#/components/requestBodies/Terpene'\n        responses:\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Terpene not found\n          '405':\n            description: Validation exception\n      delete:\n        tags:\n          - terpene\n        summary: Deletes a terpene\n        description: Deletes a terpene from the API\n        operationId: deleteTerpene\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: terpeneId\n            in: path\n            description: Terpene id to delete\n            required: true\n            schema:\n              type: integer\n              format: int64\n        responses:\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Terpene not found\n    /strains/{strainId}:\n      get:\n        tags:\n          - cannabis\n        summary: Returns all cannabis strains in the API\n        description: Returns all cannabis strains and their associated attributes\n        operationId: getCannabis\n        parameters:\n          - name: strainId\n            in: path\n            description: Strain id to get\n            required: true\n            schema:\n              type: integer\n              format: int64\n        responses:\n          '200':\n            description: successful operation\n            content:\n              application/xml:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Cannabis'\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Cannabis'\n      post:\n        tags:\n          - cannabis\n        summary: Add a new cannabis strains to the api\n        description: Add new cannabis strains to the api\n        operationId: addCannabisStrain\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: strainId\n            in: path\n            description: Strain id to post\n            required: true\n            schema:\n              type: integer\n              format: int64\n        requestBody:\n          $ref: '#/components/requestBodies/Cannabis'\n        responses:\n          '405':\n            description: Invalid input\n      patch:\n        tags:\n          - cannabis\n        summary: Update an existing cannabis strain\n        description: Update cannabis strain in the api\n        operationId: updateCannabisStrain\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: strainId\n            in: path\n            description: Strain id to update\n            required: true\n            schema:\n              type: integer\n              format: int64\n        requestBody:\n          $ref: '#/components/requestBodies/Cannabis'\n        responses:\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Cannabis strain not found\n          '405':\n            description: Validation exception\n      delete:\n        tags:\n          - cannabis\n        summary: Deletes a cannabis strain\n        description: Deletes a cannabis strain from the API\n        operationId: deleteCannabisStrain\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: strainId\n            in: path\n            description: Cannabis strain id to delete\n            required: true\n            schema:\n              type: integer\n              format: int64\n        responses:\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Cannabis strain not found\n    /benefits/{benefitId}:\n      post:\n        tags:\n          - benefit\n        summary: Add a new benefit to the api\n        description: Add new benefit to the api\n        operationId: addBenefitf\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: benefitId\n            in: path\n            description: Benefit id to post\n            required: true\n            schema:\n              type: integer\n              format: int64\n        requestBody:\n          $ref: '#/components/requestBodies/Benefit'\n        responses:\n          '405':\n            description: Invalid input\n      put:\n        tags:\n          - benefit\n        summary: Update an existing benefit\n        description: Update benefit in the api\n        operationId: updateBenefit\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: benefitId\n            in: path\n            description: Benefit id to update\n            required: true\n            schema:\n              type: integer\n              format: int64\n        requestBody:\n          $ref: '#/components/requestBodies/Benefit'\n        responses:\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Benefit not found\n          '405':\n            description: Validation exception\n      get:\n        tags:\n          - benefit\n        summary: Returns benefits and their associated attributes\n        description: Returns all benefits in the API\n        operationId: getEBenefit\n        parameters:\n          - name: benefitId\n            in: path\n            description: Benefit id to get\n            required: true\n            schema:\n              type: integer\n              format: int64\n        responses:\n          '200':\n            description: successful operation\n            content:\n              application/xml:\n                schema:\n                  $ref: '#/components/schemas/Benefit'\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Benefit'\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Terpene not found\n      delete:\n        tags:\n          - benefit\n        summary: Deletes an benefit\n        description: Deletes an benefit from the API\n        operationId: deleteBenefit\n        parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: benefitId\n            in: path\n            description: Benefit id to delete\n            required: true\n            schema:\n              type: integer\n              format: int64\n        responses:\n          '400':\n            description: Invalid ID supplied\n          '404':\n            description: Benefit not found\n    /tastes/{tasteId}:\n        post:\n          tags:\n            - taste\n          summary: Add a new taste to the api\n          description: Add new taste to the api\n          parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: tasteId\n            in: path\n            description: Taste id to post\n            required: true\n            schema:\n              type: integer\n              format: int64\n          operationId: addTaste\n          requestBody:\n            $ref: '#/components/requestBodies/Taste'\n          responses:\n            '405':\n              description: Invalid input\n        put:\n          tags:\n            - taste\n          summary: Update an existing taste\n          description: Update taste in the api\n          parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: tasteId\n            in: path\n            description: Taste id to put\n            required: true\n            schema:\n              type: integer\n              format: int64\n          operationId: updateTaste\n          requestBody:\n            $ref: '#/components/requestBodies/Taste'\n          responses:\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Taste not found\n            '405':\n              description: Validation exception\n        get:\n          tags:\n            - taste\n          summary: Returns tastes and their associated attributes\n          description: Returns all tastes in the API\n          operationId: getTaste\n          parameters:\n          - name: tasteId\n            in: path\n            description: Taste id to get\n            required: true\n            schema:\n              type: integer\n              format: int64\n          responses:\n            '200':\n              description: successful operation\n              content:\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Taste'\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Taste'\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Taste not found\n        delete:\n          tags:\n            - taste\n          summary: Deletes an taste\n          description: Deletes an taste from the API\n          operationId: deleteTaste\n          parameters:\n            - name: APIKey\n              in: header\n              required: true\n              schema:\n                type: string\n            - name: APIUser\n              in: header\n              required: true\n              schema:\n                type: string\n            - name: tasteId\n              in: path\n              description: Taste id to delete\n              required: true\n              schema:\n                type: integer\n                format: int64\n          responses:\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Taste not found\n    /smells/{smellId}:\n        post:\n          tags:\n            - smell\n          summary: Add a new smell to the api\n          description: Add new smell to the api\n          operationId: addSmell\n          parameters:\n          - name: smellId\n            in: path\n            description: Smell id to post\n            required: true\n            schema:\n              type: integer\n              format: int64\n          requestBody:\n            $ref: '#/components/requestBodies/Smell'\n          responses:\n            '405':\n              description: Invalid input\n        put:\n          tags:\n            - smell\n          summary: Update an existing smell\n          description: Update smell in the api\n          operationId: updateSmell\n          parameters:\n          - name: APIKey\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: APIUser\n            in: header\n            required: true\n            schema:\n              type: string\n          - name: smellId\n            in: path\n            description: Smell id to update\n            required: true\n            schema:\n              type: integer\n              format: int64\n          requestBody:\n            $ref: '#/components/requestBodies/Smell'\n          responses:\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Smell not found\n            '405':\n              description: Validation exception\n        get:\n          tags:\n            - smell\n          summary: Returns smells and their associated attributes\n          description: Returns all smells in the API\n          operationId: getSmell\n          parameters:\n          - name: smellId\n            in: path\n            description: Smell id to get\n            required: true\n            schema:\n              type: integer\n              format: int64\n          responses:\n            '200':\n              description: successful operation\n              content:\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Smell'\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Smell'\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Smell not found\n        delete:\n          tags:\n            - smell\n          summary: Deletes an smell\n          description: Deletes an smell from the API\n          operationId: deleteSmell\n          parameters:\n            - name: APIKey\n              in: header\n              required: true\n              schema:\n                type: string\n            - name: APIUser\n              in: header\n              required: true\n              schema:\n                type: string\n            - name: smellId\n              in: path\n              description: Smell id to delete\n              required: true\n              schema:\n                type: integer\n                format: int64\n          responses:\n            '400':\n              description: Invalid ID supplied\n            '404':\n              description: Smell not found\n  externalDocs:\n    description: Find out more about OpenTerps\n    url: 'https://open-terps.herokuapp.com/'\n  servers:\n    - url: 'https://virtserver.swaggerhub.com/CountryFriedCoders/OpenTerps/0.0.1'\n  components:\n    requestBodies:\n      Terpene:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Terpene'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Terpene'\n        description: Terpene object\n        required: true\n      Cannabis:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Cannabis'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Cannabis'\n        description: Cannabis object\n        required: true\n      Benefit:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Benefit'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Benefit'\n        description: Benefit object\n        required: true\n      Smell:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Smell'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Smell'\n        description: Smell object\n        required: true\n      Taste:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Taste'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Taste'\n        description: Taste object\n      Strain:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Strain'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Strain'\n        description: Strain object\n      Category:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Category'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/Category'\n        description: Category object\n    schemas:\n      Category:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          name:\n            type: string\n        xml:\n          name: Category\n      Cannabis:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          strain:\n            type: string\n          terpenes:\n            type: array\n            xml:\n              name: terpene\n              wrapped: true\n            items:\n              $ref: '#/components/schemas/Terpene'\n        xml:\n          name: Cannabis\n      Benefit:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          name:\n            type: string\n        xml:\n          name: Benefit\n      Strain:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          name:\n            type: string\n        xml:\n          name: Strain\n      Taste:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          name:\n            type: string\n        xml:\n          name: Taste\n      Smell:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n          name:\n            type: string\n        xml:\n          name: Smell\n      Terpene:\n        type: object\n        required:\n          - name\n        properties:\n          id:\n            type: integer\n            format: int64\n          category:\n            $ref: '#/components/schemas/Category'\n          name:\n            type: string\n            example: myrcene\n          tastes:\n            type: array\n            xml:\n              name: taste\n              wrapped: true\n            items:\n              $ref: '#/components/schemas/Taste'\n          smells:\n            type: array\n            xml:\n              name: smell\n              wrapped: true\n            items:\n              $ref: '#/components/schemas/Smell'\n          strains:\n            type: array\n            xml:\n              name: strain\n              wrapped: true\n            items:\n              $ref: '#/components/schemas/Strain'\n          benefits:\n            type: array\n            xml:\n              name: benefit\n              wrapped: true\n            items:\n              $ref: '#/components/schemas/Benefit'\n        xml:\n          name: Terpene\ncontentType: yaml\n",
			"canonicalURL": "/github.com/Banjerr/OpenTerps@608f9c314cef6bce1c776cd8525d81beeacc4270/-/blob/.insomnia/ApiSpec/spc_0903acfbadb04e8fb6d8402c0dc35b84.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Banjerr/OpenTerps/blob/608f9c314cef6bce1c776cd8525d81beeacc4270/.insomnia/ApiSpec/spc_0903acfbadb04e8fb6d8402c0dc35b84.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at .insomnia/ApiSpec/spc_0903acfbadb04e8fb6d8402c0dc35b84.yml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}