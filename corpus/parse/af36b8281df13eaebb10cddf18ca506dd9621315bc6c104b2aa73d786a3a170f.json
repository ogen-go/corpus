{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "authenticators.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/authenticators.yml",
			"byteSize": 7578,
			"content": "openapi: 3.0.2\ninfo:\n    description: API access to your community.\n    title: Vanilla API\n    version: \"2.0\"\nservers:\n    - url: /api/v2\npaths:\n    /authenticators:\n        get:\n            summary: List the authenticators.\n            tags:\n                - Authenticators\n            parameters:\n                - name: type\n                  description: Filter by one or more authenticator types.\n                  in: query\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                      format: form\n                - $ref: \"#/components/parameters/Page\"\n                - name: limit\n                  in: query\n                  description: \u003e\n                      Maximum number of items to be included in the response. See [Pagination](https://docs.vanillaforums.com/apiv2/#pagination).\n                  schema:\n                      type: integer\n                      default: 10\n                      minimum: 1\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/AuthenticatorFragment\"\n        post:\n            x-hidden: true\n            summary: Post new authenticator.\n            tags:\n                - Authenticators\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/AuthenticatorPostSchema\"\n            responses:\n                \"201\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/AuthenticatorFragment\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n    \"/authenticators/{id}\":\n        parameters:\n            - name: id\n              in: path\n              description: The ID of the authenticator to look up.\n              required: true\n              schema:\n                  type: integer\n        delete:\n            summary: Delete an authenticator.\n            tags:\n                - Authenticators\n            responses:\n                \"204\":\n                    description: Success\n        get:\n            summary: Get a single authenticator.\n            tags:\n                - Authenticators\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/AuthenticatorFragment\"\n        patch:\n            summary: Update an authenticator.\n            tags:\n                - Authenticators\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/AuthenticatorPatchSchema\"\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/AuthenticatorFragment\"\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\ncomponents:\n    schemas:\n        AuthenticatorFragment:\n            type: object\n            properties:\n                authenticatorID:\n                    type: integer\n                    description: The authenticator's ID.\n                name:\n                    type: string\n                    description: A human readible name for the authenticator.\n                type:\n                    type: string\n                    description: The type of authenticator\n                    example: oauth2\n                clientID:\n                    type: string\n                default:\n                    type: boolean\n                active:\n                    type: boolean\n                    example: true\n                visible:\n                    type: boolean\n                isOidc:\n                    type: boolean\n                    default: false\n                urls:\n                    $ref: \"#/components/schemas/AuthenticatorUrlSchema\"\n            required:\n                - authenticatorID\n                - name\n                - type\n                - clientID\n                - default\n                - active\n                - visible\n        AuthenticationTypeService:\n            # Schemas will be generated dynamically at runtime.\n            description: Authentication types configuration attributes.\n            oneOf: []\n        AuthenticatorPostSchema:\n            type: object\n            properties:\n                name:\n                    type: string\n                    description: A human readable name for the authenticator.\n                type:\n                    type: string\n                    description: The type of authenticator\n                    example: oauth2\n                clientID:\n                    type: string\n                default:\n                    type: boolean\n                    default: false\n                active:\n                    type: boolean\n                    default: false\n                    example: true\n                visible:\n                    type: boolean\n                    default: false\n                secret:\n                    type: string\n                urls:\n                    $ref: \"#/components/schemas/AuthenticatorUrlSchema\"\n                authenticatorConfig:\n                    $ref: \"#/components/schemas/AuthenticationTypeService\"\n            required:\n                - name\n                - type\n        AuthenticatorPatchSchema:\n            type: object\n            properties:\n                default:\n                    type: boolean\n                    default: false\n                active:\n                    type: boolean\n                    default: false\n                    example: true\n                visible:\n                    type: boolean\n                    default: false\n                urls:\n                    $ref: \"#/components/schemas/AuthenticatorUrlSchema\"\n                authenticatorConfig:\n                    $ref: \"#/components/schemas/AuthenticationTypeService\"\n        AuthenticatorUrlSchema:\n            type: object\n            properties:\n                signInUrl:\n                    nullable: true\n                    format: uri\n                    type: string\n                signOutUrl:\n                    nullable: true\n                    format: uri\n                    type: string\n                authenticateUrl:\n                    nullable: true\n                    format: uri\n                    type: string\n                registerUrl:\n                    nullable: true\n                    format: uri\n                    type: string\n                passwordUrl:\n                    nullable: true\n                    format: uri\n                    type: string\n                profileUrl:\n                    nullable: true\n                    format: uri\n                    type: string\n",
			"canonicalURL": "/github.com/vanilla/vanilla@f547100391e0a27065bd0fa147ab834380f3fb43/-/blob/applications/dashboard/openapi/authenticators.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/f547100391e0a27065bd0fa147ab834380f3fb43/applications/dashboard/openapi/authenticators.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/authenticators\": get: parameters: parse parameter \"\": at applications/dashboard/openapi/authenticators.yml:23:25: can't find value for \"components/parameters/Page\""
}