{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "rebilly.com-2.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/rebilly.com-2.1-swagger.yaml",
			"byteSize": 497248,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: integrations@rebilly.com\n    name: Rebilly API Support\n    url: https://www.rebilly.com/contact/\n  description: \u003e\n    # Introduction\n\n    The Rebilly API is built on HTTP.  Our API is RESTful.  It has predictable\n\n    resource URLs.  It returns HTTP response codes to indicate errors.  It also\n\n    accepts and returns JSON in the HTTP body.  You can use your favorite\n\n    HTTP/REST library for your programming language to use Rebilly's API, or\n\n    you can use one of our SDKs (currently available in [PHP](https://github.com/Rebilly/rebilly-php)\n\n    and [Javascript](https://github.com/Rebilly/rebilly-js-sdk)).\n\n\n    We have other APIs that are also available.  Every action from our [app](https://app.rebilly.com)\n\n    is supported by an API which is documented and available for use so that you\n\n    may automate any workflows necessary.  This document contains the most commonly\n\n    integrated resources.\n\n\n    # Authentication\n\n    When you sign up for an account, you are given your first API key.\n\n    You can generate additional API keys, and delete API keys (as you may\n\n    need to rotate your keys in the future). You authenticate to the\n\n    Rebilly API by providing your secret key in the request header.\n\n\n    Rebilly offers three forms of authentication:  secret key, publishable key, JSON Web Tokens, and public signature key.\n\n    - [Secret API key](#section/Authentication/SecretApiKey): used for requests made from the server side. Never share these keys. Keep them guarded and secure\n\n    - [Publishable API key](#section/Authentication/PublishableApiKey): used for requests from the client side. For now can only be used on the [Tokens resource](#tag/Payment-Tokens%2Fpaths%2F~1tokens%2Fpost)\n\n    - [JWT](#section/Authentication/JWT): short lifetime tokens that can be assigned a specific expiration time\n\n\n    Never share your secret keys. Keep them guarded and secure.\n\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n\n    # PHP SDK\n\n    For all PHP SDK examples provided in this spec you will need to configure `$client`.\n\n    You may do it like this:\n\n\n    ```php\n\n    $client = new Rebilly\\Client([\n        'apiKey' =\u003e 'YourApiKeyHere',\n        'baseUrl' =\u003e 'https://api.rebilly.com',\n    ]);\n\n    ```\n\n\n    # Using filter\n\n    Rebilly provides collections filtering. You can use `?filter` param on collection to define which records should be shown in the response.\n\n\n    Here is filter format description:\n\n\n    - Fields and values in filter are separated with `:`: `?filter=firstName:John`.\n\n\n    - Fields in filter are separated with `;`: `?filter=firstName:John;lastName:Doe`.\n\n\n    - You can use multiple values using `,` as values separator: `?filter=firstName:John,Bob`.\n\n\n    - To negate the filter use `!`: `?filter=firstName:!John`. Note that you can negate multiple values like this: `?filter=firstName:!John,Bob`. This filter rule will exclude all Johns and Bobs from the response.\n\n\n    - You can use range filters like this: `?filter=amount:1..10`.\n\n\n    - You can use gte (greater than or equals) filter like this: `?filter=amount:1..`, or lte (less than or equals) than filter like this: `?filter=amount:..10`.\n\n\n    - You can create some [predefined values lists](https://rebilly.github.io/RebillyUserAPI/#tag/Lists) and use them in filter: `?filter=firstName:@yourListName`. You can also exclude list values: `?filter=firstName:!@yourListName`\n  license:\n    name: Rebilly\n    url: https://www.rebilly.com/api-license/\n  termsOfService: https://www.rebilly.com/terms/\n  title: Rebilly\n  version: \"2.1\"\n  x-apisguru-categories:\n    - payment\n    - ecommerce\n  x-logo:\n    backgroundColor: \"#0033A0\"\n    url: https://rebilly.github.io/RebillyAPI/rb_apiLogo.svg\n  x-origin:\n    - format: swagger\n      url: http://rebilly.github.io/RebillyAPI/swagger.json\n      version: \"2.0\"\n  x-providerName: rebilly.com\nsecurity:\n  - SecretApiKey: []\n  - JWT: []\ntags:\n  - description: |\n      3D Secure is a way to authenticate and protect transactions.  Typically,\n      it's only possible to protect the initial transaction in a subscription\n      with 3D Secure.\n    name: 3D Secure\n  - description: |\n      Bank Accounts are a type of payment instrument used to collect\n      ACH (echeck) payments, similar to how a payment\n      card would be used to for a credit card payment.\n    name: Bank Accounts\n  - description: |\n      Your blacklists contains values of customerIds, email addresses,\n      ipAddresses, bank identification numbers, countries or payment cards that\n      you do NOT want to do business with. They are a good tool for managing\n      risk. A blacklist entry that expires after a period of time we call a\n      greylist.\n    name: Blacklists\n  - description: \u003e\n      Contacts are Customer's address book.\n\n      All contact information used in Invoices, Subscriptions, Transacions, etc is enlisted here. Hovewer, changing a Contact won't change corresponding contact information in related resources\n    name: Contacts\n  - description: \u003e\n      Coupons allows to apply different types of discounts to Invoices,\n      Subscriptions and Plans. Redeemed Coupons will be applied only to Invoices\n      with the same currency.\n    name: Coupons\n  - description: |\n      Customers are your customers, sometimes known as accounts, clients,\n      members, patrons, or players in other systems.\n    name: Customers\n  - description: \u003e\n      Customer KYC files uploaded on behalf of a customer, tagged with a\n      document type\n\n      and submitted for validation.\n    name: KYC Documents\n  - description: \u003e\n      Create authentication credentials, login, logout, and verify your\n      customers.\n    name: Customer Authentication\n  - description: |\n      Create additional custom fields for particular resources.  You may name,\n      describe, and determine the type of the schema.\n    name: Custom Fields\n  - description: |\n      Handle disputes (chargebacks and retrievals).\n    name: Disputes\n  - description: \u003e\n      A File is an entity that can store a phyiscal file and some metadata. It\n      also provides an easy access to\n\n      its size, mime-type, user-defined tags and description thus allowing easy sorting and searching among stored\n\n      files.\n\n      There are several methods of file uploading available: multipart/form-data encoded form, RAW POST (by sending\n\n      file contents as POST body), fetching from URL (by providing the file URL via 'url' param)\n\n      Attachment is an entity that is used to link a File to one or multiple objects like Customer, Dispute, Payment,\n\n      Transaction, Subscription, Plan, Product, Invoice, Note. That allows to quickly find and use files related to\n\n      those specific entities.\n    name: Files\n  - description: \u003e\n      Invoices leave a record for both you and your customer of the products\n      sold.\n    name: Invoices\n  - description: \u003e\n      Collect money from your customers with payments.  You can schedule a\n      payment\n\n      to occur in the future.  You can assign a dunning schedule to a payment to collect\n\n      in the case of a decline.\n\n\n      Some payments may be, what we term, suspended payments.  These types of payments\n\n      require user interaction.  For example, an initial PayPal purchase, a 3D Secure\n\n      purchase, China Union Pay, and more require the customer's interaction to\n\n      complete the payment.  We call these a \"suspended\" payment flow.\n    name: Payments\n  - description: \u003e\n      Payment cards are a type of payment instrument used for credit and debit\n      card\n\n      sales.  Rebilly securely vaults the full payment card number, and can pass it\n\n      onward securely to any gateway account to transact business.\n    name: Payment Cards\n  - description: \u003e\n      PayPal Accounts are used for paying with PayPal.  We can generate a BAID\n      (billing\n\n      agreement id) which will allow for recurring billing.\n    name: PayPal Accounts\n  - description: \u003e\n      Payment tokens are used to reduce the scope of PCI DSS compliance.  A\n      payment\n\n      token can be made using a different authentication scheme (refer to the public key\n\n      authentication scheme in the Authentication section), which allows you to\n\n      create a payment token directly from the browser, bypassing the need to send\n\n      sensitive cardholder info to your servers.  We recommend using this with our\n\n      Rebilly.js library, which helps you wire a form into this API resource and create\n\n      payment tokens.\n    name: Payment Tokens\n  - description: \u003e\n      Plans are a template for making a subscription.  For example, you may have\n      a plan\n\n      that has a 30-day free trial followed by a recurring charge of $19.95 per month\n\n      until canceled.  The combination of the plan and a request to make a subscription\n\n      will apply those instructions to create the invoices according to the plan's\n\n      schedule.\n    name: Plans\n  - description: |\n      A product describes what you sell (goods or services).  \n      A product determines how what you sell appears on invoices and receipts.\n      The pricing for products is set in Plans.  One product can have many\n      plans.\n    name: Products\n  - description: \u003e\n      The Rebilly Reporting API is currently experimental.  You may see\n\n      the [Reports API Documentation here](https://rebilly.github.io/RebillyReportsAPI/).\n    name: Reports\n  - description: \u003e\n      A shipping zone contains regions and countries that you ship to. Each\n      shipping zone has its own shipping rates.\n    name: Shipping Zones\n  - description: \u003e\n      A subscription applies a plan's template to create invoices for a customer\n      at the\n\n      appropriate scheduled intervals.  A subscription may also determine if the payment\n\n      is collected automatically (with autopay set true).\n    name: Subscriptions\n  - description: |\n      You can map a product to a tax category.  The tax category is used by\n      tax providers to calculate taxes for invoices.\n    name: Taxes\n  - description: |\n      Get and refund transactions.\n    name: Transactions\n  - description: \u003e\n      The Rebilly User API is primarily for our GUI apps.  You may see\n\n      the [User API Documentation here](https://rebilly.github.io/RebillyUserAPI/).\n\n      A User represents a person who can login to Rebilly, and take actions subject to\n\n      their granted permissions.  It has resources less commonly integrated by\n\n      3rd parties.\n    name: Users\npaths:\n  /3dsecure:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ThreeDSecure\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of ThreeDSecure entries\n      tags:\n        - 3D Secure\n    post:\n      description: |\n        Create a ThreeDSecure entry\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ThreeDSecure\"\n        description: ThreeDSecure resource\n        required: true\n      responses:\n        \"201\":\n          description: ThreeDSecure entry was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ThreeDSecure\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a ThreeDSecure entry\n      tags:\n        - 3D Secure\n  \"/3dsecure/{id}\":\n    get:\n      description: |\n        Retrieve a ThreeDSecure entry with specified identifier string\n      responses:\n        \"200\":\n          description: ThreeDSecure entry was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ThreeDSecure\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a ThreeDSecure entry\n      tags:\n        - 3D Secure\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /attachments:\n    get:\n      description: |\n        Retrieve a list of Attachments\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n        - description: The collection items sort field and order (prefix with \"-\" for\n            descending sort).\n          in: query\n          name: sort\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              enum:\n                - id\n                - -id\n                - name\n                - -name\n                - relatedId\n                - -relatedId\n                - relatedType\n                - -relatedType\n                - fileId\n                - -fileId\n                - createdTime\n                - -createdTime\n                - updatedTime\n                - -updatedTime\n              type: string\n      responses:\n        \"200\":\n          description: A list of Attachments was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attachment\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of Attachments\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $attachments = $client-\u003eattachments()-\u003esearch([\n                'filter' =\u003e 'relatedType:customer',\n            ]);\n    post:\n      description: |\n        Create an Attachment\n      requestBody:\n        $ref: \"#/components/requestBodies/Attachment\"\n      responses:\n        \"201\":\n          description: Attachment was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create an Attachment\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $attachmentForm = new Rebilly\\Entities\\Attachment();\n            $attachmentForm-\u003esetFileId('fileId');\n            $attachmentForm-\u003esetRelatedType($attachmentForm::TYPE_CUSTOMER);\n            $attachmentForm-\u003esetRelatedId('customerId');\n\n            try {\n                $attachment = $client-\u003eattachments()-\u003ecreate($attachmentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/attachments/{id}\":\n    delete:\n      description: |\n        Delete the Attachment with predefined identifier string\n      responses:\n        \"204\":\n          description: Attachment was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an Attachment\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003eattachments()-\u003edelete('attachmentId');\n    get:\n      description: |\n        Retrieve a Attachment with specified identifier string\n      responses:\n        \"200\":\n          description: Attachment was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an Attachment\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $attachment = $client-\u003eattachments()-\u003eload('attachmentId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Update the Attachment with predefined ID\n      requestBody:\n        $ref: \"#/components/requestBodies/Attachment\"\n      responses:\n        \"200\":\n          description: Attachment was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n        \"201\":\n          description: Attachment was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Update the Attachment with predefined ID\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $attachmentForm = new Rebilly\\Entities\\Attachment();\n\n            $attachmentForm-\u003esetFileId('fileId');\n\n            $attachmentForm-\u003esetRelatedType($attachmentForm::TYPE_CUSTOMER);\n\n            $attachmentForm-\u003esetRelatedId('customerId');\n\n\n            try {\n                $attachment = $client-\u003eattachments()-\u003eupdate('attachmentId', $attachmentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /authentication-options:\n    get:\n      description: |\n        Read current authentication options\n      responses:\n        \"200\":\n          description: Current authentication options was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AuthenticationOptions\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Read current authentication options\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $authenticationOptions = $client-\u003eauthenticationOptions()-\u003eload();\n    put:\n      description: |\n        Change options\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthenticationOptions\"\n        description: Authentication Options resource\n        required: true\n      responses:\n        \"200\":\n          description: Authentication Options were updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/AuthenticationOptions\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Change authentication options\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $authenticationOptionsForm = new\n            Rebilly\\Entities\\AuthenticationOptions();\n\n            // Regular expression below matches any password with 6+ length that contains alphabet symbols and/or numbers.\n\n            $authenticationOptionsForm-\u003esetPasswordPattern('/^[a-zA-Z0-9]{6,}$/');\n\n\n            try {\n                $authenticationOptions = $client-\u003eauthenticationOptions()-\u003eupdate($authenticationOptionsForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /authentication-tokens:\n    get:\n      description: |\n        Retrieve a list of auth tokens\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of auth tokens was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AuthenticationToken\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of auth tokens\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $authenticationTokens = $client-\u003eauthenticationTokens()-\u003esearch([\n                'filter' =\u003e 'customerId:testCustomer',\n            ]);\n    post:\n      description: |\n        Login a user (customer)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthenticationToken\"\n        description: AuthenticationToken resource\n        required: true\n      responses:\n        \"201\":\n          description: Login successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/AuthenticationToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Login\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $authenticationForm = new Rebilly\\Entities\\AuthenticationToken();\n\n            $authenticationForm-\u003esetUsername('username');\n\n            $authenticationForm-\u003esetPassword('test123');\n\n\n            try {\n                $authenticationToken = $client-\u003eauthenticationTokens()-\u003elogin($authenticationForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/authentication-tokens/{token}\":\n    delete:\n      description: |\n        Logout a user\n      responses:\n        \"204\":\n          description: User was logged out\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Logout a user\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003eauthenticationTokens()-\u003elogout('token');\n    get:\n      description: |\n        Verify an authentication token\n      responses:\n        \"200\":\n          description: Authentication Token was verified\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/AuthenticationToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Verify\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $isVerified = $client-\u003eauthenticationTokens()-\u003everify('token');\n    parameters:\n      - description: The token identifier string\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n  /bank-accounts:\n    get:\n      description: |\n        Retrieve a list of Bank Accounts\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Bank Accounts was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BankAccount\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of bank accounts\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $bankAccounts = $client-\u003ebankAccounts()-\u003esearch([\n                'filter' =\u003e 'customerId:testId',\n            ]);\n    post:\n      description: |\n        Create a Bank Account\n      requestBody:\n        $ref: \"#/components/requestBodies/BankAccount\"\n      responses:\n        \"201\":\n          description: Bank Account was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a Bank Account\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $bankAccountForm = new Rebilly\\Entities\\BankAccount();\n\n            $bankAccountForm-\u003esetCustomerId('customerId');\n\n            $bankAccountForm-\u003esetRoutingNumber('0123456');\n\n            $bankAccountForm-\u003esetAccountNumber('0123456');\n\n            $bankAccountForm-\u003esetAccountType('checking');\n\n            $bankAccountForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $bankAccount = $client-\u003ebankAccounts()-\u003ecreate($bankAccountForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/bank-accounts/{id}\":\n    get:\n      description: |\n        Retrieve a Bank Account with specified identifier string\n      responses:\n        \"200\":\n          description: BankAccount was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Bank Account\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $bankAccount = $client-\u003ebankAccounts()-\u003eload('bankAccountId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a BankAccount with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/BankAccount\"\n      responses:\n        \"200\":\n          description: BankAccount was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n        \"201\":\n          description: BankAccount was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a BankAccount with predefined ID\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $bankAccountForm = new Rebilly\\Entities\\BankAccount();\n\n            $bankAccountForm-\u003esetCustomerId('customerId');\n\n            $bankAccountForm-\u003esetRoutingNumber('0123456');\n\n            $bankAccountForm-\u003esetAccountNumber('0123456');\n\n            $bankAccountForm-\u003esetAccountType('checking');\n\n            $bankAccountForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $bankAccount = $client-\u003ecustomers()-\u003ecreate($bankAccountForm, 'bankAccountId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/bank-accounts/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Deactivate a Bank Account\n      responses:\n        \"201\":\n          description: Deactivated successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Deactivate a Bank Account\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $bankAccount = $client-\u003ebankAccounts()-\u003edeactivate('bankAccountId');\n  /blacklists:\n    get:\n      description: |\n        Retrieve a list of blacklists\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Blacklists was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Blacklist\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of blacklists\n      tags:\n        - Blacklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $blacklists = $client-\u003eblacklists()-\u003esearch([\n                'filter' =\u003e 'value:testValue',\n            ]);\n    post:\n      description: |\n        Create a blacklist\n      requestBody:\n        $ref: \"#/components/requestBodies/Blacklist\"\n      responses:\n        \"201\":\n          description: Blacklist was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Blacklist\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a blacklist\n      tags:\n        - Blacklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $blacklistForm = new Rebilly\\Entities\\Blacklist();\n            $blacklistForm-\u003esetType($blacklistForm::TYPE_EMAIL);\n            $blacklistForm-\u003esetValue('test@test.com');\n            $blacklistForm-\u003esetExpiredTime('2025-01-01 05:00:00');\n\n            try {\n                $blacklist = $client-\u003eblacklists()-\u003ecreate($blacklistForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/blacklists/{id}\":\n    delete:\n      description: |\n        Delete a blacklist with predefined identifier string\n      responses:\n        \"204\":\n          description: Blacklist was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a blacklist\n      tags:\n        - Blacklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003eblacklists()-\u003edelete('blacklistId');\n    get:\n      description: |\n        Retrieve a blacklist with specified identifier string\n      responses:\n        \"200\":\n          description: Blacklist was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Blacklist\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a blacklist\n      tags:\n        - Blacklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $blacklist = $client-\u003eblacklists()-\u003eload('blacklistId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create a blacklist with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Blacklist\"\n      responses:\n        \"201\":\n          description: Blacklist was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Blacklist\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          description: Blacklist exist and cannot be updated\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a blacklist with predefined ID\n      tags:\n        - Blacklists\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $blacklistForm = new Rebilly\\Entities\\Blacklist();\n\n            $blacklistForm-\u003esetType($blacklistForm::TYPE_EMAIL);\n\n            $blacklistForm-\u003esetValue('test@test.com');\n\n            $blacklistForm-\u003esetExpiredTime('2025-01-01 05:00:00');\n\n\n            try {\n                $blacklist = $client-\u003eblacklists()-\u003ecreate($blacklistForm, 'blacklistId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /contacts:\n    get:\n      description: |\n        Retrieve a list of contacts\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Contacts was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Contact\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of contacts\n      tags:\n        - Contacts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $contacts = $client-\u003econtacts()-\u003esearch([\n                'filter' =\u003e 'firstName:John',\n            ]);\n    post:\n      description: |\n        Create a contact\n      requestBody:\n        $ref: \"#/components/requestBodies/Contact\"\n      responses:\n        \"201\":\n          description: Contact was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Contact\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a contact\n      tags:\n        - Contacts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $contactForm = new Rebilly\\Entities\\Contact();\n            $contactForm-\u003esetFirstName('Sherlock');\n            $contactForm-\u003esetLastName('Holmes');\n            $contactForm-\u003esetOrganization('TestOrganization');\n            $contactForm-\u003esetEmails(\n                [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ]\n            );\n            $contactForm-\u003esetPhoneNumbers(\n                [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ]\n            );\n\n            try {\n                $contact = $client-\u003econtacts()-\u003ecreate($contactForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/contacts/{id}\":\n    delete:\n      description: |\n        Delete a contact with predefined identifier string\n      responses:\n        \"204\":\n          description: Contact was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"402\":\n          description: Contact cannot be deleted\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a contact\n      tags:\n        - Contacts\n    get:\n      description: |\n        Retrieve a contact with specified identifier string\n      responses:\n        \"200\":\n          description: Contact was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Contact\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a contact\n      tags:\n        - Contacts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $contact = $client-\u003econtacts()-\u003eload('contactId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a contact with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Contact\"\n      responses:\n        \"201\":\n          description: Contact was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Contact\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          description: Contact exists and cannot be updated\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create or update a contact with predefined ID\n      tags:\n        - Contacts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $contactForm = new Rebilly\\Entities\\Contact();\n\n            $contactForm-\u003esetFirstName('Sherlock');\n\n            $contactForm-\u003esetLastName('Holmes');\n\n            $contactForm-\u003esetOrganization('TestOrganization');\n\n            $contactForm-\u003esetEmails(\n                [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ]\n            );\n\n            $contactForm-\u003esetPhoneNumbers(\n                [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ]\n            );\n\n\n            try {\n                $contact = $client-\u003econtacts()-\u003eupdate('contactId', $contactForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /coupons:\n    get:\n      description: |\n        Retrieve a list of coupons\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          description: A list of coupons was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Coupon\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of coupons\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $coupons = $client-\u003ecoupons()-\u003esearch([\n                'filter' =\u003e 'status:issued',\n            ]);\n    post:\n      description: |\n        Create a coupon\n      requestBody:\n        $ref: \"#/components/requestBodies/Coupon\"\n      responses:\n        \"201\":\n          description: Coupon was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a coupon\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $couponForm = new Rebilly\\Entities\\Coupons\\Coupon();\n\n\n            $discountArray = [\n                'currency' =\u003e 'USD',\n                'amount' =\u003e 1.99,\n            ];\n\n\n            $discountForm = new \\Rebilly\\Entities\\Coupons\\Discounts\\Fixed($discountArray);\n\n            $couponForm-\u003esetDiscount($discountForm);\n\n            // Coupon can be used right now\n\n            $couponForm-\u003esetIssuedTime(date('Y-m-d H:i:s'));\n\n\n            $restrictionArray = [\n                'quantity' =\u003e 2,\n            ];\n\n\n            $restrictionForm = new Rebilly\\Entities\\Coupons\\Restrictions\\DiscountsPerRedemption($restrictionArray);\n\n\n            $couponForm-\u003esetRestrictions([$restrictionForm]);\n\n\n            try {\n                $coupon = $client-\u003ecoupons()-\u003ecreate($couponForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /coupons-redemptions:\n    get:\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          description: Coupons redemptions were retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CouponRedemption\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of coupon redemptions\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $couponRedemptions = $client-\u003ecouponsRedemptions()-\u003esearch([\n                'filter' =\u003e 'customerId:testCustomer',\n            ]);\n    post:\n      description: |\n        Redeem a coupon\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CouponRedemption\"\n        description: Redeem a coupon\n        required: true\n      responses:\n        \"201\":\n          description: Coupon was redeemed\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/CouponRedemption\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Redeem a coupon\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $redemptionForm = new Rebilly\\Entities\\Coupons\\Redemption();\n\n            $redemptionForm-\u003esetCustomerId('customerId');\n\n            $redemptionForm-\u003esetRedemptionCode('redemptionCode');\n\n\n            $restrictionArray = [\n                'type' =\u003e Rebilly\\Entities\\Coupons\\Restriction::TYPE_DISCOUNTS_PER_REDEMPTION,\n                'quantity' =\u003e 2,\n            ];\n\n\n            $restrictionForm = new Rebilly\\Entities\\Coupons\\Restriction([\n                $restrictionArray,\n            ]);\n\n\n            $redemptionForm-\u003esetAdditionalRestrictions($restrictionForm);\n\n\n            try {\n                $couponRedemption = $client-\u003ecouponsRedemptions()-\u003eredeem($redemptionForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/coupons-redemptions/{id}\":\n    get:\n      responses:\n        \"200\":\n          description: Retrieve a coupon redemption with specified identifier string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/CouponRedemption\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a coupon redemption with specified identifier string\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $couponRedemption =\n            $client-\u003ecouponsRedemptions()-\u003eload('redemptionCode');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  \"/coupons-redemptions/{id}/cancel\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      responses:\n        \"201\":\n          description: Cancel a coupon redemption\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Cancel a coupon redemption\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003ecouponsRedemptions()-\u003ecancel('id');\n  \"/coupons/{redemptionCode}\":\n    get:\n      description: |\n        Retrieve a coupon with specified redemption code string\n      responses:\n        \"200\":\n          description: Coupon was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a coupon\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $coupon = $client-\u003ecoupons()-\u003eload('redemptionCode');\n    parameters:\n      - description: The Coupon's redemption code\n        in: path\n        name: redemptionCode\n        required: true\n        schema:\n          type: string\n    put:\n      description: |\n        Create or update a coupon with predefined redemption code\n      requestBody:\n        $ref: \"#/components/requestBodies/Coupon\"\n      responses:\n        \"200\":\n          description: Coupon was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n        \"201\":\n          description: Coupon was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          description: Coupon was redeemed already and cannot be changed\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update a coupon with predefined redemption code\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $couponForm = new Rebilly\\Entities\\Coupons\\Coupon();\n\n\n            $discountArray = [\n                'type' =\u003e Rebilly\\Entities\\Coupons\\Discount::TYPE_FIXED,\n                'currency' =\u003e 'USD',\n                'amount' =\u003e 1.99,\n            ];\n\n\n            $discountForm = new Rebilly\\Entities\\Coupons\\Discount($discountArray);\n\n            $couponForm-\u003esetDiscount($discountForm);\n\n\n            $restrictionArray = [\n                'type' =\u003e Rebilly\\Entities\\Coupons\\Restriction::TYPE_DISCOUNTS_PER_REDEMPTION,\n                'quantity' =\u003e 2,\n            ];\n\n\n            $restrictionForm = new Rebilly\\Entities\\Coupons\\Restriction([\n                $restrictionArray,\n            ]);\n\n\n            $couponForm-\u003esetRestrictions($restrictionForm);\n\n\n            try {\n                $coupon = $client-\u003ecoupons()-\u003ecreate($couponForm, 'redemptionCode');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/coupons/{redemptionCode}/expiration\":\n    parameters:\n      - description: The Coupon's redemption code\n        in: path\n        name: redemptionCode\n        required: true\n        schema:\n          type: string\n    post:\n      description: |\n        Set a coupon's expiry time with the specified redemption code.\n        The expiredTime of a coupon must be greater than its issuedTime.\n        This cannot be performed on expired coupons.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CouponExpiration\"\n        description: Coupon resource\n      responses:\n        \"201\":\n          description: Coupon expiration was successfully set\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Set a coupon's expiration time.\n      tags:\n        - Coupons\n  /credentials:\n    get:\n      description: |\n        Retrieve a list of credentials\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Credentials was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Credential\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of credentials\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customerCredentials = $client-\u003ecustomerCredentials()-\u003esearch([\n                'filter' =\u003e 'customerId:testCustomer',\n            ]);\n    post:\n      description: |\n        Create a credential\n      requestBody:\n        $ref: \"#/components/requestBodies/Credential\"\n      responses:\n        \"201\":\n          description: Credential was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a credential\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredentialForm = new Rebilly\\Entities\\CustomerCredential();\n\n            $customerCredentialForm-\u003esetCustomerId('customerId');\n\n            $customerCredentialForm-\u003esetUsername('test');\n\n            $customerCredentialForm-\u003esetPassword('1234');\n\n\n            try {\n                $customerCredential = $client-\u003ecustomerCredentials()-\u003ecreate($customerCredentialForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/credentials/{id}\":\n    delete:\n      description: |\n        Delete a credential with predefined identifier string\n      responses:\n        \"204\":\n          description: Credential was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a credential\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003ecustomerCredentials()-\u003edelete('credentialId');\n    get:\n      description: |\n        Retrieve a credential with specified identifier string\n      responses:\n        \"200\":\n          description: Credential was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a credential\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredential =\n            $client-\u003ecustomerCredentials()-\u003eload('credentialId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a credential with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Credential\"\n      responses:\n        \"200\":\n          description: Credential was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n        \"201\":\n          description: Credential was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update a credential with predefined ID\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredentialForm = new Rebilly\\Entities\\CustomerCredential();\n\n            $customerCredentialForm-\u003esetCustomerId('customerId');\n\n            $customerCredentialForm-\u003esetUsername('test');\n\n            $customerCredentialForm-\u003esetPassword('1234');\n\n\n            try {\n                $customerCredential = $client-\u003ecustomerCredentials()-\u003eupdate('credentialId', $customerCredentialForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/custom-fields/{resource}\":\n    get:\n      description: |\n        Retrieve a schema of Custom Fields for the given resource type\n      responses:\n        \"200\":\n          description: A schema of Custom Fields was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                description: The list of custom fields\n                items:\n                  $ref: \"#/components/schemas/CustomField\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve Custom Fields\n      tags:\n        - Custom Fields\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customFields = $client-\u003ecustomFields()-\u003esearch([\n                'filter' =\u003e 'type:boolean',\n            ]);\n    parameters:\n      - description: The resource type string\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n          enum:\n            - customers\n            - payment-cards\n            - subscriptions\n            - transactions\n            - websites\n            - contacts\n            - products\n  \"/custom-fields/{resource}/{name}\":\n    get:\n      description: |\n        Retrieve a schema of the given Custom Field for the given resource type\n      responses:\n        \"200\":\n          description: A schema of the Custom Field was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Custom Field\n      tags:\n        - Custom Fields\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customField = $client-\u003ecustomFields()-\u003eload('customers',\n            'customerId');\n    parameters:\n      - description: The resource type string\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n          enum:\n            - customers\n            - payment-cards\n            - subscriptions\n            - transactions\n            - websites\n            - contacts\n            - products\n      - description: The custom field's identifier string\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n    put:\n      description: \u003e\n        Create or alter a schema of the given Custom Field for the given\n        resource type.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomField\"\n        description: Custom Fields schema of the given resource type\n        required: true\n      responses:\n        \"200\":\n          description: The Custom Field was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n        \"201\":\n          description: The Custom Fields was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          description: \"The schema is in use: remove all the associated data in order to\n            remove or alter the schema\"\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or alter a Custom Field\n      tags:\n        - Custom Fields\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customFieldForm = new Rebilly\\Entities\\CustomField();\n\n            $customFieldForm-\u003esetType($customFieldForm::TYPE_BOOLEAN);\n\n\n            try {\n                $customField = $client-\u003ecustomFields()-\u003eupdate('customers', 'testFieldName', $customFieldForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /customers:\n    get:\n      description: |\n        Retrieve a list of customers\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n        - description: The collection items sort field and order (prefix with \"-\" for\n            descending sort).\n          in: query\n          name: sort\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              enum:\n                - id\n                - -id\n                - email\n                - -email\n                - createdTime\n                - -createdTime\n                - updatedTime\n                - -updatedTime\n              type: string\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n            default: application/json\n      responses:\n        \"200\":\n          description: A list of Customers was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of customers\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customers = $client-\u003ecustomers()-\u003esearch([\n                'filter' =\u003e 'firstName:John',\n            ]);\n    post:\n      description: |\n        Create a customer\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer\"\n      responses:\n        \"201\":\n          description: Customer was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customerForm = new Rebilly\\Entities\\Customer();\n            $customerForm-\u003esetPrimaryAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n            try {\n                $customer = $client-\u003ecustomers()-\u003ecreate($customerForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/customers/{id}\":\n    get:\n      description: |\n        Retrieve a customer with specified identifier string\n      responses:\n        \"200\":\n          description: Customer was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customers = $client-\u003ecustomers()-\u003eload('myCustomerId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create a customer with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer\"\n      responses:\n        \"200\":\n          description: Customer was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"201\":\n          description: Customer was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a customer with predefined ID\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerForm = new Rebilly\\Entities\\Customer();\n\n            $customerForm-\u003esetPrimaryAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $customer = $client-\u003ecustomers()-\u003eupdate('myCustomerId', $customerForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/customers/{id}/lead-source\":\n    delete:\n      description: |\n        Delete a Lead Source that belongs to a certain customer\n      responses:\n        \"204\":\n          description: Lead Source was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          description: Lead Source cannot be deleted\n      summary: Delete a Lead Source for a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customer = $client-\u003ecustomers()-\u003edeleteLeadSource('myCustomerId');\n    get:\n      description: |\n        Retrieve a Lead Source of given customer\n      responses:\n        \"200\":\n          description: Lead Source was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/LeadSource\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a customer's Lead Source\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customer = $client-\u003ecustomers()-\u003eload('myCustomerId');\n            $leadSource = $customer-\u003egetLeadSource();\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create a Lead Source for a customer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LeadSource\"\n        description: Lead Source resource\n        required: true\n      responses:\n        \"200\":\n          description: Lead Source was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/LeadSource\"\n        \"201\":\n          description: Lead Source was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/LeadSource\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a Lead Source for a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $leadSourceForm = new Rebilly\\Entities\\LeadSource();\n\n            $leadSourceForm-\u003esetSource('TestSource');\n\n            $leadSourceForm-\u003esetCampaign('TestCampaign');\n\n\n            try {\n                $customer = $client-\u003ecustomers()-\u003eupdateLeadSource('myCustomerId', $leadSourceForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /disputes:\n    get:\n      description: |\n        Retrieve a list of disputes\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of disputes was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Dispute\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of disputes\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $disputes = $client-\u003edisputes()-\u003esearch([\n                'filter' =\u003e 'transactionId:testId',\n            ]);\n    post:\n      description: |\n        Create a dispute\n      requestBody:\n        $ref: \"#/components/requestBodies/Dispute\"\n      responses:\n        \"201\":\n          description: Dispute was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a dispute\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $disputeForm = new Rebilly\\Entities\\Dispute();\n            $disputeForm-\u003esetTransactionId('transactionId');\n            $disputeForm-\u003esetCurrency('USD');\n            $disputeForm-\u003esetAmount(10);\n            $disputeForm-\u003esetReasonCode(1000);\n            $disputeForm-\u003esetType($disputeForm::TYPE_1CB);\n            $disputeForm-\u003esetStatus($disputeForm::STATUS_RESPONSE_NEEDED);\n            $disputeForm-\u003esetPostedTime('2025-01-01 05:00:00');\n\n            try {\n                $dispute = $client-\u003edisputes()-\u003ecreate($disputeForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/disputes/{id}\":\n    get:\n      description: |\n        Retrieve a dispute with specified identifier string\n      responses:\n        \"200\":\n          description: Dispute was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a dispute\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $dispute = $client-\u003edisputes()-\u003eload('disputeId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a Dispute with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Dispute\"\n      responses:\n        \"200\":\n          description: Dispute was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n        \"201\":\n          description: Dispute was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update a Dispute with predefined ID\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $disputeForm = new Rebilly\\Entities\\Dispute();\n            $disputeForm-\u003esetTransactionId('transactionId');\n            $disputeForm-\u003esetCurrency('USD');\n            $disputeForm-\u003esetAmount(10);\n            $disputeForm-\u003esetReasonCode(1000);\n            $disputeForm-\u003esetType($disputeForm::TYPE_1CB);\n            $disputeForm-\u003esetStatus($disputeForm::STATUS_RESPONSE_NEEDED);\n            $disputeForm-\u003esetPostedTime('2025-01-01 05:00:00');\n\n            try {\n                $dispute = $client-\u003edisputes()-\u003eupdate('disputeId', $dispute);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/disputes/{id}/matched-rules\":\n    get:\n      description: Get matched rules for the dispute\n      responses:\n        \"200\":\n          description: List of matched rules was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MatchedRule\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get matched rules for the dispute\n      tags:\n        - Disputes\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /files:\n    get:\n      description: |\n        Retrieve a list of files\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n        - description: The collection items sort field and order (prefix with \"-\" for\n            descending sort).\n          in: query\n          name: sort\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              enum:\n                - id\n                - -id\n                - name\n                - -name\n                - extension\n                - -extension\n                - size\n                - -size\n                - width\n                - -width\n                - height\n                - -height\n                - createdTime\n                - -createdTime\n                - updatedTime\n                - -updatedTime\n              type: string\n      responses:\n        \"200\":\n          description: A list of Files was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/File\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of files\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $files = $client-\u003efiles()-\u003esearch([\n                'filter' =\u003e 'name:TestFile',\n            ]);\n    post:\n      description: \u003e\n        Additionally, a file can be sent with:\n         - multipart/form-data POST request: in this case all property names are the same as the JSON ones (`file` is an uploaded file)\n         - file body request: the file body is sent as the request body, with the appropriate `Content-Type`. No aditional\n         properties can be set along the request data\n\n        The following file types only are allowed:\n         - jpg\n         - png\n         - gif\n         - pdf\n         - mp3\n\n\n        If using a Publishable Api Key, only private files can be created. The files can later on be modified or used using\n         a secret API key.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FileCreateRequest\"\n        required: true\n      responses:\n        \"201\":\n          description: File was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/File\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      security:\n        - SecretApiKey: []\n        - JWT: []\n        - PublishableApiKey: []\n      summary: Create a file\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $fileForm = new Rebilly\\Entities\\File();\n            $fileForm-\u003esetUrl('http://test.com/somefile.jpg');\n\n            try {\n                $file = $client-\u003efiles()-\u003ecreate($fileForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/files/{id}\":\n    delete:\n      description: |\n        Delete the File with predefined identifier string\n      responses:\n        \"204\":\n          description: File was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a File\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003efiles()-\u003edelete('fileId');\n    get:\n      description: |\n        Retrieve a File with specified identifier string\n      responses:\n        \"200\":\n          description: File was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/File\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a File Record\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $file = $client-\u003efiles()-\u003eload('fileId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Update the File with predefined ID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/File\"\n        description: File resource\n        required: true\n      responses:\n        \"200\":\n          description: File was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/File\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Update the File with predefined ID. Note that file can be uploaded with\n        POST only.\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $fileForm = new Rebilly\\Entities\\File();\n            $fileForm-\u003esetDescription('This is a test file');\n\n            try {\n                $file = $client-\u003efiles()-\u003eupdate('fileId', $fileForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/files/{id}/download\":\n    get:\n      description: |\n        Download a file\n      responses:\n        \"200\":\n          description: The file was retrieved successfully\n          headers:\n            Content-Length:\n              description: The number of bytes in the file\n              schema:\n                type: integer\n            Content-Type:\n              description: The MIME type of the file\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                readOnly: true\n                type: string\n        \"302\":\n          $ref: \"#/components/responses/Found\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Download a file\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  \"/files/{id}/download{extension}\":\n    get:\n      description: |\n        Download image in specific format. Images are converted server-side\n      responses:\n        \"200\":\n          description: The file was retrieved successfully\n          headers:\n            Content-Length:\n              description: The number of bytes in the file\n              schema:\n                type: integer\n            Content-Type:\n              description: The MIME type of the file\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                readOnly: true\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Download image in specific format\n      tags:\n        - Files\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: File extension which also indicates the desired file format\n        in: path\n        name: extension\n        required: true\n        schema:\n          type: string\n          enum:\n            - .png\n            - .jpg\n            - .gif\n  /invoices:\n    get:\n      description: |\n        Retrieve a list of invoices\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n            default: application/json\n      responses:\n        \"200\":\n          description: A list of invoices was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of invoices\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoices = $client-\u003einvoices()-\u003esearch([\n                'filter' =\u003e 'customerId:testCustomerId',\n            ]);\n    post:\n      description: |\n        Create an invoice\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice\"\n      responses:\n        \"201\":\n          description: Invoice was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            \u003c?\n            $invoiceForm = new Rebilly\\Entities\\Invoice();\n            $invoiceForm-\u003esetCustomerId('customerId');\n            $invoiceForm-\u003esetWebsiteId('websiteId');\n            $invoiceForm-\u003esetCurrency('USD');\n            $invoiceForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n            try {\n                $invoice = $client-\u003einvoices()-\u003ecreate($invoiceForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/invoices/{id}\":\n    get:\n      description: |\n        Retrieve an invoice with specified identifier string\n      parameters:\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n              - application/pdf\n            default: application/json\n      responses:\n        \"200\":\n          description: Invoice was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoice = $client-\u003einvoices()-\u003eload('invoiceId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update an invoice with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice\"\n      responses:\n        \"200\":\n          description: Invoice was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"201\":\n          description: Invoice was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update an invoice with predefined ID\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            \u003c?\n\n            $invoiceForm = new Rebilly\\Entities\\Invoice();\n\n            $invoiceForm-\u003esetCustomerId('customerId');\n\n            $invoiceForm-\u003esetWebsiteId('websiteId');\n\n            $invoiceForm-\u003esetCurrency('USD');\n\n            $invoiceForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $invoice = $client-\u003einvoices()-\u003eupdate('invoiceId', $invoiceForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/invoices/{id}/abandon\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Abandon an invoice with specified identifier string\n      responses:\n        \"201\":\n          description: Invoice was abandoned successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Abandon an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoice = $client-\u003einvoices()-\u003eabandon('invoiceId');\n  \"/invoices/{id}/issue\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Issue an invoice with specified identifier string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceIssue\"\n        description: InvoiceIssue resource\n        required: true\n      responses:\n        \"201\":\n          description: Invoice was issued successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Issue an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $invoice = $client-\u003einvoices()-\u003eissue('invoiceId', '2025-01-01\n            05:00:00');\n  \"/invoices/{id}/items\":\n    get:\n      description: |\n        Retrieve an invoice items with specified invoice identifier string\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: Invoice items were retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceItem\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve invoice items\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoiceItems = $client-\u003einvoiceItems()-\u003esearch('invoiceId', [\n                'filter' =\u003e 'quantity:5',\n            ]);\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Create an invoice item\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceItem\"\n        description: InvoiceItem resource\n        required: true\n      responses:\n        \"201\":\n          description: InvoiceItem was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvoiceItem\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create an invoice item\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $invoiceItemForm = new Rebilly\\Entities\\InvoiceItem();\n\n            $invoiceItemForm-\u003esetType($invoiceItemForm::TYPE_DEBIT);\n\n            $invoiceItemForm-\u003esetUnitPrice(0.99);\n\n            $invoiceItemForm-\u003esetQuantity(5);\n\n\n            try {\n                $invoiceItem = $client-\u003einvoiceItems()-\u003ecreate($invoiceItemForm, 'invoiceId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/invoices/{id}/matched-rules\":\n    get:\n      description: Get matched rules for the invoice\n      responses:\n        \"200\":\n          description: List of matched rules was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MatchedRule\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get matched rules for the invoice\n      tags:\n        - Invoices\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  \"/invoices/{id}/void\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Void an invoice with specified identifier string\n      responses:\n        \"201\":\n          description: Invoice was voided successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Void an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoice = $client-\u003einvoices()-\u003evoid('invoiceId');\n  /kyc-documents:\n    get:\n      description: |\n        Retrieve a list of KYC documents\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - description: The collection items sort field and order (prefix with \"-\" for\n            descending sort).\n          in: query\n          name: sort\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              enum:\n                - id\n                - -id\n                - createdTime\n                - -createdTime\n                - updatedTime\n                - -updatedTime\n              type: string\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n            default: application/json\n      responses:\n        \"200\":\n          description: A list of KYC documents was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/KycDocument\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of KYC documents\n      tags:\n        - KYC Documents\n    post:\n      description: |\n        Create a KYC Document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycDocument\"\n        description: Kyc document resource\n        required: true\n      responses:\n        \"201\":\n          description: Kyc document was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/KycDocument\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a KYC Document\n      tags:\n        - KYC Documents\n  \"/kyc-documents/{id}\":\n    get:\n      description: |\n        Retrieve a KYC document with specified identifier string\n      parameters:\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n            default: application/json\n      responses:\n        \"200\":\n          description: KYC document was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a KYC Document\n      tags:\n        - KYC Documents\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a KYC document with predefined identifier string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycDocument\"\n        description: KYC document resource\n        required: true\n      responses:\n        \"200\":\n          description: KYC document was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/KycDocument\"\n        \"201\":\n          description: KYC document was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/KycDocument\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update a KYC document with predefined ID\n      tags:\n        - KYC Documents\n  \"/kyc-documents/{id}/acceptance\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Manually override automated status and accept the document\n      responses:\n        \"201\":\n          description: KYC document acceptance was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/KycDocument\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Accept a KYC document\n      tags:\n        - KYC Documents\n  \"/kyc-documents/{id}/rejection\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Manually override automated status and reject the document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycDocumentRejection\"\n        description: KYC document resource\n        required: true\n      responses:\n        \"201\":\n          description: KYC document rejection was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/KycDocument\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Reject a KYC document\n      tags:\n        - KYC Documents\n  /password-tokens:\n    get:\n      description: |\n        Retrieve a list of tokens\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Reset Password Tokens was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ResetPasswordToken\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of tokens\n      tags:\n        - Customer Authentication\n    post:\n      description: |\n        Create a Reset Password Token\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResetPasswordToken\"\n        description: ResetPasswordToken resource\n        required: true\n      responses:\n        \"201\":\n          description: Reset Password Token was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ResetPasswordToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a Reset Password Token\n      tags:\n        - Customer Authentication\n  \"/password-tokens/{id}\":\n    delete:\n      description: |\n        Delete a Reset Password Token with predefined identifier string\n      responses:\n        \"204\":\n          description: ResetPasswordToken was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          description: ResetPasswordToken has related resources and cannot be deleted\n      summary: Delete a Reset Password Token\n      tags:\n        - Customer Authentication\n    get:\n      description: |\n        Retrieve a Reset Password Token with specified identifier string\n      responses:\n        \"200\":\n          description: ResetPasswordToken was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ResetPasswordToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Reset Password Token\n      tags:\n        - Customer Authentication\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /payment-cards:\n    get:\n      description: |\n        Retrieve a list of Payments Cards\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Payment Card was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentCard\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of Payment Cards\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCards = $client-\u003epaymentCards()-\u003esearch([\n                'filter' =\u003e 'status:active',\n            ]);\n    post:\n      description: |\n        Create a Payment Card\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentCard\"\n        description: PaymentCard resource\n        required: true\n      responses:\n        \"200\":\n          description: PaymentCard was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"201\":\n          description: Payment Card was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardForm = new Rebilly\\Entities\\PaymentCard();\n\n            $paymentCardForm-\u003esetCustomerId('customerId');\n\n            $paymentCardForm-\u003esetPan('4111111111111111');\n\n            $paymentCardForm-\u003esetExpYear(2025);\n\n            $paymentCardForm-\u003esetExpMonth(8);\n\n            $paymentCardForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $paymentCard = $client-\u003epaymentCards()-\u003ecreate($paymentCardForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/payment-cards/{id}\":\n    get:\n      description: |\n        Retrieve a Payment Card with specified identifier string\n      responses:\n        \"200\":\n          description: PaymentCard was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCard = $client-\u003epaymentCards()-\u003eload('paymentCardId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    patch:\n      description: |\n        Update any of the payment card's values except for the pan\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                billingAddress:\n                  $ref: \"#/components/schemas/ContactObject\"\n                customFields:\n                  $ref: \"#/components/schemas/ResourceCustomFields\"\n                cvv:\n                  description: Card's cvv (card verification value).\n                  type: string\n                expMonth:\n                  description: Card's expiry month\n                  type: string\n                expYear:\n                  description: Card's expiry year\n                  type: string\n                status:\n                  description: Card's status\n                  enum:\n                    - active\n                    - inactive\n                    - deactivated\n                  type: string\n                stickyGatewayAccountId:\n                  allOf:\n                    - $ref: \"#/components/schemas/ResourceId\"\n                  description: Sticky Gateway Account ID\n              type: object\n        description: Payment card\n      responses:\n        \"200\":\n          description: Payment card was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Update a payment card's values\n      tags:\n        - Payment Cards\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentCard\"\n        description: Payment card\n      responses:\n        \"200\":\n          description: PaymentCard was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"201\":\n          description: Payment card was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          description: Payment card already exists and cannot be updated\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a payment card with predefined ID\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardForm = new Rebilly\\Entities\\PaymentCard();\n\n            $paymentCardForm-\u003esetCustomerId('customerId');\n\n            $paymentCardForm-\u003esetPan('4111111111111111');\n\n            $paymentCardForm-\u003esetExpYear(2025);\n\n            $paymentCardForm-\u003esetExpMonth(8);\n\n            $paymentCardForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $paymentCard = $client-\u003epaymentCards()-\u003ecreate($paymentCardForm, 'paymentCardId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/payment-cards/{id}/authorization\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Authorize a Payment Card\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                amount:\n                  description: Amount\n                  format: double\n                  type: number\n                currency:\n                  description: Currency (three letter code)\n                  type: string\n                gatewayAccountId:\n                  description: The Gateway account ID\n                  type: string\n                websiteId:\n                  description: The Website ID\n                  type: string\n              required:\n                - websiteId\n                - currency\n              type: object\n        description: Payment Card resource\n        required: true\n      responses:\n        \"201\":\n          description: Authorization successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Authorize a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardAuthorizationForm = new\n            Rebilly\\Entities\\PaymentCardAuthorization();\n\n            $paymentCardAuthorizationForm-\u003esetWebsiteId('websiteId');\n\n            $paymentCardAuthorizationForm-\u003esetCurrency('USD');\n\n            $paymentCardAuthorizationForm-\u003esetGatewayAccountId('gatewayAccountId');\n\n\n            try {\n                $paymentCard = $client-\u003epaymentCards()-\u003eauthorize('paymentCardId', $paymentCardAuthorizationForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/payment-cards/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Deactivate a Payment Card\n      responses:\n        \"201\":\n          description: Authorization successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Deactivate a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003epaymentCards()-\u003edeactivate('paymentCardId');\n  \"/payment-cards/{id}/matched-rules\":\n    get:\n      description: Get matched rules for the payment card\n      responses:\n        \"200\":\n          description: List of matched rules was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MatchedRule\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get matched rules for the payment card\n      tags:\n        - Payment Cards\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /payment-instrument-validation:\n    get:\n      description: \u003e\n        Retrieve a Payment Instrument validation with specified identifier string\n      responses:\n        \"200\":\n          description: Successfully retrieved a payment instrument validation\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentInstrumentValidation\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a Payment Instrument validation\n      tags:\n        - Payment Instrument Validation\n    post:\n      description: |\n        Validate a payment instrument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                method:\n                  description: Payment method\n                  type: string\n                payementInstrumentId:\n                  description: Payment instrument ID\n                  type: string\n              required:\n                - method\n                - payementInstrumentId\n              type: object\n        description: Payment instrument\n      responses:\n        \"201\":\n          description: Validation successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrumentValidation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Validate a payment instrument\n      tags:\n        - Payment Instrument Validation\n  \"/payment-instrument-validation/{id}\":\n    get:\n      description: |\n        Retrieve a list of validated payment instruments\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of validated payment instrument was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrumentValidation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of validated payment instruments\n      tags:\n        - Payment Instrument Validation\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /payments:\n    get:\n      description: |\n        Retrieve a payment list\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n            default: application/json\n      responses:\n        \"200\":\n          description: Payment list was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Payment\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Payment\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a payment list\n      tags:\n        - Payments\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payments = $client-\u003epayments()-\u003esearch([\n                'filter' =\u003e 'currency:USD',\n            ]);\n    post:\n      description: |\n        Create a payment\n      requestBody:\n        $ref: \"#/components/requestBodies/Payment\"\n      responses:\n        \"201\":\n          description: Payment was processed\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Payment\"\n                type: array\n        \"202\":\n          description: Payment was accepted\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a payment\n      tags:\n        - Payments\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentForm = new Rebilly\\Entities\\Payment();\n\n\n            $paymentForm-\u003esetWebsiteId('websiteId');\n\n            $paymentForm-\u003esetCustomerId('customerId');\n\n            $paymentForm-\u003esetCurrency('USD');\n\n            $paymentForm-\u003esetAmount(1.99);\n\n\n            $data = [\n                'method' =\u003e Rebilly\\Entities\\PaymentMethod::METHOD_CASH,\n            ];\n\n\n            $paymentInstrumentForm = new Rebilly\\Entities\\PaymentMethodInstrument($data);\n\n\n            $paymentForm-\u003esetPaymentInstrument($paymentInstrumentForm);\n\n\n            try {\n                $payment = $client-\u003epayments()-\u003ecreate($paymentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/payments/{id}\":\n    get:\n      description: |\n        Retrieve a payment with specified identifier string\n      responses:\n        \"200\":\n          description: Payment was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a payment\n      tags:\n        - Payments\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payment = $client-\u003epayments()-\u003eload('paymentId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Make a payment with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Payment\"\n      responses:\n        \"201\":\n          description: Payment was processed\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Payment\"\n                type: array\n        \"202\":\n          description: Payment was accepted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a payment with predefined ID\n      tags:\n        - Payments\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentForm = new Rebilly\\Entities\\Payment();\n\n\n            $paymentForm-\u003esetWebsiteId('websiteId');\n\n            $paymentForm-\u003esetCustomerId('customerId');\n\n            $paymentForm-\u003esetCurrency('USD');\n\n            $paymentForm-\u003esetAmount(1.99);\n\n\n            $data = [\n                'method' =\u003e Rebilly\\Entities\\PaymentMethod::METHOD_CASH,\n            ];\n\n\n            $paymentInstrumentForm = new Rebilly\\Entities\\PaymentMethodInstrument($data);\n\n\n            $paymentForm-\u003esetPaymentInstrument($paymentInstrumentForm);\n\n\n            try {\n                $payment = $client-\u003epayments()-\u003eupdate('paymentId', $paymentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /paypal-accounts:\n    get:\n      description: |\n        Retrieve a list of PayPal Accounts\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of PayPal Accounts was retrieved successfully\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PayPalAccount\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of PayPal accounts\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payPalAccounts = $client-\u003epayPalAccounts()-\u003esearch([\n                'filter' =\u003e 'status:active',\n            ]);\n    post:\n      description: |\n        Create a PayPal Account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PayPalAccount\"\n        description: PayPalAccount resource\n        required: true\n      responses:\n        \"201\":\n          description: PayPal Account was created\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payPalForm = new Rebilly\\Entities\\PayPalAccount();\n            $payPalForm-\u003esetCustomerId('customerId');\n            $payPalForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n            try {\n                $payPalAccount = $client-\u003epayPalAccounts()-\u003ecreate($payPalForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/paypal-accounts/{id}\":\n    get:\n      description: |\n        Retrieve a PayPal Account with specified identifier string\n      responses:\n        \"200\":\n          description: PayPal Account was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payPalAccount = $client-\u003epayPalAccounts()-\u003eload('payPalAccountId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PayPalAccount\"\n        description: PayPal Account\n        required: true\n      responses:\n        \"201\":\n          description: PayPal Account was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"409\":\n          description: PayPal Account exist and cannot be updated\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a PayPal account with predefined ID\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $payPalForm = new Rebilly\\Entities\\PayPalAccount();\n\n            $payPalForm-\u003esetCustomerId('customerId');\n\n            $payPalForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $payPalAccount = $client-\u003epayPalAccounts()-\u003ecreate($payPalForm, 'payPalAccountId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/paypal-accounts/{id}/activation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Activate a PayPal Account\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                amount:\n                  default: 1\n                  description: The amount to authorize\n                  format: double\n                  type: number\n                currency:\n                  description: Currency (three letter code)\n                  type: string\n                gatewayAccountId:\n                  description: The Gateway Account ID which use to send transactions\n                  type: string\n                redirectURLs:\n                  description: Redirect URLs\n                  type: object\n                websiteId:\n                  description: The Website ID\n                  type: string\n              required:\n                - websiteId\n                - currency\n              type: object\n        description: PayPal Account resource\n        required: true\n      responses:\n        \"201\":\n          description: Activate successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Activate a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $activationData = [\n                'websiteId' =\u003e 'testWebsiteId',\n                'currency' =\u003e 'USD',\n            ];\n\n\n            try {\n                $client-\u003epayPalAccounts()-\u003eactivate($activationData, 'payPalAccountId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/paypal-accounts/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: |\n        Deactivate a PayPal Account\n      responses:\n        \"201\":\n          description: Deactivate successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Deactivate a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003epayPalAccounts()-\u003edeactivate('payPalAccountId');\n  /plans:\n    get:\n      description: |\n        Retrieve a list of plans\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of Plans was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Plan\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of plans\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $plans = $client-\u003eplans()-\u003esearch([\n                'filter' =\u003e 'name:TestPlan',\n            ]);\n    post:\n      description: |\n        Create a plan\n      requestBody:\n        $ref: \"#/components/requestBodies/Plan\"\n      responses:\n        \"201\":\n          description: Plan was created\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a plan\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $planForm = new Rebilly\\Entities\\Plan();\n            $planForm-\u003esetName('TestPlan');\n            $planForm-\u003esetCurrency('USD');\n            $planForm-\u003esetTrialAmount(1);\n            $planForm-\u003esetTrialPeriodUnit('day');\n            $planForm-\u003esetTrialPeriodLength(1);\n            $planForm-\u003esetProductId('test-product');\n\n            try {\n                $plan = $client-\u003eplans()-\u003ecreate($planForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/plans/{id}\":\n    delete:\n      description: |\n        Delete a Plan with predefined identifier string\n      responses:\n        \"204\":\n          description: Plan was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a Plan\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u003eplans()-\u003edelete('planId');\n    get:\n      description: |\n        Retrieve a plan with specified identifier string\n      responses:\n        \"200\":\n          description: Plan was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a plan\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $plan = $client-\u003eplans()-\u003eload('planId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a Plan with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Plan\"\n      responses:\n        \"200\":\n          description: Plan was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        \"201\":\n          description: Plan was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update a Plan with predefined ID\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $planForm = new Rebilly\\Entities\\Plan();\n            $planForm-\u003esetName('TestPlan');\n            $planForm-\u003esetCurrency('USD');\n            $planForm-\u003esetTrialAmount(1);\n            $planForm-\u003esetTrialPeriodUnit('day');\n            $planForm-\u003esetTrialPeriodLength(1);\n\n            try {\n                $plan = $client-\u003eplans()-\u003eupdate('planId', $planForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /products:\n    get:\n      description: |\n        Retrieve a list of products\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of products was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of products\n      tags:\n        - Products\n    post:\n      description: |\n        Create a Product\n      requestBody:\n        $ref: \"#/components/requestBodies/Product\"\n      responses:\n        \"201\":\n          description: Product was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a Product\n      tags:\n        - Products\n  \"/products/{id}\":\n    delete:\n      description: |\n        Delete a product with predefined identifier string\n      responses:\n        \"204\":\n          description: Product was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a product\n      tags:\n        - Products\n    get:\n      description: |\n        Retrieve a product with specified identifier string\n      responses:\n        \"200\":\n          description: Product was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a product\n      tags:\n        - Products\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create a product with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Product\"\n      responses:\n        \"200\":\n          description: Product was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"201\":\n          description: Product was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a product with predefined ID\n      tags:\n        - Products\n  /queue/payments:\n    get:\n      description: |\n        Retrieve a scheduled payment list\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: Successful retrieve the payments list that still waiting to be\n            processed\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Payment\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a scheduled payment list\n      tags:\n        - Payments\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payments = $client-\u003epayments()-\u003esearchInQueue([\n                'filter' =\u003e 'currency:USD',\n            ]);\n  \"/queue/payments/{id}\":\n    get:\n      description: |\n        Retrieve a payment with specified identifier string\n      responses:\n        \"200\":\n          description: Successful retrieve the payment that still waiting to be processed\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"303\":\n          description: Payment was successfully processed and moved out from queue\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a scheduled payment\n      tags:\n        - Payments\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payment = $client-\u003epayments()-\u003eloadFromQueue('paymentId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      requestBody:\n        $ref: \"#/components/requestBodies/Payment\"\n      responses:\n        \"200\":\n          description: Payment was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          description: Payment is already handled and cannot be updated\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Update pending payment\n      tags:\n        - Payments\n  /shipping-zones:\n    get:\n      description: |\n        Retrieve a list of shipping zones\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of shipping zones was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShippingZone\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of shipping zones\n      tags:\n        - Shipping Zones\n    post:\n      description: |\n        Create a Shipping Zone\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ShippingZone\"\n        description: Shipping Zone resource\n        required: true\n      responses:\n        \"201\":\n          description: Shipping Zone was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a Shipping Zone\n      tags:\n        - Shipping Zones\n  \"/shipping-zones/{id}\":\n    delete:\n      description: |\n        Delete a shipping zone with predefined identifier string\n      responses:\n        \"204\":\n          description: Shipping zone was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a shipping zone\n      tags:\n        - Shipping Zones\n    get:\n      description: |\n        Retrieve a shipping zone with specified identifier string\n      responses:\n        \"200\":\n          description: Shipping zone was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a shipping zone\n      tags:\n        - Shipping Zones\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create a shipping zone with predefined identifier string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ShippingZone\"\n        description: Shipping zone resource\n        required: true\n      responses:\n        \"200\":\n          description: Shipping zone was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n        \"201\":\n          description: Shipping zone was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Create a shipping zone with predefined ID\n      tags:\n        - Shipping Zones\n  /subscription-cancellations:\n    get:\n      description: Retrieve a list of cancellations for all subscriptions\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of cancellations was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Cancellation\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of cancellations\n      tags:\n        - Subscriptions\n    post:\n      description: Cancel a subscription or preview the cancellation parameters before that\n      requestBody:\n        $ref: \"#/components/requestBodies/Cancellation\"\n      responses:\n        \"201\":\n          description: Cancellation was created, subscription is or will be deactivated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Cancellation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Cancel a subscription\n      tags:\n        - Subscriptions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionCancelForm = new Rebilly\\Entities\\SubscriptionCancel();\n\n            $subscriptionCancelForm-\u003esetEffectiveTime(new DateTime());\n\n\n            try {\n                $subscription = $client-\u003esubscriptions()-\u003ecancel('subscriptionId', $subscriptionCancelForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/subscription-cancellations/{id}\":\n    delete:\n      description: Delete a subscription's cancellation. Only draft can be deleted.\n      responses:\n        \"204\":\n          description: Cancellaton was deleted\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          description: Cancellaton cannot be deleted\n      summary: Delete a cancellation\n      tags:\n        - Subscriptions\n    get:\n      description: Retrieve a subscription cancellatopn with specified identifier string\n      responses:\n        \"200\":\n          description: Cancellation was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Cancellation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a subscription cancellatopn\n      tags:\n        - Subscriptions\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: Cancel a subscription\n      requestBody:\n        $ref: \"#/components/requestBodies/Cancellation\"\n      responses:\n        \"200\":\n          description: Cancellation was updated, subscription is or will be deactivated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Cancellation\"\n        \"201\":\n          description: Cancellation was created, subscription is or will be deactivated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Cancellation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Cancel a subscription\n      tags:\n        - Subscriptions\n  /subscription-reactivations:\n    get:\n      description: Retrieve a list of reactivations for all subscriptions\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of reactivations was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Reactivation\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of reactivations\n      tags:\n        - Subscriptions\n    post:\n      description: Reactivate a subscription\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Reactivation\"\n        description: Reactivation resource\n        required: true\n      responses:\n        \"201\":\n          description: \u003e\n            Reactivation was created, subscription is active and won't be\n            deactivated.\n\n            If there was a cancellation with status \"confirmed\", it is revoked.\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Reactivation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Reactivate a subscription\n      tags:\n        - Subscriptions\n  \"/subscription-reactivations/{id}\":\n    get:\n      description: Retrieve a subscription reactivation with specified identifier string\n      responses:\n        \"200\":\n          description: Reactivation was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Reactivation\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a subscription reactivation\n      tags:\n        - Subscriptions\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /subscriptions:\n    get:\n      description: |\n        Retrieve a list of subscriptions\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n            default: application/json\n      responses:\n        \"200\":\n          description: A list of subscriptions was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of subscriptions\n      tags:\n        - Subscriptions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $subscriptions = $client-\u003esubscriptions()-\u003esearch([\n                'filter' =\u003e 'customerId:testCustomerId',\n            ]);\n    post:\n      description: |\n        Create a subscription\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription\"\n      responses:\n        \"201\":\n          description: Subscription was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create a subscription\n      tags:\n        - Subscriptions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionForm = new Rebilly\\Entities\\Subscription();\n\n            $subscriptionForm-\u003esetCustomerId('customerId');\n\n            $subscriptionForm-\u003esetWebsiteId('websiteId');\n\n            $subscriptionForm-\u003esetPlanId('planId');\n\n            $subscriptionForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $subscription = $client-\u003esubscriptions()-\u003ecreate($subscriptionForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/subscriptions/{id}\":\n    get:\n      description: |\n        Retrieve a subscription with specified identifier string\n      responses:\n        \"200\":\n          description: Subscription was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a subscription\n      tags:\n        - Subscriptions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $subscription = $client-\u003esubscriptions()-\u003eload('subscriptionId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    put:\n      description: |\n        Create or update a subscription with predefined identifier string\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription\"\n      responses:\n        \"200\":\n          description: Subscription was updated\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"201\":\n          description: Subscription was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Create or update a subscription with predefined ID\n      tags:\n        - Subscriptions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionForm = new Rebilly\\Entities\\Subscription();\n\n            $subscriptionForm-\u003esetCustomerId('customerId');\n\n            $subscriptionForm-\u003esetWebsiteId('websiteId');\n\n            $subscriptionForm-\u003esetPlanId('planId');\n\n            $subscriptionForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $subscription = $client-\u003esubscriptions()-\u003eupdate('subscriptionId', $subscriptionForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/subscriptions/{id}/change-plan\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: \u003e\n        Change a subscription's plan and designate when and if there should be\n        pro rata credits given.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionChange\"\n        description: Change the plan\n        required: true\n      responses:\n        \"200\":\n          description: Subscription was changed\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Change a subscription's plan\n      tags:\n        - Subscriptions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionChangePlanForm = new\n            Rebilly\\Entities\\SubscriptionChangePlan();\n\n            $subscriptionChangePlanForm-\u003esetPlanId('newPlanId');\n\n            $subscriptionChangePlanForm-\u003esetRenewalPolicy('retain');\n\n            $subscriptionChangePlanForm-\u003esetPreview(true);\n\n            $subscriptionChangePlanForm-\u003esetProrated(true);\n\n            $subscriptionChangePlanForm-\u003esetEffectiveTime('2018-02-02 00:00:00');\n\n\n            try {\n                $subscription = $client-\u003esubscriptions()-\u003echangePlan('subscriptionId', $subscriptionChangePlanForm);\n                echo $subscription-\u003egetLineItemSubtotal();\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/subscriptions/{id}/interim-invoice\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: \u003e\n        Issue an interim invoice for a subscription, typically used in\n        conjunction with plan changes and pro rata adjustments.\n\n        This process creates an invoice, adds the subscription's line items to the invoice, and issues the invoice, and applies\n\n        payment to it if a transaction id is supplied.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionInvoice\"\n        description: Issue an interim invoice\n        required: true\n      responses:\n        \"201\":\n          description: Invoice was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Issue an interim invoice for a subscription\n      tags:\n        - Subscriptions\n  \"/subscriptions/{id}/matched-rules\":\n    get:\n      description: Get matched rules for the subscription\n      responses:\n        \"200\":\n          description: List of matched rules was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MatchedRule\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get matched rules for the subscription\n      tags:\n        - Subscriptions\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  /tokens:\n    get:\n      description: |\n        Retrieve a list of tokens\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          description: A list of tokens was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentToken\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n      summary: Retrieve a list of tokens\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCardTokens = $client-\u003epaymentCardTokens()-\u003esearch([\n                'filter' =\u003e 'token:string',\n            ]);\n    post:\n      description: |\n        Create a token\n      requestBody:\n        $ref: \"#/components/requestBodies/PaymentToken\"\n      responses:\n        \"201\":\n          description: Token was created\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      security:\n        - PublishableApiKey: []\n      summary: Create a payment token\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardTokenForm = new Rebilly\\Entities\\PaymentCardToken();\n\n            $paymentCardTokenForm-\u003esetBillingAddress([\n                'firstName' =\u003e 'John',\n                'lastName' =\u003e 'Doe',\n                'organization' =\u003e 'Test LTD',\n                'address' =\u003e 'Test street 5',\n                'address2' =\u003e 'Test house 5',\n                'city' =\u003e 'New York',\n                'region' =\u003e 'Long Island',\n                'country' =\u003e 'US',\n                'postalCode' =\u003e '123456',\n                'emails' =\u003e [\n                    [\n                        'label' =\u003e 'main',\n                        'value' =\u003e 'johndoe@testemail.com',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'secondary',\n                        'value' =\u003e 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u003e [\n                    [\n                        'label' =\u003e 'work',\n                        'value' =\u003e '+123456789',\n                        'primary' =\u003e true,\n                    ],\n                    [\n                        'label' =\u003e 'home',\n                        'value' =\u003e '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            $paymentInstrumentForm = new Entities\\PaymentInstruments\\PaymentCardPaymentInstrument();\n\n            $paymentInstrumentForm-\u003esetPan('4111111111111111');\n\n            $paymentInstrumentForm-\u003esetExpYear(2025);\n\n            $paymentInstrumentForm-\u003esetExpMonth(8);\n\n            $paymentInstrumentForm-\u003esetCvv(123);\n\n\n            $paymentCardTokenForm-\u003esetPaymentInstrument($paymentInstrumentForm);\n\n\n            try {\n                $paymentCardToken = $client-\u003epaymentCardTokens()-\u003ecreate($paymentCardTokenForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/tokens/{token}\":\n    get:\n      description: |\n        Retrieve a token with specified identifier string\n      responses:\n        \"200\":\n          description: Token was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - PublishableApiKey: []\n      summary: Retrieve a token\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCardToken = $client-\u003epaymentCardTokens()-\u003eload('tokenId');\n    parameters:\n      - description: The token identifier string\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n  \"/tokens/{token}/expiration\":\n    parameters:\n      - description: The token identifier string\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n    post:\n      description: |\n        Expire a token\n      requestBody:\n        $ref: \"#/components/requestBodies/PaymentToken\"\n      responses:\n        \"201\":\n          description: Token expiration successful\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/PaymentToken\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          description: Invalid data was sent\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/InvalidError\"\n      summary: Expire a token\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            try {\n                $paymentCardToken = $client-\u003epaymentCardTokens()-\u003eexpire('tokenId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  /transactions:\n    get:\n      description: |\n        Retrieve a list of transactions\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - description: The response media type\n          in: header\n          name: Accept\n          schema:\n            type: string\n            enum:\n              - application/json\n              - text/csv\n            default: application/json\n      responses:\n        \"200\":\n          description: A list of transactions was retrieved successfully\n          headers:\n            Pagination-Limit:\n              description: Items per page limit\n              schema:\n                type: integer\n            Pagination-Offset:\n              description: Pagination offset\n              schema:\n                type: integer\n            Pagination-Total:\n              description: Total items count\n              schema:\n                type: integer\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n                type: array\n            text/csv:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"422\":\n          $ref: \"#/components/responses/InvalidDataError\"\n      summary: Retrieve a list of transactions\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $transactions = $client-\u003etransactions()-\u003esearch([\n                'filter' =\u003e 'result:approved',\n            ]);\n  \"/transactions/{id}\":\n    get:\n      description: |\n        Retrieve a Transaction with specified identifier string\n      responses:\n        \"200\":\n          description: Transaction was retrieved successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $transaction = $client-\u003etransactions()-\u003eload('transactionId');\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  \"/transactions/{id}/cancel\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: Cancel a scheduled transaction. Once handled a transaction cannot be\n        canceled\n      responses:\n        \"201\":\n          description: Successful cancel the payment\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Cancel a pending or suspended transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            try {\n                $payment = $client-\u003etransactions()-\u003ecancel('transactionId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u003egetMessage();\n            }\n  \"/transactions/{id}/gateway-logs\":\n    get:\n      description: Retrieve Gateway communication Logs for Transaction with specified\n        identifier string\n      responses:\n        \"200\":\n          description: Logs were retrieved successfully\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/TransactionGatewayLog\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Transaction Gateway Logs\n      tags:\n        - Transactions\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  \"/transactions/{id}/matched-rules\":\n    get:\n      description: Get matched rules for the transaction\n      responses:\n        \"200\":\n          description: List of matched rules was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/MatchedRule\"\n                type: array\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get matched rules for the transaction\n      tags:\n        - Transactions\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n  \"/transactions/{id}/refund\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n    post:\n      description: \u003e\n        Refund a Transaction with specified identifier string.\n\n        Note that the refund will be in the same currency as the original transaction.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransactionRefund\"\n        description: Transaction resource\n        required: true\n      responses:\n        \"201\":\n          description: Transaction was refunded successfully\n          headers:\n            Rate-Limit-Limit:\n              description: The number of allowed requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Remaining:\n              description: The number of remaining requests in the current period\n              schema:\n                type: integer\n            Rate-Limit-Reset:\n              description: \u003e\n                The date in format defined by [RFC\n                822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n                when the current period will reset\n              schema:\n                type: string\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n        \"401\":\n          $ref: \"#/components/responses/AccessForbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Refund a Transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $transaction = $client-\u003etransactions()-\u003erefund('transactionId',\n            1.99);\nx-tagGroups:\n  - name: Customers\n    tags:\n      - Customers\n      - Customer Authentication\n      - Custom Fields\n      - Contacts\n      - Files\n      - KYC Documents\n  - name: Payment Instruments\n    tags:\n      - Bank Accounts\n      - Payment Cards\n      - Payment Tokens\n      - PayPal Accounts\n      - Payment Instrument Validation\n  - name: Payments\n    tags:\n      - 3D Secure\n      - Payments\n      - Transactions\n      - Disputes\n      - Blacklists\n  - name: Invoices \u0026 Subscriptions\n    tags:\n      - Coupons\n      - Invoices\n      - Plans\n      - Products\n      - Shipping Zones\n      - Subscriptions\n      - Taxes\n  - name: Misc\n    tags:\n      - Reports\n      - Users\nservers:\n  - description: Live Server\n    url: https://api.rebilly.com/v2.1\n  - description: Sandbox Server\n    url: https://api-sandbox.rebilly.com/v2.1\ncomponents:\n  parameters:\n    collectionExpand:\n      description: Expand response to get full related object intead of ID.  See the expand\n        guide for more info.\n      in: query\n      name: expand\n      schema:\n        type: string\n    collectionFields:\n      description: Limit the returned fields to the list specified, separated by\n        comma.  Note that id is always returned.\n      in: query\n      name: fields\n      schema:\n        type: string\n    collectionFilter:\n      description: \u003e\n        The collection items filter requires a special format.\n\n        Use \",\" for multiple allowed values.  Use \";\" for multiple fields.\n\n        See the [filter guide](https://rebilly.github.io/RebillyAPI/#section/Using-filter) for more options and examples about this format.\n      in: query\n      name: filter\n      schema:\n        type: string\n    collectionLimit:\n      description: The collection items limit\n      in: query\n      name: limit\n      schema:\n        type: integer\n        minimum: 0\n        maximum: 1000\n    collectionOffset:\n      description: The collection items offset\n      in: query\n      name: offset\n      schema:\n        type: integer\n        minimum: 0\n    collectionQuery:\n      description: The partial search of the text fields.\n      in: query\n      name: q\n      schema:\n        type: string\n    collectionSort:\n      description: The collection items sort field and order (prefix with \"-\" for\n        descending sort).\n      in: query\n      name: sort\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n    hash:\n      description: The token identifier string\n      in: path\n      name: hash\n      required: true\n      schema:\n        type: string\n    mediaType:\n      description: The response media type\n      in: header\n      name: Accept\n      schema:\n        type: string\n        enum:\n          - application/json\n        default: application/json\n    resourceId:\n      description: The resource identifier string\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n    rulesVersion:\n      description: The rule set version. Expand response to get full related object instead\n        of ID.  See the expand guide for more info.\n      in: path\n      name: version\n      required: true\n      schema:\n        type: integer\n        minimum: 1\n    systemEventType:\n      description: The event type\n      in: path\n      name: eventType\n      required: true\n      schema:\n        type: string\n  responses:\n    AccessForbidden:\n      description: Access forbidden, invalid API-KEY was used\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Conflict:\n      description: Conflict\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Found:\n      description: Resource was moved\n      headers:\n        Location:\n          schema:\n            type: string\n    InvalidDataError:\n      description: Invalid data was sent\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: \"#/components/schemas/InvalidError\"\n    NotFound:\n      description: Resource was not found\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n  requestBodies:\n    Payment:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Payment\"\n      description: Payment resource\n      required: true\n    BankAccount:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/BankAccount\"\n      description: BankAccount resource\n      required: true\n    Contact:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Contact\"\n      description: Contact resource\n      required: true\n    Attachment:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Attachment\"\n      description: Attachment resource\n      required: true\n    Blacklist:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Blacklist\"\n      description: Blacklist resource\n      required: true\n    Coupon:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Coupon\"\n      description: Coupon resource\n      required: true\n    Credential:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Credential\"\n      description: Credential resource\n      required: true\n    Customer:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Customer\"\n      description: Customer resource\n      required: true\n    Dispute:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Dispute\"\n      description: Dispute resource\n      required: true\n    Invoice:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Invoice\"\n      description: Invoice resource\n      required: true\n    Plan:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Plan\"\n      description: Plan resource\n      required: true\n    Product:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Product\"\n      description: Product resource\n      required: true\n    Cancellation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Cancellation\"\n      description: Cancellation resource\n      required: true\n    Subscription:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Subscription\"\n      description: Subscription resource\n      required: true\n    PaymentToken:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PaymentToken\"\n      description: PaymentToken resource\n      required: true\n  securitySchemes:\n    JWT:\n      description: \u003e\n        You can create a JSON Web Token (JWT) via our [Sessions\n        resource](https://rebilly.github.io/RebillyUserAPI/#tag/Sessions%2Fpaths%2F~1signin%2Fpost).\n\n        Usage format: `Bearer \u003cJWT\u003e`\n      in: header\n      name: Authorization\n      type: apiKey\n      x-scheme: bearer\n      x-type: http\n    PublishableApiKey:\n      description: \u003e\n        Only for the Tokens resource.\n\n        You can create a Publishable API Key via our [API Keys resource](https://rebilly.github.io/RebillyUserAPI/#tag/API-Keys), by specifying the type as `publishable`.\n      in: header\n      name: Authorization\n      type: apiKey\n    SecretApiKey:\n      description: \u003e\n        When you sign up for an account, you are given your first secret API\n        key.\n\n        To do so please [follow this link.](https://app.rebilly.com/signup)\n\n        Also you can generate additional API keys, and delete API keys (as you may\n\n        need to rotate your keys in the future).\n      in: header\n      name: REB-APIKEY\n      type: apiKey\n  schemas:\n    A1Gateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: A1Gateway credentials object\n              properties:\n                accountId:\n                  description: A1Gateway account ID\n                  type: string\n                password:\n                  description: A1Gateway password\n                  format: password\n                  type: string\n              required:\n                - accountId\n                - password\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/A1GatewayMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: A1Gateway config\n    A1GatewayMpis:\n      description: A1Gateway Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    AmexVPC:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: AmexVPC credentials object\n              properties:\n                accessCode:\n                  description: Access Code\n                  format: password\n                  type: string\n                merchantId:\n                  description: Merchant ID\n                  type: string\n                password:\n                  description: Password (used for refund, void and capture)\n                  format: password\n                  type: string\n                url:\n                  description: Virtual Payment Client URL\n                  type: string\n                user:\n                  description: User (used for refund, void and capture)\n                  type: string\n              required:\n                - url\n                - merchantId\n                - accessCode\n                - user\n                - password\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: AmexVPC config\n    AmountAdjustment:\n      discriminator:\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - none\n            - partial\n            - discount\n          type: string\n      required:\n        - method\n      type: object\n    AmountRestrictions:\n      properties:\n        currency:\n          description: Currency (three letter ISO 4217 code)\n          type: string\n        max:\n          description: The maximum amount allowed\n          format: double\n          minimum: 0\n          type: number\n        min:\n          description: The minimum amount allowed\n          format: double\n          minimum: 0\n          type: number\n      required:\n        - currency\n        - min\n      type: object\n    ApprovalUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - approvalUrl\n          type: string\n      required:\n        - rel\n      type: object\n    AstroPayCard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: AstroPay Card credentials object\n              properties:\n                secret_key:\n                  description: AstroPay Card secret key\n                  format: password\n                  type: string\n                x_login:\n                  description: AstroPay Card login\n                  type: string\n                x_tran_key:\n                  description: AstroPay Card transaction key\n                  format: password\n                  type: string\n              required:\n                - x_login\n                - x_tran_key\n                - secret_key\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: AstroPay Card config\n    Attachment:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/FileLink\"\n              - $ref: \"#/components/schemas/AttachmentResourceLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Creation date/time\n        description:\n          description: The Attachment description\n          type: string\n        fileId:\n          description: Linked File object id\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        name:\n          description: The Original Attachment name\n          type: string\n        relatedId:\n          description: Linked object Id\n          type: string\n        relatedType:\n          description: Linked object type\n          enum:\n            - customer\n            - dispute\n            - invoice\n            - note\n            - payment\n            - plan\n            - product\n            - subscription\n            - transaction\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Latest update date/time\n      required:\n        - fileId\n        - relatedId\n        - relatedType\n      type: object\n    AttachmentResourceLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - customer\n            - dispute\n            - invoice\n            - note\n            - payment\n            - plan\n            - product\n            - subscription\n            - transaction\n          type: string\n      required:\n        - rel\n      type: object\n    AuthTransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - authTransaction\n          type: string\n      required:\n        - rel\n      type: object\n    AuthenticationOptions:\n      properties:\n        authTokenTtl:\n          description: The default lifetime of the auth-token in seconds\n          type: integer\n        credentialTtl:\n          description: The default lifetime of the credential in seconds\n          type: integer\n        passwordPattern:\n          description: Allowed password pattern\n          type: string\n        resetTokenTtl:\n          description: The default lifetime of the reset-token in seconds\n          type: integer\n      type: object\n    AuthenticationToken:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        credentialId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The credential's ID\n          readOnly: true\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The token's customer ID\n          readOnly: true\n        expiredTime:\n          description: Token's expired time\n          format: date-time\n          type: string\n        password:\n          description: The token's password (write-only)\n          format: password\n          type: string\n        token:\n          description: The token identifier string\n          readOnly: true\n          type: string\n        username:\n          description: The token's username\n          type: string\n      required:\n        - username\n        - password\n      type: object\n    AuthorizeNet:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiLoginId:\n                  description: AuthorizeNet Gateway api login ID\n                  type: string\n                transactionKey:\n                  description: AuthorizeNet Gateway Transaction Key\n                  format: password\n                  type: string\n              required:\n                - apiLoginId\n                - transactionKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: AuthorizeNet Gateway config\n    BankAccount:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        accountNumber:\n          description: Bank's Account Number. Required if bank account is not created from\n            Token. This field is write-only\n          type: string\n        accountType:\n          description: Banks's Account type. Required if bank account is not created from\n            Token\n          type: string\n        address:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The Address. Required if bank account is not created from Token\n        bankName:\n          description: Bank's name.\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Bank Account created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Customer's ID.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The bank account identifier string\n          readOnly: true\n        routingNumber:\n          description: Bank's Routing Number. Required if bank account is not created from\n            Token. This field is write-only\n          type: string\n        status:\n          description: Bank Account status\n          enum:\n            - active\n            - deactivated\n          type: string\n        token:\n          description: Bank Account Token. Use without any other fields\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Bank Account updated time\n      type: object\n    BankAccountLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - bankAccount\n          type: string\n      required:\n        - rel\n      type: object\n    Beanstream:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiPasscode:\n                  description: Beanstream Gateway API Passcode\n                  format: password\n                  type: string\n                merchantId:\n                  description: Beanstream Gateway merchant ID\n                  type: string\n              required:\n                - merchantId\n                - apiPasscode\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Beanstream Gateway config\n    Blacklist:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The blacklist created time\n        expiredTime:\n          description: The blacklist expired time\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The blacklist identifier string\n          readOnly: true\n        type:\n          description: The blacklist type\n          enum:\n            - payment-card-id\n            - customer-id\n            - email\n            - ip-address\n            - country\n            - fingerprint\n            - bin\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The blacklist updated time\n        value:\n          description: The blacklist value\n          type: string\n      required:\n        - type\n        - value\n      type: object\n    BraintreePayments:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantAccountId:\n                  description: BraintreePayments merchant account ID\n                  format: password\n                  type: string\n                merchantId:\n                  description: BraintreePayments merchant ID\n                  format: password\n                  type: string\n                privateKey:\n                  description: BraintreePayments Private Key\n                  format: password\n                  type: string\n                publicKey:\n                  description: BraintreePayments Public Key\n                  type: string\n              required:\n                - publicKey\n                - privateKey\n                - merchantId\n                - merchantAccountId\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: BraintreePayments Gateway config\n    CancelUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - cancelUrl\n          type: string\n      required:\n        - rel\n      type: object\n    Cancellation:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        appliedInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The identifier of the invoice where the cancellation fees or credits\n            are applied.\n          readOnly: true\n        canceledBy:\n          default: customer\n          description: Who did the cancellation\n          enum:\n            - merchant\n            - customer\n          type: string\n        canceledTime:\n          description: The cancellation time (when the status is confirmed which is by\n            default unless specified \"draft\").\n          format: date-time\n          readOnly: true\n          type: string\n        churnTime:\n          description: The time when the subscription will be deactivated.\n          format: date-time\n          type: string\n        createdTime:\n          description: The time of resource creation (when it is posted).\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          description: Cancel reason description in free form\n          maxLength: 255\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Cancellation identifier\n          readOnly: true\n        lineItemSubtotal:\n          description: Subtotal of the line items which will be added after the\n            subscription's cancellation\n          example: 49.95\n          readOnly: true\n          type: number\n        lineItems:\n          description: Items to be added to the new invoice. Proration item is generated\n            and added automatically.\n          items:\n            description: Line item\n            properties:\n              description:\n                description: Description of line item\n                type: string\n              periodEndTime:\n                description: Date-time when the period ends for this item\n                format: date-time\n                type: string\n              periodStartTime:\n                description: Date-time when the period begins for this item\n                format: date-time\n                type: string\n              quantity:\n                default: 1\n                description: Quantity of line item\n                example: 1\n                type: integer\n              type:\n                description: Type of line item\n                enum:\n                  - debit\n                  - credit\n                type: string\n              unitPriceAmount:\n                description: Unit price of the line item\n                example: 49.95\n                format: double\n                type: number\n              unitPriceCurrency:\n                description: Currency ISO code\n                example: USD\n                type: string\n            required:\n              - type\n              - unitPriceAmount\n              - unitPriceCurrency\n            type: object\n          type: array\n        prorated:\n          default: false\n          description: \u003e\n            Defines if the customer gets a pro-rata credit for the time\n            remaining between `churnTime` and\n\n            subscription's next renewal time.\n          type: boolean\n        proratedInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the invoice on which the cancellation proration is\n            calculated.\n          readOnly: true\n        reason:\n          default: other\n          description: Cancellation reason\n          enum:\n            - did-not-use\n            - did-not-want\n            - missing-features\n            - bugs-or-problems\n            - do-not-remember\n            - risk-warning\n            - contract-expired\n            - too-expensive\n            - other\n            - billing-failure\n          type: string\n        status:\n          default: confirmed\n          description: \u003e\n            \"draft\" defines that the cancellation isn't applied on an invoice\n            and subscription but\n\n            can be inspected to see the charge.\n\n            \"confirmed\" will set a subscription to be canceled when the `churnTime` is reached.\n\n            \"completed\" is a read-only status which is set by the system when the churnTime is reached.\n\n            The cancellation may not be changed or deleted when the status is \"completed\".\n          enum:\n            - draft\n            - confirmed\n            - completed\n            - revoked\n          type: string\n        subscriptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the canceled subscription\n      required:\n        - subscriptionId\n        - churnTime\n      type: object\n    CardinalCommerce:\n      allOf:\n        - $ref: \"#/components/schemas/PayvisionMpis\"\n        - properties:\n            merchantId:\n              description: Cardinal MerchantId\n              type: string\n            processorId:\n              description: Cardinal ProcessorId\n              type: string\n            transactionPwd:\n              description: Cardinal TransactionPwd\n              format: password\n              type: string\n          required:\n            - merchantId\n            - processorId\n            - transactionPwd\n          type: object\n      description: CardinalCommerce Mpi Credentials\n    Cashflows:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                authId:\n                  description: Cashflows Gateway auth ID\n                  type: string\n                authPassword:\n                  description: Cashflows Gateway auth password\n                  format: password\n                  type: string\n              required:\n                - authPassword\n                - authId\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Cashflows Gateway config\n    Cayan:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantKey:\n                  description: Cayan Gateway merchant key\n                  format: password\n                  type: string\n                merchantName:\n                  description: Cayan Gateway merchant name\n                  type: string\n                merchantSiteId:\n                  description: Cayan Gateway merchant site ID\n                  type: string\n              required:\n                - merchantSiteId\n                - merchantName\n                - merchantKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Cayan Gateway config\n    Chase:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                coNumber:\n                  description: Chase Gateway CO Number used for delimited file reports\n                  type: string\n                divisionId:\n                  description: Chase Gateway division ID\n                  type: string\n                partialAuth:\n                  default: false\n                  description: Support for Partial Auths\n                  type: boolean\n                password:\n                  description: Chase Gateway Net Connect password\n                  format: password\n                  type: string\n                username:\n                  description: Chase Gateway Net Connect username\n                  type: string\n              required:\n                - username\n                - password\n                - coNumber\n                - divisionId\n                - partialAuth\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Chase Gateway config\n    CommonScheduleInstruction:\n      description: The calculation instruction of scheduled time\n      discriminator:\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - auto\n            - immediately\n            - date-interval\n            - day-of-month\n            - day-of-week\n          type: string\n      required:\n        - method\n      type: object\n    Condition:\n      discriminator:\n        propertyName: op\n      properties:\n        op:\n          description: The condition operation\n          enum:\n            - and\n            - or\n            - not\n            - between\n            - equals\n            - in\n            - gt\n            - gte\n            - lt\n            - lte\n          type: string\n      required:\n        - op\n      type: object\n    Contact:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        address:\n          description: The contact street address\n          maxLength: 60\n          type: string\n        address2:\n          description: The contact street address (second line)\n          maxLength: 60\n          type: string\n        city:\n          description: The contact city\n          maxLength: 45\n          type: string\n        country:\n          description: The contact country ISO Alpha-2 code\n          pattern: ^[A-Z]{2}$\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The contact created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The contact customer ID\n        emails:\n          $ref: \"#/components/schemas/ContactEmails\"\n        firstName:\n          description: The contact first name\n          type: string\n        hash:\n          description: A hash that can be used to compare multiple contacts for identical\n            attribute values, excluding id, customer id, createdTime,\n            updatedTime.\n          example: 056ae6d97c788b9e98b049ebafd7b229bf852221\n          maxLength: 40\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The contact identifier string\n          readOnly: true\n        lastName:\n          description: The contact last name\n          type: string\n        organization:\n          description: The contact organization\n          type: string\n        phoneNumbers:\n          $ref: \"#/components/schemas/ContactPhoneNumbers\"\n        postalCode:\n          description: The contact postal code\n          maxLength: 10\n          type: string\n        region:\n          description: The contact region (state)\n          maxLength: 45\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The contact updated time\n      type: object\n    ContactEmails:\n      description: The contact emails\n      items:\n        properties:\n          label:\n            description: The email label\n            type: string\n          primary:\n            description: True if email is primary\n            type: boolean\n          value:\n            description: The email value\n            type: string\n        required:\n          - label\n          - value\n        type: object\n      type: array\n    ContactObject:\n      properties:\n        address:\n          description: The contact street address\n          maxLength: 60\n          type: string\n        address2:\n          description: The contact street address (second line)\n          maxLength: 60\n          type: string\n        city:\n          description: The contact city\n          maxLength: 45\n          type: string\n        country:\n          description: The contact country ISO Alpha-2 code\n          pattern: ^[A-Z]{2}$\n          type: string\n        emails:\n          $ref: \"#/components/schemas/ContactEmails\"\n        firstName:\n          description: The contact first name\n          type: string\n        hash:\n          description: A hash that can be used to compare multiple contacts for identical\n            attribute values\n          example: 056ae6d97c788b9e98b049ebafd7b229bf852221\n          maxLength: 40\n          readOnly: true\n          type: string\n        lastName:\n          description: The contact last name\n          type: string\n        organization:\n          description: The contact organization\n          type: string\n        phoneNumbers:\n          $ref: \"#/components/schemas/ContactPhoneNumbers\"\n        postalCode:\n          description: The contact postal code\n          maxLength: 10\n          type: string\n        region:\n          description: The contact region (state)\n          maxLength: 45\n          type: string\n      type: object\n    ContactPhoneNumbers:\n      description: The contact phone numbers\n      items:\n        properties:\n          label:\n            description: The phone label\n            type: string\n          primary:\n            description: True if phone is primary\n            type: boolean\n          value:\n            description: The phone value\n            type: string\n        required:\n          - label\n          - value\n        type: object\n      type: array\n    Coupon:\n      description: Coupons and Discounts\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon created time\n        description:\n          description: \u003e\n            Your coupon description. When it is not empty this is used for\n            invoice discount item description,\n\n            otherwise the item's description uses coupon's redemptionCode like 'Coupon \"redemptionCode\"'\n          type: string\n        discount:\n          $ref: \"#/components/schemas/Discount\"\n        expiredTime:\n          description: Coupon's expire time (end time)\n          format: date-time\n          type: string\n        issuedTime:\n          description: Coupon's issued time (start time)\n          format: date-time\n          type: string\n        redemptionCode:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Coupon's redemption code\n          readOnly: true\n        redemptionsCount:\n          description: Coupon's redemptions count\n          minimum: 0\n          readOnly: true\n          type: integer\n        restrictions:\n          description: Coupon restrictions\n          items:\n            $ref: \"#/components/schemas/CouponRestriction\"\n          type: array\n        status:\n          description: If coupon enabled\n          enum:\n            - issued\n            - expired\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon updated time.\n      required:\n        - discount\n        - issuedTime\n      type: object\n    CouponExpiration:\n      properties:\n        expiredTime:\n          description: The coupon's expiry time, must be greater than the issued time. Null\n            or empty string will immediately expire the coupon.\n          format: date-time\n          type: string\n      required:\n        - expiredTime\n      type: object\n    CouponRedemption:\n      description: Coupons redemption log\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        additionalRestrictions:\n          description: Additional restrictions for coupon's redemptions\n          items:\n            $ref: \"#/components/schemas/RedemptionRestriction\"\n          type: array\n        canceledTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon redemption canceled time\n          readOnly: true\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon redeem time\n          readOnly: true\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        redemptionCode:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Coupon's redemption code\n      type: object\n    CouponRestriction:\n      description: Coupon restrictions\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          description: Coupon's restriction type\n          enum:\n            - discounts-per-redemption\n            - minimum-order-amount\n            - redemptions-per-customer\n            - restrict-to-invoices\n            - restrict-to-plans\n            - restrict-to-subscriptions\n            - total-redemptions\n          type: string\n      required:\n        - type\n      type: object\n    Credential:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        customerId:\n          description: The credential's customer ID\n          type: string\n        expiredTime:\n          description: The credential's expired time\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The credential identifier string\n          readOnly: true\n        password:\n          description: The credential's password\n          format: password\n          type: string\n        username:\n          description: Credential's username\n          type: string\n      required:\n        - username\n        - password\n        - customerId\n      type: object\n    Credorax:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantId:\n                  description: Credorax Gateway merchant ID\n                  type: string\n                merchantMd5Signature:\n                  description: Credorax Gateway md5 signature\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantMd5Signature\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Credorax Gateway config\n    CustomEventScheduleInstruction:\n      description: The calculation instruction of scheduled time\n      discriminator:\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - date-interval\n            - day-of-month\n            - day-of-week\n          type: string\n      required:\n        - method\n      type: object\n    CustomField:\n      description: A separate Custom Field schema\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        additionalSchema:\n          description: |\n            Additional parameters which can be added according to type:\n            Parameter Name | Types         | Description\n            -------------- | ------------- | -------------\n            allowedValues  | string, array | List of allowed values\n        description:\n          description: The custom field description\n          type: string\n        name:\n          description: The name of the custom field\n          type: string\n        type:\n          description: \u003e\n            Type value    | Description\n\n            ------------- | -------------\n\n            array         | An array of strings up to 255 characters, maximum size is 1000 elements\n\n            boolean       | true or false\n\n            date          | String of format \"full-date\" (YYYY-MM-DD) from RFC-3339 (full-date)\n\n            datetime      | String of format \"date-time\" (YYYY-MM-DDTHH:MM:SSZ) from RFC-3339 (date-time)\n\n            integer       | Cardinal value of -2^31..2^31-1\n\n            number        | Float value. It can take cardinal values also which are interpreted as float\n\n            string        | Regular string up to 255 characters\n\n            monetary      | A map of 3-letters currency code and amount, e.g. {\"currency\": \"EUR\", \"amount\": 25.30}\n          enum:\n            - array\n            - boolean\n            - datetime\n            - integer\n            - number\n            - string\n            - monetary\n          type: string\n      required:\n        - name\n        - type\n      type: object\n    Customer:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/NotesLink\"\n              - $ref: \"#/components/schemas/DefaultPaymentInstrumentLink\"\n              - $ref: \"#/components/schemas/LeadSourceLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The customer created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        defaultPaymentInstrument:\n          $ref: \"#/components/schemas/PaymentInstrument\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer identifier string\n          readOnly: true\n        invoiceCount:\n          description: An auto-incrementing number based on the sequence of invoices. If\n            set to 0, then this record is a Lead, otherwise is a Customer\n          readOnly: true\n          type: integer\n        lifetimeRevenue:\n          $ref: \"#/components/schemas/CustomerLifetimeRevenue\"\n        primaryAddress:\n          $ref: \"#/components/schemas/ContactObject\"\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The customer updated time\n      type: object\n    CustomerLifetimeRevenue:\n      properties:\n        amount:\n          description: Revenue amount in Merchant's reporting currency\n          format: double\n          type: number\n        amountUsd:\n          description: Revenue amount in USD\n          format: double\n          type: number\n        currency:\n          description: Merchant's reporting currency\n          type: string\n      readOnly: true\n      type: object\n    CustomerLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - customer\n          type: string\n      required:\n        - rel\n      type: object\n    DataCash:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                client:\n                  description: DataCash Gateway client\n                  type: string\n                delay:\n                  default: 0\n                  description: Auto Capture delay (in hours)\n                  minimum: 0\n                  type: integer\n                password:\n                  description: DataCash Gateway password\n                  format: password\n                  type: string\n                policy:\n                  default: 2\n                  description: Policy\n                  maximum: 7\n                  minimum: 0\n                  type: integer\n              required:\n                - client\n                - password\n                - policy\n                - delay\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/DataCashMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: DataCash Gateway config\n    DataCashMpi:\n      allOf:\n        - $ref: \"#/components/schemas/DataCashMpis\"\n      description: DataCash Integrated\n    DataCashMpis:\n      description: DataCash Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - DataCashMpi\n      required:\n        - name\n      type: object\n    DayOfWeek:\n      enum:\n        - Sunday\n        - Monday\n        - Tuesday\n        - Wednesday\n        - Thursday\n        - Friday\n        - Saturday\n      type: string\n    DefaultPaymentInstrumentLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - defaultPaymentInstrument\n          type: string\n      required:\n        - rel\n      type: object\n    Dengi:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                projectId:\n                  description: Dengi Gateway project ID\n                  type: string\n                publicKey:\n                  description: Dengi Gateway public key\n                  format: password\n                  type: string\n                refundKey:\n                  description: Dengi Gateway refund key\n                  format: password\n                  type: string\n              required:\n                - projectId\n                - publicKey\n                - refundKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Dengi Gateway config\n    Discount:\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          description: Discount type\n          enum:\n            - fixed\n            - percent\n          type: string\n      type: object\n    Dispute:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/TransactionLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        acquirerReferenceNumber:\n          description: The dispute's acquirer reference number\n          type: string\n        amount:\n          description: The dispute amount\n          format: double\n          type: number\n        category:\n          description: The dispute's category\n          enum:\n            - fraud\n            - unrecognized\n            - product-not-received\n            - product-unacceptable\n            - product-not-refunded\n            - duplicate\n            - subscription-canceled\n            - uncategorized\n          readOnly: true\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Dispute created time\n        currency:\n          description: The dispute currency ISO Alpha code\n          type: string\n        customerId:\n          description: The dispute's customer ID\n          readOnly: true\n          type: string\n        deadlineTime:\n          description: Dispute deadline time\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The dispute identifier string\n          readOnly: true\n        postedTime:\n          description: Dispute posted time\n          format: date-time\n          type: string\n        rawResponse:\n          description: Dispute raw response from gateway\n          readOnly: true\n          type: string\n        reasonCode:\n          description: The dispute's reason code\n          enum:\n            - \"1000\"\n            - \"12\"\n            - \"2\"\n            - \"30\"\n            - \"31\"\n            - \"35\"\n            - \"37\"\n            - \"40\"\n            - \"41\"\n            - \"42\"\n            - \"46\"\n            - \"47\"\n            - \"49\"\n            - \"50\"\n            - \"53\"\n            - \"54\"\n            - \"55\"\n            - \"57\"\n            - \"59\"\n            - \"60\"\n            - \"62\"\n            - \"7\"\n            - \"70\"\n            - \"71\"\n            - \"72\"\n            - \"73\"\n            - \"74\"\n            - \"75\"\n            - \"76\"\n            - \"77\"\n            - \"79\"\n            - \"8\"\n            - \"80\"\n            - \"81\"\n            - \"82\"\n            - \"83\"\n            - \"85\"\n            - \"86\"\n            - \"93\"\n            - \"00\"\n            - \"63\"\n            - A01\n            - A02\n            - A08\n            - F10\n            - F14\n            - F22\n            - F24\n            - F29\n            - C02\n            - C04\n            - C05\n            - C08\n            - C14\n            - C18\n            - C28\n            - C31\n            - C32\n            - M10\n            - M49\n            - P01\n            - P03\n            - P04\n            - P05\n            - P07\n            - P08\n            - P22\n            - P23\n            - R03\n            - R13\n            - M01\n            - FR1\n            - FR4\n            - FR6\n            - AL\n            - AP\n            - AW\n            - CA\n            - CD\n            - CR\n            - DA\n            - DP\n            - DP1\n            - EX\n            - IC\n            - IN\n            - IS\n            - LP\n            - N\n            - NA\n            - NC\n            - P\n            - RG\n            - RM\n            - RN1\n            - RN2\n            - SV\n            - TF\n            - TNM\n            - UA01\n            - UA02\n            - UA32\n            - UA99\n            - UA03\n            - UA10\n            - UA11\n            - UA12\n            - UA18\n            - UA20\n            - UA21\n            - UA22\n            - UA23\n            - UA28\n            - UA30\n            - UA31\n            - UA38\n            - duplicate\n            - fraudulent\n            - subscription_canceled\n            - product_unacceptable\n            - product_not_received\n            - unrecognized\n            - credit_not_processed\n            - customer_initiated\n            - incorrect_account_details\n            - insufficient_funds\n            - bank_cannot_process\n            - debit_not_authorized\n            - general\n          type: string\n        resolvedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Dispute resolved time\n        status:\n          description: The dispute's status\n          enum:\n            - response-needed\n            - under-review\n            - forfeited\n            - won\n            - lost\n            - unknown\n          type: string\n        transactionId:\n          description: The dispute's transaction ID\n          type: string\n        type:\n          description: The dispute's type\n          enum:\n            - information-request\n            - first-chargeback\n            - second-chargeback\n            - arbitration\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Dispute updated time\n      required:\n        - currency\n        - transactionId\n        - postedTime\n        - type\n        - status\n        - reasonCode\n      type: object\n    DisputeEvidence:\n      properties:\n        accessLogs:\n          description: The id of a file upload with the access logs showing the customer\n            activity.\n          type: string\n        additionalFile:\n          description: Any additional evidence as a file upload id.\n          type: string\n        customerCommunication:\n          description: The id of a file upload showing communication with the customer (for\n            example emails).\n          type: string\n        customerSignature:\n          description: The id of a file upload showing the signed contract or signed\n            delivery receipt.\n          type: string\n        deliveryProof:\n          description: The id of a file upload showing the proof of delivery.\n          type: string\n        explanation:\n          description: An explanation relevant to the category of dispute.\n          type: string\n        policy:\n          description: The id of a file upload with the policy materials (may include the\n            cancellation policy, refund policy, and terms of use).\n          type: string\n      type: object\n    DisputeLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - dispute\n          type: string\n      required:\n        - rel\n      type: object\n    Elavon:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: Elavon credentials object\n              properties:\n                ssl_merchant_id:\n                  description: Elavon merchant ID\n                  type: string\n                ssl_pin:\n                  description: Elavon pin\n                  format: password\n                  type: string\n                ssl_user_id:\n                  description: Elavon user ID\n                  type: string\n              required:\n                - ssl_merchant_id\n                - ssl_user_id\n                - ssl_pin\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Elavon config\n    Error:\n      properties:\n        error:\n          type: string\n        status:\n          maximum: 600\n          minimum: 100\n          type: integer\n      type: object\n    EventType:\n      description: Rebilly event type\n      enum:\n        - dispute-created\n        - gateway-account-requested\n        - transaction-processed\n        - subscription-activated\n        - subscription-canceled\n        - subscription-created\n        - subscription-renewed\n        - payment-card-expired\n        - invoice-past-due\n        - transaction-declined\n        - transaction-process-requested\n        - risk-score-changed\n        - transaction-discrepancy-found\n      readOnly: true\n      type: string\n    File:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/FileDownloadLink\"\n              - $ref: \"#/components/schemas/SignedLinkLink\"\n              - $ref: \"#/components/schemas/PermalinkLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The upload date/time\n        description:\n          description: The File description\n          type: string\n        extension:\n          description: The File extension\n          type: string\n        height:\n          description: Image height, applicable to images only\n          readOnly: true\n          type: integer\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        isPublic:\n          description: Is the file available publicly (without authentication). If true,\n            the permalink in the _links section contains the public URL.\n          type: boolean\n        mime:\n          description: The mime type\n          enum:\n            - image/png\n            - image/jpeg\n            - image/gif\n            - application/pdf\n            - audio/mpeg\n          readOnly: true\n          type: string\n        name:\n          description: Original File name\n          type: string\n        sha1:\n          description: Hash sum of the file\n          readOnly: true\n          type: string\n        size:\n          description: The File size in bytes\n          readOnly: true\n          type: integer\n        tags:\n          description: The tags list\n          items:\n            type: string\n          type: array\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The latest update date/time\n        url:\n          description: Write-only. If defined on POST, this would be used as a file source.\n          type: string\n        width:\n          description: Image width, applicable to images only\n          readOnly: true\n          type: integer\n      type: object\n    FileCreateRequest:\n      properties:\n        description:\n          description: The file description\n          example: My file description\n          type: string\n        file:\n          description: The file in base64 encoded format. This or `url` is required.\n          example: R0lGODlhAQABAIAAAAUEBAAAACwAAAAAAQABAAACAkQBADs=\n          type: string\n        isPublic:\n          description: The File visibility. If public a permalink is provided.\n          example: false\n          type: boolean\n        name:\n          description: The file name used for downloading\n          example: logo.png\n          type: string\n        tags:\n          description: The tags list\n          example:\n            - test\n            - tags\n          items:\n            type: string\n          type: array\n        url:\n          description: The URL of the file to upload. This or `file` is required.\n          example: https://blog.rebilly.com/wp-content/uploads/2017/09/rb_LogoInverted_Small.png\n          type: string\n      required:\n        - file\n        - url\n      type: object\n    FileDownloadLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - download\n          type: string\n      required:\n        - rel\n      type: object\n    FileLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - file\n          type: string\n      required:\n        - rel\n      type: object\n    Flexepin:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiKey:\n                  description: Flexepin API Key\n                  type: string\n                apiSecret:\n                  description: Flexepin API Secret\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Flexepin Gateway config\n    Forte:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                accountId:\n                  description: Forte Gateway account ID\n                  type: string\n                apiAccessId:\n                  description: Forte Gateway api access ID\n                  format: password\n                  type: string\n                apiSecretKey:\n                  description: Forte Gateway api secret key\n                  format: password\n                  type: string\n                locationId:\n                  description: Forte Gateway location ID\n                  type: string\n              required:\n                - accountId\n                - locationId\n                - apiAccessId\n                - apiSecretKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Forte Gateway config\n    FundSend:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                clientId:\n                  description: FundSend Gateway client ID\n                  type: string\n                secretWord:\n                  description: FundSend Gateway secret word\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: FundSend Gateway config\n    GET:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                accountId:\n                  description: GET Gateway account ID\n                  type: string\n              required:\n                - accountId\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/GETMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: GET Gateway config\n    GETMpis:\n      description: GET Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    GatewayAccount:\n      discriminator:\n        propertyName: gatewayName\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/OnBoardingUrlLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        acceptedCurrencies:\n          description: Accepted currencies (array of the currency three letter code)\n          items:\n            type: string\n          type: array\n        acquirerName:\n          description: The acquirer name\n          enum:\n            - Alipay\n            - AIB\n            - ApcoPay\n            - AstroPay Card\n            - Ipay Options\n            - B+S\n            - Bambora\n            - Bank of America\n            - Bank of Moscow\n            - Bank of Rebilly\n            - Bank One\n            - BMO Harris Bank\n            - Borgun\n            - BraintreePayments\n            - Cardknox\n            - Catalunya Caixa\n            - Chase\n            - ChinaUnionPay\n            - CIM\n            - Credorax\n            - Cryptonator\n            - EcorePay\n            - Elavon\n            - EMS\n            - Fifth Third Bank\n            - First Data Buypass\n            - First Data Nashville\n            - First Data North\n            - First Data Omaha\n            - FinTecSystems\n            - Flexepin\n            - Forte\n            - FundSend\n            - Global East\n            - Gpaysafe\n            - Heartland\n            - HSBC\n            - iCheque\n            - Ilixium\n            - Ingenico\n            - Intuit\n            - Jeton\n            - Masapay\n            - Merrick\n            - Mission Valley Bank\n            - Moneris\n            - NATWEST\n            - NMI\n            - OchaPay\n            - Other\n            - Panamerican\n            - ParamountEft\n            - Panda Bank\n            - PayPal\n            - Payr\n            - Payvision\n            - Peoples Trust Company\n            - Privatbank\n            - QQPay\n            - RBC\n            - RBS WorldPay\n            - RealTime\n            - RebillyProcessor\n            - Rotessa\n            - Skrill\n            - SMSVoucher\n            - State Bank of Mauritius\n            - Stripe\n            - TBI\n            - TrustPay\n            - TSYS\n            - UPayCard\n            - Vantiv\n            - VoicePay\n            - WeChat Pay\n            - Wells Fargo\n            - Wing Hang Bank\n            - Wirecard\n            - WorldPay\n          type: string\n        amountRestrictions:\n          description: Set restrictions on allowed amounts per currency\n          items:\n            $ref: \"#/components/schemas/AmountRestrictions\"\n          type: array\n        cityField:\n          description: The gateway account's city field (also known as line 2 descriptor)\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Gateway Account created time\n        dccMarkup:\n          description: Dynamic currency conversion markup in basis points\n          maximum: 10000\n          minimum: 1\n          type: integer\n        descriptor:\n          description: The gateway account's descriptor\n          type: string\n        dynamicDescriptor:\n          description: True, if Gateway Account allows dynamic descriptor\n          type: boolean\n        excludedDccQuoteCurrencies:\n          description: Excluded Dynamic Currency Conversion Quote Currencies\n          items:\n            type: string\n          type: array\n        gatewayName:\n          description: The payment gateway name\n          enum:\n            - A1Gateway\n            - AmexVPC\n            - ApcoPay\n            - AstroPay\n            - AstroPayCard\n            - AuthorizeNet\n            - Bambora\n            - BraintreePayments\n            - Cardknox\n            - Cashflows\n            - Cayan\n            - Chase\n            - Credorax\n            - Cryptonator\n            - DataCash\n            - Dengi\n            - EcorePay\n            - Elavon\n            - eMerchantPay\n            - Flexepin\n            - FinTecSystems\n            - FundSend\n            - Forte\n            - GET\n            - GlobalOnePay\n            - Gpaysafe\n            - iCheque\n            - Ilixium\n            - Ingenico\n            - Intuit\n            - IpayOptions\n            - JetPay\n            - Jeton\n            - Moneris\n            - MtaPay\n            - NMI\n            - OchaPay\n            - Panamerican\n            - ParamountEft\n            - PandaGateway\n            - Payeezy\n            - Payflow\n            - PayPal\n            - Payr\n            - Paysafe\n            - Payvision\n            - Plugnpay\n            - Realex\n            - Realtime\n            - RebillyProcessor\n            - Redsys\n            - Rotessa\n            - RPN\n            - Sagepay\n            - Skrill\n            - SMSVoucher\n            - StaticGateway\n            - Stripe\n            - UPayCard\n            - USAePay\n            - VantivLitle\n            - vegaaH\n            - Walpay\n            - Wirecard\n            - Worldpay\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The gateway identifier string\n          readOnly: true\n        isDown:\n          description: True if gateway is currently in downtime period.\n          readOnly: true\n          type: boolean\n        merchantCategoryCode:\n          description: The gateway account's merchant category code\n          maximum: 9950\n          minimum: 742\n          type: integer\n        method:\n          $ref: \"#/components/schemas/Method\"\n        monthlyLimit:\n          description: Monthly Limit\n          format: double\n          minimum: 0\n          type: number\n        organizationId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Organization ID\n        paymentCardSchemes:\n          description: Accepted payment card brands\n          items:\n            enum:\n              - Visa\n              - MasterCard\n              - American Express\n              - Discover\n              - Maestro\n              - Solo\n              - Electron\n              - JCB\n              - Voyager\n              - Diners Club\n              - Switch\n              - Laser\n              - China Unionpay\n            type: string\n          type: array\n        status:\n          description: The gateway account's status\n          enum:\n            - active\n            - inactive\n            - pending\n          readOnly: true\n          type: string\n        threeDSecure:\n          description: True, if Gateway Account allows 3DSecure\n          type: boolean\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Gateway Account updated time\n        websites:\n          description: Websites IDs\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/ResourceId\"\n            description: Website ID\n          type: array\n      required:\n        - gatewayName\n        - acquirerName\n        - merchantCategoryCode\n        - websites\n        - acceptedCurrencies\n        - organizationId\n      type: object\n    GatewayAccountLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - gatewayAccount\n          type: string\n      required:\n        - rel\n      type: object\n    GlobalCollect:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiKeyId:\n                  description: GlobalCollect Gateway api key ID\n                  type: string\n                apiSecretKey:\n                  description: GlobalCollect Gateway api secret key\n                  format: password\n                  type: string\n                merchantId:\n                  description: GlobalCollect Gateway merchant ID\n                  type: string\n                skipFraudService:\n                  description: GlobalCollect skip fraud service\n                  type: boolean\n              required:\n                - merchantId\n                - apiKeyId\n                - apiSecretKey\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/GlobalCollectMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: GlobalCollect Gateway config\n    GlobalCollectMpi:\n      allOf:\n        - $ref: \"#/components/schemas/GlobalCollectMpis\"\n      description: GlobalCollect Integrated\n    GlobalCollectMpis:\n      description: GlobalCollect Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - GlobalCollectMpi\n      required:\n        - name\n      type: object\n    GlobalOne:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                sharedSecret:\n                  description: GlobalOne Gateway shared secret\n                  format: password\n                  type: string\n                terminalId:\n                  description: GlobalOne Gateway terminal ID\n                  type: string\n              required:\n                - terminalId\n                - sharedSecret\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: GlobalOne Gateway config\n    Gpaysafe:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiKey:\n                  description: Gpaysafe apiKey\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Gpaysafe Gateway config\n    Ilixium:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                accountId:\n                  description: Ilixium Gateway account ID\n                  type: string\n                digestPassword:\n                  description: Ilixium Gateway digest password\n                  format: password\n                  type: string\n                merchantId:\n                  description: Ilixium Gateway merchant ID\n                  type: string\n              required:\n                - merchantId\n                - accountId\n                - digestPassword\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/IlixiumMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: Ilixium Gateway config\n    IlixiumMpi:\n      allOf:\n        - $ref: \"#/components/schemas/IlixiumMpis\"\n      description: Ilixium Integrated\n    IlixiumMpis:\n      description: IlixiumMpis Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - IlixiumMpi\n      required:\n        - name\n      type: object\n    Intuit:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                clientId:\n                  description: The Intuit client_id key\n                  type: string\n                clientSecret:\n                  description: The Intuit client_secret key\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - clientSecret\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Intuit Gateway config\n    InvalidError:\n      allOf:\n        - $ref: \"#/components/schemas/Error\"\n        - properties:\n            details:\n              items:\n                type: string\n              type: array\n          type: object\n    Invoice:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n              - $ref: \"#/components/schemas/WebsiteLink\"\n              - $ref: \"#/components/schemas/OrganizationLink\"\n              - $ref: \"#/components/schemas/LeadSourceLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        abandonedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice abandoned time\n        amount:\n          description: The Invoice's amount\n          format: double\n          readOnly: true\n          type: number\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Invoice's billing address\n        collectionPeriod:\n          description: Collection Period - difference between paidTime and issuedTime in\n            days.\n          readOnly: true\n          type: integer\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice created time\n        currency:\n          description: The currency three letter code\n          type: string\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer's ID\n        delinquentCollectionPeriod:\n          description: Delinquent Collection Period - difference between paidTime and\n            dueTime in days.\n          readOnly: true\n          type: integer\n        deliveryAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Invoice's delivery address\n        discounts:\n          description: Discounts applied\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/InvoiceDiscount\"\n          readOnly: true\n          type: array\n        dueTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice due time\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The invoice identifier string\n          readOnly: true\n        invoiceNumber:\n          description: An auto-incrementing number based on the sequence of invoices for\n            any particular customer.\n          readOnly: true\n          type: integer\n        issuedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice issued time\n        items:\n          description: Invoice items array\n          items:\n            type: string\n          readOnly: true\n          type: array\n        notes:\n          description: Notes for the customer which will display on the invoice\n          type: string\n        organizationId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The organization's ID\n          readOnly: true\n        paidTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice paid time\n        shippingAmount:\n          description: The Invoice's shipping amount\n          format: double\n          readOnly: true\n          type: number\n        status:\n          description: Invoice status.\n          enum:\n            - draft\n            - issued\n            - past-due\n            - paid\n            - abandoned\n            - voided\n          readOnly: true\n          type: string\n        subscriptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The related Subscription's ID if available, otherwise null\n          readOnly: true\n        taxes:\n          description: Taxes applied to this invoice\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/InvoiceTax\"\n          readOnly: true\n          type: array\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice updated time\n        voidedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice voided time\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website's ID\n      required:\n        - customerId\n        - websiteId\n        - currency\n      type: object\n    InvoiceDiscount:\n      properties:\n        amount:\n          description: Total amount that was discounted by this Coupon\n          format: double\n          type: number\n        description:\n          description: Discount description\n          type: string\n        redemptionCode:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Coupon's redemption code\n        redemptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Redemption ID\n      readOnly: true\n      type: object\n    InvoiceIssue:\n      properties:\n        issuedTime:\n          format: date-time\n          type: string\n      type: object\n    InvoiceItem:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/SubscriptionLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        description:\n          description: Invoice item's description\n          type: string\n        discountAmount:\n          description: Invoice item discount amount\n          format: double\n          readOnly: true\n          type: number\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string\n          readOnly: true\n        periodEndTime:\n          description: End time\n          format: date-time\n          type: string\n        periodStartTime:\n          description: Start time\n          format: date-time\n          type: string\n        productId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The product's ID\n        quantity:\n          description: Invoice item's quantity\n          type: integer\n        type:\n          description: Invoice item's type\n          enum:\n            - debit\n            - credit\n          type: string\n        unitPrice:\n          description: Invoice item's price\n          format: double\n          type: number\n      required:\n        - type\n        - unitPrice\n      type: object\n    InvoiceTax:\n      properties:\n        amount:\n          description: Tax amount\n          format: double\n          type: number\n        description:\n          description: Tax description\n          type: string\n      readOnly: true\n      type: object\n    IpayOptions:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: Ipay Options credentials object\n              properties:\n                rcode:\n                  description: Ipay Options rcode\n                  format: password\n                  type: string\n                sid:\n                  description: Ipay Options website ID\n                  type: string\n              required:\n                - sid\n                - rcode\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Ipay Options config\n    ItemsLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - items\n          type: string\n      required:\n        - rel\n      type: object\n    JetPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                TerminalID:\n                  description: JetPay Gateway terminal ID\n                  type: string\n              required:\n                - TerminalID\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: JetPay Gateway config\n    Jeton:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiKey:\n                  description: Jeton apiKey\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Jeton Gateway config\n    KycDocument:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/FileLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Creation date/time\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Linked Customer object id\n        documentMatches:\n          $ref: \"#/components/schemas/KycDocumentMatches\"\n        documentType:\n          description: Document type submitted for validation, only identity-proof type is\n            analyzed in an automated manner\n          enum:\n            - identity-proof\n            - address-proof\n          type: string\n        fileId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Linked File object id\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        processedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Processing date/time\n        rejectionReason:\n          $ref: \"#/components/schemas/KycDocumentRejection\"\n        status:\n          description: Status of the validation\n          enum:\n            - pending\n            - in-progress\n            - accepted\n            - rejected\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Latest update date/time\n      required:\n        - fileId\n        - customerId\n        - documentType\n        - status\n      type: object\n    KycDocumentMatches:\n      properties:\n        data:\n          properties:\n            containsImage:\n              description: Flag that indicates if there is an image that contains a face on\n                it\n              example: true\n              type: boolean\n            dateOfBirth:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: The date of birth found on the document, null if not found\n            expiryDate:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: The expiry date found on the document, null if not found\n            firstName:\n              description: The customer first name if it was matched, null otherwise\n              example: John\n              type: string\n            hasMinimalAge:\n              description: Checks the minimal age, 21+ for USA and 18+ for all other\n                countries. Null if dateOfBirth could not be determined.\n              example: true\n              type: boolean\n            isIdentityDocument:\n              description: Flag that indicates if this looks like and ID\n              example: true\n              type: boolean\n            isPublishedOnline:\n              description: If there is an exact match found online\n              example: false\n              type: boolean\n            issueDate:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: The issued date found on the document, null if not found\n            lastName:\n              description: The customer last name if it was matched, null otherwise\n              example: Doe\n              type: string\n          type: object\n        score:\n          description: The calculated score that represents the % of confidence that this\n            ID respresents the given customer\n          example: 0.75\n          format: double\n          type: number\n      readOnly: true\n      type: object\n    KycDocumentRejection:\n      properties:\n        message:\n          description: The rejection message\n          example: Provided document is unreadable\n          type: string\n        type:\n          enum:\n            - document-unreadable\n            - document-expired\n            - document-not-matching\n            - underage-person\n            - other\n          type: string\n      readOnly: true\n      type: object\n    LeadSource:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        affiliate:\n          description: Lead Source's affiliate (eg 123, Bob Smith)\n          type: string\n        amount:\n          description: The amount that the lead cost\n          format: double\n          type: number\n        campaign:\n          description: Lead Source's campaign (eg go-big-123)\n          type: string\n        clickId:\n          description: Lead Source's click id (may come from an ad server)\n          type: string\n        content:\n          description: Lead Source's content (eg smiley faces)\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: LeadSource created time\n        currency:\n          description: Currency (three letter ISO 4217 alpha code) (eg USD, EUR)\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The lead source identifier string\n          readOnly: true\n        medium:\n          description: Lead Source's medium (eg search, display)\n          type: string\n        path:\n          description: Lead Source's path uri (eg www.example.com/some/landing/path)\n          type: string\n        salesAgent:\n          description: Lead Source's sales agent (eg James Bond)\n          type: string\n        source:\n          description: Lead Source's source (eg google, yahoo)\n          type: string\n        subAffiliate:\n          description: Lead Source's sub-affiliate also called a sub-id or click id in some\n            circles (eg 123456)\n          type: string\n        term:\n          description: Lead Source's term (eg salt shakers)\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: LeadSource updated time\n      type: object\n    LeadSourceLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - leadSource\n          type: string\n      required:\n        - rel\n      type: object\n    MatchedRule:\n      properties:\n        context:\n          additionalProperties:\n            type: string\n          description: Event's context\n          type: object\n        description:\n          description: Rule's description\n          type: string\n        event:\n          $ref: \"#/components/schemas/EventType\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Event tracking id\n          readOnly: true\n        occurredTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Time when event occurred.\n        processedRules:\n          description: Processed rules\n          properties:\n            actions:\n              description: Rule actions applied\n              items:\n                type: string\n              type: array\n            name:\n              description: Rule name\n              type: string\n            result:\n              description: Rule result\n              type: string\n          type: object\n        rulesVersion:\n          description: Rule version\n          type: integer\n      readOnly: true\n      type: object\n    Method:\n      description: The payment method\n      enum:\n        - ach\n        - cash\n        - payment-card\n        - paypal\n        - Alipay\n        - China UnionPay\n        - Flexepin\n        - Gpaysafe\n        - Jeton\n        - OchaPay\n        - SMSVoucher\n        - UPayCard\n        - WeChat Pay\n        - AstroPay Card\n        - bank-transfer\n        - bitcoin\n        - Boleto\n        - cash-deposit\n        - echeck\n        - instant-bank-transfer\n        - invoice\n        - miscellaneous\n        - online-bank-transfer\n        - phone\n        - voucher\n        - QQPay\n      type: string\n    Moneris:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiToken:\n                  description: Moneris Gateway api token\n                  format: password\n                  type: string\n                storeId:\n                  description: Moneris Gateway store ID\n                  type: string\n              required:\n                - storeId\n                - apiToken\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Moneris Gateway config\n    MpiName:\n      description: The Merchant plug-in Name\n      enum:\n        - PayvisionMpi\n        - WirecardMpi\n        - IlixiumMpi\n        - DataCashMpi\n        - OptimalMpi\n        - GlobalCollectMpi\n        - CardinalCommerce\n        - PaayMpi\n        - Other\n      type: string\n    MtaPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                accountId:\n                  description: MTA Pay Gateway account ID\n                  type: string\n                goods:\n                  description: MTA Pay Gateway goods\n                  type: string\n                md5key:\n                  description: MTA Pay Gateway md5key\n                  format: password\n                  type: string\n                mobilePay:\n                  description: MTA Pay Gateway mobile pay param\n                  type: string\n                partyId:\n                  description: MTA Pay Gateway party ID\n                  type: string\n              required:\n                - accountId\n                - partyId\n                - goods\n                - md5key\n                - mobilePay\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: MTA Pay Gateway config\n    NMI:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                password:\n                  description: NMI Gateway store ID\n                  format: password\n                  type: string\n                username:\n                  description: NMI Gateway api token\n                  type: string\n              required:\n                - username\n                - password\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/NMIMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: NMI Gateway config\n    NMIMpis:\n      description: NMI Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    NewLink:\n      properties:\n        href:\n          description: The link URL\n          type: string\n      required:\n        - href\n      type: object\n    NotesLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - notes\n          type: string\n      required:\n        - rel\n      type: object\n    OchaPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiPassword:\n                  description: OchaPay Gateway api password\n                  format: password\n                  type: string\n                apiUsername:\n                  description: OchaPay Gateway username\n                  type: string\n                secretWord:\n                  description: OchaPay Gateway secret word\n                  format: password\n                  type: string\n              required:\n                - apiUsername\n                - apiPassword\n                - secretWord\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: OchaPay Gateway config\n    OnBoardingUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - onBoardingUrl\n          type: string\n      required:\n        - rel\n      type: object\n    OnOff:\n      default: active\n      enum:\n        - active\n        - inactive\n      type: string\n    Optimal:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                accountNum:\n                  description: Optimal Gateway account number\n                  type: string\n                storeId:\n                  description: Optimal Gateway store ID\n                  type: string\n                storePwd:\n                  description: Optimal Gateway store password\n                  format: password\n                  type: string\n              required:\n                - storeId\n                - storePwd\n                - accountNum\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/OptimalMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: Optimal Gateway config\n    OptimalMpi:\n      allOf:\n        - $ref: \"#/components/schemas/OptimalMpis\"\n      description: Optimal Integrated\n    OptimalMpis:\n      description: Optimal Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - OptimalMpi\n      required:\n        - name\n      type: object\n    OrganizationLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - organization\n          type: string\n      required:\n        - rel\n      type: object\n    Other:\n      allOf:\n        - $ref: \"#/components/schemas/A1GatewayMpis\"\n        - $ref: \"#/components/schemas/eMerchantPayMpis\"\n        - $ref: \"#/components/schemas/GETMpis\"\n        - $ref: \"#/components/schemas/NMIMpis\"\n        - $ref: \"#/components/schemas/PayvisionMpis\"\n        - $ref: \"#/components/schemas/VantivLitleMpis\"\n        - $ref: \"#/components/schemas/WalpayMpis\"\n        - $ref: \"#/components/schemas/WorldpayMpis\"\n      description: Other\n    PaayMpi:\n      allOf:\n        - $ref: \"#/components/schemas/A1GatewayMpis\"\n        - $ref: \"#/components/schemas/eMerchantPayMpis\"\n        - $ref: \"#/components/schemas/GETMpis\"\n        - $ref: \"#/components/schemas/NMIMpis\"\n        - $ref: \"#/components/schemas/PayvisionMpis\"\n        - $ref: \"#/components/schemas/VantivLitleMpis\"\n        - $ref: \"#/components/schemas/WalpayMpis\"\n        - $ref: \"#/components/schemas/WorldpayMpis\"\n        - properties:\n            apiKey:\n              description: Paay ApiKey\n              type: string\n            mpiUrl:\n              description: Paay MPI url\n              type: string\n            sandboxMpiUrl:\n              description: Paay sandbox MPI url\n              type: string\n            secret:\n              description: Paay secret\n              format: password\n              type: string\n          required:\n            - apiKey\n            - secret\n            - mpiUrl\n            - sandboxMpiUrl\n          type: object\n      description: Paay\n    PandaGateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiCode:\n                  description: Panda Gateway api code\n                  type: string\n                merchantCode:\n                  description: Panda Gateway merchant code\n                  type: string\n                signKey:\n                  description: Panda Gateway sign key\n                  format: password\n                  type: string\n              required:\n                - merchantCode\n                - apiCode\n                - signKey\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Panda Gateway config\n    ParentTransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - parentTransaction\n          type: string\n      required:\n        - rel\n      type: object\n    PayPal:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantIdInPayPal:\n                  description: PayPal Gateway merchant id\n                  type: string\n                redirectUrl:\n                  description: PayPal Gateway redirect url\n                  format: url\n                  type: string\n              required:\n                - merchantIdInPayPal\n                - redirectUrl\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: PayPal Gateway config\n    PayPalAccount:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n              - $ref: \"#/components/schemas/ApprovalUrlLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The Customer's Billing Address.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: PayPal Account created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Customer's ID.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The PayPal identifier string\n          readOnly: true\n        status:\n          description: PayPal Account status\n          enum:\n            - inactive\n            - active\n            - deactivated\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: PayPal Account updated time\n        username:\n          description: PayPal username.\n          type: string\n      required:\n        - customerId\n        - billingAddress\n      type: object\n    Payeezy:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiKey:\n                  description: API Key\n                  type: string\n                apiSecret:\n                  description: API Secret\n                  format: password\n                  type: string\n                merchantId:\n                  description: Payeezy Merchant ID\n                  type: string\n                merchantToken:\n                  description: Merchant Token\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantToken\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Payeezy Gateway config\n    Payflow:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: Payflow credentials object\n              properties:\n                password:\n                  description: The password you defined while registering for the account.\n                  format: password\n                  type: string\n                user:\n                  description: If you set up one or more additional users on the account,\n                    this value is the ID of the user authorized to process\n                    transactions. If, however, you have not set up additional\n                    users, USER has the same value as VENDOR\n                  type: string\n                vendor:\n                  description: Your merchant login ID created when you registered for the\n                    account.\n                  type: string\n              required:\n                - user\n                - vendor\n                - password\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Payflow config\n    Payment:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/WebsiteLink\"\n              - $ref: \"#/components/schemas/TransactionLink\"\n              - $ref: \"#/components/schemas/ApprovalUrlLink\"\n              - $ref: \"#/components/schemas/LeadSourceLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        amount:\n          description: The payment amount\n          format: double\n          type: number\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Billing Address\n        createdBy:\n          description: The process that created this payment\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Payment created time\n        currency:\n          description: The payment currency ISO Alpha code\n          type: string\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer identifier string\n        description:\n          description: The payment description\n          maxLength: 255\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment identifier string\n          readOnly: true\n        invoiceIds:\n          description: The array of invoice identifiers\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          type: array\n        paymentInstrument:\n          $ref: \"#/components/schemas/PaymentInstrument\"\n        result:\n          description: Payment result\n          enum:\n            - approved\n            - declined\n            - canceled\n            - unknown\n          readOnly: true\n          type: string\n        retriedPaymentId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The retried payment ID\n          readOnly: true\n        retryInstruction:\n          $ref: \"#/components/schemas/PaymentRetry\"\n        retryNumber:\n          description: The position in the sequence of retries\n          readOnly: true\n          type: integer\n        riskMetadata:\n          allOf:\n            - $ref: \"#/components/schemas/RiskMetadata\"\n          description: Risk metadata\n        scheduledTime:\n          description: The time the payment is scheduled for collection\n          format: date-time\n          type: string\n        status:\n          description: Payment status\n          enum:\n            - scheduled\n            - queued\n            - in-progress\n            - incomplete\n            - waiting-gateway\n            - suspended\n            - completed\n          readOnly: true\n          type: string\n        updatedBy:\n          description: The process that updated this payment\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Payment updated time\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string\n      required:\n        - websiteId\n        - customerId\n        - currency\n        - amount\n      type: object\n    PaymentCard:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n              - $ref: \"#/components/schemas/AuthTransactionLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        bankCountry:\n          description: Payment Card bank country\n          readOnly: true\n          type: string\n        bankName:\n          description: Payment Card bank name\n          readOnly: true\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The Billing Address. Required if card is creating not from Token\n        bin:\n          description: The card's bin (the PAN's first 6 digits)\n          format: bin\n          readOnly: true\n          type: string\n        brand:\n          description: Payment Card brand\n          enum:\n            - Visa\n            - MasterCard\n            - American Express\n            - Discover\n            - Maestro\n            - Solo\n            - Electron\n            - JCB\n            - Voyager\n            - Diners Club\n            - Switch\n            - Laser\n            - China UnionPay\n            - AstroPay Card\n          readOnly: true\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Card created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Customer's ID. Required if card is creating not from Token\n        cvv:\n          description: Card's cvv (card verification value). Required if card is creating\n            not from Token\n          type: string\n        expMonth:\n          description: Card's expiry month. Required if card is creating not from Token\n          type: integer\n        expYear:\n          description: Card's expiry year. Required if card is creating not from Token\n          type: integer\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The card identifier string\n          readOnly: true\n        last4:\n          description: The PAN's last 4 digits\n          readOnly: true\n          type: string\n        pan:\n          description: The card PAN (Primary Account Number). Required if card is creating\n            not from Token\n          type: string\n        panFingerprint:\n          description: A unique value to identify the PAN regardless of expiry\n          readOnly: true\n          type: string\n        status:\n          description: Payment Card status\n          enum:\n            - active\n            - expired\n            - inactive\n            - deactivated\n            - pending\n            - verification-needed\n          readOnly: true\n          type: string\n        stickyGatewayAccountId:\n          description: Default Gateway Account ID used for transactions\n          readOnly: true\n          type: string\n        token:\n          description: PaymentCardToken. Use without any other fields\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Card updated time\n      type: object\n    PaymentCardLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - paymentCard\n          type: string\n      required:\n        - rel\n      type: object\n    PaymentInstrument:\n      discriminator:\n        propertyName: method\n      properties:\n        method:\n          $ref: \"#/components/schemas/Method\"\n      required:\n        - method\n      type: object\n    PaymentInstrumentValidation:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        actionCode:\n          description: Action code\n          readOnly: true\n          type: string\n        avsResult:\n          description: Address verification result\n          readOnly: true\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Billing address.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Payment instrument validation created time.\n        cvvResult:\n          description: CVV result\n          readOnly: true\n          type: string\n        expMonth:\n          description: Payment card's expiry month.\n          readOnly: true\n          type: integer\n        expYear:\n          description: Payment card's expiry year.\n          readOnly: true\n          type: integer\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Payment instrument validation ID\n          readOnly: true\n        method:\n          description: Payment method\n          type: string\n        paymentInstrumentId:\n          description: Payment instrument ID\n          type: string\n        responseCode:\n          description: Response code\n          readOnly: true\n          type: string\n      required:\n        - method\n        - paymentInstrumentId\n      type: object\n    PaymentLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - payment\n          type: string\n      required:\n        - rel\n      type: object\n    PaymentRetry:\n      properties:\n        afterAttemptPolicy:\n          description: The policy on the attempt finishes\n          enum:\n            - none\n            - change-subscription-renewal-time\n          type: string\n        afterRetryEndPolicy:\n          description: The policy on the retry ends\n          enum:\n            - none\n            - cancel-subscription\n          type: string\n        attempts:\n          items:\n            properties:\n              paymentInstruction:\n                $ref: \"#/components/schemas/AmountAdjustment\"\n              scheduleInstruction:\n                $ref: \"#/components/schemas/CommonScheduleInstruction\"\n            required:\n              - scheduleInstruction\n              - paymentInstruction\n            type: object\n          minItems: 1\n          type: array\n      required:\n        - attempts\n        - afterAttemptPolicy\n        - afterRetryEndPolicy\n      type: object\n    PaymentToken:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The Address. Required if bank account is not created from Token\n        fingerprint:\n          description: Device fingerprint hash\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The token identifier string\n          readOnly: true\n        leadSource:\n          $ref: \"#/components/schemas/LeadSource\"\n        method:\n          description: The payment method\n          enum:\n            - payment-card\n            - ach\n          type: string\n        paymentInstrument:\n          $ref: \"#/components/schemas/PaymentTokenInstrument\"\n      required:\n        - method\n        - paymentInstrument\n      type: object\n    PaymentTokenInstrument:\n      description: Payment Token instrument object\n      properties:\n        accountNumber:\n          description: AccountNumber, required if the method is `bank-account`\n          type: integer\n        accountType:\n          description: Account Type\n          type: string\n        bankName:\n          description: Bank name\n          type: string\n        cvv:\n          description: The CVV/CVC of the payment card\n          type: string\n        expMonth:\n          description: Card's expiry month, required if the method is `payment-card`\n          type: integer\n        expYear:\n          description: Card's expiry year, required if the method is `payment-card`\n          type: integer\n        pan:\n          description: The card PAN (Primary Account Number), required if the method is\n            `payment-card`\n          type: string\n        routingNumber:\n          description: Routing Number, required if the method is `bank-account`\n          type: integer\n      type: object\n    Payr:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                clientId:\n                  description: Payr Gateway client ID\n                  type: string\n                secretWord:\n                  description: Payr Gateway secret word\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Payr Gateway config\n    Payvision:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                avs:\n                  description: Payvision Gateway avs\n                  type: boolean\n                delay:\n                  description: Payvision Gateway delay\n                  type: integer\n                memberGuid:\n                  description: Payvision Gateway member guid\n                  format: password\n                  type: string\n                memberId:\n                  description: Payvision Gateway member id\n                  type: string\n              required:\n                - memberId\n                - memberGuid\n                - avs\n                - delay\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/PayvisionMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: Payvision Gateway config\n    PayvisionMpi:\n      allOf:\n        - $ref: \"#/components/schemas/PayvisionMpis\"\n      description: Payvision Integrated\n    PayvisionMpis:\n      description: Payvision Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PayvisionMpi\n            - CardinalCommerce\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    PermalinkLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - permalink\n          type: string\n      required:\n        - rel\n      type: object\n    Plan:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Plan created time\n        currency:\n          description: Currency (three letter ISO 4217 code)\n          type: string\n        currencySign:\n          description: Currency sign\n          readOnly: true\n          type: string\n        description:\n          description: The plan description (deprecated)\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The plan identifier string\n          readOnly: true\n        isActive:\n          description: If the plan is not active, customers cannot subscribe to the plan.\n          type: boolean\n        name:\n          description: The plan name, displayed on invoices and receipts.\n          type: string\n        pricing:\n          $ref: \"#/components/schemas/PlanPriceFormula\"\n        productId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The related product identifier string\n        productOptions:\n          additionalProperties:\n            type: string\n          description: Name-value pairs to specify the product options.\n          example:\n            color: red\n            size: xxl\n          type: object\n        recurringInterval:\n          allOf:\n            - $ref: \"#/components/schemas/PlanPeriod\"\n            - properties:\n                limit:\n                  description: The number of invoices this subscription will generate (if\n                    1, it will not generate any beyond the initial subscription\n                    creation).  For example, set this property to `12`, when the\n                    `periodUnit` is month and the `periodLength` is 1, for a 1\n                    year contract billed monthly.\n                  type: integer\n              type: object\n          description: The billing interval. For a one-time item, use `null`.\n        richDescription:\n          description: The plan rich description - supports HTML (deprecated)\n          type: string\n        setup:\n          description: The setup. Set `null` if no setup.\n          properties:\n            price:\n              description: The price of a setup - 0 is a valid value (for free)\n              format: double\n              type: number\n          required:\n            - price\n          type: object\n        trial:\n          description: The trial. Set `null` if no trial.\n          properties:\n            period:\n              $ref: \"#/components/schemas/PlanPeriod\"\n            price:\n              description: The price of the trial. For a free trial, use `0`.\n              format: double\n              type: number\n          required:\n            - price\n            - period\n          type: object\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Plan updated time\n      required:\n        - name\n        - currency\n        - productId\n        - pricing\n      type: object\n    PlanLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - plan\n          type: string\n      required:\n        - rel\n      type: object\n    PlanPeriod:\n      properties:\n        length:\n          description: The length of time\n          type: integer\n        unit:\n          description: The unit of time\n          enum:\n            - day\n            - week\n            - month\n            - year\n          type: string\n      required:\n        - unit\n        - length\n      type: object\n    PlanPriceFormula:\n      discriminator:\n        propertyName: formula\n      properties:\n        formula:\n          description: \u003e\n            The price formula determines what algorithm is used to calculate the\n            invoice price based on a few factors,\n\n            - the quantity in the subscription (which may be variable if usage pricing, otherwise determined when creating the subscription)\n\n            - the price brackets data\n\n\n            To determine which formula is correct, please see the price formula documentation.\n          enum:\n            - fixed-fee\n            - flat-rate\n            - stairstep\n            - tiered\n            - volume\n          type: string\n      required:\n        - formula\n      type: object\n    Plugnpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                publisher-name:\n                  description: Plugnpay Gateway member id\n                  type: string\n                publisher-password:\n                  description: Plugnpay Gateway avs\n                  format: password\n                  type: string\n              required:\n                - publisher-name\n                - publisher-password\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Plugnpay Gateway config\n    PriceBasedShippingRate:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        currency:\n          description: Currency (three letter ISO 4217 code)\n          type: string\n        maxOrderSubtotal:\n          description: Maximum order subtotal for which this shipping rate is applicable\n            (NULL if no maximum)\n          format: double\n          type: number\n        minOrderSubtotal:\n          default: 0\n          description: Minimum order subtotal for which this shipping rate is applicable,\n            defaults to 0.00\n          format: double\n          type: number\n        name:\n          description: The shipping rate name\n          maxLength: 255\n          type: string\n        price:\n          description: The shipping price - 0 is a valid value (for free)\n          format: double\n          type: number\n      required:\n        - name\n        - currency\n        - price\n      type: object\n    Product:\n      description: \u003e\n        Products include digital goods, services, and physical goods.\n\n        Products appear on invoice line items. If you set a tax category identifier,\n\n        taxes will be calculated upon invoice generation.  If it is shippable,\n\n        shipping will be calculated upon invoice generation.  Pricing and \n\n        variations are set within Plans.\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        accountingCode:\n          description: The product accounting code\n          example: 4010\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The product created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        description:\n          description: The product description\n          maxLength: 512\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The product identifier string\n          example: membership\n          readOnly: true\n        name:\n          description: The product name\n          example: Premium membership\n          maxLength: 255\n          type: string\n        options:\n          description: The product options such as Color, Size, etc.  The product options\n            definition does not include option values.  Those are defined within\n            the Plans.\n          items:\n            type: string\n          type: array\n        requiresShipping:\n          description: If the product requires shipping, shipping calculations will be\n            applied\n          example: false\n          type: boolean\n        taxCategoryId:\n          description: The product's tax category identifier string\n          enum:\n            - 99999\n            - 20010\n            - 40030\n            - 51020\n            - 51010\n            - 31000\n            - 30070\n          type: string\n        unitLabel:\n          default: unit\n          description: The unit label, such as per `seat` or per `unit`.\n          example: seat\n          maxLength: 50\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The product updated time\n      required:\n        - name\n      type: object\n    RPN:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                key:\n                  description: RPN Key\n                  format: password\n                  type: string\n                mid:\n                  description: RPN MID\n                  type: string\n              required:\n                - mid\n                - key\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: RPN Gateway config\n    Reactivation:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        cancellationId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the related cancellation\n          readOnly: true\n        createdTime:\n          description: The time of resource creation (when it is posted).\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          description: Reactivation reason description in free form\n          maxLength: 255\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Reactivation identifier\n          readOnly: true\n        renewalTime:\n          description: \u003e\n            The time of the next subscription renewal. If omitted then it is\n            computed from the current time.\n\n            If the subscription is canceled but active it is ignored, so the next renewal will happen as scheduled.\n          format: date-time\n          type: string\n        subscriptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the reactivated subscription\n      required:\n        - subscriptionId\n      type: object\n    RealTime:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                clientId:\n                  description: RealTime Gateway client ID\n                  type: string\n                secretWord:\n                  description: RealTime Gateway secret word\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: RealTime Gateway config\n    Realex:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                account:\n                  description: Realex Gateway account\n                  type: string\n                merchantId:\n                  description: Realex Gateway merchant id\n                  type: string\n                rebatePassword:\n                  description: Realex Gateway rebate password\n                  format: password\n                  type: string\n                secretKey:\n                  description: Realex Gateway secret key\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - secretKey\n                - rebatePassword\n                - account\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Realex Gateway config\n    RebillyProcessor:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            mpi:\n              $ref: \"#/components/schemas/RebillyProcessorMpis\"\n          type: object\n      description: RebillyProcessor Gateway config\n    RebillyProcessorMpi:\n      allOf:\n        - $ref: \"#/components/schemas/RebillyProcessorMpis\"\n      description: RebillyProcessor Integrated\n    RebillyProcessorMpis:\n      description: RebillyProcessorMpis Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - RebillySandboxMpi\n      required:\n        - name\n      type: object\n    RedemptionRestriction:\n      description: Redemption restrictions\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          description: Redemption's additional restriction type\n          enum:\n            - discounts-per-redemption\n            - minimum-order-amount\n            - restrict-to-invoices\n            - restrict-to-plans\n            - restrict-to-subscriptions\n          type: string\n      required:\n        - type\n      type: object\n    RedirectUrls:\n      description: The redirect URIs\n      properties:\n        cancel:\n          format: url\n          type: string\n        decline:\n          format: url\n          type: string\n        error:\n          format: url\n          type: string\n        success:\n          format: url\n          type: string\n      required:\n        - error\n        - success\n        - decline\n        - cancel\n      type: object\n    Redsys:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantCode:\n                  description: Redsys Gateway merchant code\n                  format: password\n                  type: string\n                secretCode:\n                  description: Redsys Gateway secret code\n                  format: password\n                  type: string\n              required:\n                - merchantCode\n                - secretCode\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Redsys Gateway config\n    RefundUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - refundUrl\n          type: string\n      required:\n        - rel\n      type: object\n    ResetPasswordToken:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        credential:\n          description: Token's credential ID\n          type: string\n        expiredTime:\n          description: Password expired time\n          format: date-time\n          type: string\n        password:\n          description: Token's password (only for POST)\n          format: password\n          type: string\n        token:\n          description: The token's identifier string\n          readOnly: true\n          type: string\n        username:\n          description: The token's username\n          type: string\n      required:\n        - username\n        - password\n      type: object\n    ResourceCustomFields:\n      description: \u003e\n        \"Custom Fields list as a map `{\"custom field name\": \"custom field\n        value\", ...}\"`.\n\n        The format must follow the saved format (see Custom Fields section for the formats).\n      type: object\n    ResourceId:\n      description: The resource ID. Defaults to UUID v4\n      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21\n      maxLength: 50\n      type: string\n    RetriedTransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - retriedTransaction\n          type: string\n      required:\n        - rel\n      type: object\n    RiskMetadata:\n      properties:\n        accuracyRadius:\n          description: Accuracy radius for specified ipAddress (kilometers)\n          readOnly: true\n          type: integer\n        city:\n          description: City for specified ipAddress\n          example: New York\n          readOnly: true\n          type: string\n        country:\n          description: Country ISO Alpha-2 code for specified ipAddress\n          example: US\n          maxLength: 2\n          readOnly: true\n          type: string\n        distance:\n          description: Distance between IP Address and Billing Address geolocation\n            (kilometers)\n          readOnly: true\n          type: integer\n        fingerprint:\n          description: The fingerprint\n          type: string\n        httpHeaders:\n          additionalProperties:\n            type: string\n          description: HTTP headers\n          example:\n            Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n            User-Agent: Mozilla/5.0\n          type: object\n        ipAddress:\n          description: The customer's IP\n          format: ipv4\n          type: string\n        isHosting:\n          description: True if customer's ip address is related to hosting\n          readOnly: true\n          type: boolean\n        isProxy:\n          description: True if customer's ip address is related to proxy\n          readOnly: true\n          type: boolean\n        isTor:\n          description: True if customer's ip address is related to TOR\n          readOnly: true\n          type: boolean\n        isVpn:\n          description: True if customer's ip address is related to VPN\n          readOnly: true\n          type: boolean\n        isp:\n          description: Internet Service Provider name, if available\n          readOnly: true\n          type: string\n        latitude:\n          description: Latitude for specified ipAddress\n          format: double\n          readOnly: true\n          type: number\n        longitude:\n          description: Longitude for specified ipAddress\n          format: double\n          readOnly: true\n          type: number\n        postalCode:\n          description: Postal code for specified ipAddress\n          maxLength: 10\n          readOnly: true\n          type: string\n        score:\n          description: Risk score computed per all the factors\n          readOnly: true\n          type: integer\n        timeZone:\n          description: Time zone for specified ipAddress\n          example: America/New_York\n          readOnly: true\n          type: string\n        vpnServiceName:\n          description: VPN service name, if available\n          readOnly: true\n          type: string\n      type: object\n    Rotessa:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              description: Rotessa credentials object\n              properties:\n                apiKey:\n                  description: Rotessa api key\n                  format: password\n                  type: string\n                delay:\n                  description: Rotessa Gateway time delay for them to process transaction\n                  type: integer\n              required:\n                - apiKey\n                - delay\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Rotessa config\n    RuleSetHistoryLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - history\n          type: string\n      required:\n        - rel\n      type: object\n    RuleSetVersionLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - rules\n          type: string\n      required:\n        - rel\n      type: object\n    SMSVoucher:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                AppId:\n                  description: SMSVoucher AppId\n                  type: string\n              required:\n                - AppId\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: SMSVoucher Gateway config\n    Sagepay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                M_ID:\n                  description: Sagepay Gateway merchant ID\n                  type: string\n                M_KEY:\n                  description: Sagepay Gateway merchant key\n                  format: password\n                  type: string\n              required:\n                - M_ID\n                - M_KEY\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Sagepay Gateway config\n    SelfLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - self\n          type: string\n      required:\n        - rel\n      type: object\n    ServerTimestamp:\n      description: Read-only timestamp, automatically assigned on back-end.\n      format: date-time\n      readOnly: true\n      type: string\n    ShippingZone:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        countries:\n          description: \u003e\n            Countries covered by the shipping zone. A country can only belong to\n            one shipping zone (no overlapping).\n\n            This property can be empty or null to create a default shipping zone for countries that were not specified in other zones.\n          items:\n            description: Country ISO Alpha-2 code\n            pattern: ^[A-Z]{2}$\n            type: string\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The shipping zone created time\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The shipping zone identifier string\n          readOnly: true\n        isDefault:\n          description: Is this Shipping Zone default\n          readOnly: true\n        name:\n          description: The shipping zone name\n          maxLength: 255\n          type: string\n        rates:\n          description: Price-based shipping rate instructions\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/PriceBasedShippingRate\"\n            description: Price based shipping rate instruction\n          type: array\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The shipping zone updated time\n      required:\n        - name\n      type: object\n    SignedLinkLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - signedLink\n          type: string\n      required:\n        - rel\n      type: object\n    StaticGateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - type: object\n      description: StaticGateway Gateway config\n    Stripe:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                redirectUrl:\n                  description: Stripe Gateway redirect url\n                  format: url\n                  type: string\n              required:\n                - redirectUrl\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: Stripe Gateway config\n    Subscription:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n              - $ref: \"#/components/schemas/PlanLink\"\n              - $ref: \"#/components/schemas/WebsiteLink\"\n              - $ref: \"#/components/schemas/LeadSourceLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        activationTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Subscription activation time\n        autopay:\n          default: true\n          description: Autopay determines if a payment attempt will be automatic\n          type: boolean\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Billing address\n        cancelCategory:\n          description: Cancel category\n          enum:\n            - billing-failure\n            - did-not-use\n            - did-not-want\n            - missing-features\n            - bugs-or-problems\n            - do-not-remember\n            - risk-warning\n            - contract-expired\n            - too-expensive\n            - never-started\n            - switched-plan\n            - other\n          readOnly: true\n          type: string\n        cancelDescription:\n          description: Cancel reason description in free form\n          maxLength: 255\n          readOnly: true\n          type: string\n        canceledBy:\n          description: Canceled by\n          enum:\n            - merchant\n            - customer\n            - rebilly\n          readOnly: true\n          type: string\n        canceledTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Subscription canceled time\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Subscription created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Unique id for each customer\n        deliveryAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Delivery address\n        endTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Subscription end time\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Subscription identifier string\n          readOnly: true\n        inTrial:\n          description: True if the subscription is currently in a trial period\n          readOnly: true\n          type: boolean\n        initialInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Unique id for the initial invoice\n        items:\n          items:\n            properties:\n              planId:\n                allOf:\n                  - $ref: \"#/components/schemas/ResourceId\"\n                description: Unique id for each plan\n              quantity:\n                description: Number of units of the product on the given plan\n                type: integer\n            required:\n              - planId\n            type: object\n          minItems: 1\n          type: array\n        lineItemSubtotal:\n          description: Subtotal of line items in this subscription (signed value).  If\n            credits exceed debits, it will be a negative number.\n          example: 49.95\n          readOnly: true\n          type: number\n        lineItems:\n          description: Subscription line items which queue until the next renewal (or\n            interim) invoice is issued for the subscription.\n          items:\n            description: Line item\n            properties:\n              createdTime:\n                description: Date-time when the item was added to the subscription\n                format: date-time\n                type: string\n              description:\n                description: Description of line item\n                type: string\n              periodEndTime:\n                description: Date-time when the period ends for this item\n                format: date-time\n                type: string\n              periodStartTime:\n                description: Date-time when the period begins for this item\n                format: date-time\n                type: string\n              quantity:\n                description: Quantity of line item\n                example: 1\n                type: integer\n              type:\n                description: Type of line item\n                enum:\n                  - debit\n                  - credit\n                type: string\n              unitPriceAmount:\n                description: Unit price in minor unit coins of the line item\n                example: 4995\n                type: integer\n              unitPriceCurrency:\n                description: Currency ISO code\n                example: USD\n                type: string\n            type: object\n          readOnly: true\n          type: array\n        rebillNumber:\n          description: The current period number\n          readOnly: true\n          type: integer\n        renewalTime:\n          description: Subscription renewal time\n          format: date-time\n          type: string\n        riskMetadata:\n          allOf:\n            - $ref: \"#/components/schemas/RiskMetadata\"\n          description: Risk metadata\n        startTime:\n          description: Subscription start time\n          format: date-time\n          type: string\n        status:\n          description: Subscription status is deprecated and the values will change to\n            `active`, `canceled`.\n          enum:\n            - Active\n            - Will become active at a future date\n            - Active but set to cancel at next rebill date\n            - Cancelled\n            - Inactive\n            - Suspended\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Subscription updated time\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Unique id for each website\n      required:\n        - customerId\n        - items\n        - websiteId\n      type: object\n    SubscriptionChange:\n      properties:\n        effectiveTime:\n          description: The date from which the renewal time (for `reset` operations) and\n            proration calculations are made.  If omitted, it will default to the\n            current time.\n          format: date-time\n          type: string\n        planId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The plan identifier string\n        preview:\n          default: false\n          description: If set to true, it will not change the subscription.  It allows for\n            a way to preview the changes that would be made to a subscription.\n          type: boolean\n        prorated:\n          description: \u003e\n            Whether or not to give a pro rata credit for the amount of time\n            remaining between the `effectiveTime` and the end of the current\n            period.\n\n            In addition, if the `renewalTime` is retained (by setting the `renewalPolicy` to `retain`), then a pro rata debit will occur as well,\n\n            for the amount between the `effectiveTime` and the `renewalTime` as a percentage of the normal period size.\n          type: boolean\n        renewalPolicy:\n          description: The value determines whether the subscription retains its current\n            `renewalTime` or resets it to a newly calculated `renewalTime`.\n          enum:\n            - reset\n            - retain\n          type: string\n      required:\n        - planId\n        - renewalPolicy\n        - prorated\n      type: object\n    SubscriptionInvoice:\n      properties:\n        transactionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: If present, applies a payment to the invoice created.  If the\n            payment is for the invoice total, it would be marked as paid.\n      type: object\n    SubscriptionLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - subscription\n          type: string\n      required:\n        - rel\n      type: object\n    ThreeDSecure:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        amount:\n          description: Transaction amount\n          format: double\n          type: number\n        cavv:\n          description: The 3D Secure entry cardholder authentication verification value\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The 3D Secure entry created time\n        currency:\n          description: The currency three letter code\n          type: string\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related customer ID\n        eci:\n          description: The 3D Secure entry electronic commerce indicator\n          type: integer\n        enrolled:\n          description: Is the cardholder enrolled in 3DSecure\n          enum:\n            - Y\n            - N\n            - U\n          type: string\n        enrollmentEci:\n          description: The 3D Secure entry enrollment eci\n          type: string\n        gatewayAccountId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related gateway account ID\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The 3D Secure entry identifier string\n          readOnly: true\n        payerAuthResponseStatus:\n          description: The 3D Secure entry Auth Response Status\n          enum:\n            - Y\n            - N\n            - U\n            - A\n          type: string\n        paymentCardId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related payment card ID\n        signatureVerification:\n          description: If signature was verified\n          enum:\n            - Y\n            - N\n          type: string\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related Website ID\n        xid:\n          description: The 3D Secure entry transaction Id\n          type: string\n      required:\n        - enrolled\n        - enrollmentEci\n        - customerId\n        - gatewayAccountId\n        - paymentCardId\n        - websiteId\n        - currency\n        - amount\n      type: object\n    ThreeDSecureResult:\n      properties:\n        authenticated:\n          description: The 3D Secure entry Auth Response Status\n          enum:\n            - yes\n            - no\n            - not applicable\n            - attempted\n          type: string\n        enrolled:\n          description: Is the cardholder enrolled in 3D Secure\n          enum:\n            - yes\n            - no\n            - invalid card/timeout\n            - unavailable\n          type: string\n        liability:\n          enum:\n            - protected\n            - not protected\n            - protected (attempt)\n          type: string\n      readOnly: true\n      required:\n        - enrolled\n        - authenticated\n        - liability\n      type: object\n    Time:\n      format: date-time\n      pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](Z(\\+|\\-)([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])?$\n      type: string\n    TimeUnit:\n      enum:\n        - second\n        - seconds\n        - minute\n        - minutes\n        - hour\n        - hours\n        - day\n        - days\n        - month\n        - months\n        - year\n        - years\n      type: string\n    Transaction:\n      properties:\n        3ds:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureResult\"\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/WebsiteLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n              - $ref: \"#/components/schemas/GatewayAccountLink\"\n              - $ref: \"#/components/schemas/PaymentCardLink\"\n              - $ref: \"#/components/schemas/ParentTransactionLink\"\n              - $ref: \"#/components/schemas/RetriedTransactionLink\"\n              - $ref: \"#/components/schemas/LeadSourceLink\"\n              - $ref: \"#/components/schemas/ApprovalUrlLink\"\n              - $ref: \"#/components/schemas/CancelUrlLink\"\n              - $ref: \"#/components/schemas/RefundUrlLink\"\n              - $ref: \"#/components/schemas/DisputeLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        acquirerName:\n          allOf:\n            - description: The acquirer name\n              enum:\n                - Alipay\n                - AIB\n                - ApcoPay\n                - AstroPay Card\n                - Ipay Options\n                - B+S\n                - Bambora\n                - Bank of America\n                - Bank of Moscow\n                - Bank of Rebilly\n                - Bank One\n                - BMO Harris Bank\n                - Borgun\n                - BraintreePayments\n                - Cardknox\n                - Catalunya Caixa\n                - Chase\n                - ChinaUnionPay\n                - CIM\n                - Credorax\n                - Cryptonator\n                - EcorePay\n                - Elavon\n                - EMS\n                - Fifth Third Bank\n                - First Data Buypass\n                - First Data Nashville\n                - First Data North\n                - First Data Omaha\n                - FinTecSystems\n                - Flexepin\n                - Forte\n                - FundSend\n                - Global East\n                - Gpaysafe\n                - Heartland\n                - HSBC\n                - iCheque\n                - Ilixium\n                - Ingenico\n                - Intuit\n                - Jeton\n                - Masapay\n                - Merrick\n                - Mission Valley Bank\n                - Moneris\n                - NATWEST\n                - NMI\n                - OchaPay\n                - Other\n                - Panamerican\n                - ParamountEft\n                - Panda Bank\n                - PayPal\n                - Payr\n                - Payvision\n                - Peoples Trust Company\n                - Privatbank\n                - QQPay\n                - RBC\n                - RBS WorldPay\n                - RealTime\n                - RebillyProcessor\n                - Rotessa\n                - Skrill\n                - SMSVoucher\n                - State Bank of Mauritius\n                - Stripe\n                - TBI\n                - TrustPay\n                - TSYS\n                - UPayCard\n                - Vantiv\n                - VoicePay\n                - WeChat Pay\n                - Wells Fargo\n                - Wing Hang Bank\n                - Wirecard\n                - WorldPay\n              type: string\n          description: Acquirer name, available only when transaction use gateway, else null\n          readOnly: true\n        amount:\n          description: The transactions's amount\n          format: double\n          readOnly: true\n          type: number\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Billing Address\n        bin:\n          description: Payment Card BIN\n          format: bin\n          readOnly: true\n          type: string\n        childTransactions:\n          description: The child transaction IDs\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Transaction created time\n        currency:\n          description: The transactions's currency\n          readOnly: true\n          type: string\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID\n          readOnly: true\n        dcc:\n          description: Dynamic Currency Conversion detailed information. Null if hasDcc is\n            false\n          properties:\n            base:\n              description: Initial amount and currency to convert from\n              properties:\n                amount:\n                  format: double\n                  type: number\n                currency:\n                  type: string\n              type: object\n            outcome:\n              description: Dynamic Currency Conversion outcome\n              enum:\n                - rejected\n                - selected\n                - unknown\n              type: string\n            quote:\n              description: Suggested amount and currency to convert to\n              properties:\n                amount:\n                  format: double\n                  type: number\n                currency:\n                  type: string\n              type: object\n            usdMarkup:\n              description: The amount of markup translated to USD\n              format: double\n              type: number\n          readOnly: true\n          type: object\n        description:\n          description: The payment description\n          maxLength: 255\n          type: string\n        gateway:\n          description: The related gateway information\n          properties:\n            avsResponse:\n              description: The AVS gateway's response\n              properties:\n                code:\n                  description: The response code\n                  type: string\n                message:\n                  description: The response message\n                  type: string\n                originalCode:\n                  description: The raw response code\n                  type: string\n                originalMessage:\n                  description: The raw response message\n                  type: string\n              type: object\n            cvvResponse:\n              description: The CVV gateway's response\n              properties:\n                code:\n                  description: The response code\n                  type: string\n                message:\n                  description: The response message\n                  type: string\n                originalCode:\n                  description: The raw response code\n                  type: string\n                originalMessage:\n                  description: The raw response message\n                  type: string\n              type: object\n            response:\n              description: The gateway's response\n              properties:\n                code:\n                  description: The gateway's response code\n                  type: string\n                message:\n                  description: The gateway's response message\n                  type: string\n                originalCode:\n                  description: The raw, unmapped gateway's response code\n                  type: string\n                originalMessage:\n                  description: The raw, unmapped gateway's response message\n                  type: string\n                type:\n                  description: The gateway's response type\n                  type: string\n              type: object\n          readOnly: true\n          type: object\n        gatewayAccountId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The transactions's Gateway Account ID\n          readOnly: true\n        gatewayName:\n          allOf:\n            - description: The payment gateway name\n              enum:\n                - A1Gateway\n                - AmexVPC\n                - ApcoPay\n                - AstroPay\n                - AstroPayCard\n                - AuthorizeNet\n                - Bambora\n                - BraintreePayments\n                - Cardknox\n                - Cashflows\n                - Cayan\n                - Chase\n                - Credorax\n                - Cryptonator\n                - DataCash\n                - Dengi\n                - EcorePay\n                - Elavon\n                - eMerchantPay\n                - Flexepin\n                - FinTecSystems\n                - FundSend\n                - Forte\n                - GET\n                - GlobalOnePay\n                - Gpaysafe\n                - iCheque\n                - Ilixium\n                - Ingenico\n                - Intuit\n                - IpayOptions\n                - JetPay\n                - Jeton\n                - Moneris\n                - MtaPay\n                - NMI\n                - OchaPay\n                - Panamerican\n                - ParamountEft\n                - PandaGateway\n                - Payeezy\n                - Payflow\n                - PayPal\n                - Payr\n                - Paysafe\n                - Payvision\n                - Plugnpay\n                - Realex\n                - Realtime\n                - RebillyProcessor\n                - Redsys\n                - Rotessa\n                - RPN\n                - Sagepay\n                - Skrill\n                - SMSVoucher\n                - StaticGateway\n                - Stripe\n                - UPayCard\n                - USAePay\n                - VantivLitle\n                - vegaaH\n                - Walpay\n                - Wirecard\n                - Worldpay\n              type: string\n          description: Payment Gateway name, available only when transaction use gateway,\n            else null\n          readOnly: true\n        gatewayTransactionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The gateway's transaction ID\n          readOnly: true\n        hadDiscrepancy:\n          description: True if the transaction has been updated due to a disprepancy with\n            its source of truth\n          readOnly: true\n          type: boolean\n        has3ds:\n          readOnly: true\n          type: boolean\n        hasDcc:\n          description: True if transaction has Dynamic Currency Conversion applied\n          readOnly: true\n          type: boolean\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The transaction identifier string\n          readOnly: true\n        invoiceIds:\n          description: The invoice IDs related to transaction\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        isDisputed:\n          description: True if transaction is disputed\n          readOnly: true\n          type: boolean\n        isRebill:\n          readOnly: true\n          type: boolean\n        isReconciled:\n          description: True if the transaction has been verified with gateway batch data\n          readOnly: true\n          type: boolean\n        isRetry:\n          description: True if this transaction is retry.\n          readOnly: true\n          type: boolean\n        method:\n          allOf:\n            - $ref: \"#/components/schemas/Method\"\n          description: Payment Method\n        orderId:\n          description: The transactions's order ID\n          type: string\n        parentTransactionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The transactions's parent ID\n          readOnly: true\n        paymentInstrument:\n          $ref: \"#/components/schemas/PaymentInstrument\"\n        planIds:\n          description: The plan IDs related to transaction's subscription(s)\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        processedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Transaction processed time\n        rebillNumber:\n          description: The transactions's rebill number\n          readOnly: true\n          type: integer\n        redirectUrls:\n          $ref: \"#/components/schemas/RedirectUrls\"\n        result:\n          description: Transaction result\n          enum:\n            - abandoned\n            - approved\n            - canceled\n            - declined\n            - unknown\n          readOnly: true\n          type: string\n        retriedTransactionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The retried transaction ID\n          readOnly: true\n        retriesResult:\n          description: Retries sequence result\n          enum:\n            - approved\n            - canceled\n            - declined\n            - scheduled\n          readOnly: true\n          type: string\n        retryInstruction:\n          $ref: \"#/components/schemas/PaymentRetry\"\n        retryNumber:\n          description: The position in the sequence of retries\n          readOnly: true\n          type: integer\n        riskMetadata:\n          allOf:\n            - $ref: \"#/components/schemas/RiskMetadata\"\n          description: Risk metadata\n        riskScore:\n          description: The transactions's risk score\n          readOnly: true\n          type: integer\n        scheduledTime:\n          description: The time the transaction is scheduled for collection\n          format: date-time\n          type: string\n        status:\n          description: Transaction status\n          enum:\n            - completed\n            - connection-error\n            - never-sent\n            - pending\n            - sending\n            - suspended\n            - timeout\n            - waiting-capture\n            - waiting-refund\n          readOnly: true\n          type: string\n        subscriptionIds:\n          description: The subscription IDs related to transaction's invoice(s)\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        type:\n          description: Transaction type\n          enum:\n            - authorize\n            - capture\n            - credit\n            - refund\n            - sale\n            - void\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Transaction updated time\n        velocity:\n          description: The number of transactions by the same customer in the past 24 hours\n          type: integer\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Website's ID\n          readOnly: true\n      type: object\n    TransactionGatewayLog:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            $ref: \"#/components/schemas/TransactionLink\"\n          minItems: 1\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The log entry created time\n        duration:\n          description: The request time, msec\n          type: integer\n        headers:\n          description: The request headers\n          items:\n            type: string\n          type: array\n        request:\n          description: The request body\n          type: string\n        response:\n          description: The response body\n          type: string\n        url:\n          description: The request URL\n          type: string\n      readOnly: true\n      type: object\n    TransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - transaction\n          type: string\n      required:\n        - rel\n      type: object\n    TransactionRefund:\n      properties:\n        amount:\n          description: Refund amount\n          format: double\n          type: number\n      required:\n        - amount\n      type: object\n    UPayCard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                key:\n                  description: merchant key\n                  format: password\n                  type: string\n                receiver_account:\n                  description: merchant receiver account\n                  type: string\n                secret:\n                  description: merchant secret\n                  format: password\n                  type: string\n              required:\n                - receiver_account\n                - key\n                - secret\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: UPayCard Gateway config\n    USAePay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                pin:\n                  description: USAePay Gateway pin\n                  format: password\n                  type: string\n                sourceKey:\n                  description: USAePay Gateway source key\n                  format: password\n                  type: string\n              required:\n                - sourceKey\n                - pin\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: USAePay Gateway config\n    UpdatePassword:\n      properties:\n        currentPassword:\n          description: Current user's password - used when requesting password change\n          format: password\n          type: string\n        newPassword:\n          description: New user's password - used when requesting password change\n          format: password\n          type: string\n      type: object\n    VantivLitle:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantId:\n                  description: VantivLitle Gateway merchant ID\n                  type: string\n                password:\n                  description: VantivLitle Gateway password\n                  format: password\n                  type: string\n                username:\n                  description: VantivLitle Gateway username\n                  type: string\n              required:\n                - username\n                - password\n                - merchantId\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/VantivLitleMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: VantivLitle Gateway config\n    VantivLitleMpis:\n      description: VantivLitle Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    Walpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantName:\n                  description: Walpay Gateway merchant name\n                  type: string\n                merchantPin:\n                  description: Walpay Gateway merchant pin\n                  format: password\n                  type: string\n              required:\n                - merchantName\n                - merchantPin\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/WalpayMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: Walpay Gateway config\n    WalpayMpis:\n      description: WalpayMpis Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    Website:\n      properties:\n        _links:\n          description: The links related to resource\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/NotesLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Website created time\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string\n          readOnly: true\n        name:\n          description: The website's name\n          type: string\n        serviceEmail:\n          description: The website's customer service email address\n          format: email\n          type: string\n        servicePhone:\n          description: The website's customer service phone number\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Website updated time\n        url:\n          description: The website's domain address\n          type: string\n      required:\n        - name\n        - url\n        - servicePhone\n        - serviceEmail\n      type: object\n    WebsiteLink:\n      allOf:\n        - $ref: \"#/components/schemas/NewLink\"\n      properties:\n        rel:\n          description: The link type\n          enum:\n            - website\n          type: string\n      required:\n        - rel\n      type: object\n    Wirecard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                businessSignature:\n                  description: Wirecard Gateway merchant business case signature\n                  format: password\n                  type: string\n                delay:\n                  description: Wirecard Gateway delay\n                  type: integer\n                merchantPassword:\n                  description: Wirecard Gateway merchant password\n                  format: password\n                  type: string\n                merchantUsername:\n                  description: Wirecard Gateway merchant username\n                  type: string\n              required:\n                - merchantUsername\n                - merchantPassword\n                - businessSignature\n                - delay\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/WirecardMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: Wirecard Gateway config\n    WirecardMpi:\n      allOf:\n        - $ref: \"#/components/schemas/WirecardMpis\"\n      description: Wirecard Integrated\n    WirecardMpis:\n      description: Wirecard Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - WirecardMpi\n      required:\n        - name\n      type: object\n    Worldpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                merchantCode:\n                  description: Worldpay Gateway merchant code\n                  format: password\n                  type: string\n                merchantPassword:\n                  description: Worldpay Gateway merchant password\n                  format: password\n                  type: string\n              required:\n                - merchantCode\n                - merchantPassword\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/WorldpayMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: Worldpay Gateway config\n    WorldpayMpis:\n      description: Worldpay Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    ach:\n      allOf:\n        - $ref: \"#/components/schemas/PaymentInstrument\"\n        - properties:\n            bankAccountId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The bank account identifier string\n            gatewayAccountId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The payment gateway identifier string\n          required:\n            - bankAccountId\n          type: object\n      description: ACH payment instrument object\n    and:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/logical\"\n      description: Logical AND\n      type: object\n    auto:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n    between:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - properties:\n            max:\n              type: string\n            min:\n              type: string\n            path:\n              type: string\n          required:\n            - path\n            - min\n            - max\n          type: object\n      description: Between condition\n      type: object\n    cash:\n      allOf:\n        - $ref: \"#/components/schemas/PaymentInstrument\"\n        - properties:\n            receivedBy:\n              description: The receiver's name\n              type: string\n          type: object\n      description: Cash payment instrument object\n    compare:\n      properties:\n        path:\n          type: string\n        value:\n          type: string\n      required:\n        - path\n        - value\n      type: object\n    date-interval:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - properties:\n            duration:\n              description: The number of the units\n              minimum: 1\n              type: integer\n            unit:\n              $ref: \"#/components/schemas/TimeUnit\"\n          required:\n            - duration\n            - unit\n          type: object\n    day-of-month:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - properties:\n            day:\n              description: |\n                The day of the month when event will be scheduled.\n                Be aware if the month has less days,\n                the last day of the month will be selected.\n              maximum: 31\n              minimum: 1\n              type: integer\n            time:\n              $ref: \"#/components/schemas/Time\"\n          required:\n            - day\n          type: object\n    day-of-week:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - properties:\n            day:\n              $ref: \"#/components/schemas/DayOfWeek\"\n            time:\n              $ref: \"#/components/schemas/Time\"\n            week:\n              default: next\n              enum:\n                - next\n                - first-in-month\n                - last-in-month\n              type: string\n          required:\n            - day\n          type: object\n    discount:\n      allOf:\n        - $ref: \"#/components/schemas/AmountAdjustment\"\n        - properties:\n            type:\n              description: The payment amount discount type\n              enum:\n                - percent\n                - fixed\n              type: string\n            value:\n              description: The payment amount discount\n              format: float\n              type: number\n          required:\n            - value\n            - type\n          type: object\n    discounts-per-redemption:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            quantity:\n              description: Restriction quantity\n              type: integer\n          required:\n            - quantity\n          type: object\n      description: discounts-per-redemption restrictions\n    eMerchantPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                apiKey:\n                  description: eMerchantPay Gateway api key\n                  format: password\n                  type: string\n                clientId:\n                  description: eMerchantPay Gateway client ID\n                  type: string\n              required:\n                - clientId\n                - apiKey\n              type: object\n            mpi:\n              $ref: \"#/components/schemas/eMerchantPayMpis\"\n          required:\n            - gatewayConfig\n          type: object\n      description: eMerchantPay Gateway config\n    eMerchantPayMpis:\n      description: eMerchantPay Mpis\n      discriminator:\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/MpiName\"\n          enum:\n            - PaayMpi\n            - Other\n      required:\n        - name\n      type: object\n    equals:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/compare\"\n      description: Equals condition\n      type: object\n    fixed:\n      allOf:\n        - $ref: \"#/components/schemas/Discount\"\n        - properties:\n            amount:\n              description: Discount amount\n              format: double\n              type: number\n            currency:\n              description: Discount currency\n              type: string\n          required:\n            - amount\n            - currency\n          type: object\n      description: Coupon fixed amount discount\n    fixed-fee:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            price:\n              description: \u003e\n                For the very simple price when it's fixed and does not depend on\n                the quantity chosen by customer.\n\n\n                If the price is 0, it's free.\n              example: 99.95\n              format: double\n              type: number\n          required:\n            - price\n          type: object\n    flat-rate:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            maxQuantity:\n              description: If the value is `null`, it's assumed to be infinite.\n              example: 1\n              type: integer\n            price:\n              description: |\n                Flat-rate pricing is represented in a simple price per unit.\n                Some examples:\n\n                - $30 per unit\n                - $0.10 per transaction\n                - $50 per period\n\n                If the price is 0, it's free.\n              example: 99.95\n              format: double\n              type: number\n          required:\n            - price\n          type: object\n    gt:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/compare\"\n      description: Greater than condition\n      type: object\n    gte:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/compare\"\n      description: Greater than or equals condition\n      type: object\n    iCheque:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                clientId:\n                  description: iCheque Gateway client ID\n                  type: string\n                secretWord:\n                  description: iCheque Gateway secret word\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: iCheque Gateway config\n    immediately:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n    in:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - properties:\n            path:\n              type: string\n            values:\n              items:\n                type: string\n              type: array\n          required:\n            - path\n            - values\n          type: object\n      description: In condition\n      type: object\n    logical:\n      properties:\n        conditions:\n          items:\n            $ref: \"#/components/schemas/Condition\"\n          minItems: 2\n          type: array\n      required:\n        - conditions\n      type: object\n    logical-not:\n      example:\n        condition:\n          operation: equals\n          path: /name\n          value: John Dou\n        operation: not\n      properties:\n        condition:\n          $ref: \"#/components/schemas/Condition\"\n      required:\n        - condition\n      type: object\n    lt:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/compare\"\n      description: Less than condition\n      type: object\n    lte:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/compare\"\n      description: Less than or equals condition\n      type: object\n    minimum-order-amount:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            amount:\n              description: Minimum order quantity\n              type: integer\n            currency:\n              description: Minimum order currency\n              type: string\n          required:\n            - amount\n            - currency\n          type: object\n      description: minimum-order-amount restrictions\n    not:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/logical-not\"\n      description: Logical NOT\n      type: object\n    or:\n      allOf:\n        - $ref: \"#/components/schemas/Condition\"\n        - $ref: \"#/components/schemas/logical\"\n      description: Logical OR\n      type: object\n    partial:\n      allOf:\n        - $ref: \"#/components/schemas/AmountAdjustment\"\n        - properties:\n            type:\n              description: The payment amount type\n              enum:\n                - percent\n                - fixed\n              type: string\n            value:\n              description: The payment amount\n              format: float\n              type: number\n          required:\n            - value\n            - type\n          type: object\n    payment-card:\n      allOf:\n        - $ref: \"#/components/schemas/PaymentInstrument\"\n        - properties:\n            gatewayAccountId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The payment gateway identifier string\n            paymentCardId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The payment card identifier string\n          required:\n            - paymentCardId\n          type: object\n      description: Payment card payment instrument object\n    paypal:\n      allOf:\n        - $ref: \"#/components/schemas/PaymentInstrument\"\n        - properties:\n            gatewayAccountId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The payment gateway identifier string\n            payPalAccountId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The PayPal account identifier string\n          required:\n            - payPalAccountId\n          type: object\n      description: PayPal payment instrument object\n    percent:\n      allOf:\n        - $ref: \"#/components/schemas/Discount\"\n        - properties:\n            value:\n              description: Discount percent\n              format: double\n              type: number\n          required:\n            - value\n          type: object\n      description: Coupon percent discount\n    redemptions-per-customer:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            quantity:\n              description: Restriction value\n              type: integer\n          required:\n            - quantity\n          type: object\n      description: Quantity per Customer restrictions\n    restrict-to-invoices:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            invoiceIds:\n              description: Invoice IDs coupon can be applied to\n              items:\n                type: string\n              type: array\n          required:\n            - invoiceIds\n          type: object\n      description: restrict-to-invoices restrictions\n    restrict-to-plans:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            planIds:\n              description: Plan IDs coupon can be applied to\n              items:\n                type: string\n              type: array\n          required:\n            - planIds\n          type: object\n      description: restrict-to-plans restrictions\n    restrict-to-subscriptions:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            subscriptionIds:\n              description: Subscription IDs coupon can be applied to\n              items:\n                type: string\n              type: array\n          required:\n            - subscriptionIds\n          type: object\n      description: restrict-to-subscriptions restrictions\n    stairstep:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            brackets:\n              description: \u003e\n                The price backets, along with the price formula,\n\n                is used to calculate the amount to charge for the product on this plan on the invoice.\n\n\n                The \"stairstep\" example:\n\n\n                Price total | Max quantity | Description\n\n                ------------|--------------|------------\n\n                $5          | 1            | 1\n\n                $13         | 5            | 2 to 5\n\n                $30         | null         | 6 or more\n\n\n                If someone bought 1 apple, it would be $5.\n\n\n                If someone bought 2 apples, it would be $13. For 2 to 5 apples, the price is $13 in any case.\n              items:\n                properties:\n                  maxQuantity:\n                    description: \u003e\n                      If the value is `null`, it's assumed to be infinite.  It\n                      starts at the end of the previous bracket.\n\n                      If there is no previous bracket, it starts at 1.\n                    example: 1\n                    type: integer\n                  price:\n                    description: If the price is 0, it's free.\n                    example: 99.95\n                    format: double\n                    type: number\n                type: object\n              minItems: 1\n              type: array\n          required:\n            - brackets\n          type: object\n    tiered:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            brackets:\n              description: \u003e\n                The price backets, along with the price formula,\n\n                is used to calculate the amount to charge for the product on this plan on the invoice.\n\n\n                The \"tiered\" example:\n\n\n                Price per apple | Max quantity | Description\n\n                ----------------|--------------|------------\n\n                $5              | 1            | 1\n\n                $4              | 5            | 2 to 5\n\n                $3              | null         | 6 or more\n\n\n                If someone bought 1 apple, it would be $5.\n\n\n                If someone bought 2 apples, it would be $9. $5 per apple for the first apple, then $4 per apple for the 2nd to 5th apple.\n              items:\n                properties:\n                  maxQuantity:\n                    description: \u003e\n                      If the value is `null`, it's assumed to be infinite.  It\n                      starts at the end of the previous bracket.\n\n                      If there is no previous bracket, it starts at 1.\n                    example: 1\n                    type: integer\n                  price:\n                    description: If the price is 0, it's free.\n                    example: 99.95\n                    format: double\n                    type: number\n                type: object\n              minItems: 1\n              type: array\n          required:\n            - brackets\n          type: object\n    total-redemptions:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            quantity:\n              description: Total redemptions quantity\n              type: integer\n          required:\n            - quantity\n          type: object\n      description: total-redemptions restrictions\n    vegaaH:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            gatewayConfig:\n              properties:\n                password:\n                  description: vegaaH Gateway password\n                  format: password\n                  type: string\n                terminalId:\n                  description: vegaaH Gateway terminal ID\n                  type: string\n              required:\n                - terminalId\n                - password\n              type: object\n          required:\n            - gatewayConfig\n          type: object\n      description: vegaaH Gateway config\n    volume:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            brackets:\n              description: \u003e\n                The price backets, along with the price formula,\n\n                is used to calculate the amount to charge for the product on this plan on the invoice.\n\n\n                The \"volume\" example:\n\n\n                Price per apple | Max quantity | Description\n\n                ----------------|--------------|------------\n\n                $5              | 1            | 1\n\n                $4              | 5            | 2 to 5\n\n                $3              | null         | 6 or more\n\n\n                If someone bought 1 apple, it would be $5.\n\n\n                If someone bought 2 apples, it would be $8. For 2 to 5 apples, the price is $4 per apple.\n              items:\n                properties:\n                  maxQuantity:\n                    description: \u003e\n                      If the value is `null`, it's assumed to be infinite.  It\n                      starts at the end of the previous bracket.\n\n                      If there is no previous bracket, it starts at 1.\n                    example: 1\n                    type: integer\n                  price:\n                    description: If the price is 0, it's free.\n                    example: 99.95\n                    format: double\n                    type: number\n                type: object\n              minItems: 1\n              type: array\n          required:\n            - brackets\n          type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/rebilly.com-2.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/rebilly.com-2.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ThreeDSecure\": parse schema: property \"enrolled\": parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}