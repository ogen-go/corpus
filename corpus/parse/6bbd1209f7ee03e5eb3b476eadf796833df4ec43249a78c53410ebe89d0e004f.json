{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onfido/onfido-openapi-spec"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 2811,
			"content": "openapi: 3.0.0\ninfo:\n  title: Onfido API\n  description: The Onfido API is used to submit check requests.\n  version: 3.2.0\n  license:\n    name: MIT\nservers:\n  - url: https://api.{region}.onfido.com/v3.2\n    variables:\n      region:\n        enum:\n          - eu\n          - us\n          - ca\n        default: eu\nsecurity:\n  - Token: []\ncomponents:\n  securitySchemes:\n    Token:\n      type: apiKey\n      name: Authorization\n      in: header\nexternalDocs:\n  url: https://documentation.onfido.com\npaths:\n  #\n  # CORE RESOURCES\n  #\n  # Applicants\n  /applicants:\n    $ref: paths/applicants.yaml#/applicants\n  /applicants/{applicant_id}:\n    $ref: paths/applicants.yaml#/applicant\n  /applicants/{applicant_id}/restore:\n    $ref: paths/applicants.yaml#/restore\n  # Documents\n  /documents:\n    $ref: paths/documents.yaml#/documents\n  /documents/{document_id}:\n    $ref: paths/documents.yaml#/document\n  /documents/{document_id}/download:\n    $ref: paths/documents.yaml#/download\n  # Live Photos\n  /live_photos:\n    $ref: paths/live_photos.yaml#/live_photos\n  /live_photos/{live_photo_id}:\n    $ref: paths/live_photos.yaml#/live_photo\n  /live_photos/{live_photo_id}/download:\n    $ref: paths/live_photos.yaml#/download\n  # Live Videos\n  /live_videos:\n    $ref: paths/live_videos.yaml#/live_videos\n  /live_videos/{live_video_id}:\n    $ref: paths/live_videos.yaml#/live_video\n  /live_videos/{live_video_id}/download:\n    $ref: paths/live_videos.yaml#/download\n  /live_videos/{live_video_id}/frame:\n    $ref: paths/live_videos.yaml#/download_frame\n  # Checks\n  /checks:\n    $ref: paths/checks.yaml#/checks\n  /checks/{check_id}:\n    $ref: paths/checks.yaml#/check\n  /checks/{check_id}/resume:\n    $ref: paths/checks.yaml#/resume\n  /checks/{check_id}/download:\n    $ref: paths/checks.yaml#/download\n  # Reports\n  /reports:\n    $ref: paths/reports.yaml#/reports\n  /reports/{report_id}:\n    $ref: paths/reports.yaml#/report\n  /reports/{report_id}/resume:\n    $ref: paths/reports.yaml#/resume\n  /reports/{report_id}/cancel:\n    $ref: paths/reports.yaml#/cancel\n  #\n  # OTHER ENDPOINTS\n  #\n  # Webhooks\n  /webhooks:\n    $ref: paths/webhooks.yaml#/webhooks\n  /webhooks/{webhook_id}:\n    $ref: paths/webhooks.yaml#/webhook\n  # Address Picker\n  /addresses/pick:\n    $ref: paths/addresses.yaml#/pick\n  # SDK Tokens\n  /sdk_token:\n    $ref: paths/sdk_tokens.yaml#/sdk_token\n  # Ping \n  /ping:\n    $ref: paths/ping.yaml#/ping\n  # Trusted Faces\n  /applicants/{applicant_id}/face:\n    $ref: paths/trusted_faces.yaml#/face\n  /applicants/{applicant_id}/face/download:\n    $ref: paths/trusted_faces.yaml#/download\n  # Face Authentication\n  /auth/keys:\n    $ref: paths/face_authenticate.yaml#/keys\n  /auth/attempts:\n    $ref: paths/face_authenticate.yaml#/auth\n  /auth/attempts/{attempt_id}/image:\n    $ref: paths/face_authenticate.yaml#/image\n"
		}
	},
	"Error": "parse: parse spec: parse operations: /applicants/{applicant_id}/restore: referenced pathItem not supported"
}