{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aws/serverless-application-model"
		},
		"file": {
			"name": "api_with_usageplans_intrinsics.json",
			"size": 0,
			"path": "tests/translator/output/api_with_usageplans_intrinsics.json",
			"byteSize": 10138,
			"content": "{\n  \"Conditions\": {\n    \"C1\": {\n      \"Fn::Equals\": [\n        true,\n        true\n      ]\n    }\n  },\n  \"Outputs\": {\n    \"ApiOneUrl\": {\n      \"Description\": \"API endpoint URL for Prod environment\",\n      \"Value\": {\n        \"Fn::Sub\": \"https://${MyApiOne}.execute-api.${AWS::Region}.amazonaws.com/Prod/\"\n      }\n    },\n    \"ApiTwoUrl\": {\n      \"Description\": \"API endpoint URL for Prod environment\",\n      \"Value\": {\n        \"Fn::Sub\": \"https://${MyApiTwo}.execute-api.${AWS::Region}.amazonaws.com/Prod/\"\n      }\n    }\n  },\n  \"Parameters\": {\n    \"UsagePlanType\": {\n      \"Default\": \"PER_API\",\n      \"Type\": \"String\"\n    }\n  },\n  \"Resources\": {\n    \"MyApiOne\": {\n      \"Condition\": \"C1\",\n      \"Properties\": {\n        \"Body\": {\n          \"components\": {\n            \"securitySchemes\": {\n              \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"x-api-key\",\n                \"type\": \"apiKey\"\n              }\n            }\n          },\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"version\": \"1.0\"\n          },\n          \"openapi\": \"3.0.0\",\n          \"paths\": {\n            \"/path/one\": {\n              \"get\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionOne.Arn}/invocations\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::RestApi\"\n    },\n    \"MyApiOneApiKey\": {\n      \"Condition\": \"C1\",\n      \"DependsOn\": [\n        \"MyApiOneUsagePlan\"\n      ],\n      \"Properties\": {\n        \"Enabled\": true,\n        \"StageKeys\": [\n          {\n            \"RestApiId\": {\n              \"Ref\": \"MyApiOne\"\n            },\n            \"StageName\": {\n              \"Ref\": \"MyApiOneProdStage\"\n            }\n          }\n        ]\n      },\n      \"Type\": \"AWS::ApiGateway::ApiKey\"\n    },\n    \"MyApiOneDeployment37a3a51a0f\": {\n      \"Condition\": \"C1\",\n      \"Properties\": {\n        \"Description\": \"RestApi deployment id: 37a3a51a0fd9d750b0bd43bdab40046fdc167e8d\",\n        \"RestApiId\": {\n          \"Ref\": \"MyApiOne\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::Deployment\"\n    },\n    \"MyApiOneProdStage\": {\n      \"Condition\": \"C1\",\n      \"Properties\": {\n        \"DeploymentId\": {\n          \"Ref\": \"MyApiOneDeployment37a3a51a0f\"\n        },\n        \"RestApiId\": {\n          \"Ref\": \"MyApiOne\"\n        },\n        \"StageName\": \"Prod\"\n      },\n      \"Type\": \"AWS::ApiGateway::Stage\"\n    },\n    \"MyApiOneUsagePlan\": {\n      \"Condition\": \"C1\",\n      \"DependsOn\": [\n        \"MyApiOne\"\n      ],\n      \"Properties\": {\n        \"ApiStages\": [\n          {\n            \"ApiId\": {\n              \"Ref\": \"MyApiOne\"\n            },\n            \"Stage\": {\n              \"Ref\": \"MyApiOneProdStage\"\n            }\n          }\n        ]\n      },\n      \"Type\": \"AWS::ApiGateway::UsagePlan\"\n    },\n    \"MyApiOneUsagePlanKey\": {\n      \"Condition\": \"C1\",\n      \"DependsOn\": [\n        \"MyApiOneApiKey\"\n      ],\n      \"Properties\": {\n        \"KeyId\": {\n          \"Ref\": \"MyApiOneApiKey\"\n        },\n        \"KeyType\": \"API_KEY\",\n        \"UsagePlanId\": {\n          \"Ref\": \"MyApiOneUsagePlan\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::UsagePlanKey\"\n    },\n    \"MyApiTwo\": {\n      \"Properties\": {\n        \"Body\": {\n          \"components\": {\n            \"securitySchemes\": {\n              \"api_key\": {\n                \"in\": \"header\",\n                \"name\": \"x-api-key\",\n                \"type\": \"apiKey\"\n              }\n            }\n          },\n          \"info\": {\n            \"title\": {\n              \"Ref\": \"AWS::StackName\"\n            },\n            \"version\": \"1.0\"\n          },\n          \"openapi\": \"3.0.0\",\n          \"paths\": {\n            \"/path/two\": {\n              \"get\": {\n                \"responses\": {},\n                \"security\": [\n                  {\n                    \"api_key\": []\n                  }\n                ],\n                \"x-amazon-apigateway-integration\": {\n                  \"httpMethod\": \"POST\",\n                  \"type\": \"aws_proxy\",\n                  \"uri\": {\n                    \"Fn::Sub\": \"arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${MyFunctionTwo.Arn}/invocations\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::RestApi\"\n    },\n    \"MyApiTwoApiKey\": {\n      \"DependsOn\": [\n        \"MyApiTwoUsagePlan\"\n      ],\n      \"Properties\": {\n        \"Enabled\": true,\n        \"StageKeys\": [\n          {\n            \"RestApiId\": {\n              \"Ref\": \"MyApiTwo\"\n            },\n            \"StageName\": {\n              \"Ref\": \"MyApiTwoProdStage\"\n            }\n          }\n        ]\n      },\n      \"Type\": \"AWS::ApiGateway::ApiKey\"\n    },\n    \"MyApiTwoDeploymenta78b9db9dd\": {\n      \"Properties\": {\n        \"Description\": \"RestApi deployment id: a78b9db9ddd80dec31c4b3c3e2b6e037345252ce\",\n        \"RestApiId\": {\n          \"Ref\": \"MyApiTwo\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::Deployment\"\n    },\n    \"MyApiTwoProdStage\": {\n      \"Properties\": {\n        \"DeploymentId\": {\n          \"Ref\": \"MyApiTwoDeploymenta78b9db9dd\"\n        },\n        \"RestApiId\": {\n          \"Ref\": \"MyApiTwo\"\n        },\n        \"StageName\": \"Prod\"\n      },\n      \"Type\": \"AWS::ApiGateway::Stage\"\n    },\n    \"MyApiTwoUsagePlan\": {\n      \"DependsOn\": [\n        \"MyApiTwo\"\n      ],\n      \"Properties\": {\n        \"ApiStages\": [\n          {\n            \"ApiId\": {\n              \"Ref\": \"MyApiTwo\"\n            },\n            \"Stage\": {\n              \"Ref\": \"MyApiTwoProdStage\"\n            }\n          }\n        ]\n      },\n      \"Type\": \"AWS::ApiGateway::UsagePlan\"\n    },\n    \"MyApiTwoUsagePlanKey\": {\n      \"DependsOn\": [\n        \"MyApiTwoApiKey\"\n      ],\n      \"Properties\": {\n        \"KeyId\": {\n          \"Ref\": \"MyApiTwoApiKey\"\n        },\n        \"KeyType\": \"API_KEY\",\n        \"UsagePlanId\": {\n          \"Ref\": \"MyApiTwoUsagePlan\"\n        }\n      },\n      \"Type\": \"AWS::ApiGateway::UsagePlanKey\"\n    },\n    \"MyFunctionOne\": {\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async (event) =\u003e {\\n  return {\\n  statusCode: 200,\\n  body: JSON.stringify(event),\\n  headers: {}\\n  }\\n}\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"MyFunctionOneRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"MyFunctionOneApiKeyPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunctionOne\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/one\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApiOne\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionOneRole\": {\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    },\n    \"MyFunctionTwo\": {\n      \"Properties\": {\n        \"Code\": {\n          \"ZipFile\": \"exports.handler = async (event) =\u003e {\\n  return {\\n  statusCode: 200,\\n  body: JSON.stringify(event),\\n  headers: {}\\n  }\\n}\\n\"\n        },\n        \"Handler\": \"index.handler\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\n            \"MyFunctionTwoRole\",\n            \"Arn\"\n          ]\n        },\n        \"Runtime\": \"nodejs12.x\",\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::Lambda::Function\"\n    },\n    \"MyFunctionTwoApiKeyPermissionProd\": {\n      \"Properties\": {\n        \"Action\": \"lambda:InvokeFunction\",\n        \"FunctionName\": {\n          \"Ref\": \"MyFunctionTwo\"\n        },\n        \"Principal\": \"apigateway.amazonaws.com\",\n        \"SourceArn\": {\n          \"Fn::Sub\": [\n            \"arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/path/two\",\n            {\n              \"__ApiId__\": {\n                \"Ref\": \"MyApiTwo\"\n              },\n              \"__Stage__\": \"*\"\n            }\n          ]\n        }\n      },\n      \"Type\": \"AWS::Lambda::Permission\"\n    },\n    \"MyFunctionTwoRole\": {\n      \"Properties\": {\n        \"AssumeRolePolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\n                \"sts:AssumeRole\"\n              ],\n              \"Effect\": \"Allow\",\n              \"Principal\": {\n                \"Service\": [\n                  \"lambda.amazonaws.com\"\n                ]\n              }\n            }\n          ],\n          \"Version\": \"2012-10-17\"\n        },\n        \"ManagedPolicyArns\": [\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Tags\": [\n          {\n            \"Key\": \"lambda:createdBy\",\n            \"Value\": \"SAM\"\n          }\n        ]\n      },\n      \"Type\": \"AWS::IAM::Role\"\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/aws/serverless-application-model@2f53aebdcf9b322a395eaa872e5368ddc3c76c95/-/blob/tests/translator/output/api_with_usageplans_intrinsics.json",
			"externalURLs": [
				{
					"url": "https://github.com/aws/serverless-application-model/blob/2f53aebdcf9b322a395eaa872e5368ddc3c76c95/tests/translator/output/api_with_usageplans_intrinsics.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at tests/translator/output/api_with_usageplans_intrinsics.json:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}