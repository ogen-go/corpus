{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/magento.cart/openapi.yml",
			"byteSize": 210629,
			"content": "openapi: 3.0.1\ninfo:\n  title: Magento B2B\n  version: 2.2.10\n  description: \u003e-\n    This is a generated connector for [Magento REST API v2.2](https://devdocs.magento.com/guides/v2.4/rest/bk-rest.html) OpenAPI specification.\n\n    The Magento B2B Rest API service enables applications to build and manage a customized commerce store. \n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n \n    Follow [this guide](https://devdocs.magento.com/guides/v2.4/get-started/authentication/gs-authentication-token.html) and obtain tokens.\n  x-ballerina-display:\n    label: Magento Cart\n    iconPath: \"icon.png\"\ntags:\n- name: carts/\n- name: carts/{cartId}\n- name: carts/{cartId}/billing-address\n- name: carts/{cartId}/coupons\n- name: carts/{cartId}/coupons/{couponCode}\n- name: carts/{cartId}/estimate-shipping-methods\n- name: carts/{cartId}/estimate-shipping-methods-by-address-id\n- name: carts/{cartId}/gift-message\n- name: carts/{cartId}/gift-message/{itemId}\n- name: carts/{cartId}/giftCards\n- name: carts/{cartId}/giftCards/{giftCardCode}\n- name: carts/{cartId}/items\n- name: carts/{cartId}/items/{itemId}\n- name: carts/{cartId}/order\n- name: carts/{cartId}/payment-methods\n- name: carts/{cartId}/selected-payment-method\n- name: carts/{cartId}/shipping-information\n- name: carts/{cartId}/shipping-methods\n- name: carts/{cartId}/totals\n- name: carts/{cartId}/totals-information\n- name: carts/{quoteId}/giftCards\n- name: carts/{quoteId}/items\n- name: carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}\n- name: carts/guest-carts/{cartId}/giftCards\n- name: carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n- name: carts/licence\n- name: carts/mine\n- name: carts/mine/balance/apply\n- name: carts/mine/balance/unapply\n- name: carts/mine/billing-address\n- name: carts/mine/checkGiftCard/{giftCardCode}\n- name: carts/mine/checkout-fields\n- name: carts/mine/collect-totals\n- name: carts/mine/collection-point/search-request\n- name: carts/mine/collection-point/search-result\n- name: carts/mine/collection-point/select\n- name: carts/mine/coupons\n- name: carts/mine/coupons/{couponCode}\n- name: carts/mine/delivery-option\n- name: carts/mine/estimate-shipping-methods\n- name: carts/mine/estimate-shipping-methods-by-address-id\n- name: carts/mine/gift-message\n- name: carts/mine/gift-message/{itemId}\n- name: carts/mine/giftCards\n- name: carts/mine/giftCards/{giftCardCode}\n- name: carts/mine/items\n- name: carts/mine/items/{itemId}\n- name: carts/mine/order\n- name: carts/mine/payment-information\n- name: carts/mine/payment-methods\n- name: carts/mine/selected-payment-method\n- name: carts/mine/set-payment-information\n- name: carts/mine/shipping-information\n- name: carts/mine/shipping-methods\n- name: carts/mine/totals\n- name: carts/mine/totals-information\n- name: carts/search\n- name: categories\n- name: categories/{categoryId}\n- name: categories/{categoryId}/move\n- name: categories/{categoryId}/products\n- name: categories/{categoryId}/products/{sku}\n- name: categories/{id}\n- name: categories/attributes\n- name: categories/attributes/{attributeCode}\n- name: categories/attributes/{attributeCode}/options\n- name: categories/list\n- name: cmsBlock\n- name: cmsBlock/{blockId}\n- name: cmsBlock/{id}\n- name: cmsBlock/search\n- name: cmsPage\n- name: cmsPage/{id}\n- name: cmsPage/{pageId}\n- name: cmsPage/search\nsecurity:\n  - bearerAuth: []\npaths:\n  /V1/carts/:\n    post:\n      tags:\n      - carts/\n      summary: Creates an empty cart and quote for a guest\n      description: Creates an empty cart and quote for a guest.\n      operationId: createEmptyCartForGuest\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Cart ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Cart ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}:\n    get:\n      tags:\n      - carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}\n      summary: Checks gift card balance if added to the cart\n      operationId: checkGiftCardAddedToCart\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: number\n            application/xml:\n              schema:\n                type: number\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/guest-carts/{cartId}/giftCards:\n    post:\n      tags:\n      - carts/guest-carts/{cartId}/giftCards\n      summary: Adds gift card to the cart\n      operationId: addGiftCardToGuestCart\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftCardAccountGuestGiftCardAccountManagementV1AddGiftCardPostBody\n  /V1/carts/guest-carts/{cartId}/giftCards/{giftCardCode}:\n    delete:\n      tags:\n      - carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n      summary: Removes GiftCard Account entity\n      description: Remove GiftCard Account entity\n      operationId: deleteGiftCardAccountByQuoteId\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/licence:\n    get:\n      tags:\n      - carts/licence\n      summary: Lists active checkout agreements.\n      description: Lists active checkout agreements.\n      operationId: ListsActiveCheckoutAgreements\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/checkout-agreements-data-agreement-interface'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/checkout-agreements-data-agreement-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine:\n    get:\n      tags:\n      - carts/mine\n      summary: Returns information for the cart for a specified customer\n      description: Returns information for the cart for a specified customer\n      operationId: getInformationForCartForSpecifiedCustomer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    put:\n      tags:\n      - carts/mine\n      summary: Saves quote\n      description: Save quote\n      operationId: saveQuote\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - quote\n              type: object\n              properties:\n                quote:\n                  $ref: '#/components/schemas/quote-data-cart-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - quote\n              type: object\n              properties:\n                quote:\n                  $ref: '#/components/schemas/quote-data-cart-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartRepositoryV1SavePutBody\n    post:\n      tags:\n      - carts/mine\n      summary: Creates an empty cart and quote for a specified customer if customer\n        does not have a cart yet.\n      description: Creates an empty cart and quote for a specified customer if customer\n        does not have a cart yet.\n      operationId: createEmptyCartForCustomerIfNoCart\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: new cart ID if customer did not have a cart or ID of\n                  the existing cart otherwise.\n            application/xml:\n              schema:\n                type: integer\n                description: new cart ID if customer did not have a cart or ID of\n                  the existing cart otherwise.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/balance/apply:\n    post:\n      tags:\n      - carts/mine/balance/apply\n      summary: Applies store credit\n      description: Apply store credit\n      operationId: ApplyStoreCreditCustomerBalance\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/balance/unapply:\n    post:\n      tags:\n      - carts/mine/balance/unapply\n      summary: Unapplies store credit.\n      description: Unapply store credit.\n      operationId: unapplyStoreCreditCustomerBalance\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/billing-address:\n    get:\n      tags:\n      - carts/mine/billing-address\n      summary: Returns the billing address for a specified quote\n      description: Returns the billing address for a specified quote.\n      operationId: getBillingAddressForSpecifiedQuote\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-address-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-address-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/mine/billing-address\n      summary: Assigns a specified billing address to a specified cart\n      description: Assigns a specified billing address to a specified cart.\n      operationId: assignsSpecifiedBillingAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Address ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Address ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteBillingAddressManagementV1AssignPostBody\n  /V1/carts/mine/checkGiftCard/{giftCardCode}:\n    get:\n      tags:\n      - carts/mine/checkGiftCard/{giftCardCode}\n      summary: Checks gift card balance if applied to given cart\n      operationId: getGiftCardBalanceIfAppliedGivenCart\n      parameters:\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: number\n            application/xml:\n              schema:\n                type: number\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/checkout-fields:\n    post:\n      tags:\n      - carts/mine/checkout-fields\n      summary: Saves Checkout Fields\n      operationId: saveCheckoutFields\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - serviceSelection\n              type: object\n              properties:\n                serviceSelection:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/framework-attribute-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - serviceSelection\n              type: object\n              properties:\n                serviceSelection:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/framework-attribute-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: temandoShippingQuoteCartCheckoutFieldManagementV1SaveCheckoutFieldsPostBody\n  /V1/carts/mine/collect-totals:\n    put:\n      tags:\n      - carts/mine/collect-totals\n      summary: Sets shipping/billing methods and additional data for cart and collect\n        totals.\n      description: Set shipping/billing methods and additional data for cart and collect\n        totals.\n      operationId: setShippingBillingMethodsAndCollectTotal\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                shippingCarrierCode:\n                  type: string\n                  description: The carrier code.\n                shippingMethodCode:\n                  type: string\n                  description: The shipping method code.\n                additionalData:\n                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                shippingCarrierCode:\n                  type: string\n                  description: The carrier code.\n                shippingMethodCode:\n                  type: string\n                  description: The shipping method code.\n                additionalData:\n                  $ref: '#/components/schemas/quote-data-totals-additional-data-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartTotalManagementV1CollectTotalsPutBody\n  /V1/carts/mine/collection-point/search-request:\n    put:\n      tags:\n      - carts/mine/collection-point/search-request\n      summary: Shipping collection point search request\n      operationId: saveSearchRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - countryId\n              - postcode\n              type: object\n              properties:\n                countryId:\n                  type: string\n                postcode:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - countryId\n              - postcode\n              type: object\n              properties:\n                countryId:\n                  type: string\n                postcode:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/temando-shipping-data-collection-point-search-request-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/temando-shipping-data-collection-point-search-request-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        500:\n          description: Internal Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutBody\n    delete:\n      tags:\n      - carts/mine/collection-point/search-request\n      summary: Deletes cart collection point search request\n      operationId: deleteCartCollectionPointSearchRequest\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        500:\n          description: Internal Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/collection-point/search-result:\n    get:\n      tags:\n      - carts/mine/collection-point/search-result\n      summary: Gets collection points search request\n      operationId: getCollectionPointsSearchRequest\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/temando-shipping-data-collection-point-quote-collection-point-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/collection-point/select:\n    post:\n      tags:\n      - carts/mine/collection-point/select\n      summary: Selects cart collection point\n      operationId: selectCollectionPoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - entityId\n              type: object\n              properties:\n                entityId:\n                  type: integer\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - entityId\n              type: object\n              properties:\n                entityId:\n                  type: integer\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        500:\n          description: Internal Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: temandoShippingCollectionPointCartCollectionPointManagementV1SelectCollectionPointPostBody\n  /V1/carts/mine/coupons:\n    get:\n      tags:\n      - carts/mine/coupons\n      summary: Returns information for a coupon in a specified cart\n      description: Returns information for a coupon in a specified cart.\n      operationId: getInformationForCoupon\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: string\n                description: The coupon code data.\n            application/xml:\n              schema:\n                type: string\n                description: The coupon code data.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    delete:\n      tags:\n      - carts/mine/coupons\n      summary: Deletes a coupon from a specified cart\n      description: Deletes a coupon from a specified cart.\n      operationId: deleteCouponFromCart\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/coupons/{couponCode}:\n    put:\n      tags:\n      - carts/mine/coupons/{couponCode}\n      summary: Adds a coupon by code to a specified cart\n      description: Adds a coupon by code to a specified cart.\n      operationId: addCouponByCodeToCart\n      parameters:\n      - name: couponCode\n        in: path\n        description: The coupon code data.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/delivery-option:\n    post:\n      tags:\n      - carts/mine/delivery-option\n      summary: Handles selected delivery option\n      description: Handle selected delivery option.\n      operationId: handleSelectedDeliveryOption\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - selectedOption\n              type: object\n              properties:\n                selectedOption:\n                  type: string\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - selectedOption\n              type: object\n              properties:\n                selectedOption:\n                  type: string\n              xml:\n                name: request\n        required: false\n      responses:\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        500:\n          description: Internal Server error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: temandoShippingQuoteCartDeliveryOptionManagementV1SavePostBody\n  /V1/carts/mine/estimate-shipping-methods:\n    post:\n      tags:\n      - carts/mine/estimate-shipping-methods\n      summary: Estimates shipping by address and return list of available shipping methods\n      description: Estimate shipping by address and return list of available shipping\n        methods\n      operationId: estimateShippingByExtendedAddress\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of shipping methods\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: An array of shipping methods\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteShipmentEstimationV1EstimateByExtendedAddressPostBody\n  /V1/carts/mine/estimate-shipping-methods-by-address-id:\n    post:\n      tags:\n      - carts/mine/estimate-shipping-methods-by-address-id\n      summary: Estimates shipping\n      description: Estimate shipping\n      operationId: estimateShippingMethodsByAddressId\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressId\n              type: object\n              properties:\n                addressId:\n                  type: integer\n                  description: The estimate address id\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressId\n              type: object\n              properties:\n                addressId:\n                  type: integer\n                  description: The estimate address id\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteShippingMethodManagementV1EstimateByAddressIdPostBody\n  /V1/carts/mine/gift-message:\n    get:\n      tags:\n      - carts/mine/gift-message\n      summary: Returns the gift message for a specified order\n      description: Return the gift message for a specified order\n      operationId: getGiftMessageForSpecifiedOrder\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/mine/gift-message\n      summary: Sets the gift message for an entire order\n      description: Set the gift message for an entire order\n      operationId: setGiftMessageForAnOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftMessageCartRepositoryV1SavePostBody\n  /V1/carts/mine/gift-message/{itemId}:\n    get:\n      tags:\n      - carts/mine/gift-message/{itemId}\n      summary: Returns the gift message for a specified item in a specified shopping\n        cart\n      description: Return the gift message for a specified item in a specified shopping\n        cart.\n      operationId: getGiftMessageForSpecifiedItem\n      parameters:\n      - name: itemId\n        in: path\n        description: The item ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/mine/gift-message/{itemId}\n      summary: Sets the gift message for a specified item in a specified shopping\n        cart\n      description: Set the gift message for a specified item in a specified shopping\n        cart.\n      operationId: setGiftMessageForSpecifiedItem\n      parameters:\n      - name: itemId\n        in: path\n        description: The item ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftMessageItemRepositoryV1SavePostBody\n  /V1/carts/mine/giftCards:\n    post:\n      tags:\n      - carts/mine/giftCards\n      summary: Adds gift card to the cart\n      operationId: addGiftCardToCart\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftCardAccountData\n              type: object\n              properties:\n                giftCardAccountData:\n                  $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftCardAccountGiftCardAccountManagementV1SaveByQuoteIdPostBody\n  /V1/carts/mine/giftCards/{giftCardCode}:\n    delete:\n      tags:\n      - carts/mine/giftCards/{giftCardCode}\n      summary: Removes GiftCard Account entity\n      description: Remove GiftCard Account entity\n      operationId: removeGiftCardAccountEntity\n      parameters:\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/items:\n    get:\n      tags:\n      - carts/mine/items\n      summary: Lists items that are assigned to a specified cart\n      description: Lists items that are assigned to a specified cart.\n      operationId: listItemsAssignedToSpecifiedCart\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: Array of items.\n                items:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n            application/xml:\n              schema:\n                type: array\n                description: Array of items.\n                items:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/mine/items\n      summary: Adds/updates the specified cart item\n      description: Add/update the specified cart item\n      operationId: addOrUpdateSpecificCartItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePostBody\n  /V1/carts/mine/items/{itemId}:\n    put:\n      tags:\n      - carts/mine/items/{itemId}\n      summary: Adds/updates the specified cart item\n      description: Add/update the specified cart item.\n      operationId: addOrUpdateSpecificCartItemByID\n      parameters:\n      - name: itemId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePutBody\n    delete:\n      tags:\n      - carts/mine/items/{itemId}\n      summary: Removes the specified item from the specified cart\n      description: Removes the specified item from the specified cart.\n      operationId: RemovesTheSpecifiedItemFromSpecifiedCart\n      parameters:\n      - name: itemId\n        in: path\n        description: The item ID of the item to be removed.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/order:\n    put:\n      tags:\n      - carts/mine/order\n      summary: Places an order for a specified cart\n      description: Places an order for a specified cart.\n      operationId: placeAnOrderForSpecifiedCart\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Order ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Order ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartManagementV1PlaceOrderPutBody\n  /V1/carts/mine/payment-information:\n    get:\n      tags:\n      - carts/mine/payment-information\n      summary: Gets payment information\n      description: Get payment information\n      operationId: getPaymentInformation\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/checkout-data-payment-details-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/checkout-data-payment-details-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/mine/payment-information\n      summary: Sets payment information and place order for a specified cart\n      description: Set payment information and place order for a specified cart.\n      operationId: savePaymentInformationAndPlaceOrderForSpecifiedCart\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Order ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Order ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody\n  /V1/carts/mine/payment-methods:\n    get:\n      tags:\n      - carts/mine/payment-methods\n      summary: Lists available payment methods for a specified shopping cart\n      description: Lists available payment methods for a specified shopping cart.\n        This call returns an array of objects, but detailed information about each\n        object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface\n        to determine which call to use to get detailed information about all attributes\n        for an object.\n      operationId: listAvailablePaymentMethodsForSpecifiedShoppingCart\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: Array of payment methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-payment-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: Array of payment methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-payment-method-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/selected-payment-method:\n    get:\n      tags:\n      - carts/mine/selected-payment-method\n      summary: Returns the payment method for a specified shopping cart\n      description: Returns the payment method for a specified shopping cart.\n      operationId: getThePaymentMethodForSpecifiedShoppingCart\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-payment-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-payment-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    put:\n      tags:\n      - carts/mine/selected-payment-method\n      summary: Adds a specified payment method to a specified shopping cart\n      description: Adds a specified payment method to a specified shopping cart.\n      operationId: addSpecifiedPaymentMethodSpecifiedShoppingCart\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - method\n              type: object\n              properties:\n                method:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - method\n              type: object\n              properties:\n                method:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: string\n                description: redirect url or error message.\n            application/xml:\n              schema:\n                type: string\n                description: redirect url or error message.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quotePaymentMethodManagementV1SetPutBody\n  /V1/carts/mine/set-payment-information:\n    post:\n      tags:\n      - carts/mine/set-payment-information\n      summary: Sets payment information for a specified cart\n      description: Set payment information for a specified cart.\n      operationId: setPaymentInformationForSpecifiedCart\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - paymentMethod\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n                billingAddress:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Order ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Order ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutPaymentInformationManagementV1SavePaymentInformationPostBody\n  /V1/carts/mine/shipping-information:\n    post:\n      tags:\n      - carts/mine/shipping-information\n      summary: Saves address information\n      operationId: saveAddressInformation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/checkout-data-payment-details-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/checkout-data-payment-details-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutShippingInformationManagementV1SaveAddressInformationPostBody\n  /V1/carts/mine/shipping-methods:\n    get:\n      tags:\n      - carts/mine/shipping-methods\n      summary: Lists applicable shipping methods for a specified quote\n      description: Lists applicable shipping methods for a specified quote.\n      operationId: listApplicableShippingMethodsForSpecifiedQuote\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/totals:\n    get:\n      tags:\n      - carts/mine/totals\n      summary: Returns quote totals data for a specified cart\n      description: Returns quote totals data for a specified cart.\n      operationId: getQuoteTotalDataForSpecifiedCart\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/mine/totals-information:\n    post:\n      tags:\n      - carts/mine/totals-information\n      summary: Calculates quote totals based on address and shipping method\n      description: Calculate quote totals based on address and shipping method.\n      operationId: calculateQuoteTotalBasedOnAddressAndShippingMethod\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-totals-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-totals-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutTotalsInformationManagementV1CalculatePostBody\n  /V1/carts/search:\n    get:\n      tags:\n      - carts/search\n      summary: Enables administrative users to list carts that match specified\n        search criteria\n      description: Enables administrative users to list carts that match specified\n        search criteria. This call returns an array of objects, but detailed information\n        about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#CartRepositoryInterface\n        to determine which call to use to get detailed information about all attributes\n        for an object.\n      operationId: enablesAdministrativeUsersToListCarts\n      parameters:\n      - name: searchCriteria[filterGroups][0][filters][0][field]\n        in: query\n        description: Field\n        schema:\n          type: string\n      - name: searchCriteria[filterGroups][0][filters][0][value]\n        in: query\n        description: Value\n        schema:\n          type: string\n      - name: searchCriteria[filterGroups][0][filters][0][conditionType]\n        in: query\n        description: Condition type\n        schema:\n          type: string\n      - name: searchCriteria[sortOrders][0][field]\n        in: query\n        description: Sorting field.\n        schema:\n          type: string\n      - name: searchCriteria[sortOrders][0][direction]\n        in: query\n        description: Sorting direction.\n        schema:\n          type: string\n      - name: searchCriteria[pageSize]\n        in: query\n        description: Page size.\n        schema:\n          type: integer\n      - name: searchCriteria[currentPage]\n        in: query\n        description: Current page.\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-search-results-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-search-results-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}:\n    get:\n      tags:\n      - carts/{cartId}\n      summary: Enables an administrative user to return information for a specified cart\n      description: Enables an administrative user to return information for a specified cart.\n      operationId: enablesAdministrativeUserToReturnInformation \n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    put:\n      tags:\n      - carts/{cartId}\n      summary: Assigns a specified customer to a specified shopping cart\n      description: Assigns a specified customer to a specified shopping cart.\n      operationId: assignSpecifiedCustomerToShoppingCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - customerId\n              - storeId\n              type: object\n              properties:\n                customerId:\n                  type: integer\n                  description: The customer ID.\n                storeId:\n                  type: integer\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - customerId\n              - storeId\n              type: object\n              properties:\n                customerId:\n                  type: integer\n                  description: The customer ID.\n                storeId:\n                  type: integer\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartManagementV1AssignCustomerPutBody\n  /V1/carts/{cartId}/billing-address:\n    get:\n      tags:\n      - carts/{cartId}/billing-address\n      summary: Returns the billing address for a specified quote\n      description: Returns the billing address for a specified quote.\n      operationId: quoteBillingAddressForSpecifiedQuote\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-address-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-address-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/{cartId}/billing-address\n      summary: Assigns a specified billing address to a specified cart\n      description: Assigns a specified billing address to a specified cart.\n      operationId: assignBillingAddressToSpecifiedCartByID\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n                useForShipping:\n                  type: boolean\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Address ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Address ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteBillingAddressManagementV1AssignPostBody\n  /V1/carts/{cartId}/coupons:\n    get:\n      tags:\n      - carts/{cartId}/coupons\n      summary: Returns information for a coupon in a specified cart\n      description: Returns information for a coupon in a specified cart.\n      operationId: getInformationForCouponInSpecifiedCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: string\n                description: The coupon code data.\n            application/xml:\n              schema:\n                type: string\n                description: The coupon code data.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    delete:\n      tags:\n      - carts/{cartId}/coupons\n      summary: Deletes a coupon from a specified cart\n      description: Deletes a coupon from a specified cart.\n      operationId: deleteCouponFromASpecCartByID\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/coupons/{couponCode}:\n    put:\n      tags:\n      - carts/{cartId}/coupons/{couponCode}\n      summary: Adds a coupon by code to a specified cart\n      description: Adds a coupon by code to a specified cart.\n      operationId: addQuoteCouponByCodeToSpecifiedCartByID\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      - name: couponCode\n        in: path\n        description: The coupon code data.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/estimate-shipping-methods:\n    post:\n      tags:\n      - carts/{cartId}/estimate-shipping-methods\n      summary: Estimates shipping by address and return list of available shipping\n        methods\n      description: Estimate shipping by address and return list of available shipping\n        methods\n      operationId: estimateShippingByAddressByCartID\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - address\n              type: object\n              properties:\n                address:\n                  $ref: '#/components/schemas/quote-data-address-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of shipping methods\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: An array of shipping methods\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteShipmentEstimationV1EstimateByExtendedAddressPostBody\n  /V1/carts/{cartId}/estimate-shipping-methods-by-address-id:\n    post:\n      tags:\n      - carts/{cartId}/estimate-shipping-methods-by-address-id\n      summary: Estimates shipping\n      description: Estimate shipping\n      operationId: estimateShippingMethodsByAddressIdAndCartID\n      parameters:\n      - name: cartId\n        in: path\n        description: The shopping cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressId\n              type: object\n              properties:\n                addressId:\n                  type: integer\n                  description: The estimate address id\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressId\n              type: object\n              properties:\n                addressId:\n                  type: integer\n                  description: The estimate address id\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteShippingMethodManagementV1EstimateByAddressIdPostBody\n  /V1/carts/{cartId}/gift-message:\n    get:\n      tags:\n      - carts/{cartId}/gift-message\n      summary: Returns the gift message for a specified order\n      description: Return the gift message for a specified order.\n      operationId: getGiftMessageForSpecificOrderByCartID\n      parameters:\n      - name: cartId\n        in: path\n        description: The shopping cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/{cartId}/gift-message\n      summary: Sets the gift message for an entire order\n      description: Set the gift message for an entire order.\n      operationId: setGiftMessageForEntireOrderByCartID\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftMessageCartRepositoryV1SavePostBody\n  /V1/carts/{cartId}/gift-message/{itemId}:\n    get:\n      tags:\n      - carts/{cartId}/gift-message/{itemId}\n      summary: Returns the gift message for a specified item in a specified shopping\n        cart\n      description: Return the gift message for a specified item in a specified shopping\n        cart.\n      operationId: getGiftMessageForSpecificItemOfSpecShopping\n      parameters:\n      - name: cartId\n        in: path\n        description: The shopping cart ID.\n        required: true\n        schema:\n          type: integer\n      - name: itemId\n        in: path\n        description: The item ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/gift-message-data-message-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    post:\n      tags:\n      - carts/{cartId}/gift-message/{itemId}\n      summary: Sets the gift message for a specified item in a specified shopping\n        cart\n      description: Set the gift message for a specified item in a specified shopping\n        cart.\n      operationId: setGiftMessageForSpecItemInASpecShopping\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      - name: itemId\n        in: path\n        description: The item ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - giftMessage\n              type: object\n              properties:\n                giftMessage:\n                  $ref: '#/components/schemas/gift-message-data-message-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: giftMessageItemRepositoryV1SavePostBody\n  /V1/carts/{cartId}/giftCards/{giftCardCode}:\n    delete:\n      tags:\n      - carts/{cartId}/giftCards/{giftCardCode}\n      summary: Removes GiftCard Account entity\n      description: Remove GiftCard Account entity\n      operationId: removeGiftCardAccountEntityByCartID\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      - name: giftCardCode\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/items:\n    get:\n      tags:\n      - carts/{cartId}/items\n      summary: Lists items that are assigned to a specified cart\n      description: Lists items that are assigned to a specified cart.\n      operationId: listItemsAssignedToSpecificCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: Array of items.\n                items:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n            application/xml:\n              schema:\n                type: array\n                description: Array of items.\n                items:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/items/{itemId}:\n    put:\n      tags:\n      - carts/{cartId}/items/{itemId}\n      summary: Adds/updates the specified cart item\n      description: Add/update the specified cart item.\n      operationId: addOrUpdateTheSpecificCartItem\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: itemId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePutBody\n    delete:\n      tags:\n      - carts/{cartId}/items/{itemId}\n      summary: Removes the specified item from the specified cart\n      description: Removes the specified item from the specified cart.\n      operationId: removesSpecificItemFromSpecifiedCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      - name: itemId\n        in: path\n        description: The item ID of the item to be removed.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: boolean\n            application/xml:\n              schema:\n                type: boolean\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/order:\n    put:\n      tags:\n      - carts/{cartId}/order\n      summary: Places an order for a specified cart\n      description: Places an order for a specified cart.\n      operationId: placesAnOrderForSpecifiedCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              type: object\n              properties:\n                paymentMethod:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: integer\n                description: Order ID.\n            application/xml:\n              schema:\n                type: integer\n                description: Order ID.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartManagementV1PlaceOrderPutBody\n  /V1/carts/{cartId}/payment-methods:\n    get:\n      tags:\n      - carts/{cartId}/payment-methods\n      summary: Lists available payment methods for a specified shopping cart\n      description: Lists available payment methods for a specified shopping cart.\n        This call returns an array of objects, but detailed information about each\n        object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface\n        to determine which call to use to get detailed information about all attributes\n        for an object.\n      operationId: listAvailablePaymentMethodsForShoppingCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: Array of payment methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-payment-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: Array of payment methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-payment-method-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/selected-payment-method:\n    get:\n      tags:\n      - carts/{cartId}/selected-payment-method\n      summary: Returns the payment method for a specified shopping cart\n      description: Returns the payment method for a specified shopping cart.\n      operationId: getPaymentMethodForSpecifiedShoppingCartByID\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-payment-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-payment-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n    put:\n      tags:\n      - carts/{cartId}/selected-payment-method\n      summary: Adds a specified payment method to a specified shopping cart\n      description: Adds a specified payment method to a specified shopping cart.\n      operationId: addSpecifiedPaymentMethodToSpecifiedShoppingCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - method\n              type: object\n              properties:\n                method:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - method\n              type: object\n              properties:\n                method:\n                  $ref: '#/components/schemas/quote-data-payment-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: string\n                description: redirect url or error message.\n            application/xml:\n              schema:\n                type: string\n                description: redirect url or error message.\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quotePaymentMethodManagementV1SetPutBody\n  /V1/carts/{cartId}/shipping-information:\n    post:\n      tags:\n      - carts/{cartId}/shipping-information\n      summary: checks out Shipping Information By ID\n      operationId: checkoutShippingInformationByID\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-shipping-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/checkout-data-payment-details-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/checkout-data-payment-details-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutShippingInformationManagementV1SaveAddressInformationPostBody\n  /V1/carts/{cartId}/shipping-methods:\n    get:\n      tags:\n      - carts/{cartId}/shipping-methods\n      summary: Lists applicable shipping methods for a specified quote\n      description: Lists applicable shipping methods for a specified quote.\n      operationId: getApplicableShippingMethodsForSpecifiedQuote\n      parameters:\n      - name: cartId\n        in: path\n        description: The shopping cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n            application/xml:\n              schema:\n                type: array\n                description: An array of shipping methods.\n                items:\n                  $ref: '#/components/schemas/quote-data-shipping-method-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/totals:\n    get:\n      tags:\n      - carts/{cartId}/totals\n      summary: Returns quote totals data for a specified cart\n      description: Returns quote totals data for a specified cart.\n      operationId: getQuoteTotalsDataForASpecifiedCart\n      parameters:\n      - name: cartId\n        in: path\n        description: The cart ID.\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{cartId}/totals-information:\n    post:\n      tags:\n      - carts/{cartId}/totals-information\n      summary: Calculates quote totals based on address and shipping method\n      description: Calculate quote totals based on address and shipping method.\n      operationId: checkoutTotalsBasedOnAddressAndShippingMethod\n      parameters:\n      - name: cartId\n        in: path\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-totals-information-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - addressInformation\n              type: object\n              properties:\n                addressInformation:\n                  $ref: '#/components/schemas/checkout-data-totals-information-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-totals-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: checkoutTotalsInformationManagementV1CalculatePostBody\n  /V1/carts/{quoteId}/giftCards:\n    get:\n      tags:\n      - carts/{quoteId}/giftCards\n      summary: Returns GiftCard Account cards\n      description: Return GiftCard Account cards\n      operationId: getGiftCardsByQuoteID\n      parameters:\n      - name: quoteId\n        in: path\n        required: true\n        schema:\n          type: integer\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/gift-card-account-data-gift-card-account-interface'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n  /V1/carts/{quoteId}/items:\n    post:\n      tags:\n      - carts/{quoteId}/items\n      summary: Adds/updates the specified cart item\n      description: Add/update the specified cart item.\n      operationId: addOrUpdateTheSpecifiedCartItem\n      parameters:\n      - name: quoteId\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n          application/xml:\n            schema:\n              required:\n              - cartItem\n              type: object\n              properties:\n                cartItem:\n                  $ref: '#/components/schemas/quote-data-cart-item-interface'\n              xml:\n                name: request\n        required: false\n      responses:\n        200:\n          description: 200 Success.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/quote-data-cart-item-interface'\n        400:\n          description: 400 Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        401:\n          description: 401 Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error-response'\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/error-response'\n      x-codegen-request-body-name: quoteCartItemRepositoryV1SavePostBody\ncomponents:\n  securitySchemes:\n    bearerAuth:            # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n  schemas:\n    error-response:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Error message\n        errors:\n          $ref: '#/components/schemas/error-errors'\n        code:\n          type: integer\n          description: Error code\n        parameters:\n          $ref: '#/components/schemas/error-parameters'\n        trace:\n          type: string\n          description: Stack trace\n    error-errors:\n      type: array\n      description: Errors list\n      items:\n        $ref: '#/components/schemas/error-errors-item'\n    error-errors-item:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Error message\n        parameters:\n          $ref: '#/components/schemas/error-parameters'\n      description: Error details\n    error-parameters:\n      type: array\n      description: Error parameters list\n      items:\n        $ref: '#/components/schemas/error-parameters-item'\n    error-parameters-item:\n      type: object\n      properties:\n        resources:\n          type: string\n          description: ACL resource\n        fieldName:\n          type: string\n          description: Missing or invalid field name\n        fieldValue:\n          type: string\n          description: Incorrect field value\n      description: Error parameters item\n    framework-search-criteria-interface:\n      required:\n      - filter_groups\n      type: object\n      properties:\n        filter_groups:\n          type: array\n          description: A list of filter groups.\n          items:\n            $ref: '#/components/schemas/framework-search-filter-group'\n        sort_orders:\n          type: array\n          description: Sort order.\n          items:\n            $ref: '#/components/schemas/framework-sort-order'\n        page_size:\n          type: integer\n          description: Page size.\n        current_page:\n          type: integer\n          description: Current page.\n      description: Search criteria interface.\n    framework-search-filter-group:\n      type: object\n      properties:\n        filters:\n          type: array\n          description: A list of filters in this group\n          items:\n            $ref: '#/components/schemas/framework-filter'\n      description: Groups two or more filters together using a logical OR\n    framework-filter:\n      required:\n      - field\n      - value\n      type: object\n      properties:\n        field:\n          type: string\n          description: Field\n        value:\n          type: string\n          description: Value\n        condition_type:\n          type: string\n          description: Condition type\n      description: Filter which can be used by any methods from service layer.\n    framework-sort-order:\n      required:\n      - direction\n      - field\n      type: object\n      properties:\n        field:\n          type: string\n          description: Sorting field.\n        direction:\n          type: string\n          description: Sorting direction.\n      description: Data object for sort order.\n    customer-data-option-interface:\n      required:\n      - label\n      type: object\n      properties:\n        label:\n          type: string\n          description: Option label\n        value:\n          type: string\n          description: Option value\n        options:\n          type: array\n          description: Nested options\n          items:\n            $ref: '#/components/schemas/customer-data-option-interface'\n      description: Option interface.\n    customer-data-customer-interface:\n      required:\n      - email\n      - firstname\n      - lastname\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Customer id\n        group_id:\n          type: integer\n          description: Group id\n        default_billing:\n          type: string\n          description: Default billing address id\n        default_shipping:\n          type: string\n          description: Default shipping address id\n        confirmation:\n          type: string\n          description: Confirmation\n        created_at:\n          type: string\n          description: Created at time\n        updated_at:\n          type: string\n          description: Updated at time\n        created_in:\n          type: string\n          description: Created in area\n        dob:\n          type: string\n          description: Date of birth\n        email:\n          type: string\n          description: Email address\n        firstname:\n          type: string\n          description: First name\n        lastname:\n          type: string\n          description: Last name\n        middlename:\n          type: string\n          description: Middle name\n        prefix:\n          type: string\n          description: Prefix\n        suffix:\n          type: string\n          description: Suffix\n        gender:\n          type: integer\n          description: Gender\n        store_id:\n          type: integer\n          description: Store id\n        taxvat:\n          type: string\n          description: Tax Vat\n        website_id:\n          type: integer\n          description: Website id\n        addresses:\n          type: array\n          description: Customer addresses.\n          items:\n            $ref: '#/components/schemas/customer-data-address-interface'\n        disable_auto_group_change:\n          type: integer\n          description: Disable auto group change flag.\n        extension_attributes:\n          $ref: '#/components/schemas/customer-data-customer-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Customer interface.\n    customer-data-address-interface:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID\n        customer_id:\n          type: integer\n          description: Customer ID\n        region:\n          $ref: '#/components/schemas/customer-data-region-interface'\n        region_id:\n          type: integer\n          description: Region ID\n        country_id:\n          type: string\n          description: Country code in ISO_3166-2 format\n        street:\n          type: array\n          description: Street\n          items:\n            type: string\n        company:\n          type: string\n          description: Company\n        telephone:\n          type: string\n          description: Telephone number\n        fax:\n          type: string\n          description: Fax number\n        postcode:\n          type: string\n          description: Postcode\n        city:\n          type: string\n          description: City name\n        firstname:\n          type: string\n          description: First name\n        lastname:\n          type: string\n          description: Last name\n        middlename:\n          type: string\n          description: Middle name\n        prefix:\n          type: string\n          description: Prefix\n        suffix:\n          type: string\n          description: Suffix\n        vat_id:\n          type: string\n          description: Vat id\n        default_shipping:\n          type: boolean\n          description: If this address is default shipping address.\n        default_billing:\n          type: boolean\n          description: If this address is default billing address\n        extension_attributes:\n          $ref: '#/components/schemas/customer-data-address-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Customer address interface.\n    customer-data-region-interface:\n      required:\n      - region\n      - region_code\n      - region_id\n      type: object\n      properties:\n        region_code:\n          type: string\n          description: Region code\n        region:\n          type: string\n          description: Region\n        region_id:\n          type: integer\n          description: Region id\n        extension_attributes:\n          $ref: '#/components/schemas/customer-data-region-extension-interface'\n      description: Customer address region interface.\n    customer-data-region-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface\n    customer-data-address-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface\n    framework-attribute-interface:\n      required:\n      - attribute_code\n      - value\n      type: object\n      properties:\n        attribute_code:\n          type: string\n          description: Attribute code\n        value:\n          type: string\n          description: Attribute value\n      description: Interface for custom attribute value.\n    customer-data-customer-extension-interface:\n      type: object\n      properties:\n        company_attributes:\n          $ref: '#/components/schemas/company-data-company-customer-interface'\n        is_subscribed:\n          type: boolean\n        amazon_id:\n          type: string\n        vertex_customer_code:\n          type: string\n      description: ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface\n    company-data-company-customer-interface:\n      type: object\n      properties:\n        customer_id:\n          type: integer\n          description: Customer ID.\n        company_id:\n          type: integer\n          description: Company ID.\n        job_title:\n          type: string\n          description: Get job title.\n        status:\n          type: integer\n          description: Customer status.\n        telephone:\n          type: string\n          description: Get telephone.\n        extension_attributes:\n          $ref: '#/components/schemas/company-data-company-customer-extension-interface'\n      description: Extended customer custom attributes interface.\n    company-data-company-customer-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface\n    framework-data-image-content-interface:\n      required:\n      - base64_encoded_data\n      - name\n      - type\n      type: object\n      properties:\n        base64_encoded_data:\n          type: string\n          description: Media data (base64 encoded content)\n        type:\n          type: string\n          description: MIME type\n        name:\n          type: string\n          description: Image name\n      description: Image Content data interface\n    quote-data-cart-interface:\n      required:\n      - customer\n      - id\n      - store_id\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Cart/quote ID.\n        created_at:\n          type: string\n          description: Cart creation date and time. Otherwise, null.\n        updated_at:\n          type: string\n          description: Cart last update date and time. Otherwise, null.\n        converted_at:\n          type: string\n          description: Cart conversion date and time. Otherwise, null.\n        is_active:\n          type: boolean\n          description: Active status flag value. Otherwise, null.\n        is_virtual:\n          type: boolean\n          description: Virtual flag value. Otherwise, null.\n        items:\n          type: array\n          description: Array of items. Otherwise, null.\n          items:\n            $ref: '#/components/schemas/quote-data-cart-item-interface'\n        items_count:\n          type: integer\n          description: Number of different items or products in the cart. Otherwise,\n            null.\n        items_qty:\n          type: number\n          description: Total quantity of all cart items. Otherwise, null.\n        customer:\n          $ref: '#/components/schemas/customer-data-customer-interface'\n        billing_address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        reserved_order_id:\n          type: string\n          description: Reserved order ID. Otherwise, null.\n        orig_order_id:\n          type: integer\n          description: Original order ID. Otherwise, null.\n        currency:\n          $ref: '#/components/schemas/quote-data-currency-interface'\n        customer_is_guest:\n          type: boolean\n          description: For guest customers, false for logged in customers\n        customer_note:\n          type: string\n          description: Notice text\n        customer_note_notify:\n          type: boolean\n          description: Customer notification flag\n        customer_tax_class_id:\n          type: integer\n          description: Customer tax class ID.\n        store_id:\n          type: integer\n          description: Store identifier\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-cart-extension-interface'\n      description: Interface CartInterface\n    quote-data-cart-item-interface:\n      required:\n      - qty\n      - quote_id\n      type: object\n      properties:\n        item_id:\n          type: integer\n          description: Item ID. Otherwise, null.\n        sku:\n          type: string\n          description: Product SKU. Otherwise, null.\n        qty:\n          type: number\n          description: Product quantity.\n        name:\n          type: string\n          description: Product name. Otherwise, null.\n        price:\n          type: number\n          description: Product price. Otherwise, null.\n        product_type:\n          type: string\n          description: Product type. Otherwise, null.\n        quote_id:\n          type: string\n          description: Quote id.\n        product_option:\n          $ref: '#/components/schemas/quote-data-product-option-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-cart-item-extension-interface'\n      description: Interface CartItemInterface\n    quote-data-product-option-interface:\n      type: object\n      properties:\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-product-option-extension-interface'\n      description: Product option interface\n    quote-data-product-option-extension-interface:\n      type: object\n      properties:\n        custom_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/catalog-data-custom-option-interface'\n        bundle_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/bundle-data-bundle-option-interface'\n        configurable_item_options:\n          type: array\n          items:\n            $ref: '#/components/schemas/configurable-product-data-configurable-item-option-value-interface'\n        downloadable_option:\n          $ref: '#/components/schemas/downloadable-data-downloadable-option-interface'\n        giftcard_item_option:\n          $ref: '#/components/schemas/gift-card-data-gift-card-option-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface\n    catalog-data-custom-option-interface:\n      required:\n      - option_id\n      - option_value\n      type: object\n      properties:\n        option_id:\n          type: string\n          description: Option id\n        option_value:\n          type: string\n          description: Option value\n        extension_attributes:\n          $ref: '#/components/schemas/catalog-data-custom-option-extension-interface'\n      description: Interface CustomOptionInterface\n    catalog-data-custom-option-extension-interface:\n      type: object\n      properties:\n        file_info:\n          $ref: '#/components/schemas/framework-data-image-content-interface'\n      description: ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface\n    bundle-data-bundle-option-interface:\n      required:\n      - option_id\n      - option_qty\n      - option_selections\n      type: object\n      properties:\n        option_id:\n          type: integer\n          description: Bundle option id.\n        option_qty:\n          type: integer\n          description: Bundle option quantity.\n        option_selections:\n          type: array\n          description: Bundle option selection ids.\n          items:\n            type: integer\n        extension_attributes:\n          $ref: '#/components/schemas/bundle-data-bundle-option-extension-interface'\n      description: Interface BundleOptionInterface\n    bundle-data-bundle-option-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\BundleOptionInterface\n    configurable-product-data-configurable-item-option-value-interface:\n      required:\n      - option_id\n      type: object\n      properties:\n        option_id:\n          type: string\n          description: Option SKU\n        option_value:\n          type: integer\n          description: Item id\n        extension_attributes:\n          $ref: '#/components/schemas/configurable-product-data-configurable-item-option-value-extension-interface'\n      description: Interface ConfigurableItemOptionValueInterface\n    configurable-product-data-configurable-item-option-value-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\ConfigurableItemOptionValueInterface\n    downloadable-data-downloadable-option-interface:\n      required:\n      - downloadable_links\n      type: object\n      properties:\n        downloadable_links:\n          type: array\n          description: The list of downloadable links\n          items:\n            type: integer\n      description: Downloadable Option\n    gift-card-data-gift-card-option-interface:\n      required:\n      - giftcard_amount\n      - giftcard_recipient_email\n      - giftcard_recipient_name\n      - giftcard_sender_email\n      - giftcard_sender_name\n      type: object\n      properties:\n        giftcard_amount:\n          type: string\n          description: Gift card amount.\n        custom_giftcard_amount:\n          type: number\n          description: Gift card open amount value.\n        giftcard_sender_name:\n          type: string\n          description: Gift card sender name.\n        giftcard_recipient_name:\n          type: string\n          description: Gift card recipient name.\n        giftcard_sender_email:\n          type: string\n          description: Gift card sender email.\n        giftcard_recipient_email:\n          type: string\n          description: Gift card recipient email.\n        giftcard_message:\n          type: string\n          description: Giftcard message.\n        extension_attributes:\n          $ref: '#/components/schemas/gift-card-data-gift-card-option-extension-interface'\n      description: Interface GiftCardOptionInterface\n    gift-card-data-gift-card-option-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface \n    quote-data-cart-item-extension-interface:\n      type: object\n      properties:\n        negotiable_quote_item:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartItemInterface\n    negotiable-quote-data-negotiable-quote-item-interface:\n      required:\n      - item_id\n      - original_discount_amount\n      - original_price\n      - original_tax_amount\n      type: object\n      properties:\n        item_id:\n          type: integer\n          description: Quote item id\n        original_price:\n          type: number\n          description: Quote item original price\n        original_tax_amount:\n          type: number\n          description: Quote item original tax amount\n        original_discount_amount:\n          type: number\n          description: Quote item original discount amount\n        extension_attributes:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-extension-interface'\n      description: Interface CompanyQuoteConfigInterface\n    negotiable-quote-data-negotiable-quote-item-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface\n    quote-data-address-interface:\n      required:\n      - city\n      - country_id\n      - email\n      - firstname\n      - lastname\n      - postcode\n      - region\n      - region_code\n      - region_id\n      - street\n      - telephone\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Id\n        region:\n          type: string\n          description: Region name\n        region_id:\n          type: integer\n          description: Region id\n        region_code:\n          type: string\n          description: Region code\n        country_id:\n          type: string\n          description: Country id\n        street:\n          type: array\n          description: Street\n          items:\n            type: string\n        company:\n          type: string\n          description: Company\n        telephone:\n          type: string\n          description: Telephone number\n        fax:\n          type: string\n          description: Fax number\n        postcode:\n          type: string\n          description: Postcode\n        city:\n          type: string\n          description: City name\n        firstname:\n          type: string\n          description: First name\n        lastname:\n          type: string\n          description: Last name\n        middlename:\n          type: string\n          description: Middle name\n        prefix:\n          type: string\n          description: Prefix\n        suffix:\n          type: string\n          description: Suffix\n        vat_id:\n          type: string\n          description: Vat id\n        customer_id:\n          type: integer\n          description: Customer id\n        email:\n          type: string\n          description: Billing/shipping email\n        same_as_billing:\n          type: integer\n          description: Same as billing flag\n        customer_address_id:\n          type: integer\n          description: Customer address id\n        save_in_address_book:\n          type: integer\n          description: Save in address book flag\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-address-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Interface AddressInterface\n    quote-data-address-extension-interface:\n      type: object\n      properties:\n        gift_registry_id:\n          type: integer\n        checkout_fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface\n    quote-data-currency-interface:\n      type: object\n      properties:\n        global_currency_code:\n          type: string\n          description: Global currency code\n        base_currency_code:\n          type: string\n          description: Base currency code\n        store_currency_code:\n          type: string\n          description: Store currency code\n        quote_currency_code:\n          type: string\n          description: Quote currency code\n        store_to_base_rate:\n          type: number\n          description: Store currency to base currency rate\n        store_to_quote_rate:\n          type: number\n          description: Store currency to quote currency rate\n        base_to_global_rate:\n          type: number\n          description: Base currency to global currency rate\n        base_to_quote_rate:\n          type: number\n          description: Base currency to quote currency rate\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-currency-extension-interface'\n      description: Interface CurrencyInterface\n    quote-data-currency-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CurrencyInterface\n    quote-data-cart-extension-interface:\n      type: object\n      properties:\n        shipping_assignments:\n          type: array\n          items:\n            $ref: '#/components/schemas/quote-data-shipping-assignment-interface'\n        negotiable_quote:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-interface'\n        amazon_order_reference_id:\n          type: string\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\CartInterface\n    quote-data-shipping-assignment-interface:\n      required:\n      - items\n      - shipping\n      type: object\n      properties:\n        shipping:\n          $ref: '#/components/schemas/quote-data-shipping-interface'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/quote-data-cart-item-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-shipping-assignment-extension-interface'\n      description: Interface ShippingAssignmentInterface\n    quote-data-shipping-interface:\n      required:\n      - address\n      - method\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        method:\n          type: string\n          description: Shipping method\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-shipping-extension-interface'\n      description: Interface ShippingInterface\n    quote-data-shipping-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface\n    quote-data-shipping-assignment-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface\n    negotiable-quote-data-negotiable-quote-interface:\n      required:\n      - applied_rule_ids\n      - creator_id\n      - creator_type\n      - deleted_sku\n      - email_notification_status\n      - expiration_period\n      - has_unconfirmed_changes\n      - is_address_draft\n      - is_customer_price_changed\n      - is_regular_quote\n      - is_shipping_tax_changed\n      - negotiated_price_type\n      - negotiated_price_value\n      - notifications\n      - quote_id\n      - quote_name\n      - shipping_price\n      - status\n      type: object\n      properties:\n        quote_id:\n          type: integer\n          description: Negotiable quote ID.\n        is_regular_quote:\n          type: boolean\n          description: Is regular quote.\n        status:\n          type: string\n          description: Negotiable quote status.\n        negotiated_price_type:\n          type: integer\n          description: Negotiated price type.\n        negotiated_price_value:\n          type: number\n          description: Negotiated price value.\n        shipping_price:\n          type: number\n          description: Proposed shipping price.\n        quote_name:\n          type: string\n          description: Negotiable quote name.\n        expiration_period:\n          type: string\n          description: Expiration period.\n        email_notification_status:\n          type: integer\n          description: Email notification status.\n        has_unconfirmed_changes:\n          type: boolean\n          description: Has unconfirmed changes.\n        is_shipping_tax_changed:\n          type: boolean\n          description: Shipping tax changes.\n        is_customer_price_changed:\n          type: boolean\n          description: Customer price changes.\n        notifications:\n          type: integer\n          description: Quote notifications.\n        applied_rule_ids:\n          type: string\n          description: Quote rules.\n        is_address_draft:\n          type: boolean\n          description: Is address draft.\n        deleted_sku:\n          type: string\n          description: Deleted products sku.\n        creator_id:\n          type: integer\n          description: Quote creator id.\n        creator_type:\n          type: integer\n          description: Quote creator type.\n        original_total_price:\n          type: number\n          description: Quote original total price.\n        base_original_total_price:\n          type: number\n          description: Quote original total price in base currency.\n        negotiated_total_price:\n          type: number\n          description: Quote negotiated total price.\n        base_negotiated_total_price:\n          type: number\n          description: Quote negotiated total price in base currency.\n        extension_attributes:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-extension-interface'\n      description: Interface NegotiableQuoteInterface\n    negotiable-quote-data-negotiable-quote-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteInterface\n    quote-data-cart-search-results-interface:\n      required:\n      - items\n      - search_criteria\n      - total_count\n      type: object\n      properties:\n        items:\n          type: array\n          description: Carts list.\n          items:\n            $ref: '#/components/schemas/quote-data-cart-interface'\n        search_criteria:\n          $ref: '#/components/schemas/framework-search-criteria-interface'\n        total_count:\n          type: integer\n          description: Total count.\n      description: Interface CartSearchResultsInterface\n    quote-data-payment-interface:\n      required:\n      - method\n      type: object\n      properties:\n        po_number:\n          type: string\n          description: Purchase order number\n        method:\n          type: string\n          description: Payment method code\n        additional_data:\n          type: array\n          description: Payment additional details\n          items:\n            type: string\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-payment-extension-interface'\n      description: Interface PaymentInterface\n    quote-data-payment-extension-interface:\n      type: object\n      properties:\n        agreement_ids:\n          type: array\n          items:\n            type: string\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\PaymentInterface\n    quote-data-shipping-method-interface:\n      required:\n      - amount\n      - available\n      - base_amount\n      - carrier_code\n      - error_message\n      - method_code\n      - price_excl_tax\n      - price_incl_tax\n      type: object\n      properties:\n        carrier_code:\n          type: string\n          description: Shipping carrier code.\n        method_code:\n          type: string\n          description: Shipping method code.\n        carrier_title:\n          type: string\n          description: Shipping carrier title. Otherwise, null.\n        method_title:\n          type: string\n          description: Shipping method title. Otherwise, null.\n        amount:\n          type: number\n          description: Shipping amount in store currency.\n        base_amount:\n          type: number\n          description: Shipping amount in base currency.\n        available:\n          type: boolean\n          description: The value of the availability flag for the current shipping\n            method.\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-shipping-method-extension-interface'\n        error_message:\n          type: string\n          description: Shipping Error message.\n        price_excl_tax:\n          type: number\n          description: Shipping price excl tax.\n        price_incl_tax:\n          type: number\n          description: Shipping price incl tax.\n      description: Interface ShippingMethodInterface\n    quote-data-shipping-method-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface\n    quote-data-payment-method-interface:\n      required:\n      - code\n      - title\n      type: object\n      properties:\n        code:\n          type: string\n          description: Payment method code\n        title:\n          type: string\n          description: Payment method title\n      description: Interface PaymentMethodInterface\n    quote-data-totals-interface:\n      required:\n      - total_segments\n      - weee_tax_applied_amount\n      type: object\n      properties:\n        grand_total:\n          type: number\n          description: Grand total in quote currency\n        base_grand_total:\n          type: number\n          description: Grand total in base currency\n        subtotal:\n          type: number\n          description: Subtotal in quote currency\n        base_subtotal:\n          type: number\n          description: Subtotal in base currency\n        discount_amount:\n          type: number\n          description: Discount amount in quote currency\n        base_discount_amount:\n          type: number\n          description: Discount amount in base currency\n        subtotal_with_discount:\n          type: number\n          description: Subtotal in quote currency with applied discount\n        base_subtotal_with_discount:\n          type: number\n          description: Subtotal in base currency with applied discount\n        shipping_amount:\n          type: number\n          description: Shipping amount in quote currency\n        base_shipping_amount:\n          type: number\n          description: Shipping amount in base currency\n        shipping_discount_amount:\n          type: number\n          description: Shipping discount amount in quote currency\n        base_shipping_discount_amount:\n          type: number\n          description: Shipping discount amount in base currency\n        tax_amount:\n          type: number\n          description: Tax amount in quote currency\n        base_tax_amount:\n          type: number\n          description: Tax amount in base currency\n        weee_tax_applied_amount:\n          type: number\n          description: Item weee tax applied amount in quote currency.\n        shipping_tax_amount:\n          type: number\n          description: Shipping tax amount in quote currency\n        base_shipping_tax_amount:\n          type: number\n          description: Shipping tax amount in base currency\n        subtotal_incl_tax:\n          type: number\n          description: Subtotal including tax in quote currency\n        base_subtotal_incl_tax:\n          type: number\n          description: Subtotal including tax in base currency\n        shipping_incl_tax:\n          type: number\n          description: Shipping including tax in quote currency\n        base_shipping_incl_tax:\n          type: number\n          description: Shipping including tax in base currency\n        base_currency_code:\n          type: string\n          description: Base currency code\n        quote_currency_code:\n          type: string\n          description: Quote currency code\n        coupon_code:\n          type: string\n          description: Applied coupon code\n        items_qty:\n          type: integer\n          description: Items qty\n        items:\n          type: array\n          description: Totals by items\n          items:\n            $ref: '#/components/schemas/quote-data-totals-item-interface'\n        total_segments:\n          type: array\n          description: Dynamically calculated totals\n          items:\n            $ref: '#/components/schemas/quote-data-total-segment-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-totals-extension-interface'\n      description: Interface TotalsInterface\n    quote-data-totals-item-interface:\n      required:\n      - base_price\n      - base_row_total\n      - item_id\n      - options\n      - price\n      - qty\n      - row_total\n      - weee_tax_applied\n      - weee_tax_applied_amount\n      type: object\n      properties:\n        item_id:\n          type: integer\n          description: Item id\n        price:\n          type: number\n          description: Item price in quote currency.\n        base_price:\n          type: number\n          description: Item price in base currency.\n        qty:\n          type: number\n          description: Item quantity.\n        row_total:\n          type: number\n          description: Row total in quote currency.\n        base_row_total:\n          type: number\n          description: Row total in base currency.\n        row_total_with_discount:\n          type: number\n          description: Row total with discount in quote currency. Otherwise, null.\n        tax_amount:\n          type: number\n          description: Tax amount in quote currency. Otherwise, null.\n        base_tax_amount:\n          type: number\n          description: Tax amount in base currency. Otherwise, null.\n        tax_percent:\n          type: number\n          description: Tax percent. Otherwise, null.\n        discount_amount:\n          type: number\n          description: Discount amount in quote currency. Otherwise, null.\n        base_discount_amount:\n          type: number\n          description: Discount amount in base currency. Otherwise, null.\n        discount_percent:\n          type: number\n          description: Discount percent. Otherwise, null.\n        price_incl_tax:\n          type: number\n          description: Price including tax in quote currency. Otherwise, null.\n        base_price_incl_tax:\n          type: number\n          description: Price including tax in base currency. Otherwise, null.\n        row_total_incl_tax:\n          type: number\n          description: Row total including tax in quote currency. Otherwise, null.\n        base_row_total_incl_tax:\n          type: number\n          description: Row total including tax in base currency. Otherwise, null.\n        options:\n          type: string\n          description: Item price in quote currency.\n        weee_tax_applied_amount:\n          type: number\n          description: Item weee tax applied amount in quote currency.\n        weee_tax_applied:\n          type: string\n          description: Item weee tax applied in quote currency.\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-totals-item-extension-interface'\n        name:\n          type: string\n          description: Product name. Otherwise, null.\n      description: Interface TotalsItemInterface\n    quote-data-totals-item-extension-interface:\n      type: object\n      properties:\n        negotiable_quote_item_totals:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsItemInterface\n    negotiable-quote-data-negotiable-quote-item-totals-interface:\n      required:\n      - base_cart_price\n      - base_cart_price_incl_tax\n      - base_cart_tax\n      - base_catalog_price\n      - base_catalog_price_incl_tax\n      - cart_price\n      - cart_price_incl_tax\n      - cart_tax\n      - catalog_price\n      - catalog_price_incl_tax\n      - cost\n      type: object\n      properties:\n        cost:\n          type: number\n          description: Cost for quote item.\n        catalog_price:\n          type: number\n          description: Catalog price for quote item.\n        base_catalog_price:\n          type: number\n          description: Catalog price for quote item in base currency.\n        catalog_price_incl_tax:\n          type: number\n          description: Catalog price with included tax for quote item.\n        base_catalog_price_incl_tax:\n          type: number\n          description: Catalog price with included tax for quote item in base currency.\n        cart_price:\n          type: number\n          description: Cart price for quote item.\n        base_cart_price:\n          type: number\n          description: Cart price for quote item in base currency.\n        cart_tax:\n          type: number\n          description: Tax from catalog price for quote item.\n        base_cart_tax:\n          type: number\n          description: Tax from catalog price for quote item in base currency.\n        cart_price_incl_tax:\n          type: number\n          description: Cart price with included tax for quote item.\n        base_cart_price_incl_tax:\n          type: number\n          description: Cart price with included tax for quote item in base currency.\n        extension_attributes:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-item-totals-extension-interface'\n      description: Extension attribute for quote item totals model.\n    negotiable-quote-data-negotiable-quote-item-totals-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemTotalsInterface\n    quote-data-total-segment-interface:\n      required:\n      - code\n      - value\n      type: object\n      properties:\n        code:\n          type: string\n          description: Code\n        title:\n          type: string\n          description: Total title\n        value:\n          type: number\n          description: Total value\n        area:\n          type: string\n          description: Display area code.\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-total-segment-extension-interface'\n      description: Interface TotalsInterface\n    quote-data-total-segment-extension-interface:\n      type: object\n      properties:\n        tax_grandtotal_details:\n          type: array\n          items:\n            $ref: '#/components/schemas/tax-data-grand-total-details-interface'\n        gift_cards:\n          type: string\n        gw_order_id:\n          type: string\n        gw_item_ids:\n          type: array\n          items:\n            type: string\n        gw_allow_gift_receipt:\n          type: string\n        gw_add_card:\n          type: string\n        gw_price:\n          type: string\n        gw_base_price:\n          type: string\n        gw_items_price:\n          type: string\n        gw_items_base_price:\n          type: string\n        gw_card_price:\n          type: string\n        gw_card_base_price:\n          type: string\n        gw_base_tax_amount:\n          type: string\n        gw_tax_amount:\n          type: string\n        gw_items_base_tax_amount:\n          type: string\n        gw_items_tax_amount:\n          type: string\n        gw_card_base_tax_amount:\n          type: string\n        gw_card_tax_amount:\n          type: string\n        gw_price_incl_tax:\n          type: string\n        gw_base_price_incl_tax:\n          type: string\n        gw_card_price_incl_tax:\n          type: string\n        gw_card_base_price_incl_tax:\n          type: string\n        gw_items_price_incl_tax:\n          type: string\n        gw_items_base_price_incl_tax:\n          type: string\n        vertex_tax_calculation_messages:\n          type: array\n          items:\n            type: string\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalSegmentInterface    \n    tax-data-grand-total-details-interface:\n      required:\n      - amount\n      - group_id\n      - rates\n      type: object\n      properties:\n        amount:\n          type: number\n          description: Tax amount value\n        rates:\n          type: array\n          description: Tax rates info\n          items:\n            $ref: '#/components/schemas/tax-data-grand-total-rates-interface'\n        group_id:\n          type: integer\n          description: Group identifier\n      description: Interface GrandTotalDetailsInterface\n    tax-data-grand-total-rates-interface:\n      required:\n      - percent\n      - title\n      type: object\n      properties:\n        percent:\n          type: string\n          description: Tax percentage value\n        title:\n          type: string\n          description: Rate title\n      description: Interface GrandTotalRatesInterface  \n    quote-data-totals-extension-interface:\n      type: object\n      properties:\n        coupon_label:\n          type: string\n        base_customer_balance_amount:\n          type: number\n        customer_balance_amount:\n          type: number\n        negotiable_quote_totals:\n          $ref: '#/components/schemas/negotiable-quote-data-negotiable-quote-totals-interface'\n        reward_points_balance:\n          type: number\n        reward_currency_amount:\n          type: number\n        base_reward_currency_amount:\n          type: number\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface\n    negotiable-quote-data-negotiable-quote-totals-interface:\n      required:\n      - base_cost_total\n      - base_original_price_incl_tax\n      - base_original_tax\n      - base_original_total\n      - base_to_quote_rate\n      - cost_total\n      - created_at\n      - customer_group\n      - items_count\n      - negotiated_price_type\n      - negotiated_price_value\n      - original_price_incl_tax\n      - original_tax\n      - original_total\n      - quote_status\n      - updated_at\n      type: object\n      properties:\n        items_count:\n          type: integer\n          description: The number of different items or products in the cart.\n        quote_status:\n          type: string\n          description: Negotiable quote status.\n        created_at:\n          type: string\n          description: The cart creation date and time.\n        updated_at:\n          type: string\n          description: The cart last update date and time.\n        customer_group:\n          type: integer\n          description: Customer group id.\n        base_to_quote_rate:\n          type: number\n          description: Base currency to quote currency rate.\n        cost_total:\n          type: number\n          description: Total cost for quote.\n        base_cost_total:\n          type: number\n          description: Total cost for quote in base currency.\n        original_total:\n          type: number\n          description: Original quote total.\n        base_original_total:\n          type: number\n          description: Original quote total in base currency.\n        original_tax:\n          type: number\n          description: Original tax amount for quote.\n        base_original_tax:\n          type: number\n          description: Original tax amount for quote in base currency.\n        original_price_incl_tax:\n          type: number\n          description: Original price with included tax for quote.\n        base_original_price_incl_tax:\n          type: number\n          description: Original price with included tax for quote in base currency.\n        negotiated_price_type:\n          type: integer\n          description: Negotiable quote type.\n        negotiated_price_value:\n          type: number\n          description: Negotiable price value for quote.\n      description: Extension attribute for quote totals model.\n    quote-data-totals-additional-data-interface:\n      type: object\n      properties:\n        extension_attributes:\n          $ref: '#/components/schemas/quote-data-totals-additional-data-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Additional data for totals collection.\n    quote-data-totals-additional-data-extension-interface:\n      type: object\n      properties:\n        gift_messages:\n          type: array\n          items:\n            $ref: '#/components/schemas/gift-message-data-message-interface'\n      description: ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface\n    gift-message-data-message-interface:\n      required:\n      - message\n      - recipient\n      - sender\n      type: object\n      properties:\n        gift_message_id:\n          type: integer\n          description: Gift message ID. Otherwise, null.\n        customer_id:\n          type: integer\n          description: Customer ID. Otherwise, null.\n        sender:\n          type: string\n          description: Sender name.\n        recipient:\n          type: string\n          description: Recipient name.\n        message:\n          type: string\n          description: Message text.\n        extension_attributes:\n          $ref: '#/components/schemas/gift-message-data-message-extension-interface'\n      description: Interface MessageInterface\n    gift-message-data-message-extension-interface:\n      type: object\n      properties:\n        entity_id:\n          type: string\n        entity_type:\n          type: string\n        wrapping_id:\n          type: integer\n        wrapping_allow_gift_receipt:\n          type: boolean\n        wrapping_add_printed_card:\n          type: boolean\n      description: ExtensionInterface class for @see \\Magento\\GiftMessage\\Api\\Data\\MessageInterface\n    framework-criteria-interface:\n      required:\n      - criteria_list\n      - filters\n      - limit\n      - mapper_interface_name\n      - orders\n      type: object\n      properties:\n        mapper_interface_name:\n          type: string\n          description: Associated Mapper Interface name\n        criteria_list:\n          type: array\n          description: Criteria objects added to current Composite Criteria\n          items:\n            $ref: '#/components/schemas/framework-criteria-interface'\n        filters:\n          type: array\n          description: List of filters\n          items:\n            type: string\n        orders:\n          type: array\n          description: Ordering criteria\n          items:\n            type: string\n        limit:\n          type: array\n          description: Limit\n          items:\n            type: string\n      description: Interface CriteriaInterface\n    checkout-data-shipping-information-interface:\n      required:\n      - shipping_address\n      - shipping_carrier_code\n      - shipping_method_code\n      type: object\n      properties:\n        shipping_address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        billing_address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        shipping_method_code:\n          type: string\n          description: Shipping method code\n        shipping_carrier_code:\n          type: string\n          description: Carrier code\n        extension_attributes:\n          $ref: '#/components/schemas/checkout-data-shipping-information-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Interface ShippingInformationInterface\n    checkout-data-shipping-information-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface\n    checkout-data-payment-details-interface:\n      required:\n      - payment_methods\n      - totals\n      type: object\n      properties:\n        payment_methods:\n          type: array\n          items:\n            $ref: '#/components/schemas/quote-data-payment-method-interface'\n        totals:\n          $ref: '#/components/schemas/quote-data-totals-interface'\n        extension_attributes:\n          $ref: '#/components/schemas/checkout-data-payment-details-extension-interface'\n      description: Interface PaymentDetailsInterface\n    checkout-data-payment-details-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\PaymentDetailsInterface\n    checkout-data-totals-information-interface:\n      required:\n      - address\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/quote-data-address-interface'\n        shipping_method_code:\n          type: string\n          description: Shipping method code\n        shipping_carrier_code:\n          type: string\n          description: Carrier code\n        extension_attributes:\n          $ref: '#/components/schemas/checkout-data-totals-information-extension-interface'\n        custom_attributes:\n          type: array\n          description: Custom attributes values.\n          items:\n            $ref: '#/components/schemas/framework-attribute-interface'\n      description: Interface TotalsInformationInterface\n    checkout-data-totals-information-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface\n    checkout-agreements-data-agreement-interface:\n      required:\n      - agreement_id\n      - checkbox_text\n      - content\n      - is_active\n      - is_html\n      - mode\n      - name\n      type: object\n      properties:\n        agreement_id:\n          type: integer\n          description: Agreement ID.\n        name:\n          type: string\n          description: Agreement name.\n        content:\n          type: string\n          description: Agreement content.\n        content_height:\n          type: string\n          description: Agreement content height. Otherwise, null.\n        checkbox_text:\n          type: string\n          description: Agreement checkbox text.\n        is_active:\n          type: boolean\n          description: Agreement status.\n        is_html:\n          type: boolean\n          description: '* true - HTML. * false - plain text.'\n        mode:\n          type: integer\n          description: The agreement applied mode.\n        extension_attributes:\n          $ref: '#/components/schemas/checkout-agreements-data-agreement-extension-interface'\n      description: Interface AgreementInterface  \n    checkout-agreements-data-agreement-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\CheckoutAgreements\\Api\\Data\\AgreementInterface\n    gift-card-account-data-gift-card-account-interface:\n      required:\n      - base_gift_cards_amount\n      - base_gift_cards_amount_used\n      - gift_cards\n      - gift_cards_amount\n      - gift_cards_amount_used\n      type: object\n      properties:\n        gift_cards:\n          type: array\n          description: Cards codes\n          items:\n            type: string\n        gift_cards_amount:\n          type: number\n          description: Cards amount in quote currency\n        base_gift_cards_amount:\n          type: number\n          description: Cards amount in base currency\n        gift_cards_amount_used:\n          type: number\n          description: Cards amount used in quote currency\n        base_gift_cards_amount_used:\n          type: number\n          description: Cards amount used in base currency\n        extension_attributes:\n          $ref: '#/components/schemas/gift-card-account-data-gift-card-account-extension-interface'\n      description: Gift Card Account data\n    gift-card-account-data-gift-card-account-extension-interface:\n      type: object\n      description: ExtensionInterface class for @see \\Magento\\GiftCardAccount\\Api\\Data\\GiftCardAccountInterface\n    temando-shipping-data-collection-point-search-request-interface:\n      required:\n      - country_id\n      - pending\n      - postcode\n      - shipping_address_id\n      type: object\n      properties:\n        shipping_address_id:\n          type: integer\n        country_id:\n          type: string\n        postcode:\n          type: string\n        pending:\n          type: boolean\n      description: Temando Collection Point Search Request Interface\n    temando-shipping-data-collection-point-quote-collection-point-interface:\n      required:\n      - city\n      - collection_point_id\n      - country\n      - entity_id\n      - name\n      - opening_hours\n      - postcode\n      - recipient_address_id\n      - region\n      - selected\n      - shipping_experiences\n      - street\n      type: object\n      properties:\n        entity_id:\n          type: integer\n        collection_point_id:\n          type: string\n        recipient_address_id:\n          type: integer\n        name:\n          type: string\n        country:\n          type: string\n        region:\n          type: string\n        postcode:\n          type: string\n        city:\n          type: string\n        street:\n          type: array\n          items:\n            type: string\n        opening_hours:\n          type: array\n          items:\n            type: string\n        shipping_experiences:\n          type: array\n          items:\n            type: string\n        selected:\n          type: boolean\n      description: Temando Quote Collection Point Interface – Checkout/Quoting\n\nx-tagGroups:\n- name: addresses\n  tags:\n  - addresses/{addressId}\n- name: amazon billing address\n  tags:\n  - amazon-billing-address/{amazonOrderReferenceId}\n- name: amazon shipping address\n  tags:\n  - amazon-shipping-address/{amazonOrderReferenceId}\n- name: amazon\n  tags:\n  - amazon/order-ref\n- name: analytics\n  tags:\n  - analytics/link\n- name: attributeMetadata\n  tags:\n  - attributeMetadata/customer\n  - attributeMetadata/customer/attribute/{attributeCode}\n  - attributeMetadata/customer/custom\n  - attributeMetadata/customer/form/{formCode}\n  - attributeMetadata/customerAddress\n  - attributeMetadata/customerAddress/attribute/{attributeCode}\n  - attributeMetadata/customerAddress/custom\n  - attributeMetadata/customerAddress/form/{formCode}\n- name: bulk\n  tags:\n  - bulk/{bulkUuid}/detailed-status\n  - bulk/{bulkUuid}/operation-status/{status}\n  - bulk/{bulkUuid}/status\n- name: bundle products\n  tags:\n  - bundle-products/options/add\n  - bundle-products/options/types\n  - bundle-products/options/{optionId}\n  - bundle-products/{productSku}/children\n  - bundle-products/{sku}/links/{id}\n  - bundle-products/{sku}/links/{optionId}\n  - bundle-products/{sku}/options/all\n  - bundle-products/{sku}/options/{optionId}\n  - bundle-products/{sku}/options/{optionId}/children/{childSku}\n- name: carts\n  tags:\n  - carts/\n  - carts/guest-carts/{cartId}/checkGiftCard/{giftCardCode}\n  - carts/guest-carts/{cartId}/giftCards\n  - carts/guest-carts/{cartId}/giftCards/{giftCardCode}\n  - carts/licence\n  - carts/mine\n  - carts/mine/balance/apply\n  - carts/mine/balance/unapply\n  - carts/mine/billing-address\n  - carts/mine/checkGiftCard/{giftCardCode}\n  - carts/mine/checkout-fields\n  - carts/mine/collect-totals\n  - carts/mine/collection-point/search-request\n  - carts/mine/collection-point/search-result\n  - carts/mine/collection-point/select\n  - carts/mine/coupons\n  - carts/mine/coupons/{couponCode}\n  - carts/mine/delivery-option\n  - carts/mine/estimate-shipping-methods\n  - carts/mine/estimate-shipping-methods-by-address-id\n  - carts/mine/gift-message\n  - carts/mine/gift-message/{itemId}\n  - carts/mine/giftCards\n  - carts/mine/giftCards/{giftCardCode}\n  - carts/mine/items\n  - carts/mine/items/{itemId}\n  - carts/mine/order\n  - carts/mine/payment-information\n  - carts/mine/payment-methods\n  - carts/mine/selected-payment-method\n  - carts/mine/set-payment-information\n  - carts/mine/shipping-information\n  - carts/mine/shipping-methods\n  - carts/mine/totals\n  - carts/mine/totals-information\n  - carts/search\n  - carts/{cartId}\n  - carts/{cartId}/billing-address\n  - carts/{cartId}/coupons\n  - carts/{cartId}/coupons/{couponCode}\n  - carts/{cartId}/estimate-shipping-methods\n  - carts/{cartId}/estimate-shipping-methods-by-address-id\n  - carts/{cartId}/gift-message\n  - carts/{cartId}/gift-message/{itemId}\n  - carts/{cartId}/giftCards\n  - carts/{cartId}/giftCards/{giftCardCode}\n  - carts/{cartId}/items\n  - carts/{cartId}/items/{itemId}\n  - carts/{cartId}/order\n  - carts/{cartId}/payment-methods\n  - carts/{cartId}/selected-payment-method\n  - carts/{cartId}/shipping-information\n  - carts/{cartId}/shipping-methods\n  - carts/{cartId}/totals\n  - carts/{cartId}/totals-information\n  - carts/{quoteId}/giftCards\n  - carts/{quoteId}/items\n- name: categories\n  tags:\n  - categories\n  - categories/attributes\n  - categories/attributes/{attributeCode}\n  - categories/attributes/{attributeCode}/options\n  - categories/list\n  - categories/{categoryId}\n  - categories/{categoryId}/move\n  - categories/{categoryId}/products\n  - categories/{categoryId}/products/{sku}\n  - categories/{id}\n- name: cmsBlock\n  tags:\n  - cmsBlock\n  - cmsBlock/search\n  - cmsBlock/{blockId}\n  - cmsBlock/{id}\n- name: cmsPage\n  tags:\n  - cmsPage\n  - cmsPage/search\n  - cmsPage/{id}\n  - cmsPage/{pageId}\n- name: company\n  tags:\n  - company/\n  - company/assignRoles\n  - company/role/\n  - company/role/{id}\n  - company/role/{roleId}\n  - company/role/{roleId}/users\n  - company/{companyId}\n- name: companyCredits\n  tags:\n  - companyCredits/\n  - companyCredits/company/{companyId}\n  - companyCredits/history\n  - companyCredits/history/{historyId}\n  - companyCredits/{creditId}\n  - companyCredits/{creditId}/decreaseBalance\n  - companyCredits/{creditId}/increaseBalance\n  - companyCredits/{id}\n- name: configurable products\n  tags:\n  - configurable-products/variation\n  - configurable-products/{sku}/child\n  - configurable-products/{sku}/children\n  - configurable-products/{sku}/children/{childSku}\n  - configurable-products/{sku}/options\n  - configurable-products/{sku}/options/all\n  - configurable-products/{sku}/options/{id}\n- name: coupons\n  tags:\n  - coupons\n  - coupons/deleteByCodes\n  - coupons/deleteByIds\n  - coupons/generate\n  - coupons/search\n  - coupons/{couponId}\n- name: creditmemo\n  tags:\n  - creditmemo\n  - creditmemo/refund\n  - creditmemo/{id}\n  - creditmemo/{id}/comments\n  - creditmemo/{id}/emails\n- name: creditmemos\n  tags:\n  - creditmemos\n- name: customerGroups\n  tags:\n  - customerGroups\n  - customerGroups/default\n  - customerGroups/default/{id}\n  - customerGroups/default/{storeId}\n  - customerGroups/search\n  - customerGroups/{id}\n  - customerGroups/{id}/permissions\n- name: customers\n  tags:\n  - customers\n  - customers/addresses/{addressId}\n  - customers/confirm\n  - customers/isEmailAvailable\n  - customers/me\n  - customers/me/activate\n  - customers/me/billingAddress\n  - customers/me/password\n  - customers/me/shippingAddress\n  - customers/password\n  - customers/resetPassword\n  - customers/search\n  - customers/validate\n  - customers/{customerId}\n  - customers/{customerId}/billingAddress\n  - customers/{customerId}/carts\n  - customers/{customerId}/confirm\n  - customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}\n  - customers/{customerId}/permissions/readonly\n  - customers/{customerId}/shippingAddress\n  - customers/{email}/activate\n- name: directory\n  tags:\n  - directory/countries\n  - directory/countries/{countryId}\n  - directory/currency\n- name: eav\n  tags:\n  - eav/attribute-sets\n  - eav/attribute-sets/list\n  - eav/attribute-sets/{attributeSetId}\n- name: gift wrappings\n  tags:\n  - gift-wrappings\n  - gift-wrappings/{id}\n  - gift-wrappings/{wrappingId}\n- name: giftregistry\n  tags:\n  - giftregistry/mine/estimate-shipping-methods\n- name: guest carts\n  tags:\n  - guest-carts\n  - guest-carts/{cartId}\n  - guest-carts/{cartId}/billing-address\n  - guest-carts/{cartId}/checkout-fields\n  - guest-carts/{cartId}/collect-totals\n  - guest-carts/{cartId}/collection-point/search-request\n  - guest-carts/{cartId}/collection-point/search-result\n  - guest-carts/{cartId}/collection-point/select\n  - guest-carts/{cartId}/coupons\n  - guest-carts/{cartId}/coupons/{couponCode}\n  - guest-carts/{cartId}/delivery-option\n  - guest-carts/{cartId}/estimate-shipping-methods\n  - guest-carts/{cartId}/gift-message\n  - guest-carts/{cartId}/gift-message/{itemId}\n  - guest-carts/{cartId}/items\n  - guest-carts/{cartId}/items/{itemId}\n  - guest-carts/{cartId}/order\n  - guest-carts/{cartId}/payment-information\n  - guest-carts/{cartId}/payment-methods\n  - guest-carts/{cartId}/selected-payment-method\n  - guest-carts/{cartId}/set-payment-information\n  - guest-carts/{cartId}/shipping-information\n  - guest-carts/{cartId}/shipping-methods\n  - guest-carts/{cartId}/totals\n  - guest-carts/{cartId}/totals-information\n- name: guest giftregistry\n  tags:\n  - guest-giftregistry/{cartId}/estimate-shipping-methods\n- name: hierarchy\n  tags:\n  - hierarchy/move/{id}\n  - hierarchy/{id}\n- name: integration\n  tags:\n  - integration/admin/token\n  - integration/customer/token\n- name: invoice\n  tags:\n  - invoice/{invoiceId}/refund\n- name: invoices\n  tags:\n  - invoices\n  - invoices/\n  - invoices/comments\n  - invoices/{id}\n  - invoices/{id}/capture\n  - invoices/{id}/comments\n  - invoices/{id}/emails\n  - invoices/{id}/void\n- name: modules\n  tags:\n  - modules\n- name: negotiable carts\n  tags:\n  - negotiable-carts/{cartId}/billing-address\n  - negotiable-carts/{cartId}/coupons\n  - negotiable-carts/{cartId}/coupons/{couponCode}\n  - negotiable-carts/{cartId}/estimate-shipping-methods\n  - negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id\n  - negotiable-carts/{cartId}/giftCards\n  - negotiable-carts/{cartId}/giftCards/{giftCardCode}\n  - negotiable-carts/{cartId}/payment-information\n  - negotiable-carts/{cartId}/set-payment-information\n  - negotiable-carts/{cartId}/shipping-information\n  - negotiable-carts/{cartId}/totals\n- name: negotiableQuote\n  tags:\n  - negotiableQuote/attachmentContent\n  - negotiableQuote/decline\n  - negotiableQuote/pricesUpdated\n  - negotiableQuote/request\n  - negotiableQuote/submitToCustomer\n  - negotiableQuote/{quoteId}\n  - negotiableQuote/{quoteId}/comments\n  - negotiableQuote/{quoteId}/shippingMethod\n- name: order\n  tags:\n  - order/{orderId}/invoice\n  - order/{orderId}/refund\n  - order/{orderId}/ship\n- name: orders\n  tags:\n  - orders\n  - orders/\n  - orders/create\n  - orders/items\n  - orders/items/{id}\n  - orders/{id}\n  - orders/{id}/cancel\n  - orders/{id}/comments\n  - orders/{id}/emails\n  - orders/{id}/hold\n  - orders/{id}/statuses\n  - orders/{id}/unhold\n  - orders/{parent_id}\n- name: products\n  tags:\n  - products\n  - products/attribute-sets\n  - products/attribute-sets/attributes\n  - products/attribute-sets/groups\n  - products/attribute-sets/groups/list\n  - products/attribute-sets/groups/{groupId}\n  - products/attribute-sets/sets/list\n  - products/attribute-sets/{attributeSetId}\n  - products/attribute-sets/{attributeSetId}/attributes\n  - products/attribute-sets/{attributeSetId}/attributes/{attributeCode}\n  - products/attribute-sets/{attributeSetId}/groups\n  - products/attributes\n  - products/attributes/types\n  - products/attributes/{attributeCode}\n  - products/attributes/{attributeCode}/options\n  - products/attributes/{attributeCode}/options/{optionId}\n  - products/base-prices\n  - products/base-prices-information\n  - products/cost\n  - products/cost-delete\n  - products/cost-information\n  - products/downloadable-links/samples/{id}\n  - products/downloadable-links/{id}\n  - products/links/types\n  - products/links/{type}/attributes\n  - products/media/types/{attributeSetName}\n  - products/options\n  - products/options/types\n  - products/options/{optionId}\n  - products/special-price\n  - products/special-price-delete\n  - products/special-price-information\n  - products/tier-prices\n  - products/tier-prices-delete\n  - products/tier-prices-information\n  - products/types\n  - products/{productSku}/stockItems/{itemId}\n  - products/{sku}\n  - products/{sku}/downloadable-links\n  - products/{sku}/downloadable-links/samples\n  - products/{sku}/downloadable-links/samples/{id}\n  - products/{sku}/downloadable-links/{id}\n  - products/{sku}/group-prices/{customerGroupId}/tiers\n  - products/{sku}/group-prices/{customerGroupId}/tiers/{qty}\n  - products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}\n  - products/{sku}/links\n  - products/{sku}/links/{type}\n  - products/{sku}/links/{type}/{linkedProductSku}\n  - products/{sku}/media\n  - products/{sku}/media/{entryId}\n  - products/{sku}/options\n  - products/{sku}/options/{optionId}\n  - products/{sku}/websites\n  - products/{sku}/websites/{websiteId}\n- name: products render info\n  tags:\n  - products-render-info\n- name: requisition_lists\n  tags:\n  - requisition_lists\n- name: returns\n  tags:\n  - returns\n  - returns/{id}\n  - returns/{id}/comments\n  - returns/{id}/labels\n  - returns/{id}/tracking-numbers\n  - returns/{id}/tracking-numbers/{trackId}\n- name: returnsAttributeMetadata\n  tags:\n  - returnsAttributeMetadata\n  - returnsAttributeMetadata/custom\n  - returnsAttributeMetadata/form/{formCode}\n  - returnsAttributeMetadata/{attributeCode}\n- name: reward\n  tags:\n  - reward/mine/use-reward\n- name: salesRules\n  tags:\n  - salesRules\n  - salesRules/search\n  - salesRules/{ruleId}\n- name: search\n  tags:\n  - search\n- name: sharedCatalog\n  tags:\n  - sharedCatalog\n  - sharedCatalog/\n  - sharedCatalog/{id}\n  - sharedCatalog/{id}/assignCategories\n  - sharedCatalog/{id}/assignProducts\n  - sharedCatalog/{id}/categories\n  - sharedCatalog/{id}/products\n  - sharedCatalog/{id}/unassignCategories\n  - sharedCatalog/{id}/unassignProducts\n  - sharedCatalog/{sharedCatalogId}\n  - sharedCatalog/{sharedCatalogId}/assignCompanies\n  - sharedCatalog/{sharedCatalogId}/companies\n  - sharedCatalog/{sharedCatalogId}/unassignCompanies\n- name: shipment\n  tags:\n  - shipment/\n  - shipment/track\n  - shipment/track/{id}\n  - shipment/{id}\n  - shipment/{id}/comments\n  - shipment/{id}/emails\n  - shipment/{id}/label\n- name: shipments\n  tags:\n  - shipments\n- name: stockItems\n  tags:\n  - stockItems/lowStock/\n  - stockItems/{productSku}\n- name: stockStatuses\n  tags:\n  - stockStatuses/{productSku}\n- name: store\n  tags:\n  - store/storeConfigs\n  - store/storeGroups\n  - store/storeViews\n  - store/websites\n- name: taxClasses\n  tags:\n  - taxClasses\n  - taxClasses/search\n  - taxClasses/{classId}\n  - taxClasses/{taxClassId}\n- name: taxRates\n  tags:\n  - taxRates\n  - taxRates/search\n  - taxRates/{rateId}\n- name: taxRules\n  tags:\n  - taxRules\n  - taxRules/search\n  - taxRules/{ruleId}\n- name: team\n  tags:\n  - team/\n  - team/{companyId}\n  - team/{teamId}\n- name: temando\n  tags:\n  - temando/rma/{rmaId}/shipments\n- name: transactions\n  tags:\n  - transactions\n  - transactions/{id}\n- name: worldpay guest carts\n  tags:\n  - worldpay-guest-carts/{cartId}/payment-information\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@c3641dddbc4e41686ae3d1b9bacf1621b639a019/-/blob/openapi/magento.cart/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/c3641dddbc4e41686ae3d1b9bacf1621b639a019/openapi/magento.cart/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/V1/carts/{cartId}/items\": at 1:128333: duplicate path: \"/V1/carts/{cartId}/items\""
}