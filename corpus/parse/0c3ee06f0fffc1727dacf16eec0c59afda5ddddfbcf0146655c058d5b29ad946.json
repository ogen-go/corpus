{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "layouts.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/layouts.yml",
			"byteSize": 29273,
			"content": "openapi: 3.0.3\ninfo:\npaths:\n    /layouts:\n        x-hidden: true\n        get:\n            parameters:\n                - description: \u003e\n                      Expand associated records using one or more valid field names. A\n                      value of \"all\" will expand all expandable fields.\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - layoutViews\n                              - all\n                          type: string\n                      type: array\n                  style: form\n            summary: Get all defined layouts\n            tags:\n                - Layout\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/LayoutMetadata\"\n                                type: array\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n        post:\n            summary: Create a layout\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/LayoutPostSchema\"\n            tags:\n                - Layout\n            responses:\n                \"201\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/LayoutSchema\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n    /layouts/{id}:\n        x-hidden: true\n        parameters:\n            - description: The layout ID.\n              in: path\n              name: id\n              required: true\n              schema:\n                  oneOf:\n                      - type: integer\n                      - type: string\n        get:\n            parameters:\n                - description: \u003e\n                      Expand associated records using one or more valid field names. A\n                      value of \"all\" will expand all expandable fields.\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - layoutViews\n                              - all\n                          type: string\n                      type: array\n                  style: form\n            summary: Get a specific layout by ID\n            tags:\n                - Layout\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/LayoutMetadata\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        patch:\n            summary: Update a layout\n            tags:\n                - Layout\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/LayoutPatchSchema\"\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/LayoutSchema\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                \"422\":\n                    $ref: \"#/components/responses/CannotMutateImmutableLayoutResponse\"\n        delete:\n            summary: Delete a layout\n            tags:\n                - Layout\n            responses:\n                \"204\":\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                \"422\":\n                    $ref: \"#/components/responses/CannotMutateImmutableLayoutResponse\"\n    /layouts/{id}/edit:\n        x-hidden: true\n        parameters:\n            - description: The layout ID.\n              in: path\n              name: id\n              required: true\n              schema:\n                  oneOf:\n                      - type: integer\n                      - type: string\n        get:\n            summary: Get the editable body of a layout.\n            tags:\n                - Layout\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/LayoutSchema\"\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                \"422\":\n                    $ref: \"#/components/responses/CannotMutateImmutableLayoutResponse\"\n    /layouts/{id}/hydrate:\n        x-hidden: true\n        parameters:\n            - name: id\n              description: The layout ID.\n              in: path\n              required: true\n              schema:\n                  oneOf:\n                      - type: integer\n                      - type: string\n        get:\n            summary: Hydrate an existing layout.\n            tags:\n                - Layout\n            parameters:\n                - name: params\n                  in: query\n                  required: true\n                  description: Parameters defined for the layout's layoutViewType.\n                  schema:\n                      type: object\n            responses:\n                \"200\":\n                    $ref: \"#/components/responses/HydratedLayout\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n    /layouts/lookup-hydrate:\n        x-hidden: true\n        get:\n            summary: Retrieve layoutID based on layout type, recordID and record type, and hydrate with parameters.\n            tags:\n                - Layout\n            parameters:\n                - name: layoutViewType\n                  in: query\n                  required: true\n                  description: Type of layout.\n                  schema:\n                      type: string\n                - name: recordID\n                  in: query\n                  required: true\n                  description: ID of the resource associated with this layout.\n                  schema:\n                      type: string\n                - name: recordType\n                  in: query\n                  required: true\n                  description: Type of resource to which this layout applies.\n                  schema:\n                      type: string\n                - name: params\n                  in: query\n                  required: true\n                  description: Parameters defined for the layout's layoutViewType.\n                  schema:\n                      type: object\n            responses:\n                \"200\":\n                    $ref: \"#/components/responses/HydratedLayout\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n    /layouts/{id}/hydrate-assets:\n        x-hidden: true\n        parameters:\n            - name: id\n              description: The layout ID.\n              in: path\n              required: true\n              schema:\n                  oneOf:\n                      - type: integer\n                      - type: string\n        get:\n            summary: Getting assets of an existing layout without hydrating data.\n            tags:\n                - Layout\n            parameters:\n                - name: params\n                  in: query\n                  required: true\n                  description: Parameters defined for the layout's layoutViewType.\n                  schema:\n                      type: object\n            responses:\n                \"200\":\n                    $ref: \"#/components/responses/HydratedLayout\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n    /layouts/lookup-hydrate-assets:\n        x-hidden: true\n        get:\n            summary: Getting assets of an existing layout without hydrating data, based on layout type, recordID and record type.\n            tags:\n                - Layout\n            parameters:\n                - name: layoutViewType\n                  in: query\n                  required: true\n                  description: Type of layout.\n                  schema:\n                      type: string\n\n                - name: recordID\n                  in: query\n                  required: true\n                  description: ID of the resource associated with this layout.\n                  schema:\n                      type: integer\n\n                - name: recordType\n                  in: query\n                  required: true\n                  description: Type of resource to which this layout applies.\n                  schema:\n                      type: string\n                - name: params\n                  in: query\n                  required: true\n                  description: Parameters defined for the layout's layoutViewType.\n                  schema:\n                      type: object\n            responses:\n                \"200\":\n                    $ref: \"#/components/responses/HydratedLayout\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n    /layouts/hydrate:\n        x-hidden: true\n        post:\n            summary: Hydrate an arbitrary layout\n            tags:\n                - Layout\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                layoutViewType:\n                                    $ref: \"#/components/schemas/LayoutViewType\"\n                                layout:\n                                    $ref: \"#/components/schemas/LayoutDefinition\"\n                                params:\n                                    description: Parameters defined for the specific layoutViewType.\n                                    type: object\n            responses:\n                \"200\":\n                    $ref: \"#/components/responses/HydratedLayout\"\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n    /layouts/catalog:\n        x-hidden: true\n        get:\n            summary: Get a catalog of the items available in a layout.\n            tags:\n                - Layout\n            parameters:\n                - in: query\n                  name: layoutViewType\n                  schema:\n                      $ref: \"#/components/schemas/LayoutViewType\"\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                type: object\n                                properties:\n                                    layoutViewType:\n                                        $ref: \"#/components/schemas/LayoutViewType\"\n                                    layoutParams:\n                                        description: A mapping of all available layout hydration params to their schemas.\n                                        type: object\n                                        example:\n                                            locale:\n                                                schema:\n                                                    type: string\n                                                    description: \"The locale used to render the layout\"\n                                            category/categoryID:\n                                                schema:\n                                                    type: integer\n                                    widgets:\n                                        description: A mapping of widgetType to widget schema for all available widgets.\n                                        type: object\n                                        additionalProperties: true\n                                        example:\n                                            \"react.discussions.list\":\n                                                $reactComponent: \"DiscussionsList\"\n                                                schema:\n                                                    type: \"object\"\n                                                    properties: {}\n                                    assets:\n                                        description: A mapping of widgetType to widget schema for all available assets.\n                                        type: object\n                                        additionalProperties: true\n                                        example:\n                                            \"react.assets.breadcrumbs\":\n                                                $reactComponent: \"Breadcrumbs\"\n                                                schema:\n                                                    type: \"object\"\n                                                    properties: {}\n                                    sections:\n                                        description: A mapping of widgetType to widget schema for all available sections.\n                                        type: object\n                                        additionalProperties: true\n                                        example:\n                                            \"react.sections.2-columns\":\n                                                $reactComponent: SectionTwoColumns\n                                                schema:\n                                                    type: \"object\"\n                                                    properties: {}\n                                    middleware:\n                                        description: A mapping of middlewareType to middleware scheam for all available middlewares.\n                                        type: object\n                                        example:\n                                            \"role-filter\":\n                                                schema:\n                                                    type: \"object\"\n                                                    properties: {}\n    /layouts/schema:\n        x-hidden: true\n        get:\n            summary: Get the JSON schema representing layout contents.\n            tags:\n                - Layout\n            parameters:\n                - in: query\n                  name: layoutViewType\n                  schema:\n                      $ref: \"#/components/schemas/LayoutViewType\"\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/JsonSchema\"\n    /layouts/{id}/views:\n        x-hidden: true\n        parameters:\n            - description: The layout ID.\n              in: path\n              name: id\n              required: true\n              schema:\n                  oneOf:\n                      - type: string\n                      - type: integer\n        get:\n            parameters:\n                - description: \u003e\n                      Expand associated records using one or more valid field names. A\n                      value of \"all\" will expand all expandable fields.\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - record\n                              - all\n                          type: string\n                      type: array\n                  style: form\n\n            summary: Get a list of layout views by layout ID\n            tags:\n                - Layout\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/LayoutViewSchema\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        put:\n            summary: Add a view to a layout\n            tags:\n                - Layout\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                recordID:\n                                    type: integer\n                                    description: Record Id to add.\n                                recordType:\n                                    type: string\n                                    description: Record type.\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/LayoutViewSchema\"\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        delete:\n            summary: Delete a layout View mapping\n            parameters:\n                - description: List of LayoutView Ids to delete.\n                  in: query\n                  name: layoutViewIDs\n                  required: true\n                  schema:\n                      type: array\n                      items:\n                          type: integer\n            tags:\n                - Layout\n            responses:\n                \"204\":\n                    description: Success\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\ncomponents:\n    responses:\n        CannotMutateImmutableLayoutResponse:\n            description: Cannot mutate an immutable layout\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/BasicError\"\n        HydratedLayout:\n            description: Success\n            content:\n                application/json:\n                    schema:\n                        type: object\n                        properties:\n                            layoutViewType:\n                                $ref: \"#/components/schemas/LayoutViewType\"\n                            layout:\n                                $ref: \"#/components/schemas/LayoutDefinitionHydrated\"\n        LayoutAssets:\n            description: Success\n            content:\n                application/json:\n                    schema:\n                        type: object\n                        properties:\n                            js:\n                                type: array\n                                description: List of JS files.\n                                items:\n                                    type: string\n                                default: []\n                                readOnly: true\n                            css:\n                                type: array\n                                description: List of CSS files.\n                                items:\n                                    type: string\n                                default: []\n                                readOnly: true\n    schemas:\n        JsonSchema:\n            type: object\n            example:\n                $schema: \"https://json-schema.org/draft-07/schema#\"\n                type: \"object\"\n                properties: {}\n\n        LayoutViewType:\n            description: Type of resource to which this layout applies\n            type: string\n            enum:\n                - home\n        LayoutDefinition:\n            x-hidden: true\n            type: array\n            description: Layout as defined by the /api/v2/layouts/schema.\n            items:\n                type: object\n            example:\n                - \"$hydrate\": section.one-column\n                  \"children\":\n                      - \"$hydrate\": \"assets.react.breadcrumbs\"\n                        recordType: \"category\"\n                        recordID:\n                            \"$hydrate\": \"param\"\n                            \"ref\": \"category/categoryID\"\n                      - \"$hydrate\": \"react.discussions\"\n                        \"apiParams\":\n                            categoryID:\n                                \"$hydrate\": \"param\"\n                                \"ref\": \"category/categoryID\"\n        LayoutDefinitionHydrated:\n            x-hidden: true\n            type: array\n            description: Layout as defined by the /api/v2/layouts/schema.\n            items:\n                type: object\n            example:\n                - \"$reactComponent\": \"SectionOneColumn\"\n                  \"$reactProps\":\n                      children:\n                          - \"$reactComponent\": \"Breadcrumbs\"\n                            \"$reactProps\":\n                                crumbs:\n                                    - name: Home\n                                      url: \"https://mysite.com\"\n                                    - name: My Category\n                                      url: \"https://mysite.com/categories/my-category\"\n                          - \"$reactComponent\": \"Discussions\"\n                            \"$reactProps\":\n                                discussions: []\n        LayoutSchema:\n            x-hidden: true\n            type: object\n            description: Layout definition with its metadata\n            properties:\n                layoutID:\n                    type: integer\n                    description: The layout's identifier.\n                    readOnly: true\n                name:\n                    type: string\n                    description: User-friendly name.\n                layout:\n                    $ref: \"#/components/schemas/LayoutDefinition\"\n                isDefault:\n                    type: boolean\n                    description: Indicates whether this is the default layout for the resource type specified in layoutType\n                    default: false\n                    readOnly: true\n                isActive:\n                    type: boolean\n                    description: Indicates whether this layout is applied to any layout views\n                    default: false\n                    readOnly: true\n                dateInserted:\n                    type: string\n                    description: The date/time that the layout was created.\n                    format: date-time\n                    readOnly: true\n                insertUserID:\n                    type: integer\n                    description: The user that created the layout.\n                    readOnly: true\n                dateUpdated:\n                    type: string\n                    description: The date/time that the layout was last updated.\n                    format: date-time\n                    nullable: true\n                    readOnly: true\n                updateUserID:\n                    type: integer\n                    description: The user that last updated the layout.\n                    nullable: true\n                    readOnly: true\n                layoutViews:\n                    items:\n                        $ref: \"#/components/schemas/LayoutViewSchema\"\n                    type: array\n        LayoutMetadata:\n            x-hidden: true\n            type: object\n            description: Metadata associated with a layout\n            properties:\n                layoutID:\n                    type: integer\n                    description: The layout's identifier.\n                    readOnly: true\n                name:\n                    type: string\n                    description: User-friendly name.\n                layoutType:\n                    $ref: \"#/components/schemas/LayoutViewType\"\n                isDefault:\n                    type: boolean\n                    description: Indicates whether this is the default layout for the resource type specified in layoutType\n                    default: false\n                    readOnly: true\n                isActive:\n                    type: boolean\n                    description: Indicates whether this layout is applied to any layout views\n                    default: false\n                    readOnly: true\n                dateInserted:\n                    type: string\n                    description: The date/time that the layout was created.\n                    format: date-time\n                    readOnly: true\n                insertUserID:\n                    type: integer\n                    description: The user that created the layout.\n                    readOnly: true\n                dateUpdated:\n                    type: string\n                    description: The date/time that the layout was last updated.\n                    format: date-time\n                    nullable: true\n                    readOnly: true\n                updateUserID:\n                    type: integer\n                    description: The user that last updated the layout.\n                    nullable: true\n                    readOnly: true\n        LayoutPatchSchema:\n            x-hidden: true\n            type: object\n            description: Set of properties available to update after layout has been created\n            properties:\n                name:\n                    type: string\n                    maxLength: 100\n                    description: User-friendly name.\n                layout:\n                    $ref: \"#/components/schemas/LayoutDefinition\"\n        LayoutPostSchema:\n            x-hidden: true\n            type: object\n            description: Set of properties used to define a new layout\n            properties:\n                name:\n                    type: string\n                    maxLength: 100\n                    description: User-friendly name.\n                layout:\n                    $ref: \"#/components/schemas/LayoutDefinition\"\n                layoutType:\n                    $ref: \"#/components/schemas/LayoutViewType\"\n        LayoutViewSchema:\n            x-hidden: true\n            type: object\n            properties:\n                layoutViewID:\n                    type: integer\n                    description: The layout view's identifier.\n                    readOnly: true\n                layoutID:\n                    type: integer\n                    description: The layout's identifier.\n                    readOnly: true\n                recordID:\n                    type: integer\n                    description: The record's identifier.\n                recordType:\n                    type: string\n                    description: Record type name\n                layoutViewType:\n                    $ref: \"#/components/schemas/LayoutViewType\"\n                dateInserted:\n                    type: string\n                    description: The date/time that the layout view was created.\n                    format: date-time\n                    readOnly: true\n                insertUserID:\n                    type: integer\n                    description: The user that created the layout view.\n                    readOnly: true\n                record:\n                    description: \u003e-\n                        Location where layoutView is used\n                    properties:\n                        name:\n                            description: Name of the page\n                            minLength: 1\n                            type: string\n                        url:\n                            description: URL pof the page\n                            minLength: 1\n                            type: string\n                    type: object\n        LayoutViewPostSchema:\n            x-hidden: true\n            type: object\n            description: Set of properties used to define a new layout view\n            properties:\n                recordID:\n                    type: integer\n                    description: Record view ID.\n                recordType:\n                    type: string\n                    description: View Record Type\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/dashboard/openapi/layouts.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/dashboard/openapi/layouts.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"CannotMutateImmutableLayoutResponse\": content: application/json: schema: parse schema: resolve \"#/components/schemas/BasicError\": find schema: resolve \"#/components/schemas/BasicError\": can't find value for \"components/schemas/BasicError\""
}