{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iov-one/iovns"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger-ui/swagger-ui/swagger.yaml",
			"byteSize": 97612,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"3.0\"\n  title: IOVNS Lite\n  description: A REST interface for state queries, transaction generation and broadcasting.\ntags:\n  - name: Transactions\n    description: Search, encode, or broadcast transactions.\n  - name: Tendermint RPC\n    description: Tendermint APIs, such as query blocks, transactions and validatorset\n  - name: Signature Verification\n    description: Tests the validity of a signed message\n  - name: Starname\n    description: Starname related functionalities\n  - name: Configuration\n    description: IOVNS configuration related functionalities\n  - name: Auth\n    description: Authenticate accounts\n  - name: Bank\n    description: Create and broadcast transactions\n  - name: Staking\n    description: Stake module APIs\n  - name: Governance\n    description: Governance module APIs\n  - name: Slashing\n    description: Slashing module APIs\n  - name: Distribution\n    description: Fee distribution module APIs\n  - name: Supply\n    description: Supply module APIs\n  - name: version\n  - name: Mint\n    description: Minting module APIs\n  - name: Misc\n    description: Query app version\npaths:\n  /node_info:\n    get:\n      description: Information about the connected node\n      summary: The properties of the connected node\n      tags:\n        - IOVNS REST\n      responses:\n        \"200\":\n          description: Node status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  application_version:\n                    properties:\n                      build_tags:\n                        type: string\n                      client_name:\n                        type: string\n                      commit:\n                        type: string\n                      go:\n                        type: string\n                      name:\n                        type: string\n                      server_name:\n                        type: string\n                      version:\n                        type: string\n                  node_info:\n                    properties:\n                      id:\n                        type: string\n                      moniker:\n                        type: string\n                        example: validator-name\n                      protocol_version:\n                        properties:\n                          p2p:\n                            type: string\n                            example: 7\n                          block:\n                            type: string\n                            example: 10\n                          app:\n                            type: string\n                            example: 0\n                      network:\n                        type: string\n                        example: iovns-2\n                      channels:\n                        type: string\n                      listen_addr:\n                        type: string\n                        example: 192.168.56.1:46656\n                      version:\n                        description: Tendermint version\n                        type: string\n                        example: 0.15.0\n                      other:\n                        description: more information on versions\n                        type: object\n                        properties:\n                          tx_index:\n                            type: string\n                            example: on\n                          rpc_address:\n                            type: string\n                            example: tcp://0.0.0.0:46657\n        \"500\":\n          description: Failed to query node status\n  /syncing:\n    get:\n      summary: Syncing state of node\n      tags:\n        - Tendermint RPC\n      description: Get if the node is currently syning with other nodes\n      responses:\n        \"200\":\n          description: Node syncing status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  syncing:\n                    type: boolean\n        \"500\":\n          description: Server internal error\n  /blocks/latest:\n    get:\n      summary: Get the latest block\n      tags:\n        - Tendermint RPC\n      responses:\n        \"200\":\n          description: The latest block\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockQuery\"\n        \"500\":\n          description: Server internal error\n  \"/blocks/{height}\":\n    get:\n      summary: Get a block at a certain height\n      tags:\n        - Tendermint RPC\n      parameters:\n        - in: path\n          name: height\n          description: Block height\n          required: true\n          example: 1\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: The block at a specific height\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockQuery\"\n        \"400\":\n          description: Invalid height\n        \"404\":\n          description: Request block height doesn't\n        \"500\":\n          description: Server internal error\n  /validatorsets/latest:\n    get:\n      summary: Get the latest validator set\n      tags:\n        - Tendermint RPC\n      responses:\n        \"200\":\n          description: The validator set at the latest block height\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  block_height:\n                    type: string\n                  validators:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TendermintValidator\"\n        \"500\":\n          description: Server internal error\n  \"/validatorsets/{height}\":\n    get:\n      summary: Get a validator set a certain height\n      tags:\n        - Tendermint RPC\n      parameters:\n        - in: path\n          name: height\n          description: Block height\n          required: true\n          example: 1\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: The validator set at a specific block height\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  block_height:\n                    type: string\n                  validators:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/TendermintValidator\"\n        \"400\":\n          description: Invalid height\n        \"404\":\n          description: Block at height not available\n        \"500\":\n          description: Server internal error\n  \"/txs/{hash}\":\n    get:\n      summary: Get a Tx by hash\n      tags:\n        - Transactions\n      description: Retrieve a transaction using its hash.\n      parameters:\n        - in: path\n          name: hash\n          description: Tx hash\n          required: true\n          example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Tx with the provided hash\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TxQuery\"\n        \"500\":\n          description: Internal Server Error\n  /txs:\n    get:\n      tags:\n        - Transactions\n      summary: Search transactions\n      description: Search transactions by events.\n      parameters:\n        - in: query\n          name: message.action\n          description: \"transaction events such as 'message.action=send' which results in\n            the following endpoint: 'GET /txs?message.action=send'. note that\n            each module documents its own events. look for xx_events.md in the\n            corresponding cosmos-sdk/swagger-ui/spec directory\"\n          example: send\n          schema:\n            type: string\n        - in: query\n          name: message.sender\n          description: \"transaction tags with sender: 'GET\n            /txs?message.action=send\u0026message.sender=star16xyempempp92x9hyzz9wrg\\\n            f94r6j9h5f06pxxv'\"\n          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n          schema:\n            type: string\n        - in: query\n          name: page\n          description: Page number\n          example: 1\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Maximum number of items per page\n          example: 1\n          schema:\n            type: integer\n        - in: query\n          name: tx.minheight\n          description: transactions on blocks with height greater or equal this value\n          example: 25\n          schema:\n            type: integer\n        - in: query\n          name: tx.maxheight\n          description: transactions on blocks with height less than or equal this value\n          example: 800000\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: All txs matching the provided events\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaginatedQueryTxs\"\n        \"400\":\n          description: Invalid search events\n        \"500\":\n          description: Internal Server Error\n    post:\n      tags:\n        - Transactions\n      summary: Broadcast a signed tx\n      description: Broadcast a signed tx to a full node\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tx:\n                  $ref: \"#/components/schemas/StdTx\"\n                mode:\n                  type: string\n                  example: block\n        description: The tx must be a signed StdTx. The supported broadcast modes include\n          `\"block\"`(return after tx commit), `\"sync\"`(return afer CheckTx) and\n          `\"async\"`(return right away).\n        required: true\n      responses:\n        \"200\":\n          description: Tx broadcasting result\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"500\":\n          description: Internal Server Error\n  /txs/encode:\n    post:\n      tags:\n        - Transactions\n      summary: Encode a transaction to the Amino wire format\n      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino\n        serialized bytes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tx:\n                  $ref: \"#/components/schemas/StdTx\"\n        description: The tx to encode\n        required: true\n      responses:\n        \"200\":\n          description: The tx was successfully decoded and re-encoded\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tx:\n                    type: string\n                    example: The base64-encoded Amino-serialized bytes for the tx\n        \"400\":\n          description: The tx was malformated\n        \"500\":\n          description: Server internal error\n  /txs/decode:\n    post:\n      tags:\n        - Transactions\n      summary: Decode a transaction from the Amino wire format\n      description: Decode a transaction (signed or not) from base64-encoded Amino\n        serialized bytes to JSON\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tx:\n                  type: string\n                  example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM\n        description: The tx to decode\n        required: true\n      responses:\n        \"200\":\n          description: The tx was successfully decoded\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StdTx\"\n        \"400\":\n          description: The tx was malformated\n        \"500\":\n          description: Server internal error\n  \"/bank/balances/{address}\":\n    get:\n      summary: Get the account balances\n      tags:\n        - Bank\n      parameters:\n        - in: path\n          name: address\n          description: Account address in bech32 format\n          required: true\n          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Account balances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Coin\"\n        \"500\":\n          description: Server internal error\n  \"/bank/accounts/{address}/transfers\":\n    post:\n      summary: Send coins from one account to another\n      tags:\n        - Bank\n      parameters:\n        - in: path\n          name: address\n          description: Account address in bech32 format\n          required: true\n          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                amount:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Coin\"\n        description: The sender and tx information\n        required: true\n      responses:\n        \"202\":\n          description: Tx was succesfully generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StdTx\"\n        \"400\":\n          description: Invalid request\n        \"500\":\n          description: Server internal error\n  \"/auth/accounts/{address}\":\n    get:\n      summary: Get the account information on blockchain\n      tags:\n        - Auth\n      parameters:\n        - in: path\n          name: address\n          description: Account address\n          required: true\n          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Account information on the blockchain\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  value:\n                    type: object\n                    properties:\n                      account_number:\n                        type: string\n                      address:\n                        type: string\n                      coins:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Coin\"\n                      public_key:\n                        $ref: \"#/components/schemas/PublicKey\"\n                      sequence:\n                        type: string\n        \"500\":\n          description: Server internel error\n  \"/staking/delegators/{delegatorAddr}/delegations\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n    get:\n      summary: Get all delegations from a delegator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Delegation\"\n        \"400\":\n          description: Invalid delegator address\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Submit delegation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                delegator_address:\n                  $ref: \"#/components/schemas/Address\"\n                validator_address:\n                  $ref: \"#/components/schemas/ValidatorAddress\"\n                delegation:\n                  $ref: \"#/components/schemas/Coin\"\n        description: The password of the account to remove from the KMS\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid delegator address or delegation request body\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/staking/delegators/{delegatorAddr}/delegations/{validatorAddr}\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Query the current delegation between a delegator and a validator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Delegation\"\n        \"400\":\n          description: Invalid delegator address or validator address\n        \"500\":\n          description: Internal Server Error\n  \"/staking/delegators/{delegatorAddr}/unbonding_delegations\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n    get:\n      summary: Get all unbonding delegations from a delegator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/UnbondingDelegation\"\n        \"400\":\n          description: Invalid delegator address\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Submit an unbonding delegation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                delegator_address:\n                  $ref: \"#/components/schemas/Address\"\n                validator_address:\n                  $ref: \"#/components/schemas/ValidatorAddress\"\n                shares:\n                  type: string\n                  example: \"100\"\n        description: The password of the account to remove from the KMS\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid delegator address or unbonding delegation request body\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Query all unbonding delegations between a delegator and a validator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnbondingDelegationPair\"\n        \"400\":\n          description: Invalid delegator address or validator address\n        \"500\":\n          description: Internal Server Error\n  /staking/redelegations:\n    parameters:\n      - in: query\n        name: delegator\n        description: Bech32 AccAddress of Delegator\n        required: false\n        schema:\n          type: string\n      - in: query\n        name: validator_from\n        description: Bech32 ValAddress of SrcValidator\n        required: false\n        schema:\n          type: string\n      - in: query\n        name: validator_to\n        description: Bech32 ValAddress of DstValidator\n        required: false\n        schema:\n          type: string\n    get:\n      summary: Get all redelegations (filter by query params)\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Redelegation\"\n        \"500\":\n          description: Internal Server Error\n  \"/staking/delegators/{delegatorAddr}/redelegations\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n    post:\n      summary: Submit a redelegation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                delegator_address:\n                  $ref: \"#/components/schemas/Address\"\n                validator_src_addressess:\n                  $ref: \"#/components/schemas/ValidatorAddress\"\n                validator_dst_address:\n                  $ref: \"#/components/schemas/ValidatorAddress\"\n                shares:\n                  type: string\n                  example: \"100\"\n        description: The sender and tx information\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: Tx was succesfully generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StdTx\"\n        \"400\":\n          description: Invalid delegator address or redelegation request body\n        \"500\":\n          description: Internal Server Error\n  \"/staking/delegators/{delegatorAddr}/validators\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n    get:\n      summary: Query all validators that a delegator is bonded to\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Validator\"\n        \"400\":\n          description: Invalid delegator address\n        \"500\":\n          description: Internal Server Error\n  \"/staking/delegators/{delegatorAddr}/validators/{validatorAddr}\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 ValAddress of Delegator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Query a validator that a delegator is bonded to\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Validator\"\n        \"400\":\n          description: Invalid delegator address or validator address\n        \"500\":\n          description: Internal Server Error\n  /staking/validators:\n    get:\n      summary: Get all validator candidates. By default it returns only the bonded\n        validators.\n      parameters:\n        - in: query\n          name: status\n          description: The validator bond status. Must be either 'bonded', 'unbonded', or\n            'unbonding'.\n          example: bonded\n          schema:\n            type: string\n        - in: query\n          name: page\n          description: The page number.\n          example: 1\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: The maximum number of items per page.\n          example: 1\n          schema:\n            type: integer\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Validator\"\n        \"500\":\n          description: Internal Server Error\n  \"/staking/validators/{validatorAddr}\":\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Query the information from a single validator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Validator\"\n        \"400\":\n          description: Invalid validator address\n        \"500\":\n          description: Internal Server Error\n  \"/staking/validators/{validatorAddr}/delegations\":\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Get all delegations from a validator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Delegation\"\n        \"400\":\n          description: Invalid validator address\n        \"500\":\n          description: Internal Server Error\n  \"/staking/validators/{validatorAddr}/unbonding_delegations\":\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Get all unbonding delegations from a validator\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/UnbondingDelegation\"\n        \"400\":\n          description: Invalid validator address\n        \"500\":\n          description: Internal Server Error\n  /staking/pool:\n    get:\n      summary: Get the current state of the staking pool\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  loose_tokens:\n                    type: string\n                  bonded_tokens:\n                    type: string\n                  inflation_last_time:\n                    type: string\n                  inflation:\n                    type: string\n                  date_last_commission_reset:\n                    type: string\n                  prev_bonded_shares:\n                    type: string\n        \"500\":\n          description: Internal Server Error\n  /staking/parameters:\n    get:\n      summary: Get the current staking parameter values\n      tags:\n        - Staking\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  inflation_rate_change:\n                    type: string\n                  inflation_max:\n                    type: string\n                  inflation_min:\n                    type: string\n                  goal_bonded:\n                    type: string\n                  unbonding_time:\n                    type: string\n                  max_validators:\n                    type: integer\n                  bond_denom:\n                    type: string\n        \"500\":\n          description: Internal Server Error\n  /slashing/signing_infos:\n    get:\n      summary: Get sign info of given all validators\n      description: Get sign info of all validators\n      tags:\n        - Slashing\n      parameters:\n        - in: query\n          name: page\n          description: Page number\n          required: true\n          example: 1\n          schema:\n            type: integer\n        - in: query\n          name: limit\n          description: Maximum number of items per page\n          required: true\n          example: 5\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SigningInfo\"\n        \"400\":\n          description: Invalid validator public key for one of the validators\n        \"500\":\n          description: Internal Server Error\n  \"/slashing/validators/{validatorAddr}/unjail\":\n    post:\n      summary: Unjail a jailed validator\n      description: Send transaction to unjail a jailed validator\n      tags:\n        - Slashing\n      parameters:\n        - description: Bech32 validator address\n          name: validatorAddr\n          required: true\n          in: path\n          example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/StdTx\"\n        required: true\n      responses:\n        \"200\":\n          description: Tx was succesfully generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid validator address or base_req\n        \"500\":\n          description: Internal Server Error\n  /slashing/parameters:\n    get:\n      summary: Get the current slashing parameters\n      tags:\n        - Slashing\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  max_evidence_age:\n                    type: string\n                  signed_blocks_window:\n                    type: string\n                  min_signed_per_window:\n                    type: string\n                  double_sign_unbond_duration:\n                    type: string\n                  downtime_unbond_duration:\n                    type: string\n                  slash_fraction_double_sign:\n                    type: string\n                  slash_fraction_downtime:\n                    type: string\n        \"500\":\n          description: Internal Server Error\n  /gov/proposals:\n    post:\n      summary: Submit a proposal\n      description: Send transaction to submit a proposal\n      tags:\n        - Governance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                title:\n                  type: string\n                description:\n                  type: string\n                proposal_type:\n                  type: string\n                  example: text\n                proposer:\n                  $ref: \"#/components/schemas/Address\"\n                initial_deposit:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Coin\"\n        description: valid value of `\"proposal_type\"` can be `\"text\"`,\n          `\"parameter_change\"`, `\"software_upgrade\"`\n        required: true\n      responses:\n        \"200\":\n          description: Tx was succesfully generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StdTx\"\n        \"400\":\n          description: Invalid proposal body\n        \"500\":\n          description: Internal Server Error\n    get:\n      summary: Query proposals\n      description: Query proposals information with parameters\n      tags:\n        - Governance\n      parameters:\n        - in: query\n          name: voter\n          description: voter address\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: depositor\n          description: depositor address\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: status\n          description: proposal status, valid values can be `\"deposit_period\"`,\n            `\"voting_period\"`, `\"passed\"`, `\"rejected\"`\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TextProposal\"\n        \"400\":\n          description: Invalid query parameters\n        \"500\":\n          description: Internal Server Error\n  /gov/proposals/param_change:\n    post:\n      summary: Generate a parameter change proposal transaction\n      description: Generate a parameter change proposal transaction\n      tags:\n        - Governance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                title:\n                  type: string\n                  x-example: Param Change\n                description:\n                  type: string\n                  x-example: Update max validators\n                proposer:\n                  $ref: \"#/components/schemas/Address\"\n                deposit:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Coin\"\n                changes:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/ParamChange\"\n        description: The parameter change proposal body that contains all parameter changes\n        required: true\n      responses:\n        \"200\":\n          description: The transaction was succesfully generated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StdTx\"\n        \"400\":\n          description: Invalid proposal body\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}\":\n    get:\n      summary: Query a proposal\n      description: Query a proposal by id\n      tags:\n        - Governance\n      parameters:\n        - name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TextProposal\"\n        \"400\":\n          description: Invalid proposal id\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}/proposer\":\n    get:\n      summary: Query proposer\n      description: Query for the proposer for a proposal\n      tags:\n        - Governance\n      parameters:\n        - name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Proposer\"\n        \"400\":\n          description: Invalid proposal ID\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}/deposits\":\n    get:\n      summary: Query deposits\n      description: Query deposits by proposalId\n      tags:\n        - Governance\n      parameters:\n        - name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Deposit\"\n        \"400\":\n          description: Invalid proposal id\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Deposit tokens to a proposal\n      description: Send transaction to deposit tokens to a proposal\n      tags:\n        - Governance\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                depositor:\n                  $ref: \"#/components/schemas/Address\"\n                amount:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Coin\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid proposal id or deposit body\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}/deposits/{depositor}\":\n    get:\n      summary: Query deposit\n      description: Query deposit by proposalId and depositor address\n      tags:\n        - Governance\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n        - description: Bech32 depositor address\n          name: depositor\n          required: true\n          in: path\n          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Deposit\"\n        \"400\":\n          description: Invalid proposal id or depositor address\n        \"404\":\n          description: Found no deposit\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}/votes\":\n    get:\n      summary: Query voters\n      description: Query voters information by proposalId\n      tags:\n        - Governance\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Vote\"\n        \"400\":\n          description: Invalid proposal id\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Vote a proposal\n      description: Send transaction to vote a proposal\n      tags:\n        - Governance\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                voter:\n                  $ref: \"#/components/schemas/Address\"\n                option:\n                  type: string\n                  example: yes\n        description: valid value of `\"option\"` field can be `\"yes\"`, `\"no\"`,\n          `\"no_with_veto\"` and `\"abstain\"`\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid proposal id or vote body\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}/votes/{voter}\":\n    get:\n      summary: Query vote\n      description: Query vote information by proposal Id and voter address\n      tags:\n        - Governance\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n        - description: Bech32 voter address\n          name: voter\n          required: true\n          in: path\n          example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vote\"\n        \"400\":\n          description: Invalid proposal id or voter address\n        \"404\":\n          description: Found no vote\n        \"500\":\n          description: Internal Server Error\n  \"/gov/proposals/{proposalId}/tally\":\n    get:\n      summary: Get a proposal's tally result at the current time\n      description: Gets a proposal's tally result at the current time. If the proposal is\n        pending deposits (i.e status 'DepositPeriod') it returns an empty tally\n        result.\n      tags:\n        - Governance\n      parameters:\n        - description: proposal id\n          name: proposalId\n          required: true\n          in: path\n          example: \"2\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TallyResult\"\n        \"400\":\n          description: Invalid proposal id\n        \"500\":\n          description: Internal Server Error\n  /gov/parameters/deposit:\n    get:\n      summary: Query governance deposit parameters\n      description: Query governance deposit parameters. The max_deposit_period units are in\n        nanoseconds.\n      tags:\n        - Governance\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  min_deposit:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Coin\"\n                  max_deposit_period:\n                    type: string\n                    example: \"86400000000000\"\n        \"400\":\n          description:  is not a valid query request path\n        \"404\":\n          description: Found no deposit parameters\n        \"500\":\n          description: Internal Server Error\n  /gov/parameters/tallying:\n    get:\n      summary: Query governance tally parameters\n      description: Query governance tally parameters\n      tags:\n        - Governance\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  threshold:\n                    type: string\n                    example: \"0.5000000000\"\n                  veto:\n                    type: string\n                    example: \"0.3340000000\"\n                  governance_penalty:\n                    type: string\n                    example: \"0.0100000000\"\n        \"400\":\n          description:  is not a valid query request path\n        \"404\":\n          description: Found no tally parameters\n        \"500\":\n          description: Internal Server Error\n  /gov/parameters/voting:\n    get:\n      summary: Query governance voting parameters\n      description: Query governance voting parameters. The voting_period units are in\n        nanoseconds.\n      tags:\n        - Governance\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  voting_period:\n                    type: string\n                    example: \"86400000000000\"\n        \"400\":\n          description:  is not a valid query request path\n        \"404\":\n          description: Found no voting parameters\n        \"500\":\n          description: Internal Server Error\n  \"/distribution/delegators/{delegatorAddr}/rewards\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star167w96tdvmazakdwkw2u57227eduula2cy572lf\n        schema:\n          type: string\n    get:\n      summary: Get the total rewards balance from all delegations\n      description: Get the sum of all the rewards earned by delegations by a single\n        delegator\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DelegatorTotalRewards\"\n        \"400\":\n          description: Invalid delegator address\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Withdraw all the delegator's delegation rewards\n      description: Withdraw all the delegator's delegation rewards\n      tags:\n        - Distribution\n      requestBody:\n        $ref: \"#/components/requestBodies/WithdrawRequestBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid delegator address\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv\n        schema:\n          type: string\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Query a delegation reward\n      description: Query a single delegation reward by a delegator\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Coin\"\n        \"400\":\n          description: Invalid delegator address\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Withdraw a delegation reward\n      description: Withdraw a delegator's delegation reward from a single validator\n      tags:\n        - Distribution\n      requestBody:\n        $ref: \"#/components/requestBodies/WithdrawRequestBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid delegator address or delegation body\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/distribution/delegators/{delegatorAddr}/withdraw_address\":\n    parameters:\n      - in: path\n        name: delegatorAddr\n        description: Bech32 AccAddress of Delegator\n        required: true\n        example: star167w96tdvmazakdwkw2u57227eduula2cy572lf\n        schema:\n          type: string\n    get:\n      summary: Get the rewards withdrawal address\n      description: Get the delegations' rewards withdrawal address. This is the address in\n        which the user will receive the reward funds\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Address\"\n        \"400\":\n          description: Invalid delegator address\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Replace the rewards withdrawal address\n      description: Replace the delegations' rewards withdrawal address for a new one.\n      tags:\n        - Distribution\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                base_req:\n                  $ref: \"#/components/schemas/BaseReq\"\n                withdraw_address:\n                  $ref: \"#/components/schemas/Address\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid delegator or withdraw address\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  \"/distribution/validators/{validatorAddr}\":\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Validator distribution information\n      description: Query the distribution information of a single validator\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ValidatorDistInfo\"\n        \"400\":\n          description: Invalid validator address\n        \"500\":\n          description: Internal Server Error\n  \"/distribution/validators/{validatorAddr}/outstanding_rewards\":\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Fee distribution outstanding rewards of a single validator\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Coin\"\n        \"500\":\n          description: Internal Server Error\n  \"/distribution/validators/{validatorAddr}/rewards\":\n    parameters:\n      - in: path\n        name: validatorAddr\n        description: Bech32 OperatorAddress of validator\n        required: true\n        example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n        schema:\n          type: string\n    get:\n      summary: Commission and self-delegation rewards of a single validator\n      description: Query the commission and self-delegation rewards of validator.\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Coin\"\n        \"400\":\n          description: Invalid validator address\n        \"500\":\n          description: Internal Server Error\n    post:\n      summary: Withdraw the validator's rewards\n      description: Withdraw the validator's self-delegation and commissions rewards\n      tags:\n        - Distribution\n      requestBody:\n        $ref: \"#/components/requestBodies/WithdrawRequestBody\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastTxCommitResult\"\n        \"400\":\n          description: Invalid validator address\n        \"401\":\n          description: Key password is wrong\n        \"500\":\n          description: Internal Server Error\n  /distribution/community_pool:\n    get:\n      summary: Community pool parameters\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Coin\"\n        \"500\":\n          description: Internal Server Error\n  /distribution/parameters:\n    get:\n      summary: Fee distribution parameters\n      tags:\n        - Distribution\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  base_proposer_reward:\n                    type: string\n                  bonus_proposer_reward:\n                    type: string\n                  community_tax:\n                    type: string\n        \"500\":\n          description: Internal Server Error\n  /minting/parameters:\n    get:\n      summary: Minting module parameters\n      tags:\n        - Mint\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                properties:\n                  mint_denom:\n                    type: string\n                  inflation_rate_change:\n                    type: string\n                  inflation_max:\n                    type: string\n                  inflation_min:\n                    type: string\n                  goal_bonded:\n                    type: string\n                  blocks_per_year:\n                    type: string\n        \"500\":\n          description: Internal Server Error\n  /minting/inflation:\n    get:\n      summary: Current minting inflation value\n      tags:\n        - Mint\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n  /minting/annual-provisions:\n    get:\n      summary: Current minting annual provisions value\n      tags:\n        - Mint\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"500\":\n          description: Internal Server Error\n  /supply/total:\n    get:\n      summary: Total supply of coins in the chain\n      tags:\n        - Supply\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Supply\"\n        \"500\":\n          description: Internal Server Error\n  \"/supply/total/{denomination}\":\n    parameters:\n      - in: path\n        name: denomination\n        description: Coin denomination\n        required: true\n        example: uiov\n        schema:\n          type: string\n    get:\n      summary: Total supply of a single coin denomination\n      tags:\n        - Supply\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid coin denomination\n        \"500\":\n          description: Internal Server Error\n  \"/signutil/query/verify\":\n    post:\n      summary: Tests the validity of a StdTx signed message with --chain-id signed-message-v1 --offline --account-number 0 --sequence 0\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SignedMsgTx\"\n        description: StdTx JSON created and signed with `iovnscli tx signutil create ... \u003e msg.json \u0026\u0026 iovnscli tx sign msg.json --from star1...  --chain-id signed-message-v1 --offline --account-number 0 --sequence 0`.  Note that you must specify your bech32 address for the `--from` flag, you can't use your key name.\n      tags:\n        - Signature Verification\n      responses:\n        \"200\":\n          description: Verified signed message\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Verified\"\n        \"500\":\n          description: Internal Server Error\n  \"/starname/query/domainInfo\":\n    post:\n      summary: Get information about a domain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/requestBodies/ResolveDomainQueryBody\"\n        description: Resolve domain query\n      tags:\n        - Starname\n      responses:\n        \"200\":\n          description: Domain resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      domain:\n                        $ref: \"#/components/schemas/Domain\"\n        \"400\":\n          description: Domain not found\n        \"500\":\n          description: Internal Server Error\n  \"/configuration/query/configuration\":\n    post:\n      summary: Get the current configuration\n      tags:\n        - Configuration\n      responses:\n        \"200\":\n          description: Configuration resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      configuration:\n                        $ref: \"#/components/schemas/Configuration\"\n        \"400\":\n          description: Configuration not found\n        \"500\":\n          description: Internal Server Error\n  \"/configuration/query/fees\":\n    post:\n      summary: Get current fees\n      tags:\n        - Configuration\n      responses:\n        \"200\":\n          description: Fees resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      fees:\n                        $ref: \"#/components/schemas/Fees\"\n        \"400\":\n          description: Configuration not found\n        \"500\":\n          description: Internal Server Error\n  \"/starname/query/accountsInDomain\":\n    post:\n      summary: Returns all the accounts associated a domain\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/requestBodies/ResolveAccountsInDomainQueryBody\"\n        description: Resolve accounts in domain query\n      tags:\n        - Starname\n      responses:\n        \"200\":\n          description: Accounts resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      accounts:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Account\"\n        \"400\":\n          description: Accounts or domain not found\n        \"500\":\n          description: Internal Server Error\n  \"/starname/query/accountsWithOwner\":\n    post:\n      summary: Returns all the accounts owned by a given address\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/requestBodies/ResolveAccountsWithOwnerQueryBody\"\n        description: Resolve accounts owned by an address\n      tags:\n        - Starname\n      responses:\n        \"200\":\n          description: Accounts resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      accounts:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Account\"\n        \"400\":\n          description: Accounts, domain or owner not found\n        \"500\":\n          description: Internal Server Error\n  \"/starname/query/domainsWithOwner\":\n    post:\n      summary: Returns all the domains owned by a given address\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/requestBodies/ResolveDomainsWithOwnerQueryBody\"\n        description: Resolve domains owned by an address\n      tags:\n        - Starname\n      responses:\n        \"200\":\n          description: Domains resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      domains:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/Domain\"\n        \"400\":\n          description: domain or owner not found\n        \"500\":\n          description: Internal Server Error\n  \"/starname/query/resolve\":\n    post:\n      summary: Resolves a starname\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/requestBodies/ResolveAccountQueryBody\"\n        description: Resolve a starname\n      tags:\n        - Starname\n      responses:\n        \"200\":\n          description: Starname resolved successfully\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      account:\n                        $ref: \"#/components/schemas/Account\"\n        \"400\":\n          description: Account not found\n        \"500\":\n          description: Internal Server Error\n  \"/starname/query/resourceAccounts\":\n    post:\n      summary: Resolves account(s) associated with the given uri and resource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/requestBodies/ResourceAccountsQueryBody\"\n        description: Resolves starname(s) associated with the given uri and resource\n      tags:\n        - Starname\n      responses:\n        \"200\":\n          description: Resource resolved successfully to one or more accounts\n          content:\n            application/json:\n              schema:\n                properties:\n                  height:\n                    type: number\n                    example: 368\n                  result:\n                    type: object\n                    properties:\n                      account:\n                        $ref: \"#/components/schemas/Account\"\n        \"400\":\n          description: Account not found\n        \"500\":\n          description: Internal Server Error\ncomponents:\n  requestBodies:\n    WithdrawRequestBody:\n      content:\n        application/json:\n          schema:\n            properties:\n              base_req:\n                $ref: \"#/components/schemas/BaseReq\"\n    ResolveDomainQueryBody:\n      type: object\n      properties:\n        name:\n          type: string\n          example: iov\n          description: Name of the domain\n    ResolveAccountsInDomainQueryBody:\n      type: object\n      properties:\n        domain:\n          type: string\n          example: iov\n          description: Name of the domain\n        results_per_page:\n          type: number\n          example: 5\n          description: Results per page\n        offset:\n          type: number\n          example: 3\n          description: Page number\n    ResolveAccountsWithOwnerQueryBody:\n      type: object\n      properties:\n        owner:\n          $ref: \"#/components/schemas/Address\"\n          description: Owner address of the accounts\n        results_per_page:\n          type: number\n          example: 5\n          description: Results per page\n        offset:\n          type: number\n          example: 1\n          description: Page number\n    ResolveDomainsWithOwnerQueryBody:\n      type: object\n      properties:\n        owner:\n          $ref: \"#/components/schemas/Address\"\n          description: Owner address of the domains\n        results_per_page:\n          type: number\n          example: 5\n          description: Results per page\n        offset:\n          type: number\n          example: 1\n          description: Page number\n    ResolveAccountQueryBody:\n      type: object\n      properties:\n        starname:\n          type: string\n          example: \"*iov\"\n          description: Starname of the form \"*domain\" or \"account*domain\"\n    ResourceAccountsQueryBody:\n      type: object\n      properties:\n        resource:\n          type: object\n          properties:\n            uri:\n              type: string\n              example: asset:iov\n              description: Uniform resource identifier (URI) for the resource\n            resource:\n              type: string\n              example: star1478t4fltj689nqu83vsmhz27quk7uggjwe96yk\n              description: Resource associated with the URI\n        results_per_page:\n          type: number\n          example: 5\n          description: Results per page\n        offset:\n          type: number\n          example: 1\n          description: Page number\n  securitySchemes:\n    kms:\n      type: http\n      scheme: basic\n  schemas:\n    CheckTxResult:\n      type: object\n      properties:\n        code:\n          type: integer\n        data:\n          type: string\n        gas_used:\n          type: integer\n        gas_wanted:\n          type: integer\n        info:\n          type: string\n        log:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/KVPair\"\n      example:\n        code: 0\n        data: data\n        log: log\n        gas_used: 5000\n        gas_wanted: 10000\n        info: info\n        tags:\n          - \"\"\n          - \"\"\n    DeliverTxResult:\n      type: object\n      properties:\n        code:\n          type: integer\n        data:\n          type: string\n        gas_used:\n          type: integer\n        gas_wanted:\n          type: integer\n        info:\n          type: string\n        log:\n          type: string\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/KVPair\"\n      example:\n        code: 5\n        data: data\n        log: log\n        gas_used: 5000\n        gas_wanted: 10000\n        info: info\n        tags:\n          - \"\"\n          - \"\"\n    BroadcastTxCommitResult:\n      type: object\n      properties:\n        check_tx:\n          $ref: \"#/components/schemas/CheckTxResult\"\n        deliver_tx:\n          $ref: \"#/components/schemas/DeliverTxResult\"\n        hash:\n          $ref: \"#/components/schemas/Hash\"\n        height:\n          type: integer\n    KVPair:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    Msg:\n      type: string\n    Address:\n      type: string\n      description: bech32 encoded address\n      example: star1478t4fltj689nqu83vsmhz27quk7uggjwe96yk\n    ValidatorAddress:\n      type: string\n      description: bech32 encoded address\n      example: starvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l\n    Coin:\n      type: object\n      properties:\n        denom:\n          type: string\n          example: stake\n        amount:\n          type: string\n          example: \"50\"\n    Hash:\n      type: string\n      example: EE5F3404034C524501629B56E0DDC38FAD651F04\n    TxQuery:\n      type: object\n      properties:\n        hash:\n          type: string\n          example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656\n        height:\n          type: number\n          example: 368\n        tx:\n          $ref: \"#/components/schemas/StdTx\"\n        result:\n          type: object\n          properties:\n            log:\n              type: string\n            gas_wanted:\n              type: string\n              example: \"200000\"\n            gas_used:\n              type: string\n              example: \"26354\"\n            tags:\n              type: array\n              items:\n                $ref: \"#/components/schemas/KVPair\"\n    PaginatedQueryTxs:\n      type: object\n      properties:\n        total_count:\n          type: number\n          example: 1\n        count:\n          type: number\n          example: 1\n        page_number:\n          type: number\n          example: 1\n        page_total:\n          type: number\n          example: 1\n        limit:\n          type: number\n          example: 30\n        txs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TxQuery\"\n    StdTx:\n      type: object\n      properties:\n        msg:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Msg\"\n        fee:\n          type: object\n          properties:\n            gas:\n              type: string\n            amount:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Coin\"\n        memo:\n          type: string\n        signature:\n          type: object\n          properties:\n            signature:\n              type: string\n              example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=\n            pub_key:\n              type: object\n              properties:\n                type:\n                  type: string\n                  example: tendermint/PubKeySecp256k1\n                value:\n                  type: string\n                  example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH\n            account_number:\n              type: string\n              example: \"0\"\n            sequence:\n              type: string\n              example: \"0\"\n    BlockID:\n      type: object\n      properties:\n        hash:\n          $ref: \"#/components/schemas/Hash\"\n        parts:\n          type: object\n          properties:\n            total:\n              type: number\n              example: 0\n            hash:\n              $ref: \"#/components/schemas/Hash\"\n    BlockHeader:\n      type: object\n      properties:\n        chain_id:\n          type: string\n          example: iovns-galaxynet\n        height:\n          type: number\n          example: 1\n        time:\n          type: string\n          example: 2017-12-30T05:53:09.287+01:00\n        num_txs:\n          type: number\n          example: 0\n        last_block_id:\n          $ref: \"#/components/schemas/BlockID\"\n        total_txs:\n          type: number\n          example: 35\n        last_commit_hash:\n          $ref: \"#/components/schemas/Hash\"\n        data_hash:\n          $ref: \"#/components/schemas/Hash\"\n        validators_hash:\n          $ref: \"#/components/schemas/Hash\"\n        next_validators_hash:\n          $ref: \"#/components/schemas/Hash\"\n        consensus_hash:\n          $ref: \"#/components/schemas/Hash\"\n        app_hash:\n          $ref: \"#/components/schemas/Hash\"\n        last_results_hash:\n          $ref: \"#/components/schemas/Hash\"\n        evidence_hash:\n          $ref: \"#/components/schemas/Hash\"\n        proposer_address:\n          $ref: \"#/components/schemas/Address\"\n        version:\n          type: object\n          properties:\n            block:\n              type: string\n              example: 10\n            app:\n              type: string\n              example: 0\n    Block:\n      type: object\n      properties:\n        header:\n          $ref: \"#/components/schemas/BlockHeader\"\n        txs:\n          type: array\n          items:\n            type: string\n        evidence:\n          type: array\n          items:\n            type: string\n        last_commit:\n          type: object\n          properties:\n            block_id:\n              $ref: \"#/components/schemas/BlockID\"\n            precommits:\n              type: array\n              items:\n                type: object\n                properties:\n                  validator_address:\n                    type: string\n                  validator_index:\n                    type: string\n                    example: \"0\"\n                  height:\n                    type: string\n                    example: \"0\"\n                  round:\n                    type: string\n                    example: \"0\"\n                  timestamp:\n                    type: string\n                    example: 2017-12-30T05:53:09.287+01:00\n                  type:\n                    type: number\n                    example: 2\n                  block_id:\n                    $ref: \"#/components/schemas/BlockID\"\n                  signature:\n                    type: string\n                    example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==\n    BlockQuery:\n      type: object\n      properties:\n        block_meta:\n          type: object\n          properties:\n            header:\n              $ref: \"#/components/schemas/BlockHeader\"\n            block_id:\n              $ref: \"#/components/schemas/BlockID\"\n        block:\n          $ref: \"#/components/schemas/Block\"\n    DelegationDelegatorReward:\n      type: object\n      properties:\n        validator_address:\n          $ref: \"#/components/schemas/ValidatorAddress\"\n        reward:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n    DelegatorTotalRewards:\n      type: object\n      properties:\n        rewards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DelegationDelegatorReward\"\n        total:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n    BaseReq:\n      type: object\n      properties:\n        from:\n          type: string\n          example: star1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc\n          description: Sender address or Keybase name to generate a transaction\n        memo:\n          type: string\n          example: Sent via Cosmos Voyager 🚀\n        chain_id:\n          type: string\n          example: iovns-galaxynet\n        account_number:\n          type: string\n          example: \"0\"\n        sequence:\n          type: string\n          example: \"1\"\n        gas:\n          type: string\n          example: \"200000\"\n        gas_adjustment:\n          type: string\n          example: \"1.2\"\n        fees:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        simulate:\n          type: boolean\n          example: false\n          description: Estimate gas for a transaction (cannot be used in conjunction with\n            generate_only)\n    TendermintValidator:\n      type: object\n      properties:\n        address:\n          $ref: \"#/components/schemas/ValidatorAddress\"\n        pub_key:\n          type: string\n          example: starvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf\n        voting_power:\n          type: string\n          example: \"1000\"\n        proposer_priority:\n          type: string\n          example: \"1000\"\n    TextProposal:\n      type: object\n      properties:\n        proposal_id:\n          type: integer\n        title:\n          type: string\n        description:\n          type: string\n        proposal_type:\n          type: string\n        proposal_status:\n          type: string\n        final_tally_result:\n          $ref: \"#/components/schemas/TallyResult\"\n        submit_time:\n          type: string\n        total_deposit:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        voting_start_time:\n          type: string\n    Proposer:\n      type: object\n      properties:\n        proposal_id:\n          type: string\n        proposer:\n          type: string\n    Deposit:\n      type: object\n      properties:\n        amount:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        proposal_id:\n          type: string\n        depositor:\n          $ref: \"#/components/schemas/Address\"\n    TallyResult:\n      type: object\n      properties:\n        yes:\n          type: string\n          example: \"0.0000000000\"\n        abstain:\n          type: string\n          example: \"0.0000000000\"\n        no:\n          type: string\n          example: \"0.0000000000\"\n        no_with_veto:\n          type: string\n          example: \"0.0000000000\"\n    Vote:\n      type: object\n      properties:\n        voter:\n          type: string\n        proposal_id:\n          type: string\n        option:\n          type: string\n    Validator:\n      type: object\n      properties:\n        operator_address:\n          $ref: \"#/components/schemas/ValidatorAddress\"\n        consensus_pubkey:\n          type: string\n          example: starvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf\n        jailed:\n          type: boolean\n        status:\n          type: integer\n        tokens:\n          type: string\n        delegator_shares:\n          type: string\n        description:\n          type: object\n          properties:\n            moniker:\n              type: string\n            identity:\n              type: string\n            website:\n              type: string\n            security_contact:\n              type: string\n            details:\n              type: string\n        bond_height:\n          type: string\n          example: \"0\"\n        bond_intra_tx_counter:\n          type: integer\n          example: 0\n        unbonding_height:\n          type: string\n          example: \"0\"\n        unbonding_time:\n          type: string\n          example: 1970-01-01T00:00:00Z\n        commission:\n          type: object\n          properties:\n            rate:\n              type: string\n              example: \"0\"\n            max_rate:\n              type: string\n              example: \"0\"\n            max_change_rate:\n              type: string\n              example: \"0\"\n            update_time:\n              type: string\n              example: 1970-01-01T00:00:00Z\n    Delegation:\n      type: object\n      properties:\n        delegator_address:\n          type: string\n        validator_address:\n          type: string\n        shares:\n          type: string\n        balance:\n          $ref: \"#/components/schemas/Coin\"\n    UnbondingDelegationPair:\n      type: object\n      properties:\n        delegator_address:\n          type: string\n        validator_address:\n          type: string\n        entries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UnbondingEntries\"\n    UnbondingEntries:\n      type: object\n      properties:\n        initial_balance:\n          type: string\n        balance:\n          type: string\n        creation_height:\n          type: string\n        min_time:\n          type: string\n    UnbondingDelegation:\n      type: object\n      properties:\n        delegator_address:\n          type: string\n        validator_address:\n          type: string\n        initial_balance:\n          type: string\n        balance:\n          type: string\n        creation_height:\n          type: integer\n        min_time:\n          type: integer\n    Redelegation:\n      type: object\n      properties:\n        delegator_address:\n          type: string\n        validator_src_address:\n          type: string\n        validator_dst_address:\n          type: string\n        entries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Redelegation\"\n    RedelegationEntry:\n      type: object\n      properties:\n        creation_height:\n          type: integer\n        completion_time:\n          type: integer\n        initial_balance:\n          type: string\n        balance:\n          type: string\n        shares_dst:\n          type: string\n    ValidatorDistInfo:\n      type: object\n      properties:\n        operator_address:\n          $ref: \"#/components/schemas/ValidatorAddress\"\n        self_bond_rewards:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        val_commission:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n    PublicKey:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: string\n    SigningInfo:\n      type: object\n      properties:\n        start_height:\n          type: string\n        index_offset:\n          type: string\n        jailed_until:\n          type: string\n        missed_blocks_counter:\n          type: string\n    ParamChange:\n      type: object\n      properties:\n        subspace:\n          type: string\n          example: staking\n        key:\n          type: string\n          example: MaxValidators\n        subkey:\n          type: string\n          example: \"\"\n        value:\n          type: object\n    Supply:\n      type: object\n      properties:\n        total:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n    ConsensusState:\n      type: object\n      properties:\n        chain_id:\n          type: string\n        height:\n          type: integer\n        root:\n          $ref: \"#/components/schemas/Root\"\n        next_validator_set:\n          $ref: \"#/components/schemas/ValidatorSet\"\n    Root:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: object\n          properties:\n            hash:\n              type: string\n    Prefix:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: object\n          properties:\n            key_prefix:\n              type: string\n    ValidatorSet:\n      type: object\n      properties:\n        validators:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TendermintValidator\"\n        proposer:\n          $ref: \"#/components/schemas/TendermintValidator\"\n    ClientState:\n      type: object\n      properties:\n        id:\n          type: string\n        frozen:\n          type: boolean\n    Proof:\n      type: object\n      properties:\n        proof:\n          type: object\n          properties:\n            ops:\n              type: array\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                  key:\n                    type: string\n                  data:\n                    type: string\n    Commit:\n      type: object\n      properties:\n        block_id:\n          $ref: \"#/components/schemas/BlockID\"\n        precommits:\n          type: array\n          items:\n            type: object\n            properties:\n              validator_address:\n                type: string\n              validator_index:\n                type: string\n                example: \"0\"\n              height:\n                type: string\n                example: \"0\"\n              round:\n                type: string\n                example: \"0\"\n              timestamp:\n                type: string\n                example: 2017-12-30T05:53:09.287+01:00\n              type:\n                type: number\n                example: 2\n              block_id:\n                $ref: \"#/components/schemas/BlockID\"\n              signature:\n                type: string\n                example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==\n    SignedHeader:\n      type: object\n      properties:\n        header:\n          $ref: \"#/components/schemas/BlockHeader\"\n        commit:\n          $ref: \"#/components/schemas/Commit\"\n    Header:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: object\n          properties:\n            SignedHeader:\n              $ref: \"#/components/schemas/SignedHeader\"\n            validator_set:\n              $ref: \"#/components/schemas/ValidatorSet\"\n            next_validator_set:\n              $ref: \"#/components/schemas/ValidatorSet\"\n    ProofPath:\n      type: object\n      properties:\n        key_path:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              enc:\n                type: integer\n    ClientConnectionsResponse:\n      type: object\n      properties:\n        connection_paths:\n          type: array\n          items:\n            type: string\n        proof:\n          $ref: \"#/components/schemas/Proof\"\n        proof_path:\n          $ref: \"#/components/schemas/ProofPath\"\n        proof_height:\n          type: integer\n    DuplicateVoteEvidence:\n      type: string\n    Evidence:\n      type: object\n      properties:\n        type:\n          type: string\n        value:\n          type: object\n          properties:\n            DuplicateVoteEvidence:\n              $ref: \"#/components/schemas/DuplicateVoteEvidence\"\n            chain_id:\n              type: string\n            val_power:\n              type: integer\n            total_power:\n              type: integer\n    Domain:\n      type: object\n      properties:\n        name:\n          type: string\n          example: iov\n          description: Name of the domain\n        admin:\n          $ref: \"#/components/schemas/Address\"\n          description: Owner of the domain\n        valid_until:\n          type: number\n          example: 1633046400\n          description: Unix timestamp at which the domain expires\n        type:\n          type: string\n          example: closed\n          description: The type of the domain, either \"open\" or \"closed\"\n        broker:\n          $ref: \"#/components/schemas/Address\"\n          description: Address of the broker\n    Account:\n      type: object\n      properties:\n        domain:\n          type: string\n          example: iov\n          description: Name of the domain\n        name:\n          type: string\n          example: dave\n          description: Name to attach to domain\n        owner:\n          $ref: \"#/components/schemas/Address\"\n          description: Address of the account owner\n        valid_until:\n          type: number\n          example: 1633046400\n          description: Unix timestamp at which the account expires\n        broker:\n          $ref: \"#/components/schemas/Address\"\n          description: Address of the broker\n        resources:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Resource\"\n        certificates:\n          type: array\n          items:\n            type: string\n            example: YWKvVhCo7Mv9DLShr2MdL/0nopXEDQi+/0QgaBvGpmdIF+71WD3HTDOw4pkkDk58e6WMz3yfQaqFauuEg3O2hQ==\n          description: Certificates\n        metadata_uri:\n          type: string\n          description: Account metadata\n    Resource:\n      type: object\n      properties:\n        uri:\n          type: string\n          example: asset:atom\n          description: Uniform resource identifier\n        resource:\n          type: string\n          example: cosmos1rcp29q3hpd246n6qak7jluqep4v006cd4v7r6v\n          description: Blockchain address\n    Configuration:\n      type: object\n      properties:\n        configurer:\n          $ref: \"#/components/schemas/Address\"\n          description: Configuration owner\n        valid_domain_name:\n          type: string\n        valid_account_name:\n          type: string\n        valid_uri:\n          type: string\n        valid_resource:\n          type: string\n        domain_renew_period:\n          type: number\n        domain_renew_count_max:\n          type: number\n        domain_grace_period:\n          type: number\n        account_renew_period:\n          type: number\n        account_renew_count_max:\n          type: number\n        account_grace_period:\n          type: number\n        resources_max:\n          type: number\n        certificate_size_max:\n          type: number\n        certificate_count_max:\n          type: number\n        metadata_size_max:\n          type: number\n    Fees:\n      type: object\n      properties:\n        fee_coin_denom:\n          example: uiov\n          type: string\n        fee_coin_price:\n          type: string\n          example: \"0.000000100000000000\"\n          description: IOV token price in euros divided by 1 million\n        fee_default:\n          type: string\n          example: \"0.010000000000000000\"\n          description: Minimum fee in euros for messages outside of the cosmos-sdk namespace\n        register_account_closed:\n          type: string\n          example: \"0.100000000000000000\"\n          description: Fee in euros for registering an account in a closed domain\n        register_account_open:\n          type: string\n          example: \"0.100000000000000000\"\n          description: Fee in euros for registering an account in an open domain\n        transfer_account_closed:\n          type: string\n          example: \"1.000000000000000000\"\n          description: Fee in euros for transfering ownership of an account in a closed domain\n        transfer_account_open:\n          type: string\n          example: \"1.000000000000000000\"\n          description: Fee in euros for transfering ownership of an account in an open domain\n        replace_account_resources:\n          type: string\n          example: \"0.100000000000000000\"\n          description: Fee in euros for setting an account's resources\n        add_account_certificate:\n          type: string\n          example: \"1.000000000000000000\"\n          description: Fee in euros for adding a certificate to an account\n        del_account_certificate:\n          type: string\n          example: \"0.010000000000000000\"\n          description: Fee in euros for deleting a certificate from an account\n        set_account_metadata:\n          type: string\n          example: \"0.100000000000000000\"\n          description: Fee in euros for setting an account's metadata\n        register_domain_1:\n          type: string\n          example: \"1000.000000000000000000\"\n          description: Fee in euros for registering a domain consisting of 1 character\n        register_domain_2:\n          type: string\n          example: \"500.000000000000000000\"\n          description: Fee in euros for registering a domain consisting of 2 characters\n        register_domain_3:\n          type: string\n          example: \"200.000000000000000000\"\n          description: Fee in euros for registering a domain consisting of 3 characters\n        register_domain_4:\n          type: string\n          example: \"100.000000000000000000\"\n          description: Fee in euros for registering a domain consisting of 4 characters\n        register_domain_5:\n          type: string\n          example: \"50.000000000000000000\"\n          description: Fee in euros for registering a domain consisting of 5 characters\n        register_domain_default:\n          type: string\n          example: \"7.000000000000000000\"\n          description: Fee in euros for registering a domain consisting of more than 5 characters\n        register_open_domain_multiplier:\n          type: string\n          example: \"3.000000000000000000\"\n          description: Multiplier applied to register_domain_* fees if the domain is of type open\n        transfer_domain_closed:\n          type: string\n          example: \"1.000000000000000000\"\n          description: Fee in euros for transfering ownership of a closed domain\n        transfer_domain_open:\n          type: string\n          example: \"1.000000000000000000\"\n          description: Fee in euros for transfering ownership of an open domain\n        renew_domain_open:\n          type: string\n          example: \"25.000000000000000000\"\n          description: Fee in euros for renewing an open domain\n    SignedMsgTx:\n      type: object\n      properties:\n        type:\n          type: string\n          example: cosmos-sdk/StdTx\n        value:\n          type: object\n          properties:\n            msg:\n              type: array\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: signutil/MsgSignText\n                  value:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                        example: Hello, World!\n                      signer:\n                        type: string\n                        example: star1478t4fltj689nqu83vsmhz27quk7uggjwe96yk\n            fee:\n              type: object\n              description: fee is necessary but irrelevant\n              properties:\n                amount:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Coin\"\n                gas:\n                  type: string\n                  example: \"0\"\n            signatures:\n              type: array\n              items:\n                type: object\n                properties:\n                  pub_key:\n                    type: object\n                    properties:\n                      type:\n                        type: string\n                        example: tendermint/PubKeySecp256k1\n                      value:\n                        type: string\n                        example: AwOzGduZPxmjUMKASZGKPrUA7Drs9CvfJfXkgR/RSdyu\n                  signature:\n                    type: string\n                    example: 7lHiazQepf/HPAf3XgI0QIFEqyvGY3OZHo4EXbDibE8N74clsRdty6qxfMGD5MwPlzDYVbrtt7ePJz2p2mDmSA==\n            memo:\n              type: string\n              example: msg[0] is free-form text, eg \"Hello, World!\" or JSON\n    Verified:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Hello, World!\n        signer:\n          type: string\n          example: star1478t4fltj689nqu83vsmhz27quk7uggjwe96yk\n        verified:\n          type: boolean\n          example: true\n        signed:\n          type: string\n          example: \"{  \\\"type\\\": \\\"cosmos-sdk/StdTx\\\",  \\\"value\\\": {    \\\"msg\\\": [      {        \\\"type\\\": \\\"signutil/MsgSignText\\\",        \\\"value\\\": {          \\\"message\\\": \\\"Hello, World!\\\",          \\\"signer\\\": \\\"star1478t4fltj689nqu83vsmhz27quk7uggjwe96yk\\\"        }      }    ],    \\\"fee\\\": {      \\\"amount\\\": [        {          \\\"denom\\\": \\\"stake\\\",          \\\"amount\\\": \\\"50\\\"        }      ],      \\\"gas\\\": \\\"0\\\"    },    \\\"signatures\\\": [      {        \\\"pub_key\\\": {          \\\"type\\\": \\\"tendermint/PubKeySecp256k1\\\",          \\\"value\\\": \\\"AwOzGduZPxmjUMKASZGKPrUA7Drs9CvfJfXkgR/RSdyu\\\"        },        \\\"signature\\\": \\\"7lHiazQepf/HPAf3XgI0QIFEqyvGY3OZHo4EXbDibE8N74clsRdty6qxfMGD5MwPlzDYVbrtt7ePJz2p2mDmSA==\\\"      }    ],    \\\"memo\\\": \\\"msg[0] is free-form text, eg \\\\\\\"Hello, World!\\\\\\\" or JSON\\\"  }}\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /starname/query/accountsWithOwner: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: reference \"#/components/requestBodies/ResolveAccountsWithOwnerQueryBody\": resolve reference \"#/components/requestBodies/ResolveAccountsWithOwnerQueryBody\": invalid schema reference \"#/components/requestBodies/ResolveAccountsWithOwnerQueryBody\""
}