{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/isa-group/RESTest"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "src/test/resources/Yelp/swagger.yaml",
			"byteSize": 7182,
			"content": "openapi: 3.0.0\ninfo:\n  description: Yelp API\n  version: 1.0.0\n  title: Yelp API\npaths:\n  /businesses/search:\n    get:\n      operationId: getBusinesses\n      summary: Get businesses\n      description: Get businesses\n      parameters:\n        - name: term\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: location\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: latitude\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: longitude\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: radius\n          in: query\n          required: false\n          schema:\n            type: integer\n            maximum: 40000\n        - name: categories\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: locale\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: integer\n            maximum: 50\n        - name: offset\n          in: query\n          required: false\n          schema:\n            type: integer\n        - name: sort_by\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - best_match\n              - rating\n              - review_count\n              - distance\n        - name: price\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - 1\n                - 2\n                - 3\n                - 4\n        - name: open_now\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: open_at\n          in: query\n          required: false\n          schema:\n            type: integer\n            maximum: 2147483647\n        - name: attributes\n          in: query\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - hot_and_new\n                - request_a_quote\n                - reservation\n                - waitlist_reservation\n                - deals\n                - gender_neutral_restrooms\n                - open_to_all\n                - wheelchair_accessible\n      x-dependencies:\n        - Or(location, latitude AND longitude);\n        - ZeroOrOne(open_now, open_at);\n        - offset + limit \u003c= 1000;\n        - IF offset AND NOT limit THEN offset \u003c= 980;\n      responses:\n        \"200\":\n          description: Returns all businesses\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BusinessesResult\"\n        \"400\":\n          description: bad request\n  /transactions/{transaction_type}/search:\n    get:\n      operationId: getTransactions\n      summary: Get transactions\n      description: Get transactions\n      parameters:\n        - name: transaction_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location\n          in: query\n          required: false\n          description: \"Required when latitude and longitude aren't provided. Address of the location you want to deliver to.\"\n          schema:\n            type: string\n        - name: latitude\n          in: query\n          required: false\n          description: \"Required when latitude and longitude aren't provided. Address of the location you want to deliver to.\"\n          schema:\n            type: string\n        - name: longitude\n          in: query\n          required: false\n          description: \"Required when location isn't provided. Longitude of the location you want to deliver to.\"\n          schema:\n            type: string\n      x-dependencies:\n        - Or(location, latitude AND longitude);\n      responses:\n        200:\n          description: Returns all businesses\n          content:\n            application/json:\n              schema:\n                $ref: '#/definitions/BusinessesResult'\n        400:\n          description: bad request\nservers:\n  - url: https://api.yelp.com/v3\ncomponents:\n  schemas:\n    BusinessesResult:\n      type: object\n      properties:\n        total:\n          type: integer\n        region:\n          type: object\n          properties:\n            center:\n              type: object\n              properties:\n                latitude:\n                  type: number\n                longitude:\n                  type: number\n        businesses:\n          type: array\n          items:\n            type: object\n            properties:\n              categories:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    alias:\n                      type: string\n                    title:\n                      type: string\n              coordinates:\n                type: object\n                properties:\n                  latitude:\n                    type: number\n                  longitude:\n                    type: number\n              display_phone:\n                type: string\n              distance:\n                type: number\n              id:\n                type: string\n              alias:\n                type: string\n              image_url:\n                type: string\n              is_closed:\n                type: boolean\n              name:\n                type: string\n              phone:\n                type: string\n              price:\n                type: string\n                enum:\n                  - $\n                  - $$\n                  - $$$\n                  - $$$$\n              rating:\n                type: number\n                minimum: 1\n                maximum: 5\n              review_count:\n                type: integer\n              url:\n                type: string\n              transactions:\n                type: array\n                items:\n                  type: string\n                  enum:\n                    - pickup\n                    - delivery\n                    - restaurant_reservation\n              location:\n                type: object\n                properties:\n                  address1:\n                    type: string\n                    nullable: true\n                  address2:\n                    type: string\n                    nullable: true\n                  address3:\n                    type: string\n                    nullable: true\n                  city:\n                    type: string\n                  country:\n                    type: string\n                  display_address:\n                    type: array\n                    items:\n                      type: string\n                  state:\n                    type: string\n                  zip_code:\n                    type: string",
			"canonicalURL": "/github.com/isa-group/RESTest@ca054a506dfee059e2e24f3cf3d9954a410a5b76/-/blob/src/test/resources/Yelp/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/isa-group/RESTest/blob/ca054a506dfee059e2e24f3cf3d9954a410a5b76/src/test/resources/Yelp/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/businesses/search\": get: operation \"getBusinesses\": parameters: parse parameter \"price\": parse schema: items: at src/test/resources/Yelp/swagger.yaml:82:17: parse enum values: parse value \"1\": expected type \"string\", got \"number\""
}