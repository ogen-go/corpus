{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "workspace.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/workspace.yml",
			"byteSize": 13101,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Workspace Services\n  version: v6\npaths:\n  /workspaces/:\n    get:\n      operationId: _rest_v6_workspace_list\n      summary: Workspace List\n      description: Returns a list of all workspaces\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: Return only workspaces with a given name.\n            Duplicate it to filter by multiple values.\n        - in: query\n          name: order\n          schema:\n            type: string\n          description: \"One or more fields to use when ordering the results.\n                        Duplicate it to multi-sort, (ex: order=host_name\u0026order=created)\n                        Nested objects require a delimiter (ex: order=source_file__created)\n                        Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/workspace_list'\n    post:\n      operationId: _rest_v6_workspace_create\n      summary: Create Workspace\n      description: Creates a new Workspace with associated configuration  \n      requestBody:\n        required: true\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/workspace_post'\n      responses:\n        '201':\n          description: The 201 CREATED response indicates a successful request \n            \n  /workspaces/{id}/:\n    get:\n      operationId: _rest_v6_workspace_details\n      summary: Workspace Details\n      description: Returns a specific workspace and all its related model information\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing workspace\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/workspace_details'\n    patch:\n      operationId: _rest_v6_workspace_edit\n      summary: Edit Workspace\n      description: Edits an existing Workspace with associated configuration. \n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing workspace\n      requestBody:\n        required: true\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/workspace_post'\n      responses:\n        '204':\n          description: The 204 No content response indicates a successful edit \n\n  /workspaces/validation/:\n    post:\n      operationId: _rest_v6_workspace_validate\n      summary: Validate Workspace\n      description: Validates a new workspace configuration without actually saving it.  \n      requestBody:\n        required: true\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/workspace_post'\n      responses:\n        '200':\n          description: The 200 OK response indicates a valid workspace configuration \n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/validation'\n\ncomponents:\n  schemas:\n    workspace_list:\n      title: Workspace List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters \n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/workspace_base'\n          description: List of workspace objects\n          \n    workspace_base:\n      title: Workspace Base\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call \n          example: 4\n        name:\n          type: string\n          description: The identifying name of the workspace used for queries.  \n          example: raw-source\n        title:\n          type: string\n          description: The human readable display name of the workspace.  \n          example: Raw Source\n        description:\n          type: string\n          description: A longer description of the workspace. \n          example: Raw Source Workspace\n        base_url:\n          type: string\n          description:  The URL prefix used to access all files within the workspace.\n            This field can be null if the workspace is not web-accessible.\n          example: http://host.com/rs\n        is_active:\n          type: boolean\n          description: Whether the workspace is active (false once workspace is archived).\n          example: True\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        archived:\n          type: string\n          format: date-time\n          description: When the associated database model was archived.\n          example: 2015-09-10T15:24:53.503Z\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n          \n    workspace_post:\n      title: Workspace Post\n      type: object\n      required: [title, configuration]\n      properties:\n        name:\n          type: string\n          description: The identifying name of the workspace used for queries.\n            Used for validation of changes to existing workspace\n          example: raw-source\n        title:\n          type: string\n          description: The human readable display name of the workspace.\n            This will be used to generate the name field\n          example: Raw Source\n        description:\n          type: string\n          description: A longer description of the workspace \n          example: Raw source workspace\n        base_url:\n          type: string\n          description:  The URL prefix used to access all files within the workspace.\n            This field can be null if the workspace is not web-accessible.\n          example: http://host.com/rs\n        is_active:\n          type: boolean\n          description: Whether the workspace is active (false once workspace is archived).\n          example: True\n        configuration:\n          $ref: '#/components/schemas/workspace_config'\n\n    workspace_details:\n      allOf:\n        - $ref: '#/components/schemas/workspace_base'\n        - title: Workspace Details\n        - type: object\n          properties: \n            configuration:\n              $ref: '#/components/schemas/workspace_config'          \n          \n    workspace_config:\n      title: Workspace Configuration\n      type: object\n      properties:\n        version:\n          type: string\n          description: The version is an optional string value that defines the\n            version of the configuration used. This allows updates to be made to\n            the specification while maintaining backwards compatibility by allowing\n            Scale to recognize an older version and convert it to the current version.\n            The default value for version if it is not included is the latest version,\n            which is currently 1.0. It is recommended, though not required, that you\n            include the version so that future changes to the specification will still\n            accept your workspace configuration.\n          example: 1.0\n        broker:\n          oneOf:\n          - $ref: '#/components/schemas/host_broker'\n          - $ref: '#/components/schemas/nfs_broker'\n          - $ref: '#/components/schemas/s3_broker'\n      required:\n      - broker\n    broker:\n      title: Broker\n      type: object\n      discriminator:\n        propertyName: type\n      properties:\n        type:\n          type: string\n          description: The type is a required string that specifies the type of the broker to use.\n            The other fields that configure the broker are based upon the type of the broker in the\n            type field. The valid broker types are host, nfs, and s3\n          example: nfs\n      required:\n      - type\n    host_broker:\n      title: Host Broker\n      allOf:\n      - $ref: '#/components/schemas/broker'\n      type: object\n      properties: \n        host_path:\n          type: string\n          description: The host_path is a required string that specifies the absolute path of the\n            host’s local directory that should be mounted into a job’s container in order to\n            access the workspace’s files.\n          example: /the/absolute/host/path\n      required:\n      - host_path\n    nfs_broker:\n      title: NFS Broker\n      allOf:\n      - $ref: '#/components/schemas/broker'\n      type: object\n      properties:\n        nfs_path:\n          type: string\n          description: The nfs_path is a required string that specifies the remote NFS path to use\n            for storing and retrieving the workspace files. It should be in the format host:/path.\n          example: host:/my/path\n      required:\n      - nfs_path\n    s3_broker:\n      title: S3 Broker\n      allOf:\n      - $ref: '#/components/schemas/broker'\n      type: object\n      properties:\n        bucket_name:\n          type: string\n          description: Specifies the globally unique\n            name of a storage bucket within S3. The bucket should be created before attempting to use it here.\n          example: my_bucket.domain.com\n        credentials:\n          $ref: '#/components/schemas/credentials'\n        host_path:\n          type: string\n          description: The host_path is an optional string that adds S3 workspace support for\n            locally mounted buckets and partial file read-only access. If a FUSE file system\n            (such as s3fs or goofys) mounts the S3 bucket at the host_path location on all nodes,\n            an alternative to downloading large files is available to jobs that use only portions\n            of a file. The job interface must indicate partial equal to true for any input files\n            to take advantage of host_path. Only read operations are performed using the mount,\n            all write operations will use the S3 REST API.\n          example: /my_bucket\n        region_name:\n          type: string\n          description: The region_name is an optional string that specifies the AWS region where the\n            SQS Queue is located. This is not always required, as environment variables or configuration\n            files could set the default region, but it is a highly recommended setting for explicitly\n            indicating the SQS region.\n          example: us-east-1\n      required:\n      - bucket_name\n      \n    credentials:\n      title: Credentials\n      type: object\n      description: The credentials is a JSON object that provides the necessary information to access\n        the bucket. This attribute should be omitted when using IAM role-based security. If it is\n        included for key-based security, then both sub-attributes must be included. An IAM account\n        should be created and granted the appropriate permissions to the bucket before attempting to use it here.\n      properties:\n        access_key_id:\n          type: string\n          description: The access_key_id is a unique identifier for the user account in IAM that will\n            be used as a proxy for read and write operations within Scale.\n          example: AKIAIOSFODNN7EXAMPLE\n        secret_access_key:\n          type: string\n          description: The secret_access_key is a generated token that the system can use to prove it\n            should be able to make requests on behalf of the associated IAM account without requiring\n            the actual password used by that account.\n          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\n      required:\n      - access_key_id\n      - secret_access_key",
			"canonicalURL": "/github.com/ngageoint/scale@1b6a3b879ffe83e10d3b9d9074835a4c3bf476ee/-/blob/scale/docs/rest/v6/workspace.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ngageoint/scale/blob/1b6a3b879ffe83e10d3b9d9074835a4c3bf476ee/scale/docs/rest/v6/workspace.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /workspaces/{id}/: get: operation \"_rest_v6_workspace_details\": parameters: parse parameter \"id\": path parameters must be required"
}