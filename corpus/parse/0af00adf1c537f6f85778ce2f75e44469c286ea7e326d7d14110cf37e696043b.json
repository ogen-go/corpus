{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Veridax/privapi"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "APIs/openapi-converter.herokuapp.com/1.0.0/swagger.yaml",
			"byteSize": 5151,
			"content": "swagger: '2.0'\nschemes:\n  - https\n  - http\nhost: openapi-converter.herokuapp.com\nbasePath: /api/v1\ninfo:\n  contact:\n    email: mike.ralphson@gmail.com\n    name: Mike Ralphson\n    url: 'https://github.com/mermade/swagger2openapi/issues'\n  description: Converter and validator for Swagger 2.0 to OpenAPI 3.0.x definitions\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\n  termsOfService: 'https://opensource.org/licenses/MIT'\n  title: Swagger2OpenAPI Converter\n  version: 1.0.0\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    backgroundColor: '#FFFFFF'\n    url: 'https://avatars1.githubusercontent.com/u/15950345?v=3\u0026s=200'\n  x-origin:\n    - format: swagger\n      url: 'https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/swagger.json'\n      version: '2.0'\n  x-providerName: openapi-converter.herokuapp.com\nexternalDocs:\n  url: 'https://github.com/mermade/openapi-webconverter'\nconsumes:\n  - application/json\n  - application/x-yaml\nproduces:\n  - application/json; charset=utf-8\n  - application/x-yaml\nsecurity: []\ntags:\n  - description: Metadata functions\n    name: metadata\n  - description: Conversion functions\n    name: conversion\n  - description: Validation functions\n    name: validation\npaths:\n  /badge:\n    get:\n      description: ''\n      operationId: getBadge\n      parameters:\n        - description: The URL to retrieve the OpenAPI 3.0.x definition from\n          format: uri\n          in: query\n          name: url\n          required: true\n          type: string\n          x-example: 'https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/openapi.json'\n      responses:\n        '301':\n          description: Moved\n      summary: Return a redirect to a badge svg file depending on a source definition's validity\n      tags:\n        - validation\n  /convert:\n    get:\n      description: ''\n      operationId: convertUrl\n      parameters:\n        - description: The URL to retrieve the OpenAPI 2.0 definition from\n          format: uri\n          in: query\n          name: url\n          required: true\n          type: string\n          x-example: 'https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/swagger.json'\n      responses:\n        '200':\n          description: default\n          schema: {}\n      summary: Convert a Swagger 2.0 definition to OpenAPI 3.0.x from a URL\n      tags:\n        - conversion\n    post:\n      consumes:\n        - multipart/form-data\n      description: ''\n      operationId: convert\n      parameters:\n        - description: The file to upload and convert\n          in: formData\n          name: filename\n          required: false\n          type: string\n          x-example: ''\n        - description: The text of a Swagger 2.0 definition to convert\n          in: formData\n          name: source\n          required: false\n          type: string\n          x-example: |\n            swagger: 2.0\n            info:\n              title: API\n              version: 1.0.0\n        - enum:\n            - 'on'\n          in: formData\n          name: validate\n          required: false\n          type: string\n          x-example: ''\n      responses:\n        '200':\n          description: default\n          schema: {}\n        '400':\n          description: Invalid request\n          schema: {}\n      summary: 'Convert a Swagger 2.0 definition passed in the body to OpenAPI 3.0.x '\n      tags:\n        - conversion\n  /status:\n    get:\n      description: ''\n      operationId: getStatus\n      parameters: []\n      responses:\n        '200':\n          description: default\n          schema: {}\n      summary: Get the status of the API\n      tags:\n        - metadata\n  /validate:\n    get:\n      description: ''\n      operationId: validateUrl\n      parameters:\n        - description: The URL to retrieve the OpenAPI 3.0.x definition from\n          format: uri\n          in: query\n          name: url\n          required: true\n          type: string\n          x-example: 'https://raw.githubusercontent.com/Mermade/openapi-webconverter/master/contract/openapi.json'\n      responses:\n        '200':\n          description: default\n          schema: {}\n      summary: Validate an OpenAPI 3.0.x definition\n      tags:\n        - validation\n    post:\n      consumes:\n        - multipart/form-data\n      description: ''\n      operationId: validate\n      parameters:\n        - description: The file to upload and validate\n          in: formData\n          name: filename\n          required: false\n          type: string\n          x-example: ''\n        - description: The text of an OpenAPI 3.0.x definition to validate\n          in: formData\n          name: source\n          required: false\n          type: string\n          x-example: |\n            openapi: 3.0.0\n            info:\n              title: API\n              version: 1.0.0\n            paths: {}\n      responses:\n        '200':\n          description: default\n          schema: {}\n        '400':\n          description: Invalid request\n          schema: {}\n      summary: Validate an OpenAPI 3.0.x definition supplied in the body of the request\n      tags:\n        - validation\n",
			"canonicalURL": "/github.com/Veridax/privapi@fd528906df6bae10312f040bd4e8b8469ad3ef3f/-/blob/APIs/openapi-converter.herokuapp.com/1.0.0/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Veridax/privapi/blob/fd528906df6bae10312f040bd4e8b8469ad3ef3f/APIs/openapi-converter.herokuapp.com/1.0.0/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/validate\": at 1:2873: get: operation \"validateUrl\": at 1:2880: parameters: parse parameter \"url\": at 1:2940: parameter MUST contain either a schema property, or a content property"
}