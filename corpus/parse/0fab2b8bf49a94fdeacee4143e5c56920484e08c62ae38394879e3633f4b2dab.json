{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/paritytech/substrate-api-sidecar"
		},
		"file": {
			"name": "openapi-v1-todo.yaml",
			"size": 0,
			"path": "docs/src/openapi-v1-todo.yaml",
			"byteSize": 19085,
			"content": "openapi: 3.0.0\ninfo:\n  title: Substrate API Sidecar [V1 todo]\n  description: These are yet to be implemented endpoints for Sidecar v1.\n  version: 1.0.0-oas3\ntags:\n- name: pallets\n  description: pallets employed in the runtime\npaths:\n  /pallets:\n    get:\n      tags:\n      - pallets\n      summary: Get a list of pallets used in the runtime.\n      description: Returns an array of metadata for pallets that are used in the\n        runtime. Can use `only-names` query param to just return an array of\n        pallet names.\n      parameters:\n      - name: only-names\n        in: query\n        description: Only return the names of pallets.\n        required: false\n        schema:\n          type: boolean\n      - name: at\n        in: query\n        description: Block at which to retrieve a list of the runtime's pallets.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsResponses'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/constants:\n    get:\n      tags:\n      - pallets\n      summary: Get a list of constants for a pallet.\n      description: Returns a list of metadata for constants of the pallet specified\n        by palletId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to query the constant of.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve the list of exposed pallet\n          constants.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsConstantsResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find pallet with with palletId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/constants/{constantId}:\n    get:\n      tags:\n      - pallets\n      summary: Get the value of a constant.\n      description: Returns the value stored under the constantId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to query the constant of.\n        required: true\n        schema:\n          type: string\n      - name: constantId\n        in: path\n        description: Id of the constant to query for.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to query the constant at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsConstantValue'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find resource with with id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/dispatchables:\n    get:\n      tags:\n      - pallets\n      summary: Get a list of dispatchables for a pallet.\n      description: Returns a list of the dispatchables of the specified palletId\n         and the associated metadata of each.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to get the metadata of its dispatchables.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve a list of the pallet's\n          dispatchables at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsDispatchablesResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find pallet with with palletId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/dispatchables/{dispatchableId}:\n    get:\n      tags:\n      - pallets\n      summary: Get the metadata of a dispatchable.\n      description: Returns the metadata of a dispatchable with dispatchableId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to get the dispatchable of.\n        required: true\n        schema:\n          type: string\n      - name: dispatchableId\n        in: path\n        description: Index of the dispatchable in the pallet's dispatchable array.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve the dispatchable at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsDispatchableResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find resource with with id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/errors:\n    get:\n      tags:\n      - pallets\n      summary: Get a list of the errors for a pallet.\n      description: Returns a list of metadata for errors of the specified palletId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to get the metadata of its errors.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve a list of the pallet's\n          errors at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsErrorsResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find pallet with palletId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/errors/{errorId}:\n    get:\n      tags:\n      - pallets\n      summary: Get the metadata of an error.\n      description: Returns the metadata of an error with errorId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to the error of.\n        required: true\n        schema:\n          type: string\n      - name: errorId\n        in: path\n        description: Index of the error in the pallet's errors array.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve the error at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsErrorResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find resource with id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/events:\n    get:\n      tags:\n      - pallets\n      summary: Get a list of events for a pallet.\n      description: Returns a list of metadata for events of the specified palletId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to get the metadata of its events.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve a list of the pallet's events at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsEventsResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find pallet with palletId\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pallets/{palletId}/events/{eventId}:\n    get:\n      tags:\n      - pallets\n      summary: Get the metadata of an event.\n      description: Returns the metadata of an event with eventId.\n      parameters:\n      - name: palletId\n        in: path\n        description: Name or index of the pallet to the event of.\n        required: true\n        schema:\n          type: string\n      - name: eventId\n        in: path\n        description: Index of the event in the pallet's events array.\n        required: true\n        schema:\n          type: string\n      - name: at\n        in: query\n        description: Block at which to retrieve the event at.\n        required: false\n        schema:\n          type: string\n          description: Block identifier, as the block height or block hash.\n          format: unsignedInteger or $hex\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PalletsEventResponse'\n        \"400\":\n          description: invalid blockId supplied for at query param\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        \"404\":\n          description: could not find resource with id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  schemas:\n    BlockIdentifiers:\n      type: object\n      properties:\n        hash:\n          type: string\n          description: The block's hash.\n          format: hex\n        height:\n          type: string\n          description: The block's height.\n          format: unsignedInteger\n      description: Block number and hash at which the call was made.\n    PalletItemMetadataIndex:\n      type: array\n      description: Tuple where the first value is the index of the pallet in the filtered\n        metadata and the second value is the index of the item in the pallet's array\n        of the item type.\n      items:\n        type: string\n        format: unsignedInteger\n    PalletEvent:\n      type: object\n      properties:\n        eventIndex:\n          $ref: '#/components/schemas/PalletItemMetadataIndex'\n        name:\n          type: string\n        args:\n          type: array\n          items:\n            type: string\n        documentation:\n          type: array\n          items:\n            type: string\n      description: Metadata of an event from a FRAME pallet.\n    PalletError:\n      type: object\n      properties:\n        errorIndex:\n          $ref: '#/components/schemas/PalletItemMetadataIndex'\n        name:\n          type: string\n        documentation:\n          type: array\n          items:\n            type: string\n      description: Metadata of an error from a FRAME pallet.\n    PalletStorageType:\n      type: object\n    PalletStorageItemMetadata:\n      type: object\n      properties:\n        storageItemIndex:\n          $ref: '#/components/schemas/PalletItemMetadataIndex'\n        name:\n          type: string\n        modifier:\n          type: string\n        type:\n          $ref: '#/components/schemas/PalletStorageType'\n        fallback:\n          type: string\n        documentation:\n          type: array\n          items:\n            type: string\n      description: Metadata of a storage item from a FRAME pallet.\n    PalletConstant:\n      type: object\n      properties:\n        constantIndex:\n          $ref: '#/components/schemas/PalletItemMetadataIndex'\n        name:\n          type: string\n        type:\n          type: string\n        value:\n          type: string\n        documentation:\n          type: array\n          items:\n            type: string\n      description: Metadata of a constant from a FRAME pallet.\n    DispatchableArg:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n      description: Metadata of a parameter to a dispatchable call from a FRAME pallet.\n    Dispatchable:\n      type: object\n      properties:\n        callIndex:\n          $ref: '#/components/schemas/PalletItemMetadataIndex'\n        name:\n          type: string\n        args:\n          type: array\n          items:\n            $ref: '#/components/schemas/DispatchableArg'\n        documentation:\n          type: array\n          items:\n            type: string\n      description: Metadata of a dispatchable call from a FRAME pallet.\n    PalletStorage:\n      type: object\n      properties:\n        prefix:\n          type: string\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletStorageItem'\n    Pallet:\n      type: object\n      properties:\n        index:\n          type: string\n          format: unsignedInteger\n        name:\n          type: string\n        storage:\n          $ref: '#/components/schemas/PalletStorage'\n        calls:\n          type: array\n          items:\n            $ref: '#/components/schemas/Dispatchable'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletEvent'\n        constants:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletConstant'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletError'\n      description: Metadata of a FRAME pallet.\n    PalletsResponses:\n      oneOf:\n      - type: object\n        properties:\n          at:\n            $ref: '#/components/schemas/BlockIdentifiers'\n          pallets:\n            type: array\n            items:\n              $ref: '#/components/schemas/Pallet'\n        description: Array of pallet metadata from the runtime.\n      - type: object\n        properties:\n          at:\n            $ref: '#/components/schemas/BlockIdentifiers'\n          pallets:\n            type: array\n            items:\n              type: string\n        description: Array of pallet names from the runtime.\n    PalletsConstantsResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        constants:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletConstant'\n    PalletsConstantValue:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        value:\n          type: string\n    PalletsDispatchablesResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        dispatchables:\n          type: array\n          items:\n            $ref: '#/components/schemas/Dispatchable'\n    PalletsDispatchableResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        dispatchable:\n          $ref: '#/components/schemas/Dispatchable'\n    PalletsErrorsResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletError'\n    PalletsErrorResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        error:\n          $ref: '#/components/schemas/PalletError'\n    PalletsEventsResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/PalletEvent'\n    PalletsEventResponse:\n      type: object\n      properties:\n        at:\n          $ref: '#/components/schemas/BlockIdentifiers'\n        event:\n          $ref: '#/components/schemas/PalletEvent'\n    Error:\n      type: object\n      properties:\n        code:\n          type: number\n        message:\n          type: string\n        stack:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /pallets: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/PalletsResponses\": parse schema: oneOf: [0]: parse schema: pallets: parse schema: item: parse schema: reference \"#/components/schemas/Pallet\": parse schema: storage: parse schema: reference \"#/components/schemas/PalletStorage\": parse schema: items: parse schema: item: parse schema: reference \"#/components/schemas/PalletStorageItem\": resolve reference \"#/components/schemas/PalletStorageItem\": schema not found"
}