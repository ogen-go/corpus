{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "containeranalysis-v1beta1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/containeranalysis-v1beta1.yaml",
			"byteSize": 135648,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    AliasContext:\n      description: An alias to a repo revision.\n      properties:\n        kind:\n          description: The alias kind.\n          enum:\n          - KIND_UNSPECIFIED\n          - FIXED\n          - MOVABLE\n          - OTHER\n          type: string\n        name:\n          description: The alias name.\n          type: string\n      type: object\n    Artifact:\n      description: Artifact describes a build product.\n      properties:\n        checksum:\n          description: Hash or checksum value of a binary, or Docker Registry 2.0\n            digest of a container.\n          type: string\n        id:\n          description: Artifact ID, if any; for container images, this will be a URL\n            by digest like `gcr.io/projectID/imagename@sha256:123456`.\n          type: string\n        names:\n          description: Related artifact names. This may be the path to a binary or\n            jar file, or in the case of a container build, the name used to push the\n            container image to Google Container Registry, as presented to `docker\n            push`. Note that a single Artifact ID can have multiple names, for example\n            if two tags are applied to one image.\n          items:\n            type: string\n          type: array\n      type: object\n    ArtifactHashes:\n      description: Defines a hash object for use in Materials and Products.\n      properties:\n        sha256:\n          type: string\n      type: object\n    ArtifactRule:\n      description: Defines an object to declare an in-toto artifact rule\n      properties:\n        artifactRule:\n          items:\n            type: string\n          type: array\n      type: object\n    Attestation:\n      description: Occurrence that represents a single \"attestation\". The authenticity\n        of an attestation can be verified using the attached signature. If the verifier\n        trusts the public key of the signer, then verifying the signature is sufficient\n        to establish trust. In this circumstance, the authority to which this attestation\n        is attached is primarily useful for look-up (how to find this attestation\n        if you already know the authority and artifact to be verified) and intent\n        (which authority was this attestation intended to sign for).\n      properties:\n        genericSignedAttestation:\n          $ref: '#/components/schemas/GenericSignedAttestation'\n        pgpSignedAttestation:\n          $ref: '#/components/schemas/PgpSignedAttestation'\n          description: A PGP signed attestation.\n      type: object\n    Authority:\n      description: Note kind that represents a logical attestation \"role\" or \"authority\".\n        For example, an organization might have one `Authority` for \"QA\" and one for\n        \"build\". This note is intended to act strictly as a grouping mechanism for\n        the attached occurrences (Attestations). This grouping mechanism also provides\n        a security boundary, since IAM ACLs gate the ability for a principle to attach\n        an occurrence to a given note. It also provides a single point of lookup to\n        find all attached attestation occurrences, even if they don't all live in\n        the same project.\n      properties:\n        hint:\n          $ref: '#/components/schemas/Hint'\n          description: Hint hints at the purpose of the attestation authority.\n      type: object\n    Basis:\n      description: 'Basis describes the base image portion (Note) of the DockerImage\n        relationship. Linked occurrences are derived from this or an equivalent image\n        via: FROM Or an equivalent reference, e.g. a tag of the resource_url.'\n      properties:\n        fingerprint:\n          $ref: '#/components/schemas/Fingerprint'\n          description: Required. Immutable. The fingerprint of the base image.\n        resourceUrl:\n          description: Required. Immutable. The resource_url for the resource representing\n            the basis of associated occurrence images.\n          type: string\n      type: object\n    BatchCreateNotesRequest:\n      description: Request to create notes in batch.\n      properties:\n        notes:\n          additionalProperties:\n            $ref: '#/components/schemas/Note'\n          description: Required. The notes to create, the key is expected to be the\n            note ID. Max allowed length is 1000.\n          type: object\n      type: object\n    BatchCreateNotesResponse:\n      description: Response for creating notes in batch.\n      properties:\n        notes:\n          description: The notes that were created.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n      type: object\n    BatchCreateOccurrencesRequest:\n      description: Request to create occurrences in batch.\n      properties:\n        occurrences:\n          description: Required. The occurrences to create. Max allowed length is\n            1000.\n          items:\n            $ref: '#/components/schemas/Occurrence'\n          type: array\n      type: object\n    BatchCreateOccurrencesResponse:\n      description: Response for creating occurrences in batch.\n      properties:\n        occurrences:\n          description: The occurrences that were created.\n          items:\n            $ref: '#/components/schemas/Occurrence'\n          type: array\n      type: object\n    Binding:\n      description: Associates `members`, or principals, with a `role`.\n      properties:\n        condition:\n          $ref: '#/components/schemas/Expr'\n          description: The condition that is associated with this binding. If the\n            condition evaluates to `true`, then this binding applies to the current\n            request. If the condition evaluates to `false`, then this binding does\n            not apply to the current request. However, a different role binding might\n            grant the same role to one or more of the principals in this binding.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        members:\n          description: 'Specifies the principals requesting access for a Cloud Platform\n            resource. `members` can have the following values: * `allUsers`: A special\n            identifier that represents anyone who is on the internet; with or without\n            a Google account. * `allAuthenticatedUsers`: A special identifier that\n            represents anyone who is authenticated with a Google account or a service\n            account. * `user:{emailid}`: An email address that represents a specific\n            Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`:\n            An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.\n            * `group:{emailid}`: An email address that represents a Google group.\n            For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a user that has\n            been recently deleted. For example, `alice@example.com?uid=123456789012345678901`.\n            If the user is recovered, this value reverts to `user:{emailid}` and the\n            recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a service account\n            that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n            If the service account is undeleted, this value reverts to `serviceAccount:{emailid}`\n            and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`:\n            An email address (plus unique identifier) representing a Google group\n            that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`.\n            If the group is recovered, this value reverts to `group:{emailid}` and\n            the recovered group retains the role in the binding. * `domain:{domain}`:\n            The G Suite domain (primary) that represents all the users of that domain.\n            For example, `google.com` or `example.com`. '\n          items:\n            type: string\n          type: array\n        role:\n          description: Role that is assigned to the list of `members`, or principals.\n            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.\n          type: string\n      type: object\n    Build:\n      description: Note holding the version of the provider's builder and the signature\n        of the provenance message in the build details occurrence.\n      properties:\n        builderVersion:\n          description: Required. Immutable. Version of the builder which produced\n            this build.\n          type: string\n        signature:\n          $ref: '#/components/schemas/BuildSignature'\n          description: Signature of the build in occurrences pointing to this build\n            note containing build details.\n      type: object\n    BuildProvenance:\n      description: Provenance of a build. Contains all information needed to verify\n        the full details about the build from source to completion.\n      properties:\n        buildOptions:\n          additionalProperties:\n            type: string\n          description: Special options applied to this build. This is a catch-all\n            field where build providers can enter any desired additional details.\n          type: object\n        builderVersion:\n          description: Version string of the builder at the time this build was executed.\n          type: string\n        builtArtifacts:\n          description: Output of the build.\n          items:\n            $ref: '#/components/schemas/Artifact'\n          type: array\n        commands:\n          description: Commands requested by the build.\n          items:\n            $ref: '#/components/schemas/Command'\n          type: array\n        createTime:\n          description: Time at which the build was created.\n          format: google-datetime\n          type: string\n        creator:\n          description: E-mail address of the user who initiated this build. Note that\n            this was the user's e-mail address at the time the build was initiated;\n            this address may not represent the same end-user for all time.\n          type: string\n        endTime:\n          description: Time at which execution of the build was finished.\n          format: google-datetime\n          type: string\n        id:\n          description: Required. Unique identifier of the build.\n          type: string\n        logsUri:\n          description: URI where any logs for this provenance were written.\n          type: string\n        projectId:\n          description: ID of the project.\n          type: string\n        sourceProvenance:\n          $ref: '#/components/schemas/Source'\n          description: Details of the Source input to the build.\n        startTime:\n          description: Time at which execution of the build was started.\n          format: google-datetime\n          type: string\n        triggerId:\n          description: Trigger identifier if the build was triggered automatically;\n            empty if not.\n          type: string\n      type: object\n    BuildSignature:\n      description: Message encapsulating the signature of the verified build.\n      properties:\n        keyId:\n          description: An ID for the key used to sign. This could be either an ID\n            for the key stored in `public_key` (such as the ID or fingerprint for\n            a PGP key, or the CN for a cert), or a reference to an external key (such\n            as a reference to a key in Cloud Key Management Service).\n          type: string\n        keyType:\n          description: The type of the key, either stored in `public_key` or referenced\n            in `key_id`.\n          enum:\n          - KEY_TYPE_UNSPECIFIED\n          - PGP_ASCII_ARMORED\n          - PKIX_PEM\n          type: string\n        publicKey:\n          description: 'Public key of the builder which can be used to verify that\n            the related findings are valid and unchanged. If `key_type` is empty,\n            this defaults to PEM encoded public keys. This field may be empty if `key_id`\n            references an external key. For Cloud Build based signatures, this is\n            a PEM encoded public key. To verify the Cloud Build signature, place the\n            contents of this field into a file (public.pem). The signature field is\n            base64-decoded into its binary representation in signature.bin, and the\n            provenance bytes from `BuildDetails` are base64-decoded into a binary\n            representation in signed.bin. OpenSSL can then verify the signature: `openssl\n            sha256 -verify public.pem -signature signature.bin signed.bin`'\n          type: string\n        signature:\n          description: Required. Signature of the related `BuildProvenance`. In JSON,\n            this is base-64 encoded.\n          format: byte\n          type: string\n      type: object\n    BuildStep:\n      description: A step in the build pipeline.\n      properties:\n        args:\n          description: A list of arguments that will be presented to the step when\n            it is started. If the image used to run the step's container has an entrypoint,\n            the `args` are used as arguments to that entrypoint. If the image does\n            not define an entrypoint, the first element in args is used as the entrypoint,\n            and the remainder will be used as arguments.\n          items:\n            type: string\n          type: array\n        dir:\n          description: Working directory to use when running this step's container.\n            If this value is a relative path, it is relative to the build's working\n            directory. If this value is absolute, it may be outside the build's working\n            directory, in which case the contents of the path may not be persisted\n            across build step executions, unless a `volume` for that path is specified.\n            If the build specifies a `RepoSource` with `dir` and a step with a `dir`,\n            which specifies an absolute path, the `RepoSource` `dir` is ignored for\n            the step's execution.\n          type: string\n        entrypoint:\n          description: Entrypoint to be used instead of the build step image's default\n            entrypoint. If unset, the image's default entrypoint is used.\n          type: string\n        env:\n          description: A list of environment variable definitions to be used when\n            running a step. The elements are of the form \"KEY=VALUE\" for the environment\n            variable \"KEY\" being given the value \"VALUE\".\n          items:\n            type: string\n          type: array\n        id:\n          description: Unique identifier for this build step, used in `wait_for` to\n            reference this build step as a dependency.\n          type: string\n        name:\n          description: Required. The name of the container image that will run this\n            particular build step. If the image is available in the host's Docker\n            daemon's cache, it will be run directly. If not, the host will attempt\n            to pull the image first, using the builder service account's credentials\n            if necessary. The Docker daemon's cache will already have the latest versions\n            of all of the officially supported build steps ([https://github.com/GoogleCloudPlatform/cloud-builders](https://github.com/GoogleCloudPlatform/cloud-builders)).\n            The Docker daemon will also have cached many of the layers for some popular\n            images, like \"ubuntu\", \"debian\", but they will be refreshed at the time\n            you attempt to use them. If you built an image in a previous build step,\n            it will be stored in the host's Docker daemon's cache and is available\n            to use as the name for a later build step.\n          type: string\n        pullTiming:\n          $ref: '#/components/schemas/TimeSpan'\n          description: Output only. Stores timing information for pulling this build\n            step's builder image only.\n          readOnly: true\n        script:\n          description: A shell script to be executed in the step. When script is provided,\n            the user cannot specify the entrypoint or args.\n          type: string\n        secretEnv:\n          description: A list of environment variables which are encrypted using a\n            Cloud Key Management Service crypto key. These values must be specified\n            in the build's `Secret`.\n          items:\n            type: string\n          type: array\n        status:\n          description: Output only. Status of the build step. At this time, build\n            step status is only updated on build completion; step status is not updated\n            in real-time as the build progresses.\n          enum:\n          - STATUS_UNKNOWN\n          - PENDING\n          - QUEUED\n          - WORKING\n          - SUCCESS\n          - FAILURE\n          - INTERNAL_ERROR\n          - TIMEOUT\n          - CANCELLED\n          - EXPIRED\n          readOnly: true\n          type: string\n        timeout:\n          description: Time limit for executing this build step. If not defined, the\n            step has no time limit and will be allowed to continue to run until either\n            it completes or the build itself times out.\n          format: google-duration\n          type: string\n        timing:\n          $ref: '#/components/schemas/TimeSpan'\n          description: Output only. Stores timing information for executing this build\n            step.\n          readOnly: true\n        volumes:\n          description: List of volumes to mount into the build step. Each volume is\n            created as an empty volume prior to execution of the build step. Upon\n            completion of the build, volumes and their contents are discarded. Using\n            a named volume in only one step is not valid as it is indicative of a\n            build request with an incorrect configuration.\n          items:\n            $ref: '#/components/schemas/Volume'\n          type: array\n        waitFor:\n          description: The ID(s) of the step(s) that this build step depends on. This\n            build step will not start until all the build steps in `wait_for` have\n            completed successfully. If `wait_for` is empty, this build step will start\n            when all previous build steps in the `Build.Steps` list have completed\n            successfully.\n          items:\n            type: string\n          type: array\n      type: object\n    ByProducts:\n      description: Defines an object for the byproducts field in in-toto links. The\n        suggested fields are \"stderr\", \"stdout\", and \"return-value\".\n      properties:\n        customValues:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    CVSSv3:\n      description: Common Vulnerability Scoring System version 3. For details, see\n        https://www.first.org/cvss/specification-document\n      properties:\n        attackComplexity:\n          enum:\n          - ATTACK_COMPLEXITY_UNSPECIFIED\n          - ATTACK_COMPLEXITY_LOW\n          - ATTACK_COMPLEXITY_HIGH\n          type: string\n        attackVector:\n          description: Base Metrics Represents the intrinsic characteristics of a\n            vulnerability that are constant over time and across user environments.\n          enum:\n          - ATTACK_VECTOR_UNSPECIFIED\n          - ATTACK_VECTOR_NETWORK\n          - ATTACK_VECTOR_ADJACENT\n          - ATTACK_VECTOR_LOCAL\n          - ATTACK_VECTOR_PHYSICAL\n          type: string\n        availabilityImpact:\n          enum:\n          - IMPACT_UNSPECIFIED\n          - IMPACT_HIGH\n          - IMPACT_LOW\n          - IMPACT_NONE\n          type: string\n        baseScore:\n          description: The base score is a function of the base metric scores.\n          format: float\n          type: number\n        confidentialityImpact:\n          enum:\n          - IMPACT_UNSPECIFIED\n          - IMPACT_HIGH\n          - IMPACT_LOW\n          - IMPACT_NONE\n          type: string\n        exploitabilityScore:\n          format: float\n          type: number\n        impactScore:\n          format: float\n          type: number\n        integrityImpact:\n          enum:\n          - IMPACT_UNSPECIFIED\n          - IMPACT_HIGH\n          - IMPACT_LOW\n          - IMPACT_NONE\n          type: string\n        privilegesRequired:\n          enum:\n          - PRIVILEGES_REQUIRED_UNSPECIFIED\n          - PRIVILEGES_REQUIRED_NONE\n          - PRIVILEGES_REQUIRED_LOW\n          - PRIVILEGES_REQUIRED_HIGH\n          type: string\n        scope:\n          enum:\n          - SCOPE_UNSPECIFIED\n          - SCOPE_UNCHANGED\n          - SCOPE_CHANGED\n          type: string\n        userInteraction:\n          enum:\n          - USER_INTERACTION_UNSPECIFIED\n          - USER_INTERACTION_NONE\n          - USER_INTERACTION_REQUIRED\n          type: string\n      type: object\n    CloudRepoSourceContext:\n      description: A CloudRepoSourceContext denotes a particular revision in a Google\n        Cloud Source Repo.\n      properties:\n        aliasContext:\n          $ref: '#/components/schemas/AliasContext'\n          description: An alias, which may be a branch or tag.\n        repoId:\n          $ref: '#/components/schemas/RepoId'\n          description: The ID of the repo.\n        revisionId:\n          description: A revision ID.\n          type: string\n      type: object\n    Command:\n      description: Command describes a step performed as part of the build pipeline.\n      properties:\n        args:\n          description: Command-line arguments used when executing this command.\n          items:\n            type: string\n          type: array\n        dir:\n          description: Working directory (relative to project source root) used when\n            running this command.\n          type: string\n        env:\n          description: Environment variables set before running this command.\n          items:\n            type: string\n          type: array\n        id:\n          description: Optional unique identifier for this command, used in wait_for\n            to reference this command as a dependency.\n          type: string\n        name:\n          description: Required. Name of the command, as presented on the command\n            line, or if the command is packaged as a Docker container, as presented\n            to `docker pull`.\n          type: string\n        waitFor:\n          description: The ID(s) of the command(s) that this command depends on.\n          items:\n            type: string\n          type: array\n      type: object\n    Deployable:\n      description: An artifact that can be deployed in some runtime.\n      properties:\n        resourceUri:\n          description: Required. Resource URI for the artifact being deployed.\n          items:\n            type: string\n          type: array\n      type: object\n    Deployment:\n      description: The period during which some deployable was active in a runtime.\n      properties:\n        address:\n          description: Address of the runtime element hosting this deployment.\n          type: string\n        config:\n          description: Configuration used to create this deployment.\n          type: string\n        deployTime:\n          description: Required. Beginning of the lifetime of this deployment.\n          format: google-datetime\n          type: string\n        platform:\n          description: Platform hosting this deployment.\n          enum:\n          - PLATFORM_UNSPECIFIED\n          - GKE\n          - FLEX\n          - CUSTOM\n          type: string\n        resourceUri:\n          description: Output only. Resource URI for the artifact being deployed taken\n            from the deployable field with the same name.\n          items:\n            type: string\n          type: array\n        undeployTime:\n          description: End of the lifetime of this deployment.\n          format: google-datetime\n          type: string\n        userEmail:\n          description: Identity of the user that triggered this deployment.\n          type: string\n      type: object\n    Derived:\n      description: Derived describes the derived image portion (Occurrence) of the\n        DockerImage relationship. This image would be produced from a Dockerfile with\n        FROM .\n      properties:\n        baseResourceUrl:\n          description: Output only. This contains the base image URL for the derived\n            image occurrence.\n          type: string\n        distance:\n          description: Output only. The number of layers by which this image differs\n            from the associated image basis.\n          format: int32\n          type: integer\n        fingerprint:\n          $ref: '#/components/schemas/Fingerprint'\n          description: Required. The fingerprint of the derived image.\n        layerInfo:\n          description: This contains layer-specific metadata, if populated it has\n            length \"distance\" and is ordered with [distance] being the layer immediately\n            following the base image and [1] being the final layer.\n          items:\n            $ref: '#/components/schemas/Layer'\n          type: array\n      type: object\n    Detail:\n      description: 'Identifies all appearances of this vulnerability in the package\n        for a specific distro/location. For example: glibc in cpe:/o:debian:debian_linux:8\n        for versions 2.1 - 2.2'\n      properties:\n        cpeUri:\n          description: Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\n            in which the vulnerability manifests. Examples include distro or storage\n            location for vulnerable jar.\n          type: string\n        description:\n          description: A vendor-specific description of this note.\n          type: string\n        fixedLocation:\n          $ref: '#/components/schemas/VulnerabilityLocation'\n          description: The fix for this specific package version.\n        isObsolete:\n          description: Whether this detail is obsolete. Occurrences are expected not\n            to point to obsolete details.\n          type: boolean\n        maxAffectedVersion:\n          $ref: '#/components/schemas/Version'\n          description: The max version of the package in which the vulnerability exists.\n        minAffectedVersion:\n          $ref: '#/components/schemas/Version'\n          description: The min version of the package in which the vulnerability exists.\n        package:\n          description: Required. The name of the package where the vulnerability was\n            found.\n          type: string\n        packageType:\n          description: The type of package; whether native or non native(ruby gems,\n            node.js packages etc).\n          type: string\n        severityName:\n          description: 'The severity (eg: distro assigned severity) for this vulnerability.'\n          type: string\n        source:\n          description: The source from which the information in this Detail was obtained.\n          type: string\n        sourceUpdateTime:\n          description: The time this information was last changed at the source. This\n            is an upstream timestamp from the underlying information source - e.g.\n            Ubuntu security tracker.\n          format: google-datetime\n          type: string\n        vendor:\n          description: The name of the vendor of the product.\n          type: string\n      type: object\n    Details:\n      description: Details of an attestation occurrence.\n      properties:\n        attestation:\n          $ref: '#/components/schemas/Attestation'\n          description: Required. Attestation for the resource.\n      type: object\n    Discovered:\n      description: Provides information about the analysis status of a discovered\n        resource.\n      properties:\n        analysisStatus:\n          description: The status of discovery for the resource.\n          enum:\n          - ANALYSIS_STATUS_UNSPECIFIED\n          - PENDING\n          - SCANNING\n          - FINISHED_SUCCESS\n          - FINISHED_FAILED\n          - FINISHED_UNSUPPORTED\n          type: string\n        analysisStatusError:\n          $ref: '#/components/schemas/Status'\n          description: When an error is encountered this will contain a LocalizedMessage\n            under details to show to the user. The LocalizedMessage is output only\n            and populated by the API.\n        continuousAnalysis:\n          description: Whether the resource is continuously analyzed.\n          enum:\n          - CONTINUOUS_ANALYSIS_UNSPECIFIED\n          - ACTIVE\n          - INACTIVE\n          type: string\n        lastAnalysisTime:\n          description: The last time continuous analysis was done for this resource.\n            Deprecated, do not use.\n          format: google-datetime\n          type: string\n      type: object\n    Discovery:\n      description: A note that indicates a type of analysis a provider would perform.\n        This note exists in a provider's project. A `Discovery` occurrence is created\n        in a consumer's project at the start of analysis.\n      properties:\n        analysisKind:\n          description: Required. Immutable. The kind of analysis that is handled by\n            this discovery.\n          enum:\n          - NOTE_KIND_UNSPECIFIED\n          - VULNERABILITY\n          - BUILD\n          - IMAGE\n          - PACKAGE\n          - DEPLOYMENT\n          - DISCOVERY\n          - ATTESTATION\n          - INTOTO\n          - SBOM\n          - SPDX_PACKAGE\n          - SPDX_FILE\n          - SPDX_RELATIONSHIP\n          type: string\n      type: object\n    Distribution:\n      description: This represents a particular channel of distribution for a given\n        package. E.g., Debian's jessie-backports dpkg mirror.\n      properties:\n        architecture:\n          description: The CPU architecture for which packages in this distribution\n            channel were built.\n          enum:\n          - ARCHITECTURE_UNSPECIFIED\n          - X86\n          - X64\n          type: string\n        cpeUri:\n          description: Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)\n            denoting the package manager version distributing a package.\n          type: string\n        description:\n          description: The distribution channel-specific description of this package.\n          type: string\n        latestVersion:\n          $ref: '#/components/schemas/Version'\n          description: The latest available version of this package in this distribution\n            channel.\n        maintainer:\n          description: A freeform string denoting the maintainer of this package.\n          type: string\n        url:\n          description: The distribution channel-specific homepage for this package.\n          type: string\n      type: object\n    DocumentNote:\n      description: 'DocumentNote represents an SPDX Document Creation Infromation\n        section: https://spdx.github.io/spdx-spec/2-document-creation-information/'\n      properties:\n        dataLicence:\n          description: Compliance with the SPDX specification includes populating\n            the SPDX fields therein with data related to such fields (\"SPDX-Metadata\")\n          type: string\n        spdxVersion:\n          description: Provide a reference number that can be used to understand how\n            to parse and interpret the rest of the file\n          type: string\n      type: object\n    DocumentOccurrence:\n      description: 'DocumentOccurrence represents an SPDX Document Creation Information\n        section: https://spdx.github.io/spdx-spec/2-document-creation-information/'\n      properties:\n        createTime:\n          description: Identify when the SPDX file was originally created. The date\n            is to be specified according to combined date and time in UTC format as\n            specified in ISO 8601 standard\n          format: google-datetime\n          type: string\n        creatorComment:\n          description: A field for creators of the SPDX file to provide general comments\n            about the creation of the SPDX file or any other relevant comment not\n            included in the other fields\n          type: string\n        creators:\n          description: Identify who (or what, in the case of a tool) created the SPDX\n            file. If the SPDX file was created by an individual, indicate the person's\n            name\n          items:\n            type: string\n          type: array\n        documentComment:\n          description: A field for creators of the SPDX file content to provide comments\n            to the consumers of the SPDX document\n          type: string\n        externalDocumentRefs:\n          description: Identify any external SPDX documents referenced within this\n            SPDX document\n          items:\n            type: string\n          type: array\n        id:\n          description: Identify the current SPDX document which may be referenced\n            in relationships by other files, packages internally and documents externally\n          type: string\n        licenseListVersion:\n          description: A field for creators of the SPDX file to provide the version\n            of the SPDX License List used when the SPDX file was created\n          type: string\n        namespace:\n          description: \"Provide an SPDX document specific namespace as a unique absolute\\\n            \\ Uniform Resource Identifier (URI) as specified in RFC-3986, with the\\\n            \\ exception of the \\u2018#\\u2019 delimiter\"\n          type: string\n        title:\n          description: Identify name of this document as designated by creator\n          type: string\n      type: object\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    Environment:\n      description: Defines an object for the environment field in in-toto links. The\n        suggested fields are \"variables\", \"filesystem\", and \"workdir\".\n      properties:\n        customValues:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    Expr:\n      description: 'Represents a textual expression in the Common Expression Language\n        (CEL) syntax. CEL is a C-like expression language. The syntax and semantics\n        of CEL are documented at https://github.com/google/cel-spec. Example (Comparison):\n        title: \"Summary size limit\" description: \"Determines if a summary is less\n        than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality):\n        title: \"Requestor is owner\" description: \"Determines if requestor is the document\n        owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic):\n        title: \"Public documents\" description: \"Determine whether the document should\n        be publicly visible\" expression: \"document.type != ''private'' \u0026\u0026 document.type\n        != ''internal''\" Example (Data Manipulation): title: \"Notification string\"\n        description: \"Create a notification string with a timestamp.\" expression:\n        \"''New message received at '' + string(document.create_time)\" The exact variables\n        and functions that may be referenced within an expression are determined by\n        the service that evaluates it. See the service documentation for additional\n        information.'\n      properties:\n        description:\n          description: Optional. Description of the expression. This is a longer text\n            which describes the expression, e.g. when hovered over it in a UI.\n          type: string\n        expression:\n          description: Textual representation of an expression in Common Expression\n            Language syntax.\n          type: string\n        location:\n          description: Optional. String indicating the location of the expression\n            for error reporting, e.g. a file name and a position in the file.\n          type: string\n        title:\n          description: Optional. Title for the expression, i.e. a short string describing\n            its purpose. This can be used e.g. in UIs which allow to enter the expression.\n          type: string\n      type: object\n    ExternalRef:\n      description: An External Reference allows a Package to reference an external\n        source of additional information, metadata, enumerations, asset identifiers,\n        or downloadable content believed to be relevant to the Package\n      properties:\n        category:\n          description: An External Reference allows a Package to reference an external\n            source of additional information, metadata, enumerations, asset identifiers,\n            or downloadable content believed to be relevant to the Package\n          enum:\n          - CATEGORY_UNSPECIFIED\n          - SECURITY\n          - PACKAGE_MANAGER\n          - PERSISTENT_ID\n          - OTHER\n          type: string\n        comment:\n          description: Human-readable information about the purpose and target of\n            the reference\n          type: string\n        locator:\n          description: The unique string with no spaces necessary to access the package-specific\n            information, metadata, or content within the target location\n          type: string\n        type:\n          description: Type of category (e.g. 'npm' for the PACKAGE_MANAGER category)\n          type: string\n      type: object\n    FileHashes:\n      description: Container message for hashes of byte content of files, used in\n        source messages to verify integrity of source input to the build.\n      properties:\n        fileHash:\n          description: Required. Collection of file hashes.\n          items:\n            $ref: '#/components/schemas/Hash'\n          type: array\n      type: object\n    FileNote:\n      description: 'FileNote represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/'\n      properties:\n        checksum:\n          description: Provide a unique identifier to match analysis information on\n            each specific file in a package\n          items:\n            type: string\n          type: array\n        fileType:\n          description: This field provides information about the type of file identified\n          enum:\n          - FILE_TYPE_UNSPECIFIED\n          - SOURCE\n          - BINARY\n          - ARCHIVE\n          - APPLICATION\n          - AUDIO\n          - IMAGE\n          - TEXT\n          - VIDEO\n          - DOCUMENTATION\n          - SPDX\n          - OTHER\n          type: string\n        title:\n          description: Identify the full path and filename that corresponds to the\n            file information in this section\n          type: string\n      type: object\n    FileOccurrence:\n      description: 'FileOccurrence represents an SPDX File Information section: https://spdx.github.io/spdx-spec/4-file-information/'\n      properties:\n        attributions:\n          description: This field provides a place for the SPDX data creator to record,\n            at the file level, acknowledgements that may be needed to be communicated\n            in some contexts\n          items:\n            type: string\n          type: array\n        comment:\n          description: This field provides a place for the SPDX file creator to record\n            any general comments about the file\n          type: string\n        contributors:\n          description: This field provides a place for the SPDX file creator to record\n            file contributors\n          items:\n            type: string\n          type: array\n        copyright:\n          description: Identify the copyright holder of the file, as well as any dates\n            present\n          type: string\n        filesLicenseInfo:\n          description: This field contains the license information actually found\n            in the file, if any\n          items:\n            type: string\n          type: array\n        id:\n          description: Uniquely identify any element in an SPDX document which may\n            be referenced by other elements\n          type: string\n        licenseConcluded:\n          $ref: '#/components/schemas/License'\n          description: This field contains the license the SPDX file creator has concluded\n            as governing the file or alternative values if the governing license cannot\n            be determined\n        notice:\n          description: This field provides a place for the SPDX file creator to record\n            license notices or other such related notices found in the file\n          type: string\n      type: object\n    Fingerprint:\n      description: A set of properties that uniquely identify a given Docker image.\n      properties:\n        v1Name:\n          description: Required. The layer ID of the final layer in the Docker image's\n            v1 representation.\n          type: string\n        v2Blob:\n          description: Required. The ordered list of v2 blobs that represent a given\n            image.\n          items:\n            type: string\n          type: array\n        v2Name:\n          description: 'Output only. The name of the image''s v2 blobs computed via:\n            [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1]) Only\n            the name of the final blob is kept.'\n          type: string\n      type: object\n    FixableTotalByDigest:\n      description: Per resource and severity counts of fixable and total vulnerabilities.\n      properties:\n        fixableCount:\n          description: The number of fixable vulnerabilities associated with this\n            resource.\n          format: int64\n          type: string\n        resource:\n          $ref: '#/components/schemas/Resource'\n          description: The affected resource.\n        severity:\n          description: The severity for this count. SEVERITY_UNSPECIFIED indicates\n            total across all severities.\n          enum:\n          - SEVERITY_UNSPECIFIED\n          - MINIMAL\n          - LOW\n          - MEDIUM\n          - HIGH\n          - CRITICAL\n          type: string\n        totalCount:\n          description: The total number of vulnerabilities associated with this resource.\n          format: int64\n          type: string\n      type: object\n    GenericSignedAttestation:\n      description: An attestation wrapper that uses the Grafeas `Signature` message.\n        This attestation must define the `serialized_payload` that the `signatures`\n        verify and any metadata necessary to interpret that plaintext. The signatures\n        should always be over the `serialized_payload` bytestring.\n      properties:\n        contentType:\n          description: Type (for example schema) of the attestation payload that was\n            signed. The verifier must ensure that the provided type is one that the\n            verifier supports, and that the attestation payload is a valid instantiation\n            of that type (for example by validating a JSON schema).\n          enum:\n          - CONTENT_TYPE_UNSPECIFIED\n          - SIMPLE_SIGNING_JSON\n          type: string\n        serializedPayload:\n          description: The serialized payload that is verified by one or more `signatures`.\n            The encoding and semantic meaning of this payload must match what is set\n            in `content_type`.\n          format: byte\n          type: string\n        signatures:\n          description: One or more signatures over `serialized_payload`. Verifier\n            implementations should consider this attestation message verified if at\n            least one `signature` verifies `serialized_payload`. See `Signature` in\n            common.proto for more details on signature structure and verification.\n          items:\n            $ref: '#/components/schemas/Signature'\n          type: array\n      type: object\n    GerritSourceContext:\n      description: A SourceContext referring to a Gerrit project.\n      properties:\n        aliasContext:\n          $ref: '#/components/schemas/AliasContext'\n          description: An alias, which may be a branch or tag.\n        gerritProject:\n          description: The full project name within the host. Projects may be nested,\n            so \"project/subproject\" is a valid project name. The \"repo name\" is the\n            hostURI/project.\n          type: string\n        hostUri:\n          description: The URI of a running Gerrit instance.\n          type: string\n        revisionId:\n          description: A revision (commit) ID.\n          type: string\n      type: object\n    GetIamPolicyRequest:\n      description: Request message for `GetIamPolicy` method.\n      properties:\n        options:\n          $ref: '#/components/schemas/GetPolicyOptions'\n          description: 'OPTIONAL: A `GetPolicyOptions` object for specifying options\n            to `GetIamPolicy`.'\n      type: object\n    GetPolicyOptions:\n      description: Encapsulates settings provided to GetIamPolicy.\n      properties:\n        requestedPolicyVersion:\n          description: Optional. The policy format version to be returned. Valid values\n            are 0, 1, and 3. Requests specifying an invalid value will be rejected.\n            Requests for policies with any conditional bindings must specify version\n            3. Policies without any conditional bindings may specify any valid value\n            or leave the field unset. To learn which resources support conditions\n            in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n          format: int32\n          type: integer\n      type: object\n    GitSourceContext:\n      description: A GitSourceContext denotes a particular revision in a third party\n        Git repository (e.g., GitHub).\n      properties:\n        revisionId:\n          description: Git commit hash.\n          type: string\n        url:\n          description: Git repository URL.\n          type: string\n      type: object\n    GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata:\n      description: Metadata for all operations used and required for all operations\n        that created by Container Analysis Providers\n      properties:\n        createTime:\n          description: Output only. The time this operation was created.\n          format: google-datetime\n          type: string\n        endTime:\n          description: Output only. The time that this operation was marked completed\n            or failed.\n          format: google-datetime\n          type: string\n      type: object\n    GrafeasV1beta1BuildDetails:\n      description: Details of a build occurrence.\n      properties:\n        provenance:\n          $ref: '#/components/schemas/BuildProvenance'\n          description: Required. The actual provenance for the build.\n        provenanceBytes:\n          description: Serialized JSON representation of the provenance, used in generating\n            the build signature in the corresponding build note. After verifying the\n            signature, `provenance_bytes` can be unmarshalled and compared to the\n            provenance to confirm that it is unchanged. A base64-encoded string representation\n            of the provenance bytes is used for the signature in order to interoperate\n            with openssl which expects this format for signature verification. The\n            serialized form is captured both to avoid ambiguity in how the provenance\n            is marshalled to json as well to prevent incompatibilities with future\n            changes.\n          type: string\n      type: object\n    GrafeasV1beta1DeploymentDetails:\n      description: Details of a deployment occurrence.\n      properties:\n        deployment:\n          $ref: '#/components/schemas/Deployment'\n          description: Required. Deployment history for the resource.\n      type: object\n    GrafeasV1beta1DiscoveryDetails:\n      description: Details of a discovery occurrence.\n      properties:\n        discovered:\n          $ref: '#/components/schemas/Discovered'\n          description: Required. Analysis status for the discovered resource.\n      type: object\n    GrafeasV1beta1ImageDetails:\n      description: Details of an image occurrence.\n      properties:\n        derivedImage:\n          $ref: '#/components/schemas/Derived'\n          description: Required. Immutable. The child image derived from the base\n            image.\n      type: object\n    GrafeasV1beta1IntotoArtifact:\n      properties:\n        hashes:\n          $ref: '#/components/schemas/ArtifactHashes'\n        resourceUri:\n          type: string\n      type: object\n    GrafeasV1beta1IntotoDetails:\n      description: This corresponds to a signed in-toto link - it is made up of one\n        or more signatures and the in-toto link itself. This is used for occurrences\n        of a Grafeas in-toto note.\n      properties:\n        signatures:\n          items:\n            $ref: '#/components/schemas/GrafeasV1beta1IntotoSignature'\n          type: array\n        signed:\n          $ref: '#/components/schemas/Link'\n      type: object\n    GrafeasV1beta1IntotoSignature:\n      description: A signature object consists of the KeyID used and the signature\n        itself.\n      properties:\n        keyid:\n          type: string\n        sig:\n          type: string\n      type: object\n    GrafeasV1beta1PackageDetails:\n      description: Details of a package occurrence.\n      properties:\n        installation:\n          $ref: '#/components/schemas/Installation'\n          description: Required. Where the package was installed.\n      type: object\n    GrafeasV1beta1VulnerabilityDetails:\n      description: Details of a vulnerability Occurrence.\n      properties:\n        cvssScore:\n          description: Output only. The CVSS score of this vulnerability. CVSS score\n            is on a scale of 0-10 where 0 indicates low severity and 10 indicates\n            high severity.\n          format: float\n          type: number\n        effectiveSeverity:\n          description: The distro assigned severity for this vulnerability when it\n            is available, and note provider assigned severity when distro has not\n            yet assigned a severity for this vulnerability. When there are multiple\n            PackageIssues for this vulnerability, they can have different effective\n            severities because some might be provided by the distro while others are\n            provided by the language ecosystem for a language pack. For this reason,\n            it is advised to use the effective severity on the PackageIssue level.\n            In the case where multiple PackageIssues have differing effective severities,\n            this field should be the highest severity for any of the PackageIssues.\n          enum:\n          - SEVERITY_UNSPECIFIED\n          - MINIMAL\n          - LOW\n          - MEDIUM\n          - HIGH\n          - CRITICAL\n          type: string\n        longDescription:\n          description: Output only. A detailed description of this vulnerability.\n          type: string\n        packageIssue:\n          description: Required. The set of affected locations and their fixes (if\n            available) within the associated resource.\n          items:\n            $ref: '#/components/schemas/PackageIssue'\n          type: array\n        relatedUrls:\n          description: Output only. URLs related to this vulnerability.\n          items:\n            $ref: '#/components/schemas/RelatedUrl'\n          type: array\n        severity:\n          description: Output only. The note provider assigned Severity of the vulnerability.\n          enum:\n          - SEVERITY_UNSPECIFIED\n          - MINIMAL\n          - LOW\n          - MEDIUM\n          - HIGH\n          - CRITICAL\n          type: string\n        shortDescription:\n          description: Output only. A one sentence description of this vulnerability.\n          type: string\n        type:\n          description: The type of package; whether native or non native(ruby gems,\n            node.js packages etc)\n          type: string\n      type: object\n    Hash:\n      description: Container message for hash values.\n      properties:\n        type:\n          description: Required. The type of hash that was performed.\n          enum:\n          - HASH_TYPE_UNSPECIFIED\n          - SHA256\n          type: string\n        value:\n          description: Required. The hash value.\n          format: byte\n          type: string\n      type: object\n    Hint:\n      description: This submessage provides human-readable hints about the purpose\n        of the authority. Because the name of a note acts as its resource reference,\n        it is important to disambiguate the canonical name of the Note (which might\n        be a UUID for security purposes) from \"readable\" names more suitable for debug\n        output. Note that these hints should not be used to look up authorities in\n        security sensitive contexts, such as when looking up attestations to verify.\n      properties:\n        humanReadableName:\n          description: Required. The human readable name of this attestation authority,\n            for example \"qa\".\n          type: string\n      type: object\n    InToto:\n      description: This contains the fields corresponding to the definition of a software\n        supply chain step in an in-toto layout. This information goes into a Grafeas\n        note.\n      properties:\n        expectedCommand:\n          description: This field contains the expected command used to perform the\n            step.\n          items:\n            type: string\n          type: array\n        expectedMaterials:\n          description: The following fields contain in-toto artifact rules identifying\n            the artifacts that enter this supply chain step, and exit the supply chain\n            step, i.e. materials and products of the step.\n          items:\n            $ref: '#/components/schemas/ArtifactRule'\n          type: array\n        expectedProducts:\n          items:\n            $ref: '#/components/schemas/ArtifactRule'\n          type: array\n        signingKeys:\n          description: This field contains the public keys that can be used to verify\n            the signatures on the step metadata.\n          items:\n            $ref: '#/components/schemas/SigningKey'\n          type: array\n        stepName:\n          description: This field identifies the name of the step in the supply chain.\n          type: string\n        threshold:\n          description: This field contains a value that indicates the minimum number\n            of keys that need to be used to sign the step's in-toto link.\n          format: int64\n          type: string\n      type: object\n    Installation:\n      description: This represents how a particular software package may be installed\n        on a system.\n      properties:\n        location:\n          description: Required. All of the places within the filesystem versions\n            of this package have been found.\n          items:\n            $ref: '#/components/schemas/Location'\n          type: array\n        name:\n          description: Output only. The name of the installed package.\n          type: string\n      type: object\n    KnowledgeBase:\n      properties:\n        name:\n          description: The KB name (generally of the form KB[0-9]+ i.e. KB123456).\n          type: string\n        url:\n          description: A link to the KB in the Windows update catalog - https://www.catalog.update.microsoft.com/\n          type: string\n      type: object\n    Layer:\n      description: Layer holds metadata specific to a layer of a Docker image.\n      properties:\n        arguments:\n          description: The recovered arguments to the Dockerfile directive.\n          type: string\n        directive:\n          description: Required. The recovered Dockerfile directive used to construct\n            this layer.\n          enum:\n          - DIRECTIVE_UNSPECIFIED\n          - MAINTAINER\n          - RUN\n          - CMD\n          - LABEL\n          - EXPOSE\n          - ENV\n          - ADD\n          - COPY\n          - ENTRYPOINT\n          - VOLUME\n          - USER\n          - WORKDIR\n          - ARG\n          - ONBUILD\n          - STOPSIGNAL\n          - HEALTHCHECK\n          - SHELL\n          type: string\n      type: object\n    License:\n      description: 'License information: https://spdx.github.io/spdx-spec/3-package-information/#315-declared-license'\n      properties:\n        comments:\n          description: Comments\n          type: string\n        expression:\n          description: 'Expression: https://spdx.github.io/spdx-spec/appendix-IV-SPDX-license-expressions/'\n          type: string\n      type: object\n    Link:\n      description: This corresponds to an in-toto link.\n      properties:\n        byproducts:\n          $ref: '#/components/schemas/ByProducts'\n          description: ByProducts are data generated as part of a software supply\n            chain step, but are not the actual result of the step.\n        command:\n          description: 'This field contains the full command executed for the step.\n            This can also be empty if links are generated for operations that aren''t\n            directly mapped to a specific command. Each term in the command is an\n            independent string in the list. An example of a command in the in-toto\n            metadata field is: \"command\": [\"git\", \"clone\", \"https://github.com/in-toto/demo-project.git\"]'\n          items:\n            type: string\n          type: array\n        environment:\n          $ref: '#/components/schemas/Environment'\n          description: 'This is a field that can be used to capture information about\n            the environment. It is suggested for this field to contain information\n            that details environment variables, filesystem information, and the present\n            working directory. The recommended structure of this field is: \"environment\":\n            { \"custom_values\": { \"variables\": \"\", \"filesystem\": \"\", \"workdir\": \"\",\n            \"\": \"...\" } }'\n        materials:\n          description: 'Materials are the supply chain artifacts that go into the\n            step and are used for the operation performed. The key of the map is the\n            path of the artifact and the structure contains the recorded hash information.\n            An example is: \"materials\": [ { \"resource_uri\": \"foo/bar\", \"hashes\": {\n            \"sha256\": \"ebebf...\", : } } ]'\n          items:\n            $ref: '#/components/schemas/GrafeasV1beta1IntotoArtifact'\n          type: array\n        products:\n          description: Products are the supply chain artifacts generated as a result\n            of the step. The structure is identical to that of materials.\n          items:\n            $ref: '#/components/schemas/GrafeasV1beta1IntotoArtifact'\n          type: array\n      type: object\n    ListNoteOccurrencesResponse:\n      description: Response for listing occurrences for a note.\n      properties:\n        nextPageToken:\n          description: Token to provide to skip to a particular spot in the list.\n          type: string\n        occurrences:\n          description: The occurrences attached to the specified note.\n          items:\n            $ref: '#/components/schemas/Occurrence'\n          type: array\n      type: object\n    ListNotesResponse:\n      description: Response for listing notes.\n      properties:\n        nextPageToken:\n          description: The next pagination token in the list response. It should be\n            used as `page_token` for the following request. An empty value means no\n            more results.\n          type: string\n        notes:\n          description: The notes requested.\n          items:\n            $ref: '#/components/schemas/Note'\n          type: array\n      type: object\n    ListOccurrencesResponse:\n      description: Response for listing occurrences.\n      properties:\n        nextPageToken:\n          description: The next pagination token in the list response. It should be\n            used as `page_token` for the following request. An empty value means no\n            more results.\n          type: string\n        occurrences:\n          description: The occurrences requested.\n          items:\n            $ref: '#/components/schemas/Occurrence'\n          type: array\n      type: object\n    ListScanConfigsResponse:\n      description: Response for listing scan configurations.\n      properties:\n        nextPageToken:\n          description: The next pagination token in the list response. It should be\n            used as `page_token` for the following request. An empty value means no\n            more results.\n          type: string\n        scanConfigs:\n          description: The scan configurations requested.\n          items:\n            $ref: '#/components/schemas/ScanConfig'\n          type: array\n      type: object\n    Location:\n      description: An occurrence of a particular package installation found within\n        a system's filesystem. E.g., glibc was found in `/var/lib/dpkg/status`.\n      properties:\n        cpeUri:\n          description: Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)\n            denoting the package manager version distributing a package.\n          type: string\n        path:\n          description: The path from which we gathered that this package/version is\n            installed.\n          type: string\n        version:\n          $ref: '#/components/schemas/Version'\n          description: The version installed at this location.\n      type: object\n    Note:\n      description: A type of analysis that can be done for a resource.\n      properties:\n        attestationAuthority:\n          $ref: '#/components/schemas/Authority'\n          description: A note describing an attestation role.\n        baseImage:\n          $ref: '#/components/schemas/Basis'\n          description: A note describing a base image.\n        build:\n          $ref: '#/components/schemas/Build'\n          description: A note describing build provenance for a verifiable build.\n        createTime:\n          description: Output only. The time this note was created. This field can\n            be used as a filter in list requests.\n          format: google-datetime\n          type: string\n        deployable:\n          $ref: '#/components/schemas/Deployable'\n          description: A note describing something that can be deployed.\n        discovery:\n          $ref: '#/components/schemas/Discovery'\n          description: A note describing the initial analysis of a resource.\n        expirationTime:\n          description: Time of expiration for this note. Empty if note does not expire.\n          format: google-datetime\n          type: string\n        intoto:\n          $ref: '#/components/schemas/InToto'\n          description: A note describing an in-toto link.\n        kind:\n          description: Output only. The type of analysis. This field can be used as\n            a filter in list requests.\n          enum:\n          - NOTE_KIND_UNSPECIFIED\n          - VULNERABILITY\n          - BUILD\n          - IMAGE\n          - PACKAGE\n          - DEPLOYMENT\n          - DISCOVERY\n          - ATTESTATION\n          - INTOTO\n          - SBOM\n          - SPDX_PACKAGE\n          - SPDX_FILE\n          - SPDX_RELATIONSHIP\n          type: string\n        longDescription:\n          description: A detailed description of this note.\n          type: string\n        name:\n          description: Output only. The name of the note in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.\n          type: string\n        package:\n          $ref: '#/components/schemas/Package'\n          description: A note describing a package hosted by various package managers.\n        relatedNoteNames:\n          description: Other notes related to this note.\n          items:\n            type: string\n          type: array\n        relatedUrl:\n          description: URLs associated with this note.\n          items:\n            $ref: '#/components/schemas/RelatedUrl'\n          type: array\n        sbom:\n          $ref: '#/components/schemas/DocumentNote'\n          description: A note describing a software bill of materials.\n        shortDescription:\n          description: A one sentence description of this note.\n          type: string\n        spdxFile:\n          $ref: '#/components/schemas/FileNote'\n          description: A note describing an SPDX File.\n        spdxPackage:\n          $ref: '#/components/schemas/PackageInfoNote'\n          description: A note describing an SPDX Package.\n        spdxRelationship:\n          $ref: '#/components/schemas/RelationshipNote'\n          description: A note describing an SPDX File.\n        updateTime:\n          description: Output only. The time this note was last updated. This field\n            can be used as a filter in list requests.\n          format: google-datetime\n          type: string\n        vulnerability:\n          $ref: '#/components/schemas/Vulnerability'\n          description: A note describing a package vulnerability.\n      type: object\n    Occurrence:\n      description: An instance of an analysis type that has been found on a resource.\n      properties:\n        attestation:\n          $ref: '#/components/schemas/Details'\n          description: Describes an attestation of an artifact.\n        build:\n          $ref: '#/components/schemas/GrafeasV1beta1BuildDetails'\n          description: Describes a verifiable build.\n        createTime:\n          description: Output only. The time this occurrence was created.\n          format: google-datetime\n          type: string\n        deployment:\n          $ref: '#/components/schemas/GrafeasV1beta1DeploymentDetails'\n          description: Describes the deployment of an artifact on a runtime.\n        derivedImage:\n          $ref: '#/components/schemas/GrafeasV1beta1ImageDetails'\n          description: Describes how this resource derives from the basis in the associated\n            note.\n        discovered:\n          $ref: '#/components/schemas/GrafeasV1beta1DiscoveryDetails'\n          description: Describes when a resource was discovered.\n        installation:\n          $ref: '#/components/schemas/GrafeasV1beta1PackageDetails'\n          description: Describes the installation of a package on the linked resource.\n        intoto:\n          $ref: '#/components/schemas/GrafeasV1beta1IntotoDetails'\n          description: Describes a specific in-toto link.\n        kind:\n          description: Output only. This explicitly denotes which of the occurrence\n            details are specified. This field can be used as a filter in list requests.\n          enum:\n          - NOTE_KIND_UNSPECIFIED\n          - VULNERABILITY\n          - BUILD\n          - IMAGE\n          - PACKAGE\n          - DEPLOYMENT\n          - DISCOVERY\n          - ATTESTATION\n          - INTOTO\n          - SBOM\n          - SPDX_PACKAGE\n          - SPDX_FILE\n          - SPDX_RELATIONSHIP\n          type: string\n        name:\n          description: Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.\n          type: string\n        noteName:\n          description: Required. Immutable. The analysis note associated with this\n            occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This\n            field can be used as a filter in list requests.\n          type: string\n        remediation:\n          description: A description of actions that can be taken to remedy the note.\n          type: string\n        resource:\n          $ref: '#/components/schemas/Resource'\n          description: Required. Immutable. The resource for which the occurrence\n            applies.\n        sbom:\n          $ref: '#/components/schemas/DocumentOccurrence'\n          description: Describes a specific software bill of materials document.\n        spdxFile:\n          $ref: '#/components/schemas/FileOccurrence'\n          description: Describes a specific SPDX File.\n        spdxPackage:\n          $ref: '#/components/schemas/PackageInfoOccurrence'\n          description: Describes a specific SPDX Package.\n        spdxRelationship:\n          $ref: '#/components/schemas/RelationshipOccurrence'\n          description: Describes a specific SPDX Relationship.\n        updateTime:\n          description: Output only. The time this occurrence was last updated.\n          format: google-datetime\n          type: string\n        vulnerability:\n          $ref: '#/components/schemas/GrafeasV1beta1VulnerabilityDetails'\n          description: Describes a security vulnerability.\n      type: object\n    Package:\n      description: This represents a particular package that is distributed over various\n        channels. E.g., glibc (aka libc6) is distributed by many, at various versions.\n      properties:\n        distribution:\n          description: The various channels by which a package is distributed.\n          items:\n            $ref: '#/components/schemas/Distribution'\n          type: array\n        name:\n          description: Required. Immutable. The name of the package.\n          type: string\n      type: object\n    PackageInfoNote:\n      description: 'PackageInfoNote represents an SPDX Package Information section:\n        https://spdx.github.io/spdx-spec/3-package-information/'\n      properties:\n        analyzed:\n          description: Indicates whether the file content of this package has been\n            available for or subjected to analysis when creating the SPDX document\n          type: boolean\n        attribution:\n          description: A place for the SPDX data creator to record, at the package\n            level, acknowledgements that may be needed to be communicated in some\n            contexts\n          type: string\n        checksum:\n          description: Provide an independently reproducible mechanism that permits\n            unique identification of a specific package that correlates to the data\n            in this SPDX file\n          type: string\n        copyright:\n          description: Identify the copyright holders of the package, as well as any\n            dates present\n          type: string\n        detailedDescription:\n          description: A more detailed description of the package\n          type: string\n        downloadLocation:\n          description: This section identifies the download Universal Resource Locator\n            (URL), or a specific location within a version control system (VCS) for\n            the package at the time that the SPDX file was created\n          type: string\n        externalRefs:\n          description: ExternalRef\n          items:\n            $ref: '#/components/schemas/ExternalRef'\n          type: array\n        filesLicenseInfo:\n          description: \"Contain the license the SPDX file creator has concluded as\\\n            \\ governing the This field is to contain a list of all licenses found\\\n            \\ in the package. The relationship between licenses (i.e., conjunctive,\\\n            \\ disjunctive) is not specified in this field \\u2013 it is simply a listing\\\n            \\ of all licenses found\"\n          items:\n            type: string\n          type: array\n        homePage:\n          description: Provide a place for the SPDX file creator to record a web site\n            that serves as the package's home page\n          type: string\n        licenseDeclared:\n          $ref: '#/components/schemas/License'\n          description: List the licenses that have been declared by the authors of\n            the package\n        originator:\n          description: If the package identified in the SPDX file originated from\n            a different person or organization than identified as Package Supplier,\n            this field identifies from where or whom the package originally came\n          type: string\n        packageType:\n          description: 'The type of package: OS, MAVEN, GO, GO_STDLIB, etc.'\n          type: string\n        summaryDescription:\n          description: A short description of the package\n          type: string\n        supplier:\n          description: Identify the actual distribution source for the package/directory\n            identified in the SPDX file\n          type: string\n        title:\n          description: Identify the full name of the package as given by the Package\n            Originator\n          type: string\n        verificationCode:\n          description: This field provides an independently reproducible mechanism\n            identifying specific contents of a package based on the actual files (except\n            the SPDX file itself, if it is included in the package) that make up each\n            package and that correlates to the data in this SPDX file\n          type: string\n        version:\n          description: Identify the version of the package\n          type: string\n      type: object\n    PackageInfoOccurrence:\n      description: 'PackageInfoOccurrence represents an SPDX Package Information section:\n        https://spdx.github.io/spdx-spec/3-package-information/'\n      properties:\n        comment:\n          description: A place for the SPDX file creator to record any general comments\n            about the package being described\n          type: string\n        filename:\n          description: Provide the actual file name of the package, or path of the\n            directory being treated as a package\n          type: string\n        homePage:\n          description: Output only. Provide a place for the SPDX file creator to record\n            a web site that serves as the package's home page\n          readOnly: true\n          type: string\n        id:\n          description: Uniquely identify any element in an SPDX document which may\n            be referenced by other elements\n          type: string\n        licenseConcluded:\n          $ref: '#/components/schemas/License'\n          description: package or alternative values, if the governing license cannot\n            be determined\n        packageType:\n          description: 'Output only. The type of package: OS, MAVEN, GO, GO_STDLIB,\n            etc.'\n          readOnly: true\n          type: string\n        sourceInfo:\n          description: Provide a place for the SPDX file creator to record any relevant\n            background information or additional comments about the origin of the\n            package\n          type: string\n        summaryDescription:\n          description: Output only. A short description of the package\n          readOnly: true\n          type: string\n        title:\n          description: Output only. Identify the full name of the package as given\n            by the Package Originator\n          readOnly: true\n          type: string\n        version:\n          description: Output only. Identify the version of the package\n          readOnly: true\n          type: string\n      type: object\n    PackageIssue:\n      description: This message wraps a location affected by a vulnerability and its\n        associated fix (if one is available).\n      properties:\n        affectedLocation:\n          $ref: '#/components/schemas/VulnerabilityLocation'\n          description: Required. The location of the vulnerability.\n        effectiveSeverity:\n          description: Output only. The distro or language system assigned severity\n            for this vulnerability when that is available and note provider assigned\n            severity when it is not available.\n          enum:\n          - SEVERITY_UNSPECIFIED\n          - MINIMAL\n          - LOW\n          - MEDIUM\n          - HIGH\n          - CRITICAL\n          readOnly: true\n          type: string\n        fixedLocation:\n          $ref: '#/components/schemas/VulnerabilityLocation'\n          description: The location of the available fix for vulnerability.\n        packageType:\n          description: The type of package (e.g. OS, MAVEN, GO).\n          type: string\n        severityName:\n          description: Deprecated, use Details.effective_severity instead The severity\n            (e.g., distro assigned severity) for this vulnerability.\n          type: string\n      type: object\n    PgpSignedAttestation:\n      description: An attestation wrapper with a PGP-compatible signature. This message\n        only supports `ATTACHED` signatures, where the payload that is signed is included\n        alongside the signature itself in the same file.\n      properties:\n        contentType:\n          description: Type (for example schema) of the attestation payload that was\n            signed. The verifier must ensure that the provided type is one that the\n            verifier supports, and that the attestation payload is a valid instantiation\n            of that type (for example by validating a JSON schema).\n          enum:\n          - CONTENT_TYPE_UNSPECIFIED\n          - SIMPLE_SIGNING_JSON\n          type: string\n        pgpKeyId:\n          description: 'The cryptographic fingerprint of the key used to generate\n            the signature, as output by, e.g. `gpg --list-keys`. This should be the\n            version 4, full 160-bit fingerprint, expressed as a 40 character hexidecimal\n            string. See https://tools.ietf.org/html/rfc4880#section-12.2 for details.\n            Implementations may choose to acknowledge \"LONG\", \"SHORT\", or other abbreviated\n            key IDs, but only the full fingerprint is guaranteed to work. In gpg,\n            the full fingerprint can be retrieved from the `fpr` field returned when\n            calling --list-keys with --with-colons. For example: ``` gpg --with-colons\n            --with-fingerprint --force-v4-certs \\ --list-keys attester@example.com\n            tru::1:1513631572:0:3:1:5 pub:...... fpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n            ``` Above, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.'\n          type: string\n        signature:\n          description: Required. The raw content of the signature, as output by GNU\n            Privacy Guard (GPG) or equivalent. Since this message only supports attached\n            signatures, the payload that was signed must be attached. While the signature\n            format supported is dependent on the verification implementation, currently\n            only ASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather\n            than `--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n            --output=signature.gpg payload.json` will create the signature content\n            expected in this field in `signature.gpg` for the `payload.json` attestation\n            payload.\n          type: string\n      type: object\n    Policy:\n      description: 'An Identity and Access Management (IAM) policy, which specifies\n        access controls for Google Cloud resources. A `Policy` is a collection of\n        `bindings`. A `binding` binds one or more `members`, or principals, to a single\n        `role`. Principals can be user accounts, service accounts, Google groups,\n        and domains (such as G Suite). A `role` is a named list of permissions; each\n        `role` can be an IAM predefined role or a user-created custom role. For some\n        types of Google Cloud resources, a `binding` can also specify a `condition`,\n        which is a logical expression that allows access to a resource only if the\n        expression evaluates to `true`. A condition can add constraints based on attributes\n        of the request, the resource, or both. To learn which resources support conditions\n        in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n        **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\",\n        \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\",\n        \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\":\n        \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\"\n        ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant\n        access after Sep 2020\", \"expression\": \"request.time \u003c timestamp(''2020-10-01T00:00:00.000Z'')\",\n        } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings:\n        - members: - user:mike@example.com - group:admins@example.com - domain:google.com\n        - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin\n        - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer\n        condition: title: expirable access description: Does not grant access after\n        Sep 2020 expression: request.time \u003c timestamp(''2020-10-01T00:00:00.000Z'')\n        etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see\n        the [IAM documentation](https://cloud.google.com/iam/docs/).'\n      properties:\n        bindings:\n          description: Associates a list of `members`, or principals, with a `role`.\n            Optionally, may specify a `condition` that determines how and when the\n            `bindings` are applied. Each of the `bindings` must contain at least one\n            principal. The `bindings` in a `Policy` can refer to up to 1,500 principals;\n            up to 250 of these principals can be Google groups. Each occurrence of\n            a principal counts towards these limits. For example, if the `bindings`\n            grant 50 different roles to `user:alice@example.com`, and not to any other\n            principal, then you can add another 1,450 principals to the `bindings`\n            in the `Policy`.\n          items:\n            $ref: '#/components/schemas/Binding'\n          type: array\n        etag:\n          description: '`etag` is used for optimistic concurrency control as a way\n            to help prevent simultaneous updates of a policy from overwriting each\n            other. It is strongly suggested that systems make use of the `etag` in\n            the read-modify-write cycle to perform policy updates in order to avoid\n            race conditions: An `etag` is returned in the response to `getIamPolicy`,\n            and systems are expected to put that etag in the request to `setIamPolicy`\n            to ensure that their change will be applied to the same version of the\n            policy. **Important:** If you use IAM Conditions, you must include the\n            `etag` field whenever you call `setIamPolicy`. If you omit this field,\n            then IAM allows you to overwrite a version `3` policy with a version `1`\n            policy, and all of the conditions in the version `3` policy are lost.'\n          format: byte\n          type: string\n        version:\n          description: 'Specifies the format of the policy. Valid values are `0`,\n            `1`, and `3`. Requests that specify an invalid value are rejected. Any\n            operation that affects conditional role bindings must specify version\n            `3`. This requirement applies to the following operations: * Getting a\n            policy that includes a conditional role binding * Adding a conditional\n            role binding to a policy * Changing a conditional role binding in a policy\n            * Removing any role binding, with or without a condition, from a policy\n            that includes conditions **Important:** If you use IAM Conditions, you\n            must include the `etag` field whenever you call `setIamPolicy`. If you\n            omit this field, then IAM allows you to overwrite a version `3` policy\n            with a version `1` policy, and all of the conditions in the version `3`\n            policy are lost. If a policy does not include any conditions, operations\n            on that policy may specify any valid version or leave the field unset.\n            To learn which resources support conditions in their IAM policies, see\n            the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).'\n          format: int32\n          type: integer\n      type: object\n    ProjectRepoId:\n      description: Selects a repo using a Google Cloud Platform project ID (e.g.,\n        winged-cargo-31) and a repo name within that project.\n      properties:\n        projectId:\n          description: The ID of the project.\n          type: string\n        repoName:\n          description: The name of the repo. Leave empty for the default repo.\n          type: string\n      type: object\n    RelatedUrl:\n      description: Metadata for any related URL information.\n      properties:\n        label:\n          description: Label to describe usage of the URL.\n          type: string\n        url:\n          description: Specific URL associated with the resource.\n          type: string\n      type: object\n    RelationshipNote:\n      description: 'RelationshipNote represents an SPDX Relationship section: https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/'\n      properties:\n        type:\n          description: The type of relationship between the source and target SPDX\n            elements\n          enum:\n          - RELATIONSHIP_TYPE_UNSPECIFIED\n          - DESCRIBES\n          - DESCRIBED_BY\n          - CONTAINS\n          - CONTAINED_BY\n          - DEPENDS_ON\n          - DEPENDENCY_OF\n          - DEPENDENCY_MANIFEST_OF\n          - BUILD_DEPENDENCY_OF\n          - DEV_DEPENDENCY_OF\n          - OPTIONAL_DEPENDENCY_OF\n          - PROVIDED_DEPENDENCY_OF\n          - TEST_DEPENDENCY_OF\n          - RUNTIME_DEPENDENCY_OF\n          - EXAMPLE_OF\n          - GENERATES\n          - GENERATED_FROM\n          - ANCESTOR_OF\n          - DESCENDANT_OF\n          - VARIANT_OF\n          - DISTRIBUTION_ARTIFACT\n          - PATCH_FOR\n          - PATCH_APPLIED\n          - COPY_OF\n          - FILE_ADDED\n          - FILE_DELETED\n          - FILE_MODIFIED\n          - EXPANDED_FROM_ARCHIVE\n          - DYNAMIC_LINK\n          - STATIC_LINK\n          - DATA_FILE_OF\n          - TEST_CASE_OF\n          - BUILD_TOOL_OF\n          - DEV_TOOL_OF\n          - TEST_OF\n          - TEST_TOOL_OF\n          - DOCUMENTATION_OF\n          - OPTIONAL_COMPONENT_OF\n          - METAFILE_OF\n          - PACKAGE_OF\n          - AMENDS\n          - PREREQUISITE_FOR\n          - HAS_PREREQUISITE\n          - OTHER\n          type: string\n      type: object\n    RelationshipOccurrence:\n      description: 'RelationshipOccurrence represents an SPDX Relationship section:\n        https://spdx.github.io/spdx-spec/7-relationships-between-SPDX-elements/'\n      properties:\n        comment:\n          description: A place for the SPDX file creator to record any general comments\n            about the relationship\n          type: string\n        source:\n          description: Also referred to as SPDXRef-A The source SPDX element (file,\n            package, etc)\n          type: string\n        target:\n          description: Also referred to as SPDXRef-B The target SPDC element (file,\n            package, etc) In cases where there are \"known unknowns\", the use of the\n            keyword NOASSERTION can be used The keywords NONE can be used to indicate\n            that an SPDX element (package/file/snippet) has no other elements connected\n            by some relationship to it\n          type: string\n        type:\n          description: Output only. The type of relationship between the source and\n            target SPDX elements\n          enum:\n          - RELATIONSHIP_TYPE_UNSPECIFIED\n          - DESCRIBES\n          - DESCRIBED_BY\n          - CONTAINS\n          - CONTAINED_BY\n          - DEPENDS_ON\n          - DEPENDENCY_OF\n          - DEPENDENCY_MANIFEST_OF\n          - BUILD_DEPENDENCY_OF\n          - DEV_DEPENDENCY_OF\n          - OPTIONAL_DEPENDENCY_OF\n          - PROVIDED_DEPENDENCY_OF\n          - TEST_DEPENDENCY_OF\n          - RUNTIME_DEPENDENCY_OF\n          - EXAMPLE_OF\n          - GENERATES\n          - GENERATED_FROM\n          - ANCESTOR_OF\n          - DESCENDANT_OF\n          - VARIANT_OF\n          - DISTRIBUTION_ARTIFACT\n          - PATCH_FOR\n          - PATCH_APPLIED\n          - COPY_OF\n          - FILE_ADDED\n          - FILE_DELETED\n          - FILE_MODIFIED\n          - EXPANDED_FROM_ARCHIVE\n          - DYNAMIC_LINK\n          - STATIC_LINK\n          - DATA_FILE_OF\n          - TEST_CASE_OF\n          - BUILD_TOOL_OF\n          - DEV_TOOL_OF\n          - TEST_OF\n          - TEST_TOOL_OF\n          - DOCUMENTATION_OF\n          - OPTIONAL_COMPONENT_OF\n          - METAFILE_OF\n          - PACKAGE_OF\n          - AMENDS\n          - PREREQUISITE_FOR\n          - HAS_PREREQUISITE\n          - OTHER\n          readOnly: true\n          type: string\n      type: object\n    RepoId:\n      description: A unique identifier for a Cloud Repo.\n      properties:\n        projectRepoId:\n          $ref: '#/components/schemas/ProjectRepoId'\n          description: A combination of a project ID and a repo name.\n        uid:\n          description: A server-assigned, globally unique identifier.\n          type: string\n      type: object\n    Resource:\n      description: An entity that can have metadata. For example, a Docker image.\n      properties:\n        contentHash:\n          $ref: '#/components/schemas/Hash'\n          description: Deprecated, do not use. Use uri instead. The hash of the resource\n            content. For example, the Docker digest.\n        name:\n          description: Deprecated, do not use. Use uri instead. The name of the resource.\n            For example, the name of a Docker image - \"Debian\".\n          type: string\n        uri:\n          description: Required. The unique URI of the resource. For example, `https://gcr.io/project/image@sha256:foo`\n            for a Docker image.\n          type: string\n      type: object\n    ScanConfig:\n      description: A scan configuration specifies whether Cloud components in a project\n        have a particular type of analysis being run. For example, it can configure\n        whether vulnerability scanning is being done on Docker images or not.\n      properties:\n        createTime:\n          description: Output only. The time this scan config was created.\n          format: google-datetime\n          type: string\n        description:\n          description: Output only. A human-readable description of what the scan\n            configuration does.\n          type: string\n        enabled:\n          description: Whether the scan is enabled.\n          type: boolean\n        name:\n          description: Output only. The name of the scan configuration in the form\n            of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.\n          type: string\n        updateTime:\n          description: Output only. The time this scan config was last updated.\n          format: google-datetime\n          type: string\n      type: object\n    SetIamPolicyRequest:\n      description: Request message for `SetIamPolicy` method.\n      properties:\n        policy:\n          $ref: '#/components/schemas/Policy'\n          description: 'REQUIRED: The complete policy to be applied to the `resource`.\n            The size of the policy is limited to a few 10s of KB. An empty policy\n            is a valid policy but certain Cloud Platform services (such as Projects)\n            might reject them.'\n      type: object\n    Signature:\n      description: 'Verifiers (e.g. Kritis implementations) MUST verify signatures\n        with respect to the trust anchors defined in policy (e.g. a Kritis policy).\n        Typically this means that the verifier has been configured with a map from\n        `public_key_id` to public key material (and any required parameters, e.g.\n        signing algorithm). In particular, verification implementations MUST NOT treat\n        the signature `public_key_id` as anything more than a key lookup hint. The\n        `public_key_id` DOES NOT validate or authenticate a public key; it only provides\n        a mechanism for quickly selecting a public key ALREADY CONFIGURED on the verifier\n        through a trusted channel. Verification implementations MUST reject signatures\n        in any of the following circumstances: * The `public_key_id` is not recognized\n        by the verifier. * The public key that `public_key_id` refers to does not\n        verify the signature with respect to the payload. The `signature` contents\n        SHOULD NOT be \"attached\" (where the payload is included with the serialized\n        `signature` bytes). Verifiers MUST ignore any \"attached\" payload and only\n        verify signatures with respect to explicitly provided payload (e.g. a `payload`\n        field on the proto message that holds this Signature, or the canonical serialization\n        of the proto message that holds this signature).'\n      properties:\n        publicKeyId:\n          description: 'The identifier for the public key that verifies this signature.\n            * The `public_key_id` is required. * The `public_key_id` SHOULD be an\n            RFC3986 conformant URI. * When possible, the `public_key_id` SHOULD be\n            an immutable reference, such as a cryptographic digest. Examples of valid\n            `public_key_id`s: OpenPGP V4 public key fingerprint: * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\"\n            See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for\n            more details on this scheme. RFC6920 digest-named SubjectPublicKeyInfo\n            (digest of the DER serialization): * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\"\n            * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\"'\n          type: string\n        signature:\n          description: The content of the signature, an opaque bytestring. The payload\n            that this signature verifies MUST be unambiguously provided with the Signature\n            during verification. A wrapper message might provide the payload explicitly.\n            Alternatively, a message might have a canonical serialization that can\n            always be unambiguously computed to derive the payload.\n          format: byte\n          type: string\n      type: object\n    SigningKey:\n      description: 'This defines the format used to record keys used in the software\n        supply chain. An in-toto link is attested using one or more keys defined in\n        the in-toto layout. An example of this is: { \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\",\n        \"key_type\": \"rsa\", \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\nMIIBojANBgkqhkiG9w0B...\",\n        \"key_scheme\": \"rsassa-pss-sha256\" } The format for in-toto''s key definition\n        can be found in section 4.2 of the in-toto specification.'\n      properties:\n        keyId:\n          description: key_id is an identifier for the signing key.\n          type: string\n        keyScheme:\n          description: 'This field contains the corresponding signature scheme. Eg:\n            \"rsassa-pss-sha256\".'\n          type: string\n        keyType:\n          description: 'This field identifies the specific signing method. Eg: \"rsa\",\n            \"ed25519\", and \"ecdsa\".'\n          type: string\n        publicKeyValue:\n          description: This field contains the actual public key.\n          type: string\n      type: object\n    Source:\n      description: Source describes the location of the source used for the build.\n      properties:\n        additionalContexts:\n          description: If provided, some of the source code used for the build may\n            be found in these locations, in the case where the source repository had\n            multiple remotes or submodules. This list will not include the context\n            specified in the context field.\n          items:\n            $ref: '#/components/schemas/SourceContext'\n          type: array\n        artifactStorageSourceUri:\n          description: If provided, the input binary artifacts for the build came\n            from this location.\n          type: string\n        context:\n          $ref: '#/components/schemas/SourceContext'\n          description: If provided, the source code used for the build came from this\n            location.\n        fileHashes:\n          additionalProperties:\n            $ref: '#/components/schemas/FileHashes'\n          description: Hash(es) of the build source, which can be used to verify that\n            the original source integrity was maintained in the build. The keys to\n            this map are file paths used as build source and the values contain the\n            hash values for those files. If the build source came in a single package\n            such as a gzipped tarfile (.tar.gz), the FileHash will be for the single\n            path to that file.\n          type: object\n      type: object\n    SourceContext:\n      description: A SourceContext is a reference to a tree of files. A SourceContext\n        together with a path point to a unique revision of a single file or directory.\n      properties:\n        cloudRepo:\n          $ref: '#/components/schemas/CloudRepoSourceContext'\n          description: A SourceContext referring to a revision in a Google Cloud Source\n            Repo.\n        gerrit:\n          $ref: '#/components/schemas/GerritSourceContext'\n          description: A SourceContext referring to a Gerrit project.\n        git:\n          $ref: '#/components/schemas/GitSourceContext'\n          description: A SourceContext referring to any third party Git repo (e.g.,\n            GitHub).\n        labels:\n          additionalProperties:\n            type: string\n          description: Labels with user defined metadata.\n          type: object\n      type: object\n    Status:\n      description: 'The `Status` type defines a logical error model that is suitable\n        for different programming environments, including REST APIs and RPC APIs.\n        It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\n        three pieces of data: error code, error message, and error details. You can\n        find out more about this error model and how to work with it in the [API Design\n        Guide](https://cloud.google.com/apis/design/errors).'\n      properties:\n        code:\n          description: The status code, which should be an enum value of google.rpc.Code.\n          format: int32\n          type: integer\n        details:\n          description: A list of messages that carry the error details. There is a\n            common set of message types for APIs to use.\n          items:\n            additionalProperties:\n              description: Properties of the object. Contains field @type with type\n                URL.\n            type: object\n          type: array\n        message:\n          description: A developer-facing error message, which should be in English.\n            Any user-facing error message should be localized and sent in the google.rpc.Status.details\n            field, or localized by the client.\n          type: string\n      type: object\n    TestIamPermissionsRequest:\n      description: Request message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: The set of permissions to check for the `resource`. Permissions\n            with wildcards (such as '*' or 'storage.*') are not allowed. For more\n            information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).\n          items:\n            type: string\n          type: array\n      type: object\n    TestIamPermissionsResponse:\n      description: Response message for `TestIamPermissions` method.\n      properties:\n        permissions:\n          description: A subset of `TestPermissionsRequest.permissions` that the caller\n            is allowed.\n          items:\n            type: string\n          type: array\n      type: object\n    TimeSpan:\n      description: Start and end times for a build execution phase.\n      properties:\n        endTime:\n          description: End of time span.\n          format: google-datetime\n          type: string\n        startTime:\n          description: Start of time span.\n          format: google-datetime\n          type: string\n      type: object\n    Version:\n      description: Version contains structured information about the version of a\n        package.\n      properties:\n        epoch:\n          description: Used to correct mistakes in the version numbering scheme.\n          format: int32\n          type: integer\n        inclusive:\n          description: Whether this version is specifying part of an inclusive range.\n            Grafeas does not have the capability to specify version ranges; instead\n            we have fields that specify start version and end versions. At times this\n            is insufficient - we also need to specify whether the version is included\n            in the range or is excluded from the range. This boolean is expected to\n            be set to true when the version is included in a range.\n          type: boolean\n        kind:\n          description: Required. Distinguishes between sentinel MIN/MAX versions and\n            normal versions.\n          enum:\n          - VERSION_KIND_UNSPECIFIED\n          - NORMAL\n          - MINIMUM\n          - MAXIMUM\n          type: string\n        name:\n          description: Required only when version kind is NORMAL. The main part of\n            the version name.\n          type: string\n        revision:\n          description: The iteration of the package build from the above version.\n          type: string\n      type: object\n    Volume:\n      description: Volume describes a Docker container volume which is mounted into\n        build steps in order to persist files across build step execution.\n      properties:\n        name:\n          description: Name of the volume to mount. Volume names must be unique per\n            build step and must be valid names for Docker volumes. Each named volume\n            must be used by at least two build steps.\n          type: string\n        path:\n          description: Path at which to mount the volume. Paths must be absolute and\n            cannot conflict with other volume paths on the same build step or with\n            certain reserved volume paths.\n          type: string\n      type: object\n    Vulnerability:\n      description: Vulnerability provides metadata about a security vulnerability\n        in a Note.\n      properties:\n        cvssScore:\n          description: The CVSS score for this vulnerability.\n          format: float\n          type: number\n        cvssV3:\n          $ref: '#/components/schemas/CVSSv3'\n          description: The full description of the CVSSv3.\n        details:\n          description: All information about the package to specifically identify\n            this vulnerability. One entry per (version range and cpe_uri) the package\n            vulnerability has manifested in.\n          items:\n            $ref: '#/components/schemas/Detail'\n          type: array\n        severity:\n          description: Note provider assigned impact of the vulnerability.\n          enum:\n          - SEVERITY_UNSPECIFIED\n          - MINIMAL\n          - LOW\n          - MEDIUM\n          - HIGH\n          - CRITICAL\n          type: string\n        sourceUpdateTime:\n          description: The time this information was last changed at the source. This\n            is an upstream timestamp from the underlying information source - e.g.\n            Ubuntu security tracker.\n          format: google-datetime\n          type: string\n        windowsDetails:\n          description: Windows details get their own format because the information\n            format and model don't match a normal detail. Specifically Windows updates\n            are done as patches, thus Windows vulnerabilities really are a missing\n            package, rather than a package being at an incorrect version.\n          items:\n            $ref: '#/components/schemas/WindowsDetail'\n          type: array\n      type: object\n    VulnerabilityLocation:\n      description: The location of the vulnerability.\n      properties:\n        cpeUri:\n          description: Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\n            format. Examples include distro or storage location for vulnerable jar.\n          type: string\n        package:\n          description: Required. The package being described.\n          type: string\n        version:\n          $ref: '#/components/schemas/Version'\n          description: Required. The version of the package being described.\n      type: object\n    VulnerabilityOccurrencesSummary:\n      description: A summary of how many vulnerability occurrences there are per resource\n        and severity type.\n      properties:\n        counts:\n          description: A listing by resource of the number of fixable and total vulnerabilities.\n          items:\n            $ref: '#/components/schemas/FixableTotalByDigest'\n          type: array\n      type: object\n    WindowsDetail:\n      properties:\n        cpeUri:\n          description: Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\n            in which the vulnerability manifests. Examples include distro or storage\n            location for vulnerable jar.\n          type: string\n        description:\n          description: The description of the vulnerability.\n          type: string\n        fixingKbs:\n          description: Required. The names of the KBs which have hotfixes to mitigate\n            this vulnerability. Note that there may be multiple hotfixes (and thus\n            multiple KBs) that mitigate a given vulnerability. Currently any listed\n            kb's presence is considered a fix.\n          items:\n            $ref: '#/components/schemas/KnowledgeBase'\n          type: array\n        name:\n          description: Required. The name of the vulnerability.\n          type: string\n      type: object\n  securitySchemes:\n    Oauth2:\n      description: Oauth 2.0 implicit authentication\n      flows:\n        implicit:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n      type: oauth2\n    Oauth2c:\n      description: Oauth 2.0 authorizationCode authentication\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.google.com/o/oauth2/auth\n          scopes:\n            https://www.googleapis.com/auth/cloud-platform: See, edit, configure,\n              and delete your Google Cloud data and see the email address for your\n              Google Account.\n          tokenUrl: https://accounts.google.com/o/oauth2/token\n      type: oauth2\n  x-stackQL-resources: {}\nexternalDocs:\n  url: https://cloud.google.com/container-analysis/api/reference/rest/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: An implementation of the Grafeas API, which stores, and enables querying\n    and retrieval of critical metadata about all of your software artifacts.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: Container Analysis API\n  version: v1beta1\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://containeranalysis.googleapis.com/$discovery/rest?version=v1beta1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: containeranalysis\nopenapi: 3.0.0\npaths:\n  /v1beta1/{name}:\n    delete:\n      description: Deletes the specified occurrence. For example, use this method\n        to delete an occurrence when the occurrence is no longer applicable for the\n        given resource.\n      operationId: containeranalysis.projects.occurrences.delete\n      parameters:\n      - description: Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    get:\n      description: Gets the specified scan configuration.\n      operationId: containeranalysis.projects.scanConfigs.get\n      parameters:\n      - description: Required. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScanConfig'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the specified occurrence.\n      operationId: containeranalysis.projects.occurrences.patch\n      parameters:\n      - description: Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: The fields to update.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Occurrence'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Occurrence'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    put:\n      description: Updates the specified scan configuration.\n      operationId: containeranalysis.projects.scanConfigs.update\n      parameters:\n      - description: Required. The name of the scan configuration in the form of `projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScanConfig'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScanConfig'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{name}/notes:\n    get:\n      description: Gets the note attached to the specified occurrence. Consumer projects\n        can use this method to get a note that belongs to a provider project.\n      operationId: containeranalysis.projects.occurrences.getNotes\n      parameters:\n      - description: Required. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{name}/occurrences:\n    get:\n      description: Lists occurrences referencing the specified note. Provider projects\n        can use this method to get all occurrences across consumer projects referencing\n        the specified note.\n      operationId: containeranalysis.projects.notes.occurrences.list\n      parameters:\n      - description: Required. The name of the note to list occurrences for in the\n          form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: The filter expression.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Number of occurrences to return in the list.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Token to provide to skip to a particular spot in the list.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNoteOccurrencesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/notes:\n    get:\n      description: Lists notes for the specified project.\n      operationId: containeranalysis.projects.notes.list\n      parameters:\n      - description: Required. The name of the project to list notes for in the form\n          of `projects/[PROJECT_ID]`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The filter expression.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Number of notes to return in the list. Must be positive. Max\n          allowed page size is 1000. If not specified, page size defaults to 20.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Token to provide to skip to a particular spot in the list.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNotesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new note.\n      operationId: containeranalysis.projects.notes.create\n      parameters:\n      - description: Required. The name of the project in the form of `projects/[PROJECT_ID]`,\n          under which the note is to be created.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Required. The ID to use for this note.\n        in: query\n        name: noteId\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Note'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Note'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/notes:batchCreate:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates new notes in batch.\n      operationId: containeranalysis.projects.notes.batchCreate\n      parameters:\n      - description: Required. The name of the project in the form of `projects/[PROJECT_ID]`,\n          under which the notes are to be created.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchCreateNotesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchCreateNotesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/occurrences:\n    get:\n      description: Lists occurrences for the specified project.\n      operationId: containeranalysis.projects.occurrences.list\n      parameters:\n      - description: Required. The name of the project to list occurrences for in\n          the form of `projects/[PROJECT_ID]`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The filter expression.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Number of occurrences to return in the list. Must be positive.\n          Max allowed page size is 1000. If not specified, page size defaults to 20.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Token to provide to skip to a particular spot in the list.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListOccurrencesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a new occurrence.\n      operationId: containeranalysis.projects.occurrences.create\n      parameters:\n      - description: Required. The name of the project in the form of `projects/[PROJECT_ID]`,\n          under which the occurrence is to be created.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Occurrence'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Occurrence'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/occurrences:batchCreate:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates new occurrences in batch.\n      operationId: containeranalysis.projects.occurrences.batchCreate\n      parameters:\n      - description: Required. The name of the project in the form of `projects/[PROJECT_ID]`,\n          under which the occurrences are to be created.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchCreateOccurrencesRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchCreateOccurrencesResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{parent}/occurrences:vulnerabilitySummary:\n    get:\n      description: Gets a summary of the number and severity of occurrences.\n      operationId: containeranalysis.projects.occurrences.getVulnerabilitySummary\n      parameters:\n      - description: Required. The name of the project to get a vulnerability summary\n          for in the form of `projects/[PROJECT_ID]`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: The filter expression.\n        in: query\n        name: filter\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VulnerabilityOccurrencesSummary'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{parent}/scanConfigs:\n    get:\n      description: Lists scan configurations for the specified project.\n      operationId: containeranalysis.projects.scanConfigs.list\n      parameters:\n      - description: Required. The name of the project to list scan configurations\n          for in the form of `projects/[PROJECT_ID]`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: Required. The filter expression.\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: The number of scan configs to return in the list.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Token to provide to skip to a particular spot in the list.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListScanConfigsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1beta1/{resource}:getIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Gets the access control policy for a note or an occurrence resource.\n        Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy`\n        permission if the resource is a note or occurrence, respectively. The resource\n        takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`\n        for occurrences.\n      operationId: containeranalysis.projects.occurrences.getIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being requested.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:setIamPolicy:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Sets the access control policy on the specified note or occurrence.\n        Requires `containeranalysis.notes.setIamPolicy` or `containeranalysis.occurrences.setIamPolicy`\n        permission if the resource is a note or an occurrence, respectively. The resource\n        takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`\n        for occurrences.\n      operationId: containeranalysis.projects.occurrences.setIamPolicy\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy is being specified.\n          See the operation documentation for the appropriate value for this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetIamPolicyRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Policy'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\n  /v1beta1/{resource}:testIamPermissions:\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Returns the permissions that a caller has on the specified note\n        or occurrence. Requires list permission on the project (for example, `containeranalysis.notes.list`).\n        The resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\n        notes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for occurrences.\n      operationId: containeranalysis.projects.occurrences.testIamPermissions\n      parameters:\n      - description: 'REQUIRED: The resource for which the policy detail is being\n          requested. See the operation documentation for the appropriate value for\n          this field.'\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestIamPermissionsRequest'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestIamPermissionsResponse'\n          description: Successful response\n      security:\n      - Oauth2:\n        - https://www.googleapis.com/auth/cloud-platform\n        Oauth2c:\n        - https://www.googleapis.com/auth/cloud-platform\n      tags:\n      - projects\nservers:\n- url: https://containeranalysis.googleapis.com/\ntags:\n- name: projects\nx-hasEquivalentPaths: true\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@ca6abad4745061e15112152cdee33275701a16c1/-/blob/providers/src/googleapis.com/v0.1.2/services/containeranalysis-v1beta1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/ca6abad4745061e15112152cdee33275701a16c1/providers/src/googleapis.com/v0.1.2/services/containeranalysis-v1beta1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:98256: duplicate path: \"/v1beta1/{parent}/notes\""
}