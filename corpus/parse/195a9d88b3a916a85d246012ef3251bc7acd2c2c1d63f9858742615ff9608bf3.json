{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GroupePSA/groupepsa.github.io"
		},
		"file": {
			"name": "api-b2b-webhook-template-v3.yaml",
			"size": 0,
			"path": "assets/openapi/api-b2b-webhook-template-v3.yaml",
			"byteSize": 18085,
			"content": "openapi: 3.0.0\r\nservers:\r\n  - url: 'https://client.base.uri/root'\r\ninfo:\r\n  version: '3.3.0'\r\n\r\n  title: Groupe PSA Connected Car B2B API\r\n  description: | \r\n\r\n                # Introduction\r\n  \r\n                This is the description of the *Groupe PSA Connected Car V2 B2B API* Webhooks template.This specification is written in **OpenAPI Specification version 3** and can\r\n                be displayed using [ReDoc](https://github.com/Rebilly/ReDoc) or\r\n                [Swagger](http://swagger.io).\r\n                \r\n                This webhook template specifies the HTTP POST requests related to the **remote action** \u0026 **monitor** events of *Groupe PSA Connected Car V2 B2B API*.\r\n                \r\n                # Security\r\n                  * The authentication is already set when registering the callback using the attributes field to set HTTP header entries for the authentication (usually a _basic authentication_).\r\n                  * HTTPS scheme should be supported with the webhook server with a certificate issued by a trusted public and known CA. \r\n\r\n    \r\n  license:\r\n    name: Groupe PSA Licence\r\n    url: 'https://www.psa-peugeot-citroen.com/'\r\ntags:\r\n  - name: Remote-Webhook\r\n    description: Remote webhook model.\r\n  \r\n  - name: Monitor-Webhook\r\n    description: Monitor webhook model.\r\n \r\npaths:\r\n  '/remote/webhook':\r\n    post:\r\n      tags:\r\n        - Remote-Webhook\r\n      summary: Post a list of remote events.\r\n      description: |\r\n                    Post a list of remote events.\r\n      operationId: postRemoteEvents\r\n      parameters:\r\n        - $ref: '#/components/parameters/headerAttribute'\r\n        - $ref: '#/components/parameters/queryAttribute'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n                $ref: '#/components/schemas/RemoteEvents'\r\n      responses:\r\n        202:\r\n         description: Post Ok(accepted).\r\n        default:\r\n          $ref: '#/components/responses/PostErrorResponse'\r\n  \r\n  '/monitors/webhook':\r\n    post:\r\n      tags:\r\n        - Monitor-Webhook\r\n      summary: Post a list of monitor events.\r\n      description: |\r\n                    Post a list of avent raised by a registered monitor.\r\n      operationId: postMonitorEvents\r\n      parameters:\r\n        - $ref: '#/components/parameters/headerAttribute'\r\n        - $ref: '#/components/parameters/queryAttribute'\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n               $ref: '#/components/schemas/MonitorEvents'\r\n      responses:\r\n        201:\r\n         description: Post Ok.\r\n        default:\r\n          $ref: '#/components/responses/PostErrorResponse'\r\n\r\n \r\ncomponents:\r\n  securitySchemes:\r\n    basicAuth:     # \u003c-- arbitrary name for the security scheme\r\n      type: http\r\n      scheme: basic\r\n  schemas:\r\n    Attributes:\r\n          type: array\r\n          description: \u003e-\r\n            Additional attribute set that was defined as 'body' attribute type when registering the monitor (a set of key / values)\r\n          items:\r\n            type: object\r\n            properties:\r\n              key:\r\n                type: string\r\n              value:\r\n                type: string\r\n            required:\r\n              - key\r\n              - value  \r\n   \r\n  \r\n  \r\n    MonitorEvents:\r\n      title: MonitorEvents\r\n      description: Monitor event list. This list will contain only one item when the batch-notify (see Monitor API) is not set.\r\n      type: object\r\n      properties:\r\n        monitorId:\r\n           $ref: '#/components/schemas/MonitorId'\r\n        attributes:   \r\n            $ref: '#/components/schemas/Attributes'\r\n       \r\n        events:\r\n              type: array\r\n              items:\r\n                $ref: '#/components/schemas/MonitorEvent'\r\n    \r\n    MonitorEvent:\r\n      title: MonitorEvent\r\n      type: object\r\n      properties:\r\n        fleetId : \r\n          description : Identifier of the fleet that raises the event. \r\n          type : string\r\n        vin:\r\n          description: Identifier of the vehicle that raises the event.\r\n          type: string  \r\n        eventDate:\r\n          description: The date on which the event was raised.\r\n          type: string\r\n          format: dateTime\r\n       # position:\r\n        #  $ref: '#/components/schemas/Position'\r\n       \r\n        values:\r\n          type: array\r\n          description: Values that caused the trigger. If subscribed monitor trigger is not a compound one then the array will contain only one item.\r\n          items:\r\n            type: object\r\n            description: Values pairs that caused the event.\r\n            properties:\r\n              data:\r\n                  type: string\r\n                  enum:\r\n                  - vehicle.alert\r\n                  - vehicle.odometer\r\n                  - vehicle.engines.running\r\n                  - vehicle.engines.thermic.oil.temp\r\n                  - vehicle.energy.electric.level\r\n                  - vehicle.energy.electric.autonomy\r\n                  - vehicle.energy.fuel.level\r\n                  - vehicle.energy.fuel.autonomy\r\n                  - vehicle.autonomy\r\n                  - vehicle.energy.charging.status\r\n                  - vehicle.energy.charging.plugged\r\n                  - vehicle.doorsState.lockedState\r\n                  - vehicle.doorsState.opening\r\n                  - vehicle.kinetic.moving\r\n                  - vehicle.kinetic.speed\r\n                  - vehicle.trip\r\n                  - vehicle.trip.start\r\n                  - vehicle.trip.stop\r\n                  - vehicle.maintenance.daysBeforeMaintenance\r\n                  - vehicle.maintenance.mileageBeforeMaintenance\r\n                  - vehicle.safety.beltWarning\r\n                  - environment.air.temp\r\n                  - privacy.state\r\n                  - vehicle.collision.side\r\n                  - vehicle.collision.severity\r\n                  - vehicle.safety.autoECallTriggering\r\n                  - vehicle.preconditioning.airConditioning\r\n                \r\n                  description: The monitored data (operand of a trigger).\r\n              value: \r\n                description: Values that caused the trigger. Could be a list of data values in case of 'includedIn' operation is used\r\n                type: object\r\n                properties:\r\n                      type:\r\n                        type: string\r\n                        enum: [string, obj.alert, obj.collision]\r\n                      body:\r\n                        type: object\r\n                        properties:\r\n                        \r\n                          literalValue:\r\n                            type: string\r\n                            description: A literal representation of the primitive data value. The client application should be aware of that and should convert it regarding the trigger data type.  \r\n                          objectValues:\r\n                            type: array \r\n                            items:\r\n                              type: object\r\n                              description: For this object schema definition (based on the type of field), refere to the API Spec definition.\r\n                    \r\n        extensions:\r\n          description: Defines the extra vehicle data as specified in the monitor extended eventparam file (see Monitor parameter object definition in the API Spec)\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              type:\r\n                type: string\r\n                description: Speficies the data type of body items. \r\n                enum: [vehicle.doorsState, vehicle.status, vehicle.maintenance,vehicle.position, vehicle.telemetry, vehicle.alerts, vehicle.collisions]\r\n              body:\r\n               \r\n                  description: \u003e\r\n                    The body of the extension is made up of one of the fields below. Each one is expressed as a generic object and the type is the same as the related one in [MPH API SPEC](https://developer.groupe-psa.io/assets/openapi/api-b2b-v3.yaml)  (without ```HAL links``` fields).                      \r\n                      |  Field | MPH API related data model type  |\r\n                    \r\n                    |value|description|Related model |\r\n                    |----------|:-------------|------:|\r\n                    |vehicle.doorsState|Latest know door state (timestamped) before the eventDate|DoorState|\r\n                    |vehicle.status|Latest know vehicle status (timestamped) before the eventDate|Status|\r\n                    |vehicle.maintenance|Latest know maintenance(timestamped) before the eventDate|Maintenance|\r\n                    |vehicle.position|Last vehicle position (timestamped) before the eventDate|Position|\r\n                    |vehicle.telemetry${.TelemetryEnum}|Latest known telemetry (timestamped) before the eventDate filtered with type|Telemetry\r\n                    |vehicle.alerts|List of active alerts at the eventDate|Alert|\r\n                    |vehicle.collisions|Latest collisions information before or at the eventDate|Collision|\r\n\r\n\r\n                   \r\n                  type: object\r\n                  properties:\r\n                    doorState:\r\n                      type: object\r\n                      description: Return the latest known doors status before or at the eventDate\r\n                    status:\r\n                      type: object\r\n                      description: Return the latest known status before or at the eventDate\r\n                    maintenance:\r\n                      type: object\r\n                      description: Return the latest known maintenance information before or at the eventDate\r\n                    position:\r\n                      type: object  \r\n                      description: Return the latest known position before or at the eventDate\r\n                    telemetry:\r\n                      type: object\r\n                      description: Return the latest known telemtry before or at the eventDate\r\n                    alerts:\r\n                      type: array\r\n                      description: Return all active alerts at the eventDate\r\n                      items:\r\n                        type: object\r\n                    collisions:\r\n                      type: object\r\n                      description: Return the latest collisions (Front/lateral/Rear) status and severity before or at the eventDate\r\n                  \r\n        \r\n        refresh:\r\n          description: |\r\n              Indicates whether the event is a refresh (reminder) one or not.\r\n              * ```false``` means entering the context of the trigger (1st time the trigger valued true). \r\n              * ```true``` means this is it a reminder event (already within trigger satisfied context).\r\n          type: boolean\r\n\r\n    \r\n    MonitorId:\r\n      type: string\r\n      description: The identifier of monitor that raised the event.  \r\n    RemoteActionId:\r\n      type: string\r\n      description: The unique remote action ID. This ID is returned when the remote action is posted and accepted.\r\n      \r\n    RemoteCallbackId:\r\n      type: string\r\n      description: Unique remote callback ID used to notify events. This Id refers to the remote callback created and selected to post this remote action in \"Connected Car B2B API\".\r\n      \r\n    RemoteEvents:\r\n      title: RemoteEvents\r\n      description: Remote event list. This list will contain only one item when the batch-notify (see Remote API) is not set.\r\n      type: object\r\n      properties:\r\n        callbackId:\r\n           $ref: '#/components/schemas/RemoteCallbackId'\r\n        attributes:   \r\n            $ref: '#/components/schemas/Attributes'\r\n       \r\n        events:\r\n              type: array\r\n              items:\r\n                $ref: '#/components/schemas/RemoteEvent'\r\n    RemoteType:\r\n      type: string    \r\n      enum: \r\n            - ThermalPreconditioning\r\n            - ElectricBatteryChargingRequest\r\n            - Horn\r\n            - Doors\r\n            - Lights\r\n            - Immobilization\r\n            - Stolen\r\n            - VehicleState\r\n            - ChargingState\r\n            - WakeUp\r\n            - Navigation\r\n    RemoteEventType:\r\n      description: | \r\n        The event type. See```status```for event sate.\r\n        * Pending event is related to intermediate state of the action before it is handled by the vehicle.\r\n        * Done event is related to a final state of the action when handled by the vehicle.\r\n         \r\n      type: string    \r\n      enum: \r\n            - Pending\r\n            - Done\r\n            \r\n    RemoteDoneEventStatus:\r\n      description: | \r\n        The reponse event status. \r\n         \r\n      type: string    \r\n      enum: \r\n            - Success\r\n            - AlreadyDone\r\n            - Failed\r\n            \r\n    RemotePendingEventStatus:\r\n      description: | \r\n        The processing event status. \r\n         \r\n      type: string    \r\n      enum: \r\n            - Accepted\r\n            - WakingUpVehicle\r\n            - CheckingVehicle\r\n            - SentToVehicle\r\n            - VehicleBatteryChargeTooLow\r\n            - TooManyWakeUpsOverMonth\r\n            \r\n    RemoteFailedEventStatus:\r\n      description: | \r\n        The failure cause for event with failed status. This field is filled only is failure state. \r\n         \r\n      type: string    \r\n      enum: \r\n            - GeneralError\r\n            - VehicleError\r\n            - WrongCommand\r\n            - VehicleConnectionTimeout\r\n            - MissingRights\r\n            - NotPossibleDueToVehicleBatteryLevel\r\n            - NotPossibleDueToVehiclePrivacyLevel\r\n            - TooManyWakeUpsOverMonth\r\n            - TooManyRequestInShortTime\r\n            - SameActionInProgress\r\n            - NotPossibleDueToVehicleStolenState\r\n            - VehicleInUse\r\n            - TooManyRequestSent \r\n            - DoorsOpen\r\n            - VehicleErrorOrCidInside\r\n            - CidInside\r\n            - ExternalChargingSystemError\r\n            - VehicleChargingSystemError\r\n            - VehicleIsNotLocked\r\n            - CanceledByDriver\r\n\r\n    RemoteEventFeedbackDetail:\r\n      description: | \r\n        Additionnal detail in case of success on some specific behavior :\r\n        \r\n        |Feature|Description|Behavior|\r\n        |----------|:-------------|------:|\r\n        |Lock Doors|Send a lock doors by force|NoCIDBlacklisted if lock is OK but IML not blacklisted, CIDBlacklisted is when the doors are locked and the IML is well blacklisted|\r\n\r\n        \r\n      type: string\r\n      enum:\r\n            - NoCIDBlacklisted\r\n            - CIDBlacklisted\r\n    \r\n    RemoteEventStatus:\r\n              type: object\r\n              properties:\r\n                type:   \r\n                  $ref: '#/components/schemas/RemoteEventType'\r\n                status:\r\n                  oneOf:\r\n                    - $ref: '#/components/schemas/RemoteDoneEventStatus'\r\n                    - $ref: '#/components/schemas/RemotePendingEventStatus'\r\n                failureCause:   \r\n                  $ref: '#/components/schemas/RemoteFailedEventStatus'\r\n                feedbackDetail:\r\n                  $ref: '#/components/schemas/RemoteEventFeedbackDetail'\r\n              required: [type,status]\r\n              \r\n    \r\n      \r\n    RemoteEvent:\r\n      title: RemoteEvent\r\n      type: object\r\n      properties:\r\n        remoteActionId:\r\n          $ref: '#/components/schemas/RemoteActionId'\r\n      \r\n        vin:\r\n          description: Identifier of the vehicle that raises the event.\r\n          type: string  \r\n        eventDate:\r\n          description: The date when the event was raised.\r\n          type: string\r\n          format: date-time\r\n        remoteType:\r\n          $ref: '#/components/schemas/RemoteType'\r\n        eventStatus:\r\n            $ref: '#/components/schemas/RemoteEventStatus'\r\n\r\n    xError:\r\n      type: object\r\n      description: Detailed error\r\n      properties:\r\n        code:\r\n          description: The application error code (do not confuse with http response code which is handled in http headed)\r\n          type: integer\r\n        debug:\r\n          description: To investigate potential mismatches (such as the soft version or component name..). \r\n          type: string\r\n        message:\r\n          description: A human-readable error message.\r\n          type: string\r\n      example:\r\n        code: 500123\r\n        debug: CMP_001234\r\n        message: Not able to process the post.\r\n        \r\n   \r\n\r\n  ########################### RESPONSES\r\n  \r\n  \r\n  responses:\r\n    PostErrorResponse:\r\n      description: Post event error\r\n      content:\r\n       application/json:\r\n        schema:\r\n          $ref: '#/components/schemas/xError'     \r\n          \r\n          \r\n          \r\n          ################### PARMS\r\n          \r\n          \r\n          \r\n  parameters:\r\n    headerAttribute:\r\n      name: \u003cheader-attribute-key\u003e \r\n      description: |\r\n         An attribute key/value as specified in the registered callback in additional attributes set as an HTTP header entry(_can also be used as an **Authorization** (Bearer authentication)).\r\n         \r\n         **Note**:  ```This parameter is repeated as many times as attributes typed as 'header' in the declared attribute-set when registring of the callback.```\r\n      in: header\r\n      required: true\r\n      schema:\r\n        type: string\r\n    queryAttribute:\r\n      name: \u003cquery-attribute-key\u003e \r\n      description: |\r\n         An attribute key/value as specified in the registered callback in additional attributes set as HTTP query parameter.\r\n         \r\n         **Note**:  ```This parameter is repeated as many times as attributes typed as 'query' in the declared attribute-set when registring of the callback.```\r\n      in: header\r\n      required: true\r\n      schema:\r\n        type: string\r\n        \r\n    tokenAuth:\r\n      name: authorization\r\n      description: \u003e-\r\n        HTTP token authentication (Bearer authentication) as part of .\r\n      in: header\r\n      required: true\r\n      schema:\r\n        type: string\r\n        pattern: Bearer (\\w|-|=)*\r\n",
			"canonicalURL": "/github.com/GroupePSA/groupepsa.github.io@362f9744774fd676bd99c6d3d1119683d9b4702e/-/blob/assets/openapi/api-b2b-webhook-template-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GroupePSA/groupepsa.github.io/blob/362f9744774fd676bd99c6d3d1119683d9b4702e/assets/openapi/api-b2b-webhook-template-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"headerAttribute\": at 1:428: invalid header name \"\u003cheader-attribute-key\u003e\""
}