{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "pdf.yaml",
			"size": 0,
			"path": "v1/pdf.yaml",
			"byteSize": 7590,
			"content": "openapi: 3.0.1\ninfo:\n  version: 1.0.0-beta\n  title: MediaWiki PDF API\n  description: Page PDF Render API\n  termsOfService: https://github.com/wikimedia/restbase#restbase\n  contact:\n    name: Services\n    email: services@lists.wikimedia.org\n    url: https://www.mediawiki.org/wiki/Services\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\npaths:\n  /pdf/{title}:\n    x-route-filters:\n      - path: ./lib/access_check_filter.js\n        options:\n          redirect_cache_control: '{{options.cache_control}}'\n      - type: default\n        name: ratelimit_route\n        options:\n          limits:\n            internal: 5\n            external: 1\n    get: \u0026pdf_get_title_spec\n      tags:\n        - Page content\n      summary: Get a page as PDF\n      description: |\n        Renders the page content as PDF. Format and type are optional parameters and\n        the default values are \"a4\" for format and \"desktop\" for type.\n\n        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The PDF render of an article\n          headers:\n            ETag:\n              description: |\n                Syntax: \"{revision}/{tid}\". Example: \"701384379/154d7bca-c264-11e5-8c2f-1b51b33b59fc\"\n              schema:\n                type: string\n          content:\n            application/pdf:\n              schema:\n                type: string\n        404:\n          description: Unknown page title\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n        503:\n          description: A response is unavailable because service queue is busy or full\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/problem'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-request-handler:\n        - get_latest_revision:\n            request:\n              method: get\n              uri: /{domain}/sys/page_revisions/page/{title}\n        - get_pdf_from_backend:\n            request:\n              method: get\n              # Hard-coded output options will be replaced later by extending\n              # the RESTBase endpoint with additional paramters. Defaults\n              # will be A4 and desktop if no parameters are provided.\n              uri: '{{options.uri}}/{{domain}}/v1/pdf/{title}/a4'\n            return:\n              status: 200\n              headers:\n                # Firefox supports filename*= syntax while Chrome respect\n                # filename=. Safari is stupid and understands neither.\n                content-disposition: 'attachment; {{filenameParameters(request.params.title)}}'\n                content-type: '{{get_pdf_from_backend.headers.content-type}}'\n                content-length: '{{get_pdf_from_backend.headers.content-length}}'\n                cache-control: '{{default(options.cache_control, \"s-maxage=600, max-age=600\")}}'\n                etag: '{{get_latest_revision.headers.etag}}'\n              body: '{{get_pdf_from_backend.body}}'\n      x-monitor: false # PDF generation is expensive and it's not stored, so don't run checker script\n\n  /pdf/{title}/{format}:\n    get:\n      \u003c\u003c: *pdf_get_title_spec\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: format\n          schema:\n            type: string\n            enum: ['a4', 'letter', 'legal']\n          required: true\n          description: PDF format\n      x-request-handler:\n        - get_latest_revision:\n            request:\n              method: get\n              uri: /{domain}/sys/page_revisions/page/{title}\n        - get_pdf_from_backend:\n            request:\n              method: get\n              # Hard-coded output options will be replaced later by extending\n              # the RESTBase endpoint with additional paramters. Defaults\n              # will be A4 and desktop if no parameters are provided.\n              uri: '{{options.uri}}/{{domain}}/v1/pdf/{title}/{format}'\n            return:\n              status: 200\n              headers:\n                # Firefox supports filename*= syntax while Chrome respect\n                # filename=. Safari is stupid and understands neither.\n                content-disposition: 'attachment; {{filenameParameters(request.params.title)}}'\n                content-type: '{{get_pdf_from_backend.headers.content-type}}'\n                content-length: '{{get_pdf_from_backend.headers.content-length}}'\n                cache-control: '{{default(options.cache_control, \"s-maxage=600, max-age=600\")}}'\n                etag: '{{get_latest_revision.headers.etag}}'\n              body: '{{get_pdf_from_backend.body}}'\n      x-monitor: false # PDF generation is expensive and it's not stored, so don't run checker script\n\n  /pdf/{title}/{format}/{type}:\n    get:\n      \u003c\u003c: *pdf_get_title_spec\n      parameters:\n        - name: title\n          in: path\n          description: 'Page title. Use underscores instead of spaces. Use percent-encoding. Example: `Main_Page`.'\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: format\n          schema:\n            type: string\n            enum: ['a4', 'letter', 'legal']\n          required: true\n          description: PDF format\n        - in: path\n          name: type\n          schema:\n            type: string\n            enum: ['mobile', 'desktop']\n            default: desktop\n          description: PDF type - `mobile` (optimized for reading on mobile devices) or `desktop` (regular PDF). `desktop` is the default render mode and it will used if param `type` is not passed\n      x-request-handler:\n        - get_latest_revision:\n            request:\n              method: get\n              uri: /{domain}/sys/page_revisions/page/{title}\n        - get_pdf_from_backend:\n            request:\n              method: get\n              # Hard-coded output options will be replaced later by extending\n              # the RESTBase endpoint with additional paramters. Defaults\n              # will be A4 and desktop if no parameters are provided.\n              uri: '{{options.uri}}/{{domain}}/v1/pdf/{title}/{format}/{type}'\n            return:\n              status: 200\n              headers:\n                # Firefox supports filename*= syntax while Chrome respect\n                # filename=. Safari is stupid and understands neither.\n                content-disposition: 'attachment; {{filenameParameters(request.params.title)}}'\n                content-type: '{{get_pdf_from_backend.headers.content-type}}'\n                content-length: '{{get_pdf_from_backend.headers.content-length}}'\n                cache-control: '{{default(options.cache_control, \"s-maxage=600, max-age=600\")}}'\n                etag: '{{get_latest_revision.headers.etag}}'\n              body: '{{get_pdf_from_backend.body}}'\n      x-monitor: false # PDF generation is expensive and it's not stored, so don't run checker script\n",
			"canonicalURL": "/github.com/wikimedia/restbase@c45fefc52de715f3b0524662bfbc4240d8f90553/-/blob/v1/pdf.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wikimedia/restbase/blob/c45fefc52de715f3b0524662bfbc4240d8f90553/v1/pdf.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/pdf/{title}\": get: responses: 404: content: application/problem+json: schema: parse schema: at 1:1213: find schema: resolve: can't find value for \"components/schemas/problem\""
}