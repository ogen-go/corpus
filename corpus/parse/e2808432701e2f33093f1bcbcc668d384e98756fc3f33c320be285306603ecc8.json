{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bic-org/Facility-Code"
		},
		"file": {
			"name": "facilityCode.yml",
			"size": 0,
			"path": "api/facilityCode.yml",
			"byteSize": 7641,
			"content": "openapi: 3.0.1\ninfo:\n  title: Facility Codes\n  description: \u003e-\n    A common API to provide the details of a facility used in International\n    trade comprising of the BIC Container Facilities and SMDG Terminal Codes,\n    these codes are managed under the ownership of each organisation\n    independently but provided under a single API to industry. Bureau\n    International des Containers (BIC) are responsible for providing the inland\n    container facilities within a country, or location. SMDG are responsible for\n    providing the terminals that container vessels call at within a country or\n    location. Both codes are an extension of the UN/LOCODE designed to give\n    granularity of facilities contained within the area identified by the\n    UN/LOCODE.  Both the BIC Facility Codes and the SMDG Terminal Codes are child codes of the UN/LOCODE, For further information and to request an API key visit the terms of service website for details.\n  termsOfService: https://www.bic-code.org/locodes/\n  version: 1.0.0\n  contact: \n    name: BIC API Support\n    email: bic@bic-code.org\n    url: https://www.bic-code.org/locodes/\nexternalDocs:\n  description: GitHub Documentation\n  url: https://github.com/bic-org/Facility-Code/\nservers:\n  - url: 'https://a0c81nimq5.execute-api.eu-west-1.amazonaws.com/{basePath}'\n    variables:\n      basePath:\n        default: BETA\npaths:\n  '/facilities/byCountry/{countryCode}/{codeProvider}':\n    get:\n      parameters:\n        - name: countryCode\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/ISO3166Code'\n        - name: codeProvider\n          in: path\n          required: true\n          schema:\n            type: string\n            enum: \n              - BIC\n              - SMDG\n      responses:\n        '200':\n          description: 200 response\n          content: {}\n      security:\n        - api_key: []\n  '/facilities/byName/{countryCode}':\n    get:\n      parameters:\n        - name: countryCode\n          in: path\n          required: true\n          schema:\n            $ref: '#/components/schemas/ISO3166Code'\n        - name: name\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: codeProvider\n          in: query\n          schema:\n            type: string\n            enum: \n              - BIC\n              - SMDG\n      responses:\n        '200':\n          description: 200 response\n          content: {}\n      security:\n        - api_key: []\n  /facilities:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Facility'\n        required: true\n      responses:\n        '200':\n          description: 200 response\n          content: {}\n      security:\n        - AuthRequest: []\n        - api_key: []\n  '/facilities/byLocation/{unLocode}/{codeProvider}':\n    get:\n      parameters:\n        - name: unLocode\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: codeProvider\n          in: path\n          required: true\n          schema:\n            type: string\n            enum: \n              - BIC\n              - SMDG\n      responses:\n        '200':\n          description: 200 response\n          content: {}\n      security:\n        - api_key: []\n  '/facilities/{code}':\n    get:\n      parameters:\n        - name: code\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: codeProvider\n          in: query\n          schema:\n            type: string\n            enum: \n              - BIC\n              - SMDG\n      responses:\n        '200':\n          description: 200 response\n          content: {}\n      security:\n        - api_key: []\ncomponents:\n  schemas:\n    Facility:\n      title: Facility Schema\n      required:\n        - codeProvider\n        - countryCode\n        - facility\n        - unLocode\n      type: object\n      properties:\n        code:\n          title: Facility Code\n          type: string\n          description: \"The unique code used for identifying the specific facility determined by the code list provider, this is the code which is used as a unique identifier in messages, for container facilities it should adhere to ISO 9897 standard.\"\n          minLength: 9\n          maxLength: 9\n        codeProvider:\n          title: Code List Provider\n          type: string\n          description: 'The organization managing the code list, either BIC or SMDG.'\n          enum:\n            - BIC\n            - SMDG\n        codeListProviderCode:\n          title: Code List Provider Code\n          type: string\n          description: \"The code provided for the Facility by the code list provider. This code may not need be unique on its own, you should ALWAYS use the code as the unique identifier for a facility.\"\n        unLocode:\n          title: UN/LOCODE\n          maxLength: 5\n          minLength: 5\n          type: string\n          description: \u003e-\n            The UN Location Code identifies a location in the sense of a city/a\n            town/a village, being the smaller administrative area existing as\n            defined by the competent national authority in each country.\n        countryCode:\n          $ref: '#/components/schemas/ISO3166Code'\n        facility:\n          title: Facility Detail\n          required:\n            - name\n            - address\n          type: object\n          properties:\n            name:\n              minLength: 1\n              maxLength: 70\n              type: string\n              description: The name of the facility.\n            address: \n               $ref: '#/components/schemas/Address'\n            formattedAddress:\n              type: string\n              description: 'The Address in a single text field, formatted in the manner of a postal address'\n              maxLength: 255\n            geographicalCoordinate:\n              $ref: '#/components/schemas/GeographicalCoordinate'\n        operator:\n          required:\n            - name\n          type: object\n          properties:\n            name:\n              type: string\n              description: 'The operating company of the facility, this maybe a group company for example, or different to the facility name'\n        remarks:\n          type: string\n          description: 'Any remarks that are specific to the facility being returned provided by the code list provider.'\n          maxLength: 500\n    Address:\n      type: object\n      properties:\n        street:\n          type: string\n          minLength: 1\n          maxLength: 70\n        city:\n          type: string\n          minLength: 1\n          maxLength: 35\n        postCode:\n          type: string\n          minLength: 1\n          maxLength: 9\n        country:\n          type: string\n          minLength: 2\n          maxLength: 2\n      required:\n        - street\n        - city\n        - postCode\n        - country  \n    GeographicalCoordinate:\n      description: A geographic location identifier\n      required:\n        - latitude\n        - longitude\n      type: object\n      properties:\n        latitude:\n          type: string\n          format: float\n          example: \"35.7795897\"\n        longitude:\n          type: string\n          format: float\n          example: \"-78.6381787\"\n    ISO3166Code:\n      $ref: \u003e-\n        https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\n\n  securitySchemes:\n    AuthRequest:\n      type: apiKey\n      name: Authorization\n      in: header\n      x-amazon-apigateway-authtype: custom\n    api_key:\n      type: apiKey\n      name: x-api-key\n      in: header\n"
		}
	},
	"Error": "parse: parse spec: paths: /facilities/byCountry/{countryCode}/{codeProvider}: get: operation \"\": parameters: parse parameter \"countryCode\": schema: parse schema: reference \"#/components/schemas/ISO3166Code\": parse schema: reference \"https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\": resolve reference \"https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\": invalid schema reference \"https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\""
}