{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opticdev/optic"
		},
		"file": {
			"name": "0002.20-Sep-2021.b9febabad5b30b9f40e661ab288538976181c191.spec.yaml",
			"size": 0,
			"path": "projects/openapi-utilities/inputs/openapi3/private/snyk/org-id-versions/all-dates/0002.20-Sep-2021.b9febabad5b30b9f40e661ab288538976181c191.spec.yaml",
			"byteSize": 5177,
			"content": "openapi: 3.0.3\nx-snyk-api-stability: beta\ninfo:\n  title: Registry\n  version: 3.0.0\nservers:\n  - url: /api/v3\n    description: Snyk Registry\ntags:\n  - name: Projects\n    description: Projects scanned by Snyk.\npaths:\n  /orgs/{org_id}/projects:\n    get:\n      summary: List Projects\n      description: \u003e\n        Get a list of an organization's Projects with pagination and filtering\n        options.\n      operationId: getOrgsProjects\n      tags:\n        - Projects\n      parameters:\n        - { $ref: '../../schemas/parameters/version.yaml#/Version' }\n        - { $ref: '../../schemas/parameters/pagination.yaml#/parameters/StartingAfter' }\n        - { $ref: '../../schemas/parameters/pagination.yaml#/parameters/EndingBefore' }\n        - { $ref: '../../schemas/parameters/pagination.yaml#/parameters/Limit' }\n        - name: org_id\n          in: path\n          required: true\n          description: The id of the org to return a list of projects\n          schema:\n            type: string\n        - in: query\n          name: name\n          description: Return projects that prefix-match the provided name\n          schema:\n            type: string\n        - in: query\n          name: origin\n          description: Return projects that match the provided origin\n          schema:\n            type: string\n        - in: query\n          description: Return projects that match the provided type\n          name: type\n          schema:\n            type: string\n        - in: query\n          name: status\n          description: Return projects that match the provided status\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n        - in: query\n          name: 'tags'\n          description: Return projects that match all provided tags\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              pattern: ^[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+$\n        - in: query\n          name: 'businessCriticality'\n          description: Return projects that have at least 1 option\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - critical\n                - high\n                - medium\n                - low\n        - in: query\n          name: 'environment'\n          description: Return projects that have at least 1 option\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - frontend\n                - backend\n                - internal\n                - external\n                - mobile\n                - saas\n                - onprem\n                - hosted\n                - distributed\n        - in: query\n          name: 'lifecycle'\n          description: Return projects that have at least 1 option\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - production\n                - development\n                - sandbox\n        - in: query\n          description: Return projects that belong to the provided target\n          name: targetId\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '400': { $ref: '../../schemas/responses/400.yaml#/400' }\n        '401': { $ref: '../../schemas/responses/401.yaml#/401' }\n        '404': { $ref: '../../schemas/responses/404.yaml#/404' }\n        '500': { $ref: '../../schemas/responses/500.yaml#/500' }\n        '200':\n          description: 'A list of projects is returned for the targeted org'\n          headers:\n            snyk-version-requested: { $ref: '../../schemas/headers/headers.yaml#/VersionRequestedResponseHeader' }\n            snyk-version-served: { $ref: '../../schemas/headers/headers.yaml#/VersionServedResponseHeader' }\n            snyk-request-id: { $ref: '../../schemas/headers/headers.yaml#/RequestIdResponseHeader' }\n            snyk-version-lifecycle-stage: { $ref: '../../schemas/headers/headers.yaml#/VersionStageResponseHeader' }\n            deprecation: { $ref: '../../schemas/headers/headers.yaml#/DeprecationHeader' }\n            sunset: { $ref: '../../schemas/headers/headers.yaml#/SunsetHeader' }\n            x-envoy-to-remove-normalized-request-path: { $ref: '../../schemas/headers/headers.yaml#/InternalGlooNormalizedPathHeader' }\n            x-envoy-to-remove-org-public-id: { $ref: '../../schemas/headers/headers.yaml#/InternalGlooOrgIdHeader' }\n          content:\n            application/vnd.api+json:\n              schema:\n                type: object\n                properties:\n                  jsonapi: { $ref: '../../schemas/common.yaml#/JsonApi' }\n                  data:\n                    type: array\n                    items: { $ref: '../../schemas/models/project.yaml#/Project' }\n                  links: { $ref: '../../schemas/common.yaml#/Links' }\n                required: ['jsonapi', 'data', 'links' ]\n                additionalProperties: false\n",
			"canonicalURL": "/github.com/opticdev/optic@e49dec30b5d76f0f8fe627f2bf2b5fa25392e2d9/-/blob/projects/openapi-utilities/inputs/openapi3/private/snyk/org-id-versions/all-dates/0002.20-Sep-2021.b9febabad5b30b9f40e661ab288538976181c191.spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/opticdev/optic/blob/e49dec30b5d76f0f8fe627f2bf2b5fa25392e2d9/projects/openapi-utilities/inputs/openapi3/private/snyk/org-id-versions/all-dates/0002.20-Sep-2021.b9febabad5b30b9f40e661ab288538976181c191.spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/orgs/{org_id}/projects\": get: operation \"getOrgsProjects\": parameters: parse parameter \"\": at 1:261: external \"../../schemas/parameters/version.yaml\": get: file: local file reference is not allowed"
}