{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cdimascio/express-openapi-validator"
		},
		"file": {
			"name": "serdes.yaml",
			"size": 0,
			"path": "test/resources/serdes.yaml",
			"byteSize": 1868,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: \"Test for allOf\"\n  version: \"1\"\nservers:\n  - url: /v1/\npaths:\n  /users/{id}:\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            $ref: \"#/components/schemas/ObjectId\"\n        - name: baddateresponse\n          in: query\n          schema:\n            type: string\n            enum: ['functionNotExists', 'functionBadFormat']\n        - name: shortOrLong\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/ShortOrLong\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n  /users:\n    post:\n      requestBody:\n        content :\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\ncomponents:\n  schemas:\n    ObjectId:\n      type: string\n      format: mongo-objectid\n      pattern: '^[0-9a-fA-F]{24}$'\n    Date:\n      type: string\n      format: date\n    DateTime:\n      type: string\n      format: date-time\n    ShortOrLong:\n      type: string\n      format: mongo-objectid\n      anyOf:\n        - maxLength: 2\n        - minLength: 4\n    StringList:\n      type: string\n      format: string-list\n    User:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ObjectId\"\n        tags:\n          $ref: \"#/components/schemas/StringList\"\n        creationDateTime:\n          $ref: \"#/components/schemas/DateTime\"\n        creationDate:\n          $ref: \"#/components/schemas/Date\"\n        shortOrLong:\n          $ref: \"#/components/schemas/ShortOrLong\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /users/{id}: get: parameters: parse parameter \"shortOrLong\": invalid schema:style:explode combination"
}