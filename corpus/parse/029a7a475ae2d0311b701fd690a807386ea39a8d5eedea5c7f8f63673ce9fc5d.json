{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/snyk/sweater-comb"
		},
		"file": {
			"name": "002-fail-tenancy.yaml",
			"size": 0,
			"path": "end-end-tests/api-standards/resources/thing/2021-11-10/002-fail-tenancy.yaml",
			"byteSize": 14513,
			"content": "# 002-ok-add-operation.yaml\n# Adding a new operation to an existing release is also allowed.\nopenapi: 3.0.3\nx-snyk-api-stability: experimental\ninfo:\n  title: v3\n  version: 3.0.0\n  description: |-\n    This spec attempts to introduce a /thing endpoint which does not conform to\n    our API guidelines.\nservers:\n  - url: https://api.snyk.io/v3\n    description: Public Snyk API\ntags:\n  - name: Thing\n    description: Short description of what Thing represents\npaths:\n  /thing:\n    post:\n      summary: Create a new universal thing\n      description: Create a new universal thing\n      operationId: createUniversalThing\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: \"../../../../../components/parameters/pagination.yaml#/parameters/StartingAfter\" }\n        - { $ref: \"../../../../../components/parameters/pagination.yaml#/parameters/EndingBefore\" }\n        - { $ref: \"../../../../../components/parameters/pagination.yaml#/parameters/Limit\" }\n      responses:\n        '201':\n          description: Created thing successfully\n          headers:\n            snyk-version-requested: { $ref: '../../../../../components/headers/headers.yaml#/VersionRequestedResponseHeader' }\n            snyk-version-served: { $ref: '../../../../../components/headers/headers.yaml#/VersionServedResponseHeader' }\n            snyk-request-id: { $ref: '../../../../../components/headers/headers.yaml#/RequestIdResponseHeader' }\n            snyk-version-lifecycle-stage: { $ref: '../../../../../components/headers/headers.yaml#/VersionStageResponseHeader' }\n            deprecation: { $ref: '../../../../../components/headers/headers.yaml#/DeprecationHeader' }\n            sunset: { $ref: '../../../../../components/headers/headers.yaml#/SunsetHeader' }\n            location: { $ref: '../../../../../components/headers/headers.yaml#/LocationHeader' }\n          content:\n            application/vnd.api+json:\n              schema: { $ref: '#/components/schemas/ThingResourceResponse' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '409': { $ref: '../../../../../components/responses/409.yaml#/409' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\n  /orgs/{org_id}/thing:\n    post:\n      summary: Create a new thing\n      description: Create a new thing\n      operationId: createThing\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: '#/components/parameters/OrgId' }\n      responses:\n        '201':\n          description: Created thing successfully\n          headers:\n            snyk-version-requested: { $ref: '../../../../../components/headers/headers.yaml#/VersionRequestedResponseHeader' }\n            snyk-version-served: { $ref: '../../../../../components/headers/headers.yaml#/VersionServedResponseHeader' }\n            snyk-request-id: { $ref: '../../../../../components/headers/headers.yaml#/RequestIdResponseHeader' }\n            snyk-version-lifecycle-stage: { $ref: '../../../../../components/headers/headers.yaml#/VersionStageResponseHeader' }\n            deprecation: { $ref: '../../../../../components/headers/headers.yaml#/DeprecationHeader' }\n            sunset: { $ref: '../../../../../components/headers/headers.yaml#/SunsetHeader' }\n            location: { $ref: '../../../../../components/headers/headers.yaml#/LocationHeader' }\n          content:\n            application/vnd.api+json:\n              schema: { $ref: '#/components/schemas/ThingResourceResponse' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '409': { $ref: '../../../../../components/responses/409.yaml#/409' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\n    get:\n      summary: List instances of thing\n      description: List instances of thing\n      operationId: listThing\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: '#/components/parameters/OrgId' }\n        - { $ref: \"../../../../../components/parameters/pagination.yaml#/parameters/StartingAfter\" }\n        - { $ref: \"../../../../../components/parameters/pagination.yaml#/parameters/EndingBefore\" }\n        - { $ref: \"../../../../../components/parameters/pagination.yaml#/parameters/Limit\" }\n      responses:\n        '200':\n          description: Returns a list of thing instances\n          headers:\n            snyk-version-requested: { $ref: '../../../../../components/headers/headers.yaml#/VersionRequestedResponseHeader' }\n            snyk-version-served: { $ref: '../../../../../components/headers/headers.yaml#/VersionServedResponseHeader' }\n            snyk-request-id: { $ref: '../../../../../components/headers/headers.yaml#/RequestIdResponseHeader' }\n            snyk-version-lifecycle-stage: { $ref: '../../../../../components/headers/headers.yaml#/VersionStageResponseHeader' }\n            deprecation: { $ref: '../../../../../components/headers/headers.yaml#/DeprecationHeader' }\n            sunset: { $ref: '../../../../../components/headers/headers.yaml#/SunsetHeader' }\n          content:\n            application/vnd.api+json:\n              schema: { $ref: '#/components/schemas/ThingCollectionResponse' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\n    delete:\n      summary: Bulk delete a collection of matching things\n      description: Bulk delete a collection of matching things\n      operationId: deleteMatchingThings\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: '#/components/parameters/OrgId' }\n        - in: query\n          description: Thing IDs to be deleted\n          schema:\n            type: array\n            items:\n              type: string\n          name: thing_ids\n          required: true\n      responses:\n        '204': { $ref: '../../../../../components/responses/204.yaml#/204' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '409': { $ref: '../../../../../components/responses/409.yaml#/409' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\n  /orgs/{org_id}/thing/{thing_id}:\n    get:\n      summary: Get an instance of thing\n      description: Get an instance of thing\n      operationId: getThing\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: '#/components/parameters/OrgId' }\n        - { $ref: '#/components/parameters/ThingId' }\n      responses:\n        '200':\n          description: Returns an instance of thing\n          headers:\n            snyk-version-requested: { $ref: '../../../../../components/headers/headers.yaml#/VersionRequestedResponseHeader' }\n            snyk-version-served: { $ref: '../../../../../components/headers/headers.yaml#/VersionServedResponseHeader' }\n            snyk-request-id: { $ref: '../../../../../components/headers/headers.yaml#/RequestIdResponseHeader' }\n            snyk-version-lifecycle-stage: { $ref: '../../../../../components/headers/headers.yaml#/VersionStageResponseHeader' }\n            deprecation: { $ref: '../../../../../components/headers/headers.yaml#/DeprecationHeader' }\n            sunset: { $ref: '../../../../../components/headers/headers.yaml#/SunsetHeader' }\n          content:\n            application/vnd.api+json:\n              schema: { $ref: '#/components/schemas/ThingResourceResponse' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\n    patch:\n      summary: Update an instance of thing\n      description: Update an instance of thing\n      operationId: updateThing\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: '#/components/parameters/OrgId' }\n        - { $ref: '#/components/parameters/ThingId' }\n      responses:\n        '200':\n          description: Instance of thing is updated.\n          headers:\n            snyk-version-requested: { $ref: '../../../../../components/headers/headers.yaml#/VersionRequestedResponseHeader' }\n            snyk-version-served: { $ref: '../../../../../components/headers/headers.yaml#/VersionServedResponseHeader' }\n            snyk-request-id: { $ref: '../../../../../components/headers/headers.yaml#/RequestIdResponseHeader' }\n            snyk-version-lifecycle-stage: { $ref: '../../../../../components/headers/headers.yaml#/VersionStageResponseHeader' }\n            deprecation: { $ref: '../../../../../components/headers/headers.yaml#/DeprecationHeader' }\n            sunset: { $ref: '../../../../../components/headers/headers.yaml#/SunsetHeader' }\n          content:\n            application/vnd.api+json:\n              schema: { $ref: '#/components/schemas/ThingResourceResponse' }\n        '204': { $ref: '../../../../../components/responses/204.yaml#/204' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '409': { $ref: '../../../../../components/responses/409.yaml#/409' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\n    delete:\n      summary: Delete an instance of thing\n      description: Delete an instance of thing\n      operationId: deleteThing\n      tags:\n        - Thing\n      parameters:\n        - { $ref: '../../../../../components/parameters/version.yaml#/Version' }\n        - { $ref: '#/components/parameters/OrgId' }\n        - { $ref: '#/components/parameters/ThingId' }\n      responses:\n        '204': { $ref: '../../../../../components/responses/204.yaml#/204' }\n        '400': { $ref: '../../../../../components/responses/400.yaml#/400' }\n        '401': { $ref: '../../../../../components/responses/401.yaml#/401' }\n        '403': { $ref: '../../../../../components/responses/403.yaml#/403' }\n        '404': { $ref: '../../../../../components/responses/404.yaml#/404' }\n        '409': { $ref: '../../../../../components/responses/409.yaml#/409' }\n        '500': { $ref: '../../../../../components/responses/500.yaml#/500' }\ncomponents:\n  parameters:\n    OrgId:\n      name: org_id\n      in: path\n      required: true\n      description: Org ID\n      schema:\n        type: string\n        format: uuid\n    ThingId:\n      name: thing_id\n      in: path\n      required: true\n      description: Unique identifier for thing instances\n      schema:\n        type: string\n        format: uuid\n  schemas:\n    ThingResourceResponse:\n      type: object\n      description: Response containing a single thing resource object\n      properties:\n        jsonapi: { $ref: '../../../../../components/common.yaml#/JsonApi' }\n        data: { $ref: '#/components/schemas/ThingResource' }\n        links: { $ref: '../../../../../components/common.yaml#/SelfLink' }\n\n    ThingCollectionResponse:\n      type: object\n      description: Response containing a collection of thing resource objects\n      properties:\n        jsonapi: { $ref: '../../../../../components/common.yaml#/JsonApi' }\n        data: { $ref: '#/components/schemas/ThingCollection' }\n        links: { $ref: '../../../../../components/common.yaml#/PaginatedLinks' }\n\n    ThingResource:\n      type: object\n      description: thing resource object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: d5b640e5-d88c-4c17-9bf0-93597b7a1ce2\n        type: { $ref: '../../../../../components/types.yaml#/Types' }\n        attributes: { $ref: '#/components/schemas/ThingAttributes' }\n        relationships: { $ref: '#/components/schemas/ThingRelationships' }\n      additionalProperties: false\n\n    ThingRelationships:\n      type: object\n      properties:\n        example: { $ref: '../../../../../components/common.yaml#/Relationship' }\n      additionalProperties: false\n\n    ThingCollection:\n      type: array\n      items: { $ref: '#/components/schemas/ThingResource' }\n\n    ThingAttributes:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of this instance of thing.\n          example: thing\n        created:\n          type: string\n          description: Timestamp when this instance of thing was created.\n          format: date-time\n          example: '2021-10-05T13:23:17Z'\n        updated:\n          type: string\n          description: Timestamp when this instance of thing was last updated.\n          format: date-time\n          example: '2021-10-05T13:25:29Z'\n        description:\n          type: string\n          description: User-friendly description of this instance of thing.\n          example: \"This is a thing named thing.\"\n        strangeness:\n          type: number\n          description: The amount of strangeness this thing adds or removes from the situation.\n          example: 42\n      additionalProperties: false\n"
		}
	},
	"Error": "parse: parse spec: paths: /thing: post: operation \"createUniversalThing\": parameters: parse parameter \"\": resolve \"../../../../../components/parameters/version.yaml#/Version\" reference: invalid parameter reference: \"../../../../../components/parameters/version.yaml#/Version\""
}