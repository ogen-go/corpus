{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ikuchmin/jmix-microservice"
		},
		"file": {
			"name": "department-service-api.yaml",
			"size": 0,
			"path": "department-service/department-service-api/config/department-service-api.yaml",
			"byteSize": 4407,
			"content": "openapi: 3.0.0\ninfo:\n  title: Department Service API\n  description: API for Department\n  version: 1.0.0\n\npaths:\n  /rest/department/:\n    get:\n      summary: Find all Departments\n      operationId: findAll\n      tags:\n        - department\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n    post:\n      summary: Add Department\n      operationId: create\n      tags:\n        - department\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DepartmentDto'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartmentDto'\n        '201':\n          description: Created\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /rest/department/organization/{organizationId}:\n    get:\n      summary: Find Department by Organization\n      operationId: findByOrganization\n      tags:\n        - department\n      parameters:\n        - name: organizationId\n          in: path\n          description: Organization Id\n          required: true\n          schema:\n            type : integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /rest/department/organization/{organizationId}/with-employees:\n    get:\n      summary: Find Department by Organization with employees\n      operationId: findByOrganizationWithEmployees\n      tags:\n        - department\n      parameters:\n        - name: organizationId\n          in: path\n          description: Organization Id\n          required: true\n          schema:\n            type : integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n  /rest/department/{id}:\n    get:\n      summary: Find Department by Id\n      operationId: findById\n      tags:\n        - department\n      parameters:\n        - name: id\n          in: path\n          description: id\n          required: true\n          schema:\n            type : integer\n            format: int64\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DepartmentDto'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\ncomponents:\n  securitySchemes:\n    BearerAuth: # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    DepartmentDto:\n      type: object\n      properties:\n        employees:\n          type: array\n          items:\n            $ref: '#/definitions/EmployeeDto'\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        organizationId:\n          type: integer\n          format: int64\n    EmployeeDto:\n      type: object\n      properties:\n        age:\n          type: integer\n          format: int32\n        departmentId:\n          type: integer\n          format: int64\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        organizationId:\n          type: integer\n          format: int64\n        position:\n          type: string\nsecurity:\n  - BearerAuth: []",
			"canonicalURL": "/github.com/ikuchmin/jmix-microservice@90b9662a2369660d1561c20a4e16c87e2ac2a1f4/-/blob/department-service/department-service-api/config/department-service-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ikuchmin/jmix-microservice/blob/90b9662a2369660d1561c20a4e16c87e2ac2a1f4/department-service/department-service-api/config/department-service-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"DepartmentDto\": parse schema: property \"employees\": at 1:70: parse schema: item: at 1:79: parse schema: resolve \"#/definitions/EmployeeDto\": find schema: resolve \"#/definitions/EmployeeDto\": can't find value for \"definitions/EmployeeDto\""
}