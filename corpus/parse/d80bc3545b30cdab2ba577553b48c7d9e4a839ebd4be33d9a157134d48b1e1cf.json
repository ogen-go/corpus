{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/pan.dev"
		},
		"file": {
			"name": "NetworkConstructs.yaml",
			"size": 0,
			"path": "static/sase/spec/sdwan/legacy/NetworkConstructs.yaml",
			"byteSize": 143840,
			"content": "components:\n  schemas:\n    Aggregate:\n      properties:\n        field: {description: Field, type: string}\n        operator:\n          description: Operator\n          enum: [max, count, min, avg, sum]\n          type: string\n    BulkResponse:\n      properties:\n        count: {format: int32, type: integer}\n        id: {type: string}\n        type: {type: string}\n    DHCPRelay:\n      properties:\n        enabled: {description: Enabled, type: boolean}\n        option_82: {$ref: '#/components/schemas/DHCPRelayOption82', description: 'Option_82:\n            Valid '}\n        server_ips:\n          description: 'Server Ips: ListIPAddress(bcast = DENY, listMaxSize = 0, error\n            = INTERFACE_CONFIG_INVALID_DHCP_RELAY_LIST: DHCP Servers IP specified\n            in the list are invalid, required = true, type = IP) Size(max = 16, error\n            = INTERFACE_CONFIG_DHCP_RELAY_LIST_EXCEEDS_LIMIT: DHCP Servers specified\n            in the list exceeds maximum limit, min = 0) '\n          items: {description: Server Ips, type: string}\n          type: array\n        source_interface: {description: Source Interface, type: string}\n    DHCPRelayOption82:\n      properties:\n        circuit_id: {description: 'Circuit Id: Size(max = 255, error = DHCPRELAY_CIRCUIT_ID_EXCEEDS_LIMIT:\n            Option 82 Circuid ID exceeds maximum length, min = 0) ', type: string}\n        enabled: {description: Enabled, type: boolean}\n        reforwarding_policy:\n          description: 'Reforwarding Policy: ValidateEnum(enumClass = classOf[DHCPRelayReforwardingPolicy],\n            error = INVALID_DHCP_RELAY_REFWDING_POLICY: Option 82 invalid reforwarding\n            policy, nullAllowed = false) '\n          enum: [REPLACE, KEEP, APPEND, DROP]\n          type: string\n        remote_id: {description: 'Remote Id: Size(max = 255, error = DHCPRELAY_REMOTE_ID_EXCEEDS_LIMIT:\n            Option 82 Remote ID exceeds maximum length, min = 0) ', type: string}\n      required: [reforwarding_policy]\n    DHCPServer:\n      properties:\n        domain_name: {description: Domain Name, type: string}\n        domain_name_servers:\n          description: Domain Name Servers\n          items: {description: Domain Name Servers, type: string}\n          type: array\n        ip_address_pool:\n          description: Ip Address Pool\n          items: {$ref: '#/components/schemas/IPAddressPool'}\n          type: array\n        lease_expiry_time: {description: Lease Expiry Time, type: integer}\n        lease_renew_time: {description: Lease Renew Time, type: integer}\n    ESPGroup:\n      properties:\n        force_encapsulation: {description: Force Encapsulation, type: boolean}\n        lifetime: {description: 'Lifetime: Range(max = 72L, error = IPSECCONFIG_ESPGROUP_INVALID_LIFETIME:\n            Invalid esp lifetime.Should be between 1-72 hours., min = 1L) ', format: int32,\n          type: integer}\n        mode:\n          description: 'Mode: ValidateEnum(enumClass = classOf[ESPTunnelMode], error\n            = IPSECCONFIG_INVALID_ESPTUNNEL_MODE: Invalid esp tunnel mode.Allowed\n            value is tunnel., nullAllowed = false) '\n          enum: [TUNNEL, TRANSPORT]\n          type: string\n        proposals:\n          description: 'Proposals: Required(error = IPSECCONFIG_PROPOSALS_REQUIRED:\n            Proposal cannot be null.) Size(max = 8, error = IPSECCONFIG_INVALID_PROPOSALS_LIST_LEN:\n            Invalid proposals list length.Should be between 1-8., min = 1) Valid '\n          items: {$ref: '#/components/schemas/Proposals'}\n          type: array\n      required: [proposals, mode]\n    Error:\n      properties:\n        _error:\n          items: {$ref: '#/components/schemas/ErrorResponse'}\n          type: array\n    ErrorResponse:\n      properties:\n        code: {type: string}\n        message: {type: string}\n    IKEGroup:\n      properties:\n        aggressive: {description: Aggressive, type: boolean}\n        key_exchange:\n          description: 'Key Exchange: ValidateEnum(enumClass = classOf[IKEKeyExchange],\n            error = IPSECCONFIG_INVALID_IKEKEY_EXCHANGE: Invalid ike key algorith.Should\n            be either ikev1 or ikev2., nullAllowed = false) '\n          enum: [IKEV1, IKEV2]\n          type: string\n        lifetime: {description: 'Lifetime: Range(max = 72L, error = IPSECCONFIG_INVALID_IKE_LIFETIME:\n            Invalid ike lifetime.Should be between 1-72 hours., min = 1L) ', format: int32,\n          type: integer}\n        port: {description: 'Port: Range(max = 65535L, error = IPSECCONFIG_INVALID_IKE_PORT_RANGE:\n            Invalid ike port range.Should be between 1-65535., min = 1L) ', format: int32,\n          type: integer}\n        proposals:\n          description: 'Proposals: Required(error = IPSECCONFIG_PROPOSALS_REQUIRED:\n            Proposal cannot be null.) Size(max = 8, error = IPSECCONFIG_INVALID_PROPOSALS_LIST_LEN:\n            Invalid proposals list length.Should be between 1-8., min = 1) Valid '\n          items: {$ref: '#/components/schemas/Proposals'}\n          type: array\n        reauth: {description: Reauth, type: boolean}\n      required: [proposals, key_exchange]\n    IKEV1Params:\n      properties:\n        xauth_id: {description: Xauth Id, type: string}\n        xauth_secret: {description: 'Xauth Secret: Length(max = 128, error = IPSECCONFIG_INVALID_XAUTH_SECRET_LEN:\n            Invalid extended authentication secret length.Should be between 4-128.,\n            min = 4) ', type: string}\n        xauth_secret_encrypted: {description: 'Xauth Secret Encrypted: JsonIgnore(value\n            = true) ', type: string}\n        xauth_secret_hash: {description: 'Xauth Secret Hash: JsonIgnore(value = true) ',\n          type: string}\n        xauth_type:\n          description: 'Xauth Type: ValidateEnum(enumClass = classOf[IKEXAuthType],\n            error = IPSECCONFIG_INVALID_XAUTH_TYPE: Invalid extended authentication\n            type specified.Valid type are secret or none., nullAllowed = false) '\n          enum: [NONE, SECRET]\n          type: string\n      required: [xauth_type]\n    IPAddressPool:\n      properties:\n        end: {description: 'End: IPAddress(allowEmpty = true, allowLinkLocal = false,\n            allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck = false,\n            INVALID_IP, type = IP) ', type: string}\n        start: {description: 'Start: IPAddress(allowEmpty = true, allowLinkLocal =\n            false, allowNull = true, bcast = DENY, defaultRoute = false, dnsCheck\n            = false, INVALID_IP, type = IP) ', type: string}\n    IPSECAuthentication:\n      properties:\n        certificate: {description: Certificate, type: string}\n        ikev1_params: {$ref: '#/components/schemas/IKEV1Params', description: 'Ikev1\n            Params: Valid '}\n        local_ca_certificate: {description: Local Ca Certificate, type: string}\n        local_id:\n          description: 'Local Id: ValidateEnum(enumClass = classOf[IPSECLocalIdType],\n            error = IPSECCONFIG_INVALID_LOCAL_ID_TYPE: Invalid local id type.Should\n            be either hostname, dn, local_ip or custom, nullAllowed = false) '\n          enum: [LOCAL_IP, DN, HOSTNAME, CUSTOM]\n          type: string\n        local_id_custom: {description: 'Local Id Custom: Length(max = 255, error =\n            IPSECCONFIG_INVALID_LOCAL_ID_LEN: Invalid local id len.Should be between\n            2-255., min = 2) ', type: string}\n        passphrase: {description: Passphrase, type: string}\n        passphrase_encrypted: {description: 'Passphrase Encrypted: JsonIgnore(value\n            = true) ', type: string}\n        private_key: {description: Private Key, type: string}\n        private_key_encrypted: {description: 'Private Key Encrypted: JsonIgnore(value\n            = true) ', type: string}\n        remote_ca_certificate: {description: Remote Ca Certificate, type: string}\n        remote_id: {description: 'Remote Id: Length(max = 255, error = IPSECCONFIG_INVALID_REMOTE_ID_LEN:\n            Invalid remote id len.Should be between 2-255., min = 2) ', type: string}\n        secret: {description: Secret, type: string}\n        secret_encrypted: {description: 'Secret Encrypted: JsonIgnore(value = true) ',\n          type: string}\n        secret_hash: {description: 'Secret Hash: JsonIgnore(value = true) ', type: string}\n        type:\n          description: 'Type: ValidateEnum(enumClass = classOf[IPSECAuthenticationType],\n            error = IPSECCONFIG_INVALID_AUTHENTICATION_TYPE: Invalid authentication\n            type specified.Valid type are x509, psk or none., nullAllowed = false) '\n          enum: [NONE, PSK, X509]\n          type: string\n        x509Objects: {$ref: '#/components/schemas/X509Objects', description: 'X509Objects:\n            JsonIgnore(value = true) '}\n      required: [local_id, type]\n    IPSECProfile:\n      properties:\n        authentication: {$ref: '#/components/schemas/IPSECAuthentication', description: 'Authentication:\n            Required(error = IPSECCONFIG_AUTHENTICATION_REQUIRED: Authentication cannot\n            be null.) Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dpd_delay: {description: 'Dpd Delay: Range(max = 60L, error = IPSECCONFIG_INVALID_DPD_DELAY:\n            Invalid dpd delay.Should be between 1-60 seconds., min = 1L) ', format: int32,\n          type: integer}\n        dpd_enable: {description: Dpd Enable, type: boolean}\n        dpd_timeout: {description: 'Dpd Timeout: Range(max = 300L, error = IPSECCONFIG_INVALID_DPD_TIMEOUT:\n            Invalid dpd timeout specified.Should be between 2-300 seconds., min =\n            2L) ', format: int32, type: integer}\n        esp_group: {$ref: '#/components/schemas/ESPGroup', description: 'Esp Group:\n            Required(error = IPSECCONFIG_ESPGROUP_REQUIRED: ESP Group cannot be null.)\n            Valid '}\n        id: {description: Id, type: string}\n        ike_group: {$ref: '#/components/schemas/IKEGroup', description: 'Ike Group:\n            Required(error = IPSECCONFIG_IKEGROUP_REQUIRED: IKE Group cannot be null.)\n            Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [authentication, ike_group, esp_group, name]\n    IPSECProfileQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    IPSECProfileQueryFilter:\n      properties:\n        authentication: {$ref: '#/components/schemas/IPSECAuthentication', description: 'Authentication:\n            Required(error = IPSECCONFIG_AUTHENTICATION_REQUIRED: Authentication cannot\n            be null.) Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dpd_delay: {description: 'Dpd Delay: Range(max = 60L, error = IPSECCONFIG_INVALID_DPD_DELAY:\n            Invalid dpd delay.Should be between 1-60 seconds., min = 1L) ', format: int32,\n          type: integer}\n        dpd_enable: {description: Dpd Enable, type: boolean}\n        dpd_timeout: {description: 'Dpd Timeout: Range(max = 300L, error = IPSECCONFIG_INVALID_DPD_TIMEOUT:\n            Invalid dpd timeout specified.Should be between 2-300 seconds., min =\n            2L) ', format: int32, type: integer}\n        esp_group: {$ref: '#/components/schemas/ESPGroup', description: 'Esp Group:\n            Required(error = IPSECCONFIG_ESPGROUP_REQUIRED: ESP Group cannot be null.)\n            Valid '}\n        id: {description: Id, type: string}\n        ike_group: {$ref: '#/components/schemas/IKEGroup', description: 'Ike Group:\n            Required(error = IPSECCONFIG_IKEGROUP_REQUIRED: IKE Group cannot be null.)\n            Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [authentication, ike_group, esp_group, name]\n    IPSECProfileScreen:\n      properties:\n        authentication: {$ref: '#/components/schemas/IPSECAuthentication', description: 'Authentication:\n            Required(error = IPSECCONFIG_AUTHENTICATION_REQUIRED: Authentication cannot\n            be null.) Valid '}\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        dpd_delay: {description: 'Dpd Delay: Range(max = 60L, error = IPSECCONFIG_INVALID_DPD_DELAY:\n            Invalid dpd delay.Should be between 1-60 seconds., min = 1L) ', format: int32,\n          type: integer}\n        dpd_enable: {description: Dpd Enable, type: boolean}\n        dpd_timeout: {description: 'Dpd Timeout: Range(max = 300L, error = IPSECCONFIG_INVALID_DPD_TIMEOUT:\n            Invalid dpd timeout specified.Should be between 2-300 seconds., min =\n            2L) ', format: int32, type: integer}\n        esp_group: {$ref: '#/components/schemas/ESPGroup', description: 'Esp Group:\n            Required(error = IPSECCONFIG_ESPGROUP_REQUIRED: ESP Group cannot be null.)\n            Valid '}\n        id: {description: Id, type: string}\n        ike_group: {$ref: '#/components/schemas/IKEGroup', description: 'Ike Group:\n            Required(error = IPSECCONFIG_IKEGROUP_REQUIRED: IKE Group cannot be null.)\n            Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [authentication, ike_group, esp_group, name]\n    LANNetwork:\n      properties:\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        security_policy_set: {$ref: '#/components/schemas/SecurityPolicySet', description: Security\n            Policy Set}\n      required: [scope, name]\n    LANNetworkQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    LANNetworkQueryFilter:\n      properties:\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        security_policy_set: {$ref: '#/components/schemas/SecurityPolicySet', description: Security\n            Policy Set}\n      required: [scope, name]\n    LANNetworkQueryFilterResponse:\n      properties:\n        description: {description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        site_id: {description: 'Site Id: Digits(fraction = 0, integer = 50, SITEID_INVALID)\n            NotNull ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [site_id, scope, name]\n    LANNetworkQueryFilterV3N1:\n      properties:\n        description: {description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [scope, name]\n    LANNetworkScreen:\n      properties:\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        security_policy_set: {$ref: '#/components/schemas/SecurityPolicySet', description: Security\n            Policy Set}\n      required: [scope, name]\n    LANNetworkScreenV3:\n      properties:\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n      required: [scope, name]\n    LANNetworkScreenV3N1:\n      properties:\n        description: {description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [scope, name]\n    LANNetworkV3:\n      properties:\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n      required: [scope, name]\n    LANNetworkV3N1:\n      properties:\n        description: {description: 'Description: Size(max = 1024, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        ipv4_config: {$ref: '#/components/schemas/LanNetworkIPv4Config', description: 'Ipv4\n            Config: Valid '}\n        name: {description: 'Name: Required(error = NAME_REQD: Please provide resource\n            name.) Size(max = 128, error = NAME_EXCEEDS_LIMIT: Name of the resource\n            exceeds limit., min = 0) ', type: string}\n        network_context_id: {description: 'Network Context Id: Digits(fraction = 0,\n            integer = 30, error = INVALID_NETWORK_CONTEXT_ID: Specified network context\n            is invalid.) ', type: string}\n        scope:\n          description: 'Scope: ValidateEnum(enumClass = classOf[NetworkScope], message\n            = Invalid enum string., nullAllowed = false) '\n          enum: [GLOBAL, LOCAL]\n          type: string\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 1024, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [scope, name]\n    LQMConfig:\n      properties:\n        hub_site_ids:\n          description: 'Hub Site Ids: Size(max = 16, error = WANINTERFACE_LQM_CONFIG_INVALID_HUB_SITE_IDS_SIZE:\n            Maximum 16 hub sites can be configured, min = 0) ListString(allowDuplicate\n            = false, allowEmpty = true, allowNull = true, length = 0, listMaxSize\n            = 0, error = WANINTERFACE_LQM_CONFIG_DUPLICATE_HUB_SITE_IDS: Duplicate\n            hub site ids are not allowed., noTrim = false, regex = , required = false) '\n          items: {description: Hub Site Ids, type: string}\n          type: array\n        inter_packet_gap: {description: 'Inter Packet Gap: Range(max = 300L, error\n            = WANINTERFACE_LQM_CONFIG_INVALID_INTER_PACKET_GAP: inter packet gap should\n            be in the range of 50-300 milliseconds., min = 50L) ', format: int32,\n          type: integer}\n        statistic:\n          description: 'Statistic: ValidateEnum(enumClass = classOf[LQMStatistic],\n            error = WANINTERFACE_LQM_CONFIG_INVALID_STATISTIC: Invalid statistic value.\n            Valid values are min, max and avg., nullAllowed = true) '\n          enum: [min, max, avg]\n          type: string\n    LanNetworkIPv4Config:\n      properties:\n        default_routers:\n          description: 'Default Routers: ListIPAddress(bcast = DENY, listMaxSize =\n            0, error = LAN_CONFIG_INVALID_DEFAULT_ROUTERS: Invalid ip for default\n            routers., required = false, type = IPCIDR_32) '\n          items: {description: Default Routers, type: string}\n          type: array\n        dhcp_relay: {$ref: '#/components/schemas/DHCPRelay', description: Dhcp Relay}\n        dhcp_server: {$ref: '#/components/schemas/DHCPServer', description: Dhcp Server}\n        prefixes:\n          description: 'Prefixes: ListIPAddress(bcast = DENY, listMaxSize = 0, error\n            = LAN_CONFIG_INVALID_PREFIX: Invalid prefix ip., required = false, type\n            = PREFIXCIDR_32) '\n          items: {description: Prefixes, type: string}\n          type: array\n    ListQueryResponse:\n      properties:\n        count: {format: int32, type: integer}\n        deleted_count: {format: int64, type: integer}\n        deleted_ids:\n          items: {type: string}\n          type: array\n        id: {type: string}\n        next_query: {type: object}\n        tenant_id: {type: string}\n        total_count: {format: int64, type: integer}\n      type: object\n    ListResponse:\n      properties:\n        count: {format: int32, type: integer}\n        id: {type: string}\n        tenant_id: {type: string}\n      type: object\n    NetworkContext:\n      properties:\n        description: {description: Description, type: string}\n        id: {description: Id, type: string}\n        name: {description: Name, type: string}\n    NetworkContextQueryFilter:\n      properties:\n        description: {description: 'Description: Size(max = 256, error = NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID:\n            Network context config description invalid., min = 0) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: Required(error = NETWORK_CONTEXT_CONFIG_NAME_REQD:\n            Network context config name required) Size(max = 128, error = NAME_EXCEEDS_LIMIT:\n            Name of the resource exceeds limit., min = 0) ', type: string}\n      required: [name]\n    NetworkContextScreen:\n      properties:\n        description: {description: 'Description: Size(max = 256, error = NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID:\n            Network context config description invalid., min = 0) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: Required(error = NETWORK_CONTEXT_CONFIG_NAME_REQD:\n            Network context config name required) Size(max = 128, error = NAME_EXCEEDS_LIMIT:\n            Name of the resource exceeds limit., min = 0) ', type: string}\n      required: [name]\n    Proposals:\n      properties:\n        dh_groups:\n          description: 'Dh Groups: ValidateEnum(enumClass = classOf[DHGroups], error\n            = IPSECCONFIG_INVALID_DHGROUPS: Invalid DH Group specified., nullAllowed\n            = false) '\n          enum: [NONE, MODP768, MODP1024, MODP1536, MODP2048, MODP3072, MODP4096,\n            MODP6144, MODP8192, MODP1024S160, MODP2048S224, MODP2048S256, ECP192,\n            ECP224, ECP256, ECP384, ECP521, ECP224BP, ECP256BP, ECP384BP, ECP512BP,\n            CURVE25519]\n          type: string\n        encryption:\n          description: 'Encryption: ValidateEnum(enumClass = classOf[IPSECEncryption],\n            error = IPSECCONFIG_INVALID_ENCRYPTION: Invalid encryption algorithm specified.,\n            nullAllowed = false) '\n          enum: [NONE, AES128, AES192, AES256, AES128CTR, AES192CTR, AES256CTR, AES128CCM64,\n            AES192CCM64, AES256CCM64, AES128CCM96, AES192CCM96, AES256CCM96, AES128CCM128,\n            AES192CCM128, AES256CCM128, AES128GCM64, AES192GCM64, AES256GCM64, AES128GCM96,\n            AES192GCM96, AES256GCM96, AES128GCM128, AES192GCM128, AES256GCM128, AES128GMAC,\n            AES192GMAC, AES256GMAC, TRIPLEDES, BLOWFISH128, BLOWFISH192, BLOWFISH256,\n            CAMELLIA128, CAMELLIA192, CAMELLIA256, SERPENT128, SERPENT192, SERPENT256,\n            TWOFISH128, TWOFISH192, TWOFISH256]\n          type: string\n        hash:\n          description: 'Hash: ValidateEnum(enumClass = classOf[IPSECHash], error =\n            IPSECCONFIG_INVALID_HASH: Invalid hashing algorithm specified., nullAllowed\n            = false) '\n          enum: [MD5, SHA1, SHA256, SHA384, SHA512, SHA256_96, AESXCBC, AES128GMAC,\n            AES192GMAC, AES256GMAC]\n          type: string\n      required: [hash, encryption, dh_groups]\n    SecurityPolicySet:\n      properties:\n        description: {description: 'Description: Size(max = 256, error = SECURITY_POLICYSET_INVALID_DESCRIPTION:\n            Security policy set invalid description., min = 0) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: Size(max = 128, error = SECURITY_POLICYSET_INVALID_NAME:\n            Security policy set invalid name., min = 0) Required(error = SECURITY_POLICYSET_NAME_REQUIRED:\n            Security policyset name required.) ', type: string}\n        policyrule_order:\n          description: Policyrule Order\n          items: {description: Policyrule Order, type: string}\n          type: array\n      required: [name]\n    SiteIPFixPrefixAssociation:\n      properties:\n        id: {description: Id, type: string}\n        ipv4_prefixes:\n          description: 'Ipv4 Prefixes: ListIPAddress(bcast = DENY, listMaxSize = 0,\n            error = INVALID_IPV4_PREFIX: Invalid IPv4 Prefix., required = false, type\n            = APP_GATEWAYCIDR) '\n          items: {description: Ipv4 Prefixes, type: string}\n          type: array\n        prefix_id: {description: Prefix Id, type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n    VPNLinkConfiguration:\n      properties:\n        keep_alive_failure_count: {description: 'Keep Alive Failure Count: NotNull(error\n            = VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT: VPN Link keep alive\n            failure count must be between 3 and 30.) Range(max = 30L, error = VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT:\n            VPN Link keep alive failure count must be between 3 and 30., min = 3L) ',\n          type: integer}\n        keep_alive_interval: {description: 'Keep Alive Interval: NotNull(error = VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL:\n            VPN Link keep alive interval must be between 100ms-1740,000ms.) Range(max\n            = 1740000L, error = VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL: VPN Link\n            keep alive interval must be between 100ms-1740,000ms., min = 100L) ',\n          type: integer}\n      required: [keep_alive_failure_count, keep_alive_interval]\n    WANInterfaceLabel:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n    WANInterfaceLabelQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    WANInterfaceLabelQueryFilterV2N4:\n      properties:\n        bwc_enabled: {description: Bwc Enabled, type: boolean}\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        lqm_enabled: {description: Lqm Enabled, type: boolean}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        use_for_application_reachability_probes: {description: 'Use For Application\n            Reachability Probes: Valid ', type: boolean}\n        use_for_controller_connections: {description: 'Use For Controller Connections:\n            Valid ', type: boolean}\n        use_lqm_for_non_hub_paths: {description: Use Lqm For Non Hub Paths, type: boolean}\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceLabelScreen:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n    WANInterfaceLabelScreenV2N1:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n    WANInterfaceLabelScreenV2N2:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceLabelScreenV2N3:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        use_for_application_reachability_probes: {description: 'Use For Application\n            Reachability Probes: Valid ', type: boolean}\n        use_for_controller_connections: {description: 'Use For Controller Connections:\n            Valid ', type: boolean}\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceLabelScreenV2N4:\n      properties:\n        bwc_enabled: {description: Bwc Enabled, type: boolean}\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        lqm_enabled: {description: Lqm Enabled, type: boolean}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        use_for_application_reachability_probes: {description: 'Use For Application\n            Reachability Probes: Valid ', type: boolean}\n        use_for_controller_connections: {description: 'Use For Controller Connections:\n            Valid ', type: boolean}\n        use_lqm_for_non_hub_paths: {description: Use Lqm For Non Hub Paths, type: boolean}\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceLabelV2N1:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n    WANInterfaceLabelV2N2:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceLabelV2N3:\n      properties:\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        use_for_application_reachability_probes: {description: 'Use For Application\n            Reachability Probes: Valid ', type: boolean}\n        use_for_controller_connections: {description: 'Use For Controller Connections:\n            Valid ', type: boolean}\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceLabelV2N4:\n      properties:\n        bwc_enabled: {description: Bwc Enabled, type: boolean}\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label: {description: 'Label: Pattern(message = INVALID_INTERFACE_LABEL, regexp\n            = (public|private)-(([1-9])|([1-2][0-9])|(3[0-2])|(100[0-9]))) ', type: string}\n        lqm_enabled: {description: Lqm Enabled, type: boolean}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        use_for_application_reachability_probes: {description: 'Use For Application\n            Reachability Probes: Valid ', type: boolean}\n        use_for_controller_connections: {description: 'Use For Controller Connections:\n            Valid ', type: boolean}\n        use_lqm_for_non_hub_paths: {description: Use Lqm For Non Hub Paths, type: boolean}\n        vpnlink_configuration: {$ref: '#/components/schemas/VPNLinkConfiguration',\n          description: 'Vpnlink Configuration: Valid '}\n    WANInterfaceQueryFilterV2N4:\n      properties:\n        bfd_mode:\n          description: 'Bfd Mode: ValidateEnum(enumClass = classOf[BfdMode], WAN_CONFIG_INVALID_BFD_MODE,\n            nullAllowed = false) '\n          enum: [aggressive, non_aggressive]\n          type: string\n        bw_config_mode:\n          description: Bw Config Mode\n          enum: [auto, manual, manual_bwm_disabled]\n          type: string\n        bwc_enabled: {description: Bwc Enabled, type: boolean}\n        cost: {description: Cost, type: integer}\n        description: {description: 'Description: Size(max = 256, message = PATHGROUP_INVALID_DESCRIPTION,\n            min = 0) ', type: string}\n        id: {description: Id, type: string}\n        label_id: {description: Label Id, type: string}\n        link_bw_down: {description: Link Bw Down, format: double, type: number}\n        link_bw_up: {description: Link Bw Up, format: double, type: number}\n        lqm_config: {$ref: '#/components/schemas/LQMConfig', description: 'Lqm Config:\n            Valid '}\n        lqm_enabled: {description: Lqm Enabled, type: boolean}\n        name: {description: 'Name: Size(max = 128, message = PATHGROUP_INVALID_NAME,\n            min = 0) ', type: string}\n        network_id: {description: Network Id, type: string}\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n      required: [bfd_mode]\n    WANNetwork:\n      properties:\n        id: {description: Id, type: string}\n        name: {description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,\n            min = 0) ', type: string}\n        provider_as_numbers:\n          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,\n            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private\n            network is not within 1-65535., min = 1) '\n          items: {description: Provider As Numbers, type: integer}\n          type: array\n        type:\n          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network\n            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass\n            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed\n            = false) '\n          enum: [PUBLIC_WAN, PRIVATE_WAN]\n          type: string\n      required: [type, name]\n    WANNetworkQuery:\n      properties:\n        aggregate: {$ref: '#/components/schemas/Aggregate', description: Aggregate}\n        dest_page: {description: Dest Page, format: int32, type: integer}\n        getDeleted: {description: GetDeleted, type: boolean}\n        group_by:\n          description: Group By\n          items: {description: Group By, type: string}\n          type: array\n        id: {description: Id, type: string}\n        last_query_ts: {description: Last Query Ts, format: int64, type: integer}\n        limit: {description: Limit, format: int32, type: integer}\n        next_query: {type: object}\n        query_params: {type: object}\n        retrieved_fields:\n          description: Retrieved Fields\n          items: {description: Retrieved Fields, type: string}\n          type: array\n        retrieved_fields_mask: {description: Retrieved Fields Mask, type: boolean}\n        sort_params: {type: object}\n        total_count: {description: Total Count, format: int64, type: integer}\n    WANNetworkScreen:\n      properties:\n        id: {description: Id, type: string}\n        name: {description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,\n            min = 0) ', type: string}\n        provider_as_numbers:\n          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,\n            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private\n            network is not within 1-65535., min = 1) '\n          items: {description: Provider As Numbers, type: integer}\n          type: array\n        type:\n          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network\n            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass\n            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed\n            = false) '\n          enum: [PUBLIC_WAN, PRIVATE_WAN]\n          type: string\n      required: [type, name]\n    WANNetworkScreenV2N1:\n      properties:\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,\n            min = 0) ', type: string}\n        provider_as_numbers:\n          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,\n            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private\n            network is not within 1-65535., min = 1) '\n          items: {description: Provider As Numbers, type: integer}\n          type: array\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type:\n          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network\n            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass\n            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed\n            = false) '\n          enum: [PUBLIC_WAN, PRIVATE_WAN]\n          type: string\n      required: [type, name]\n    WANNetworkV2N1:\n      properties:\n        description: {description: 'Description: Size(max = 256, error = DESCRIPTION_EXCEEDS_LIMIT:\n            Description length exceeds limit, min = 0) ', type: string}\n        id: {description: Id, type: string}\n        name: {description: 'Name: Required(NAME_REQUIRED) Size(max = 128, WANNETWORK_NAME_INVALID_0001,\n            min = 0) ', type: string}\n        provider_as_numbers:\n          description: 'Provider As Numbers: ListNumber(duplicate = true, max = 65535,\n            error = WAN_CONFIG_PROVIDER_AS_OUT_OF_RANGE: AS numbers of the private\n            network is not within 1-65535., min = 1) '\n          items: {description: Provider As Numbers, type: integer}\n          type: array\n        tags:\n          description: 'Tags: ListString(allowDuplicate = false, allowEmpty = true,\n            allowNull = true, length = 128, listMaxSize = 10, error = INVALID_TAG:\n            Maximum 10 Unique tags of length 1024 each are allowed, noTrim = false,\n            regex = [^,\\\\s]+, required = false) '\n          items: {description: Tags, type: string}\n          type: array\n        type:\n          description: 'Type: Required(error = NETWORK_TYPE_REQUIRED: WAN Network\n            type (publicwan | privatewan) is a mandatory attribute.) ValidateEnum(enumClass\n            = classOf[WANNetworkType], message = Invalid enum string., nullAllowed\n            = false) '\n          enum: [PUBLIC_WAN, PRIVATE_WAN]\n          type: string\n      required: [type, name]\n    X509Objects:\n      properties:\n        certHolder: {type: object}\n        certificate: {description: Certificate, type: string}\n        is_local_ca_cert_set: {description: Is Local Ca Cert Set, type: boolean}\n        is_remote_ca_cert_set: {description: Is Remote Ca Cert Set, type: boolean}\n        keyPair: {type: object}\n        local_ca_certificate: {description: Local Ca Certificate, type: string}\n        local_ca_certs_set:\n          description: Local Ca Certs Set\n          items: {type: object}\n          type: array\n        passphrase: {description: Passphrase, type: string}\n        private_key: {description: Private Key, type: string}\n        remote_ca_certificate: {description: Remote Ca Certificate, type: string}\n        remote_ca_certs_set:\n          description: Remote Ca Certs Set\n          items: {type: object}\n          type: array\ninfo:\n  contact: {}\n  description: List of APIs used to manage Network constructs in Prisma SD-WAN like\n    WAN Networks, LAN Networks, Circuit labels, and Network Contexts. All these are\n    used to define a circuit and create policies.\n  title: Network Constructs\n  version: Latest\nopenapi: 3.0.0\npaths:\n  /v2.0/api/tenants/{tenant_id}/ipsecprofiles:\n    get:\n      description: Get IPSECProfileList\n      operationId: get-v2.0-api-tenants-tenant_id-ipsecprofiles\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema:\n          allOf:\n          - {$ref: '#/components/schemas/ListQueryResponse'}\n          - properties:\n              items:\n                items: {$ref: '#/components/schemas/IPSECProfile'}\n                type: array\n            type: object\n          description: Tenant Id\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n      summary: Get IPSECProfileList (v2.0)\n      tags: [Network Constructs]\n    post:\n      description: Create a new IPSEC Profile\n      operationId: post-v2.0-api-tenants-tenant_id-ipsecprofiles\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/IPSECProfileScreen'}\n        description: Details of the IPSEC profile to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_VALUE}\n                  - {code: IPSECCONFIG_IKEGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_DELAY}\n                  - {code: IPSECCONFIG_ESPGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_AUTHENTICATION_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_TIMEOUT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new IPSEC Profile (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/ipsecprofiles/query:\n    post:\n      description: Queries db for limit number of tenant level ipsec profiles that\n        match query params.\n      operationId: post-v2.0-api-tenants-tenant_id-ipsecprofiles-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/IPSECProfileQuery'}\n        description: Query Details for IPSECProfile\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/SiteIPFixPrefixAssociation'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_QUERY_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Queries db for limit number of tenant level ipsec profiles that match\n        query params. (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/ipsecprofiles/{profile_id}:\n    delete:\n      description: Delete a IPSEC Profile\n      operationId: delete-v2.0-api-tenants-tenant_id-ipsecprofiles-profile_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: IPSECProfile Id\n        in: path\n        name: profile_id\n        required: true\n        schema: {description: Profile Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_VALUE}\n                  - {code: IPSECCONFIG_IKEGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_DELAY}\n                  - {code: IPSECCONFIG_ESPGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_AUTHENTICATION_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_TIMEOUT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete a IPSEC Profile (v2.0)\n      tags: [Network Constructs]\n    get:\n      description: Get a IPSECProfile\n      operationId: get-v2.0-api-tenants-tenant_id-ipsecprofiles-profile_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: IPSECProfile Id\n        in: path\n        name: profile_id\n        required: true\n        schema: {description: Profile Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n      summary: Get a IPSECProfile (v2.0)\n      tags: [Network Constructs]\n    put:\n      description: Update a IPSECProfile\n      operationId: put-v2.0-api-tenants-tenant_id-ipsecprofiles-profile_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: IPSECProfile Id\n        in: path\n        name: profile_id\n        required: true\n        schema: {description: Profile Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/IPSECProfileScreen'}\n        description: Details of the IPSEC profile to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_VALUE}\n                  - {code: IPSECCONFIG_IKEGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_DELAY}\n                  - {code: IPSECCONFIG_ESPGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_AUTHENTICATION_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_TIMEOUT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a IPSECProfile (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/networkcontexts:\n    get:\n      description: Get LAN segments\n      operationId: get-v2.0-api-tenants-tenant_id-networkcontexts\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/NetworkContext'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get LAN segments (v2.0)\n      tags: [Network Constructs]\n    post:\n      description: Create a new LAN segment\n      operationId: post-v2.0-api-tenants-tenant_id-networkcontexts\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/NetworkContext'}\n        description: Details of the lan segment model to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/NetworkContext'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: NETWORK_CONTEXT_CONFIG_NAME_REQD}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new LAN segment (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/networkcontexts/query:\n    post:\n      description: Queries db for limit number of network contexts that match query\n        params.\n      operationId: post-v2.0-api-tenants-tenant_id-networkcontexts-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/NetworkContext'}\n        description: Details of the query for lan segment\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/NetworkContextQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Queries db for limit number of network contexts that match query params.\n        (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/networkcontexts/{network_context_id}:\n    delete:\n      description: Delete LAN segment\n      operationId: delete-v2.0-api-tenants-tenant_id-networkcontexts-network_context_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Context ID\n        in: path\n        name: network_context_id\n        required: true\n        schema: {description: Network Context Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/NetworkContext'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: NETWORK_CONTEXT_CONFIG_NAME_REQD}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete LAN segment (v2.0)\n      tags: [Network Constructs]\n    get:\n      description: Get LAN segment\n      operationId: get-v2.0-api-tenants-tenant_id-networkcontexts-network_context_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Context ID\n        in: path\n        name: network_context_id\n        required: true\n        schema: {description: Network Context Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/NetworkContext'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_LAN_SEGMENTID}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get LAN segment (v2.0)\n      tags: [Network Constructs]\n    put:\n      description: Update LAN segment\n      operationId: put-v2.0-api-tenants-tenant_id-networkcontexts-network_context_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Context ID\n        in: path\n        name: network_context_id\n        required: true\n        schema: {description: Network Context Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/NetworkContextScreen'}\n        description: Details of lan segment to be updated\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/NetworkContext'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: NETWORK_CONTEXT_CONFIG_DESCRIPTION_INVALID}\n                  - {code: NAME_EXCEEDS_LIMIT}\n                  - {code: NETWORK_CONTEXT_CONFIG_NAME_REQD}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update LAN segment (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks:\n    get:\n      description: Get LAN networks\n      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                oneOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - {$ref: '#/components/schemas/BulkResponse'}\n          description: Successful Operation\n      summary: Get LAN networks (v2.0)\n      tags: [Network Constructs]\n    post:\n      description: Create a new LAN\n      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkScreen'}\n        description: Details of the network to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetwork'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NO_LAN_NET_PREFIX}\n                  - {code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED}\n                  - {code: INVALID_NETWORK_CONTEXT}\n                  - {code: INVALID_IPV4_PREFIX}\n                  - {code: SAME_IPV4_PREFIX}\n                  - {code: INVALID_IPADDRESS}\n                  - {code: DEFAULT_ROUTER_PREFIX_MISMATCH}\n                  - {code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS}\n                  - {code: INVALID_APP_ID}\n                  - {code: LAN_NETWORK_ADD_FAILURE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new LAN (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/query:\n    post:\n      description: Query LAN networks that match query params\n      operationId: post-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-query\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/LANNetworkQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query LAN networks that match query params (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/{lannetwork_id}:\n    delete:\n      description: Delete an existing LAN\n      operationId: delete-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetwork'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: LAN_NETWORK_IN_USE}\n                  - {code: LANNETWORK_IS_USED_IN_SECURITY_ZONES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an existing LAN (v2.0)\n      tags: [Network Constructs]\n    get:\n      description: Get LAN network\n      operationId: get-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetwork'}\n          description: Successful Operation\n      summary: Get LAN network (v2.0)\n      tags: [Network Constructs]\n    put:\n      description: Update an existing LAN\n      operationId: put-v2.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkScreen'}\n        description: Details of the network to be updated\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetwork'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NO_LAN_NET_PREFIX}\n                  - {code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED}\n                  - {code: INVALID_NETWORK_CONTEXT}\n                  - {code: INVALID_IPV4_PREFIX}\n                  - {code: SAME_IPV4_PREFIX}\n                  - {code: INVALID_IPADDRESS}\n                  - {code: DEFAULT_ROUTER_PREFIX_MISMATCH}\n                  - {code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS}\n                  - {code: INVALID_APP_ID}\n                  - {code: OVERLAPPING_LAN_NET_PREFIXES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update an existing LAN (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/waninterfacelabels:\n    get:\n      description: Get WAN interface labels for a tenant\n      operationId: get-v2.0-api-tenants-tenant_id-waninterfacelabels\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabel'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get WAN interface labels for a tenant (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/waninterfacelabels/query:\n    post:\n      description: Query db for WAN interface labels that match query parameters\n      operationId: post-v2.0-api-tenants-tenant_id-waninterfacelabels-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for WAN interface labels that match query parameters (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:\n    get:\n      description: Get a specific WAN interface label\n      operationId: get-v2.0-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabel'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific WAN interface label (v2.0)\n      tags: [Network Constructs]\n    put:\n      description: Update specific WAN interface label\n      operationId: put-v2.0-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabel'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: WAN_INTERFACE_LABEL_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update specific WAN interface label (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/wannetworks:\n    get:\n      description: Get all tenant WAN networks\n      operationId: get-v2.0-api-tenants-tenant_id-wannetworks\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANNetwork'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all tenant WAN networks (v2.0)\n      tags: [Network Constructs]\n    post:\n      description: Create a new WAN\n      operationId: post-v2.0-api-tenants-tenant_id-wannetworks\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANNetworkScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetwork'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: EXTRA_PROVIDER_ASNUM}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new WAN (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/wannetworks/query:\n    post:\n      description: Query db for WAN networks that match query parameters\n      operationId: post-v2.0-api-tenants-tenant_id-wannetworks-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANNetworkQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANNetworkQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SITE_WAN_NETWORK_EXISTS}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for WAN networks that match query parameters (v2.0)\n      tags: [Network Constructs]\n  /v2.0/api/tenants/{tenant_id}/wannetworks/{wan_network_id}:\n    delete:\n      description: Delete an existing WAN\n      operationId: delete-v2.0-api-tenants-tenant_id-wannetworks-wan_network_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Id\n        in: path\n        name: wan_network_id\n        required: true\n        schema: {description: Wan Network Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetwork'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SITE_WAN_NETWORK_EXISTS}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an existing WAN (v2.0)\n      tags: [Network Constructs]\n    get:\n      description: Get an existing WAN\n      operationId: get-v2.0-api-tenants-tenant_id-wannetworks-wan_network_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Id\n        in: path\n        name: wan_network_id\n        required: true\n        schema: {description: Wan Network Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetwork'}\n          description: Successful Operation\n      summary: Get an existing WAN (v2.0)\n      tags: [Network Constructs]\n    put:\n      description: Update an existing WAN\n      operationId: put-v2.0-api-tenants-tenant_id-wannetworks-wan_network_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Id\n        in: path\n        name: wan_network_id\n        required: true\n        schema: {description: Wan Network Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANNetworkScreen'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetwork'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: EXTRA_PROVIDER_ASNUM}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update an existing WAN (v2.0)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/ipsecprofiles:\n    get:\n      description: Get IPSECProfileList\n      operationId: get-v2.1-api-tenants-tenant_id-ipsecprofiles\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/IPSECProfile'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get IPSECProfileList (v2.1)\n      tags: [Network Constructs]\n    post:\n      description: Create a new IPSEC Profile\n      operationId: post-v2.1-api-tenants-tenant_id-ipsecprofiles\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/IPSECProfileScreen'}\n        description: Details of the IPSEC profile to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_VALUE}\n                  - {code: IPSECCONFIG_INVALID_ENCODED_AUTH_SECRET}\n                  - {code: IPSECCONFIG_IKEGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_DELAY}\n                  - {code: IPSECCONFIG_ESPGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_AUTHENTICATION_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_TIMEOUT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new IPSEC Profile (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/ipsecprofiles/query:\n    post:\n      description: Queries db for limit number of tenant level ipsec profiles that\n        match query params.\n      operationId: post-v2.1-api-tenants-tenant_id-ipsecprofiles-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/IPSECProfileQueryFilter'}\n        description: Query Details for IPSECProfile\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/IPSECProfileQueryFilter'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_QUERY_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Queries db for limit number of tenant level ipsec profiles that match\n        query params. (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/ipsecprofiles/{profile_id}:\n    delete:\n      description: Delete a IPSEC Profile\n      operationId: delete-v2.1-api-tenants-tenant_id-ipsecprofiles-profile_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: IPSECProfile Id\n        in: path\n        name: profile_id\n        required: true\n        schema: {description: Profile Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_VALUE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete a IPSEC Profile (v2.1)\n      tags: [Network Constructs]\n    get:\n      description: Get a IPSECProfile\n      operationId: get-v2.1-api-tenants-tenant_id-ipsecprofiles-profile_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: IPSECProfile Id\n        in: path\n        name: profile_id\n        required: true\n        schema: {description: Profile Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n      summary: Get a IPSECProfile (v2.1)\n      tags: [Network Constructs]\n    put:\n      description: Update a IPSECProfile\n      operationId: put-v2.1-api-tenants-tenant_id-ipsecprofiles-profile_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: IPSECProfile Id\n        in: path\n        name: profile_id\n        required: true\n        schema: {description: Profile Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/IPSECProfileScreen'}\n        description: Details of the IPSEC profile to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/IPSECProfile'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_VALUE}\n                  - {code: IPSECCONFIG_INVALID_ENCODED_AUTH_SECRET}\n                  - {code: IPSECCONFIG_IKEGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_DELAY}\n                  - {code: IPSECCONFIG_ESPGROUP_REQUIRED}\n                  - {code: IPSECCONFIG_AUTHENTICATION_REQUIRED}\n                  - {code: IPSECCONFIG_INVALID_DPD_TIMEOUT}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update a IPSECProfile (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/waninterfacelabels:\n    get:\n      description: Get WAN interface labels for a tenant\n      operationId: get-v2.1-api-tenants-tenant_id-waninterfacelabels\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get WAN interface labels for a tenant (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/waninterfacelabels/query:\n    post:\n      description: Query db for WAN interface labels that match query parameters\n      operationId: post-v2.1-api-tenants-tenant_id-waninterfacelabels-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for WAN interface labels that match query parameters (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:\n    get:\n      description: Get a specific WAN interface label\n      operationId: get-v2.1-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific WAN interface label (v2.1)\n      tags: [Network Constructs]\n    put:\n      description: Update specific WAN interface label\n      operationId: put-v2.1-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelScreenV2N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: WAN_INTERFACE_LABEL_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update specific WAN interface label (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/wannetworks:\n    get:\n      description: Get all tenant WAN networks\n      operationId: get-v2.1-api-tenants-tenant_id-wannetworks\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANNetworkV2N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get all tenant WAN networks (v2.1)\n      tags: [Network Constructs]\n    post:\n      description: Create a new WAN\n      operationId: post-v2.1-api-tenants-tenant_id-wannetworks\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANNetworkScreenV2N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetworkV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: EXTRA_PROVIDER_ASNUM}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new WAN (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/wannetworks/query:\n    post:\n      description: Query db for WAN networks that match query parameters\n      operationId: post-v2.1-api-tenants-tenant_id-wannetworks-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANNetworkQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANNetworkQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SITE_WAN_NETWORK_EXISTS}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for WAN networks that match query parameters (v2.1)\n      tags: [Network Constructs]\n  /v2.1/api/tenants/{tenant_id}/wannetworks/{wan_network_id}:\n    delete:\n      description: Delete an existing WAN\n      operationId: delete-v2.1-api-tenants-tenant_id-wannetworks-wan_network_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Id\n        in: path\n        name: wan_network_id\n        required: true\n        schema: {description: Wan Network Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetworkV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: SITE_WAN_NETWORK_EXISTS}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an existing WAN (v2.1)\n      tags: [Network Constructs]\n    get:\n      description: Get an existing WAN\n      operationId: get-v2.1-api-tenants-tenant_id-wannetworks-wan_network_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Id\n        in: path\n        name: wan_network_id\n        required: true\n        schema: {description: Wan Network Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetworkV2N1'}\n          description: Successful Operation\n      summary: Get an existing WAN (v2.1)\n      tags: [Network Constructs]\n    put:\n      description: Update an existing WAN\n      operationId: put-v2.1-api-tenants-tenant_id-wannetworks-wan_network_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Network Id\n        in: path\n        name: wan_network_id\n        required: true\n        schema: {description: Wan Network Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANNetworkScreenV2N1'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANNetworkV2N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: EXTRA_PROVIDER_ASNUM}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update an existing WAN (v2.1)\n      tags: [Network Constructs]\n  /v2.2/api/tenants/{tenant_id}/waninterfacelabels:\n    get:\n      description: Get WAN interface labels for a tenant\n      operationId: get-v2.2-api-tenants-tenant_id-waninterfacelabels\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelV2N2'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get WAN interface labels for a tenant (v2.2)\n      tags: [Network Constructs]\n  /v2.2/api/tenants/{tenant_id}/waninterfacelabels/query:\n    post:\n      description: Query db for site WAN interfaces that match query parameters\n      operationId: post-v2.2-api-tenants-tenant_id-waninterfacelabels-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for site WAN interfaces that match query parameters (v2.2)\n      tags: [Network Constructs]\n  /v2.2/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:\n    get:\n      description: Get a specific WAN interface label\n      operationId: get-v2.2-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific WAN interface label (v2.2)\n      tags: [Network Constructs]\n    put:\n      description: Update specific WAN interface label\n      operationId: put-v2.2-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelScreenV2N2'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N2'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL}\n                  - {code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT}\n                  - {code: VPNLINK_CONFIG_REQUIRED}\n                  - {code: WAN_INTERFACE_LABEL_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update specific WAN interface label (v2.2)\n      tags: [Network Constructs]\n  /v2.3/api/tenants/{tenant_id}/waninterfacelabels:\n    get:\n      description: Get WAN interface labels for a tenant\n      operationId: get-v2.3-api-tenants-tenant_id-waninterfacelabels\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelV2N3'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get WAN interface labels for a tenant (v2.3)\n      tags: [Network Constructs]\n  /v2.3/api/tenants/{tenant_id}/waninterfacelabels/query:\n    post:\n      description: Query db for site WAN interfaces that match query parameters\n      operationId: post-v2.3-api-tenants-tenant_id-waninterfacelabels-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelQuery'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for site WAN interfaces that match query parameters (v2.3)\n      tags: [Network Constructs]\n  /v2.3/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:\n    get:\n      description: Get a specific WAN interface label\n      operationId: get-v2.3-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific WAN interface label (v2.3)\n      tags: [Network Constructs]\n    put:\n      description: Update specific WAN interface label\n      operationId: put-v2.3-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelScreenV2N3'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL}\n                  - {code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT}\n                  - {code: VPNLINK_CONFIG_REQUIRED}\n                  - {code: WAN_INTERFACE_LABEL_MISMATCH}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update specific WAN interface label (v2.3)\n      tags: [Network Constructs]\n  /v2.4/api/tenants/{tenant_id}/waninterfacelabels:\n    get:\n      description: Get WAN interface labels for a tenant\n      operationId: get-v2.4-api-tenants-tenant_id-waninterfacelabels\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelV2N4'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get WAN interface labels for a tenant (v2.4)\n      tags: [Network Constructs]\n  /v2.4/api/tenants/{tenant_id}/waninterfacelabels/query:\n    post:\n      description: Query db for site WAN interfaces that match query parameters\n      operationId: post-v2.4-api-tenants-tenant_id-waninterfacelabels-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceQueryFilterV2N4'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/WANInterfaceLabelQueryFilterV2N4'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for site WAN interfaces that match query parameters (v2.4)\n      tags: [Network Constructs]\n  /v2.4/api/tenants/{tenant_id}/waninterfacelabels/{wantinterface_label_id}:\n    get:\n      description: Get a specific WAN interface label\n      operationId: get-v2.4-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N4'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Get a specific WAN interface label (v2.4)\n      tags: [Network Constructs]\n    put:\n      description: Update specific WAN interface label\n      operationId: put-v2.4-api-tenants-tenant_id-waninterfacelabels-wantinterface_label_id\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: Label Id\n        in: path\n        name: wantinterface_label_id\n        required: true\n        schema: {description: Wantinterface Label Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/WANInterfaceLabelScreenV2N4'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/WANInterfaceLabelV2N4'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: WAN_INTERFACE_LABEL_NOT_FOUND}\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_INTERVAL}\n                  - {code: VPNLINK_CONFIG_INVALID_KEEP_ALIVE_FAILURE_COUNT}\n                  - {code: VPNLINK_CONFIG_REQUIRED}\n                  - {code: WAN_INTERFACE_LABEL_MISMATCH}\n                  - {code: WANINTERFACE_LABEL_USE_FOR_NON_HUB_PATHS_INVALID}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update specific WAN interface label (v2.4)\n      tags: [Network Constructs]\n  /v3.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks:\n    get:\n      description: Get LAN networks\n      operationId: get-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/LANNetworkV3'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get LAN networks (v3.0)\n      tags: [Network Constructs]\n    post:\n      description: Create a new LAN\n      operationId: post-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkScreenV3'}\n        description: Details of the network to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NO_LAN_NET_PREFIX}\n                  - {code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED}\n                  - {code: INVALID_NETWORK_CONTEXT}\n                  - {code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE}\n                  - {code: INVALID_IPV4_PREFIX}\n                  - {code: SAME_IPV4_PREFIX}\n                  - {code: INVALID_IPADDRESS}\n                  - {code: DEFAULT_ROUTER_PREFIX_MISMATCH}\n                  - {code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS}\n                  - {code: LAN_NETWORK_ADD_FAILURE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new LAN (v3.0)\n      tags: [Network Constructs]\n  /v3.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/query:\n    post:\n      description: Query LAN networks that match query params\n      operationId: post-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-query\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/LANNetworkV3'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query LAN networks that match query params (v3.0)\n      tags: [Network Constructs]\n  /v3.0/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/{lannetwork_id}:\n    delete:\n      description: Delete an existing LAN\n      operationId: delete-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: LAN_NETWORK_IN_USE}\n                  - {code: LANNETWORK_IS_USED_IN_SECURITY_ZONES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an existing LAN (v3.0)\n      tags: [Network Constructs]\n    get:\n      description: Get LAN network\n      operationId: get-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3'}\n          description: Successful Operation\n      summary: Get LAN network (v3.0)\n      tags: [Network Constructs]\n    put:\n      description: Update an existing LAN\n      operationId: put-v3.0-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkScreenV3'}\n        description: Details of the network to be updated\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NO_LAN_NET_PREFIX}\n                  - {code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED}\n                  - {code: INVALID_NETWORK_CONTEXT}\n                  - {code: INVALID_IPV4_PREFIX}\n                  - {code: SAME_IPV4_PREFIX}\n                  - {code: INVALID_IPADDRESS}\n                  - {code: DEFAULT_ROUTER_PREFIX_MISMATCH}\n                  - {code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS}\n                  - {code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE}\n                  - {code: OVERLAPPING_LAN_NET_PREFIXES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update an existing LAN (v3.0)\n      tags: [Network Constructs]\n  /v3.1/api/tenants/{tenant_id}/lannetworks/query:\n    post:\n      description: Query db for Site LAN networks that match query parameters\n      operationId: post-v3.1-api-tenants-tenant_id-lannetworks-query\n      parameters:\n      - description: Tenant Id\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/LANNetworkQueryFilterResponse'}\n                      type: array\n                  type: object\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: BAD_REQUEST}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Query db for Site LAN networks that match query parameters (v3.1)\n      tags: [Network Constructs]\n  /v3.1/api/tenants/{tenant_id}/sites/{site_id}/lannetworks:\n    get:\n      description: Get LAN networks\n      operationId: get-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/BulkResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/LANNetworkV3N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Get LAN networks (v3.1)\n      tags: [Network Constructs]\n    post:\n      description: Create a new LAN\n      operationId: post-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkScreenV3N1'}\n        description: Details of the network to be created\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NO_LAN_NET_PREFIX}\n                  - {code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED}\n                  - {code: INVALID_NETWORK_CONTEXT}\n                  - {code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE}\n                  - {code: INVALID_IPV4_PREFIX}\n                  - {code: SAME_IPV4_PREFIX}\n                  - {code: INVALID_IPADDRESS}\n                  - {code: DEFAULT_ROUTER_PREFIX_MISMATCH}\n                  - {code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS}\n                  - {code: LAN_NETWORK_ADD_FAILURE}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Create a new LAN (v3.1)\n      tags: [Network Constructs]\n  /v3.1/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/query:\n    post:\n      description: Query LAN networks that match query params\n      operationId: post-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-query\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkQuery'}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                allOf:\n                - {$ref: '#/components/schemas/ListQueryResponse'}\n                - properties:\n                    items:\n                      items: {$ref: '#/components/schemas/LANNetworkQueryFilterV3N1'}\n                      type: array\n                  type: object\n          description: Successful Operation\n      summary: Query LAN networks that match query params (v3.1)\n      tags: [Network Constructs]\n  /v3.1/api/tenants/{tenant_id}/sites/{site_id}/lannetworks/{lannetwork_id}:\n    delete:\n      description: Delete an existing LAN\n      operationId: delete-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: LAN_NETWORK_IN_USE}\n                  - {code: LANNETWORK_IS_USED_IN_SECURITY_ZONES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Delete an existing LAN (v3.1)\n      tags: [Network Constructs]\n    get:\n      description: Get LAN network\n      operationId: get-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3N1'}\n          description: Successful Operation\n      summary: Get LAN network (v3.1)\n      tags: [Network Constructs]\n    put:\n      description: Update an existing LAN\n      operationId: put-v3.1-api-tenants-tenant_id-sites-site_id-lannetworks-lannetwork_id\n      parameters:\n      - description: tenant ID\n        in: path\n        name: tenant_id\n        required: true\n        schema: {description: Tenant Id, type: string}\n      - description: site ID\n        in: path\n        name: site_id\n        required: true\n        schema: {description: Site Id, type: string}\n      - description: LAN network ID\n        in: path\n        name: lannetwork_id\n        required: true\n        schema: {description: Lannetwork Id, type: string}\n      requestBody:\n        content:\n          application/json:\n            schema: {$ref: '#/components/schemas/LANNetworkScreenV3N1'}\n        description: Details of the network to be updated\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {$ref: '#/components/schemas/LANNetworkV3N1'}\n          description: Successful Operation\n        '400':\n          content:\n            application/json:\n              example:\n                value:\n                  _error:\n                  - {code: INVALID_JSON_EXTRA_ATTRIBUTE}\n                  - {code: INVALID_JSON_COMMON_ATTR_MISMATCH}\n                  - {code: INVALID_JSON_INPUT}\n                  - {code: NO_LAN_NET_PREFIX}\n                  - {code: ONLY_ONE_DEFAULT_ROUTER_SUPPORTED}\n                  - {code: INVALID_NETWORK_CONTEXT}\n                  - {code: INVALID_IPV4_PREFIX}\n                  - {code: SAME_IPV4_PREFIX}\n                  - {code: INVALID_IPADDRESS}\n                  - {code: DEFAULT_ROUTER_PREFIX_MISMATCH}\n                  - {code: SAME_IPV4_DEFAULT_ROUTER_ADDRESS}\n                  - {code: PREFIX_EXACT_MATCH_WITH_OTHER_SITE}\n                  - {code: OVERLAPPING_LAN_NET_PREFIXES}\n              schema: {$ref: '#/components/schemas/Error'}\n          description: Bad Request\n      summary: Update an existing LAN (v3.1)\n      tags: [Network Constructs]\ntags:\n- {name: Network Constructs}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/pan.dev@820763d86c198f9553b049962480e9c10040cdf4/-/blob/static/sase/spec/sdwan/legacy/NetworkConstructs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/pan.dev/blob/820763d86c198f9553b049962480e9c10040cdf4/static/sase/spec/sdwan/legacy/NetworkConstructs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v2.0/api/tenants/{tenant_id}/ipsecprofiles\": get: operation \"get-v2.0-api-tenants-tenant_id-ipsecprofiles\": parameters: parse parameter \"tenant_id\": at 1:51322: invalid schema:style:explode combination: (\"\":\"simple\":false)"
}