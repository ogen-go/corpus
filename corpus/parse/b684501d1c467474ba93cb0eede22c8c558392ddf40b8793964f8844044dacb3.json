{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Azure/azure-api-management-devops-resource-kit"
		},
		"file": {
			"name": "swaggerPetstorev3.json",
			"size": 0,
			"path": "tests/ArmTemplates.Tests/Resources/OpenAPISpecs/swaggerPetstorev3.json",
			"byteSize": 33599,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Swagger Petstore\",\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://petstore.swagger.io/v2\",\n      \"variables\": {}\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"updatePet\",\n        \"description\": \"Update an existing pet\",\n        \"operationId\": \"updatePet\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"addPet\",\n        \"description\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"findPetsByStatus\",\n        \"description\": \"Finds Pets by status\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Status6\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"findPetsByTags\",\n        \"description\": \"Finds Pets by tags\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"getPetById\",\n        \"description\": \"Find pet by ID\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"successful operation\",\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"updatePetWithForm\",\n        \"description\": \"Updates a pet in the store with form data\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"Updated name of the pet\",\n            \"required\": false,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Updated status of the pet\",\n            \"required\": false,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"deletePet\",\n        \"description\": \"Deletes a pet\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"description\": \"\",\n            \"required\": false,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploadFile\",\n        \"description\": \"uploads an image\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"query\",\n            \"description\": \"Additional data to pass to server\",\n            \"required\": false,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"file\",\n            \"in\": \"query\",\n            \"description\": \"file to upload\",\n            \"required\": false,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"object\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"successful operation\",\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"getInventory\",\n        \"description\": \"Returns pet inventories by status\",\n        \"operationId\": \"getInventory\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"description\": \"successful operation\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        },\n        \"deprecated\": false,\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"placeOrder\",\n        \"description\": \"Place an order for a pet\",\n        \"operationId\": \"placeOrder\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"order placed for purchasing the pet\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"order placed for purchasing the pet\",\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"successful operation\",\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid Order\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"getOrderById\",\n        \"description\": \"Find purchase order by ID\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"successful operation\",\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"deleteOrder\",\n        \"description\": \"Delete purchase order by ID\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"createUser\",\n        \"description\": \"Create user\",\n        \"operationId\": \"createUser\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"Created user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"Created user object\",\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"createUsersWithArrayInput\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"List of user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"description\": \"List of user object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"createUsersWithListInput\",\n        \"description\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"parameters\": [],\n        \"requestBody\": {\n          \"description\": \"List of user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"description\": \"List of user object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"loginUser\",\n        \"description\": \"Logs user into the system\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"logoutUser\",\n        \"description\": \"Logs out current logged in user session\",\n        \"operationId\": \"logoutUser\",\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"getUserByName\",\n        \"description\": \"Get user by user name\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing.\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"description\": \"successful operation\",\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"updateUser\",\n        \"description\": \"Updated user\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be updated\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Updated user object\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"Updated user object\",\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid user supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"deleteUser\",\n        \"description\": \"Delete user\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"allowEmptyValue\": false,\n            \"style\": \"matrix\",\n            \"explode\": false,\n            \"allowReserved\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"null\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"deprecated\": false,\n        \"security\": [],\n        \"x-operation-settings\": {\n          \"CollectParameters\": false,\n          \"AllowDynamicQueryParameters\": false,\n          \"AllowDynamicFormParameters\": false,\n          \"IsMultiContentStreaming\": false\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Order\": {\n        \"title\": \"Order\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"description\": \"Order Status\",\n            \"$ref\": \"#/components/schemas/Status\"\n          },\n          \"complete\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"Status\": {\n        \"title\": \"Status\",\n        \"enum\": [\n          \"placed\",\n          \"approved\",\n          \"delivered\"\n        ],\n        \"type\": \"string\"\n      },\n      \"Category\": {\n        \"title\": \"Category\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"User\": {\n        \"title\": \"User\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"description\": \"User Status\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"Tag\": {\n        \"title\": \"Tag\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Pet\": {\n        \"title\": \"Pet\",\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"description\": \"\"\n          },\n          \"status\": {\n            \"description\": \"pet status in the store\",\n            \"$ref\": \"#/components/schemas/Status6\"\n          }\n        }\n      },\n      \"Status6\": {\n        \"title\": \"Status6\",\n        \"enum\": [\n          \"available\",\n          \"pending\",\n          \"sold\"\n        ],\n        \"type\": \"string\"\n      },\n      \"ApiResponse\": {\n        \"title\": \"ApiResponse\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  },\n  \"security\": [\n    {}\n  ]\n}"
		}
	},
	"Error": "parse: parse spec: paths: /user/login: get: operation \"loginUser\": parameters: parse parameter \"username\": style: unexpected style: \"matrix\""
}