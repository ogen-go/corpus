{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "bbc.co.uk-1.0.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/bbc.co.uk-1.0.0-swagger.yaml",
			"byteSize": 185919,
			"content": "openapi: 3.0.0\ninfo:\n  description: We encapsulate Radio \u0026 Music business logic for iPlayer Radio and BBC Music\n    products on all platforms. We add value by reliably providing the right\n    blend of metadata needed by clients.\n  title: Radio \u0026 Music Services\n  version: 1.0.0\n  x-apisguru-categories:\n    - media\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/BBC_Radio_logo.svg/140px-BBC_Radio_logo.svg.png\n  x-origin:\n    - format: swagger\n      url: https://rms.api.bbc.co.uk/docs/swagger.json\n      version: \"2.0\"\n  x-providerName: bbc.co.uk\ntags:\n  - name: Experience\n  - description: \u003ca\n      href=\"https://confluence.dev.bbc.co.uk/display/RMServices/Playspace+API+Client+Documetation\"\u003eClient\n      Documentation\u003c/a\u003e\n    name: Playspace\n  - name: Categories\n  - name: Networks\n  - name: Broadcasts\n  - name: Collections\n  - name: Podcasts\n  - name: Programmes\n  - name: Personalised Categories\n  - name: Personalised Networks\n  - name: Personalised Plays\n  - name: Radio\n  - name: Music\n  - name: Music Export\npaths:\n  /broadcasts:\n    get:\n      description: |\n        All broadcasts\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Filter by Service ID. E.g. bbc_radio_fourfm\n          in: query\n          name: service_id\n          required: false\n          schema:\n            type: string\n        - description: Filter by date. E.g. 2016-06-17\n          in: query\n          name: date\n          required: false\n          schema:\n            type: string\n        - description: Sort by provided query. E.g. 'start_at' sorts in ascending order,\n            and '-start_at' sorts in descending order\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - start_at\n              - -start_at\n              - end_at\n              - -end_at\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastsResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Broadcasts\n      tags:\n        - Broadcasts\n  /broadcasts/latest:\n    get:\n      description: |\n        Broadcasts for the current day\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Filter by Service ID. E.g. bbc_radio_fourfm\n          in: query\n          name: service_id\n          required: false\n          schema:\n            type: string\n        - description: Filter what is on air. E.g. 'now' returns current programme being\n            broadcasted.\n          in: query\n          name: on_air\n          required: false\n          schema:\n            type: string\n            enum:\n              - now\n              - previous\n              - next\n        - description: Filter what will be on air next in minutes. E.g. '240' returns\n            programmes broadcasted in the next four hurs\n          in: query\n          name: next\n          required: false\n          schema:\n            type: string\n        - description: Filter what was on air previously in minutes. E.g. '240' returns\n            programmes broadcasted in the previous four hurs\n          in: query\n          name: previous\n          required: false\n          schema:\n            type: string\n        - description: Sort by provided query. E.g. 'start_at' sorts in ascending order,\n            and '-start_at' sorts in descending order\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - start_at\n              - -start_at\n              - end_at\n              - -end_at\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastsResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Latest Broadcasts\n      tags:\n        - Broadcasts\n  \"/broadcasts/{pid}\":\n    get:\n      description: |\n        Find broadcast by PID\n      operationId: getBroadcastByPid\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BroadcastsResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Broadcasts by PID\n      tags:\n        - Broadcasts\n  /categories:\n    get:\n      description: |\n        Retrieve Categories\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Filter by provided query. E.g. 'promoted' returns promoted categories\n          in: query\n          name: kind\n          required: false\n          schema:\n            type: string\n            enum:\n              - promoted\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoriesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryErrorResponse\"\n      summary: List of categories\n      tags:\n        - Categories\n  \"/categories/{id}\":\n    get:\n      description: |\n        Retrieve Categories by ID\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Retrieve information about the category. E.g.\n            'sport-football-europeanchampionship'\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoriesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CategoryErrorResponse\"\n      summary: Category by ID\n      tags:\n        - Categories\n  \"/collections/{pid}/members\":\n    get:\n      description: |\n        Episodes and Clips from Collection\n      operationId: getCollectionMembers\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProgrammesResponse\"\n        \"404\":\n          description: Collection not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Collection Members\n      tags:\n        - Collections\n  /experience/homepage:\n    get:\n      description: |\n        Homepage Experience\n      operationId: getExperienceHomepage\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExperienceResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Homepage Experience\n      tags:\n        - Experience\n  /music/popular/artists:\n    get:\n      description: |\n        List of Most Popular artists from BBC Music.\n      operationId: getMusicPopularArtists\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period\n            and now\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n            'until' date params\n          in: query\n          name: until\n          required: false\n          schema:\n            type: string\n        - description: In addition to the overall score, return a list of scores broken\n            down by day N.B Must be used in conjunction with since and/or until\n            and since is \u003e= 31 days\n          in: query\n          name: decomposed\n          required: false\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityArtists\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityError\"\n      summary: Popular Artists\n      tags:\n        - Music\n      servers:\n        - url: http://rms.api.bbc.co.uk/\n  \"/music/popular/artists/{id}\":\n    get:\n      description: |\n        Popularity Artist By Id\n      operationId: getMusicPopularArtistById\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period\n            and now\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n            'until' date params\n          in: query\n          name: until\n          required: false\n          schema:\n            type: string\n        - description: In addition to the overall score, return a list of scores broken\n            down by day N.B Must be used in conjunction with since and/or until\n            and since is \u003e= 31 days\n          in: query\n          name: decomposed\n          required: false\n          schema:\n            type: boolean\n        - description: MusicBrainz Id - Used to get single resource score\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityArtists\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityError\"\n      summary: Single Artist Popularity\n      tags:\n        - Music\n      servers:\n        - url: http://rms.api.bbc.co.uk/\n  /music/popular/playlists:\n    get:\n      description: |\n        List of Most Popular playlists from BBC Music.\n      operationId: getMusicPopularPlaylists\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period\n            and now\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n            'until' date params\n          in: query\n          name: until\n          required: false\n          schema:\n            type: string\n        - description: In addition to the overall score, return a list of scores broken\n            down by day N.B Must be used in conjunction with since and/or until\n            and since is \u003e= 31 days\n          in: query\n          name: decomposed\n          required: false\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityPlaylists\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityError\"\n      summary: Popular Playlists\n      tags:\n        - Music\n      servers:\n        - url: http://rms.api.bbc.co.uk/\n  \"/music/popular/playlists/{id}\":\n    get:\n      description: |\n        Popular playlist by Id\n      operationId: getMusicPopularPlaylistById\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period\n            and now\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n            'until' date params\n          in: query\n          name: until\n          required: false\n          schema:\n            type: string\n        - description: In addition to the overall score, return a list of scores broken\n            down by day N.B Must be used in conjunction with since and/or until\n            and since is \u003e= 31 days\n          in: query\n          name: decomposed\n          required: false\n          schema:\n            type: boolean\n        - description: BBC Music Playlist Id - Used to get single resource score\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityPlaylists\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityError\"\n      summary: Single Playlist Popularity\n      tags:\n        - Music\n      servers:\n        - url: http://rms.api.bbc.co.uk/\n  /music/popular/tracks:\n    get:\n      description: \u003e\n        List of popular tracks for BBC Music. Filter by time, network, artist,\n        playlist or programme.\n      operationId: getMusicPopularTracks\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period\n            and now\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n            'until' date params\n          in: query\n          name: until\n          required: false\n          schema:\n            type: string\n        - description: Return items with given Network ID\n          in: query\n          name: network\n          required: false\n          schema:\n            type: string\n        - description: Items with given Programme Pid\n          in: query\n          name: programme\n          required: false\n          schema:\n            type: string\n        - description: MusicBrainz artist ID\n          in: query\n          name: artist\n          required: false\n          schema:\n            type: string\n        - description: In addition to the overall score, return a list of scores broken\n            down by day N.B Must be used in conjunction with since and/or until\n            and since is \u003e= 31 days\n          in: query\n          name: decomposed\n          required: false\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityTracks\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityError\"\n      summary: Popular Tracks\n      tags:\n        - Music\n      servers:\n        - url: http://rms.api.bbc.co.uk/\n  \"/music/popular/tracks/{id}\":\n    get:\n      description: |\n        Popular Track for BBC Music\n      operationId: getMusicPopularTrackById\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period\n            and now\n          in: query\n          name: since\n          required: false\n          schema:\n            type: string\n        - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n            'until' date params\n          in: query\n          name: until\n          required: false\n          schema:\n            type: string\n        - description: Return items with given Network ID\n          in: query\n          name: network\n          required: false\n          schema:\n            type: string\n        - description: Items with given Programme Pid\n          in: query\n          name: programme\n          required: false\n          schema:\n            type: string\n        - description: MusicBrainz artist ID\n          in: query\n          name: artist\n          required: false\n          schema:\n            type: string\n        - description: In addition to the overall score, return a list of scores broken\n            down by day N.B Must be used in conjunction with since and/or until\n            and since is \u003e= 31 days\n          in: query\n          name: decomposed\n          required: false\n          schema:\n            type: boolean\n        - description: BBC Music Track Id - Used to get single resource score\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityTracks\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicPopularityError\"\n      summary: Single Track Popularity\n      tags:\n        - Music\n      servers:\n        - url: http://rms.api.bbc.co.uk/\n  /my/categories/follows:\n    delete:\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Body_1\"\n        required: true\n      responses:\n        \"202\":\n          description: Request successfully sent to UAS.\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Unfollow category\n      tags:\n        - Personalised Categories\n    get:\n      description: |\n        List of followed categories for a given user.\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedCategoriesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: List of followed categories\n      tags:\n        - Personalised Categories\n    post:\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Body\"\n        required: true\n      responses:\n        \"202\":\n          description: Request successfully sent to UAS.\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Follow category\n      tags:\n        - Personalised Categories\n  /my/music/export:\n    get:\n      description: \u003e\n        Returns status of all previous third party export actions for a given\n        BBC Music user.\n      operationId: getMusicExport\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportJob\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Exports\n      tags:\n        - Music Export\n  /my/music/exports/jobs:\n    get:\n      description: |\n        All items associated to a users export request\n      operationId: getMusicExportJobs\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Boolean age check\n          in: query\n          name: over16\n          required: true\n          schema:\n            type: boolean\n        - description: Specify Vendor Jobs\n          in: query\n          name: vendor\n          required: false\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportJob\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Jobs\n      tags:\n        - Music Export\n    post:\n      description: |\n        Create Export Job for a user\n      operationId: postMusicExportJob\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Boolean age check\n          in: query\n          name: over16\n          required: true\n          schema:\n            type: boolean\n        - description: Specify Vendor Jobs\n          in: query\n          name: vendor\n          required: false\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/MusicExportJob\"\n              type: array\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Jobs\n      tags:\n        - Music Export\n  /my/music/exports/tracks:\n    get:\n      description: |\n        Retrieves vendor and status specific tracks\n      operationId: getMusicExportTracks\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Boolean age check\n          in: query\n          name: over16\n          required: true\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Specify Vendor Tracks\n          in: query\n          name: vendor\n          required: false\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n        - description: Specify Track status\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n            enum:\n              - failed\n              - done\n              - pending\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportJob\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Tracks\n      tags:\n        - Music Export\n  /my/music/favourites:\n    get:\n      description: |\n        List of favourited tracks and clips for a given user for BBC Music.\n      operationId: getPersonalisedMusicFavourites\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Filters activities based on the type of action\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum:\n              - favourited\n              - unfavourited\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Tracks or Clips\n      tags:\n        - Music\n    post:\n      description: |\n        Add multiple tracks and/or clips to a BBC Music user's favourites.\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedMusicFavouritesBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicBatchRequestArray\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Tracks or Clips\n      tags:\n        - Music\n    put:\n      description: |\n        Update tracks or clips from a BBC Music user favourites.\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedMusicFavouritesBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicBatchRequestArray\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Tracks or Clips\n      tags:\n        - Music\n  \"/my/music/favourites/{type}\":\n    get:\n      description: |\n        List of favourited tracks or clips for a given user for BBC Music.\n      operationId: getPersonalisedMusicFavouritesByType\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music favourite types: Clips or Tracks\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - tracks\n        - description: Filters activities based on the type of action\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum:\n              - favourited\n              - unfavourited\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Tracks or Clips by Type\n      tags:\n        - Music\n  \"/my/music/favourites/{type}/{id}\":\n    delete:\n      description: |\n        Delete track or clip from a BBC Music user favourites.\n      operationId: deletePersonalisedMusicFavouritesByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music favourite types: Clips or Tracks\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - tracks\n        - description: Clip PID or Track ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Track or Clip\n      tags:\n        - Music\n    get:\n      description: \u003e\n        Check to see if a single track or clip entity is in a users favourites -\n        determines UX of add button.\n      operationId: getPersonalisedMusicFavouritesByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music favourite types: Clips or Tracks\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - tracks\n        - description: Clip PID or Track ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Track or Clip\n      tags:\n        - Music\n    post:\n      description: |\n        Add track or clip to a BBC Music user favourites.\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedMusicFavouritesByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music favourite types: Clips or Tracks\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - tracks\n        - description: Clip PID or Track ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicRequest2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Track or Clip\n      tags:\n        - Music\n    put:\n      description: |\n        Update tracks or clips from a BBC Music user favourites.\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedMusicFavouritesByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music favourite types: Clips or Tracks\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - tracks\n        - description: Clip PID or Track ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicRequest2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Favourite Track or Clip\n      tags:\n        - Music\n  /my/music/follows:\n    get:\n      description: \u003e\n        List of followed networks, categories, artists, playlists and genres for\n        a given user for BBC Music.\n      operationId: getPersonalisedMusicFollows\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Filters activities based on the type of action\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum:\n              - followed\n              - unfollowed\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Networks, Categories, Artists, Playlists and Genres\n      tags:\n        - Music\n    post:\n      description: \u003e\n        Add networks, categories, artists, playlists, networks, genres or\n        services in a users follows\n\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedMusicFollowsBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Filters activities based on the type of action\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum:\n              - followed\n              - unfollowed\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicBatchRequestArray2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Networks, Categories, Artists, Playlists and Genres\n      tags:\n        - Music\n    put:\n      description: \u003e\n        Update networks, categories, artists, playlists, networks, genres or\n        services in a users follows\n\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedMusicFollowsBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Filters activities based on the type of action\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum:\n              - followed\n              - unfollowed\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicBatchRequestArray2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Networks, Categories, Artists, Playlists and Genres\n      tags:\n        - Music\n  \"/my/music/follows/{type}\":\n    get:\n      description: \u003e\n        List of followed networks, categories, artists, playlists, networks,\n        genres, categories or services for a given BBC Music user.\n      operationId: getPersonalisedMusicFollowsByType\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music follows types: Playlists, Services, Genres \u0026\n            Artists\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - playlists\n              - services\n              - networks\n              - genres\n              - categories\n              - artists\n        - description: Filters activities based on the type of action\n          in: query\n          name: action\n          required: false\n          schema:\n            type: string\n            enum:\n              - followed\n              - unfollowed\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Networks, Categories, Artists, Playlists and Genres by Type\n      tags:\n        - Music\n  \"/my/music/follows/{type}/{id}\":\n    delete:\n      description: \u003e\n        Remove a single network, category, artist, playlist, network, genre or\n        service entity is in a users follows\n      operationId: deletePersonalisedMusicFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music follows types: Playlists, Services, Genres \u0026\n            Artists\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - playlists\n              - services\n              - networks\n              - genres\n              - categories\n              - artists\n        - description: Playlists, Services, Networks, Genres, Categories or Artists ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Network, Category, Artist, Playlist and Genre\n      tags:\n        - Music\n    get:\n      description: \u003e\n        Check to see if a single network, category, artist, playlist, network,\n        genre or service entity is in a users follows - determines UX of add\n        button.\n      operationId: getPersonalisedMusicFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music follows types: Playlists, Services, Genres \u0026\n            Artists\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - playlists\n              - services\n              - networks\n              - genres\n              - categories\n              - artists\n        - description: Playlists, Services, Networks, Genres, Categories or Artists ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Network, Category, Artist, Playlist and Genre\n      tags:\n        - Music\n    post:\n      description: \u003e\n        Add a single network, category, artist, playlist, network, genre or\n        service entity is in a users follows\n\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedMusicFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music follows types: Playlists, Services, Genres \u0026\n            Artists\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - playlists\n              - services\n              - networks\n              - genres\n              - categories\n              - artists\n        - description: Playlists, Services, Networks, Genres, Categories or Artists ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Network, Category, Artist, Playlist and Genre\n      tags:\n        - Music\n    put:\n      description: \u003e\n        Update a single network, category, artist, playlist, network, genre or\n        service entity is in a users follows\n\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedMusicFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Music follows types: Playlists, Services, Genres \u0026\n            Artists\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - playlists\n              - services\n              - networks\n              - genres\n              - categories\n              - artists\n        - description: Playlists, Services, Networks, Genres, Categories or Artists ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Omits music data from the response, defaults to true\n          in: query\n          name: music-data\n          required: false\n          schema:\n            type: boolean\n        - description: Specify context to be passed to Music API\n          in: query\n          name: music_context\n          required: false\n          schema:\n            type: string\n            enum:\n              - events\n              - ivote\n              - music\n              - musicplaylist\n              - programmes\n              - radio\n              - unknown\n        - description: Specify location to be passed to Music API\n          in: query\n          name: music_within_uk\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedMusicRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedMusicErrorResponse\"\n      summary: Followed Network, Category, Artist, Playlist and Genre\n      tags:\n        - Music\n  /my/music/preferences/export:\n    delete:\n      description: \u003e\n        Remove export preferences (e.g. 3rd party vendors, partner id's) for a\n        given BBC Music user.\n      operationId: deleteMusicPreferencesExport\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Preferences\n      tags:\n        - Music Export\n    get:\n      description: \u003e\n        Returns export preferences (e.g. 3rd party vendors, partner id's) for a\n        given BBC Music user.\n      operationId: getMusicPreferencesExport\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportPreferencesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Preferences\n      tags:\n        - Music Export\n    post:\n      description: \u003e\n        Create export preferences (e.g. 3rd party vendors, partner id's) for a\n        given BBC Music user.\n      operationId: postMusicPreferencesExport\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/MusicExportPreferences\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportSuccess\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Preferences\n      tags:\n        - Music Export\n  \"/my/music/preferences/export/{vendor}\":\n    delete:\n      description: \u003e\n        Remove Vendor specific export preferences (e.g. 3rd party vendors,\n        partner id's) for a given BBC Music user.\n      operationId: deleteMusicPreferencesExportVendor\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Supported 3rd Party Vendor\n          in: path\n          name: vendor\n          required: true\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Vendor Preferences\n      tags:\n        - Music Export\n    get:\n      description: |\n        Returns vendor specific export preferences for a given BBC Music user.\n      operationId: getMusicPreferencesExportVendor\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Supported 3rd Party Vendor\n          in: path\n          name: vendor\n          required: true\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportPreferencesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Vendor Preferences\n      tags:\n        - Music Export\n    post:\n      description: \u003e\n        Create Vendor specific export preferences (e.g. 3rd party vendors,\n        partner id's) for a given BBC Music user.\n      operationId: postMusicPreferencesExportVendor\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Supported 3rd Party Vendor\n          in: path\n          name: vendor\n          required: true\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n      requestBody:\n        $ref: \"#/components/requestBodies/MusicExportPreferences\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Vendor Preferences\n      tags:\n        - Music Export\n    put:\n      description: |\n        Update vendor specific export preferences for a given BBC Music user.\n      operationId: putMusicPreferencesExportVendor\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Supported 3rd Party Vendor\n          in: path\n          name: vendor\n          required: true\n          schema:\n            type: string\n            enum:\n              - spotify\n              - deezer\n              - youtube\n              - itunes\n      requestBody:\n        $ref: \"#/components/requestBodies/MusicExportPreferences\"\n      responses:\n        \"200\":\n          description: OK\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MusicExportErrorResponse\"\n      summary: Music Export Vendor Preferences\n      tags:\n        - Music Export\n  /my/networks/follows:\n    delete:\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Body_3\"\n        required: true\n      responses:\n        \"202\":\n          description: Request successfully sent to UAS.\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Unfollow network\n      tags:\n        - Personalised Networks\n    get:\n      description: |\n        List of followed networks for a given user.\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedNetworksResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: List of followed networks\n      tags:\n        - Personalised Networks\n    post:\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Body_2\"\n        required: true\n      responses:\n        \"202\":\n          description: Request successfully sent to UAS.\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Follow network\n      tags:\n        - Personalised Networks\n  /my/plays:\n    post:\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Body_4\"\n        required: true\n      responses:\n        \"202\":\n          description: Request successfully sent to UAS.\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Write Play Event\n      tags:\n        - Personalised Plays\n  /my/playspace/containers/suggested:\n    get:\n      description: |\n        Suggested Playspace Container\n      operationId: suggestContainer\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Clip or Episode PID of the previous or first content item in the\n            Playspace stream.\n          in: query\n          name: previous_pid\n          required: true\n          schema:\n            type: string\n        - description: Container ID of the previous container in the Playspace stream.\n          in: query\n          name: previous_container\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlayspaceContainer\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Suggested Playspace Container\n      tags:\n        - Playspace\n  \"/my/playspace/containers/{id}\":\n    get:\n      description: |\n        Playspace Container by ID\n      operationId: getContainer\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Playspace Container ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PlayspaceContainer\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        \"404\":\n          description: No Playspace container with given ID could be found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Playspace Container by ID\n      tags:\n        - Playspace\n  /my/programmes/recommendations:\n    get:\n      description: \u003e\n        Recommended Programmes from the Audience Platforms' Recomendations\n        Service\n      operationId: getRecommendations\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Only return available results for the web/mobile.\n          in: query\n          name: rights\n          required: true\n          schema:\n            type: string\n            enum:\n              - web\n              - mobile\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProgrammesResponse\"\n        \"401\":\n          description: There was an error with the supplied `Authorization` header.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n      summary: Recommended Programmes\n      tags:\n        - Programmes\n  /my/radio/favourites:\n    get:\n      description: \u003e\n        List of favourited episodes and clips for a given user for iPlayer\n        Radio.\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getPersonalisedRadioFavourites\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Sort order for Personalised Radio results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - programme_titles\n              - available_from_date\n              - available_to_date\n        - description: Include items which have been 'soft' unfavourited in response. I.e\n            items with UAS type of 'unfavourited'\n          in: query\n          name: show_all_activity\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episodes and Clips\n      tags:\n        - Radio\n    post:\n      description: |\n        Add User favourites\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedRadioBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioBatchRequestArray\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episodes and Clips\n      tags:\n        - Radio\n    put:\n      description: |\n        Update user favourites\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedRadioBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioBatchRequestArray\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episodes and Clips\n      tags:\n        - Radio\n  \"/my/radio/favourites/{type}\":\n    get:\n      description: \u003e\n        List of followed 'clips' or 'episode' items for a given iPlayer Radio\n        user\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getPersonalisedRadioFavouritesByType\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio favourite types: Clips or Episodes\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - episodes\n        - description: Sort order for Personalised Radio results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - programme_titles\n              - available_from_date\n              - available_to_date\n        - description: Include items which have been 'soft' unfavourited in response. I.e\n            items with UAS type of 'unfavourited'\n          in: query\n          name: show_all_activity\n          required: false\n          schema:\n            type: boolean\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episodes and Clips by Type\n      tags:\n        - Radio\n  \"/my/radio/favourites/{type}/{pid}\":\n    delete:\n      description: |\n        Remove User favourite\n      operationId: deletePersonalisedRadioByActivityTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio favourite types: Clips or Episodes\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - episodes\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episode or Clip\n      tags:\n        - Radio\n    get:\n      description: \u003e\n        Check to see if a single clip or episode entity is in a users favourites\n        - determines UX of add button.\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getPersonalisedRadioByActivityTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio favourite types: Clips or Episodes\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - episodes\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n        - description: Include items which have been 'soft' unfavourited in response. I.e\n            items with UAS type of 'unfavourited'\n          in: query\n          name: show_all_activity\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episode or Clip\n      tags:\n        - Radio\n    post:\n      description: |\n        Add User favourite\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedRadioByActivityTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio favourite types: Clips or Episodes\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - episodes\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episode or Clip\n      tags:\n        - Radio\n    put:\n      description: |\n        Update user favourite\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedRadioByActivityTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio favourite types: Clips or Episodes\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - clips\n              - episodes\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Favourite Episode or Clip\n      tags:\n        - Radio\n  /my/radio/follows:\n    get:\n      description: \u003e\n        List of favourited brands and series for a given user for iPlayer Radio.\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getPersonalisedRadioFollows\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Sort order for Personalised Radio results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - programme_titles\n              - available_from_date\n              - available_to_date\n        - description: Include items which have been 'soft' unfollowed in response. I.e\n            items with UAS type of 'unfollowed'\n          in: query\n          name: show_all_activity\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brands and Series\n      tags:\n        - Radio\n    post:\n      description: |\n        Add 'brand' or 'series' items to a users iPlayer Radio follows\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedRadioFollowsBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioBatchRequestArray2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brands and Series\n      tags:\n        - Radio\n    put:\n      description: |\n        Update 'brands' or 'series' items from a users iPlayer Radio follows\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedRadioFollowsBatch\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioBatchRequestArray2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brands and Series\n      tags:\n        - Radio\n  \"/my/radio/follows/{type}\":\n    get:\n      description: \u003e\n        List of followed 'brand' or 'series' items for a given iPlayer Radio\n        user\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getPersonalisedRadioFollowsByType\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio follows types: Brands or Series\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - brands\n              - series\n        - description: Sort order for Personalised Radio results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - programme_titles\n              - available_from_date\n              - available_to_date\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Include items which have been 'soft' unfollowed in response. I.e\n            items with UAS type of 'unfollowed'\n          in: query\n          name: show_all_activity\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brands or Series by Type\n      tags:\n        - Radio\n  \"/my/radio/follows/{type}/{pid}\":\n    delete:\n      description: |\n        Remove 'brand' or 'series' items from a users iPlayer Radio follows\n      operationId: deletePersonalisedRadioFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio follows types: Brands or Series\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - brands\n              - series\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brand or Series\n      tags:\n        - Radio\n    get:\n      description: \u003e\n        Check to see if a single brand or series entity is in a users follows -\n        determines UX of add button.\n      operationId: getPersonalisedRadioFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio follows types: Brands or Series\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - brands\n              - series\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brand or Series\n      tags:\n        - Radio\n    post:\n      description: |\n        Add 'brand' or 'series' items from a users iPlayer Radio follows\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: postPersonalisedRadioFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio follows types: Brands or Series\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - brands\n              - series\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioRequest2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brand or Series\n      tags:\n        - Radio\n    put:\n      description: |\n        Update 'brand' or 'series' items from a users iPlayer Radio follows\n\n        N.B. Any HTML tags submitted in metadata will be removed\n      operationId: putPersonalisedRadioFollowsByTypeById\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: \"Supported Radio follows types: Brands or Series\"\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n            enum:\n              - brands\n              - series\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/PersonalisedRadioRequest2\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioSuccessResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Followed Brand or Series\n      tags:\n        - Radio\n  /my/radio/plays:\n    get:\n      description: \u003e\n        Returns mixed episode and clip plays for a given BBC iPlayer radio user.\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getPersonalisedRadioPlays\n      parameters:\n        - description: Bearer OAUTH_TOKEN\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n            default: Bearer OAUTH_TOKEN\n        - description: Authentication type\n          in: header\n          name: X-Authentication-Provider\n          required: true\n          schema:\n            type: string\n            default: idv5\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Sort order for Personalised Radio results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - programme_titles\n              - available_from_date\n              - available_to_date\n        - description: Include expired/unavailable items\n          in: query\n          name: show_all_activity\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PersonalisedRadioErrorResponse\"\n      summary: Played Episode or Clip\n      tags:\n        - Radio\n  /podcasts:\n    get:\n      description: |\n        Retrieve all Podcasts\n      operationId: getPodcasts\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: Sort order for Podcasts results\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - title\n              - -title\n              - available_from_date\n              - -available_from_date\n        - description: Network Master Brand ID (mid)\n          in: query\n          name: network\n          required: false\n          schema:\n            type: string\n        - description: Network URL key\n          in: query\n          name: network_url_key\n          required: false\n          schema:\n            type: string\n        - description: Category ID\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Search query String\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: Local, National or Regional Coverage\n          in: query\n          name: coverage\n          required: false\n          schema:\n            type: string\n            enum:\n              - local\n              - national\n              - regional\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastsResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastErrorResponse\"\n      summary: All Podcasts\n      tags:\n        - Podcasts\n  /podcasts/featured:\n    get:\n      description: |\n        Retrieve featured podcasts\n      operationId: getPodcastsFeatured\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastsFeaturedResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastErrorResponse\"\n      summary: Featured Podcasts\n      tags:\n        - Podcasts\n  \"/podcasts/{pid}\":\n    get:\n      description: |\n        Retrieve data about the podcast with the supplied PID\n      operationId: getPodcastByPid\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastsResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastErrorResponse\"\n      summary: Podcast\n      tags:\n        - Podcasts\n  \"/podcasts/{pid}/episodes\":\n    get:\n      description: |\n        Retrieve all episodes for a specific podcast\n      operationId: getPodcastEpisodes\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n        - description: Paginated results offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n        - description: Paginated results limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastEpisodesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PodcastErrorResponse\"\n      summary: Podcast Episodes\n      tags:\n        - Podcasts\n  /radio/networks.json:\n    get:\n      description: \u003e\n        All iPlayer Radio networks - contains business logic for masterbrand and\n        service relationships\n      operationId: getRadioNetworks\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Returns all networks needed for iPlayer Radio responsive web\n            navigation\n          in: query\n          name: preset\n          required: false\n          schema:\n            type: boolean\n        - description: Returns all networks available internationally\n          in: query\n          name: international\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NetworksResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RadioErrorResponse\"\n      summary: Networks\n      tags:\n        - Networks\n  /radio/popular:\n    get:\n      description: |\n        Retrieve Popular Episodes \u0026 Clips\n      operationId: getPopularEpisodesClips\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Programme type required. Accepts comma separated values\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - episode\n              - clip\n              - episode,clip\n        - description: Filter by deduplication rule. E.g. 'tleo' returns programmes with\n            distinct top level episode objects\n          in: query\n          name: distinct\n          required: false\n          schema:\n            type: string\n            enum:\n              - tleo\n        - description: Filter by network master brand ID (mid). Accepts comma separated\n            values\n          in: query\n          name: network\n          required: false\n          schema:\n            type: string\n        - description: Filter by network URL key. Accepts comma separated values\n          in: query\n          name: network_url_key\n          required: false\n          schema:\n            type: string\n        - description: Filter by category. Accepts comma separated values\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Filter by format. Accepts comma separated values\n          in: query\n          name: format\n          required: false\n          schema:\n            type: string\n        - description: Filter by group. Accepts comma separated values\n          in: query\n          name: group\n          required: false\n          schema:\n            type: string\n            enum:\n              - tv\n              - radio\n              - tv,radio\n        - description: Filter by programme media type. Accepts comma separated values\n          in: query\n          name: media_type\n          required: false\n          schema:\n            type: string\n            enum:\n              - audio\n              - video\n              - audio,video\n        - description: Filter by container. Accepts any pid e.g. brand,series,episode\n          in: query\n          name: container\n          required: false\n          schema:\n            type: string\n        - description: \"Filter by media set name. Accepts comma separated combinations of\n            the following:\n            pc,mobile-download,android-download-high,apple-ios-download-high,mo\\\n            bile-cellular-main,mobile-phone-main,iptv-all\"\n          in: query\n          name: media_set\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items: {}\n            enum:\n              - pc\n              - mobile-download\n              - android-download-high\n              - apple-ios-download-high\n              - mobile-cellular-main\n              - mobile-phone-main\n              - iptv-all\n        - description: Search query String\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PopularResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PopularErrorResponse\"\n      summary: Popular Episodes \u0026 Clips\n      tags:\n        - Programmes\n  /radio/programmes:\n    get:\n      description: \u003e\n        Provides a paginated list of programmes by PID (brand, series, episode\n        and clip). Accepts various filters and sorting methods.\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getRadioProgrammes\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: Filter by provided query. E.g. 'tleo' returns top level objects, ie.\n            brands, orphaned series, and orphaned episodes\n          in: query\n          name: kind\n          required: false\n          schema:\n            type: string\n            enum:\n              - tleo\n        - description: Filter by network master brand ID (mid). Accepts comma separated\n            values\n          in: query\n          name: network\n          required: false\n          schema:\n            type: string\n        - description: Filter by network URL key. Accepts comma separated values\n          in: query\n          name: network_url_key\n          required: false\n          schema:\n            type: string\n        - description: Filter by category id. Accepts comma separated values. See /category\n            endpoint below for the type of response provided\n          in: query\n          name: category\n          required: false\n          schema:\n            type: string\n        - description: Sort by provided query. E.g. 'title' sorts in ascending order, and\n            -title sorts in descending order\n          in: query\n          name: sort\n          required: false\n          schema:\n            type: string\n            enum:\n              - available_from_date\n              - -available_from_date\n              - title\n              - -title\n        - description: Filter by container. Accepts any brand or series pid\n          in: query\n          name: container\n          required: false\n          schema:\n            type: string\n        - description: Filter by programme type. Accepts comma separated values\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            enum:\n              - brand\n              - series\n              - episode\n              - clip\n              - episode,clip\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProgrammesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RadioErrorResponse\"\n      summary: Radio programmes\n      tags:\n        - Programmes\n  \"/radio/programmes/{pid}\":\n    get:\n      description: \u003e\n        Find programmes by PID (brand, series, episode and clip)\n\n\n        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode\n\n        and Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for\n         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification\n      operationId: getRadioProgrammesByPid\n      parameters:\n        - description: API_KEY\n          in: header\n          name: X-API-Key\n          required: true\n          schema:\n            type: string\n        - description: pid\n          in: path\n          name: pid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProgrammesResponse\"\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RadioErrorResponse\"\n      summary: Available radio programme by Pid\n      tags:\n        - Programmes\nservers:\n  - url: https://rms.api.bbc.co.uk/\ncomponents:\n  parameters:\n    Authorization:\n      description: Bearer OAUTH_TOKEN\n      in: header\n      name: Authorization\n      required: true\n      schema:\n        type: string\n        default: Bearer OAUTH_TOKEN\n    X-API-Key:\n      description: API_KEY\n      in: header\n      name: X-API-Key\n      required: true\n      schema:\n        type: string\n    X-Authentication-Provider:\n      description: Authentication type\n      in: header\n      name: X-Authentication-Provider\n      required: true\n      schema:\n        type: string\n        default: idv5\n    artist:\n      description: MusicBrainz artist ID\n      in: query\n      name: artist\n      required: false\n      schema:\n        type: string\n    category:\n      description: Category ID\n      in: query\n      name: category\n      required: false\n      schema:\n        type: string\n    coverage:\n      description: Local, National or Regional Coverage\n      in: query\n      name: coverage\n      required: false\n      schema:\n        type: string\n        enum:\n          - local\n          - national\n          - regional\n    decomposed:\n      description: In addition to the overall score, return a list of scores broken down by\n        day N.B Must be used in conjunction with since and/or until and since is\n        \u003e= 31 days\n      in: query\n      name: decomposed\n      required: false\n      schema:\n        type: boolean\n    limit:\n      description: Paginated results limit\n      in: query\n      name: limit\n      required: false\n      schema:\n        type: integer\n    network:\n      description: Return items with given Network ID\n      in: query\n      name: network\n      required: false\n      schema:\n        type: string\n    offset:\n      description: Paginated results offset\n      in: query\n      name: offset\n      required: false\n      schema:\n        type: integer\n    over16:\n      description: Boolean age check\n      in: query\n      name: over16\n      required: true\n      schema:\n        type: boolean\n    pid:\n      description: pid\n      in: path\n      name: pid\n      required: true\n      schema:\n        type: string\n    programme:\n      description: Items with given Programme Pid\n      in: query\n      name: programme\n      required: false\n      schema:\n        type: string\n    q:\n      description: Search query String\n      in: query\n      name: q\n      required: false\n      schema:\n        type: string\n    rights:\n      description: Only return available results for the web/mobile.\n      in: query\n      name: rights\n      required: true\n      schema:\n        type: string\n        enum:\n          - web\n          - mobile\n    since:\n      description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period and\n        now\n      in: query\n      name: since\n      required: false\n      schema:\n        type: string\n    sort:\n      description: Sort order for Podcasts results\n      in: query\n      name: sort\n      required: false\n      schema:\n        type: string\n        enum:\n          - title\n          - -title\n          - available_from_date\n          - -available_from_date\n    until:\n      description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since' and\n        'until' date params\n      in: query\n      name: until\n      required: false\n      schema:\n        type: string\n  requestBodies:\n    PersonalisedRadioBatchRequestArray:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/PersonalisedRadioBatchRequest\"\n            type: array\n      description: Action favourited or unfavourited\n      required: true\n    PersonalisedMusicRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PersonalisedMusicRequest\"\n      description: Action followed or unfollowed\n      required: true\n    PersonalisedMusicBatchRequestArray:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/PersonalisedMusicBatchRequest\"\n            type: array\n      description: Action favourited or unfavourited\n      required: true\n    PersonalisedMusicRequest2:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PersonalisedMusicRequest\"\n      description: Action favourited or unfavourited\n      required: true\n    PersonalisedMusicBatchRequestArray2:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/PersonalisedMusicBatchRequest\"\n            type: array\n      description: Action followed or unfollowed\n      required: true\n    MusicExportPreferences:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/MusicExportPreferences\"\n      required: true\n    PersonalisedRadioRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PersonalisedRadioRequest\"\n      description: Action favourited or unfavourited\n      required: true\n    PersonalisedRadioBatchRequestArray2:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/PersonalisedRadioBatchRequest\"\n            type: array\n      description: Action followed or unfollowed\n      required: true\n    PersonalisedRadioRequest2:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PersonalisedRadioRequest\"\n      description: Action followed or unfollowed\n      required: true\n  schemas:\n    AncestorSummary:\n      properties:\n        ancestor_type:\n          type: string\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        titles:\n          $ref: \"#/components/schemas/AncestorTitles\"\n        type:\n          type: string\n      required:\n        - ancestor_type\n        - id\n        - images\n        - titles\n        - type\n      type: object\n    AncestorTitles:\n      properties:\n        title:\n          type: string\n        type:\n          type: string\n      required:\n        - title\n        - type\n      type: object\n    AvailableVersions:\n      properties:\n        available:\n          type: string\n        available_from_date:\n          type: string\n        available_to_date:\n          type: string\n        duration:\n          type: string\n        has_guidance:\n          type: boolean\n        media_set:\n          type: string\n        type:\n          type: string\n        version_pid:\n          type: string\n        version_type:\n          type: string\n      required:\n        - available\n        - available_from_date\n        - available_to_date\n        - duration\n        - has_guidance\n        - media_set\n        - type\n        - version_pid\n        - version_type\n      type: object\n    Body:\n      properties:\n        category_id:\n          type: string\n        platform:\n          enum:\n            - responsiveweb\n            - app\n          type: string\n      required:\n        - category_id\n        - platform\n      type: object\n    Body_1:\n      properties:\n        category_id:\n          type: string\n        platform:\n          enum:\n            - responsiveweb\n            - app\n          type: string\n      required:\n        - category_id\n        - platform\n      type: object\n    Body_2:\n      properties:\n        platform:\n          enum:\n            - responsiveweb\n            - app\n          type: string\n        service_id:\n          type: string\n      required:\n        - platform\n        - service_id\n      type: object\n    Body_3:\n      properties:\n        platform:\n          enum:\n            - responsiveweb\n            - app\n          type: string\n        service_id:\n          type: string\n      required:\n        - platform\n        - service_id\n      type: object\n    Body_4:\n      properties:\n        action:\n          enum:\n            - started\n            - ended\n            - paused\n            - heartbeat\n          type: string\n        elapsed_time:\n          type: integer\n        pid:\n          type: string\n        resource_type:\n          enum:\n            - episode\n            - clip\n          type: string\n        version_pid:\n          type: string\n      required:\n        - action\n        - elapsed_time\n        - pid\n        - resource_type\n        - version_pid\n      type: object\n    BrandSummary:\n      properties:\n        available_versions:\n          items:\n            $ref: \"#/components/schemas/AvailableVersions\"\n          type: array\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        latest_available_episodes:\n          items:\n            $ref: \"#/components/schemas/EpisodeSummary\"\n          type: array\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        short_synopsis:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        total_available_episodes:\n          type: integer\n        type:\n          enum:\n            - brand_summary\n          type: string\n      required:\n        - images\n        - latest_available_episodes\n        - network_summary\n        - pid\n        - short_synopsis\n        - titles\n        - total_available_episodes\n        - type\n      type: object\n    Broadcast:\n      properties:\n        duration:\n          type: integer\n        end:\n          type: string\n        is_audio_described:\n          type: boolean\n        is_blanked:\n          type: boolean\n        is_critical:\n          type: boolean\n        is_live:\n          type: boolean\n        is_repeat:\n          type: boolean\n        is_webcast:\n          type: boolean\n        pid:\n          type: string\n        programme:\n          $ref: \"#/components/schemas/ProgrammeSummary\"\n        service_id:\n          type: string\n        start:\n          type: string\n        type:\n          type: string\n        version_pid:\n          type: string\n      required:\n        - duration\n        - end\n        - is_audio_described\n        - is_blanked\n        - is_critical\n        - is_live\n        - is_repeat\n        - is_webcast\n        - pid\n        - service_id\n        - start\n        - type\n        - version_pid\n      type: object\n    BroadcastsResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/Broadcast\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    CategoriesResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/Category\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    Category:\n      properties:\n        category_type:\n          type: string\n        child_categories:\n          items:\n            $ref: \"#/components/schemas/ChildCategory\"\n          type: array\n        depth:\n          type: integer\n        id:\n          type: string\n        pip_id:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        url_key:\n          type: string\n      required:\n        - category_type\n        - child_categories\n        - depth\n        - id\n        - pip_id\n        - title\n        - type\n        - url_key\n      type: object\n    CategoryError:\n      properties:\n        href:\n          type: string\n        id:\n          type: string\n        message:\n          type: string\n        replied_at:\n          type: string\n        status:\n          type: integer\n      required:\n        - href\n        - id\n        - message\n        - replied_at\n        - status\n      type: object\n    CategoryErrorResponse:\n      properties:\n        $schema:\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/CategoryError\"\n          type: array\n      required:\n        - $schema\n        - errors\n      type: object\n    CategorySummary:\n      properties:\n        category_type:\n          type: string\n        id:\n          type: string\n        key:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n      required:\n        - category_type\n        - id\n        - key\n        - title\n        - type\n      type: object\n    ChildCategory:\n      properties:\n        category_type:\n          type: string\n        child_categories:\n          items:\n            $ref: \"#/components/schemas/ChildCategory\"\n          type: array\n        depth:\n          type: integer\n        id:\n          type: string\n        pip_id:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        url_key:\n          type: string\n      required:\n        - category_type\n        - child_categories\n        - depth\n        - id\n        - pip_id\n        - title\n        - type\n        - url_key\n      type: object\n    ClipSummary:\n      properties:\n        ancestors:\n          items:\n            $ref: \"#/components/schemas/AncestorSummary\"\n          type: array\n        available_versions:\n          items:\n            $ref: \"#/components/schemas/AvailableVersions\"\n          type: array\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        media_type:\n          type: string\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        release_date:\n          type: string\n        short_synopsis:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        type:\n          enum:\n            - clip_summary\n          type: string\n      required:\n        - ancestors\n        - available_versions\n        - images\n        - media_type\n        - network_summary\n        - pid\n        - release_date\n        - short_synopsis\n        - titles\n        - type\n      type: object\n    Contact:\n      properties:\n        handle:\n          type: string\n        name:\n          type: string\n        service:\n          type: string\n        url:\n          type: string\n      required:\n        - handle\n        - name\n        - service\n        - url\n      type: object\n    DateRange:\n      properties:\n        end:\n          type: string\n        start:\n          type: string\n      required:\n        - end\n        - start\n      type: object\n    DisplayModule:\n      properties:\n        description:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        uri:\n          type: string\n      type: object\n    Empty:\n      type: object\n      nullable: true\n    EpisodeSummary:\n      properties:\n        ancestors:\n          items:\n            $ref: \"#/components/schemas/AncestorSummary\"\n          type: array\n        available_versions:\n          items:\n            $ref: \"#/components/schemas/AvailableVersions\"\n          type: array\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        media_type:\n          type: string\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        release_date:\n          type: string\n        short_synopsis:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        type:\n          enum:\n            - episode_summary\n          type: string\n      required:\n        - ancestors\n        - available_versions\n        - images\n        - media_type\n        - network_summary\n        - pid\n        - release_date\n        - short_synopsis\n        - titles\n        - type\n      type: object\n    Error:\n      properties:\n        href:\n          type: string\n        id:\n          type: string\n        message:\n          type: string\n        replied_at:\n          type: string\n      required:\n        - href\n        - id\n        - message\n        - replied_at\n      type: object\n    ErrorResponse:\n      properties:\n        $schema:\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/Error\"\n          type: array\n      required:\n        - $schema\n        - errors\n      type: object\n    ExperienceResponse:\n      properties:\n        $schema:\n          type: string\n        data:\n          items:\n            $ref: \"#/components/schemas/DisplayModule\"\n          type: array\n      required:\n        - $schema\n        - data\n      type: object\n    ExternalPartner:\n      properties:\n        type:\n          type: string\n        value:\n          type: string\n      required:\n        - type\n        - value\n      type: object\n    Image:\n      properties:\n        id:\n          type: string\n        image_type:\n          type: string\n        template_url:\n          type: string\n        type:\n          type: string\n      required:\n        - id\n        - image_type\n        - template_url\n        - type\n      type: object\n    MetaData:\n      properties:\n        miscellaneous:\n          $ref: \"#/components/schemas/Miscellaneous\"\n        origin:\n          $ref: \"#/components/schemas/Origin\"\n        programme_type:\n          type: string\n        type:\n          type: string\n      required:\n        - miscellaneous\n        - origin\n        - programme_type\n        - type\n      type: object\n    Miscellaneous:\n      properties:\n        title:\n          type: string\n      required:\n        - title\n      type: object\n    MusicExportError:\n      properties:\n        message:\n          type: string\n        replied_at:\n          type: integer\n        status:\n          type: integer\n      required:\n        - message\n        - replied_at\n        - status\n      type: object\n    MusicExportErrorResponse:\n      properties:\n        errors:\n          items:\n            $ref: \"#/components/schemas/MusicExportError\"\n          type: array\n        schema:\n          type: string\n      required:\n        - errors\n        - schema\n      type: object\n    MusicExportJob:\n      properties:\n        created_at:\n          type: string\n        id:\n          type: string\n        job_id:\n          type: string\n        status:\n          type: string\n        vendor:\n          type: string\n      required:\n        - created_at\n        - id\n        - job_id\n        - status\n        - vendor\n      type: object\n    MusicExportPreferences:\n      properties:\n        access_expires_at:\n          type: string\n        access_token:\n          type: string\n        add_plus_export:\n          type: boolean\n        authorization_code:\n          type: string\n        last_export:\n          type: string\n        legacy_state:\n          type: string\n        partner_id:\n          type: string\n        refresh_token:\n          type: string\n        terms:\n          type: boolean\n        vendor:\n          type: string\n      required:\n        - access_expires_at\n        - access_token\n        - add_plus_export\n        - authorization_code\n        - last_export\n        - legacy_state\n        - partner_id\n        - refresh_token\n        - terms\n        - vendor\n      type: object\n    MusicExportPreferencesResponse:\n      properties:\n        method:\n          type: string\n        replied_at:\n          type: string\n        results:\n          items:\n            $ref: \"#/components/schemas/MusicExportPreferences\"\n          type: array\n        schema:\n          type: string\n        total:\n          type: integer\n      required:\n        - method\n        - replied_at\n        - results\n        - schema\n        - total\n      type: object\n    MusicExportSuccess:\n      properties:\n        method:\n          type: string\n        replied_at:\n          type: string\n        schema:\n          type: string\n      required:\n        - method\n        - replied_at\n        - schema\n      type: object\n    MusicPopularityArtist:\n      properties:\n        gid:\n          type: string\n        id:\n          type: string\n        imagePid:\n          type: string\n        name:\n          type: string\n        score:\n          type: integer\n        sortName:\n          type: string\n      required:\n        - gid\n        - id\n        - imagePid\n        - name\n        - score\n        - sortName\n      type: object\n    MusicPopularityArtists:\n      properties:\n        limit:\n          type: integer\n        method:\n          type: string\n        offset:\n          type: integer\n        repliedAt:\n          type: string\n        results:\n          items:\n            $ref: \"#/components/schemas/MusicPopularityArtist\"\n          type: array\n        schema:\n          type: string\n        total:\n          type: integer\n      required:\n        - method\n        - repliedAt\n        - results\n        - schema\n        - total\n      type: object\n    MusicPopularityError:\n      properties:\n        errors:\n          items:\n            type: string\n          type: array\n        schema:\n          type: string\n      type: object\n    MusicPopularityPlaylist:\n      properties:\n        categories:\n          items:\n            type: string\n          type: array\n        commentsEnabled:\n          type: boolean\n        description:\n          type: string\n        externalPartners:\n          items:\n            $ref: \"#/components/schemas/ExternalPartner\"\n          type: array\n        genre:\n          type: string\n        id:\n          type: string\n        imagePid:\n          type: string\n        imageUrl:\n          type: string\n        kind:\n          type: string\n        mood:\n          type: string\n        oneOff:\n          type: boolean\n        playlistPlaybackType:\n          type: string\n        score:\n          type: integer\n        serviceId:\n          type: string\n        title:\n          type: string\n        updatedAt:\n          type: string\n        visibility:\n          type: string\n        wideImagePid:\n          type: string\n        wideImageUrl:\n          type: string\n      required:\n        - categories\n        - commentsEnabled\n        - description\n        - externalPartners\n        - genre\n        - id\n        - imagePid\n        - imageUrl\n        - kind\n        - mood\n        - oneOff\n        - playlistPlaybackType\n        - score\n        - serviceId\n        - title\n        - updatedAt\n        - visibility\n        - wideImagePid\n        - wideImageUrl\n      type: object\n    MusicPopularityPlaylists:\n      properties:\n        limit:\n          type: integer\n        method:\n          type: string\n        offset:\n          type: integer\n        repliedAt:\n          type: string\n        results:\n          items:\n            $ref: \"#/components/schemas/MusicPopularityPlaylist\"\n          type: array\n        schema:\n          type: string\n        total:\n          type: integer\n      required:\n        - method\n        - repliedAt\n        - results\n        - schema\n        - total\n      type: object\n    MusicPopularityTrack:\n      properties:\n        album:\n          type: string\n        artistGid:\n          type: string\n        artistName:\n          type: string\n        artists:\n          items:\n            $ref: \"#/components/schemas/MusicTrackArtist\"\n          type: array\n        baseTitle:\n          type: string\n        classical:\n          type: boolean\n        id:\n          type: string\n        mergedIds:\n          items:\n            type: string\n          type: array\n        preferredMultiplayRecordAudio:\n          $ref: \"#/components/schemas/MusicRecordAudio\"\n        preferredRecordAudio:\n          $ref: \"#/components/schemas/MusicRecordAudio\"\n        radioEdit:\n          type: boolean\n        recordAudio:\n          items:\n            $ref: \"#/components/schemas/MusicRecordAudio\"\n          type: array\n        recordImageHref:\n          type: string\n        recordImagePid:\n          type: string\n        score:\n          type: integer\n        title:\n          type: string\n        type:\n          type: string\n      required:\n        - id\n        - score\n      type: object\n    MusicPopularityTracks:\n      properties:\n        limit:\n          type: integer\n        method:\n          type: string\n        offset:\n          type: integer\n        repliedAt:\n          type: string\n        results:\n          items:\n            $ref: \"#/components/schemas/MusicPopularityTrack\"\n          type: array\n        schema:\n          type: string\n        total:\n          type: integer\n      required:\n        - method\n        - repliedAt\n        - results\n        - schema\n        - total\n      type: object\n    MusicRecordAudio:\n      properties:\n        audioType:\n          type: string\n        duration:\n          type: integer\n        identifier:\n          type: string\n        resourceType:\n          type: string\n      required:\n        - audioType\n        - duration\n        - identifier\n        - resourceType\n      type: object\n    MusicTrackArtist:\n      properties:\n        gid:\n          type: string\n        imagePid:\n          type: string\n        name:\n          type: string\n        role:\n          type: string\n        sortName:\n          type: string\n      required:\n        - gid\n        - imagePid\n        - name\n        - role\n        - sortName\n      type: object\n    Network:\n      properties:\n        active:\n          type: boolean\n        contacts:\n          items:\n            $ref: \"#/components/schemas/Contact\"\n          type: array\n        date_ranges:\n          items:\n            $ref: \"#/components/schemas/DateRange\"\n          type: array\n        group:\n          type: string\n        id:\n          type: string\n        international:\n          type: boolean\n        key:\n          type: string\n        preset:\n          type: boolean\n        promoted_category_summaries:\n          items:\n            $ref: \"#/components/schemas/CategorySummary\"\n          type: array\n        services:\n          items:\n            $ref: \"#/components/schemas/Service\"\n          type: array\n        short_title:\n          type: string\n        sort:\n          type: integer\n        title:\n          type: string\n        type:\n          type: string\n      required:\n        - active\n        - contacts\n        - date_ranges\n        - group\n        - id\n        - international\n        - key\n        - preset\n        - services\n        - short_title\n        - sort\n        - title\n        - type\n      type: object\n    NetworkSummary:\n      properties:\n        active:\n          type: boolean\n        group:\n          type: string\n        id:\n          type: string\n        key:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/NetworkTitles\"\n        type:\n          type: string\n      required:\n        - active\n        - group\n        - id\n        - key\n        - titles\n        - type\n      type: object\n    NetworkTitles:\n      properties:\n        long_title:\n          type: string\n        short_title:\n          type: string\n        type:\n          type: string\n      required:\n        - long_title\n        - short_title\n        - type\n      type: object\n    NetworksResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/Network\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    Origin:\n      properties:\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    PersonalisedCategories:\n      properties:\n        created:\n          type: string\n        type:\n          type: string\n      required:\n        - created\n        - type\n      type: object\n    PersonalisedCategoriesResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - total\n      type: object\n    PersonalisedMusicActivity:\n      properties:\n        action:\n          type: string\n        activity:\n          type: string\n        added_at:\n          type: string\n        data:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicData\"\n          type: array\n        domain:\n          type: string\n        id:\n          type: string\n        meta_data:\n          $ref: \"#/components/schemas/PersonalisedMusicMetaData\"\n        type:\n          type: string\n        urn:\n          type: string\n      required:\n        - action\n        - activity\n        - added_at\n        - data\n        - domain\n        - id\n        - meta_data\n        - type\n        - urn\n      type: object\n    PersonalisedMusicArtist:\n      properties:\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicImage\"\n          type: array\n        name:\n          type: string\n        role:\n          type: string\n      type: object\n    PersonalisedMusicBatchRequest:\n      properties:\n        action:\n          type: string\n        added_at:\n          type: string\n        context:\n          type: string\n        domain:\n          type: string\n        id:\n          type: string\n        meta_data:\n          $ref: \"#/components/schemas/PersonalisedMusicMetaData\"\n        type:\n          type: string\n      required:\n        - action\n        - domain\n        - id\n        - type\n      type: object\n    PersonalisedMusicClip:\n      properties:\n        contributors:\n          items:\n            type: string\n          type: array\n        endDate:\n          type: string\n        entityType:\n          type: string\n        imageUrl:\n          type: string\n        masterbrandMid:\n          type: string\n        mediaType:\n          type: string\n        parentProgramme:\n          $ref: \"#/components/schemas/PersonalisedMusicClipParentProgramme\"\n        pid:\n          type: string\n        startDate:\n          type: string\n        synopsis:\n          type: string\n        title:\n          type: string\n        version:\n          $ref: \"#/components/schemas/PersonalisedMusicVersion\"\n      type: object\n    PersonalisedMusicClipParentProgramme:\n      properties:\n        entityType:\n          type: string\n        pid:\n          type: string\n        title:\n          type: string\n      type: object\n    PersonalisedMusicData:\n      properties:\n        artist:\n          $ref: \"#/components/schemas/PersonalisedMusicArtist\"\n        clip:\n          $ref: \"#/components/schemas/PersonalisedMusicClip\"\n        genre:\n          $ref: \"#/components/schemas/PersonalisedMusicGenre\"\n        playlist:\n          $ref: \"#/components/schemas/PersonalisedMusicPlaylist\"\n        service:\n          $ref: \"#/components/schemas/PersonalisedMusicService\"\n        track:\n          $ref: \"#/components/schemas/PersonalisedMusicTrack\"\n      type: object\n    PersonalisedMusicError:\n      properties:\n        message:\n          type: string\n        replied_at:\n          type: integer\n        status:\n          type: integer\n      required:\n        - message\n        - replied_at\n        - status\n      type: object\n    PersonalisedMusicErrorResponse:\n      properties:\n        errors:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicError\"\n          type: array\n        schema:\n          type: string\n      required:\n        - errors\n        - schema\n      type: object\n    PersonalisedMusicGenre:\n      properties:\n        id:\n          type: string\n        key:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n      type: object\n    PersonalisedMusicImage:\n      properties:\n        format:\n          type: string\n        id:\n          type: string\n        type:\n          type: string\n      type: object\n    PersonalisedMusicMetaData:\n      properties:\n        key:\n          type: string\n      required:\n        - key\n      type: object\n    PersonalisedMusicPlaylist:\n      properties:\n        description:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicImage\"\n          type: array\n        playback_type:\n          type: string\n        service_id:\n          type: string\n        title:\n          type: string\n        tracks:\n          $ref: \"#/components/schemas/PersonalisedMusicTrack\"\n        type:\n          type: string\n        updated_at:\n          type: string\n        version:\n          $ref: \"#/components/schemas/PersonalisedMusicPlaylistVersion\"\n      type: object\n    PersonalisedMusicPlaylistVersion:\n      properties:\n        duration:\n          type: string\n        expires_at:\n          type: string\n        id:\n          type: string\n        starts_at:\n          type: string\n        warnings:\n          items:\n            type: string\n          type: array\n      required:\n        - warnings\n      type: object\n    PersonalisedMusicRequest:\n      properties:\n        action:\n          type: string\n        added_at:\n          type: string\n        context:\n          type: string\n        meta_data:\n          $ref: \"#/components/schemas/PersonalisedMusicMetaData\"\n      required:\n        - action\n      type: object\n    PersonalisedMusicResponse:\n      properties:\n        limit:\n          type: integer\n        method:\n          type: string\n        offset:\n          type: integer\n        replied_at:\n          type: string\n        results:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicActivity\"\n          type: array\n        schema:\n          type: string\n        total:\n          type: integer\n      required:\n        - limit\n        - method\n        - offset\n        - replied_at\n        - results\n        - schema\n        - total\n      type: object\n    PersonalisedMusicService:\n      properties:\n        id:\n          type: string\n        key:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n      type: object\n    PersonalisedMusicSuccess:\n      properties:\n        method:\n          type: string\n        replied_at:\n          type: string\n        schema:\n          type: string\n      required:\n        - method\n        - replied_at\n        - schema\n      type: object\n    PersonalisedMusicTrack:\n      properties:\n        contributions:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicTrackContribution\"\n          type: array\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicTrackImage\"\n          type: array\n        media:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicTrackMedia\"\n          type: array\n        title:\n          type: string\n        type:\n          type: string\n        version:\n          $ref: \"#/components/schemas/PersonalisedMusicVersion\"\n      required:\n        - contributions\n        - id\n        - images\n        - media\n        - title\n        - type\n        - version\n      type: object\n    PersonalisedMusicTrackContribution:\n      properties:\n        id:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/PersonalisedMusicTrackImage\"\n          type: array\n        name:\n          type: string\n        role:\n          type: string\n      required:\n        - id\n        - images\n        - name\n        - role\n      type: object\n    PersonalisedMusicTrackImage:\n      properties:\n        format:\n          type: string\n        id:\n          type: string\n        type:\n          type: string\n      required:\n        - format\n        - id\n        - type\n      type: object\n    PersonalisedMusicTrackMedia:\n      properties:\n        duration:\n          type: integer\n        format:\n          type: string\n        id:\n          type: string\n        scope:\n          type: string\n        source:\n          type: string\n        type:\n          type: string\n      required:\n        - duration\n        - format\n        - id\n        - scope\n        - source\n        - type\n      type: object\n    PersonalisedMusicVersion:\n      properties:\n        classical:\n          type: boolean\n        duration:\n          type: string\n        radio:\n          type: boolean\n        vpid:\n          type: string\n      type: object\n    PersonalisedNetworks:\n      properties:\n        created:\n          type: string\n        type:\n          type: string\n      required:\n        - created\n        - type\n      type: object\n    PersonalisedNetworksResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/PersonalisedNetworks\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    PersonalisedRadioActivity:\n      properties:\n        action:\n          type: string\n        activity:\n          type: string\n        added_at:\n          type: string\n        data:\n          $ref: \"#/components/schemas/ProgrammeSummary\"\n        domain:\n          type: string\n        id:\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/MetaData\"\n        type:\n          type: string\n        uas_type:\n          type: string\n        urn:\n          type: string\n      required:\n        - action\n        - activity\n        - added_at\n        - data\n        - domain\n        - id\n        - metadata\n        - type\n        - uas_type\n        - urn\n      type: object\n    PersonalisedRadioBatchRequest:\n      properties:\n        action:\n          type: string\n        added_at:\n          type: string\n        context:\n          type: string\n        id:\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/PersonalisedRadioMetaData\"\n        type:\n          type: string\n      required:\n        - action\n      type: object\n    PersonalisedRadioErrorResponse:\n      properties:\n        $schema:\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/PersonalisedRadioErrorResponse_errors\"\n          type: array\n      required:\n        - $schema\n        - errors\n      type: object\n    PersonalisedRadioErrorResponse_errors:\n      properties:\n        code:\n          type: string\n        detail:\n          type: string\n        href:\n          type: string\n        id:\n          type: string\n        status:\n          type: integer\n        timestamp:\n          type: integer\n        title:\n          type: string\n      required:\n        - code\n        - detail\n        - href\n        - id\n        - status\n        - timestamp\n        - title\n    PersonalisedRadioMetaData:\n      properties:\n        key:\n          type: string\n      required:\n        - key\n      type: object\n    PersonalisedRadioRequest:\n      properties:\n        action:\n          type: string\n        added_at:\n          type: string\n        context:\n          type: string\n        metadata:\n          $ref: \"#/components/schemas/PersonalisedRadioMetaData\"\n      required:\n        - action\n      type: object\n    PersonalisedRadioResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        method:\n          type: string\n        offset:\n          type: integer\n        replied_at:\n          type: string\n        results:\n          items:\n            $ref: \"#/components/schemas/PersonalisedRadioActivity\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - method\n        - offset\n        - replied_at\n        - results\n        - total\n      type: object\n    PersonalisedRadioSuccessResponse:\n      properties:\n        $schema:\n          type: string\n        method:\n          type: string\n        replied_at:\n          type: string\n      required:\n        - $schema\n        - method\n        - replied_at\n      type: object\n    PlayableItem:\n      properties:\n        description:\n          type: string\n        image_url:\n          type: string\n        pid:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n        version_pid:\n          type: string\n      type: object\n    PlayspaceContainer:\n      properties:\n        id:\n          type: string\n        members:\n          items:\n            $ref: \"#/components/schemas/PlayableItem\"\n          type: array\n        title:\n          type: string\n        type:\n          type: string\n      type: object\n    Podcast:\n      properties:\n        category_summaries:\n          items:\n            $ref: \"#/components/schemas/CategorySummary\"\n          type: array\n        days_available:\n          type: integer\n        entity_type:\n          type: string\n        first_published_date:\n          type: string\n        frequency:\n          type: string\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        latest_available_episodes:\n          items:\n            $ref: \"#/components/schemas/PodcastEpisodeSummary\"\n          type: array\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        rss_url:\n          type: string\n        synopses:\n          $ref: \"#/components/schemas/PodcastSynopses\"\n        territory:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        total_available_episodes:\n          type: integer\n        type:\n          type: string\n        updated_at:\n          type: string\n      required:\n        - category_summaries\n        - days_available\n        - entity_type\n        - first_published_date\n        - frequency\n        - images\n        - latest_available_episodes\n        - network_summary\n        - pid\n        - rss_url\n        - synopses\n        - territory\n        - titles\n        - total_available_episodes\n        - type\n        - updated_at\n      type: object\n    PodcastEpisodeSummary:\n      properties:\n        asset_url:\n          type: string\n        available_versions:\n          items:\n            $ref: \"#/components/schemas/AvailableVersions\"\n          type: array\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        media_type:\n          type: string\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        release_date:\n          type: string\n        short_synopsis:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        type:\n          type: string\n      required:\n        - asset_url\n        - available_versions\n        - images\n        - media_type\n        - network_summary\n        - pid\n        - release_date\n        - short_synopsis\n        - titles\n        - type\n      type: object\n    PodcastEpisodesResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: number\n        offset:\n          type: number\n        results:\n          items:\n            $ref: \"#/components/schemas/PodcastEpisodeSummary\"\n          type: array\n        total:\n          type: number\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n    PodcastError:\n      properties:\n        href:\n          type: string\n        id:\n          type: string\n        message:\n          type: string\n        replied_at:\n          type: string\n        status:\n          type: number\n      type: object\n    PodcastErrorResponse:\n      properties:\n        $schema:\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/PodcastError\"\n          type: array\n      type: object\n    PodcastSynopses:\n      properties:\n        long:\n          type: string\n        medium:\n          type: string\n        short:\n          type: string\n        type:\n          type: string\n      required:\n        - long\n        - medium\n        - short\n        - type\n      type: object\n    PodcastsFeatured:\n      properties:\n        featured_podcasts:\n          items:\n            $ref: \"#/components/schemas/Podcast\"\n          type: array\n        title:\n          type: string\n        type:\n          type: string\n      type: object\n    PodcastsFeaturedResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: number\n        offset:\n          type: number\n        results:\n          items:\n            $ref: \"#/components/schemas/PodcastsFeatured\"\n          type: array\n        total:\n          type: number\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n    PodcastsResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/Podcast\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    PopularError:\n      properties:\n        href:\n          type: string\n        id:\n          type: string\n        message:\n          type: string\n        replied_at:\n          type: string\n        status:\n          type: integer\n      required:\n        - href\n        - id\n        - message\n        - replied_at\n        - status\n      type: object\n    PopularErrorResponse:\n      properties:\n        $schema:\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/PopularError\"\n          type: array\n      required:\n        - $schema\n        - errors\n      type: object\n    PopularItemSummary:\n      properties:\n        data:\n          $ref: \"#/components/schemas/ProgrammeSummary\"\n        id:\n          type: string\n        score:\n          type: integer\n        type:\n          type: string\n      required:\n        - data\n        - id\n        - score\n        - type\n      type: object\n    PopularResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/PopularItemSummary\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    Programme:\n      properties:\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        latest_available_episodes:\n          items:\n            $ref: \"#/components/schemas/EpisodeSummary\"\n          type: array\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        short_synopsis:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        total_available_episodes:\n          type: integer\n        type:\n          enum:\n            - brand_summary\n            - series_summary\n            - episode_summary\n            - clip_summary\n          type: string\n      required:\n        - images\n        - network_summary\n        - pid\n        - short_synopsis\n        - titles\n        - type\n      type: object\n    ProgrammeSummary:\n      properties:\n        pid:\n          type: string\n        type:\n          enum:\n            - brand_summary\n            - series_summary\n            - episode_summary\n            - clip_summary\n          type: string\n      required:\n        - pid\n        - type\n      type: object\n    ProgrammeTitles:\n      properties:\n        display_title:\n          type: string\n        entity_title:\n          type: string\n        primary_title:\n          type: string\n        secondary_title:\n          type: string\n        type:\n          type: string\n      required:\n        - type\n      type: object\n    ProgrammesResponse:\n      properties:\n        $schema:\n          type: string\n        limit:\n          type: integer\n        offset:\n          type: integer\n        results:\n          items:\n            $ref: \"#/components/schemas/ProgrammeSummary\"\n          type: array\n        total:\n          type: integer\n      required:\n        - $schema\n        - limit\n        - offset\n        - results\n        - total\n      type: object\n    RadioError:\n      properties:\n        code:\n          type: string\n        detail:\n          type: string\n        href:\n          type: string\n        id:\n          type: string\n        status:\n          type: integer\n        timestamp:\n          type: integer\n        title:\n          type: string\n      required:\n        - code\n        - detail\n        - href\n        - id\n        - status\n        - timestamp\n        - title\n      type: object\n    RadioErrorResponse:\n      properties:\n        $schema:\n          type: string\n        errors:\n          items:\n            $ref: \"#/components/schemas/RadioError\"\n          type: array\n      required:\n        - $schema\n        - errors\n      type: object\n    SeriesSummary:\n      properties:\n        ancestors:\n          items:\n            $ref: \"#/components/schemas/AncestorSummary\"\n          type: array\n        images:\n          items:\n            $ref: \"#/components/schemas/Image\"\n          type: array\n        latest_available_episodes:\n          items:\n            $ref: \"#/components/schemas/EpisodeSummary\"\n          type: array\n        network_summary:\n          $ref: \"#/components/schemas/NetworkSummary\"\n        pid:\n          type: string\n        short_synopsis:\n          type: string\n        titles:\n          $ref: \"#/components/schemas/ProgrammeTitles\"\n        total_available_episodes:\n          type: integer\n        type:\n          enum:\n            - series_summary\n          type: string\n      required:\n        - ancestors\n        - images\n        - latest_available_episodes\n        - network_summary\n        - pid\n        - short_synopsis\n        - titles\n        - total_available_episodes\n        - type\n      type: object\n    Service:\n      properties:\n        active:\n          type: boolean\n        coverage:\n          type: string\n        date_ranges:\n          items:\n            $ref: \"#/components/schemas/DateRange\"\n          type: array\n        default:\n          type: boolean\n        default_language:\n          type: string\n        id:\n          type: string\n        region:\n          type: string\n        short_title:\n          type: string\n        title:\n          type: string\n        type:\n          type: string\n      required:\n        - active\n        - coverage\n        - date_ranges\n        - default\n        - default_language\n        - id\n        - region\n        - short_title\n        - title\n        - type\n      type: object\n"
		}
	},
	"Error": "parse: parse spec: paths: /radio/popular: get: operation \"getPopularEpisodesClips\": parameters: parse parameter \"media_set\": schema: parse enum values: parse value \"\\\"pc\\\"\": expected type \"array\", got \"string\""
}