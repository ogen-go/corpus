{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JanssenProject/jans"
		},
		"file": {
			"name": "jans-admin-ui-plugin-swagger.yaml",
			"size": 0,
			"path": "jans-config-api/plugins/docs/jans-admin-ui-plugin-swagger.yaml",
			"byteSize": 20576,
			"content": "openapi: 3.0.1\ninfo:\n  title: Jans Config API - Admin-UI\n  contact:\n    name: Gluu Support\n    url: https://support.gluu.org\n    email: xxx@gluu.org\n  license:\n    name: Apache 2.0\n    url: https://github.com/JanssenProject/jans/blob/main/LICENSE\n  version: 1.0.0\nservers:\n- url: https://jans.io/\n  description: The Jans server\n  variables: {}\ntags:\n- name: Admin UI - Role\n- name: Admin UI - Permission\n- name: Admin UI - Role-Permissions Mapping\n- name: Admin UI - License\npaths:\n  /admin-ui/license/activateLicense:\n    post:\n      tags:\n      - Admin UI - License\n      summary: Activate license using license-key\n      description: Activate license using license-key\n      operationId: activate-adminui-license\n      requestBody:\n        description: LicenseRequest object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LicenseRequest'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/license.write\n  /admin-ui/license/licenseDetails:\n    get:\n      tags:\n      - Admin UI - License\n      summary: Get admin ui license details\n      description: Get admin ui license details\n      operationId: get-adminui-license\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseResponse'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly\n  /admin-ui/license/isActive:\n    get:\n      tags:\n      - Admin UI - License\n      summary: Check if admin-ui license is active\n      description: Check if admin-ui license is active\n      operationId: is-license-active\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly\n  /admin-ui/license/saveApiCredentials:\n    post:\n      tags:\n      - Admin UI - License\n      summary: Save license api credentials\n      description: Save license api credentials\n      operationId: save-license-api-credentials\n      requestBody:\n        description: LicenseSpringCredentials object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LicenseSpringCredentials'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseApiResponse'\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/license.write\n  /admin-ui/adminUIPermissions:\n    get:\n      tags:\n      - Admin UI - Permission\n      summary: Get all admin ui permissions\n      description: Get all admin ui permissions\n      operationId: get-all-adminui-permissions\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminPermission'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly\n    put:\n      tags:\n      - Admin UI - Permission\n      summary: Edit admin ui permissions\n      description: Edit admin ui permissions\n      operationId: edit-adminui-permission\n      requestBody:\n        description: AdminPermission object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdminPermission'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminPermission'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write\n    post:\n      tags:\n      - Admin UI - Permission\n      summary: Add admin ui permissions\n      description: Add admin ui permissions\n      operationId: add-adminui-permission\n      requestBody:\n        description: AdminPermission object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdminPermission'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminPermission'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write\n  /admin-ui/adminUIRolePermissionsMapping:\n    get:\n      tags:\n      - Admin UI - Role-Permissions Mapping\n      summary: Get all admin ui role-permissions mapping\n      description: Get all admin ui role-permissions mapping\n      operationId: get-all-adminui-role-permissions\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RolePermissionMapping'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly\n    put:\n      tags:\n      - Admin UI - Role-Permissions Mapping\n      summary: Map permissions to role\n      description: Map permissions to role\n      operationId: map-permissions-to-role\n      requestBody:\n        description: RolePermissionMapping object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RolePermissionMapping'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RolePermissionMapping'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write\n    post:\n      tags:\n      - Admin UI - Role-Permissions Mapping\n      summary: Add role-permissions mapping\n      description: Add role-permissions mapping\n      operationId: add-role-permissions-mapping\n      requestBody:\n        description: RolePermissionMapping object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RolePermissionMapping'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RolePermissionMapping'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write\n  /admin-ui/adminUIRoles:\n    get:\n      tags:\n      - Admin UI - Role\n      summary: Get all admin ui roles\n      description: Get all admin ui roles\n      operationId: get-all-adminui-roles\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminRole'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly\n    put:\n      tags:\n      - Admin UI - Role\n      summary: Edit admin ui role\n      description: Edit admin ui role\n      operationId: edit-adminui-role\n      requestBody:\n        description: AdminRole object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdminRole'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminRole'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write\n    post:\n      tags:\n      - Admin UI - Role\n      summary: Add admin ui role\n      description: Add admin ui role\n      operationId: add-adminui-role\n      requestBody:\n        description: AdminRole object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AdminRole'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminRole'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write\n  /admin-ui/adminUIPermissions/{adminUIPermission}:\n    get:\n      tags:\n      - Admin UI - Permission\n      summary: Get admin ui permission by permission-name\n      description: Get admin ui permission by permission-name\n      operationId: get-adminui-permission\n      parameters:\n      - name: adminUIPermission\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminPermission'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.readonly\n    delete:\n      tags:\n      - Admin UI - Permission\n      summary: Delete admin ui permission by permission-name\n      description: Delete admin ui permission by permission-name\n      operationId: delete-adminui-permission\n      parameters:\n      - name: adminUIPermission\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminPermission'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.delete\n  /admin-ui/adminUIRoles/{adminUIRole}:\n    get:\n      tags:\n      - Admin UI - Role\n      summary: Get admin ui role details by role-name\n      description: Get admin ui role details by role-name\n      operationId: get-adminui-role\n      parameters:\n      - name: adminUIRole\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminRole'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/role.readonly\n    delete:\n      tags:\n      - Admin UI - Role\n      summary: Delete admin ui role by role-name\n      description: Delete admin ui role by role-name\n      operationId: delete-adminui-role\n      parameters:\n      - name: adminUIRole\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AdminRole'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/role.delete\n  /admin-ui/adminUIRolePermissionsMapping/{adminUIRole}:\n    get:\n      tags:\n      - Admin UI - Role-Permissions Mapping\n      summary: Get admin ui role-permissions mapping by role-name\n      description: Get admin ui role-permissions mapping by role-name\n      operationId: get-adminui-role-permissions\n      parameters:\n      - name: adminUIRole\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RolePermissionMapping'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly\n    delete:\n      tags:\n      - Admin UI - Role-Permissions Mapping\n      summary: Remove role-permissions mapping by role-name\n      description: Remove role-permissions mapping by role-name\n      operationId: remove-role-permissions-permission\n      parameters:\n      - name: adminUIRole\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RolePermissionMapping'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.delete\ncomponents:\n  schemas:\n    LicenseRequest:\n      type: object\n      properties:\n        licenseKey:\n          type: string\n    LicenseApiResponse:\n      type: object\n      properties:\n        apiResult:\n          type: boolean\n        responseMessage:\n          type: string\n        responseCode:\n          type: integer\n          format: int32\n    LicenseResponse:\n      type: object\n      properties:\n        licenseEnabled:\n          type: boolean\n        productName:\n          type: string\n        productCode:\n          type: string\n        licenseType:\n          type: string\n        maxActivations:\n          type: integer\n          format: int32\n        licenseKey:\n          type: string\n        licenseActive:\n          type: boolean\n        validityPeriod:\n          type: string\n        companyName:\n          type: string\n        customerEmail:\n          type: string\n        customerFirstName:\n          type: string\n        customerLastName:\n          type: string\n    LicenseSpringCredentials:\n      type: object\n      properties:\n        apiKey:\n          type: string\n        productCode:\n          type: string\n        sharedKey:\n          type: string\n        managementKey:\n          type: string\n        hardwareId:\n          type: string\n        licenseKey:\n          type: string\n    AdminPermission:\n      type: object\n      properties:\n        permission:\n          type: string\n        description:\n          type: string\n        defaultPermissionInToken:\n          type: boolean\n    RolePermissionMapping:\n      type: object\n      properties:\n        role:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n    AdminRole:\n      type: object\n      properties:\n        role:\n          type: string\n        description:\n          type: string\n        deletable:\n          type: boolean\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://{op-hostname}/.../token\"\n          scopes:\n            https://jans.io/oauth/jans-auth-server/config/adminui/user/role.read: View\n              admin user role related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/user/role.write: Manage\n              admin user role related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.read: View\n              admin permission related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/user/permission.write: Manage\n              admin permission related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.readonly: View\n              role-permission mapping related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/user/rolePermissionMapping.write: Manage\n              role-permission mapping related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/license.readonly: Delete\n              admin-ui license related information\n            https://jans.io/oauth/jans-auth-server/config/adminui/license.write: View\n              admin-ui license related information\n",
			"canonicalURL": "/github.com/JanssenProject/jans@386dbd522d0efb6ce97140e82982cb15325f7225/-/blob/jans-config-api/plugins/docs/jans-admin-ui-plugin-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/JanssenProject/jans/blob/386dbd522d0efb6ce97140e82982cb15325f7225/jans-config-api/plugins/docs/jans-admin-ui-plugin-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/admin-ui/adminUIPermissions\": get: operation \"get-all-adminui-permissions\": security: parse security scheme \"oauth2\": oauth2: flow \"clientCredentials\": at jans-config-api/plugins/docs/jans-admin-ui-plugin-swagger.yaml:680:21: \"tokenUrl\" MUST be in the form of a URL: parse \"https://{op-hostname}/.../token\": invalid character \"{\" in host name"
}