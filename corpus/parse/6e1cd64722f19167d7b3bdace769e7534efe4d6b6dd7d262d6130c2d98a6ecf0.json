{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenAPITools/openapi-generator"
		},
		"file": {
			"name": "issue_10330.yaml",
			"size": 0,
			"path": "modules/openapi-generator/src/test/resources/3_0/issue_10330.yaml",
			"byteSize": 6055,
			"content": "openapi: 3.0.1\ninfo:\n  title: OpenAPI Petstore\n  description: \"composed schema isX type checks\"\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n  - url: http://petstore.swagger.io:80/v2\ntags: []\npaths:\n  /ComposedObject:\n    get:\n      parameters:\n      - in: query\n        name: ComposedObject\n        schema:\n          type: object\n          allOf:\n            - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedObject\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - {}\n  /ComposedNumber:\n    get:\n      parameters:\n        - in: query\n          name: ComposedNumber\n          schema:\n            type: number\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: number\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedNumber\n          content:\n            application/json:\n              schema:\n                type: number\n                allOf:\n                  - {}\n  /ComposedInteger:\n    get:\n      parameters:\n        - in: query\n          name: ComposedInteger\n          schema:\n            type: integer\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: integer\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedInteger\n          content:\n            application/json:\n              schema:\n                type: integer\n                allOf:\n                  - {}\n  /ComposedString:\n    get:\n      parameters:\n        - in: query\n          name: ComposedString\n          schema:\n            type: string\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedString\n          content:\n            application/json:\n              schema:\n                type: string\n                allOf:\n                  - {}\n  /ComposedBool:\n    get:\n      parameters:\n        - in: query\n          name: ComposedBool\n          schema:\n            type: boolean\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: boolean\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedBool\n          content:\n            application/json:\n              schema:\n                type: boolean\n                allOf:\n                  - {}\n  /ComposedArray:\n    get:\n      parameters:\n        - in: query\n          name: ComposedArray\n          schema:\n            type: array\n            items: {}\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items: {}\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedArray\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n                allOf:\n                  - {}\n  /ComposedNone:\n    get:\n      parameters:\n        - in: query\n          name: ComposedNone\n          schema:\n            type: 'null'\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: 'null'\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedNone\n          content:\n            application/json:\n              schema:\n                type: 'null'\n                allOf:\n                  - {}\n  /ComposedAnyType:\n    get:\n      parameters:\n        - in: query\n          name: ComposedAnyType\n          schema:\n            allOf:\n              - {}\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - {}\n      responses:\n        '200':\n          description: ComposedAnyType\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - {}\ncomponents:\n  schemas:\n    ObjectWithComposedProperties:\n      type: object\n      properties:\n        ComposedObject:\n          type: object\n          allOf:\n            - {}\n        ComposedNumber:\n          type: number\n          allOf:\n            - {}\n        ComposedInteger:\n          type: integer\n          allOf:\n            - {}\n        ComposedString:\n          type: string\n          allOf:\n            - {}\n        ComposedBool:\n          type: boolean\n          allOf:\n            - {}\n        ComposedArray:\n          type: array\n          items: {}\n          allOf:\n            - {}\n        ComposedNone:\n          type: 'null'\n          allOf:\n            - {}\n        ComposedAnyType:\n          allOf:\n            - {}\n    ComposedObject:\n      type: object\n      allOf:\n        - {}\n    ComposedNumber:\n      type: number\n      allOf:\n        - {}\n    ComposedInteger:\n      type: integer\n      allOf:\n        - {}\n    ComposedString:\n      type: string\n      allOf:\n        - {}\n    ComposedBool:\n      type: boolean\n      allOf:\n        - {}\n    ComposedArray:\n      type: array\n      items: {}\n      allOf:\n        - {}\n    ComposedNone:\n      type: 'null'\n      allOf:\n        - {}\n    ComposedAnyType:\n      allOf:\n        - {}\n",
			"canonicalURL": "/github.com/OpenAPITools/openapi-generator@ac7ebf67dd67e4a347fa142aa6a95ab12f0198de/-/blob/modules/openapi-generator/src/test/resources/3_0/issue_10330.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/OpenAPITools/openapi-generator/blob/ac7ebf67dd67e4a347fa142aa6a95ab12f0198de/modules/openapi-generator/src/test/resources/3_0/issue_10330.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/ComposedAnyType\": get: parameters: parse parameter \"ComposedAnyType\": at 1:1102: invalid schema:style:explode combination: (\"\":\"form\":true)"
}