{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "networkaccesspolicy.json",
			"size": 0,
			"path": "openapi3_autogen/networkaccesspolicy.json",
			"byteSize": 16477,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"networkaccesspolicy\": {\n        \"description\": \"Allows you to define network policies to allow or prevent processing units\\nidentified by their tags to talk to other processing units or external networks\\n(also identified by their tags).\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"action\": {\n            \"default\": \"Allow\",\n            \"description\": \"Defines the action to apply to a flow.\\n\\n- `Allow`: allows the defined traffic.\\n- `Reject`: rejects the defined traffic; useful in conjunction with an allow all\\npolicy.\\n- `Continue`: neither allows or rejects the traffic; useful for applying another\\nproperty to the traffic.\",\n            \"enum\": [\n              \"Allow\",\n              \"Reject\",\n              \"Continue\"\n            ]\n          },\n          \"activeDuration\": {\n            \"description\": \"Defines for how long the policy will be active according to the\\n`activeSchedule`.\",\n            \"type\": \"string\"\n          },\n          \"activeSchedule\": {\n            \"description\": \"Defines when the policy should be active using the cron notation.\\nThe policy will be active for the given `activeDuration`.\",\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Stores additional information about an entity.\",\n            \"type\": \"object\"\n          },\n          \"applyPolicyMode\": {\n            \"default\": \"Bidirectional\",\n            \"description\": \"Sets three different types of policies. `IncomingTraffic`: applies the policy to\\nall\\nprocessing units that match the `object` and allows them to *accept* connections\\nfrom\\nprocessing units or external networks that match the `subject`.\\n`OutgoingTraffic`: applies\\nthe policy to all processing units that match the `subject` and allows them to\\n*initiate*\\nconnections with processing units or external networks that match the `object`.\\n`Bidirectional` (default): applies the policy to all processing units that match\\nthe `object`\\nand allows them to *accept* connections from processing units that match the\\n`subject`.\\nAlso applies the policy to all processing units that match the `subject` and\\nallows them\\nto *initiate* connections with processing units that match the `object`.\",\n            \"enum\": [\n              \"OutgoingTraffic\",\n              \"IncomingTraffic\",\n              \"Bidirectional\"\n            ]\n          },\n          \"associatedTags\": {\n            \"description\": \"List of tags attached to an entity.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"createTime\": {\n            \"description\": \"Creation date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Description of the object.\",\n            \"type\": \"string\"\n          },\n          \"disabled\": {\n            \"description\": \"Defines if the property is disabled.\",\n            \"type\": \"boolean\"\n          },\n          \"encryptionEnabled\": {\n            \"deprecated\": true,\n            \"description\": \"Defines if the flow has to be encrypted. This property is deprecated and have no\\nincidence.\",\n            \"type\": \"boolean\"\n          },\n          \"expirationTime\": {\n            \"description\": \"If set the policy will be automatically deleted after the given time.\",\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"fallback\": {\n            \"description\": \"Indicates that this is fallback policy. It will only be\\napplied if no other policies have been resolved. If the policy is also\\npropagated it will become a fallback for children namespaces.\",\n            \"type\": \"boolean\"\n          },\n          \"logsEnabled\": {\n            \"description\": \"If `true`, the relevant flows are logged and available from Microsegmentation\\nConsole.\\nUnder some advanced scenarios you may wish to set this to `false`, such as to\\nsave space or\\nimprove performance.\",\n            \"type\": \"boolean\"\n          },\n          \"metadata\": {\n            \"description\": \"Contains tags that can only be set during creation, must all start\\nwith the '@' prefix, and should only be used by external systems.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"Name of the entity.\",\n            \"example\": \"the name\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"negateObject\": {\n            \"description\": \"Setting this to `true` will invert the object to find what is not matching.\",\n            \"type\": \"boolean\"\n          },\n          \"negateSubject\": {\n            \"description\": \"Setting this to `true` will invert the subject to find what is not matching.\",\n            \"type\": \"boolean\"\n          },\n          \"normalizedTags\": {\n            \"description\": \"Contains the list of normalized tags of the entities.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"object\": {\n            \"description\": \"A tag or tag expression identifying the object of the policy.\",\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"observationEnabled\": {\n            \"description\": \"If set to `true`, the flow will be in observation mode.\",\n            \"type\": \"boolean\"\n          },\n          \"observedTrafficAction\": {\n            \"default\": \"Continue\",\n            \"description\": \"If `observationEnabled` is set to `true`, this defines the final action taken\\non the packets: `Apply` or `Continue` (default).\",\n            \"enum\": [\n              \"Apply\",\n              \"Continue\"\n            ]\n          },\n          \"ports\": {\n            \"description\": \"Represents the ports and protocols this policy applies to.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"propagate\": {\n            \"description\": \"Propagates the policy to all of its children.\",\n            \"type\": \"boolean\"\n          },\n          \"protected\": {\n            \"description\": \"Defines if the object is protected.\",\n            \"type\": \"boolean\"\n          },\n          \"subject\": {\n            \"description\": \"A tag or tag expression identifying the subject of the policy.\",\n            \"items\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"type\": \"array\"\n          },\n          \"updateTime\": {\n            \"description\": \"Last update date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"networkaccesspolicy\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/networkaccesspolicies\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of network policies.\",\n        \"operationId\": \"get-all-networkaccesspolicies\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"squall\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new network policy. This is deprecated. in favor of\\nNetworkRuleSetPolicy.\",\n        \"operationId\": \"create-a-new-networkaccesspolicy\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"squall\"\n        ]\n      }\n    },\n    \"/networkaccesspolicies/{id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the policy with the given ID.\",\n        \"operationId\": \"delete-networkaccesspolicy-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"squall\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieves the policy with the given ID.\",\n        \"operationId\": \"get-networkaccesspolicy-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"put\": {\n        \"description\": \"Updates the policy with the given ID.\",\n        \"operationId\": \"update-networkaccesspolicy-by-ID\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/networkaccesspolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"squall\"\n        ]\n      }\n    },\n    \"/networkaccesspolicies/{id}/externalnetworks\": {\n      \"get\": {\n        \"description\": \"Returns the list of external networks affected by a network policy.\",\n        \"operationId\": \"get-all-externalnetworks-for-a-given-networkaccesspolicy\",\n        \"parameters\": [\n          {\n            \"description\": \"Matching mode.\",\n            \"example\": \"object\",\n            \"in\": \"query\",\n            \"name\": \"mode\",\n            \"schema\": {\n              \"enum\": [\n                \"subject\",\n                \"object\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./externalnetwork#/components/schemas/externalnetwork\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/networking\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/networkaccesspolicies/{id}/processingunits\": {\n      \"get\": {\n        \"description\": \"Returns the list of processing units affected by a network policy.\",\n        \"operationId\": \"get-all-processingunits-for-a-given-networkaccesspolicy\",\n        \"parameters\": [\n          {\n            \"description\": \"Matching mode.\",\n            \"example\": \"object\",\n            \"in\": \"query\",\n            \"name\": \"mode\",\n            \"schema\": {\n              \"enum\": [\n                \"subject\",\n                \"object\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./processingunit#/components/schemas/processingunit\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"core/processingunit\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/networkaccesspolicies/{id}/services\": {\n      \"get\": {\n        \"description\": \"Returns the list of services affected by a network policy.\",\n        \"operationId\": \"get-all-services-for-a-given-networkaccesspolicy\",\n        \"parameters\": [\n          {\n            \"description\": \"Matching mode.\",\n            \"example\": \"object\",\n            \"in\": \"query\",\n            \"name\": \"mode\",\n            \"schema\": {\n              \"enum\": [\n                \"subject\",\n                \"object\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"./service#/components/schemas/service\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"policy/services\",\n          \"squall\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'policy/networking'\",\n      \"name\": \"policy/networking\"\n    },\n    {\n      \"description\": \"This tag is for package 'squall'\",\n      \"name\": \"squall\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/gaia@6fce5d39a07c60522904b02bc38954f46bdfb483/-/blob/openapi3_autogen/networkaccesspolicy.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/gaia/blob/6fce5d39a07c60522904b02bc38954f46bdfb483/openapi3_autogen/networkaccesspolicy.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/networkaccesspolicies/{id}/externalnetworks\": get: operation \"get-all-externalnetworks-for-a-given-networkaccesspolicy\": responses: 200: content: application/json: schema: parse schema: parse schema: at 395:29: external \"./externalnetwork\": get: file: local file reference is not allowed"
}