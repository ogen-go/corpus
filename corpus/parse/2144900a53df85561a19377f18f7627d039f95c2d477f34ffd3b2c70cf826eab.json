{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/identity-api-server"
		},
		"file": {
			"name": "identity-governance.yaml",
			"size": 0,
			"path": "components/org.wso2.carbon.identity.api.server.identity.governance/org.wso2.carbon.identity.api.server.identity.governance.v1/src/main/resources/identity-governance.yaml",
			"byteSize": 29195,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    This is the RESTful API for identity governance configurations in WSO2\n    Identity Server\n  version: \"v1\"\n  title: WSO2 Identity Server - Governance connectors Admin API\n  contact:\n    name: WSO2 Identity Server\n    url: 'https://wso2.com/identity-and-access-management'\n    email: architecture@wso2.org\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Management\n    description: Secured Admin-only calls\nsecurity:\n  - OAuth2: []\n  - BasicAuth: []\npaths:\n  /identity-governance/:\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connector categories.\n      operationId: getCategories\n      description: |\n        Retrieve governance connector categories.\n\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n          * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/limitQueryParam'\n        - $ref: '#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/filterQueryParam'\n        - $ref: '#/components/parameters/sortQueryParam'\n      responses:\n        '200':\n          description: Governance connector categories.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CategoriesRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/ServerError'\n        '501':\n          $ref: '#/components/responses/NotImplemented'\n  '/identity-governance/{category-id}':\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connectors of a category.\n      operationId: getConnectorCategory\n      description: |\n        Retrieve governance connectors of a category. \u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n      responses:\n        '200':\n          description: Requested governance connector category.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CategoryRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/identity-governance/{category-id}/connectors':\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connectors of a category.\n      operationId: getConnectorsOfCategory\n      description: |\n        Retrieve governance connectors of a category.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n      responses:\n        '200':\n          description: Requested governance connector category.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConnectorRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/identity-governance/{category-id}/connectors/{connector-id}':\n    get:\n      tags:\n        - Management\n      summary: Retrieve governance connector.\n      operationId: getConnector\n      description: |\n        Retrieve governance connector.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/view \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_view\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n        - $ref: '#/components/parameters/connectorIdPathParam'\n      responses:\n        '200':\n          description: Requested governance connector.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorRes'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n    patch:\n      tags:\n        - Management\n      summary: Patch governance connector.\n      operationId: patchConnector\n      description: |\n        Patch governance connector.\u003cbr\u003e\n        \u003cb\u003ePermission required:\u003c/b\u003e \u003cbr\u003e\n            * /permission/admin/manage/identity/idpmgt/update \u003cbr\u003e\n        \u003cb\u003eScope required:\u003c/b\u003e \u003cbr\u003e\n            * internal_idp_update\n      parameters:\n        - $ref: '#/components/parameters/categoryIdPathParam'\n        - $ref: '#/components/parameters/connectorIdPathParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK'\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectorsPatchReq'\n        description: governance-connector to update\n  /identity-governance/preferences:\n    post:\n      tags:\n        - Management\n      summary: Retrieve preferences of governance connector configurations.\n      operationId: getPreferenceByPost\n      description: |\n        This API returns information about configuration preference of governance connectors. This API will accept\n        following keys.\n          \u003ctable\u003e\n            \u003ctr\u003e\n              \u003ctd\u003e\u003cb\u003eConnector names\u003c/b\u003e\u003c/td\u003e\n              \u003ctd\u003e\u003cb\u003eProperties\u003c/b\u003e\u003c/td\u003e\n              \u003ctd\u003e\u003cb\u003eDescription\u003c/b\u003e\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"9\"\u003eself-sign-up\u003c/td\u003e\n              \u003ctd\u003eSelfRegistration.Enable\u003c/td\u003e\n              \u003ctd\u003eAllow user's to self register to the system\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.LockOnCreation\u003c/td\u003e\n              \u003ctd\u003eLock self registered user account until e-mail verification.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.Notification.InternallyManage\u003c/td\u003e\n              \u003ctd\u003eDisable if the client application handles notification sending\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.ReCaptcha\u003c/td\u003e\n              \u003ctd\u003eEnable reCaptcha verification during self registration.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.VerificationCode.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eSpecify the expiry time in minutes for the verification link.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.VerificationCode.SMSOTP.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eSpecify the expiry time in minutes for the SMS OTP.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.CallbackRegex\u003c/td\u003e\n              \u003ctd\u003eThis prefix will be used to validate the callback URL.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.NotifyAccountConfirmation\u003c/td\u003e\n              \u003ctd\u003eEnable sending notification for self sign up confirmation.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eSelfRegistration.ResendConfirmationReCaptcha\u003c/td\u003e\n              \u003ctd\u003ePrompt reCaptcha verification for resend confirmation\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"7\"\u003elite-user-sign-up\u003c/td\u003e\n              \u003ctd\u003eLiteRegistration.Enable\u003c/td\u003e\n              \u003ctd\u003eAllow user's to self register to the system without a password.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eLiteRegistration.LockOnCreation\u003c/td\u003e\n              \u003ctd\u003eLock self registered user account until e-mail verification.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eLiteRegistration.Notification.InternallyManage\u003c/td\u003e\n              \u003ctd\u003eDisable if the client application handles notification sending\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eLiteRegistration.ReCaptcha\u003c/td\u003e\n              \u003ctd\u003eEnable reCaptcha verification during self registration.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eLiteRegistration.VerificationCode.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eSpecify the expiry time in minutes for the verification link.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eLiteRegistration.VerificationCode.SMSOTP.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eSpecify the expiry time in minutes for the SMS OTP.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eLiteRegistration.CallbackRegex\u003c/td\u003e\n              \u003ctd\u003eThis prefix will be used to validate the callback URL.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"6\"\u003euser-email-verification\u003c/td\u003e\n              \u003ctd\u003eEmailVerification.Enable\u003c/td\u003e\n              \u003ctd\u003eA verification notification will be triggered during user creation.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eEmailVerification.LockOnCreation\u003c/td\u003e\n              \u003ctd\u003eThe user account will be locked during user creation.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eEmailVerification.Notification.InternallyManage\u003c/td\u003e\n              \u003ctd\u003eDisable if the client application handles notification sending.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eEmailVerification.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eSet the time span that the verification e-mail would be valid, in minutes. (For infinite validity period, set -1)\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eEmailVerification.AskPassword.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eSet the time span that the ask password e-mail would be valid, in minutes. (For infinite validity period, set -1)\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eEmailVerification.AskPassword.PasswordGenerator\u003c/td\u003e\n              \u003ctd\u003eTemporary password generation extension point in ask password feature.)\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n            \u003ctd rowspan=\"2\"\u003epasswordHistory\u003c/td\u003e\n            \u003ctd\u003epasswordHistory.enable\u003c/td\u003e\n            \u003ctd\u003eUser will not be allowed to use previously used passwords.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003epasswordHistory.count\u003c/td\u003e\n              \u003ctd\u003eRestrict using this number of last used passwords during password update.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"5\"\u003epasswordPolicy\u003c/td\u003e\n              \u003ctd\u003epasswordPolicy.enable\u003c/td\u003e\n              \u003ctd\u003eValidate user passwords against a policy\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003epasswordPolicy.min.length\u003c/td\u003e\n              \u003ctd\u003eMinimum number of characters in the password.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003epasswordPolicy.max.length\u003c/td\u003e\n              \u003ctd\u003eMaximum number of characters in the password.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003epasswordPolicy.pattern\u003c/td\u003e\n              \u003ctd\u003eThe regular expression pattern to validate the password.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003epasswordPolicy.errorMsg\u003c/td\u003e\n              \u003ctd\u003eThis error message will be displayed when a pattern violation is detected.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"5\"\u003eaccount.lock.handler\u003c/td\u003e\n              \u003ctd\u003eaccount.lock.handler.enable\u003c/td\u003e\n              \u003ctd\u003eLock user accounts on failed login attempts\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eaccount.lock.handler.On.Failure.Max.Attempts\u003c/td\u003e\n              \u003ctd\u003eNumber of failed login attempts allowed until account lock.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eaccount.lock.handler.Time\u003c/td\u003e\n              \u003ctd\u003eInitial account lock time period in minutes. Account will be automatically unlocked after this time period.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eaccount.lock.handler.login.fail.timeout.ratio\u003c/td\u003e\n              \u003ctd\u003eAccount lock duration will be increased by this factor. Ex: Initial duration: 5m; Increment factor: 2; Next lock duration: 5 x 2 = 10m\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eaccount.lock.handler.notification.manageInternally\u003c/td\u003e\n              \u003ctd\u003eDisable if the client application handles notification sending\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"3\"\u003esso.login.recaptcha\u003c/td\u003e\n              \u003ctd\u003esso.login.recaptcha.enable.always\u003c/td\u003e\n              \u003ctd\u003eAlways prompt reCaptcha verification during SSO login flow.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003esso.login.recaptcha.enable\u003c/td\u003e\n              \u003ctd\u003ePrompt reCaptcha verification during SSO login flow only after the max failed attempts exceeded.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003esso.login.recaptcha.on.max.failed.attempts\u003c/td\u003e\n              \u003ctd\u003eNumber of failed attempts allowed without prompting reCaptcha verification.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"4\"\u003euser-claim-update\u003c/td\u003e\n              \u003ctd\u003eUserClaimUpdate.Email.EnableVerification\u003c/td\u003e\n              \u003ctd\u003eTrigger a verification notification when user's email address is updated.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eUserClaimUpdate.Email.VerificationCode.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eValidity time of the email confirmation link in minutes.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eUserClaimUpdate.MobileNumber.EnableVerification\u003c/td\u003e\n              \u003ctd\u003eTrigger a verification SMS OTP when user's mobile number is updated.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eUserClaimUpdate.MobileNumber.VerificationCode.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eValidity time of the mobile number confirmation OTP in minutes.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n            \u003ctd rowspan=\"3\"\u003esuspension.notification\u003c/td\u003e\n            \u003ctd\u003esuspension.notification.enable\u003c/td\u003e\n            \u003ctd\u003eLock user account after a given idle period.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003esuspension.notification.account.disable.delay\u003c/td\u003e\n              \u003ctd\u003eTime period in days before locking the user account.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003esuspension.notification.delays\u003c/td\u003e\n              \u003ctd\u003eSend warning alerts to users before locking the account, after each period. Comma separated multiple values accepted.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctd rowspan=\"2\"\u003eaccount.disable.handler\u003c/td\u003e\n            \u003ctd\u003eaccount.disable.handler.enable\u003c/td\u003e\n            \u003ctd\u003eAllow an administrative user to disable user accounts\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eaccount.disable.handler.notification.manageInternally\u003c/td\u003e\n              \u003ctd\u003eDisable, if the client application handles notification sending\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd rowspan=\"20\"\u003eaccount-recovery\u003c/td\u003e\n              \u003ctd\u003eRecovery.Notification.Password.Enable\u003c/td\u003e\n              \u003ctd\u003eNotification based password recovery\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.ReCaptcha.Password.Enable\u003c/td\u003e\n              \u003ctd\u003eEnable reCaptcha for password recovery\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Password.Enable\u003c/td\u003e\n              \u003ctd\u003eSecurity question based password recovery\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Password.MinAnswers\u003c/td\u003e\n              \u003ctd\u003eNumber of questions required for password recovery\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Answer.Regex\u003c/td\u003e\n              \u003ctd\u003eSecurity question answer regex\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Answer.Uniquenes\u003c/td\u003e\n              \u003ctdEnforce security question answer uniqueness\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Password.ReCaptcha.Enable\u003c/td\u003e\n              \u003ctd\u003erompt reCaptcha for security question based password recovery\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Password.ReCaptcha.MaxFailedAttempts\u003c/td\u003e\n              \u003ctd\u003eMax failed attempts for reCaptcha\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Notification.Username.Enable\u003c/td\u003e\n              \u003ctd\u003eUsername recovery\u003c/td\u003e\n            \u003c/tr\u003e\u003ctr\u003e\n              \u003ctd\u003eRecovery.ReCaptcha.Username.Enable\u003c/td\u003e\n              \u003ctd\u003eEnable reCaptcha for username recovery\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Notification.InternallyManage\u003c/td\u003e\n              \u003ctd\u003eDisable if the client application handles notification sending\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.NotifySuccess\u003c/td\u003e\n              \u003ctd\u003eNotify when recovery success\u003c/td\u003e\n            \u003c/tr\u003e\u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Password.NotifyStart\u003c/td\u003e\n              \u003ctd\u003eNotify when security questions based recovery starts\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.ExpiryTime\u003c/td\u003e\n              \u003ctd\u003eRecovery link expiry time\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Notification.Password.ExpiryTime.smsOtp\u003c/td\u003e\n              \u003ctd\u003eExpiration time of the SMS OTP code for password recovery\u003c/td\u003e\n            \u003c/tr\u003e\u003ctr\u003e\n              \u003ctd\u003eRecovery.Notification.Password.smsOtp.Regex\u003c/td\u003e\n              \u003ctd\u003eRegex for SMS OTP in format [allowed characters]{length}. Supported character ranges are a-z, A-Z, 0-9.\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.Password.Forced.Enable\u003c/td\u003e\n              \u003ctd\u003eForce users to provide answers to security questions during sign in\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.Question.MinQuestionsToAnswer\u003c/td\u003e\n              \u003ctd\u003eForce users to provide answers to security questions during sign in if user has answered lesser than this value\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.CallbackRegex\u003c/td\u003e\n              \u003ctd\u003eRecovery callback URL regex\u003c/td\u003e\n            \u003c/tr\u003e\u003ctr\u003e\n              \u003ctd\u003eRecovery.AutoLogin.Enable\u003c/td\u003e\n              \u003ctd\u003eUser will be logged in automatically after completing the Password Reset wizard\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n            \u003ctd rowspan=\"3\"\u003eadmin-forced-password-reset\u003c/td\u003e\n            \u003ctd\u003eRecovery.AdminPasswordReset.RecoveryLink\u003c/td\u003e\n            \u003ctd\u003eUser gets notified with a link to reset password\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.AdminPasswordReset.OTP\u003c/td\u003e\n              \u003ctd\u003eUser gets notified with a one time password to try with SSO login\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd\u003eRecovery.AdminPasswordReset.Offline\u003c/td\u003e\n              \u003ctd\u003eAn OTP generated and stored in users claims.\u003c/td\u003e\n            \u003c/tr\u003e\n          \u003c/table\u003e\n\n        \u003cb\u003escope required:\u003c/b\u003e\n        * internal_login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              example:\n                - connector-name: self-sign-up\n                  properties:\n                    - SelfRegistration.Enable\n                    - SelfRegistration.LockOnCreation\n                - connector-name: user-email-verification\n                  properties:\n                    - EmailVerification.Enable\n                    - EmailVerification.LockOnCreation\n              items:\n                $ref: '#/components/schemas/PreferenceSearchAttribute'\n        description: This represents the connector and the properties which preferences needs to be returned.\n        required: true\n      responses:\n        '200':\n          description: Configuration preferences\n          content:\n            application/json:\n              schema:\n                type: array\n                example:\n                  - connector-name: self-sign-up\n                    properties:\n                      - name: SelfRegistration.Enable\n                        value: 'false'\n                      - name: SelfRegistration.LockOnCreation\n                        value: 'false'\n                  - connector-name: user-email-verification\n                    properties:\n                      - name: EmailVerification.Enable\n                        value: 'true'\n                      - name: EmailVerification.LockOnCreation\n                        value: 'false'\n\n                items:\n                  $ref: '#/components/schemas/PreferenceResp'\n\n        '400':\n          $ref: '#/components/responses/InvalidInput'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\nservers:\n  - url: https://localhost:9443/t/{tenant-domain}/api/server/v1/\ncomponents:\n  parameters:\n    limitQueryParam:\n      in: query\n      name: limit\n      required: false\n      description: Maximum number of records to return.\n      schema:\n        type: integer\n        format: int32\n    offsetQueryParam:\n      in: query\n      name: offset\n      required: false\n      description: Number of records to skip for pagination.\n      schema:\n        type: integer\n        format: int32\n    filterQueryParam:\n      in: query\n      name: filter\n      required: false\n      description: Condition to filter the retrieval of records.\n      schema:\n        type: string\n    sortQueryParam:\n      in: query\n      name: sort\n      required: false\n      description: Define the order in which the retrieved records should be sorted.\n      schema:\n        type: string\n    categoryIdPathParam:\n      in: path\n      name: category-id\n      required: true\n      description: Id of the connector category.\n      schema:\n        type: string\n    connectorIdPathParam:\n      in: path\n      name: connector-id\n      required: true\n      description: Id of the connector.\n      schema:\n        type: string\n  responses:\n    Unauthorized:\n      description: Unauthorized.\n    Forbidden:\n      description: Resource Forbidden\n    ServerError:\n      description: Internal Server Error.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotImplemented:\n      description: Not Implemented.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    NotFound:\n      description: Not Found.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidInput:\n      description: Bad Request.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    OK:\n      description: OK.\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://localhost:9443/oauth/authorize'\n          tokenUrl: 'https://localhost:9443/oauth/token'\n          scopes: {}\n  schemas:\n    CategoriesRes:\n      type: object\n      description: Governance connector category response.\n      properties:\n        id:\n          type: string\n          description: Connector category id.\n          example: QWNjb3VudCBNYW5hZ2VtZW50IFBvbGljaWVz\n        name:\n          type: string\n          description: Connector category name.\n          example: Account Management Policies\n        self:\n          type: string\n          description: Path to retrieve the full connector information.\n          example: /t/carbon.super/api/server/v1/identity-governance/QWNjb3VudCBNYW5hZ2VtZW50IFBvbGljaWVz\n        connectors:\n          type: array\n          description: Connectors of the category with minimal attributes.\n          items:\n            $ref: '#/components/schemas/CategoryConnectorsRes'\n    CategoryConnectorsRes:\n      type: object\n      description: Governance connector response with minimal attributes.\n      properties:\n        id:\n          type: string\n          description: Connector id.\n          example: c3VzcGVuc2lvbi5ub3RpZmljYXRpb24\n        self:\n          type: string\n          description: Path to retrieve the full connector information.\n          example: /t/carbon.super/api/server/v1/identity-governance/QWNjb3VudCBNYW5hZ2VtZW50IFBvbGljaWVz/connectors/c3VzcGVuc2lvbi5ub3RpZmljYXRpb24\n    CategoryRes:\n      type: object\n      description: Governance connector category response.\n      properties:\n        name:\n          type: string\n          description: Connector category name.\n          example: Account Management Policies\n        connectors:\n          type: array\n          description: Connectors of the category with minimal attributes.\n          items:\n            $ref: '#/components/schemas/ConnectorRes'\n    ConnectorRes:\n      type: object\n      description: Governance connector response.\n      properties:\n        id:\n          type: string\n          description: Connector id.\n          example: c3VzcGVuc2lvbi5ub3RpZmljYXRpb24\n        name:\n          type: string\n          description: Connector name.\n          example: suspension.notification\n        category:\n          type: string\n          description: Connector category.\n          example: Account Management Policies\n        friendlyName:\n          type: string\n          description: Connector friendly name.\n          example: Lock Idle Accounts\n        order:\n          type: integer\n          description: Connector order.\n          example: 0\n        subCategory:\n          type: string\n          description: Connector subcategory.\n          example: DEFAULT\n        properties:\n          type: array\n          description: Define any additional properties if required.\n          items:\n            $ref: '#/components/schemas/PropertyRes'\n    PropertyRes:\n      type: object\n      description: Governance connector property.\n      properties:\n        name:\n          type: string\n          description: Property name.\n          example: suspension.notification.enable\n        value:\n          type: string\n          description: Property value.\n          example: 'false'\n        displayName:\n          type: string\n          description: Property display name.\n          example: Enable\n        description:\n          type: string\n          description: Property description.\n          example: Enable account suspend notifications.\n        meta:\n          type: object\n          description: Meta data properties\n          $ref: '#/components/schemas/MetaRes'\n    MetaRes:\n      type: object\n      description: Meta Data related to each property\n      properties:\n        type:\n          type: string\n          description: Data type of the property\n          example: boolean\n        regex:\n          type: string\n          description: regular expression\n          example: \"[a-zA-Z0-9]{6}\"\n        groupID:\n          type: integer\n          description: Group id of the property if any\n          example: 0\n    ConnectorsPatchReq:\n      type: object\n      description: Governance connector property patch request.\n      required:\n        - operation\n        - properties\n      properties:\n        operation:\n          type: string\n          description: Governance connector properties patch operation.\n          enum:\n            - UPDATE\n          example: UPDATE\n        properties:\n          type: array\n          description: Governance connector properties to patch.\n          items:\n            $ref: '#/components/schemas/PropertyReq'\n    PropertyReq:\n      type: object\n      description: Governance connector property to patch.\n      required:\n        - name\n        - value\n      properties:\n        name:\n          type: string\n          description: Property name.\n          example: suspension.notification.enable\n        value:\n          type: string\n          description: Property value.\n          example: 'false'\n    PreferenceSearchAttribute:\n      type: object\n      description: Governance connector details.\n      required:\n        - connector-name\n      properties:\n        connector-name:\n          type: string\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/Attribute'\n    Attribute:\n      type: string\n      description: Attribute name.\n    PreferenceResp:\n      type: object\n      description: Governance connector property values.\n      properties:\n        connector-name:\n          type: string\n        properties:\n          type: array\n          items:\n            $ref: '#/components/schemas/PropertyReq'\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: IDG-00000\n        message:\n          type: string\n          example: Some Error Message\n        description:\n          type: string\n          example: Some Error Description\n        traceId:\n          type: string\n          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047\n\n",
			"canonicalURL": "/github.com/wso2/identity-api-server@0ca8f706a1ea7f14715132a26a22235bbe7a6840/-/blob/components/org.wso2.carbon.identity.api.server.identity.governance/org.wso2.carbon.identity.api.server.identity.governance.v1/src/main/resources/identity-governance.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wso2/identity-api-server/blob/0ca8f706a1ea7f14715132a26a22235bbe7a6840/components/org.wso2.carbon.identity.api.server.identity.governance/org.wso2.carbon.identity.api.server.identity.governance.v1/src/main/resources/identity-governance.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at 1:28900: path parameter not specified: \"tenant-domain\""
}