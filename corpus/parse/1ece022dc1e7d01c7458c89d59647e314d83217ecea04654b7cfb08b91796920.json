{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tyrchen/quenya"
		},
		"file": {
			"name": "todo_full.yml",
			"size": 0,
			"path": "parser/test/fixture/todo_full.yml",
			"byteSize": 5412,
			"content": "openapi: 3.0.0\ninfo:\n  title: Todo API\n  description: |\n    Hello world! This is a __Sample API__ for todo API\n  version: 0.1.0\nservers:\n  - url: https://api.todo.mvc/v1\n    description: Production server\n  - url: http://localhost:4000/api/v1\n    description: Local dev server\ntags:\n  - name: todos\n  - name: todo\ncomponents:\n  schemas:\n    status:\n      type: string\n      enum: [active, completed]\n    todoId:\n      type: string\n      format: uuid\n    todoBody:\n      type: string\n      minLength: 3\n      maxLength: 140\n    dateTime:\n      type: string\n      format: date-time\n    Todo:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/todoId\"\n        body:\n          $ref: \"#/components/schemas/todoBody\"\n        status:\n          $ref: \"#/components/schemas/status\"\n        created:\n          $ref: \"#/components/schemas/dateTime\"\n        updated:\n          $ref: \"#/components/schemas/dateTime\"\n      required: [body]\n      example:\n        id: 16ba8d00-d44c-4f61-841f-2da8221091bc\n        body: \"hello world!\"\n        status: active\n        created: \"2020-11-11T17:32:28Z\"\n        updated: \"2020-11-11T19:32:28Z\"\n\n    Todos:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Todo\"\n    Error:\n      type: object\n      required: [code, message]\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n\n  parameters:\n    cursor:\n      name: X-Cursor\n      in: header\n      required: true\n      description: cursor for next page\n      schema:\n        type: string\n    filter:\n      name: filter\n      in: query\n      description: \u003e\n        filter type:\n          * `all`: default, show all items\n          * `active`: show active todo items\n          * `completed`: show completed todo items\n      schema:\n        type: string\n        enum: [all, active, completed]\n        default: all\n    limit:\n      name: limit\n      in: query\n      required: false\n      description: \u003e\n        how many items to return at one time\n        * default: 10\n        * min: 10\n        * max: 100\n      schema:\n        type: integer\n        format: int32\n        minimum: 10\n        maximum: 100\n        default: 10\n\n  responses:\n    Todo:\n      description: a single todo item\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Todo\"\n    Error:\n      description: unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Todos:\n      description: a paged array of todo items\n      headers:\n        X-Cursor:\n          $ref: \"#/components/parameters/cursor\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Todos\"\n\n  securitySchemes:\n    token:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\npaths:\n  /todo/{todoId}:\n    get:\n      operationId: getTodo\n      tags: [todo]\n      description: get a todo item\n      x-services:\n        - name: GetTodo\n      parameters:\n        - name: todoId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            $ref: \"#/components/schemas/todoId\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Todo\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n    delete:\n      operationId: deleteTodo\n      tags: [todo]\n      description: delete a todo item\n      parameters:\n        - name: todoId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            $ref: \"#/components/schemas/todoId\"\n      responses:\n        \"204\":\n          description: No content\n        default:\n          $ref: \"#/components/responses/Error\"\n    patch:\n      operationId: updateTodo\n      tags: [todo]\n      description: update todo status\n      parameters:\n        - name: todoId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            $ref: \"#/components/schemas/todoId\"\n      requestBody:\n        description: todo item status\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                status:\n                  $ref: \"#/components/schemas/status\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Todo\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /todos:\n    get:\n      operationId: listTodos\n      tags: [todos]\n      description: returns a list of todo items.\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/filter\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Todos\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n    post:\n      operationId: createTodo\n      tags: [todos]\n      description: create a new todo item\n      requestBody:\n        description: todo item to be posted\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Todo\"\n            example:\n              body: \"hello world\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Todo\"\n        default:\n          $ref: \"#/components/responses/Error\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"Todos\": headers: X-Cursor: resolve \"#/components/parameters/cursor\" reference: component by reference not found"
}