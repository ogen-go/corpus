{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/davesag/mock-algolia"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "api.yml",
			"byteSize": 11553,
			"content": "openapi: 3.0.1\ninfo:\n  title: Algolia Mock API\n  description: A mock server for Algolia\n  contact:\n    email: 'davesag@gmail.com'\n  license:\n    name: 'MIT'\n    url: https://opensource.org/licenses/MIT\n  version: 1.0.0\nservers:\n- url: /1\ntags:\n- name: root\n  description: Root level API routes\n- name: indices\n  description: Routes that manipulate indices\npaths:\n  /:\n    get:\n      tags:\n      - root\n      servers:\n      - url: /\n      summary: Display API version information\n      operationId: versions\n      responses:\n        200:\n          description: Information about the available API Versions\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n  /ping:\n    get:\n      tags:\n      - root\n      servers:\n      - url: /\n      summary: Checks that the server is alive\n      operationId: ping\n      responses:\n        200:\n          description: 'Information about the server'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PingResponse'\n  /indexes/{name}:\n    post:\n      tags:\n      - indices\n      summary: Add a record to an index\n      operationId: v1_indices_addObject\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlgoliaData'\n      responses:\n        200:\n          description: 'Response to an Add an Object to an Index Request'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlgoliaResponse'\n  /indexes/{name}/batch:\n    post:\n      tags:\n      - indices\n      summary: Perform an action on a collection of objects given a named index\n      operationId: v1_indices_bulkActions\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BulkRequestsBody'\n      responses:\n        200:\n          description: 'Responds with the objectIds that were acted upon'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkOperationResponse'\n  /indexes/{name}/settings:\n    put:\n      tags:\n        - indices\n      summary: Update the settings for the named index.\n      operationId: v1_indices_updateSettings\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n        - name: forwardToReplicas\n          in: query\n          description: Should this request be forwared on to replicas?\n          required: true\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlgoliaSettings'\n      responses:\n        200:\n          description: 'Gives the objectID that was updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlgoliaResponse'\n  /indexes/{name}/{objectID}:\n    put:\n      tags:\n        - indices\n      summary: Replace the object with the supplied objectID for the index with the given name with the data in the request body\n      operationId: v1_indices_replaceObject\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n        - name: objectID\n          in: path\n          description: The object's objectID\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlgoliaData'\n      responses:\n        200:\n          description: 'Gives the objectID that was updated'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlgoliaResponse'\n    delete:\n      tags:\n        - indices\n      summary: Delete the object with the supplied objectID for the index with the given name\n      operationId: v1_indices_deleteObject\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n        - name: objectID\n          in: path\n          description: The object's objectID\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Gives the objectId that was deleted'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlgoliaResponse'\n  /indexes/{name}/task/{taskID}:\n    get:\n      tags:\n        - indices\n      summary: Wait for the task with the given ID to finish.\n      operationId: v1_indices_waitTask\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n        - name: taskID\n          in: path\n          description: The ID of the task to wait for\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Responds with either status: published or notPublished'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WaitResponse'\n  /indexes/{name}/{objectID}/partial:\n    post:\n      tags:\n        - indices\n      summary: Update the object with the supplied objectID for the index with the given name using the data in the request body\n      operationId: v1_indices_updateObject\n      parameters:\n        - name: name\n          in: path\n          description: The index name\n          required: true\n          schema:\n            type: string\n        - name: objectID\n          in: path\n          description: The object's objectID\n          required: true\n          schema:\n            type: string\n        - name: createIfNotExists\n          in: query\n          description: 'Defaults to true'\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlgoliaData'\n      responses:\n        200:\n          description: 'The objectID of the updated or created object'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlgoliaResponse'\ncomponents:\n  schemas:\n    PingResponse:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        version:\n          type: string\n        uptime:\n          type: number\n    APIVersion:\n      type: object\n      properties:\n        version:\n          type: integer\n          description: The API's version number\n        path:\n          type: string\n          description: The relative path to the API\n    VersionResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/APIVersion'\n    AlgoliaData:\n      type: object\n      properties:\n        objectID:\n          type: string\n      additionalProperties: true\n    AlgoliaSettings:\n      type: object\n      properties:\n        minWordSizefor1Typo:\n          type: number\n        minWordSizefor2Typos:\n          type: number\n        hitsPerPage:\n          type: number\n        attributesToRetrieve:\n          type: array\n          items:\n            type: string\n        attributesToHighlight:\n          type: array\n          items:\n            type: string\n        attributesToSnippet:\n          type: array\n          items:\n            type: string\n        attributesToIndex:\n          type: array\n          items:\n            type: string\n        attributesForFaceting:\n          type: array\n          items:\n            type: string\n        attributeForDistinct:\n          type: array\n          items:\n            type: string\n        ranking:\n          type: array\n          items:\n            type: string\n            enum:\n              - typo\n              - geo\n              - proximity\n              - attribute\n              - exact\n              - custom\n        customRanking:\n          type: array\n          items:\n            type: string\n        searchableAttributes:\n          type: array\n          items:\n            type: string\n        queryType:\n          type: string\n          enum:\n            - prefixAll\n            - prefixLast\n            - prefixNone\n        highlightPreTag:\n          type: string\n        highlightPostTag:\n          type: string\n        keepDiacriticsOnCharacters:\n          type: string\n        queryLanguages:\n          # see https://www.algolia.com/doc/api-reference/api-parameters/queryLanguages/\n          type: array\n          items:\n            type: string\n            enum:\n              - af\n              - ar\n              - az\n              - bg\n              - bn\n              - ca\n              - cs\n              - cy\n              - da\n              - de\n              - el\n              - en\n              - eo\n              - es\n              - et\n              - eu\n              - fa\n              - fi\n              - fo\n              - fr\n              - ga\n              - gl\n              - he\n              - hi\n              - hu\n              - hy\n              - id\n              - is\n              - it\n              - ja\n              - ka\n              - kk\n              - ko\n              - ku\n              - ky\n              - lt\n              - lv\n              - mi\n              - mn\n              - mr\n              - ms\n              - mt\n              - nb\n              - nl\n              - no\n              - ns\n              - pl\n              - ps\n              - pt\n              - 'bt-br'\n              - qu\n              - ro\n              - ru\n              - sk\n              - sq\n              - sv\n              - sw\n              - ta\n              - te\n              - th\n              - tl\n              - tn\n              - tr\n              - tt\n              - uk\n              - ur\n              - uz\n              - zh\n      additionalProperties: true\n    AlgoliaRequest:\n      type: object\n      properties:\n        action:\n          type: string\n          enum:\n            - addObject\n            - updateObject\n            - partialUpdateObject\n            - deleteObject\n        objectID:\n          type: string\n        body:\n          $ref: '#/components/schemas/AlgoliaData'\n    AlgoliaResponse:\n      type: object\n      properties:\n        objectID:\n          type: string\n        taskID:\n          type: number\n    BulkRequestsBody:\n      type:  object\n      properties:\n        requests:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlgoliaRequest'\n    BulkOperationResponse:\n      type: object\n      properties:\n        objectIDs:\n          type: array\n          items:\n            type: string\n        taskID:\n          type: number\n    WaitResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - published\n            - notPublished\n"
		}
	},
	"Error": "parse: parse spec: paths: /indexes/{name}/settings: put: operation \"v1_indices_updateSettings\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/AlgoliaSettings\": parse schema: property \"queryLanguages\": parse schema: item: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}