{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AuthGuard/AuthGuard"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "api/src/main/resources/openapi.yml",
			"byteSize": 45396,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: AuthGuard API\n  version: 0.13.0\n\nsecurity:\n  - apiKey: []\n\npaths:\n  # ----------------- accounts -----------------\n  /accounts:\n    post:\n      operationId: createAccount\n      description: Create an account\n      tags:\n        - Accounts\n      parameters:\n        - $ref:  \"#/components/parameters/IdempotentKeyHeader\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAccountRequest\" \n      responses:\n        201:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n        409:\n          description: Conflict - if the idempotent key header was used to create an account before\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/{id}:\n    get:\n      operationId: getAccountById\n      description: Get an account by ID\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n    patch:\n      operationId: patchAccount\n      description: Update account information\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateAccountRequest\" \n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n    delete:\n      operationId: deleteAccount\n      description: Delete an account\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/identifier/{id}:\n    get:\n      operationId: getAccountByCredentialsIdentifier\n      description: Get an account by credentials identifier\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdentifierParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/externalId/{id}:\n    get:\n      operationId: getAccountByExternalId\n      description: Get an account by external ID\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/email/{email}:\n    get:\n      operationId: getAccountByEmail\n      description: Get an account by email, regardless of whether it's the primary email or not\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/EmailParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/email/{email}/exists:\n    get:\n      operationId: emailExists\n      description: Checks whether an account with that email exists\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/EmailParameter\"\n      responses:\n        200:\n          description: Success\n        404:\n          description: Not found\n\n  /accounts/{id}/permissions:\n    patch:\n      operationId: updateAccountPermissions\n      description: Update the permissions of an account\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PermissionsRequest\" \n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/{id}/roles:\n    patch:\n      operationId: updateAccountRoles\n      description: Update the roles of an account\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RolesRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/{id}/activate:\n    patch:\n      operationId: activateAnAccount\n      description: Activate an account if not already active\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/{id}/deactivate:\n    patch:\n      operationId: deactivateAnAccount\n      description: Deactivate an account if it's active\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/{id}/apps:\n    get:\n      operationId: getApplicationsByAccountId\n      description: Get a list of applications associated with an account\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationsArrayResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/{id}/locks:\n    get:\n      operationId: getLocksByAccountId\n      description: Get a list of active locks placed on an account\n      tags:\n        - Accounts\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/AccountLocksArrayResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /accounts/complete:\n    post:\n      operationId: createAccountWithCredentials\n      description: Create an account as well as its credentials\n      tags:\n        - Accounts\n      parameters:\n        - $ref:  \"#/components/parameters/IdempotentKeyHeader\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateCompleteAccountRequest\" \n      responses:\n        201:\n          description: Success\n          $ref: \"#/components/responses/CompleteAccountResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n        409:\n          description: Conflict - if the idempotent key header was used to create an account before\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  # ----------------- credentials -----------------\n  /credentials:\n    post:\n      operationId: createCredentials\n      description: Create credentials\n      tags:\n        - Credentials\n      parameters:\n        - $ref:  \"#/components/parameters/IdempotentKeyHeader\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/CreateCredentialsRequest\"\n      responses:\n        201:\n          description: Success\n          $ref:  \"#/components/responses/CredentialsResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n        409:\n          description: Conflict - if the idempotent key header was used to create credentials before\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /credentials/{id}:\n    get:\n      operationId: getCredentialsById\n      description: Get credentials by ID\n      tags:\n        - Credentials\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n    delete:\n      operationId: deleteCredentials\n      description: Delete credentials by ID\n      tags:\n        - Credentials\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /credentials/identifier/{identifier}:\n    get:\n      operationId: getCredentialsByIdentifier\n      description: Get credentials by identifier\n      tags:\n        - Credentials\n      parameters:\n        - $ref: \"#/components/parameters/IdentifierParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /credentials/identifier/{identifier}/exists:\n    get:\n      operationId: identifierExists\n      description: Check whether an identifier exists or not\n      tags:\n        - Credentials\n      parameters:\n        - $ref: \"#/components/parameters/IdentifierParameter\"\n      responses:\n        200:\n          description: Success\n        404:\n          description: Not found\n\n  /credentials/{id}/password:\n    patch:\n      operationId: updatePassword\n      description: Update the password in a credentials entity\n      tags:\n        - Credentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateCredentialsPasswordRequest\"\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /credentials/{id}/identifiers:\n    patch:\n      operationId: addIdentifier\n      description: Add new identifiers to credentials\n      tags:\n        - Credentials\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/UserIdentifiersRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n\n    delete:\n      operationId: deleteIdentifier\n      description: Delete identifiers from credentials\n      tags:\n        - Credentials\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/UserIdentifiersRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /credentials/reset_token:\n    post:\n      operationId: generateResetToken\n      description: Generates a new reset token which can be used by the user to set a new password\n      tags:\n        - Credentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/PasswordResetTokenRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/PasswordResetTokenResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /credentials/reset:\n    post:\n      operationId: resetPassword\n      description: Set a new password using a reset token or by using an identifier and its current password\n      tags:\n        - Credentials\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/PasswordResetRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/CredentialsResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  # ----------------- applications -----------------\n  /apps:\n    post:\n      operationId: createApp\n      description: Create an application\n      tags:\n        - Applications\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateApplicationRequest\" \n      responses:\n        201:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /apps/{id}:\n    get:\n      operationId: getAppById\n      description: Get an application by ID\n      tags:\n        - Applications\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n    delete:\n      operationId: deleteApp\n      description: Delet an application\n      tags:\n        - Applications\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /apps/{id}/keys:\n    get:\n      operationId: getApiKeysByAppId\n      description: Get all API keys associated with an application\n      tags:\n        - Applications\n        - API Keys\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApiKeysArrayResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /apps/externalId/{id}:\n    get:\n      operationId: getAppsByExternalId\n      description: Get an application by an external ID\n      tags:\n        - Applications\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /apps/{id}/activate:\n    patch:\n      operationId: activateAnApp\n      description: Activate an application if not already active\n      tags:\n        - Applications\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /apps/{id}/deactivate:\n    patch:\n      operationId: deactivateAnApp\n      description: Deactivate an application if it's active\n      tags:\n        - Applications\n      parameters:\n        - $ref: \"#/components/parameters/IdParameter\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  # ---------------- API keys ---------------\n  /keys:\n    post:\n      operationId: generateApiKey\n      description: Generate a new API key for an application\n      tags:\n        - API Keys\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApiKeyRequest\" \n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApiKeyResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /keys/verify:\n    post:\n      operationId: verifyKey\n      description: Verify an API key\n      tags:\n        - API Keys\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApiKeyVerificationRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApplicationResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /keys/{id}:\n    get:\n      operationId: getApiKeyById\n      description: Get an API key by ID\n      tags:\n        - API Keys\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApiKeyRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApiKeyResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n    delete:\n      operationId: deleteApiKey\n      description: Delete an API key by ID\n      tags:\n        - API Keys\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ApiKeyRequest\"\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/ApiKeyResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  # ----------------- roles -----------------\n  /roles:\n    post:\n      operationId: createRole\n      description: Create a role\n      tags:\n        - Roles\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRoleRequest\" \n      responses:\n        201:\n          description: Success\n          $ref: \"#/components/responses/RoleResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n    \n    get:\n      operationId: getAllRoles\n      description: Get all roles\n      tags:\n        - Roles\n      responses:\n        201:\n          description: Success\n          $ref: \"#/components/responses/RolesArrayResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /roles/{id}:\n    get:\n      operationId: getRoleById\n      description: Get role by ID\n      tags:\n        - Roles\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/RoleResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n    delete:\n      operationId: deleteRole\n      description: Delete a role\n      tags:\n        - Roles\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/RoleResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /roles/name/{name}:\n    get:\n      operationId: getRoleByName\n      description: Get a role by its name\n      tags:\n        - Roles\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/RoleResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  # ----------------- permissions -----------------\n  /permissions:\n    post:\n      operationId: createPermission\n      description: Create a permission\n      tags:\n        - Permissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePermissionRequest\" \n      responses:\n        201:\n          description: Success\n          $ref: \"#/components/responses/PermissionResponse\"\n        400:\n          description: Bad request\n          $ref: \"#/components/responses/ErrorResponse\"\n    get:\n      operationId: getPermissions\n      description: Get all permissions\n      tags:\n        - Permissions\n      parameters:\n        - name: group\n          in: query\n          schema: \n            type: string\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/PermissionsArrayResponse\"\n\n  /permissions/{id}:\n    get:\n      operationId: getPermissionById\n      description: Get a permission by ID\n      tags:\n        - Permissions\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/PermissionResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n    delete:\n      operationId: deletePermission\n      description: Delete a permission by ID\n      tags:\n        - Permissions\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/PermissionResponse\"\n        404:\n          description: Not found\n          $ref: \"#/components/responses/ErrorResponse\"\n\n  /permissions/group/{group}:\n    get:\n      operationId: getPermissionsByGroupName\n      description: Get a permissions by group name\n      tags:\n        - Permissions\n      responses:\n        200:\n          description: Success\n          $ref: \"#/components/responses/PermissionsArrayResponse\"\n\n  # ----------------- auth -----------------\n  /auth/exchange:\n    post:\n      operationId: exchange\n      description: Perform an auth exchange\n      tags:\n        - Auth\n      parameters:\n        - name: from\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: to\n          in: query\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/AuthRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /auth/exchange/clear:\n    post:\n      operationId: clear\n      description: Clear (delete) a token\n      tags:\n        - Auth\n      parameters:\n        - name: tokenType\n          in: query\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/AuthRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /auth/authenticate:\n    post:\n      operationId: authenticate\n      description: Perform an auth exchange from 'basic' to what is specified in the configuration\n      tags:\n        - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/AuthRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /auth/refresh:\n    post:\n      operationId: refresh\n      description: Perform an auth exchange from 'refresh' to what is specified in the configuration\n      tags:\n        - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/AuthRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /auth/logout:\n    post:\n      operationId: logout\n      description: Clear (delete) a token based on whatever is specified in the configuration\n      tags:\n        - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/AuthRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /auth/exchange/attempts:\n    get:\n      operationId: getExchangeAttempts\n      description: Get a list of attempts performed for an entity\n      tags:\n        - Auth\n      parameters:\n        - name: entityId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: fromTimestamp\n          in: query\n          schema:\n            type: string\n            format: date-time\n        - name: fromExchange\n          in: query\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/ExchangeAttemptsArrayResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /passwordless/verify:\n    post:\n      operationId: Verify a passwordless token\n      tags:\n        - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/PasswordlessRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /otp/verify:\n    post:\n      operationId: Verify a one-time password\n      tags:\n        - Auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/OtpRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /verification/email:\n    post:\n      operationId: Verify an email\n      tags:\n        - Verification\n      parameters:\n        - name: token\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /actions/otp:\n    post:\n      operationId: Generate a one-time password for an action\n      tags:\n        - Action tokens\n      parameters:\n        - name: accountId\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/SuccessfulAuthResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /actions/token:\n    post:\n      operationId: Generate an action token either from an OTP generated by /actions/otp or by a user identifier and password\n      tags:\n        - Action tokens\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref:  \"#/components/schemas/ActionTokenRequest\"\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/ActionTokenResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"\n\n  /actions/verify:\n    post:\n      operationId: Verify that an action token is valid for the specified action\n      tags:\n        - Action tokens\n      parameters:\n        - name: token\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: action\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: Success\n          $ref:  \"#/components/responses/ActionTokenResponse\"\n        400:\n          description: Bad request\n          $ref:  \"#/components/responses/ErrorResponse\"          \n\ncomponents:\n  securitySchemes:\n    apiKey:\n      name: Authorization\n      type: apiKey\n      in: header\n\n  parameters:\n    IdParameter:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: string\n\n    IdentifierParameter:\n      name: identifier\n      in: path\n      required: true\n      schema:\n        type: string\n\n    EmailParameter:\n      name: email\n      in: path\n      required: true\n      schema:\n        type: string\n\n    IdempotentKeyHeader:\n      name: X-IdempotentKey\n      in: header\n      required: true\n      schema:\n        type: string\n\n  responses:\n    ErrorResponse:\n      description: _\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    \n    SuccessfulAuthResponse:\n      description: _\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AuthResult\"\n\n    AccountResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n\n    CredentialsResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/Credentials\"\n\n    CompleteAccountResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountWithCredentials\"\n\n    ApplicationResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/Application\"\n\n    ApiKeyResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKey\"\n\n    RoleResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/Role\"\n\n    RolesArrayResponse:\n      description: _\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Role\"\n\n    PermissionResponse:\n      description: _\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Permission\"\n\n    ApplicationsArrayResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Application\"\n\n    AccountLocksArrayResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AccountLock\"\n\n    PermissionsArrayResponse:\n      description: _\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Permission\"\n\n    ExchangeAttemptsArrayResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ExchangeAttempt\"\n\n    ApiKeysArrayResponse:\n      description: _\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/ApiKey\"\n\n    PasswordResetTokenResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/PasswordResetToken\"\n\n    ActionTokenResponse:\n      description: _\n      content:\n        application/json:\n              schema:\n                $ref: \"#/components/schemas/ActionToken\"        \n\n  schemas:\n    AccountWithCredentials:\n      type: object\n      properties:\n        account:\n          type: object\n          $ref: \"#/components/schemas/Account\"\n        credentials:\n          type: object\n          $ref: \"#/components/schemas/Credentials\"\n\n    Account:\n      type: object\n      properties:\n        id:\n          type: string\n        externalId:\n          type: string\n        domain:\n          type: string\n        firstName:\n          type: string\n        middleName:\n          type: string\n        lastName:\n          type: string\n        fullName:\n          type: string\n        email:\n          type: object\n          $ref: \"#/components/schemas/Email\"\n        backupEmail:\n          type: object\n          $ref: \"#/components/schemas/Email\"\n        phoneNumber:\n          type: object\n          $ref: \"#/components/schemas/PhoneNumber\"\n        permissions:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Permission\"\n        roles:\n          type: array\n          items:\n            type: string\n        active:\n          type: boolean\n        metadata:\n          description: A collection of custom information to be attached to the account\n          type: object\n\n    Credentials:\n      type: object\n      properties:\n        accountId:\n          type: string\n        domain:\n          type: string\n        identifiers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UserIdentifier\"\n\n    UserIdentifier:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - USERNAME\n            - EMAIL\n            - PHONE_NUMBER\n        identifier:\n          type: string\n        domain:\n          type: string\n\n    Application:\n      type: object\n      properties:\n        id:\n          type: string\n        externalId:\n          type: string\n        domain:\n          type: string\n        accountId:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Permission\"\n        roles:\n          type: array\n          items:\n            type: string\n        active:\n          type: boolean\n    \n    Email:\n      type: object\n      properties:\n        email: \n          type: string\n        verified:\n          type: boolean\n\n    PhoneNumber:\n      type: object\n      properties:\n        number:\n          type: string\n        verified:\n          type: boolean\n \n    Permission:\n      type: object\n      properties:\n        group:\n          type: string\n        name:\n          type: string\n        domain:\n          type: string\n\n    PermissionssArray:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Permission\"\n\n    Role:\n      type: object\n      properties:\n        name:\n          type: string\n        domain:\n          type: string\n\n    RolesArray:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Role\"\n\n    AccountLock:\n      type: object\n      properties:\n        accountId:\n          type: string\n        expiresAt:\n          type: string\n          format: date-time\n\n    ApiKey:\n      type: object\n      properties:\n        id:\n          type: string\n        appId:\n          type: string\n        key:\n          type: string\n\n    ExchangeAttempt:\n      type: object\n      properties:\n        entityId:\n          type: string\n        fromExchange:\n          type: string\n        toExchange:\n          type: string\n        successful:\n          type: boolean\n        deviceId:\n          type: string\n        externalSessionId:\n          type: string\n        clientId:\n          type: string\n        sourceIp:\n          type: string\n\n    AuthRequest:\n      type: object\n      properties:\n        domain:\n          type: string\n        identifier:\n          type: string\n        password:\n          type: string\n        token:\n          type: string\n        deviceId:\n          type: string\n        externalSessionId:\n          type: string\n        sourceIp:\n          type: string\n        userAgent:\n          type: string\n        restrictions:\n          type: object\n          $ref: \"#/components/schemas/TokenRestrictions\"\n\n    TokenRestrictions:\n      type: object\n      properties:\n        permissions:\n          type: array\n          items: \n            type: string\n        roles:\n          type: array\n          items:\n            type: string\n  \n    AuthResult:\n      type: object\n      properties:\n        type:\n          type: string\n        token:\n          type: string\n        refreshToken:\n          type: string\n        validFor:\n          type: string\n          description: The duration for which the token will be valid (in seconds)\n\n    CreateAccountRequest:\n      type: object\n      required:\n        - domain\n      properties:\n        externalId:\n          type: string\n        domain:\n          type: string\n        firstName:\n          type: string\n        middleName:\n          type: string\n        lastName:\n          type: string\n        fullName:\n          type: string\n        email:\n          type: object\n          $ref: \"#/components/schemas/Email\"\n        backupEmail:\n          type: object\n          $ref: \"#/components/schemas/Email\"\n        phoneNumber:\n          type: object\n          $ref: \"#/components/schemas/PhoneNumber\"\n        permissions:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Permission\"\n        roles:\n          type: array\n          items:\n            type: string\n        active:\n          type: boolean\n        metadata:\n          description: A collection of custom information to be attached to the account\n          type: object\n\n    UpdateAccountRequest:\n      type: object\n      properties:\n        firstName:\n          type: string\n        middleName:\n          type: string\n        lastName:\n          type: string\n        fullName:\n          type: string\n        email:\n          type: object\n          $ref: \"#/components/schemas/Email\"\n        backupEmail:\n          type: object\n          $ref: \"#/components/schemas/Email\"\n        phoneNumber:\n          type: object\n          $ref: \"#/components/schemas/PhoneNumber\"\n\n    CreateApplicationRequest:\n      type: object\n      required:\n        - domain\n      properties:\n        externalId:\n          type: string\n        domain:\n          type: string\n        accountId:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Permission\"\n        roles:\n          type: array\n          items:\n            type: string\n        active:\n          type: boolean\n\n    CreateCredentialsRequest:\n      type: object\n      required:\n        - domain\n        - identifiers\n      properties:\n        accountId:\n          type: string\n        domain:\n          type: string\n        identifiers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UserIdentifier\"\n        plainPassword:\n          type: string\n\n    UpdateCredentialsPasswordRequest:\n      type: object\n      properties:\n        plainPassword:\n          type: string\n\n    CreateCompleteAccountRequest:\n      type: object\n      properties:\n        account:\n          type: object\n          $ref: \"#/components/schemas/CreateAccountRequest\"\n        credentials:\n          type: object\n          $ref: \"#/components/schemas/CreateCredentialsRequest\"\n\n    ApiKeyRequest:\n      type: object\n      required:\n        - appId\n        - keyType\n      properties:\n        appId:\n          type: string\n        keyType:\n          type: string\n\n    ApiKeyVerificationRequest:\n      type: object\n      required:\n        - key\n        - keyType\n      properties:\n        key:\n          type: string\n        keyType:\n          type: string\n\n    CreateRoleRequest:\n      type: object\n      required:\n        - name\n        - domain\n      properties:\n        name:\n          type: string\n        domain:\n          type: string\n\n    CreatePermissionRequest:\n      type: object\n      required:\n        - group\n        - name\n        - domain\n      properties:\n        group:\n          type: string\n        name:\n          type: string\n        domain:\n          type: string\n\n    AccountEmailRequest:\n      type: object\n      required:\n        - email\n      properties:\n        email:\n          type: boolean\n        backup:\n          type: boolean\n          default: false\n\n    PermissionsRequest:\n      type: object\n      required:\n        - action\n        - permissions\n      properties:\n        action:\n          type: string\n          enum:\n            - GRANT\n            - REVOKE\n        permissions:\n          type: array\n          items:\n            $ref:  \"#/components/schemas/Permission\"\n\n    RolesRequest:\n      type: object\n      required:\n        - action\n        - roles\n      properties:\n        action:\n          type: string\n          enum:\n            - GRANT\n            - REVOKE\n        roles:\n          type: array\n          items:\n            type: string\n\n    UserIdentifiersRequest:\n      type: object\n      required:\n        - identifiers\n      properties:\n        oldIdentifier:\n          type: string\n        identifiers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UserIdentifier\"\n\n    PasswordlessRequest:\n      type: object\n      required:\n        - token\n      properties:\n        token:\n          type: string\n\n    OtpRequest:\n      type: object\n      required:\n        - passwordId\n        - password\n      properties:\n        passwordId:\n          type: string\n        password:\n          type: string\n\n    PasswordResetTokenRequest:\n      type: object\n      required:\n        - identifier\n        - domain\n      properties:\n        identifier:\n          type: string\n        domain:\n          type: string\n\n    PasswordResetRequest:\n      type: object\n      required:\n        - byToken\n        - plainPassword\n      properties:\n        byToken:\n          type: boolean\n        resetToken:\n          description: Required if 'byToken' is true\n          type: string\n        identifier:\n          description: Required if 'byToken' is false\n          type: string\n        domain:\n          description: Required if 'byToken' is false\n          type: string\n        oldPassword:\n          description: Required if 'byToken' is false\n          type: string\n        plainPassword:\n          type: string\n\n    PasswordResetToken:\n      type: object\n      properties:\n        token:\n          type: string\n        issuedAt:\n          type: integer\n          description: The time at which the token was issued (in epoch seconds)\n        expiresAt:\n          type: integer\n          description: The time after which the token will no longer be valid (in epoch seconds)\n\n    ActionToken:\n      type: object\n      properties:\n        token:\n          type: string\n        action:\n          type: string\n        accountId:\n          type: string\n        validFor:\n          type: number\n          description: The life time of the token in seconds\n\n    ActionTokenRequest:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - OTP\n            - BASIC\n        otp:\n          type: object\n          $ref: \"#/components/schemas/OtpRequest\"\n        basic:\n          type: object\n          $ref: \"#/components/schemas/AuthRequest\"\n        action:\n          type: string\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/AuthGuard/AuthGuard@e120b48ba5a40a1ea49f1d02c9868e9add4dcd7d/-/blob/api/src/main/resources/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/AuthGuard/AuthGuard/blob/e120b48ba5a40a1ea49f1d02c9868e9add4dcd7d/api/src/main/resources/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/roles/{id}\": get: operation \"getRoleById\": at 1:35177: parse path \"/roles/{id}\": path parameter not specified: \"id\""
}