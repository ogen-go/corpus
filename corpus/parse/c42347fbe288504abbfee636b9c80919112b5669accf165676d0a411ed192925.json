{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ObservationUnits_GET_POST_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/ObservationUnits/ObservationUnits_GET_POST_PUT.yaml",
			"byteSize": 9904,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /observationunits:\n    get:\n      summary: Get a filtered set of Observation Units\n      description: Get a filtered set of Observation Units\n      parameters:\n      - description: The unique ID of an Observation Unit\n        in: query\n        name: observationUnitDbId\n        required: false\n        schema:\n          type: string\n      - description: The unique ID of a germplasm (accession) to filter on\n        in: query\n        name: germplasmDbId\n        required: false\n        schema:\n          type: string\n      - description: The unique ID of a studies to filter on\n        in: query\n        name: studyDbId\n        required: false\n        schema:\n          type: string\n      - description: The unique ID of a location where these observations were collected\n        in: query\n        name: locationDbId\n        required: false\n        schema:\n          type: string\n      - description: The unique ID of a trial to filter on\n        in: query\n        name: trialDbId\n        required: false\n        schema:\n          type: string\n      - description: The unique ID of a program to filter on\n        in: query\n        name: programDbId\n        required: false\n        schema:\n          type: string\n      - description: The year or Phenotyping campaign of a multi-annual study (trees, grape, ...)\n        in: query\n        name: seasonDbId\n        required: false\n        schema:\n          type: string\n      - description: The Observation Unit Level. Returns only the observation unit of the specified Level. References ObservationUnit-\u003eobservationUnitPosition-\u003eobservationLevel-\u003elevelName\n        in: query\n        name: observationUnitLevelName\n        required: false\n        schema:\n          type: string\n      - description: The Observation Unit Level Order Number. Returns only the observation unit of the specified Level. References ObservationUnit-\u003eobservationUnitPosition-\u003eobservationLevel-\u003elevelOrder\n        in: query\n        name: observationUnitLevelOrder\n        required: false\n        schema:\n          type: string\n      - description: The Observation Unit Level Code. This parameter should be used together with `observationUnitLevelName` or `observationUnitLevelOrder`. References ObservationUnit-\u003eobservationUnitPosition-\u003eobservationLevel-\u003elevelCode\n        in: query\n        name: observationUnitLevelCode\n        required: false\n        schema:\n          type: string\n      - description: |-\n          Use this parameter to include a list of observations embedded in each ObservationUnit object. \n          \n          CAUTION - Use this parameter at your own risk. It may return large, unpaginated lists of observation data. Only set this value to True if you are sure you need to.\n        in: query\n        name: includeObservations\n        required: false\n        schema:\n          type: boolean\n      - $ref: '#/components/parameters/externalReferenceID'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/ObservationUnitListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Observation Units\n    post:\n      summary: Add new Observation Units\n      description: Add new Observation Units\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ObservationUnitNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ObservationUnitListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Observation Units\n    put:\n      summary: Update a set of Observation Units\n      description: |-\n        Update a set of Observation Units\n        \n        Note - In strictly typed languages, this structure can be represented as a Map or Dictionary of objects and parsed directly to JSON.\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                $ref: '#/components/schemas/ObservationUnitNewRequest'\n              example: \n                '\u003cobservationUnitDbId_1\u003e': \n                  additionalInfo: {}\n                  externalReferences:\n                  - referenceID: doi:10.155454/12341234\n                    referenceSource: DOI\n                  germplasmDbId: e9d9ed57\n                  germplasmName: A0000001\n                  locationDbId: 0e208b20\n                  locationName: Field Station Alpha\n                  observationUnitName: Plot 31\n                  observationUnitPUI: http://pui.per/plot/1a9afc14\n                  observationUnitPosition:\n                    entryType: TEST\n                    geoCoordinates:\n                      geometry:\n                        coordinates: [ -76.506042, 42.417373, 123 ]\n                        type: Point\n                      type: Feature\n                    observationLevel:\n                      levelName: plot\n                      levelOrder: 2\n                      levelCode: Plot_456\n                    observationLevelRelationships:\n                    - levelCode: Field_1\n                      levelName: field\n                      levelOrder: 0\n                    - levelCode: Block_6\n                      levelName: block\n                      levelOrder: 1\n                    - levelCode: Plot_456\n                      levelName: plot\n                      levelOrder: 2\n                    positionCoordinateX: '78'\n                    positionCoordinateXType: GRID_COL\n                    positionCoordinateY: '08'\n                    positionCoordinateYType: GRID_ROW\n                  programDbId: 2d763a7a\n                  programName: The Perfect Breeding Program\n                  seedLotDbId: 261ecb09\n                  studyDbId: 9865addc\n                  studyName: Purple_Tomato_1\n                  treatments:\n                  - factor: fertilizer\n                    modality: low fertilizer\n                  trialDbId: 776a609c\n                  trialName: Purple Tomato                  \n                '\u003cobservationUnitDbId_2\u003e': \n                  additionalInfo: {}\n                  externalReferences:\n                  - referenceID: doi:10.155454/12341234\n                    referenceSource: DOI\n                  germplasmDbId: e9d9ed57\n                  germplasmName: A0000001\n                  locationDbId: 0e208b20\n                  locationName: Field Station Alpha\n                  observationUnitName: Plot 17\n                  observationUnitPUI: http://pui.per/plot/1a9afc14\n                  observationUnitPosition:\n                    entryType: TEST\n                    geoCoordinates:\n                      geometry:\n                        coordinates: [ -76.506042, 42.417373, 123 ]\n                        type: Point\n                      type: Feature\n                    observationLevel:\n                      levelName: plot\n                      levelOrder: 2\n                      levelCode: Plot_123\n                    observationLevelRelationships:\n                    - levelCode: Field_1\n                      levelName: field\n                      levelOrder: 0\n                    - levelCode: Block_12\n                      levelName: block\n                      levelOrder: 1\n                    - levelCode: Plot_123\n                      levelName: plot\n                      levelOrder: 2\n                    positionCoordinateX: '74'\n                    positionCoordinateXType: GRID_COL\n                    positionCoordinateY: '03'\n                    positionCoordinateYType: GRID_ROW\n                  programDbId: 2d763a7a\n                  programName: The Perfect Breeding Program\n                  seedLotDbId: 261ecb09\n                  studyDbId: 9865addc\n                  studyName: Purple_Tomato_1\n                  treatments:\n                  - factor: fertilizer\n                    modality: low fertilizer\n                  trialDbId: 776a609c\n                  trialName: Purple Tomato\n      responses:\n        '200':\n          $ref: '#/components/responses/ObservationUnitListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Observation Units\ncomponents:\n  responses:\n    ObservationUnitListResponse:\n      content:\n        application/json:\n          schema:\n            title: ObservationUnitListResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/ObservationUnit'\n                    type: array\n                required:\n                - data\n                type: object\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}\n    \n      ",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@5252d84f331840650fffbca6cb8cece10a65cea6/-/blob/Specification/BrAPI-Phenotyping/ObservationUnits/ObservationUnits_GET_POST_PUT.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/5252d84f331840650fffbca6cb8cece10a65cea6/Specification/BrAPI-Phenotyping/ObservationUnits/ObservationUnits_GET_POST_PUT.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"ObservationUnitListResponse\": content: application/json: schema: parse schema: property \"@context\": parse schema: resolve \"#/components/schemas/Context\": find schema: resolve \"#/components/schemas/Context\": can't find value for \"components/schemas/Context\""
}