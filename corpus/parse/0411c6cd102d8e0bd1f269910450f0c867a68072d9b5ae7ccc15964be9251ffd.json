{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/areadesenvolvedor"
		},
		"file": {
			"name": "_open_banking_fase3_apis_part.yml",
			"size": 0,
			"path": "documentation/source/swagger/parts/_open_banking_fase3_apis_part.yml",
			"byteSize": 70135,
			"content": "openapi: 3.0.0\ninfo:\n  title: Fase 3 - APIs do Open Banking Brasil\n  description: |\n    ### Iniciação de pagamentos\n\n    Na fase 3 do Open Banking Brasil  será oferecida aos clientes a possibilidade de movimentação financeira a partir de aplicativos e plataformas externas ao ambiente no qual mantém sua conta.\n\n    Na prática o que teremos é a oferta de pagamentos, transferências e outras operações executadas a partir de aplicativos de terceiros, sempre com a prévia coleta do consentimento do cliente para a iniciação destas transações.\n\n    No âmbito da Resolução conjunta nº 1, de 04 de maio de 2020 o Open Banking Brasil passa a contar com os atores e operações ali definidos, reproduzidos a seguir.\n\n    #### Instituição detentora de conta\n\n    É a instituição participante do Open Banking que possui a capacidade de ofertar quaisquer dos tipos de conta a seguir: conta de depósitos à vista (conta-corrente), conta de poupança, conta-salário e conta de pagamento pré-paga, guardando similaridade com o conceito de [ASPSP](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Faccount-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801583820%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jeezEb6FpQnpx7uz2v3NAf2FYuSOps13d8VvR9kiRS8%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Faccount-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801583820%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jeezEb6FpQnpx7uz2v3NAf2FYuSOps13d8VvR9kiRS8%3D\u0026amp;reserved=0\u003e) - Account Servicing Payment Service Provider do modelo britânico.\n\n    No contexto do Open Banking as instituições detentoras de conta deverão observar critérios de segurança e conformidade previamente definidos.\n\n    Consulte neste [link](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Faspsp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=LYglRitKRsQgc2LUIlgmHnfs%2BuBWPuw6TEdM7ZanORE%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Faspsp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=LYglRitKRsQgc2LUIlgmHnfs%2BuBWPuw6TEdM7ZanORE%3D\u0026amp;reserved=0\u003e) as especificações de segurança aplicáveis.\n\n    #### Instituição iniciadora de transação de pagamento\n\n    É a instituição participante que presta serviço de iniciação de transação de pagamento sem deter em momento algum os fundos transferidos na prestação do serviço.\n\n    De forma análoga ao caso das detentoras de conta, as iniciadoras mantém certo grau de similaridade com o conceito de [TPP](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Fthird-party-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=AwM0i68xyxbQVEgYe9gIzWXUdUJuHX22GsGBARFP0r8%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwww.openbanking.org.uk%2Fproviders%2Fthird-party-providers%2F\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=AwM0i68xyxbQVEgYe9gIzWXUdUJuHX22GsGBARFP0r8%3D\u0026amp;reserved=0\u003e) - Third Party Provider do modelo britânico, devendo também observar critérios específicos de segurança, conforme detalhado neste [link](https://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Ftpp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jM1KEOJPgixn6XE98%2BHERACS3ZOjXcYzMbazr3KiCMs%3D\u0026amp;reserved=0\u003chttps://nam10.safelinks.protection.outlook.com/?url=https%3A%2F%2Fopenbanking-brasil.github.io%2Fspecs-seguranca%2Ftpp-user-guide.html\u0026amp;data=04%7C01%7Cclara.rohrmann%40bancointer.com.br%7C213ed77ede5b4e2af08c08d93226dbf8%7C05e665c9c5024a1998a5a913a6f52be8%7C1%7C0%7C637595964801593818%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000\u0026amp;sdata=jM1KEOJPgixn6XE98%2BHERACS3ZOjXcYzMbazr3KiCMs%3D\u0026amp;reserved=0\u003e).\n\n\n    #### Serviço de iniciação de transação de pagamento\n\n    É o serviço que possibilita a iniciação da instrução de uma transação de pagamento, ordenado pelo cliente, relativamente a uma conta de depósitos à vista (conta-corrente),  conta-salário, conta de poupança ou conta de pagamento pré-paga.\n\n    Inicialmente o Open Banking estará disponibilizando a iniciação de Pix com execução na data corrente.\n\n    Futuramente com a evolução do ecossistema novas modalidades de operações serão agregadas, assim como a possibilidade de agendamentos.\n\n    #### Iniciação pelo Recebedor\n    Iniciação pelo recebedor ocorre quando a prestação de serviço pela iniciadora é para, e somente para,  o recebedor. Nestes casos somente será permitido como beneficiário do pagamento o próprio recebedor. Algumas Instituições Detentoras de conta precisarão ajustar seus sistemas de forma a apropriar o campo em sua estrutura ao invés de gerá-lo nos casos pertinentes.\n\n    #### Informações gerais\n    O QR Code estático deve ser validado nos dados que o compõe. Em particular, não existindo valor financeiro, a transação assume o valor do consentimento, que será objeto de autorização posterior pelo cliente.\n\n    ### Idempotência\n\n    Segundo a W3C, \"um método HTTP idempotente é um método HTTP que pode ser chamado muitas vezes sem resultados diferentes ou efeitos colaterais. Não importa se o método é chamado apenas uma vez ou dez vezes. O resultado deve ser o mesmo. Essencialmente, significa que o resultado de uma solicitação executada com sucesso é independente do número de vezes que ela é executada. Por exemplo, na aritmética, adicionar zero a um número é uma operação idempotente.\"\n\n    Os conhecidos métodos GET, PUT e DELETE são naturalmente idempotentes, assim como HEAD, OPTIONS e TRACE também são.\n\n    Porém, o método POST requer um tratamento especial para que se torne idempotente e, por estarmos tratando aqui de meios de pagamentos, fazer esse tratamento é algo desejável para que não ocorram acidentes.\n\n    #### Por que é necessário tratarmos a Idempotência do POST?\n\n    Imagine que seja realizado um POST de pagamento e, depois de alguns segundos, é retornada uma mensagem de Timeout. Nesse caso, não é possível saber se o POST foi efetivo e enviar o POST novamente, sem tratar a idempotência, poderá ocasionar em duplicidade de pagamento.\n\n    #### Como mitigarmos esse risco?\n\n    Do lado da iniciadora do pagamento: É necessário que seja enviado o POST com um GUID de Idempotência. Caso o mesmo POST seja reenviado por acidente ou precise ser reenviado, por qualquer motivo que seja, basta reenviar o POST com o mesmo GUID de Idempotência.\n\n    Do lado da detentora da conta: É necessário validar o GUID de Idempotência recebido. Caso tenha recebido o mesmo GUID de Idempotência, a nova mensagem de POST deverá ser descartada.\n\n    Importante reforçar que cada nova transação com POST deverá ter um novo GUID de Idempotência.\n\n    A iniciadora não deve usar comportamento idempotente do POST para pesquisar o status dos recursos.\n\n    #### Conjunto inicial de regras propostas na aplicação da idempotencia:\n\n    - A iniciadora/TPP não deve alterar o corpo da solicitação ao usar a mesma chave de idempotência. Se a iniciadora alterar o corpo da solicitação, a detentora/ASPSP não deve modificar o recurso final. A detentora pode tratar este caso como uma ação fraudulenta;\n    - A detentora não deve criar um novo recurso para uma solicitação POST se estiver determinada como uma solicitação idempotente;\n    - Na criação a detentora deve responder à solicitação com o status atual do recurso (ou um status que seja pelo menos tão atual quanto o que estiver disponível nos canais eletrônicos existentes) e um código de status HTTP 201 (CREATED);\n    - A iniciadora não deve usar comportamento idempotente para pesquisar o status dos recursos;\n    - A detentora pode usar a assinatura da mensagem, junto com a chave de idempotência, para garantir que o corpo da solicitação não seja alterado;\n    - Para a API de Iniciação de Pagamento, a chave de idempotência deverá ser armazenada para controle quando a requisição for processada com sucesso (HTTP Status 201) ou quando ocorrer um erro de negócio (HTTP Status 422);\n    - Para a API Consentimento de Pagamento, a chave de idempotência deverá ser armazenada para controle quando a requisição for processada com sucesso (HTTP Status 201);\n    - O comportamento idempotente deve ser mantido por 24 horas para uma mesma chave de idempotencia;\n    - Toda nova requisição exige que a assinatura da mensagem seja refeita, contendo um novo jti e iat.\n\n    #### Cenários de uso de idempotência\n    1. Ao receber uma requisição com o mesmo x-idempotency-key e com a claim data do JWT com conteúdo idêntico ao da requisição original, a requisição deverá ser processada entregando o mesmo resultado obtido anteriormente. Isso significa que, caso a requisição inicial tenha criado um recurso, este mesmo recurso deverá ser retornado, com seu status atualizado.\n    2. Ao receber uma requisição com o mesmo x-idempotency-key e com a claim data do JWT com conteúdo diferente do original a requisição deverá ser recusada com o HTTP Status 422 com código NAO_INFORMADO.\n    3. Ao receber uma requisição com o mesmo x-idempotency-key e com a claim iss não pertencente a organização que possui o software cliente (clientId) a requisição deve ser recusada com o HTTP Status 403.\n\n    ### Diagrama de Sequência\n    ![Iniciacao_de_Pagamento](images/sequence-diagrams/iniciacao_de_pagamento_v2.png)\n    \u003ca href=\"images/sequence-diagrams/iniciacao_de_pagamento_v2.png\" target=\"_blank\"\u003eDownload do Diagrama de Sequência\u003c/a\u003e\n\n    #### Descrição do Diagrama de Sequência – APIs Fase 3\n\n    #### Detalhamento da iniciação de pagamento:\n\n    1. Debtor (Usuário) inicia o processo de pagamento na iniciadora.\n    2. Na iniciadora, o debtor seleciona a detentora e os dados de pagamentos:\n    \u003cb\u003eObservação\u003c/b\u003e: não serão ofertados, no primeiro momento, \u003cb\u003ePix Saque e Pix troco\u003c/b\u003e. Também não será possível agendamentos para \u003cb\u003ePix QR Codes Dinâmico com vencimento\u003c/b\u003e.\n      \u003ca href=\"https://www.bcb.gov.br/estabilidadefinanceira/pix?modalAberto=regulamentacao_pix\" target=\"_blank\"\u003eAqui referências a regulamentação relacionada ao Pix\u003c/a\u003e.\n\n        \u003col type=\"a\"\u003e\n          \u003cli\u003eSe transação por Chave Pix ou QR Code Estático:\n            \u003col type=\"i\"\u003e\n              \u003cli\u003eÉ realizada consulta ao DICT (diretório de contas).\u003cbr\u003e\n              \u003cb\u003eObservação\u003c/b\u003e: se a Iniciadora for um participante direto, detentora ou não de conta, no ecossistema do Pix, ele fará a consulta de forma direta ao DICT. Se a iniciadora for um participante indireto, será necessário consulta por meio de uma instituição com acesso direto com a qual a iniciadora possua relacionamento.\n              \u003c/li\u003e\n              \u003cli\u003eA iniciadora recebe as informações consultadas:\n                \u003col\u003e\n                  \u003cli\u003eDados de chave\u003c/li\u003e\n                  \u003cli\u003eNome do creditor\u003c/li\u003e\n                  \u003cli\u003eInstituição detentora da conta do creditor\u003c/li\u003e\n                  \u003cli\u003eCPF / CPNJ do creditor\u003c/li\u003e\n                \u003c/ol\u003e\n               \u003c/li\u003e\n            \u003c/ol\u003e\n          \u003c/li\u003e\n          \u003cli\u003eSe transação por QR Code Dinâmico:\n             \u003col type=\"i\"\u003e\n               \u003cli\u003eÉ realizada consulta dos dados do QR code do creditor:\n                 \u003col\u003e\n                   \u003cli\u003eCNPJ / CPF\u003c/li\u003e\n                   \u003cli\u003eData de vencimento\u003c/li\u003e\n                   \u003cli\u003eNome Instituição\u003c/li\u003e\n                   \u003cli\u003eEndereço (logradouro, cidade, UF e CEP)\u003c/li\u003e\n                   \u003cli\u003eIdentificador\u003c/li\u003e\n                   \u003cli\u003eChave Pix\u003c/li\u003e\n                   \u003cli\u003eValor Original\u003c/li\u003e\n                   \u003cli\u003eValor Final\u003c/li\u003e\n                   \u003cli\u003eVencimento\u003c/li\u003e\n                   \u003cli\u003eExpiração\u003c/li\u003e\n                  \u003c/ol\u003e\n              \u003c/li\u003e\n            \u003c/ol\u003e\n          \u003c/li\u003e\n          \u003cli\u003eSe transação por dados manuais (agência e conta):\n            \u003col type=\"i\"\u003e\n               \u003cli\u003eInsere-se dados:\n                 \u003col\u003e\n                   \u003cli\u003eInstituição financeira\u003c/li\u003e\n                   \u003cli\u003eAgência\u003c/li\u003e\n                   \u003cli\u003eConta\u003c/li\u003e\n                   \u003cli\u003eNome\u003c/li\u003e\n                   \u003cli\u003eCPF / CNPJ\u003c/li\u003e\n                 \u003c/ol\u003e\n              \u003c/li\u003e\n              \u003cli\u003e\u003cb\u003eObservação\u003c/b\u003e: não é realizada consulta no creditor ou no DICT.\n              \u003c/li\u003e\n            \u003c/ol\u003e\n          \u003c/li\u003e\n        \u003c/ol\u003e\n\n    3. Após consultas, a iniciadora segue para o fluxo de autorização e consentimento.\n\n    #### Estabelece TLS\n    Toda comunicação máquina-a-máquina (m2m) usará mTLS, conforme RFC rfc8705 e detalhado na especificação de segurança:\n      \u003ca href=\"https://openbanking-brasil.github.io/specs-seguranca/open-banking-brasil-financial-api-1_ID3.html\" target=\"_blank\"\u003eOpen Banking Brasil Financial-grade API Security Profile 1.0 Implementers Draft 3\u003c/a\u003e.\n\n    #### POST /tokens - Pedido de access_token e scope: payments, openid\n    Antes de começar o fluxo de iniciação de pagamento, a Instituição Iniciadora deverá ter se cadastrado como *client* na Instituição Detentora da Conta, em acordo com o especificado para o Registro Dinâmico de Clientes (Dynamic Client Registration). Os detalhes dessa etapa podem ser encontrados na especificação de segurança: \n    \u003ca href=\"https://openbanking-brasil.github.io/specs-seguranca/open-banking-brasil-dynamic-client-registration-1_ID2.html\" target=\"_blank\"\u003eOpen Banking Brasil Financial-grade API Dynamic Client Registration 1.0 Implementers Draft 2\u003c/a\u003e.\n    Uma vez cadastrada, a Instituição Iniciadora deverá obter o token de acesso (*access_token*) pelo fluxo de *client credentials*, conforme especificado pela RFC 6749 (rfc6749), com os escopos *payments* e *openid*.\n\n    #### Valida certificado SSL e scopes\n    Ao receber a requisição da Iniciadora, o Servidor de Autorização da Instituição Detentora da Conta deverá validar o certificado SSL e os escopos, se esses estão de acordo com a especificação: *payments* e *openid*.\n\n    #### Gera access_token\n    Em caso de sucesso da validação, o Servidor de Autorização da Instituição Detentora da Conta deverá gerar o *access_token*, que será utilizado para a criação de consentimento.\n\n    #### Access_token (scope: payments, openid)\n    O Servidor de Autorização da Instituição Detentora da Conta deverá responder à requisição com o *access_token* conforme padrões a serem definidos pelo GT de Segurança.\n\n    #### POST /payments/v1/consents\n    Para a criação de consentimento, considerando o requerido para FAPI - Loding Intent (\u003ca href=\"https://bitbucket.org/openid/fapi/src/master/Financial_API_Lodging_Intent.md\" target=\"_blank\"\u003eFinancial_API_Lodging_Intent.md\u003c/a\u003e), após a obtenção do token de acesso, a Instituição Iniciadora deverá usar esse token de acesso para fazer a requisição POST de consentimento.\n    A criação do consentimento encontra-se detalhada na seção das APIs para Pagamentos (\u003ca href=\"#em-revisao-criar-consentimento-para-iniciacao-de-pagamento\"\u003eOpen Banking Brasil\u003c/a\u003e).\n\n    #### 201 Created\n    A API de Consentimento deverá responder o Http Status 201 e Payload contendo ***consentId***, e status inicial do consentimento em **AWAITING_AUTHORISATION** conforme especificado na documentação \u003ca href=\"#em-revisao-criar-consentimento-para-iniciacao-de-pagamento\"\u003eOpen Banking Brasil\u003c/a\u003e.\n\n    #### Redirecionamento\n    No caso do consentimento ter sido criado com sucesso, a Instituição Iniciadora deverá fazer o redirecionamento para a Instituição Detentora da Conta. Esse fluxo de redirecionamento deve considerar todos os requisitos definidos para o objeto de requisição OpenID Connect (Seção 4.3 da especificação de segurança - \u003ca href=\"https://openbanking-brasil.github.io/specs-seguranca/tpp-user-guide.html\" target=\"_blank\"\u003eThird Party Provider End To End User Guide\u003c/a\u003e).\n    Esse redirecionamento é o passo que permitirá o início da autenticação do usuário na Instituição Detentora da Conta.\n\n    #### Validações de negócios (Detentora)\n    Ao receber o POST /payments/v1/pix/payments é importante observar que a Detentora deverá validar as informações passadas pela Iniciadora nos campos do payload de envio do consentimento e do pagamento (como, por exemplo, valores e dados do creditado), além de ser necessário decodificar o código para os casos de pagamentos iniciados a partir de um Pix QRCode, a fim de que a Detentora carregue as informações complementares (como, por exemplo, o TxID) na mensageria do Pix (atenção para a PACS008 e as \u003ca href=\"https://www.bcb.gov.br/estabilidadefinanceira/pix?modalAberto=regulamentacao_pix\" target=\"_blank\"\u003eregulamentações do Pix\u003c/a\u003e).\n    A Detentora deve validar as informações de detalhes do payload com os dados de detalhes do consentimento, de acordo com a forma de pagamento. Caso os dados do detalhe informados no consentimento sejam diferente dos dados enviados na iniciação de pagamento, a Detentora de retornar erro HTTP 422 Unprocessable Entity, com o code BENEFICIARIO_INCOMPATIVEL.\n\n    #### Efetivação do pagamento\u0026lt;\u0026lt;Assync\u0026gt;\u0026gt;\n    A Detentora de Conta efetua a transação de pagamento entre o Debtor e Creditor através da forma de pagamento escolhida pelo Debtor. A efetivação da transação acontece de maneira assíncrona ao fluxo do Open Banking, seguindo as regras e interfaces do arranjo utilizado (apenas PIX disponível nesse momento).\n\n    #### Loop (Polling)\n    A Iniciadora deverá consultar periodicamente a Instituição Detentora de Conta para verificar o status da transação de iniciação pagamento.\n    Os possíveis status de uma transação de iniciação de pagamento estão detalhados na documentação (\u003ca href=\"#tocS_EnumPaymentStatusType\"\u003eOpen Banking Brasil\u003c/a\u003e).\n    Como sugestão, é indicado que a Instituição Iniciadora do pagamento implemente um retry exponencial e respeite o “rate limit” descriminado na documentação.\n    A recomendação para uso do polling encontra-se detalhada na seção de “Recomendação uso de polling” (\u003ca href=\"#recomendacao-uso-de-polling\"\u003eOpen Banking Brasil\u003c/a\u003e)).\n\n    #### GET pix/payments/{paymentId}\n    Durante o período de polling a Iniciadora deverá consultar o status da transação através da rota “Get pix/payments/{paymentId}” informado o respectivo paymentId da transação.\n    A consulta encontra-se detalhada na seção das APIs para Pagamentos (\u003ca href=\"#em-revisao-pix-consultar-iniciacao-de-pagamento\"\u003eOpen Banking Brasil\u003c/a\u003e).\n\n    #### Exibe comprovante de iniciação de pagamento\n    Caso a Iniciadora identifique que a transação de pagamento foi aprovada pela Detentora de Conta (status “ACCC”), poderá ser exibido o comprovante da **efetivação** da Transação de Pagamento. Caso o status do pagamento seja diferente de “ACCC” e/ou “RJCT”, deverá ser apresentada a efetivação da **solicitação** de Iniciação de Pagamento, apresentando as informações (\u003ca href=\"#guia-do-usuario-instituicao-receptora-ou-iniciadora-de-pagamentos\"\u003esegundo Guia de Usuário\u003c/a\u003e – “Etapa 6: Efetivação da Solicitação):\n\n      - Forma de pagamento (de acordo com os arranjos de pagamento vigentes e Circular 4.015);\n      - Valor da transação de pagamento (opcional para transações sucessivas);\n      - Informações referentes ao Recebedor da Transação de Pagamento;\n\n    Os possíveis status de uma transação de iniciação de pagamento estão detalhados na documentação (\u003ca href=\"#tocS_EnumPaymentStatusType\"\u003eOpen Banking Brasil\u003c/a\u003e).\n\n    ### Máquina de Estados\n    #### Os possíveis status do consentimento são:\n\n    AWAITING_AUTHORISATION - Aguardando autorização\n    AUTHORISED - Autorizado\n    REJECTED - Rejeitado\n    CONSUMED - Consumido\n    REVOKED - Revogado\n\n    ![Maquina de Estados](images/sequence-diagrams/state-machine_phase3_v04.png)\n    \u003ca href=\"images/sequence-diagrams/state-machine_phase3_v04.png\" target=\"_blank\"\u003eDownload da Máquina de Estados\u003c/a\u003e\n\n    Algumas definições são importantes para tratar a transição dos estados do consentimento em diferentes momentos do fluxo:\n\n    #### AWAITING_AUTHORISATION\n    - O consentimento é sempre criado com o status AWAITING_AUTHORISATION. Ele pode ser aprovado antes do tempo de expiração de 5 minutos, assumindo o status AUTHORISED. Se não, deve assumir o status REJECTED caso expire ou seja cancelado pelo usuário.\n\n    #### AUTHORISED\n    - Para o cenário em que o status assumiu AUTHORISED, o tempo máximo do expirationDateTime do consentimento deve assumir \"now + 60 minutos\". Este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso. O tempo do expirationDateTime é garantido com os 15 minutos do access token, sendo possível utilizar mais três refresh tokens até totalizar 60 minutos.\n\n    ##### REJECTED\n    - Em caso de consentimento expirado a Detentora deverá retornar o status REJECTED.\n    - Em caso de consentimento rejeitado pelo usuário ou por regra de negócio da Detentora, o status deverá ser retornado como REJECTED.\n\n    #### CONSUMED\n    - O consentimento assume o status CONSUMED após ocorrer o processamento da iniciação do pagamento, seja ele com sucesso (HTTP 201) ou ainda em casos de insucesso (HTTP 422) retornados pela Detentora. Para os demais códigos HTTP não há mudança de status do consentimento, o mesmo permanecerá AUTHORISED, respeitando o tempo máximo de expiração do consentimento (60 minutos).\n\n    #### REVOKED\n    - O estado REVOKED existirá somente quando a revogação for realizada pelo Usuário ou Iniciadora ou Detentora (somente para consentimentos de agendamento).\n\n    **Os possíveis status do pagamento PIX, são:**\n\n    PDNG, PART, ACSP, ACSC, ACCC e RJCT.\n\n    **Pagamento PIX**\n\n    ![Maquina de Estados](images/sequence-diagrams/state-machine_phase3_pix_payment.png)\n    \u003ca href=\"images/sequence-diagrams/state-machine_phase3_pix_payment.png\" target=\"_blank\"\u003eDownload dos status de pagamento PIX\u003c/a\u003e\n\n    **Os possíveis status do pagamento PIX agendamento, são:**\n\n    PDNG, SASP, SASC, PART, ACSP, ACSC, ACCC e RJCT.\n\n    **Pagamento PIX agendamento**\n\n    ![Maquina de Estados](images/sequence-diagrams/state-machine_phase3_pix_scheduling_payment_v2.png)\n    \u003ca href=\"images/sequence-diagrams/state-machine_phase3_pix_scheduling_payment_v2.png\" target=\"_blank\"\u003eDownload dos status de pagamento PIX agendamento\u003c/a\u003e\n\n    Abaixo segue a descrição dos status relacionados a máquina de estados pertinente aos tipos de pagamento PIX e PIX agendamento:\n\n    #### PDNG (PENDING)\n    - O status informa que a iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.\n\n    #### SASP (SCHEDULE_ACCEPTED_SETTLEMENT_IN_PROCESS) - **somente para PIX agendamento**.\n    - O status informa que o agendamento está em processamento.\n\n    #### SASC (SCHEDULE_ACCEPTED_SETTLEMENT_COMPLETED) - **somente para PIX agendamento**.\n    - O status informa que o agendamento foi realizado com sucesso.\n\n    #### PART (PARTIALLY ACCEPTED)\n    - O status informa que fluxo de pagamento está aguardando autorização múltipla alçada.\n\n    #### ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS)\n    - O status informa que a iniciação de pagamento foi aceita e o processamento do pagamento foi iniciado.\n\n    #### ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT)\n    - O status informa que o débito foi realizado na conta do pagador.\n\n    #### ACCC (ACCEPTED_SETTLEMENT_COMPLETED)\n    - O status informa que foi realizado um crédito na instituição de destino.\n\n    #### RJCT (REJECTED)\n    - O status informa que a instrução de pagamento foi rejeitada.\n\n    ### Recomendação uso de polling\n    #### A consulta via GET, para verificar o processamento da transação, pode ser efetuada a qualquer momento desde que se respeite o rate limit de:\n    - 300 TPS global, 50 TPS por instituição e 8 TPS por endereço IP (Internet Protocol).\n    Como sugestão, é indicado que a instituição iniciadora do pagamento implemente um retry exponencial.\n\n    ### Controle de acesso\n\n    O endpoint de consulta de pagamento GET /pix/payments/{​​​paymentId}​​​ deve suportar acesso a partir de access_token emitido por meio de um _grant_type_ do tipo `client credentials`, como opção do uso do token vinculado ao consentimento (hybrid flow).\n    Para evitar vazamento de informação, a detentora deve validar que o pagamento consultado pertence ao `client_id` que o criou e, caso haja divergências, retorne um erro HTTP 400.\n\n    ### Como assinar o payload\n\n    \u003e Exemplo de requisição - JWS assinada e codificada\n\n    ```json\n      eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlBXQWk1cnVRY0hmelB6cTJKRmRwWTduQVVoNkx6VFRRdERCVXBPTTM3SlEifQ.eyJhdWQiOiIzNDQ5YmYyMS0wYjA3LTQ4ZTYtYjZmYy0xM2ViMTYxYTk5MDEiLCJpc3MiOiJjYTFiOThlMS05N2EyLTQzZGItOTQ3Zi04YTA4MDU0YzM0MmUiLCJqdGkiOiJhMmZkMzkzYy0xMDdhLTRhZDQtYmUyMi0zY2ZlZWVhOTBlZmUiLCJpYXQiOiIxNjI4MjU3NzM3IiwiZGF0YSI6eyJjb25zZW50SWQiOiJ1cm46YmFuY29leDpDMUREMzMxMjMiLCJjcmVhdGlvbkRhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJleHBpcmF0aW9uRGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiIsInN0YXR1c1VwZGF0ZURhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJzdGF0dXMiOiJBV0FJVElOR19BVVRIT1JJU0FUSU9OIiwibG9nZ2VkVXNlciI6eyJkb2N1bWVudCI6eyJpZGVudGlmaWNhdGlvbiI6IjExMTExMTExMTExIiwicmVsIjoiQ1BGIn19fSwiYnVzaW5lc3NFbnRpdHkiOnsiZG9jdW1lbnQiOnsiaWRlbnRpZmljYXRpb24iOiIxMTExMTExMTExMTExMSIsInJlbCI6IkNOUEoifX0sImNyZWRpdG9yIjp7InBlcnNvblR5cGUiOiJQRVNTT0FfTkFUVVJBTCIsImNwZkNucGoiOiI1ODc2NDc4OTAwMDEzNyIsIm5hbWUiOiJNYXJjbyBBbnRvbmlvIGRlIEJyaXRvIn0sInBheW1lbnQiOnsidHlwZSI6IlBJWCIsImRhdGUiOiIyMDIxLTAxLTAxIiwiY3VycmVuY3kiOiJCUkwiLCJhbW91bnQiOiIxMDAwMDAuMTIiLCJpYmdlVG93bkNvZGUiOiI1MzAwMTA4IiwiZGV0YWlscyI6eyJsb2NhbEluc3RydW1lbnQiOiJESUNUIiwicXJDb2RlIjoiMDAwMjAxMDQxNDEyMzQ1Njc4OTAxMjM0MjY2NjAwMTRCUi5HT1YuQkNCLlBJWDAxNDQ2Njc1NkM2MTZFNkYzMjMwMzEzOTQwNjU3ODYxNkQ3MDZDNjUyRTYzNkY2RDI3MzAwMDEyXG5CUi5DT00uT1VUUk8wMTEwMDEyMzQ1Njc4OTUyMDQwMDAwNTMwMzk4NjU0MDYxMjMuNDU1ODAyQlI1OTE1Tk9NRURPUkVDRUJFRE9SNjAwOEJSQVNJTElBNjEwODcwMDc0OTAwNjJcbjUzMDUxNVJQMTIzNDU2NzgtMjAxOTUwMzAwMDE3QlIuR09WLkJDQi5CUkNPREUwMTA1MS4wLjA4MDQ1MDAxNEJSLkdPVi5CQ0IuUElYMDEyM1BBRFJBTy5VUkwuUElYLzAxMjNBQlxuQ0Q4MTM5MDAxMkJSLkNPTS5PVVRSTzAxMTkwMTIzLkFCQ0QuMzQ1Ni5XWFlaNjMwNEVCNzZcbiIsInByb3h5IjoiMTIzNDU2Nzg5MDEiLCJjcmVkaXRvckFjY291bnQiOnsiaXNwYiI6IjEyMzQ1Njc4IiwiaXNzdWVyIjoiMTc3NCIsIm51bWJlciI6IjEyMzQ1Njc4OTAiLCJhY2NvdW50VHlwZSI6IkNBQ0MifX19LCJkZWJ0b3JBY2NvdW50Ijp7ImlzcGIiOiIxMjM0NTY3OCIsImlzc3VlciI6IjE3NzQiLCJudW1iZXIiOiIxMjM0NTY3ODkwIiwiYWNjb3VudFR5cGUiOiJDQUNDIn0sImxpbmtzIjp7InNlbGYiOiJodHRwczovL2FwaS5iYW5jby5jb20uYnIvb3Blbi1iYW5raW5nL3BheW1lbnRzL3YxL2NvbnNlbnRzIn0sIm1ldGEiOnsidG90YWxSZWNvcmRzIjoxLCJ0b3RhbFBhZ2VzIjoxLCJyZXF1ZXN0RGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiJ9fQ.FH8722_85hWbYQS7g9C_b0_vjYvzaByq7ovFIVXWUsreEyb1KvhXFm1-GttBXIQORv9DpSsimmqo1MsLQE8Qc_J3fMkb-vNfMAd5D4JJUSJq33X8ydAvrXdOyCfjeEcUC-6g_O3nexT6clK6RkH0Umf6X3hev3JNaObk2IvjKeMdygQ3UXpGl2CTCCWvmcfcGeRA-sNdLheLQsVIPoopZ-FHBmr5MboLRod06SCO-BKkLdKg8eVAf6LrkiZrFLVlDMwNTFolUK7JlNnPZjPdSBmR7pPjPzT1blgd9fTWl7pbOh93mejgVFB0B3aKHz-2Y83KBCTH8C32rnnxK4YYmA\n    ```\n\n    \u003e Exemplo de requisição - JWS decodificada\n\n    ```json\n    {\n      \"alg\": \"PS256\",\n      \"typ\": \"JWT\",\n      \"kid\": \"PWAi5ruQcHfzPzq2JFdpY7nAUh6LzTTQtDBUpOM37JQ\"\n    }\n    {\n      \"aud\": \"https://api.banco.com.br/openbanking/payments/v1/consents\",\n      \"iss\": \"5647fe90-f6bc-11eb-9a03-0242ac130003\",\n      \"jti\": \"7960577c-662c-456e-8cf5-e630828af635\",\n      \"iat\": 1628257484,\n      \"data\": {\n        \"loggedUser\": {\n          \"document\": {\n            \"identification\": \"11111111111\",\n            \"rel\": \"CPF\"\n          }\n        },\n        \"businessEntity\": {\n          \"document\": {\n            \"identification\": \"11111111111111\",\n            \"rel\": \"CNPJ\"\n          }\n        },\n        \"creditor\": {\n          \"personType\": \"PESSOA_NATURAL\",\n          \"cpfCnpj\": \"58764789000137\",\n          \"name\": \"Marco Antonio de Brito\"\n        },\n        \"payment\": {\n          \"type\": \"PIX\",\n          \"date\": \"2021-01-01\",\n          \"currency\": \"BRL\",\n          \"amount\": \"100000.12\",\n          \"ibgeTownCode\": \"5300108\",\n          \"details\": {\n            \"localInstrument\": \"DICT\",\n            \"qrCode\": \"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\n            \"proxy\": \"12345678901\",\n            \"creditorAccount\": {\n              \"ispb\": \"12345678\",\n              \"issuer\": \"1774\",\n              \"number\": \"1234567890\",\n              \"accountType\": \"CACC\"\n            }\n          }\n        },\n        \"debtorAccount\": {\n          \"ispb\": \"12345678\",\n          \"issuer\": \"1774\",\n          \"number\": \"1234567890\",\n          \"accountType\": \"CACC\"\n        }\n      }\n    }\n\n    * \"Assinatura omitida por questões de brevidade\"\n\n    ```\n\n     \u003e Exemplo de resposta - JWS assinada e codificada\n\n    ```json\n      eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlBXQWk1cnVRY0hmelB6cTJKRmRwWTduQVVoNkx6VFRRdERCVXBPTTM3SlEifQ.eyJhdWQiOiIzNDQ5YmYyMS0wYjA3LTQ4ZTYtYjZmYy0xM2ViMTYxYTk5MDEiLCJpc3MiOiJjYTFiOThlMS05N2EyLTQzZGItOTQ3Zi04YTA4MDU0YzM0MmUiLCJqdGkiOiJhMmZkMzkzYy0xMDdhLTRhZDQtYmUyMi0zY2ZlZWVhOTBlZmUiLCJpYXQiOiIxNjI4MjU3NzM3IiwiZGF0YSI6eyJjb25zZW50SWQiOiJ1cm46YmFuY29leDpDMUREMzMxMjMiLCJjcmVhdGlvbkRhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJleHBpcmF0aW9uRGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiIsInN0YXR1c1VwZGF0ZURhdGVUaW1lIjoiMjAyMS0wNS0yMVQwODozMDowMFoiLCJzdGF0dXMiOiJBV0FJVElOR19BVVRIT1JJU0FUSU9OIiwibG9nZ2VkVXNlciI6eyJkb2N1bWVudCI6eyJpZGVudGlmaWNhdGlvbiI6IjExMTExMTExMTExIiwicmVsIjoiQ1BGIn19fSwiYnVzaW5lc3NFbnRpdHkiOnsiZG9jdW1lbnQiOnsiaWRlbnRpZmljYXRpb24iOiIxMTExMTExMTExMTExMSIsInJlbCI6IkNOUEoifX0sImNyZWRpdG9yIjp7InBlcnNvblR5cGUiOiJQRVNTT0FfTkFUVVJBTCIsImNwZkNucGoiOiI1ODc2NDc4OTAwMDEzNyIsIm5hbWUiOiJNYXJjbyBBbnRvbmlvIGRlIEJyaXRvIn0sInBheW1lbnQiOnsidHlwZSI6IlBJWCIsImRhdGUiOiIyMDIxLTAxLTAxIiwiY3VycmVuY3kiOiJCUkwiLCJhbW91bnQiOiIxMDAwMDAuMTIiLCJpYmdlVG93bkNvZGUiOiI1MzAwMTA4IiwiZGV0YWlscyI6eyJsb2NhbEluc3RydW1lbnQiOiJESUNUIiwicXJDb2RlIjoiMDAwMjAxMDQxNDEyMzQ1Njc4OTAxMjM0MjY2NjAwMTRCUi5HT1YuQkNCLlBJWDAxNDQ2Njc1NkM2MTZFNkYzMjMwMzEzOTQwNjU3ODYxNkQ3MDZDNjUyRTYzNkY2RDI3MzAwMDEyXG5CUi5DT00uT1VUUk8wMTEwMDEyMzQ1Njc4OTUyMDQwMDAwNTMwMzk4NjU0MDYxMjMuNDU1ODAyQlI1OTE1Tk9NRURPUkVDRUJFRE9SNjAwOEJSQVNJTElBNjEwODcwMDc0OTAwNjJcbjUzMDUxNVJQMTIzNDU2NzgtMjAxOTUwMzAwMDE3QlIuR09WLkJDQi5CUkNPREUwMTA1MS4wLjA4MDQ1MDAxNEJSLkdPVi5CQ0IuUElYMDEyM1BBRFJBTy5VUkwuUElYLzAxMjNBQlxuQ0Q4MTM5MDAxMkJSLkNPTS5PVVRSTzAxMTkwMTIzLkFCQ0QuMzQ1Ni5XWFlaNjMwNEVCNzZcbiIsInByb3h5IjoiMTIzNDU2Nzg5MDEiLCJjcmVkaXRvckFjY291bnQiOnsiaXNwYiI6IjEyMzQ1Njc4IiwiaXNzdWVyIjoiMTc3NCIsIm51bWJlciI6IjEyMzQ1Njc4OTAiLCJhY2NvdW50VHlwZSI6IkNBQ0MifX19LCJkZWJ0b3JBY2NvdW50Ijp7ImlzcGIiOiIxMjM0NTY3OCIsImlzc3VlciI6IjE3NzQiLCJudW1iZXIiOiIxMjM0NTY3ODkwIiwiYWNjb3VudFR5cGUiOiJDQUNDIn0sImxpbmtzIjp7InNlbGYiOiJodHRwczovL2FwaS5iYW5jby5jb20uYnIvb3Blbi1iYW5raW5nL3BheW1lbnRzL3YxL2NvbnNlbnRzIn0sIm1ldGEiOnsidG90YWxSZWNvcmRzIjoxLCJ0b3RhbFBhZ2VzIjoxLCJyZXF1ZXN0RGF0ZVRpbWUiOiIyMDIxLTA1LTIxVDA4OjMwOjAwWiJ9fQ.FH8722_85hWbYQS7g9C_b0_vjYvzaByq7ovFIVXWUsreEyb1KvhXFm1-GttBXIQORv9DpSsimmqo1MsLQE8Qc_J3fMkb-vNfMAd5D4JJUSJq33X8ydAvrXdOyCfjeEcUC-6g_O3nexT6clK6RkH0Umf6X3hev3JNaObk2IvjKeMdygQ3UXpGl2CTCCWvmcfcGeRA-sNdLheLQsVIPoopZ-FHBmr5MboLRod06SCO-BKkLdKg8eVAf6LrkiZrFLVlDMwNTFolUK7JlNnPZjPdSBmR7pPjPzT1blgd9fTWl7pbOh93mejgVFB0B3aKHz-2Y83KBCTH8C32rnnxK4YYmA\n    ```\n\n    \u003e Exemplo de resposta - JWS decodificada\n\n    ```json\n    {\n      \"alg\": \"PS256\",\n      \"typ\": \"JWT\",\n      \"kid\": \"PWAi5ruQcHfzPzq2JFdpY7nAUh6LzTTQtDBUpOM37JQ\"\n    }\n    {\n      \"aud\": \"3449bf21-0b07-48e6-b6fc-13eb161a9901\",\n      \"iss\": \"ca1b98e1-97a2-43db-947f-8a08054c342e\",\n      \"jti\": \"a2fd393c-107a-4ad4-be22-3cfeeea90efe\",\n      \"iat\": 1628257737,\n      \"data\": {\n        \"consentId\": \"urn:bancoex:C1DD33123\",\n        \"creationDateTime\": \"2021-05-21T08:30:00Z\",\n        \"expirationDateTime\": \"2021-05-21T08:30:00Z\",\n        \"statusUpdateDateTime\": \"2021-05-21T08:30:00Z\",\n        \"status\": \"AWAITING_AUTHORISATION\",\n        \"loggedUser\": {\n          \"document\": {\n            \"identification\": \"11111111111\",\n            \"rel\": \"CPF\"\n          }\n        },\n        \"businessEntity\": {\n          \"document\": {\n            \"identification\": \"11111111111111\",\n            \"rel\": \"CNPJ\"\n          }\n        },\n        \"creditor\": {\n          \"personType\": \"PESSOA_NATURAL\",\n          \"cpfCnpj\": \"58764789000137\",\n          \"name\": \"Marco Antonio de Brito\"\n        },\n        \"payment\": {\n          \"type\": \"PIX\",\n          \"date\": \"2021-01-01\",\n          \"currency\": \"BRL\",\n          \"amount\": \"100000.12\",\n          \"ibgeTownCode\": \"5300108\",\n          \"details\": {\n            \"localInstrument\": \"DICT\",\n            \"qrCode\": \"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\\n\",\n            \"proxy\": \"12345678901\",\n            \"creditorAccount\": {\n              \"ispb\": \"12345678\",\n              \"issuer\": \"1774\",\n              \"number\": \"1234567890\",\n              \"accountType\": \"CACC\"\n            }\n          }\n        },\n        \"debtorAccount\": {\n          \"ispb\": \"12345678\",\n          \"issuer\": \"1774\",\n          \"number\": \"1234567890\",\n          \"accountType\": \"CACC\"\n        }\n      },\n      \"links\": {\n        \"self\": \"https://api.banco.com.br/open-banking/payments/v1/consents\"\n      },\n      \"meta\": {\n        \"totalRecords\": 1,\n        \"totalPages\": 1,\n        \"requestDateTime\": \"2021-05-21T08:30:00Z\"\n      }\n    }\n\n    * \"Assinatura omitida por questões de brevidade\"\n    ```\n\n    No contexto da API Payment Initiation, os payloads de mensagem de consentimento e de pagamento que trafegam tanto por parte da instituição iniciadora de transação de pagamento quanto por parte da instituição detentora de conta devem estar assinados. Abaixo temos as orientações para assinatura das mensagens JWS.\n\n    Informações complementares de segurança podem ser consultadas em \u003ca href=\"https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-financial-api-1_ID3-ptbr.md\"\u003e https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-financial-api-1_ID3-ptbr.md\u003c/a\u003e.\n\n    - **Passo 1** - Identifique a chave privada e o certificado de assinatura correspondente a serem usados para assinatura:\n\n    As assinaturas devem ser realizadas com uso do certificado digital de assinatura especificado no \u003ca href=\"https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-certificate-standards-1_ID1-ptbr.md#certificado-de-assinatura-certificadoassinatura\" target=\"_blank\"\u003ePadrão de Certificados Open Banking Brasil\u003c/a\u003e.\n\n    O certificado de assinatura deve ser válido no momento da criação do JWS.\n\n    - **Passo 2** - Geração do JOSE Header\n\n    O JOSE Header deve conter os seguintes campos:\n\n    |Nome|Tipo|Obrigatório|Descrição|\n    |---|---|---|---|---|\n    |alg|string|true|O algoritmo que será usado para assinar o JWS. Deve ser preenchido com o valor `PS256`.|\n    |kid|string|true|Deve ser obrigatoriamente preenchido com o valor do identificador da chave utilizado para a assinatura.|\n    |typ|string|true|É o tipo de conteúdo usado para trafegar mensagens na API. Deve ser preenchido com o valor `JWT`.|\n\n    - **Passo 3** - Montando a mensagem JWS\n\n    Para garantir a integridade e o não-repúdio das informações tramitadas em *API´s sensíveis e que indicam essa necessidade na sua documentação*, deve ser adotado a estrutura no padrão JWS definida na [\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7515\" target=\"_blank\"\u003eRFC7515\u003c/a\u003e] e que inclui:\n\n    **Cabeçalho** (_JSON Object Signing and Encryption – JOSE Header_), onde se define o algoritmo utilizado e inclui informações sobre a chave pública ou certificado que podem ser utilizadas para validar a assinatura;\n\n    **Payload** (_JWS Payload_): conteúdo propriamente dito e detalhado na especificação da API além de informações sobre `claims` JWT ;\n\n    **Assinatura digital** (_JWS Signature_): assinatura digital, realizada conforme parâmetros do cabeçalho.\n\n    O payload das mensagens (requisição e resposta _JWT_) assinadas devem incluir as seguintes `claims` presentes na [\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7519#section-4.1\" target=\"_blank\"\u003eRFC7519\u003c/a\u003e] (JWT):\n\n    |Nome|Tipo|Obrigatório|Descrição|\n    |---|---|---|---|---|\n    |aud|string|true|(***requisição JWT***): o Provedor do Recurso (p. ex. a instituição Detentora da Conta) deverá validar se o valor do campo **aud** coincide com o endpoint sendo acionado.\u003cbr\u003e(***resposta JWT***): o cliente da API (p. ex. instituição Iniciadora) deverá validar se o valor do campo **aud** coincide com o seu próprio `organisationId` listado no diretório.|\n    |iss|string|true|(***requisição JWT*** e ***resposta JWT***): o receptor da mensagem deverá validar se o valor do campo **iss** coincide com o `organisationId` da outra parte listado no diretório.|\n    |jti|string|true|(***requisição JWT*** e ***resposta JWT***): o valor do campo **jti** deverá ser preenchido com o UUID definido pela instituição de acordo com a \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4122\" target=\"_blank\"\u003eRFC 4122\u003c/a\u003e usando o versão 4.|\n    |iat|NumericDate|true|(***requisição JWT*** e ***resposta JWT***): o valor do campo **iat** deverá ser preenchido com o horário da geração da mensagem e de acordo com o padrão estabelecido na \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7519#section-2\" target=\"_blank\"\u003eRFC7519\u003c/a\u003e para o formato _NumericDate_. A claim iat deverá ser gerada no Unix Time GMT +0 e sua verificação deverá possuir uma tolerância de +/- 60 segundos para cobrir pequenas diferenças nos relógios dos servidores dos participantes.|\n\n    - **A claim do “jti” deve ser única para um clientId dentro de um intervalo de tempo de 86.400 segundos, não podendo ser reutilizada neste período. Em caso de reutilização, deverá ser retornado o código de erro HTTP 403.**\n\n    - **As validações referentes as claims do JWT devem preceder a validação de idempotência (e.g. “jti”, “iat” e “iss”)**\n\n    Cada elemento acima deve ser codificado utilizando o padrão Base64url [\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4648#section-5\" target=\"_blank\"\u003eRFC4648\u003c/a\u003e] e, feito isso, os elementos devem ser concatenados com “.” (método JWS Compact Serialization, conforme definido na [\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7515#section-3.1\" target=\"_blank\"\u003eRFC7515\u003c/a\u003e]).\n\n    Formato da mensagem JWS:\n\n    \u003cspan style=\"background: #e9e8e8; padding: 3px;\"\u003e**payload** = Base64url(**JOSEHeader**)  +  \".\" + Base64url(**payload JWT**)  +  \".\"  +  Base64url(**digital signature**)\u003c/span\u003e\n\n    Veja ao lado exemplo de mensagem JWS assinada e codificada e um exemplo de mensagem JWS decodificada.\n\n    **Em caso de erro**\n\n    * Na validação da assinatura pelo Provedor do Recurso a API deve retornar mensagem de erro `HTTP` com status code `400` e a resposta deve incluir na propriedade code do objeto de resposta de erro especificado na API (*ResponseError*) a indicação da falha com o conteúdo `BAD_SIGNATURE`.\n\n    * Erros na validação da mensagem recebida pela aplicação cliente (p. ex. iniciador de pagamento) devem ser registrados e o `Provedor do Recurso` (p. ex. instituição detentora de conta) deve ser notificado.\n\n    ### Assinatura de Mensagem vs Idempotência\n\n    O claim jti inserido dentro do JWT da assinatura da mensagem tem como objetivo evitar ataques de repetição e não é utilizado para o controle da idempotência. Desta forma ele deverá ser gerado a cada nova requisição realizada às APIs, independentemente desta ser a requisição para a criação de uma nova operação ou ser a requisição para confirmação de execução de uma operação anterior (idempotente).\n\n    As validações referentes a assinatura de mensagens devem preceder as validações de idempotência.\n\n    ### Orientações\n\n    **Agendamento de Pagamento**\n\n    - **Mecanismo de retentativas de liquidação de pagamentos agendados**\n\n    No momento de liquidação de pagamento agendado é possível ter falhas sistêmicas ou violações de regras de negócio. Como por exemplo, ausência de saldo na conta do pagador para realizar a liquidação. Neste contexto é interessante às detentoras de conta a adoção de políticas de retentativas de liquidação.   \n\n    O arranjo PIX não define nada a respeito deste tema, por consequência, o Open Banking deixa livre para cada detentora adote a política de retentativa que mais fizer sentido para ela.\n\n    - **Revogação do consentimento**\n\n    Com a inclusão da funcionalidade de agendamento do pagamento é interessante facultar às partes envolvidas na transação a possibilidade de cancelamento do mesmo, desde que até um dia antes da sua liquidação. Esse mecanismo será oferecido a partir da revogação de consentimentos para pagamentos agendados. \n\n    Considerando a diretriz do controle do agendamento pela detentora de conta e as necessidades dos envolvidos na transação é possível os seguintes cenários de jornadas de revogação:\n\n        1. **Revogação pelo usuário na iniciadora** através da área de gestão de pagamentos do open banking (Consulte o guia de UX do Open Banking para maiores detalhes);   \n        2. **Revogação pelo usuário na detentora** através da área de gestão de pagamentos do open banking (Consulte o guia de UX do Open Banking para maiores detalhes);   \n        3. **Revogação pelo usuário na detentora** através da área de gestão do PIX (Consulte o guia de UX do arranjo PIX para maiores detalhes);   \n        4. **Revogação pela iniciadora** sem a presença do usuário;   \n        5. **Revogação pela detentora** sem a presença do usuário.\n\n    - **Regras funcionais**\n\n    |Código|Descrição                                                                                                                                                                                                                          |Endpoint                                                                |\n    |------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------|\n    |RN001 |Ao revogar um consentimento o pagamento associado deverá ir para o status **RJCT** e campo **rejectionReason** deverá ter o valor **CONSENT_REVOKED**. Schema: \u003ca href=\"#tocS_EnumRejectionReasonType\"\u003eEnumRejectionReasonType\u003c/a\u003e |\u003ca href=\"#revogar-consentimento-de-pagamento\"\u003eRevogar consentimento\u003c/a\u003e |\n\n    **Post/Consents**\n\n    - **Exemplo -  PIX normal**\n\n    {   \n      \"alg\": \"PS256\",   \n      \"typ\": \"JWT\",   \n      \"kid\": \"PWAi5ruQcHfzPzq2JFdpY7nAUh6LzTTQtDBUpOM37JQ\"   \n    }   \n    {   \n      \"aud\": \"3449bf21-0b07-48e6-b6fc-13eb161a9901\",   \n      \"iss\": \"ca1b98e1-97a2-43db-947f-8a08054c342e\",   \n      \"jti\": \"a2fd393c-107a-4ad4-be22-3cfeeea90efe\",   \n      \"iat\": 1628257737\",   \n      \"data\": {   \n        \"consentId\": \"urn:bancoex:C1DD33123\",   \n        \"creationDateTime\": \"2021-05-21T08:30:00Z\",   \n        \"expirationDateTime\": \"2021-05-21T08:30:00Z\",   \n        \"statusUpdateDateTime\": \"2021-05-21T08:30:00Z\",   \n        \"status\": \"AWAITING_AUTHORISATION\",   \n        \"loggedUser\": {   \n          \"document\": {   \n            \"identification\": \"11111111111\",   \n            \"rel\": \"CPF\"   \n          }   \n        },   \n        \"businessEntity\": {,   \n          \"document\": {   \n            \"identification\": \"11111111111111\",   \n            \"rel\": \"CNPJ\",   \n          }   \n        },   \n        \"creditor\": {   \n          \"personType\": \"PESSOA_NATURAL\",   \n          \"cpfCnpj\": \"58764789000137\",   \n          \"name\": \"Marco Antonio de Brito\"   \n        },   \n        \"payment\": {   \n          \"type\": \"PIX\",   \n          \"date\": \"2021-01-01\",   \n          \"currency\": \"BRL\",   \n          \"amount\": \"100000.12\",   \n          \"ibgeTownCode\": \"5300108\",   \n          \"details\": {   \n            \"localInstrument\": \"DICT\",   \n            \"qrCode\": \"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6   \n            D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008   \n            BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.08045   \n            0014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.ABC   \n            D.3456.WXYZ6304EB76\\n\",   \n            \"proxy\": \"12345678901\",   \n            \"creditorAccount\": {   \n              \"ispb\": \"12345678\",   \n              \"issuer\": \"1774\",   \n              \"number\": \"1234567890\",   \n              \"accountType\": \"CACC\",   \n            }   \n          }   \n        },   \n        \"debtorAccount\": {   \n          \"ispb\": \"12345678\",   \n          \"issuer\": \"1774\",   \n          \"number\": \"1234567890\",   \n          \"accountType\": \"CACC\",   \n        }   \n      },   \n      \"links\": {   \n        \"self\": \"https://api.banco.com.br/open-banking/payments/v1/consents\",   \n      },   \n      \"meta\": {   \n        \"totalRecords\": 1,   \n        \"totalPages\": 1,   \n        \"requestDateTime\": \"2021-05-21T08:30:00Z\",   \n      }   \n    }\n\n    - **Exemplo -  PIX agendado**\n\n    {   \n      \"alg\": \"PS256\",   \n      \"typ\": \"JWT\",   \n      \"kid\": \"PWAi5ruQcHfzPzq2JFdpY7nAUh6LzTTQtDBUpOM37JQ\"   \n    }   \n    {   \n      \"aud\": \"3449bf21-0b07-48e6-b6fc-13eb161a9901\",   \n      \"iss\": \"ca1b98e1-97a2-43db-947f-8a08054c342e\",   \n      \"jti\": \"a2fd393c-107a-4ad4-be22-3cfeeea90efe\",   \n      \"iat\": 1628257737\",   \n      \"data\": {   \n        \"consentId\": \"urn:bancoex:C1DD33123\",   \n        \"creationDateTime\": \"2021-05-21T08:30:00Z\",   \n        \"expirationDateTime\": \"2021-05-21T08:30:00Z\",   \n        \"statusUpdateDateTime\": \"2021-05-21T08:30:00Z\",   \n        \"status\": \"AWAITING_AUTHORISATION\",   \n        \"loggedUser\": {   \n          \"document\": {   \n            \"identification\": \"11111111111\",   \n            \"rel\": \"CPF\"   \n          }   \n        },   \n        \"businessEntity\": {,   \n          \"document\": {   \n            \"identification\": \"11111111111111\",   \n            \"rel\": \"CNPJ\",   \n          }   \n        },   \n        \"creditor\": {   \n          \"personType\": \"PESSOA_NATURAL\",   \n          \"cpfCnpj\": \"58764789000137\",   \n          \"name\": \"Marco Antonio de Brito\"   \n        },   \n        \"payment\": {   \n          \"type\": \"PIX\",   \n          \"schedule\": {   \n            \"single\": {   \n              \"date\": \"2021-01-01\"   \n            }   \n          },   \n          \"currency\": \"BRL\",   \n          \"amount\": \"100000.12\",   \n          \"ibgeTownCode\": \"5300108\",   \n          \"details\": {   \n            \"localInstrument\": \"DICT\",   \n            \"qrCode\": \"00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6   \n            D27300012\\nBR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008   \n            BRASILIA61087007490062\\n530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.08045   \n            0014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\\nCD81390012BR.COM.OUTRO01190123.AB   \n            CD.3456.WXYZ6304EB76\\n\",   \n            \"proxy\": \"12345678901\",   \n            \"creditorAccount\": {   \n              \"ispb\": \"12345678\",   \n              \"issuer\": \"1774\",   \n              \"number\": \"1234567890\",   \n              \"accountType\": \"CACC\",   \n            }   \n          }   \n        },   \n        \"debtorAccount\": {   \n          \"ispb\": \"12345678\",   \n          \"issuer\": \"1774\",   \n          \"number\": \"1234567890\",   \n          \"accountType\": \"CACC\",   \n        }   \n      },   \n      \"links\": {   \n        \"self\": \"https://api.banco.com.br/open-banking/payments/v1/consents\",   \n      },   \n      \"meta\": {   \n        \"totalRecords\": 1,   \n        \"totalPages\": 1,   \n        \"requestDateTime\": \"2021-05-21T08:30:00Z\",   \n      }   \n    }\n  version: 1.1.0-rc1.0\n\ntags:\n  - name: API - Pagamentos\n    description: |\n      |Versão|\n      |:-----|\n      |1.1.0-rc1.0|\n\n      #### Visão Geral\n\n      A API tem como objetivo coletar o consentimento e realizar a iniciação de pagamento entre bancos e instituições financeiras e acessível também à estabelecimentos comerciais participantes do Open Banking Brasil.\n\n      Os recursos estão disponíveis para pagadores que possuem vínculo com uma instituição detentora de conta participante do Open Banking, independentemente de serem pessoa física ou jurídica.\n\n      #### Especificação em OAS 3.0\n\n      \u003ca href=\"swagger/swagger_payments_apis.yaml\" target=\"_blank\"\u003eDownload da Especificação (OAS 3.0)\u003c/a\u003e\n\npaths:\n  /payments/v1/consents:\n    post:\n      tags:\n        - API - Pagamentos\n      summary: \"Criar consentimento para iniciação de pagamento.\"\n      operationId: paymentsPostConsents\n      description: |\n        Método para a criação do consentimento para iniciação de pagamento.\n\n        Para consultar os payloads correspondentes ao tipo do pagamento PIX, \u003ca href=\"#orientacoes\"\u003eacesse aqui.\u003c/a\u003e\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/consents`\n\n        \u003ca href='dictionary/paymentsPostConsents_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/xFapiAuthDate\"\n        - $ref: \"#/components/parameters/xFapiCustomerIpAddress\"\n        - $ref: \"#/components/parameters/xFapiInteractionId\"\n        - $ref: \"#/components/parameters/xCustomerUserAgent\"\n        - $ref: \"#/components/parameters/XIdempotencyKey\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePaymentConsent\"\n        description: Payload para criação do consentimento para iniciação do pagamento Pix.\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/201PaymentsConsentsConsentCreated\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptable\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntityConsents\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - \"consent:consentId\"\n            - payments\n  /payments/v1/consents/{consentId}:\n    get:\n      tags:\n        - API - Pagamentos\n      summary: \"Consultar consentimento para iniciação de pagamento.\"\n      operationId: paymentsGetConsentsConsentId\n      description: |\n        Método para consultar o consentimento para iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/consents`\n\n        \u003ca href='dictionary/paymentsGetConsentsConsentId_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n\n      parameters:\n        - $ref: \"#/components/parameters/consentId\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/xFapiAuthDate\"\n        - $ref: \"#/components/parameters/xFapiCustomerIpAddress\"\n        - $ref: \"#/components/parameters/xFapiInteractionId\"\n        - $ref: \"#/components/parameters/xCustomerUserAgent\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200PaymentsConsentsConsentIdRead\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptable\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - \"consent:consentId\"\n            - payments\n    patch:\n      tags:\n        - API - Pagamentos\n      summary: \"Revogar consentimento de pagamento.\"\n      operationId: paymentsPatchPixPayments\n      description: |\n        Método para revogação do consentimento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/consents`\n\n        \u003ca href='dictionary/paymentsPatchPixPayments_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n\n      parameters:\n        - $ref: \"#/components/parameters/consentId\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/xFapiAuthDate\"\n        - $ref: \"#/components/parameters/xFapiCustomerIpAddress\"\n        - $ref: \"#/components/parameters/xFapiInteractionId\"\n        - $ref: \"#/components/parameters/xCustomerUserAgent\"\n        - $ref: \"#/components/parameters/XIdempotencyKey\"\n      requestBody:\n        content:\n          application/jwt:\n            schema:\n              $ref: \"#/components/schemas/PatchPaymentsConsent\"\n        description: Payload para revogação do consentimento.\n        required: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200PatchPaymentsConsent\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptable\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntityPatchConsent\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResponseError\"\n      security:\n        - OAuth2AuthorizationCode:\n            - \"consent:consentId\"\n            - payments\n        - OAuth2ClientCredentials:\n            - payments\n  /payments/v1/pix/payments:\n    post:\n      tags:\n        - API - Pagamentos\n      summary: \"Pix - Criar iniciação de pagamento.\"\n      operationId: paymentsPostPixPayments\n      description: |\n        Método para a criação de uma iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/pix/payments`\n\n        \u003ca href='dictionary/paymentsPostPixPayments_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n\n      parameters:\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/xFapiAuthDate\"\n        - $ref: \"#/components/parameters/xFapiCustomerIpAddress\"\n        - $ref: \"#/components/parameters/xFapiInteractionId\"\n        - $ref: \"#/components/parameters/xCustomerUserAgent\"\n        - $ref: \"#/components/parameters/XIdempotencyKey\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePixPayment\"\n        description: Payload para criação da iniciação do pagamento Pix.\n        required: true\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/201PaymentsInitiationPixPaymentCreated\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptable\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntityPixPayments\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - \"consent:consentId\"\n            - payments\n  /payments/v1/pix/payments/{paymentId}:\n    get:\n      tags:\n        - API - Pagamentos\n      summary: \"Pix - Consultar iniciação de pagamento.\"\n      operationId: paymentsGetPixPaymentsPaymentId\n      description: |\n        Método para consultar uma iniciação de pagamento.\n\n        ### Dicionário de dados\n\n        Campos de resposta do endpoint de `/pix/payments`.\n\n        \u003ca href='dictionary/paymentsGetPixPaymentsPaymentId_v1.csv' target=\"_blank\"\u003eFazer download do dicionário de dados\u003c/a\u003e\n\n        Consulte a seção **Convenções de payload** para obter mais informações sobre [Atributos Obrigatórios / Opcionais](#convencoes-de-propriedade-dos-atributos).\n\n      parameters:\n        - $ref: \"#/components/parameters/paymentId\"\n        - $ref: \"#/components/parameters/Authorization\"\n        - $ref: \"#/components/parameters/xFapiAuthDate\"\n        - $ref: \"#/components/parameters/xFapiCustomerIpAddress\"\n        - $ref: \"#/components/parameters/xFapiInteractionId\"\n        - $ref: \"#/components/parameters/xCustomerUserAgent\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200PaymentsInitiationPixPaymentIdRead\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"405\":\n          $ref: \"#/components/responses/MethodNotAllowed\"\n        \"406\":\n          $ref: \"#/components/responses/NotAcceptable\"\n        \"415\":\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        \"429\":\n          $ref: \"#/components/responses/TooManyRequests\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n      security:\n        - OpenId:\n            - openid\n          OAuth2Security:\n            - \"consent:consentId\"\n            - payments\ncomponents:\n  schemas:\n    422ResponseErrorCreateConsent:\n      $ref: ./schemas/payments_apis/422ResponseErrorCreateConsent.yaml\n    422ResponseErrorCreatePixPayment:\n      $ref: ./schemas/payments_apis/422ResponseErrorCreatePixPayment.yaml\n    Account:\n      $ref: ./schemas/business_commons/Account.yaml\n    BusinessEntity:\n      $ref: ./schemas/payments_apis/BusinessEntity.yaml\n    CreatePaymentConsent:\n      $ref: ./schemas/payments_apis/CreatePaymentConsent.yaml\n    CreatePixPayment:\n      $ref: ./schemas/payments_apis/CreatePixPayment.yaml\n    CreatePixPaymentData:\n      $ref: ./schemas/payments_apis/CreatePixPaymentData.yaml\n    CreditorAccount:\n      $ref: ./schemas/business_commons/CreditorAccount.yaml\n    DebtorAccount:\n      $ref: ./schemas/business_commons/DebtorAccount.yaml\n    Details:\n      $ref: ./schemas/payments_apis/PaymentDetails.yaml\n    EndToEndId:\n      $ref: ./schemas/business_commons/EndToEndId.yaml\n    EnumAccountPaymentsType:\n      $ref: ./schemas/enum/EnumAccountPaymentsType.yaml\n    EnumAuthorisationStatusType:\n      $ref: ./schemas/enum/EnumAuthorisationStatusType.yaml\n    EnumAuthorisationPatchStatusType:\n      $ref: ./schemas/enum/EnumAuthorisationPatchStatusType.yaml\n    EnumErrorsCreateConsent:\n      $ref: ./schemas/enum/EnumErrorsCreateConsent.yaml\n    EnumErrorsCreatePayment:\n      $ref: ./schemas/enum/EnumErrorsCreatePayment.yaml\n    EnumLocalInstrument:\n      $ref: ./schemas/enum/EnumLocalInstrument.yaml\n    EnumPaymentPersonType:\n      $ref: ./schemas/enum/EnumPaymentPersonType.yaml\n    EnumPaymentStatusType:\n      $ref: ./schemas/enum/EnumPaymentStatusType.yaml\n    EnumPaymentType:\n      $ref: ./schemas/enum/EnumPaymentType.yaml\n    EnumRejectionReasonType:\n      $ref: ./schemas/enum/EnumRejectionReasonType.yaml\n    Identification:\n      $ref: ./schemas/payments_apis/PaymentIdentification.yaml\n    Links:\n      $ref: ./schemas/Links.yaml\n    LoggedUser:\n      $ref: ./schemas/payments_apis/LoggedUser.yaml\n    Meta:\n      $ref: ./schemas/Meta.yaml\n    PaymentConsent:\n      $ref: ./schemas/payments_apis/PaymentConsent.yaml\n    PaymentPix:\n      $ref: ./schemas/payments_apis/PaymentPix.yaml\n    ResponseError:\n      $ref: ./schemas/ResponseError.yaml\n    ResponsePaymentConsent:\n      $ref: ./schemas/payments_apis/ResponsePaymentConsent.yaml\n    ResponsePixPayment:\n      $ref: ./schemas/payments_apis/ResponsePixPayment.yaml\n    ResponsePixPaymentData:\n      $ref: ./schemas/payments_apis/ResponsePixPaymentData.yaml\n\n    PatchPaymentsConsent:\n      $ref: ./schemas/payments_apis/PatchPaymentsConsent.yaml\n    PatchPaymentsConsentData:\n      $ref: ./schemas/payments_apis/PatchPaymentsConsentData.yaml\n    Revocation:\n      $ref: ./schemas/payments_apis/Revocation.yaml\n    EnumRevokedBy:\n      $ref: ./schemas/payments_apis/EnumRevokedBy.yaml\n    Reason:\n      $ref: ./schemas/payments_apis/Reason.yaml\n    EnumRevocationReason:\n      $ref: ./schemas/enum/EnumRevocationReason.yaml\n    422ResponseErrorPatchConsent:\n      $ref: ./schemas/payments_apis/422ResponseErrorPatchConsent.yaml\n    EnumErrorsPatchConsent:\n      $ref: ./schemas/enum/EnumErrorsPatchConsent.yaml\n  parameters:\n    consentId:\n      $ref: ./parameters/ConsentId.yaml\n    paymentId:\n      $ref: ./parameters/PaymentId.yaml\n    Authorization:\n      $ref: ./parameters/Authorization.yaml\n    xCustomerUserAgent:\n      $ref: ./parameters/XCustomerUserAgent.yaml\n    xFapiAuthDate:\n      $ref: ./parameters/XFapiAuthDate.yaml\n    xFapiCustomerIpAddress:\n      $ref: ./parameters/XFapiCustomerIpAddress.yaml\n    xFapiInteractionId:\n      $ref: ./parameters/XFapiInteractionId.yaml\n    XIdempotencyKey:\n      $ref: ./parameters/XIdempotencyKey.yaml\n  responses:\n    BadRequest:\n      $ref: ./responses/payments_apis/BadRequest.yaml\n    Forbidden:\n      $ref: ./responses/payments_apis/Forbidden.yaml\n    InternalServerError:\n      $ref: ./responses/payments_apis/InternalServerError.yaml\n    MethodNotAllowed:\n      $ref: ./responses/payments_apis/MethodNotAllowed.yaml\n    NotAcceptable:\n      $ref: ./responses/payments_apis/NotAcceptable.yaml\n    NotFound:\n      $ref: ./responses/payments_apis/NotFound.yaml\n    TooManyRequests:\n      $ref: ./responses/payments_apis/TooManyRequests.yaml\n    UnprocessableEntityConsents:\n      $ref: ./schemas/payments_apis/UnprocessableEntityConsents.yaml\n    UnprocessableEntityPixPayments:\n      $ref: ./schemas/payments_apis/UnprocessableEntityPixPayments.yaml\n    UnprocessableEntityPatchConsent:\n      $ref: ./schemas/payments_apis/UnprocessableEntityPatchConsent.yaml\n    Unauthorized:\n      $ref: ./responses/payments_apis/Unauthorized.yaml\n    UnsupportedMediaType:\n      $ref: ./responses/payments_apis/UnsupportedMediaType.yaml\n    201PaymentsConsentsConsentCreated:\n      description: Consentimento de pagamento criado com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: ./headers/XFapiInteractionId.yaml\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ResponsePaymentConsent\"\n    200PaymentsConsentsConsentIdRead:\n      description: Dados do consentimento de pagamento obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: ./headers/XFapiInteractionId.yaml\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ResponsePaymentConsent\"\n    200PatchPaymentsConsent:\n      description: Revogação do Consentimento informado com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: ./headers/XFapiInteractionId.yaml\n      content:\n        application/jwt:\n          schema:\n            $ref: \"#/components/schemas/ResponsePaymentConsent\"\n    201PaymentsInitiationPixPaymentCreated:\n      description: Iniciação de pagamento Pix criada com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: ./headers/XFapiInteractionId.yaml\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ResponsePixPayment\"\n    200PaymentsInitiationPixPaymentIdRead:\n      description: Dados de iniciação de pagamento Pix obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: ./headers/XFapiInteractionId.yaml\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ResponsePixPayment\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"xFapiCustomerIpAddress\": resolve \"./parameters/XFapiCustomerIpAddress.yaml\" reference: external \"./parameters/XFapiCustomerIpAddress.yaml\": file: local file reference is not allowed"
}