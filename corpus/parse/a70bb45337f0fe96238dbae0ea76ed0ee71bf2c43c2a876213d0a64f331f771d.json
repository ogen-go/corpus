{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/performancecopilot/pcp"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/specs/openapi.yaml",
			"byteSize": 65901,
			"content": "openapi: 3.0.1\ninfo:\n  title: PMWEBAPI\n  x-logo:\n    url: 'https://pcp.io/images/pcp-logo.png'\n  description: |\n    ## ABOUT PMWEBAPI\n    The PMWEBAPI (Performance Metrics Web Application Programming Interface) is a collection of interfaces providing Performance Co-Pilot services for web applications. It consists of APIs for web applications querying and analysing both live and historical performance data, as well as APIs used by web servers.\n\n    The usual HTTP URL-encoded optional parameter rules apply and PMWEBAPI REST requests always follow the convention:\n    ```bash\n    /api/endpoint?parameter1=value1\u0026parameter2=value2\n    ```\n    Examples in all following sections use the [curl](https://man7.org/linux/man-pages/man1/curl.1.html)(1) command line utility with a local [pmproxy](https://pcp.io/man/man1/pmproxy.1.html)(1) server listening on port 44322 (default port). The [pmjson](https://pcp.io/man/man1/pmjson.1.html)(1) utility is used to neatly format any JSON output, as opposed to the compact (minimal whitespace) form provided by default. The examples in the scalable time series section use historical data recorded by the [pmlogger](https://pcp.io/man/man1/pmlogger.1.html)(1) service, in conjunction with a local [redis-server](https://man7.org/linux/man-pages/man1/redis-server.1.html)(1).\n  version: \"\"\nservers:\n- url: http://localhost:44322/\ntags:\n- name: OPEN METRICS\n  description: |\n    Exporting of live performance metrics in an Open Metrics compatible format (as described at https://openmetrics.io and popularized by the https://prometheus.io project) is available.\n- name: SCALABLE TIME SERIES\n  description: |\n    The fast, scalable time series query capabilities provided by the [pmseries](https://pcp.io/man/man1/pmseries.1.html)(1) command are also available through a REST API. These queries provide access to performance data (metric metadata and values) from multiple hosts simultaneously, and in a fashion suited to efficient retrieval by any number of web applications.\n\n    All requests in this group can be accompanied by an optional *client* parameter. The value passed in the request will be sent back in the response - all responses will be in JSON object form in this case, with top level \"client\" and \"result\" fields.\n- name: FULL TEXT SEARCH\n  description: |\n    The full text search capabilities provided by the [pmsearch](https://pcp.io/man/man1/pmsearch.1.html)(1) command are also available through a REST API. These queries provide access to an index over performance metric names, instances, instance domains and help text, suitable for a metric search engine, and in a fashion suited to efficient querying by any number of web applications.\n\n    In order to use this functionality, the optional *RediSearch* module must be loaded in the **redis-server** at the time **pmproxy** is started, such that metrics, instances and help text it discovers can be automatically indexed.\n- name: PMAPI HOST SERVICES\n  description: |\n    The live performance collection facilities available from [pmcd](https://pcp.io/man/man1/pmcd.1.html)(1) can also be accessed through a REST API.\n\n    All requests are performed on the web server host by default, unless either a *hostspec* or *context* parameter is provided. *hostname* can be used in place of *hostspec*.\n\n    Context identifiers are used as a persistent way to refer to PMAPI contexts across related web requests. These contexts expire after a configurable period of disuse, and are either explicitly allocated using the */pmapi/context* interface, or implicitly allocated using other interfaces.\n\n    The timeout interval is configurable at context creation time, and as such the *polltimeout* parameter can be used anywhere the *hostspec* is specified. It sets the context timeout in terms of length of inactive time. The unit for the timeout value is seconds and the default is 5.\n\n    To specify a specific existing context in any PMAPI web request, the endpoints can be accessed with either the *context* parameter or embedded in the endpoint URL itself, such as **/pmapi/[number]/fetch**.\n- name: NOTES\n  description: |\n    For the REST APIs, errors generally result in HTTP-level error responses. Wherever possible, any PMAPI error string will also be provided in a message along \n    with the response.\n    \n    All responses will be returned using HTTP 1.1 protocol and with chunked encoding being used to stream responses that are larger than a configured maximum size. \n    Compression will be used on responses whenever the client indicates appropriate support.\n    \n    An *Access-Control-Allow-Origin: \\** header is added to all REST API responses.\n\npaths:\n  /metrics:\n    get:\n      tags:\n      - OPEN METRICS\n      summary: Fetches current values and metadata \n      description: |\n        `Get Metrics` fetches current values and metadata for all metrics, or only metrics indicated by a comma-separated list of *names*.\n        \n        For all numeric metrics with the given NAME prefixes, create an Open Metrics (Prometheus) text export format giving their current value and related metadata.\n        \n        The response has plain text type rather than JSON commonly used elsewhere in the REST API. This format can be injested by many open source monitoring tools, \n        including Prometheus and [pmdaopenmetrics](https://pcp.io/man/man1/pmdaopenmetrics.1.html)(1).\n        \n        The native PCP metric metadata (metric name, type, indom, semantics and units) is first output for each metric with **\\# PCP** prefix. The metadata reported \n        is of the form described on [pmTypeStr](https://pcp.io/man/man3/pmtypestr.3.html)(3), [pmInDomStr](https://pcp.io/man/man3/pmindomstr.3.html)(3), \n        [pmSemStr](https://pcp.io/man/man3/pmsemstr.3.html)(3) and [pmUnitsStr](https://pcp.io/man/man3/pmunitsstr.3.html)(3) respectively. If the [pmUnitsStr](https://pcp.io/man/man3/pmunitsstr.3.html)(3) \n        units string is empty, then **none** is output. The units metadata string may contain spaces and extends to the end of the line.\n        \n        PCP metric names are mapped so that the **.** separators are exchanged with **_** (':' in back-compatibility mode, where \"# PCP\" is the identifying line suffix). \n        Both metric labels and instances are represented as Prometheus labels, with external instance names being quoted and the flattened PCP metric hierarchy being \n        presented with each value.\n\n        ```bash\n          $ curl -s http://localhost:44322/metrics?names=proc.nprocs,kernel.pernode.cpu.intr,filesys.blocksize\n\n          # PCP5 proc.nprocs 3.8.99 u32 PM_INDOM_NULL instant none\n          # HELP proc_nprocs instantaneous number of processes\n          # TYPE proc_nprocs gauge\n          proc_nprocs {hostname=\"app1\"} 7\n\n          # PCP5 kernel.pernode.cpu.intr 60.0.66 u64 60.19 counter millisec\n          # HELP kernel_pernode_cpu_intr total interrupt CPU [...]\n          # TYPE kernel_pernode_cpu_intr counter\n          kernel_pernode_cpu_intr{hostname=\"app1\",instname=\"node0\"} 25603\n\n          # PCP5 filesys.blocksize 60.5.9 u32 60.5 instant byte\n          # HELP filesys_blocksize Size of each block on mounted file[...]\n          # TYPE filesys_blocksize gauge\n          filesys_blocksize{hostname=\"app1\",instname=\"/dev/sda1\"} 4096\n          filesys_blocksize{hostname=\"app1\",instname=\"/dev/sda2\"} 4096\n        ```   \n      parameters:\n      - name: names\n        in: query\n        description: Comma-separated list of metric names\n        schema:\n          type: string\n      - name: times\n        in: query\n        description: Append sample times (milliseconds since epoch)\n        schema:\n          type: boolean\n\n  /series/query:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Performs a time series query\n      description: |\n        The query is in the format described in [pmseries](https://pcp.io/man/man1/pmseries.1.html)(1) and is passed to the server via either the *expr* parameter (HTTP GET) or via the message body (HTTP POST).\n\n        When querying for time series matches only, no time window options are specified and matching series identifiers are returned in a JSON array.\n        ```bash\n        $ curl -s 'http://localhost:44322/series/query?expr=disk.dev.read*' | pmjson\n        ```\n        When querying for time series values as well, a time window must be specified as part of the query string. The simplest form is to just request the most recent sample.\n        ```bash\n        $ curl -s 'http://localhost:44322/series/query?expr=disk.dev.read*[samples:1]' | pmjson\n        ```\n        **References:** [pmSeriesQuery](https://man7.org/linux/man-pages/man3/pmSeriesQuery.3.html)(3)\n      operationId: get/series/query\n      parameters:\n      - name: expr\n        in: query\n        description: Query string in [pmseries](https://pcp.io/man/man1/pmseries.1.html)(1) format\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                anyOf:\n                - $ref: '#/components/schemas/seriesIDs'\n                - $ref: '#/components/schemas/seriesValues'\n\n  /series/values:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Performs values retrievals for one or more time series identifiers\n      description: |\n        The JSON response contains the same information as the **pmseries - q /-- query** option using any of the time window parameters described on [pmseries](https://pcp.io/man/man1/pmseries.1.html)(1). If no time window parameters are specified, the single most recent value observed is retrieved.\n        ```bash\n        $ curl -s http://localhost:44322/series/values?series=605fc77742cd0317597291329561ac4e50c0dd12 | pmjson\n        ```\n        **References:** [pmSeriesValues](https://man7.org/linux/man-pages/man3/pmSeriesValues.3.html)(3)\n\n      operationId: get/series/values\n      parameters:\n      - name: series\n        in: query\n        description: Comma-separated list of series identifiers\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      - name: samples\n        in: query\n        description: Count of samples to return\n        schema:\n          type: number\n      - name: interval\n        in: query\n        description: Time between successive samples\n        schema:\n          type: string\n      - name: start\n        in: query\n        description: Sample window start time\n        schema:\n          type: string\n      - name: finish\n        in: query\n        description: Sample window end time\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: Sample window offset\n        schema:\n          type: string\n      - name: align\n        in: query\n        description: Sample time alignment\n        schema:\n          type: string\n      - name: zone\n        in: query\n        description: Time window timezone\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: array\n                example:\n                - series: 605fc77742cd0317597291329561ac4e50c0dd12\n                  timestamp: 1.3176330229599592E12\n                  value: \"71660\"\n                items:\n                  type: object\n                  properties:\n                    series:\n                      type: string\n                    timestamp:\n                      type: integer\n                    value:\n                      type: string\n  \n  /series/descs:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Performs a descriptor lookup for one or more time series identifiers\n      description: |\n        The JSON response contains the same information as the **pmseries - d /-- desc** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/descs?series=605fc77742cd0317597291329561ac4e50c0dd12 | pmjson\n        ```\n        **References:** [pmSeriesDescs](https://man7.org/linux/man-pages/man3/pmSeriesDescs.3.html)(3)\n      operationId: get/series/descs\n      parameters:\n      - name: series\n        in: query\n        description: Comma-separated list of series identifiers\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  series:\n                    type: string\n                  source:\n                    type: integer\n                  pmid:\n                    type: string\n                  indom:\n                    type: string\n                  semantics:\n                    type: integer\n                  type:\n                    type: string\n                  units:\n                    type: string\n                example:\n                - series: 605fc77742cd0317597291329561ac4e50c0dd12\n                  source: f5ca7481da8c038325d15612bb1c6473ce1ef16f\n                  pmid: 60.0.4\n                  indom: 60.1\n                  semantics: counter\n                  type: u32\n                  units: count\n  \n  /series/labels:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Performs a label set lookup \n      description: |\n        This command operates in one of three modes.\n\n        It can perform a label set lookup for one or more time series identifiers, when given the series parameter. The JSON response for this mode contains the same information as the **pmseries - I /-- labels** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/labels?series=605fc77742cd0317597291329561ac4e50c0dd12 | pmjson\n        ```\n        It can produce a list of all known label names, in the absence of name , names or series parameters. The JSON responses for this mode contains the same information as the **pmseries - l /-- labels** option.        \n        ```bash\n        $ curl -s http://localhost:44322/series/labels | pmjson\n        ```\n        It can produce a list of all known label values for a given label name or names . The JSON response for this mode contains the same information as the **pmseries - v /-- values** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/labels?names=hostname,domainname | pmjson\n        ```\n        **References:** [pmSeriesLabels](https://man7.org/linux/man-pages/man3/pmSeriesLabels.3.html)(3), [pmSeriesLabelValues](https://man7.org/linux/man-pages/man3/pmSeriesLabelValues.3.html)(3)\n      operationId: get/series/labels\n      parameters:\n      - name: series\n        in: query\n        description: Comma-separated list of series identifiers\n        schema:\n          type: string\n      - name: match\n        in: query\n        description: Glob pattern string to match on all labels\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: Find all known label values for given name\n        schema:\n          type: string\n      - name: names\n        in: query\n        description: Comma-separated list of label names\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                anyOf:\n                - $ref: '#/components/schemas/seriesParam'\n                - $ref: '#/components/schemas/noParam'\n                - $ref: '#/components/schemas/namesParam'\n                \n  /series/metrics:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Performs a metric name lookup for one or more time series identifiers\n      description: |\n        The JSON response contains the same information as the **pmseries - m /-- metrics** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/metrics?series=605fc77742cd0317597291329561ac4e50c0dd12 | pmjson\n        ```\n        Alternatively, with no *series* argument, this request will return the list of all known metric names.\n        ```bash\n        $ curl -s http://localhost:44322/series/metrics | pmjson\n        ```\n        **References:** [pmSeriesMetrics](https://man7.org/linux/man-pages/man3/pmSeriesMetrics.3.html)(3)\n      operationId: get/series/metrics\n      parameters:\n      - name: series\n        in: query\n        description: Comma-separated list of series identifiers\n        schema:\n          type: string\n      - name: match\n        in: query\n        description: Glob pattern string to match on all names\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                anyOf:\n                - $ref: '#/components/schemas/series_metricName'\n                - $ref: '#/components/schemas/all_metricNames'\n                \n  /series/sources:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Performs a lookup for one or more time series sources\n      description: |\n        It returns an array of all PMAPI context names used to access the time series from that\n        source.The JSON response contains the same information as the **pmseries - S /-- source** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/sources?source=2cd6a38f9339f2dd1f0b4775bda89a9e7244def6 | pmjson\n        ```\n        **References:** [pmSeriesSources](https://man7.org/linux/man-pages/man3/pmSeriesSources.3.html)(3)\n      operationId: get/series/sources\n      parameters:\n      - name: series\n        in: query\n        description: Comma-separated list of series identifiers\n        schema:\n          type: string\n      - name: match\n        in: query\n        description: Glob pattern string to match on all names\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: array\n                example:\n                - source: 2cd6a38f9339f2dd1f0b4775bda89a9e7244def6\n                  context:\n                  - /var/log/pcp/pmlogger/acme\n                  - www.acme.com\n                items:\n                  type: object\n                  properties:\n                    source:\n                      type: string\n                    context:\n                      type: array\n                      items:\n                        type: string\n  \n  /series/instances:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Provides instance identifiers and names for one or more time series\n        identifiers\n      description: |\n        The JSON response contains the same information as the **pmseries - i /-- instance** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/instances?series=605fc77742cd0317597291329561ac4e50c0dd12 | pmjson\n        ```\n        Alternatively, with no *series* argument, this request will return the list of all known instance names.\n        ```bash\n        $ curl -s http://localhost:44322/series/instances | pmjson\n        ```\n        **References:** [pmSeriesInstances](https://man7.org/linux/man-pages/man3/pmSeriesInstances.3.html)(3)\n      operationId: get/series/instances\n      parameters:\n      - name: series\n        in: query\n        description: Comma-separated list of series identifiers\n        schema:\n          type: string\n      - name: match\n        in: query\n        description: Glob pattern string to match on all names\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                anyOf:\n                - $ref: '#/components/schemas/series_instanceName'\n                - $ref: '#/components/schemas/all_instanceNames'\n                \n  /series/load:\n    get:\n      tags:\n      - SCALABLE TIME SERIES\n      summary: Load time series performance data\n      description: |\n        It loads time series performance data from the specified source into the\n        **redis-server** cache. This request is equivalent to the **pmseries - l /-- load** option.\n        ```bash\n        $ curl -s http://localhost:44322/series/load\u0026expr={source.name:\"/var/log/pcp/pmlogger/acme\"}\n        ```\n        **References:** [pmSeriesLoad](https://man7.org/linux/man-pages/man3/pmSeriesLoad.3.html)(3)\n      operationId: get/series/load\n      parameters:\n      - name: expr\n        in: query\n        description: Source load string in [pmseries](https://pcp.io/man/man1/pmseries.1.html)(1) format\n        schema:\n          type: string\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                example:\n                  success: true\n\n  /search/text:\n    get:\n      tags:\n      - FULL TEXT SEARCH\n      summary: Performs a text search query\n      description: | \n        It performs a text search query across metrics and instance domains - all forms of names and help texts.\n        \n        The mandatory search string is further described in [pmsearch](https://pcp.io/man/man1/pmsearch.1.html)(1) and is passed to the server via the *query* parameter (HTTP GET).\n        ```bash\n        $ curl -s http://localhost:44322/search/text?query=halt | pmjson\n        ```\n        The available search entity *types* are *metric*, *indom* and *instance*. Query parameters *highlight* and *field* take *name*, *oneline* and *helptext*.\n\n        Query parameter *return* takes *name*, *type*, *oneline*, *helptext*, *indom*. There is typically both a name and help text associated with metrics. Contents of these are then matched \n        against *query*. An instance domain has help text and a numeric identifier, while instances have a name only (which can be searched).\n        \n        **Reference:** [pmSearchTextQuery](https://man7.org/linux/man-pages/man3/pmSearchTextQuery.3.html)(3)\n      operationID: get/search/text\n      parameters:\n      - name: query\n        in: query\n        description: Query string in [pmsearch](https://pcp.io/man/man1/pmsearch.1.html)(1) format\n        schema:\n          type: string\n      - name: highlight\n        in: query\n        description: Include matching markup in response fields\n        schema:\n          type: fields\n      - name: offset\n        in: query\n        description: Result offset cursor for pagination\n        schema:\n          type: number\n      - name: limit\n        in: query\n        description: Maximum results to include in response\n        schema:\n          type: number\n      - name: field\n        in: query\n        description: Queried fields (defaults to all)\n        schema:\n          type: fields\n      - name: return\n        in: query\n        description: Fields to actually return (defaults to all)\n        schema:\n          type: fields\n      - name: type\n        in: query\n        description: Entity types to filter (defaults to all)\n        schema:\n          type: types\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: number\n                  offset:\n                    type: number\n                  limit:\n                    type: number\n                  elapsed:\n                    type: number\n                  results:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        type:\n                          type: string\n                        indom:\n                          type: string\n                        oneline:\n                          type: string\n                        helptext:\n                          type: string\n                example:\n                  total : 2\n                  offset: 0\n                  limit: 10\n                  elapsed: 0.000504\n                  results:\n                    - name: kvm.halt_exits\n                      type: metric\n                      indom: 95.0.4\n                      oneline: Number of guest exits due to halt calls.\n                      helptext: This type of exit is usually seen when a guest is idle.\n                    - name: kvm.halt_wakeup\n                      type: metric\n                      indom: 95.0.6\n                      oneline: Number of wakeups from a halt.\n                    \n  /search/suggest:\n    get:\n      tags:\n      - FULL TEXT SEARCH\n      summary: Provides search query suggestions, that is, metric and instance names\n      description: | \n        The mandatory search string is further described in [pmsearch](https://pcp.io/man/man1/pmsearch.1.html)(1) and is passed to the server via the *query* parameter (HTTP GET).\n        ```bash\n        $ curl -s http://localhost:44322/search/suggest?query=disk\u0026limit=4 | pmjson\n        ```\n        **Reference:** [pmSearchTextSuggest](https://man7.org/linux/man-pages/man3/pmSearchTextSuggest.3.html)(3)\n      operationID: get/search/suggest\n      parameters:\n      - name: query\n        in: query\n        description: Search query for search engine\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Max results to include in response\n        schema:\n          type: number\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: array\n                items:\n                  type: string\n                example:\n                - disk.all.avactive\n                - disk.all.aveq\n                - disk.all.blkread\n                - disk.all.blktotal\n  \n  /search/indom:\n    get:\n      tags:\n      - FULL TEXT SEARCH\n      summary: Provides all entities related to indom\n      description: | \n        It provides all entities (instances, metrics) related to indom, including itself, that is passed to the server via the *query* parameter.\n\n        **Reference:** [pmSearchTextInDom](https://man7.org/linux/man-pages/man3/pmSearchTextInDom.3.html)(3)\n      operationID: get/search/indom\n      parameters:\n      - name: query\n        in: query\n        description: Search indom for search engine\n        schema:\n          type: string\n      - name: offset\n        in: query\n        description: Result offset cursor for pagination\n        schema:\n          type: number\n      - name: limit\n        in: query\n        description: M results to include in response\n        schema:\n          type: number\n\n  /search/info:\n    get:\n      tags:\n      - FULL TEXT SEARCH\n      summary: Provides metrics relating to operation\n      description: | \n        It provides metrics relating to operation of the search engine, in particular showing document and text record counts.\n        ```bash\n        $ curl -s http://localhost:44322/search/info | pmjson\n        ```\n        **Reference:** [pmSearchInfo](https://man7.org/linux/man-pages/man3/pmSearchInfo.3.html)(3)\n      operationID: get/search/info\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  docs:\n                    type: number\n                  terms:\n                    type: number\n                  records:\n                    type: number\n                  records_per_doc_avg:\n                    type: number\n                  bytes_per_record_avg:\n                    type: number\n                  inverted_sz_mb:\n                    type: number\n                  inverted_cap_mb:\n                    type: number\n                  inverted_cap_ovh:\n                    type: number\n                  skip_index_size_mb:\n                    type: number\n                  score_index_size_mb:\n                    type: number\n                  offsets_per_term_avg:\n                    type: number\n                  offset_bits_per_record_avg:\n                    type: number\n                example:\n                  docs: 1589\n                  terms: 3855\n                  records: 116831\n                  records_per_doc_avg: 73.52\n                  bytes_per_record_avg: 6.36\n                  inverted_sz_mb: 0.71\n                  inverted_cap_mb: 0.00\n                  inverted_cap_ovh: 0.00\n                  skip_index_size_mb: 0.00\n                  score_index_size_mb: 0.00\n                  offsets_per_term_avg: 9.41\n                  offset_bits_per_record_avg: 8.00\n\n  /pmapi/context:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Creates a context for live sampling\n      description: | \n        To create a context for live sampling, a web client can access any */pmapi* URL (optionally using the *hostspec* or *context* parameter). If no \n        context exists, a new one will be created for that web client, and its identifier returned for future accesses.\n        \n        However, */pmapi/context* is provided as a dedicated URL for applications wishing to explicitly create the contexts they use.\n        ```\n        $ curl -s http://localhost:44322/pmapi/context?hostspec=www.acme.com\u0026polltimeout=0.5 | pmjson\n        ```\n        The context (a 32-bit unsigned decimal number) can then be used with all later requests.\n\n        In the case of a *hostspec* containing authentication information, such as a username, the server will follow the HTTP Basic Authentication \n        protocol to ascertain necessary authentication details from the user, providing the client web application an opportunity to request these from \n        the user.\n\n        **Reference:** [pmNewContext](https://man7.org/linux/man-pages/man3/pmNewContext.3.html)(3)\n      operationID: get/pmapi/context\n      parameters:\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  source:\n                    type: string\n                  hostspec:\n                    type: string\n                  labels:\n                    properties:\n                      domainname:\n                        type: string\n                      groupid:\n                        type: number\n                      hostname:\n                        type: string\n                      machineid:\n                        type: string\n                      platform:\n                        type: string\n                      userid:\n                        type: number\n                example:\n                  context: 348734\n                  source: 05af7f3eb840277fd3cfa91f90ef0067199743c\n                  hostspec: www.acme.com\n                  labels:\n                    domainname: acme.com\n                    groupid: 1000\n                    hostname: www.acme.com\n                    machineid: 295b7623b6074cc8bdbda8bf96f6930a\n                    platform: dev\n                    userid: 1000\n\n  /pmapi/metric:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Provides detailed PMAPI metric metadata\n      description: | \n        The *metric* endpoint provides detailed PMAPI metric metadata for one or more metrics. If no parameters are supplied, the response will be for \n        all metrics found when traversing the entire Performance Metrics Name Space (PMNS).\n        \n        The *prefix* parameter can be used to specify a subtree of the PMNS for traversal. Alternatively, a specific metric or comma-separated list of \n        metrics can be specified using either *name* or *names*.\n        \n        The server response is a JSON document that provides metric metadata as an array.\n        ```\n        $ curl -s http://localhost:44322/pmapi/metric?names=kernel.all.load,disk.all.read | pmjson\n        ```\n        Most of the fields are directly transcribed from the PMAPI calls for metric descriptors, labels and help text mentioned above and are exactly as \n        would be observed using the [pminfo](https://pcp.io/man/man1/pminfo.1.html)(1) command with the - **dlmstT** options.\n        \n        The semantics, type and units fields are as returned by [pmTypeStr](https://man7.org/linux/man-pages/man3/pmTypeStr.3.html)(3), \n        [pmUnitsStr](https://man7.org/linux/man-pages/man3/pmUnitsStr.3.html)(3) and [pmSemStr](https://man7.org/linux/man-pages/man3/pmSemStr.3.html)(3).\n        \n        **Reference:** [pmLookupDesc](https://man7.org/linux/man-pages/man3/pmLookupDesc.3.html)(3),\n                       [pmLookupLabels](https://man7.org/linux/man-pages/man3/pmLookupLabels.3.html)(3),\n                       [pmLookupName](https://man7.org/linux/man-pages/man3/pmLookupName.3.html)(3),\n                       [pmLookupText](https://man7.org/linux/man-pages/man3/pmLookupText.3.html)(3)\n      operationID: get/pmapi/metric\n      parameters:\n      - name: name\n        in: query\n        description: An individual metric name\n        schema:\n          type: string\n      - name: names\n        in: query\n        description: Comma-separated list of metric names\n        schema:\n          type: string\n      - name: pmid\n        in: query\n        description: Numeric or [pmIDStr](https://man7.org/linux/man-pages/man3/pmIDStr.3.html)(3) metric identifier\n        schema:\n          type: pmID\n      - name: pmids\n        in: query\n        description: Comma-separated numeric or [pmIDStr](https://man7.org/linux/man-pages/man3/pmIDStr.3.html)(3) pmIDs\n        schema:\n          type: string\n      - name: prefix\n        in: query\n        description: Metric namespace component as in [PMNS](https://man7.org/linux/man-pages/man5/PMNS.5.html)(5)\n        schema:\n          type: string\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  metrics:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        pmid:\n                          type: string\n                        indom:\n                          type: string\n                        type:\n                          type: string\n                        sem:\n                          type: string\n                        units:\n                          type: string\n                        series:\n                          type: string\n                        source:\n                          type: string\n                        labels:\n                          type: object\n                          properties:\n                            agent:\n                              type: string\n                            domainname:\n                              type: string\n                            groupid:\n                              type: number\n                            hostname:\n                              type: string\n                            platform:\n                              type: string\n                            userid:\n                              type: number\n                        text-oneline:\n                          type: string\n                        text-help:\n                          type: string\n                example:\n                  context: 348734,\n                  metrics:\n                    - name: kernel.all.load\n                      pmid: 60.2.0\n                      indom: 60.2\n                      type: FLOAT\n                      sem: instant\n                      units: none\n                      series: d2b28c7f6dc0d69ffd21dba7ba955e78c37719b\n                      source: 05af7f3eb840277fd3cfa91f90ef0067199743c\n                      labels:\n                        agent: linux\n                        domainname: acme.com\n                        groupid: 1000\n                        hostname: www.acme.com\n                        platform: dev\n                        userid: 1000\n                      text-oneline: 1, 5 and 15 minute load average\"\n                    - name: disk.all.read\n                      pmid: 60.0.24\n                      type: U64\n                      sem: counter\n                      units: count\n                      series: d2b28c7f6dc0d69ffd21dba7ba955e78c37719b\n                      source: 05af7f3eb840277fd3cfa91f90ef0067199743c\n                      labels:\n                        agent: linux\n                        domainname: acme.com\n                        groupid: 1000\n                        hostname: www.acme.com\n                        platform: dev\n                        userid: 1000\n                      text-oneline: total read operations, summed for all disks\n                      text-help: Cumulative number of disk read operations [...]\n  \n  /pmapi/fetch:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Fetches (samples) current values for given metrics\n      description: | \n        If any of the names or pmids provided are valid, the response is a JSON document that provides the values for all instances of the metrics, unless a instance profile has been \n        set for the web context (see section on InDom profiles below).\n        ```\n        $ curl -s http://localhost:44322/pmapi/fetch?names=kernel.all.load,disk.all.read | pmjson\n        ```\n        The response fields map directly to fields from the underlying [pmFetch](https://man7.org/linux/man-pages/man3/pmFetch.3.html)(3) sampling interface.\n        \n        Numeric metric types are represented as JSON integer or floating-point values. Strings are passed verbatim, except that non-ASCII values are replaced with a Unicode 0xFFFD \n        replacement character code.\n        \n        In backward compatibility mode the timestamp is presented as a JSON map with second (sec) and microsecond (us) fields, instead of using the more compact floating point \n        representation shown above.\n        \n        **Reference:** [pmFetch](https://man7.org/linux/man-pages/man3/pmFetch.3.html)(3)\n      operationID: get/pmapi/fetch\n      parameters:\n      - name: delta\n        in: query\n        description: Sampling interval in [pmParseInterval](https://man7.org/linux/man-pages/man3/pmParseInterval.3.html)(3) form\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: An individual metric name\n        schema:\n          type: string\n      - name: names\n        in: query\n        description: Comma-separated list of metric names\n        schema:\n          type: string\n      - name: pmid\n        in: query\n        description: Numeric or [pmIDStr](https://man7.org/linux/man-pages/man3/pmIDStr.3.html)(3) metric identifier\n        schema:\n          type: pmID\n      - name: pmids\n        in: query\n        description: Comma-separated numeric or [pmIDStr](https://man7.org/linux/man-pages/man3/pmIDStr.3.html)(3) pmIDs\n        schema:\n          type: string\n      - name: prefix\n        in: query\n        description: Metric namespace component as in [PMNS](https://man7.org/linux/man-pages/man5/PMNS.5.html)(5)\n        schema:\n          type: string\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  timestamp:\n                    type: number\n                  values:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        pmid:\n                          type: string\n                        name:\n                          type: string\n                        instances:\n                          type: array\n                          items:\n                            type: object\n                            properties:\n                              instance:\n                                type: number\n                              value:\n                                type: number\n                example:\n                  context: 348734,\n                  timestamp: 1547483646.2147431\n                  values: \n                    - pmid: 60.2.0\n                      name: kernel.all.load\n                      instances:\n                        - instance: 1 \n                          value: 0.1 \n                        - instance: 5 \n                          value: 0.17 \n                        - instance: 15 \n                          value: 0.22 \n                    - pmid: 60.0.24\n                      name: disk.all.read\n                      instances:\n                        - instance: null\n                          value: 639231 \n  \n  /pmapi/children:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Provides iterative namespace traversal for a context\n      description: | \n        The *children* endpoint provides iterative namespace traversal for a context. If no parameters are supplied, the response will describe the direct descendants of the \n        Performance Metrics Name Space (PMNS) root.\n        \n        The *prefix* parameter can be used to specify a subtree of the PMNS for traversal.\n        \n        The server response is a JSON document that provides the set of leaf and non-leaf nodes below the given namespace node or root.\n        ```\n        $ curl -s http://localhost:44322/pmapi/children?prefix=mem | pmjson\n        ```\n        **Reference:** [pmGetChildren](https://man7.org/linux/man-pages/man3/pmGetChildren.3.html)(3), [pmGetChildrenStatus](https://man7.org/linux/man-pages/man3/pmGetChildrenStatus.3.html)(3)\n      operationID: get/pmapi/children\n      parameters:\n      - name: prefix\n        in: query\n        description: Metric namespace component as in [PMNS](https://man7.org/linux/man-pages/man5/PMNS.5.html)(5)\n        schema:\n          type: string\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  name:\n                    type: string\n                  leaf:\n                    type: array\n                    items:\n                      type: string\n                  nonleaf:\n                    type: array\n                    items:\n                      type: string\n                example:\n                  context: 348734\n                  name: mem\n                  leaf: \n                    - physmem\n                    - freemem\n                  nonleaf:\n                    - util\n                    - numa\n                    - vmstat\n                    - buddyinfo\n                    - slabinfo\n                    - zoneinfo\n                    - ksm\n\n  /pmapi/indom:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Lists the current instances of an instance domain\n      description: | \n        This request lists the current instances of an instance domain. The instance domain is either specified directly (in numeric or string form) or \n        indirectly, by association with the specified metric.\n        \n        The request can be further qualified with a comma-separated list of the instances to report on, either by name or number, using the *instance* and \n        *iname* parameters.\n        \n        In the case of instance name qualifiers, these will be matched by exact string comparison by default. Alternatively, the match parameter can be used to \n        specify that regular expression or glob pattern matching should be used instead.\n        \n        The response is a JSON document that provides the instance domain metadata as an array.\n        ```bash\n        $ curl -s http://localhost:44322/pmapi/indom?name=kernel.all.load | pmjson\n        ```\n\n        **Reference:** [pmGetInDom](https://man7.org/linux/man-pages/man3/pmGetInDom.3.html)(3), [pmNameInDom](https://man7.org/linux/man-pages/man3/pmNameInDom.3.html)(3),\n        [pmLookupInDom](https://man7.org/linux/man-pages/man3/pmLookupInDom.3.html)(3)\n      operationID: get/pmapi/indom\n      parameters:\n      - name: iname\n        in: query\n        description: Comma-separated list of instance names\n        schema:\n          type: string\n      - name: indom\n        in: query\n        description: Numeric or [pmInDomStr](https://man7.org/linux/man-pages/man3/pmInDomStr.3.html)(3) instance domain\n        schema:\n          type: pmInDom\n      - name: instance\n        in: query\n        description: Comma-separated list of instance numbers\n        schema:\n          type: number\n      - name: match\n        in: query\n        description: Pattern matching style (exact, glob or regex)\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: An individual metric name\n        schema:\n          type: string\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  indom:\n                    type: string\n                  labels:\n                    type: object\n                    properties:\n                      domainname:\n                        type: string\n                      groupid:\n                        type: number\n                      hostname:\n                        type: string\n                      machineid:\n                        type: string\n                      platform:\n                        type: string\n                      userid:\n                        type: number\n                  instances:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        instance:\n                          type: number\n                        name:\n                          type: string\n                        labels:\n                          type: object\n                example:\n                  context: 348734\n                  indom: 60.2\n                  labels:\n                    domainname: acme.com\n                    groupid: 1000\n                    hostname: www.acme.com\n                    machineid: 295b7623b6074cc8bdbda8bf96f6930a\n                    platform: dev\n                    userid: 1000\n                  instances:\n                    - instance: 1\n                      name: 1 minute\n                      labels: \n                    - instance: 5\n                      name: 5 minute\n                      labels: \n                    - instance: 15\n                      name: 15 minute\n                      labels: \n          \n  /pmapi/profile:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Filters the set of resulting instances returned\n      description: | \n        Some PMAPI operations can be performed with an active instance domain profile which restricts (filters) the set of resulting instances returned, as \n        described on [pmAddProfile](https://man7.org/linux/man-pages/man3/pmAddProfile.3.html)(3).\n        \n        ```bash\n        $ curl -s http://localhost:44322/pmapi/profile?expr=add,indom=60.2,iname=1%20minute\n        ```\n        **Reference:** [pmAddProfile](https://man7.org/linux/man-pages/man3/pmAddProfile.3.html)(3), [pmDelProfile](https://man7.org/linux/man-pages/man3/pmDelProfile.3.html)(3)\n      operationID: get/pmapi/profile\n      parameters:\n      - name: iname\n        in: query\n        description: Comma-separated list of instance names\n        schema:\n          type: string\n      - name: indom\n        in: query\n        description: Numeric or [pmInDomStr](https://man7.org/linux/man-pages/man3/pmInDomStr.3.html)(3) instance domain\n        schema:\n          type: pmInDom\n      - name: instance\n        in: query\n        description: Comma-separated list of instance numbers\n        schema:\n          type: number\n      - name: expr\n        in: query\n        description: One of \"add\" or \"del\" (mandatory)\n        schema:\n          type: string\n      - name: match\n        in: query\n        description: Pattern matching style (exact, glob or regex)\n        schema:\n          type: string\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  success:\n                    type: boolean\n                example:\n                  context: 348734\n                  success: true\n\n  /pmapi/store:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Modifies values of performance metrics\n      description: | \n        Some performance metrics allow their value to be modified, for example to re-initialize counters or to modify control variables.\n        \n        This operation takes a single metric *name* to modify, and optionally specific *instances*. The mandatory *value* will be interpreted according to the \n        type of the metric being modified.\n        \n        If successful, the response from these requests is a JSON document.\n        \n        ```bash\n        $ curl -s http://localhost:44322/pmapi/store?name=pmcd.control.timeout\u0026value=10\n        ```\n        **Reference:** [pmStore](https://man7.org/linux/man-pages/man3/pmStore.3.html)(3)\n      operationID: get/pmapi/store\n      parameters:\n      - name: iname\n        in: query\n        description: Comma-separated list of instance names\n        schema:\n          type: string\n      - name: instance\n        in: query\n        description: Comma-separated list of instance numbers\n        schema:\n          type: number\n      - name: name\n        in: query\n        description: An individual metric name\n        schema:\n          type: string\n      - name: value\n        in: query\n        description: New value for the given metric instance(s)\n        schema:\n          type: (any)\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                type: object\n                properties:\n                  context:\n                    type: number\n                  success:\n                    type: boolean\n                example:\n                  context: 348734\n                  success: true\n\n  /pmapi/derive:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Creates a new derived metric\n      description: | \n        Create a new derived metric, as defined by the [pmAddDerived](https://man7.org/linux/man-pages/man3/pmAddDerived.3.html)(3) metric interface. Derived \n        metrics are associated with the named context, or a new context is created and returned in the result.\n        ```bash\n        $ curl -s http://localhost:44322/pmapi/derive?name=blkio.avgsz\u0026expr=disk.all.blktotal/disk.all.total | pmjson\n        ```\n        This interface is one of the few that allows a POST to be used in place of a GET. In this case the HTTP POST request body may be used to provide one or \n        more derived metrics specifications (all at once, across multiple lines, as a convenience).\n        ```bash\n        $ curl -s http://localhost:44322/pmapi/fetch?name=blkio.avgsz\u0026samples=2 | pmjson\n        ```\n        **Reference:** [pmAddDerived](https://man7.org/linux/man-pages/man3/pmAddDerived.3.html)(3)\n      operationID: get/pmapi/derive\n      parameters:\n      - name: expr\n        in: query\n        description: Derived metric expression\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: New derived metric name\n        schema:\n          type: string\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n      responses:\n        200:\n          description: OK\n          content:\n            pmjson:\n              schema:\n                anyOf:\n                - $ref: '#/components/schemas/derive'\n                - $ref: '#/components/schemas/fetch'\n\n  /pmapi/metrics:\n    get:\n      tags:\n      - PMAPI HOST SERVICES\n      summary: Allows a web context identifier to be passed as a parameter\n      description: | \n        This request is a subset of the style described in the ``OPEN METRICS`` section, allowing a web context identifier to be passed as a parameter. It is \n        otherwise very similar in terms of parameters and response handling, please refer to the earlier section for details.\n\n        **Reference:** [pmLookupDesc](https://man7.org/linux/man-pages/man3/pmLookupDesc.3.html)(3),\n                       [pmLookupLabels](https://man7.org/linux/man-pages/man3/pmLookupLabels.3.html)(3),\n                       [pmFetch](https://man7.org/linux/man-pages/man3/pmFetch.3.html)(3)\n      operationID: get/pmapi/metrics\n      parameters:\n      - name: names\n        in: query\n        description: Comma-separated list of metric names\n        schema:\n          type: string\n      - name: times\n        in: query\n        description: Append sample times (milliseconds since epoch)\n        schema:\n          type: boolean\n      - name: context\n        in: query\n        description: Web context number (optional like hostspec)\n        schema:\n          type: number\n      - name: hostspec\n        in: query\n        description: Host specification as described in [PCPIntro](https://pcp.io/man/man1/pcpintro.1.html)(1)\n        schema:\n          type: string\n      - name: polltimeout\n        in: query\n        description: Seconds of inactivity before closing context\n        schema:\n          type: number\n      - name: client\n        in: query\n        description: Request identifier sent back with response\n        schema:\n          type: string\n    \ncomponents:\n  schemas:\n    seriesIDs:\n      title: Without Time Window\n      type: array\n      items:\n        type: string\n      example:\n        - 9d8c7fb51ce160eb82e3669aac74ba675dfa8900\n        - ddff1bfe286a3b18cebcbadc1678a68a964fbe9d\n        - 605fc77742cd0317597291329561ac4e50c0dd12\n\n    seriesValues:\n      title: With Time Window\n      type: array\n      items:\n        type: object\n        properties:\n          series:\n            type: string\n          instance:\n            type: string\n          timestamp:\n            type: integer\n          value:\n            type: string\n      example:\n        - series: 9d8c7fb51ce160eb82e3669aac74ba675dfa8900\n          instance: c3795d8b757506a2901c6b08b489ba56cae7f0d4\n          timestamp: 1.5474836462147431E9\n          value: 12499\n        - series: ddff1bfe286a3b18cebcbadc1678a68a964fbe9d\n          instance: 6b08b489ba56cae7f0d4c3795d8b757506a2901c\n          timestamp: 1.5474857017431219E9\n          value: 1118623\n        - series: 605fc77742cd0317597291329561ac4e50c0dd12\n          instance: c3795d8b757506a2901c6b08b489ba56cae7f0d4\n          timestamp: 1.5474836462147431E9\n          value: 71661\n\n    seriesParam:\n      title: With series parameter\n      type: object\n      properties:\n        series:\n          type: string\n        labels:\n          type: object\n          properties:\n            agent:\n              type: string\n            domainname:\n              type: string\n            groupid:\n              type: number\n            hostname:\n              type: string\n            latitude:\n              type: number\n            longitude:\n              type: number\n            machineid:\n              type: string\n            platform:\n              type: string\n            userid:\n              type: number\n      example:\n        - series: 605fc77742cd0317597291329561ac4e50c0dd12\n          labels:\n            agent: linux\n            domainname: acme.com\n            groupid: 1000\n            hostname: www.acme.com\n            latitude: -25.28496\n            longitude: 152.87886\n            machineid: 295b16e3b6074cc8bdbda8bf96f6930a\n            platform: dev\n            userid: 1000\n                \n    noParam:\n      title: Without any parameter\n      type: array\n      items:\n        type: string\n      example:\n        - agent\n        - appversion\n        - domainname\n        - groupid\n        - hostname\n        - jobid\n        - latitude\n        - longitude\n        - machineid\n        - platform\n        - userid\n                \n    namesParam:\n      title: With name/names parameter\n      type: object\n      properties:\n        hostname:\n          type: array\n          items:\n            type: string\n        domainname:\n          type: array\n          items:\n            type: string\n      example:\n        hostname:\n          - app\n          - nas\n        domainname:\n          - acme.com\n        \n    series_metricName:\n      title: With series parameter\n      type: array\n      items:\n        type: object\n        properties:\n          series:\n            type: string\n          name:\n            type: string\n      example:\n        - series: 605fc77742cd0317597291329561ac4e50c0dd12\n          name: disk.dev.read_bytes\n                \n    all_metricNames:\n      title: Without series parameter\n      type: array\n      items:\n        type: string\n      example:\n        - disk.dev.read\n        - disk.dev.read_bytes\n        - disk.dev.read_merge\n        - kernel.all.load\n        - kernel.all.pswitch\n\n    series_instanceName:\n      title: With series parameter\n      type: array\n      items:\n        type: object\n        properties:\n          series:\n            type: string\n          source:\n            type: string\n          instance:\n            type: string\n          id:\n            type: number\n          name:\n            type: string\n      example:\n        - series: 605fc77742cd0317597291329561ac4e50c0dd12\n          source: 97261ac7742cd4e50c0d03175913295d12605fc7\n          instance: c3795d8b757506a2901c6b08b489ba56cae7f0d4\n          id: 1\n          name: sda\n        - series: 605fc77742cd0317597291329561ac4e50c0dd12\n          source: 97261ac7742cd4e50c0d03175913295d12605fc7\n          instance: 57506a2901c6b08b489ba56cae7f0d4c3795d8b7\n          id: 2\n          name: sdb\n\n    all_instanceNames:\n      title: Without series parameter\n      type: array\n      items:\n        type: string\n      example:\n        - 1 minute\n        - 5 minute\n        - 15 minute\n        - cpu0\n        - cpu1\n        - cpu2\n        - cpu3\n        - node0\n        - node1\n        - sda\n        - sdb\n      \n    derive:\n      title: Derive\n      type: object\n      properties:\n        context:\n          type: number\n        success:\n          type: boolean\n      example:\n          context: 348734\n          success: true\n        \n    fetch:\n      title: Fetch\n      type: object\n      properties:\n        context:\n          type: number\n        timestamp:\n          type: number\n        values:\n          type: array\n          items:\n            type: object\n            properties:\n              pmid:\n                type: string\n              name:\n                type: string\n              instances:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    instance:\n                      type: string\n                    value:\n                      type: number\n      example:\n        context: 348734\n        timestamp: 1547483648.2147428\n        values: \n          - pmid: 511.0.2\n            name: blkio.avgsz\n            instances:\n              - instance: \n                value: 9231\n",
			"canonicalURL": "/github.com/performancecopilot/pcp@2a343934f54a4eca06eb4d71145d8e38631b4857/-/blob/docs/specs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/performancecopilot/pcp/blob/2a343934f54a4eca06eb4d71145d8e38631b4857/docs/specs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/metrics\": get: at 1:5394: responses: no responses"
}