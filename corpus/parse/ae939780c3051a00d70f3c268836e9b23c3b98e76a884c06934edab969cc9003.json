{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sasha00123/coupons"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi.yaml",
			"byteSize": 22785,
			"content": "openapi: 3.0.0\ninfo:\n  title: Coupons API\n  version: 1.0.0\nservers:\n  - url: http://localhost:8000/api\npaths:\n  /accounts/create:\n    post:\n      tags:\n        - Account Info\n      summary: Creates new user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User' \n          \n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        '400':\n          description: Something went wrong.\n  /accounts/info:\n    get:\n      tags:\n        - Account Info\n      summary: Current user info\n      security:\n        - APIKeyHeader: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: OK\n        '401':\n          description: Not authorized\n    patch:\n      tags:\n        - Account Info\n      summary: Update current user info. Warning! If you change username, token will be dropped.\n      security:\n        - APIKeyHeader: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n          description: OK\n        '401':\n          description: Not authorized      \n  /accounts/consumer:\n    get:\n      tags:\n        - Account Info\n      summary: Current consumer profile\n      security:\n        - APIKeyHeader: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Consumer'\n          description: OK\n        '401':\n          description: Not authorized\n  /accounts/vendor:\n    get:\n      tags:\n        - Account Info\n      summary: Current vendor profile\n      security: \n        - APIKeyHeader: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Vendor'\n          description: OK\n        401:\n          description: Not authorized\n  /accounts/send-pin:\n    post:\n      tags:\n        - Account Info\n      summary: Sends new password to consumer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n      responses:\n        '200':\n          description: PIN was sent!\n          content:\n            application/json:\n              schema:\n                type: string\n                example: PIN was sent!\n        '400':\n          description: Something went wrong. (Perhaps user is Vendor)\n          content:\n            application/json:\n              schema:\n                type: string\n                example: Cannot send PIN to a vendor!\n  \n  /accounts/send-verification-email:\n    get:\n      tags:\n        - Account Info\n      summary: Sends verification link to vendor\n      security:\n        - APIKeyHeader: []\n      responses:\n        '200':\n          description: Link sent\n          content:\n            application/json:\n              schema:\n                type: string\n                example: OK\n        '403':\n          description: Something went wrong. (Perhaps user is Consumer)\n          content:\n            application/json:\n              schema:\n                type: string\n                example: Cannot send link to a consumer!\n  /admin/grant:\n    post:\n      tags:\n        - Admin\n      summary: Allows to grant admin privileges to user\n      security:\n        - APIKeyHeader: [admin]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                state:\n                  type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n                example: OK\n  /admin/verify:\n    post:\n      tags:\n        - Admin\n      summary: Allows to verify an organization\n      security:\n        - APIKeyHeader: [admin]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                state:\n                  type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n                example: OK\n  \n  /admin/restrict:\n    post:\n      tags:\n        - Admin\n      summary: Allows to restrict vendor from publishing\n      security:\n        - APIKeyHeader: [admin]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                state:\n                  type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n                example: OK\n  /accounts/token/get:\n    post:\n      tags:\n        - Tokens\n      summary: Generates api token with provided creadentials\n      requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - username\n                  - password\n                properties:\n                  username:\n                    type: string\n                  password:\n                    type: string\n                    format: password\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n          description: Ok\n  /accounts/token/refresh:\n    post:\n      tags:\n        - Tokens\n      summary: Refreshes token by old non-expired token\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n  /accounts/token/verify:\n    post:\n      tags:\n        - Tokens\n      summary: Returnsf token is non-expired\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n  /organizations:\n    get:\n      tags:\n        - Organizations\n      summary: List all organizations\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organization'\n    post:\n      tags:\n        - Organizations\n      summary: Create an organization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '400':\n          description: Wrong request\n        '401':\n          description: Not authorized\n  /organizations/{id}:\n    parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n    get:\n      tags:\n        - Organizations\n      summary: Retrieve organization info\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '401':\n          description: Not authorized\n    patch:\n      tags:\n        - Organizations\n      summary: Update organization info\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organization'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n        '401':\n          description: Not authorized\n  /campaigns:\n    get:\n      tags:\n        - Campaigns\n      summary: List all campaigns\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Campaign'\n    post:\n      tags:\n        - Campaigns\n      summary: Create a campaign\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Campaign'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n    \n  /campaigns/{id}:\n    parameters:\n      - name: id\n        in: path\n        schema:\n          type: integer\n        required: true\n    get:\n      tags:\n        - Campaigns\n      summary: Retrieve campaign details\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n    patch:\n      tags:\n        - Campaigns\n      summary: Update campaign details\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Campaign'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Campaign'\n    delete:\n      tags:\n        - Campaigns\n      summary: Delete campaign\n      responses:\n        '200':\n          description: OK\n  /outlets:\n    get:\n      tags:\n        - Outlets\n      summary: List all outlets\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Outlet'\n    post:\n      tags:\n        - Outlets\n      summary: Create a outlet\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Outlet'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outlet'\n  \n  /outlets/{id}:\n    parameters:\n      - name: id\n        in: path\n        schema:\n          type: integer\n        required: true\n    get:\n      tags:\n        - Outlets\n      summary: Retrieve outlet details\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outlet'\n    patch:\n      tags:\n        - Outlets\n      summary: Update outlet details\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Outlet'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Outlet'\n    delete:\n      tags:\n        - Outlets\n      summary: Delete outlet\n      responses:\n        '200':\n          description: OK  \n  /coupons:\n    get:\n      tags:\n        - Coupons\n      summary: List all coupons\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Coupon2'\n    post:\n      tags:\n        - Coupons\n      summary: Create a coupon\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coupon'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Coupon'\n  \n  /coupons/{id}:\n    parameters:\n      - name: id\n        in: path\n        schema:\n          type: integer\n        required: true\n    get:\n      tags:\n        - Coupons\n      summary: Retrieve coupon details\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Coupon2'\n    patch:\n      tags:\n        - Coupons\n      summary: Update coupon details\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coupon'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Coupon'\n    delete:\n      tags:\n        - Coupons\n      summary: Delete coupon\n      responses:\n        '200':\n          description: OK\n  /types:\n    get:\n      tags:\n        - Meta\n      summary: List all types\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Type'\n  /types/{id}:\n    parameters:\n      - name: id\n        in: path\n        schema:\n          type: integer\n        required: true\n    get:\n      tags:\n        - Meta\n      summary: Retrieve type details\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Type'\n  /categories:\n    get:\n      tags:\n        - Meta\n      summary: List all categories\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n  /categories/{id}:\n    parameters:\n      - name: id\n        in: path\n        schema:\n          type: integer\n        required: true\n    get:\n      tags:\n        - Meta\n      summary: Retrieve category details\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Category'\n  /interests:\n    get:\n      tags:\n        - Meta\n      summary: List all interests\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Interest'\n  /interests/{id}:\n    parameters:\n      - name: id\n        in: path\n        schema:\n          type: integer\n        required: true\n    get:\n      tags:\n        - Meta\n      summary: Retrieve interest details\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Interest'\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n  schemas:\n    User:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        username:\n          type: string\n        password:\n          description: Required for vendor\n          type: string\n          writeOnly: true\n          format: password\n        email:\n          type: string\n          format: email\n        atype:\n          type: string\n          enum: [C, V]\n      required:\n        - username\n        - email\n        - atype\n    Consumer:\n      properties:\n        birth_date:\n          type: string\n          format: date\n        full_name:\n          type: string\n        coupons_rated:\n          type: array\n          items:\n            type: integer\n        coupons_short_listed:\n          type: array\n          items:\n            type: integer\n        coupons_used:\n          type: array\n          items:\n            type: integer\n    Vendor:\n      properties:\n        verified:\n          type: boolean\n          readOnly: true\n        organizations:\n          type: array\n          items:\n            type: integer\n          readOnly: true\n        coupons:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/Coupon'\n          readOnly: true\n        campaigns:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/Campaign'\n          readOnly: true\n        outlets:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/Outlet'\n          readOnly: true\n          \n    Organization:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        vendor:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n        address:\n          type: string\n          format: address\n        verified:\n          type: boolean\n          readOnly: true\n        campaigns:\n          type: array\n          items:\n            type: integer\n          readOnly: true\n        outlets:\n          type: array\n          items:\n            type: integer\n          readOnly: true\n      required:\n        - name\n        - address\n    Campaign:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        organization:\n          type: integer\n        name:\n          type: string\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n        coupons:\n          type: array\n          items:\n            type: integer\n          readOnly: true\n      required:\n        - organization\n        - name\n        - start\n        - end\n    Outlet:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        organization:\n          type: integer\n        name:\n          type: string\n        address:\n          type: string\n          format: address\n        latitude:\n          type: number\n          format: float\n        longitude:\n          type: number\n          format: float\n        coupons:\n          type: array\n          items:\n            type: integer\n          readOnly: true\n    Coupon:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        ctype:\n          type: object\n          $ref: '#/components/schemas/Type'\n        category:\n          type: integer\n        campaign:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        deal:\n          type: string\n        image:\n          type: string\n          format: binary\n        TC:\n          type: string\n        amount:\n          type: integer\n        code:\n          type: string\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n        advertisement:\n          type: boolean\n          default: true\n        active:\n          type: boolean\n          default: true\n        published:\n          type: boolean\n          default: false\n        interests:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/Interest'\n        outlets:\n          type: array\n          items:\n            type: object\n            $ref: '#/components/schemas/Outlet'\n      required:\n        - ctype\n        - category\n        - campaign\n        - name\n        - description\n        - deal\n        - image\n        - TC\n        - amount\n        - code\n        - start\n        - end\n        - interests\n        - outlets\n    Type:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    Category:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    Interest:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n        description:\n          type: string\n      required:\n        - name\n        - description\n    Coupon2:\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        ctype:\n          $ref: '#/components/schemas/Type'\n        category:\n          $ref: '#/components/schemas/Category'\n        campaign:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        deal:\n          type: string\n        image:\n          type: string\n          format: binary\n        TC:\n          type: string\n        amount:\n          type: integer\n        code:\n          type: string\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n        advertisement:\n          type: boolean\n          default: true\n        active:\n          type: boolean\n          default: true\n        published:\n          type: boolean\n          default: false\n        interests:\n          type: array\n          items:\n            $ref: '#/components/schemas/Interest'\n        outlets:\n          type: array\n          items:\n            type: integer\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /admin/grant: post: security: unknown security schema \"APIKeyHeader\""
}